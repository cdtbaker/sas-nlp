<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.ojalgo.matrix.store">
        <import package="org.ojalgo.constant.BigMath"/>
        <import package="org.ojalgo.function.BigFunction"/>
        <import package="java.math.BigDecimal"/>
        <import package="java.util.List"/>
        <import package="org.ojalgo.access.Access1D"/>
        <import package="org.ojalgo.access.Access2D"/>
        <import package="org.ojalgo.access.AccessUtils"/>
        <import package="org.ojalgo.array.Array1D"/>
        <import package="org.ojalgo.array.Array2D"/>
        <import package="org.ojalgo.array.BigArray"/>
        <import package="org.ojalgo.array.SimpleArray"/>
        <import package="org.ojalgo.concurrent.DivideAndConquer"/>
        <import package="org.ojalgo.function.BigFunction"/>
        <import package="org.ojalgo.function.BinaryFunction"/>
        <import package="org.ojalgo.function.FunctionSet"/>
        <import package="org.ojalgo.function.UnaryFunction"/>
        <import package="org.ojalgo.function.VoidFunction"/>
        <import package="org.ojalgo.function.aggregator.Aggregator"/>
        <import package="org.ojalgo.function.aggregator.AggregatorCollection"/>
        <import package="org.ojalgo.function.aggregator.AggregatorFunction"/>
        <import package="org.ojalgo.function.aggregator.BigAggregator"/>
        <import package="org.ojalgo.matrix.MatrixUtils"/>
        <import package="org.ojalgo.matrix.decomposition.DecompositionStore"/>
        <import package="org.ojalgo.matrix.store.operation"/>
        <import package="org.ojalgo.matrix.transformation.Householder"/>
        <import package="org.ojalgo.matrix.transformation.Rotation"/>
        <import package="org.ojalgo.random.RandomNumber"/>
        <import package="org.ojalgo.scalar.BigScalar"/>
        <import package="org.ojalgo.scalar.ComplexNumber"/>
        <import package="org.ojalgo.scalar.Scalar"/>
        <import package="org.ojalgo.type.TypeUtils"/>
        <import package="org.ojalgo.type.context.NumberContext"/>
        <class name="BigDenseStore" line="34">
            <extends class="BigArray"/>
            <implements interface="PhysicalStore">
                <type_params>
                    <type_param name="BigDecimal"/>
                </type_params>
            </implements>
            <implements interface="DecompositionStore">
                <type_params>
                    <type_param name="BigDecimal"/>
                </type_params>
            </implements>
            <javadoc line="34">
                A {@linkplain BigDecimal} implementation of {@linkplain PhysicalStore}.                
                <author>
                    apete                    
                </author>
            </javadoc>
            <interface name="BigMultiplyBoth">
                <method name="invoke" type="void" line="40"/>
            </interface>
            <interface name="BigMultiplyLeft">
                <method name="invoke" type="void" line="43"/>
            </interface>
            <interface name="BigMultiplyRight">
                <method name="invoke" type="void" line="46"/>
            </interface>
            <declaration name="FACTORY" type="DecompositionStore.Factory&lt;BigDecimal,BigDenseStore&gt;" line="48"/>
            <anonymous_class line="48">
                <method name="aggregator" type="AggregatorCollection<BigDecimal>" line="49"/>
                <method name="columns" type="BigDenseStore" line="52">
                    <params>
                        <param name="source" type="Access1D<?>"/>
                    </params>
                    <declaration name="tmpRowDim" type="int" line="53"/>
                    <declaration name="tmpColDim" type="int" line="54"/>
                    <declaration name="tmpData" type="BigDecimal[]" line="55"/>
                    <declaration name="tmpColumn" type="Access1D&lt;?&gt;" line="56"/>
                    <scope line="57">
                        <scope line="59"/>
                    </scope>
                </method>
                <method name="columns" type="BigDenseStore" line="65">
                    <params>
                        <param name="source" type="double[]"/>
                    </params>
                    <declaration name="tmpRowDim" type="int" line="66"/>
                    <declaration name="tmpColDim" type="int" line="67"/>
                    <declaration name="tmpData" type="BigDecimal[]" line="68"/>
                    <declaration name="tmpColumn" type="double[]" line="69"/>
                    <scope line="70">
                        <scope line="72"/>
                    </scope>
                </method>
                <method name="columns" type="BigDenseStore" line="78">
                    <params>
                        <param name="source" type="List<? extends Number>"/>
                    </params>
                    <declaration name="tmpRowDim" type="int" line="79"/>
                    <declaration name="tmpColDim" type="int" line="80"/>
                    <declaration name="tmpData" type="BigDecimal[]" line="81"/>
                    <declaration name="tmpColumn" type="List&lt;? extends Number&gt;" line="82"/>
                    <scope line="83">
                        <scope line="85"/>
                    </scope>
                </method>
                <method name="columns" type="BigDenseStore" line="91">
                    <params>
                        <param name="source" type="Number[]"/>
                    </params>
                    <declaration name="tmpRowDim" type="int" line="92"/>
                    <declaration name="tmpColDim" type="int" line="93"/>
                    <declaration name="tmpData" type="BigDecimal[]" line="94"/>
                    <declaration name="tmpColumn" type="Number[]" line="95"/>
                    <scope line="96">
                        <scope line="98"/>
                    </scope>
                </method>
                <method name="conjugate" type="BigDenseStore" line="104">
                    <params>
                        <param name="source" type="Access2D<?>"/>
                    </params>
                </method>
                <method name="copy" type="BigDenseStore" line="107">
                    <params>
                        <param name="source" type="Access2D<?>"/>
                    </params>
                    <declaration name="retVal" type="BigDenseStore" line="108"/>
                </method>
                <method name="function" type="FunctionSet<BigDecimal>" line="112"/>
                <javadoc line="115">
                    @deprecated Use {@link #aggregator()} instead                    
                </javadoc>
                <method name="getAggregatorCollection" type="AggregatorCollection<BigDecimal>" line="118"/>
                <javadoc line="121">
                    @deprecated Use {@link #function()} instead                    
                </javadoc>
                <method name="getFunctionSet" type="FunctionSet<BigDecimal>" line="124"/>
                <javadoc line="127">
                    @deprecated v35 Use {@link #scalar()} instead.                    
                </javadoc>
                <method name="getNumber" type="BigDecimal" line="130">
                    <params>
                        <param name="value" type="double"/>
                    </params>
                </method>
                <javadoc line="133">
                    @deprecated v35 Use {@link #scalar()} instead.                    
                </javadoc>
                <method name="getNumber" type="BigDecimal" line="136">
                    <params>
                        <param name="value" type="Number"/>
                    </params>
                </method>
                <javadoc line="139">
                    @deprecated v35 Use {@link #scalar()} instead.                    
                </javadoc>
                <method name="getStaticOne" type="Scalar<BigDecimal>" line="142"/>
                <javadoc line="145">
                    @deprecated v35 Use {@link #scalar()} instead.                    
                </javadoc>
                <method name="getStaticZero" type="Scalar<BigDecimal>" line="148"/>
                <method name="makeArray" type="SimpleArray.Big" line="151">
                    <params>
                        <param name="length" type="int"/>
                    </params>
                </method>
                <method name="makeEye" type="BigDenseStore" line="154">
                    <params>
                        <param name="rows" type="long"/>
                        <param name="columns" type="long"/>
                    </params>
                    <declaration name="retVal" type="BigDenseStore" line="155"/>
                </method>
                <method name="makeHouseholder" type="Householder.Big" line="159">
                    <params>
                        <param name="length" type="int"/>
                    </params>
                </method>
                <method name="makeRandom" type="BigDenseStore" line="162">
                    <params>
                        <param name="rows" type="long"/>
                        <param name="columns" type="long"/>
                        <param name="distribution" type="RandomNumber"/>
                    </params>
                    <declaration name="tmpRowDim" type="int" line="163"/>
                    <declaration name="tmpColDim" type="int" line="164"/>
                    <declaration name="tmpLength" type="int" line="165"/>
                    <declaration name="tmpData" type="BigDecimal[]" line="166"/>
                    <scope line="167"/>
                </method>
                <method name="makeRotation" type="Rotation.Big" line="172">
                    <params>
                        <param name="low" type="int"/>
                        <param name="high" type="int"/>
                        <param name="cos" type="BigDecimal"/>
                        <param name="sin" type="BigDecimal"/>
                    </params>
                </method>
                <method name="makeRotation" type="Rotation.Big" line="175">
                    <params>
                        <param name="low" type="int"/>
                        <param name="high" type="int"/>
                        <param name="cos" type="double"/>
                        <param name="sin" type="double"/>
                    </params>
                </method>
                <method name="makeZero" type="BigDenseStore" line="178">
                    <params>
                        <param name="rows" type="long"/>
                        <param name="columns" type="long"/>
                    </params>
                </method>
                <method name="rows" type="BigDenseStore" line="181">
                    <params>
                        <param name="source" type="Access1D<?>"/>
                    </params>
                    <declaration name="tmpRowDim" type="int" line="182"/>
                    <declaration name="tmpColDim" type="int" line="183"/>
                    <declaration name="tmpData" type="BigDecimal[]" line="184"/>
                    <declaration name="tmpRow" type="Access1D&lt;?&gt;" line="185"/>
                    <scope line="186">
                        <scope line="188"/>
                    </scope>
                </method>
                <method name="rows" type="BigDenseStore" line="194">
                    <params>
                        <param name="source" type="double[]"/>
                    </params>
                    <declaration name="tmpRowDim" type="int" line="195"/>
                    <declaration name="tmpColDim" type="int" line="196"/>
                    <declaration name="tmpData" type="BigDecimal[]" line="197"/>
                    <declaration name="tmpRow" type="double[]" line="198"/>
                    <scope line="199">
                        <scope line="201"/>
                    </scope>
                </method>
                <method name="rows" type="BigDenseStore" line="207">
                    <params>
                        <param name="source" type="List<? extends Number>"/>
                    </params>
                    <declaration name="tmpRowDim" type="int" line="208"/>
                    <declaration name="tmpColDim" type="int" line="209"/>
                    <declaration name="tmpData" type="BigDecimal[]" line="210"/>
                    <declaration name="tmpRow" type="List&lt;? extends Number&gt;" line="211"/>
                    <scope line="212">
                        <scope line="214"/>
                    </scope>
                </method>
                <method name="rows" type="BigDenseStore" line="220">
                    <params>
                        <param name="source" type="Number[]"/>
                    </params>
                    <declaration name="tmpRowDim" type="int" line="221"/>
                    <declaration name="tmpColDim" type="int" line="222"/>
                    <declaration name="tmpData" type="BigDecimal[]" line="223"/>
                    <declaration name="tmpRow" type="Number[]" line="224"/>
                    <scope line="225">
                        <scope line="227"/>
                    </scope>
                </method>
                <method name="scalar" type="Scalar.Factory<BigDecimal>" line="233"/>
                <javadoc line="236">
                    @deprecated v35 Use {@link #scalar()} instead.                    
                </javadoc>
                <method name="toScalar" type="Scalar<BigDecimal>" line="239">
                    <params>
                        <param name="value" type="double"/>
                    </params>
                </method>
                <javadoc line="242">
                    @deprecated v35 Use {@link #scalar()} instead.                    
                </javadoc>
                <method name="toScalar" type="Scalar<BigDecimal>" line="245">
                    <params>
                        <param name="value" type="Number"/>
                    </params>
                </method>
                <method name="transpose" type="BigDenseStore" line="248">
                    <params>
                        <param name="source" type="Access2D<?>"/>
                    </params>
                    <declaration name="retVal" type="BigDenseStore" line="249"/>
                </method>
            </anonymous_class>
            <method name="cast" type="BigDenseStore" line="255">
                <params>
                    <param name="mtrx" type="Access1D<BigDecimal>"/>
                </params>
                <scope line="256"/>
                <scope line="259"/>
                <scope line="262"/>
            </method>
            <method name="cast" type="Householder.Big" line="266">
                <params>
                    <param name="aTransf" type="Householder<BigDecimal>"/>
                </params>
                <scope line="267"/>
                <scope line="270"/>
                <scope line="273"/>
            </method>
            <method name="cast" type="Rotation.Big" line="277">
                <params>
                    <param name="aTransf" type="Rotation<BigDecimal>"/>
                </params>
                <scope line="278"/>
                <scope line="281"/>
            </method>
            <declaration name="multiplyBoth" type="BigMultiplyBoth" line="285"/>
            <declaration name="multiplyLeft" type="BigMultiplyLeft" line="286"/>
            <declaration name="multiplyRight" type="BigMultiplyRight" line="287"/>
            <declaration name="myColDim" type="int" line="288"/>
            <declaration name="myRowDim" type="int" line="289"/>
            <declaration name="myUtility" type="Array2D&lt;BigDecimal&gt;" line="290"/>
            <method name="BigDenseStore" type="constructor" line="291">
                <params>
                    <param name="anArray" type="BigDecimal[]"/>
                </params>
            </method>
            <method name="BigDenseStore" type="constructor" line="300">
                <params>
                    <param name="aLength" type="int"/>
                </params>
            </method>
            <method name="BigDenseStore" type="constructor" line="309">
                <params>
                    <param name="aRowDim" type="int"/>
                    <param name="aColDim" type="int"/>
                </params>
            </method>
            <method name="BigDenseStore" type="constructor" line="318">
                <params>
                    <param name="aRowDim" type="int"/>
                    <param name="aColDim" type="int"/>
                    <param name="anArray" type="BigDecimal[]"/>
                </params>
            </method>
            <method name="aggregateAll" type="BigDecimal" line="327">
                <params>
                    <param name="aggregator" type="Aggregator"/>
                </params>
                <declaration name="tmpRowDim" type="int" line="328"/>
                <declaration name="tmpColDim" type="int" line="329"/>
                <declaration name="tmpMainAggr" type="AggregatorFunction&lt;BigDecimal&gt;" line="330"/>
                <scope line="331">
                    <anonymous_class line="332">
                        <method name="conquer" type="void" line="333">
                            <params>
                                <param name="aFirst" type="int"/>
                                <param name="aLimit" type="int"/>
                            </params>
                            <declaration name="tmpPartAggr" type="AggregatorFunction&lt;BigDecimal&gt;" line="334"/>
                            <scope line="336"/>
                        </method>
                    </anonymous_class>
                    <declaration name="tmpConquerer" type="DivideAndConquer" line="332"/>
                </scope>
                <scope line="344"/>
            </method>
            <method name="applyCholesky" type="void" line="349">
                <params>
                    <param name="iterationPoint" type="int"/>
                    <param name="multipliers" type="SimpleArray<BigDecimal>"/>
                </params>
                <declaration name="tmpData" type="BigDecimal[]" line="350"/>
                <declaration name="tmpColumn" type="BigDecimal[]" line="351"/>
                <scope line="352">
                    <anonymous_class line="353">
                        <method name="conquer" type="void" line="354">
                            <params>
                                <param name="aFirst" type="int"/>
                                <param name="aLimit" type="int"/>
                            </params>
                        </method>
                    </anonymous_class>
                    <declaration name="tmpConquerer" type="DivideAndConquer" line="353"/>
                </scope>
                <scope line="361"/>
            </method>
            <method name="applyLU" type="void" line="365">
                <params>
                    <param name="iterationPoint" type="int"/>
                    <param name="multipliers" type="SimpleArray<BigDecimal>"/>
                </params>
                <declaration name="tmpData" type="BigDecimal[]" line="366"/>
                <declaration name="tmpColumn" type="BigDecimal[]" line="367"/>
                <scope line="368">
                    <anonymous_class line="369">
                        <method name="conquer" type="void" line="370">
                            <params>
                                <param name="aFirst" type="int"/>
                                <param name="aLimit" type="int"/>
                            </params>
                        </method>
                    </anonymous_class>
                    <declaration name="tmpConquerer" type="DivideAndConquer" line="369"/>
                </scope>
                <scope line="377"/>
            </method>
            <method name="asArray2D" type="Array2D<BigDecimal>" line="381"/>
            <method name="asList" type="Array1D<BigDecimal>" line="384"/>
            <method name="builder" type="MatrixStore.Builder<BigDecimal>" line="387"/>
            <method name="caxpy" type="void" line="390">
                <params>
                    <param name="aSclrA" type="BigDecimal"/>
                    <param name="aColX" type="int"/>
                    <param name="aColY" type="int"/>
                    <param name="aFirstRow" type="int"/>
                </params>
            </method>
            <method name="computeInPlaceSchur" type="Array1D<ComplexNumber>" line="393">
                <params>
                    <param name="aTransformationCollector" type="PhysicalStore<BigDecimal>"/>
                    <param name="eigenvalue" type="boolean"/>
                </params>
            </method>
            <method name="conjugate" type="BigDenseStore" line="396"/>
            <method name="copy" type="BigDenseStore" line="399"/>
            <method name="countColumns" type="long" line="402"/>
            <method name="countRows" type="long" line="405"/>
            <method name="divideAndCopyColumn" type="void" line="408">
                <params>
                    <param name="aRow" type="int"/>
                    <param name="aCol" type="int"/>
                    <param name="aDestination" type="SimpleArray<BigDecimal>"/>
                </params>
                <declaration name="tmpData" type="BigDecimal[]" line="409"/>
                <declaration name="tmpRowDim" type="int" line="410"/>
                <declaration name="tmpDestination" type="BigDecimal[]" line="411"/>
                <declaration name="tmpIndex" type="int" line="412"/>
                <declaration name="tmpDenominator" type="BigDecimal" line="413"/>
                <scope line="414"/>
            </method>
            <method name="doubleValue" type="double" line="419">
                <params>
                    <param name="aRow" type="long"/>
                    <param name="aCol" type="long"/>
                </params>
            </method>
            <method name="equals" type="boolean" line="422">
                <params>
                    <param name="other" type="MatrixStore<BigDecimal>"/>
                    <param name="context" type="NumberContext"/>
                </params>
            </method>
            <method name="equals" type="boolean" line="425">
                <params>
                    <param name="anObj" type="Object"/>
                </params>
                <scope line="426"/>
                <scope line="429"/>
            </method>
            <method name="exchangeColumns" type="void" line="433">
                <params>
                    <param name="aColA" type="int"/>
                    <param name="aColB" type="int"/>
                </params>
            </method>
            <method name="exchangeRows" type="void" line="436">
                <params>
                    <param name="aRowA" type="int"/>
                    <param name="aRowB" type="int"/>
                </params>
            </method>
            <method name="factory" type="PhysicalStore.Factory<BigDecimal,BigDenseStore>" line="439"/>
            <method name="fillByMultiplying" type="void" line="442">
                <params>
                    <param name="left" type="Access1D<BigDecimal>"/>
                    <param name="right" type="Access1D<BigDecimal>"/>
                </params>
                <declaration name="tmpComplexity" type="int" line="443"/>
                <declaration name="tmpProductData" type="BigDecimal[]" line="444"/>
                <scope line="445"/>
                <scope line="448"/>
                <scope line="451"/>
            </method>
            <method name="fillColumn" type="void" line="455">
                <params>
                    <param name="aRow" type="long"/>
                    <param name="aCol" type="long"/>
                    <param name="aNmbr" type="BigDecimal"/>
                </params>
            </method>
            <method name="fillConjugated" type="void" line="458">
                <params>
                    <param name="source" type="Access2D<? extends Number>"/>
                </params>
            </method>
            <method name="fillDiagonal" type="void" line="461">
                <params>
                    <param name="aRow" type="long"/>
                    <param name="aCol" type="long"/>
                    <param name="aNmbr" type="BigDecimal"/>
                </params>
            </method>
            <method name="fillMatching" type="void" line="464">
                <params>
                    <param name="source" type="Access1D<? extends Number>"/>
                </params>
                <declaration name="tmpRowDim" type="int" line="465"/>
                <declaration name="tmpColDim" type="int" line="466"/>
                <scope line="467">
                    <anonymous_class line="468">
                        <method name="conquer" type="void" line="469">
                            <params>
                                <param name="aFirst" type="int"/>
                                <param name="aLimit" type="int"/>
                            </params>
                        </method>
                    </anonymous_class>
                    <declaration name="tmpConquerer" type="DivideAndConquer" line="468"/>
                </scope>
                <scope line="476"/>
            </method>
            <method name="fillMatching" type="void" line="480">
                <params>
                    <param name="leftArg" type="Access1D<BigDecimal>"/>
                    <param name="func" type="BinaryFunction<BigDecimal>"/>
                    <param name="rightArg" type="Access1D<BigDecimal>"/>
                </params>
                <declaration name="tmpRowDim" type="int" line="481"/>
                <declaration name="tmpColDim" type="int" line="482"/>
                <scope line="483">
                    <anonymous_class line="484">
                        <method name="conquer" type="void" line="485">
                            <params>
                                <param name="aFirst" type="int"/>
                                <param name="aLimit" type="int"/>
                            </params>
                        </method>
                    </anonymous_class>
                    <declaration name="tmpConquerer" type="DivideAndConquer" line="484"/>
                </scope>
                <scope line="492"/>
            </method>
            <method name="fillMatching" type="void" line="496">
                <params>
                    <param name="aLeftArg" type="Access1D<BigDecimal>"/>
                    <param name="aFunc" type="BinaryFunction<BigDecimal>"/>
                    <param name="aRightArg" type="BigDecimal"/>
                </params>
                <declaration name="tmpRowDim" type="int" line="497"/>
                <declaration name="tmpColDim" type="int" line="498"/>
                <scope line="499">
                    <anonymous_class line="500">
                        <method name="conquer" type="void" line="501">
                            <params>
                                <param name="aFirst" type="int"/>
                                <param name="aLimit" type="int"/>
                            </params>
                        </method>
                    </anonymous_class>
                    <declaration name="tmpConquerer" type="DivideAndConquer" line="500"/>
                </scope>
                <scope line="508"/>
            </method>
            <method name="fillMatching" type="void" line="512">
                <params>
                    <param name="aLeftArg" type="BigDecimal"/>
                    <param name="aFunc" type="BinaryFunction<BigDecimal>"/>
                    <param name="aRightArg" type="Access1D<BigDecimal>"/>
                </params>
                <declaration name="tmpRowDim" type="int" line="513"/>
                <declaration name="tmpColDim" type="int" line="514"/>
                <scope line="515">
                    <anonymous_class line="516">
                        <method name="conquer" type="void" line="517">
                            <params>
                                <param name="aFirst" type="int"/>
                                <param name="aLimit" type="int"/>
                            </params>
                        </method>
                    </anonymous_class>
                    <declaration name="tmpConquerer" type="DivideAndConquer" line="516"/>
                </scope>
                <scope line="524"/>
            </method>
            <method name="fillRow" type="void" line="528">
                <params>
                    <param name="aRow" type="long"/>
                    <param name="aCol" type="long"/>
                    <param name="aNmbr" type="BigDecimal"/>
                </params>
            </method>
            <method name="fillTransposed" type="void" line="531">
                <params>
                    <param name="source" type="Access2D<? extends Number>"/>
                </params>
                <declaration name="tmpRowDim" type="int" line="532"/>
                <declaration name="tmpColDim" type="int" line="533"/>
                <scope line="534">
                    <anonymous_class line="535">
                        <method name="conquer" type="void" line="536">
                            <params>
                                <param name="aFirst" type="int"/>
                                <param name="aLimit" type="int"/>
                            </params>
                        </method>
                    </anonymous_class>
                    <declaration name="tmpConquerer" type="DivideAndConquer" line="535"/>
                </scope>
                <scope line="543"/>
            </method>
            <method name="generateApplyAndCopyHouseholderColumn" type="boolean" line="547">
                <params>
                    <param name="aRow" type="int"/>
                    <param name="aCol" type="int"/>
                    <param name="aDestination" type="Householder<BigDecimal>"/>
                </params>
            </method>
            <method name="generateApplyAndCopyHouseholderRow" type="boolean" line="550">
                <params>
                    <param name="aRow" type="int"/>
                    <param name="aCol" type="int"/>
                    <param name="aDestination" type="Householder<BigDecimal>"/>
                </params>
            </method>
            <method name="get" type="BigDecimal" line="553">
                <params>
                    <param name="aRow" type="long"/>
                    <param name="aCol" type="long"/>
                </params>
            </method>
            <method name="getColDim" type="int" line="556"/>
            <method name="getIndexOfLargestInColumn" type="int" line="559">
                <params>
                    <param name="aRow" type="int"/>
                    <param name="aCol" type="int"/>
                </params>
            </method>
            <method name="getMaxDim" type="int" line="562"/>
            <method name="getMinDim" type="int" line="565"/>
            <method name="getRowDim" type="int" line="568"/>
            <method name="hashCode" type="int" line="571"/>
            <method name="isAbsolute" type="boolean" line="574">
                <params>
                    <param name="row" type="int"/>
                    <param name="column" type="int"/>
                </params>
            </method>
            <method name="isAbsolute" type="boolean" line="577">
                <params>
                    <param name="row" type="long"/>
                    <param name="column" type="long"/>
                </params>
            </method>
            <method name="isInfinite" type="boolean" line="580">
                <params>
                    <param name="row" type="long"/>
                    <param name="column" type="long"/>
                </params>
            </method>
            <method name="isLowerLeftShaded" type="boolean" line="583"/>
            <method name="isNaN" type="boolean" line="586">
                <params>
                    <param name="row" type="long"/>
                    <param name="column" type="long"/>
                </params>
            </method>
            <method name="isPositive" type="boolean" line="589">
                <params>
                    <param name="row" type="int"/>
                    <param name="column" type="int"/>
                </params>
            </method>
            <method name="isPositive" type="boolean" line="592">
                <params>
                    <param name="row" type="long"/>
                    <param name="column" type="long"/>
                </params>
            </method>
            <method name="isReal" type="boolean" line="595">
                <params>
                    <param name="row" type="int"/>
                    <param name="column" type="int"/>
                </params>
            </method>
            <method name="isReal" type="boolean" line="598">
                <params>
                    <param name="row" type="long"/>
                    <param name="column" type="long"/>
                </params>
            </method>
            <method name="isUpperRightShaded" type="boolean" line="601"/>
            <method name="isZero" type="boolean" line="604">
                <params>
                    <param name="row" type="int"/>
                    <param name="column" type="int"/>
                </params>
            </method>
            <method name="isZero" type="boolean" line="607">
                <params>
                    <param name="row" type="long"/>
                    <param name="column" type="long"/>
                </params>
            </method>
            <method name="maxpy" type="void" line="610">
                <params>
                    <param name="aSclrA" type="BigDecimal"/>
                    <param name="aMtrxX" type="MatrixStore<BigDecimal>"/>
                </params>
                <declaration name="tmpRowDim" type="int" line="611"/>
                <declaration name="tmpColDim" type="int" line="612"/>
                <scope line="613">
                    <anonymous_class line="614">
                        <method name="conquer" type="void" line="615">
                            <params>
                                <param name="aFirst" type="int"/>
                                <param name="aLimit" type="int"/>
                            </params>
                        </method>
                    </anonymous_class>
                    <declaration name="tmpConquerer" type="DivideAndConquer" line="614"/>
                </scope>
                <scope line="622"/>
            </method>
            <method name="modifyAll" type="void" line="626">
                <params>
                    <param name="aFunc" type="UnaryFunction<BigDecimal>"/>
                </params>
                <declaration name="tmpRowDim" type="int" line="627"/>
                <declaration name="tmpColDim" type="int" line="628"/>
                <scope line="629">
                    <anonymous_class line="630">
                        <method name="conquer" type="void" line="631">
                            <params>
                                <param name="aFirst" type="int"/>
                                <param name="aLimit" type="int"/>
                            </params>
                        </method>
                    </anonymous_class>
                    <declaration name="tmpConquerer" type="DivideAndConquer" line="630"/>
                </scope>
                <scope line="638"/>
            </method>
            <method name="modifyColumn" type="void" line="642">
                <params>
                    <param name="aRow" type="int"/>
                    <param name="aCol" type="int"/>
                    <param name="aFunc" type="UnaryFunction<BigDecimal>"/>
                </params>
            </method>
            <method name="modifyColumn" type="void" line="645">
                <params>
                    <param name="row" type="long"/>
                    <param name="column" type="long"/>
                    <param name="function" type="UnaryFunction<BigDecimal>"/>
                </params>
            </method>
            <method name="modifyDiagonal" type="void" line="648">
                <params>
                    <param name="aRow" type="int"/>
                    <param name="aCol" type="int"/>
                    <param name="aFunc" type="UnaryFunction<BigDecimal>"/>
                </params>
            </method>
            <method name="modifyDiagonal" type="void" line="651">
                <params>
                    <param name="row" type="long"/>
                    <param name="column" type="long"/>
                    <param name="function" type="UnaryFunction<BigDecimal>"/>
                </params>
            </method>
            <method name="modifyOne" type="void" line="654">
                <params>
                    <param name="aRow" type="int"/>
                    <param name="aCol" type="int"/>
                    <param name="aFunc" type="UnaryFunction<BigDecimal>"/>
                </params>
                <declaration name="tmpValue" type="BigDecimal" line="655"/>
            </method>
            <method name="modifyRow" type="void" line="659">
                <params>
                    <param name="aRow" type="int"/>
                    <param name="aCol" type="int"/>
                    <param name="aFunc" type="UnaryFunction<BigDecimal>"/>
                </params>
            </method>
            <method name="modifyRow" type="void" line="662">
                <params>
                    <param name="row" type="long"/>
                    <param name="column" type="long"/>
                    <param name="function" type="UnaryFunction<BigDecimal>"/>
                </params>
            </method>
            <method name="multiplyLeft" type="MatrixStore<BigDecimal>" line="665">
                <params>
                    <param name="left" type="Access1D<BigDecimal>"/>
                </params>
                <declaration name="retVal" type="BigDenseStore" line="666"/>
            </method>
            <method name="multiplyRight" type="MatrixStore<BigDecimal>" line="670">
                <params>
                    <param name="right" type="Access1D<BigDecimal>"/>
                </params>
                <declaration name="retVal" type="BigDenseStore" line="671"/>
            </method>
            <method name="negateColumn" type="void" line="675">
                <params>
                    <param name="aCol" type="int"/>
                </params>
            </method>
            <method name="raxpy" type="void" line="678">
                <params>
                    <param name="aSclrA" type="BigDecimal"/>
                    <param name="aRowX" type="int"/>
                    <param name="aRowY" type="int"/>
                    <param name="aFirstCol" type="int"/>
                </params>
            </method>
            <method name="rotateRight" type="void" line="681">
                <params>
                    <param name="aLow" type="int"/>
                    <param name="aHigh" type="int"/>
                    <param name="aCos" type="double"/>
                    <param name="aSin" type="double"/>
                </params>
            </method>
            <method name="set" type="void" line="684">
                <params>
                    <param name="aRow" type="long"/>
                    <param name="aCol" type="long"/>
                    <param name="aNmbr" type="double"/>
                </params>
            </method>
            <method name="set" type="void" line="687">
                <params>
                    <param name="aRow" type="long"/>
                    <param name="aCol" type="long"/>
                    <param name="aNmbr" type="Number"/>
                </params>
            </method>
            <method name="setToIdentity" type="void" line="690">
                <params>
                    <param name="aCol" type="int"/>
                </params>
            </method>
            <method name="substituteBackwards" type="void" line="694">
                <params>
                    <param name="aBody" type="Access2D<BigDecimal>"/>
                    <param name="conjugated" type="boolean"/>
                </params>
                <declaration name="tmpRowDim" type="int" line="695"/>
                <declaration name="tmpColDim" type="int" line="696"/>
                <scope line="697">
                    <anonymous_class line="698">
                        <method name="conquer" type="void" line="699">
                            <params>
                                <param name="aFirst" type="int"/>
                                <param name="aLimit" type="int"/>
                            </params>
                        </method>
                    </anonymous_class>
                    <declaration name="tmpConquerer" type="DivideAndConquer" line="698"/>
                </scope>
                <scope line="706"/>
            </method>
            <method name="substituteForwards" type="void" line="710">
                <params>
                    <param name="aBody" type="Access2D<BigDecimal>"/>
                    <param name="onesOnDiagonal" type="boolean"/>
                    <param name="zerosAboveDiagonal" type="boolean"/>
                </params>
                <declaration name="tmpRowDim" type="int" line="711"/>
                <declaration name="tmpColDim" type="int" line="712"/>
                <scope line="713">
                    <anonymous_class line="714">
                        <method name="conquer" type="void" line="715">
                            <params>
                                <param name="aFirst" type="int"/>
                                <param name="aLimit" type="int"/>
                            </params>
                        </method>
                    </anonymous_class>
                    <declaration name="tmpConquerer" type="DivideAndConquer" line="714"/>
                </scope>
                <scope line="722"/>
            </method>
            <method name="toScalar" type="Scalar<BigDecimal>" line="726">
                <params>
                    <param name="row" type="int"/>
                    <param name="column" type="int"/>
                </params>
            </method>
            <method name="toString" type="String" line="729"/>
            <method name="transformLeft" type="void" line="732">
                <params>
                    <param name="aTransf" type="Householder<BigDecimal>"/>
                    <param name="aFirstCol" type="int"/>
                </params>
                <declaration name="tmpTransf" type="Householder.Big" line="733"/>
                <declaration name="tmpData" type="BigDecimal[]" line="734"/>
                <declaration name="tmpRowDim" type="int" line="735"/>
                <declaration name="tmpColDim" type="int" line="736"/>
                <scope line="737">
                    <anonymous_class line="738">
                        <method name="conquer" type="void" line="739">
                            <params>
                                <param name="aFirst" type="int"/>
                                <param name="aLimit" type="int"/>
                            </params>
                        </method>
                    </anonymous_class>
                    <declaration name="tmpConquerer" type="DivideAndConquer" line="738"/>
                </scope>
                <scope line="746"/>
            </method>
            <method name="transformLeft" type="void" line="750">
                <params>
                    <param name="aTransf" type="Rotation<BigDecimal>"/>
                </params>
                <declaration name="tmpTransf" type="Rotation.Big" line="751"/>
                <declaration name="tmpLow" type="int" line="752"/>
                <declaration name="tmpHigh" type="int" line="753"/>
                <scope line="754">
                    <scope line="755"/>
                    <scope line="758"/>
                </scope>
                <scope line="762">
                    <scope line="763"/>
                    <scope line="766"/>
                    <scope line="769"/>
                </scope>
            </method>
            <method name="transformRight" type="void" line="774">
                <params>
                    <param name="aTransf" type="Householder<BigDecimal>"/>
                    <param name="aFirstRow" type="int"/>
                </params>
                <declaration name="tmpTransf" type="Householder.Big" line="775"/>
                <declaration name="tmpData" type="BigDecimal[]" line="776"/>
                <declaration name="tmpRowDim" type="int" line="777"/>
                <declaration name="tmpColDim" type="int" line="778"/>
                <scope line="779">
                    <anonymous_class line="780">
                        <method name="conquer" type="void" line="781">
                            <params>
                                <param name="aFirst" type="int"/>
                                <param name="aLimit" type="int"/>
                            </params>
                        </method>
                    </anonymous_class>
                    <declaration name="tmpConquerer" type="DivideAndConquer" line="780"/>
                </scope>
                <scope line="788"/>
            </method>
            <method name="transformRight" type="void" line="792">
                <params>
                    <param name="aTransf" type="Rotation<BigDecimal>"/>
                </params>
                <declaration name="tmpTransf" type="Rotation.Big" line="793"/>
                <declaration name="tmpLow" type="int" line="794"/>
                <declaration name="tmpHigh" type="int" line="795"/>
                <scope line="796">
                    <scope line="797"/>
                    <scope line="800"/>
                </scope>
                <scope line="804">
                    <scope line="805"/>
                    <scope line="808"/>
                    <scope line="811"/>
                </scope>
            </method>
            <method name="transformSymmetric" type="void" line="816">
                <params>
                    <param name="aTransf" type="Householder<BigDecimal>"/>
                </params>
            </method>
            <method name="transpose" type="BigDenseStore" line="819">
                <declaration name="retVal" type="BigDenseStore" line="820"/>
            </method>
            <method name="tred2" type="void" line="824">
                <params>
                    <param name="mainDiagonal" type="SimpleArray<BigDecimal>"/>
                    <param name="offDiagonal" type="SimpleArray<BigDecimal>"/>
                    <param name="yesvecs" type="boolean"/>
                </params>
            </method>
            <method name="visitColumn" type="void" line="827">
                <params>
                    <param name="row" type="int"/>
                    <param name="column" type="int"/>
                    <param name="visitor" type="VoidFunction<BigDecimal>"/>
                </params>
            </method>
            <method name="visitColumn" type="void" line="830">
                <params>
                    <param name="row" type="long"/>
                    <param name="column" type="long"/>
                    <param name="visitor" type="VoidFunction<BigDecimal>"/>
                </params>
            </method>
            <method name="visitDiagonal" type="void" line="833">
                <params>
                    <param name="row" type="int"/>
                    <param name="column" type="int"/>
                    <param name="visitor" type="VoidFunction<BigDecimal>"/>
                </params>
            </method>
            <method name="visitDiagonal" type="void" line="836">
                <params>
                    <param name="row" type="long"/>
                    <param name="column" type="long"/>
                    <param name="visitor" type="VoidFunction<BigDecimal>"/>
                </params>
            </method>
            <method name="visitRow" type="void" line="839">
                <params>
                    <param name="row" type="int"/>
                    <param name="column" type="int"/>
                    <param name="visitor" type="VoidFunction<BigDecimal>"/>
                </params>
            </method>
            <method name="visitRow" type="void" line="842">
                <params>
                    <param name="row" type="long"/>
                    <param name="column" type="long"/>
                    <param name="visitor" type="VoidFunction<BigDecimal>"/>
                </params>
            </method>
        </class>
    </source>