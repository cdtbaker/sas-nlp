<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.ojalgo.matrix.store">
        <import package="org.ojalgo.function.ComplexFunction"/>
        <import package="java.util.List"/>
        <import package="org.ojalgo.access.Access1D"/>
        <import package="org.ojalgo.access.Access2D"/>
        <import package="org.ojalgo.access.AccessUtils"/>
        <import package="org.ojalgo.array.Array1D"/>
        <import package="org.ojalgo.array.Array2D"/>
        <import package="org.ojalgo.array.BasicArray"/>
        <import package="org.ojalgo.array.ComplexArray"/>
        <import package="org.ojalgo.concurrent.DivideAndConquer"/>
        <import package="org.ojalgo.function.BinaryFunction"/>
        <import package="org.ojalgo.function.ComplexFunction"/>
        <import package="org.ojalgo.function.FunctionSet"/>
        <import package="org.ojalgo.function.UnaryFunction"/>
        <import package="org.ojalgo.function.VoidFunction"/>
        <import package="org.ojalgo.function.aggregator.Aggregator"/>
        <import package="org.ojalgo.function.aggregator.AggregatorCollection"/>
        <import package="org.ojalgo.function.aggregator.AggregatorFunction"/>
        <import package="org.ojalgo.function.aggregator.ComplexAggregator"/>
        <import package="org.ojalgo.matrix.MatrixUtils"/>
        <import package="org.ojalgo.matrix.decomposition.DecompositionStore"/>
        <import package="org.ojalgo.matrix.store.operation"/>
        <import package="org.ojalgo.matrix.transformation.Householder"/>
        <import package="org.ojalgo.matrix.transformation.Rotation"/>
        <import package="org.ojalgo.random.RandomNumber"/>
        <import package="org.ojalgo.scalar.ComplexNumber"/>
        <import package="org.ojalgo.scalar.Scalar"/>
        <import package="org.ojalgo.type.TypeUtils"/>
        <import package="org.ojalgo.type.context.NumberContext"/>
        <class name="ComplexDenseStore" line="56">
            <extends class="ComplexArray"/>
            <implements interface="PhysicalStore">
                <type_params>
                    <type_param name="ComplexNumber"/>
                </type_params>
            </implements>
            <implements interface="DecompositionStore">
                <type_params>
                    <type_param name="ComplexNumber"/>
                </type_params>
            </implements>
            <javadoc line="56">
                A {@linkplain ComplexNumber} implementation of {@linkplain PhysicalStore}.                
                <author>
                    apete                    
                </author>
            </javadoc>
            <interface name="ComplexMultiplyBoth">
                <method name="invoke" type="void" line="65"/>
            </interface>
            <interface name="ComplexMultiplyLeft">
                <method name="invoke" type="void" line="71"/>
            </interface>
            <interface name="ComplexMultiplyRight">
                <method name="invoke" type="void" line="77"/>
            </interface>
            <method name="cast" type="ComplexDenseStore" line="81">
                <params>
                    <param name="mtrx" type="Access1D&lt;ComplexNumber&gt;"/>
                </params>
                <scope line="82"/>
                <scope line="84"/>
                <scope line="86"/>
            </method>
            <method name="cast" type="Householder.Complex" line="91">
                <params>
                    <param name="aTransf" type="Householder&lt;ComplexNumber&gt;"/>
                </params>
                <scope line="92"/>
                <scope line="94"/>
                <scope line="96"/>
            </method>
            <method name="cast" type="Rotation.Complex" line="101">
                <params>
                    <param name="aTransf" type="Rotation&lt;ComplexNumber&gt;"/>
                </params>
                <scope line="102"/>
                <scope line="104"/>
            </method>
            <declaration name="FACTORY" type="DecompositionStore.Factory&amp;lt;ComplexNumber,ComplexDenseStore&amp;gt;" line="109"/>
            <anonymous_class line="109">
                <method name="aggregator" type="AggregatorCollection&lt;ComplexNumber&gt;" line="111"/>
                <method name="columns" type="ComplexDenseStore" line="115">
                    <params>
                        <param name="source" type="Access1D&lt;?&gt;"/>
                    </params>
                    <declaration name="tmpRowDim" type="int" line="117"/>
                    <declaration name="tmpColDim" type="int" line="118"/>
                    <declaration name="tmpData" type="ComplexNumber[]" line="120"/>
                    <declaration name="tmpColumn" type="Access1D&amp;lt;?&amp;gt;" line="122"/>
                    <scope line="123">
                        <scope line="125"/>
                    </scope>
                </method>
                <method name="columns" type="ComplexDenseStore" line="133">
                    <params>
                        <param name="source" type="double[]"/>
                    </params>
                    <declaration name="tmpRowDim" type="int" line="135"/>
                    <declaration name="tmpColDim" type="int" line="136"/>
                    <declaration name="tmpData" type="ComplexNumber[]" line="138"/>
                    <declaration name="tmpColumn" type="double[]" line="140"/>
                    <scope line="141">
                        <scope line="143"/>
                    </scope>
                </method>
                <method name="columns" type="ComplexDenseStore" line="151">
                    <params>
                        <param name="source" type="List&lt;? extends Number&gt;"/>
                    </params>
                    <declaration name="tmpRowDim" type="int" line="153"/>
                    <declaration name="tmpColDim" type="int" line="154"/>
                    <declaration name="tmpData" type="ComplexNumber[]" line="156"/>
                    <declaration name="tmpColumn" type="List&amp;lt;? extends Number&amp;gt;" line="158"/>
                    <scope line="159">
                        <scope line="161"/>
                    </scope>
                </method>
                <method name="columns" type="ComplexDenseStore" line="169">
                    <params>
                        <param name="source" type="Number[]"/>
                    </params>
                    <declaration name="tmpRowDim" type="int" line="171"/>
                    <declaration name="tmpColDim" type="int" line="172"/>
                    <declaration name="tmpData" type="ComplexNumber[]" line="174"/>
                    <declaration name="tmpColumn" type="Number[]" line="176"/>
                    <scope line="177">
                        <scope line="179"/>
                    </scope>
                </method>
                <method name="conjugate" type="ComplexDenseStore" line="187">
                    <params>
                        <param name="source" type="Access2D&lt;?&gt;"/>
                    </params>
                    <declaration name="retVal" type="ComplexDenseStore" line="189"/>
                </method>
                <method name="copy" type="ComplexDenseStore" line="196">
                    <params>
                        <param name="source" type="Access2D&lt;?&gt;"/>
                    </params>
                    <declaration name="retVal" type="ComplexDenseStore" line="198"/>
                </method>
                <method name="function" type="FunctionSet&lt;ComplexNumber&gt;" line="205"/>
                <method name="makeArray" type="ComplexArray" line="209">
                    <params>
                        <param name="length" type="int"/>
                    </params>
                </method>
                <method name="makeEye" type="ComplexDenseStore" line="213">
                    <params>
                        <param name="rows" type="long"/>
                        <param name="columns" type="long"/>
                    </params>
                    <declaration name="retVal" type="ComplexDenseStore" line="215"/>
                </method>
                <method name="makeHouseholder" type="Householder.Complex" line="222">
                    <params>
                        <param name="length" type="int"/>
                    </params>
                </method>
                <method name="makeRandom" type="ComplexDenseStore" line="226">
                    <params>
                        <param name="rows" type="long"/>
                        <param name="columns" type="long"/>
                        <param name="distribution" type="RandomNumber"/>
                    </params>
                    <declaration name="tmpRowDim" type="int" line="228"/>
                    <declaration name="tmpColDim" type="int" line="229"/>
                    <declaration name="tmpLength" type="int" line="231"/>
                    <declaration name="tmpData" type="ComplexNumber[]" line="233"/>
                    <scope line="235"/>
                </method>
                <method name="makeRotation" type="Rotation.Complex" line="242">
                    <params>
                        <param name="low" type="int"/>
                        <param name="high" type="int"/>
                        <param name="cos" type="ComplexNumber"/>
                        <param name="sin" type="ComplexNumber"/>
                    </params>
                </method>
                <method name="makeRotation" type="Rotation.Complex" line="246">
                    <params>
                        <param name="low" type="int"/>
                        <param name="high" type="int"/>
                        <param name="cos" type="double"/>
                        <param name="sin" type="double"/>
                    </params>
                </method>
                <method name="makeZero" type="ComplexDenseStore" line="250">
                    <params>
                        <param name="rows" type="long"/>
                        <param name="columns" type="long"/>
                    </params>
                </method>
                <method name="rows" type="ComplexDenseStore" line="254">
                    <params>
                        <param name="source" type="Access1D&lt;?&gt;"/>
                    </params>
                    <declaration name="tmpRowDim" type="int" line="256"/>
                    <declaration name="tmpColDim" type="int" line="257"/>
                    <declaration name="tmpData" type="ComplexNumber[]" line="259"/>
                    <declaration name="tmpRow" type="Access1D&amp;lt;?&amp;gt;" line="261"/>
                    <scope line="262">
                        <scope line="264"/>
                    </scope>
                </method>
                <method name="rows" type="ComplexDenseStore" line="272">
                    <params>
                        <param name="source" type="double[]"/>
                    </params>
                    <declaration name="tmpRowDim" type="int" line="274"/>
                    <declaration name="tmpColDim" type="int" line="275"/>
                    <declaration name="tmpData" type="ComplexNumber[]" line="277"/>
                    <declaration name="tmpRow" type="double[]" line="279"/>
                    <scope line="280">
                        <scope line="282"/>
                    </scope>
                </method>
                <method name="rows" type="ComplexDenseStore" line="290">
                    <params>
                        <param name="source" type="List&lt;? extends Number&gt;"/>
                    </params>
                    <declaration name="tmpRowDim" type="int" line="292"/>
                    <declaration name="tmpColDim" type="int" line="293"/>
                    <declaration name="tmpData" type="ComplexNumber[]" line="295"/>
                    <declaration name="tmpRow" type="List&amp;lt;? extends Number&amp;gt;" line="297"/>
                    <scope line="298">
                        <scope line="300"/>
                    </scope>
                </method>
                <method name="rows" type="ComplexDenseStore" line="308">
                    <params>
                        <param name="source" type="Number[]"/>
                    </params>
                    <declaration name="tmpRowDim" type="int" line="310"/>
                    <declaration name="tmpColDim" type="int" line="311"/>
                    <declaration name="tmpData" type="ComplexNumber[]" line="313"/>
                    <declaration name="tmpRow" type="Number[]" line="315"/>
                    <scope line="316">
                        <scope line="318"/>
                    </scope>
                </method>
                <method name="scalar" type="Scalar.Factory&lt;ComplexNumber&gt;" line="326"/>
                <method name="transpose" type="ComplexDenseStore" line="330">
                    <params>
                        <param name="source" type="Access2D&lt;?&gt;"/>
                    </params>
                    <declaration name="retVal" type="ComplexDenseStore" line="332"/>
                </method>
            </anonymous_class>
            <declaration name="multiplyBoth" type="ComplexMultiplyBoth" line="340"/>
            <declaration name="multiplyLeft" type="ComplexMultiplyLeft" line="342"/>
            <declaration name="multiplyRight" type="ComplexMultiplyRight" line="344"/>
            <declaration name="myColDim" type="int" line="346"/>
            <declaration name="myRowDim" type="int" line="348"/>
            <declaration name="myUtility" type="Array2D&amp;lt;ComplexNumber&amp;gt;" line="349"/>
            <method name="ComplexDenseStore" type="constructor" line="351">
                <params>
                    <param name="anArray" type="ComplexNumber[]"/>
                </params>
            </method>
            <method name="ComplexDenseStore" type="constructor" line="365">
                <params>
                    <param name="aLength" type="int"/>
                </params>
            </method>
            <method name="ComplexDenseStore" type="constructor" line="379">
                <params>
                    <param name="aRowDim" type="int"/>
                    <param name="aColDim" type="int"/>
                </params>
            </method>
            <method name="ComplexDenseStore" type="constructor" line="393">
                <params>
                    <param name="aRowDim" type="int"/>
                    <param name="aColDim" type="int"/>
                    <param name="anArray" type="ComplexNumber[]"/>
                </params>
            </method>
            <method name="add" type="MatrixStore&lt;ComplexNumber&gt;" line="407">
                <params>
                    <param name="addend" type="MatrixStore&lt;ComplexNumber&gt;"/>
                </params>
            </method>
            <method name="aggregateAll" type="ComplexNumber" line="411">
                <params>
                    <param name="aggregator" type="Aggregator"/>
                </params>
                <declaration name="tmpRowDim" type="int" line="413"/>
                <declaration name="tmpColDim" type="int" line="414"/>
                <declaration name="tmpMainAggr" type="AggregatorFunction&amp;lt;ComplexNumber&amp;gt;" line="416"/>
                <scope line="418">
                    <anonymous_class line="420">
                        <method name="conquer" type="void" line="423">
                            <params>
                                <param name="aFirst" type="int"/>
                                <param name="aLimit" type="int"/>
                            </params>
                            <declaration name="tmpPartAggr" type="AggregatorFunction&amp;lt;ComplexNumber&amp;gt;" line="425"/>
                            <scope line="429"/>
                        </method>
                    </anonymous_class>
                    <declaration name="tmpConquerer" type="DivideAndConquer" line="420"/>
                </scope>
                <scope line="437"/>
            </method>
            <method name="applyCholesky" type="void" line="445">
                <params>
                    <param name="iterationPoint" type="int"/>
                    <param name="multipliers" type="BasicArray&lt;ComplexNumber&gt;"/>
                </params>
                <declaration name="tmpData" type="ComplexNumber[]" line="447"/>
                <declaration name="tmpColumn" type="ComplexNumber[]" line="448"/>
                <scope line="450">
                    <anonymous_class line="452">
                        <method name="conquer" type="void" line="455">
                            <params>
                                <param name="aFirst" type="int"/>
                                <param name="aLimit" type="int"/>
                            </params>
                        </method>
                    </anonymous_class>
                    <declaration name="tmpConquerer" type="DivideAndConquer" line="452"/>
                </scope>
                <scope line="462"/>
            </method>
            <method name="applyLU" type="void" line="468">
                <params>
                    <param name="iterationPoint" type="int"/>
                    <param name="multipliers" type="BasicArray&lt;ComplexNumber&gt;"/>
                </params>
                <declaration name="tmpData" type="ComplexNumber[]" line="470"/>
                <declaration name="tmpColumn" type="ComplexNumber[]" line="471"/>
                <scope line="473">
                    <anonymous_class line="475">
                        <method name="conquer" type="void" line="478">
                            <params>
                                <param name="aFirst" type="int"/>
                                <param name="aLimit" type="int"/>
                            </params>
                        </method>
                    </anonymous_class>
                    <declaration name="tmpConquerer" type="DivideAndConquer" line="475"/>
                </scope>
                <scope line="485"/>
            </method>
            <method name="asArray2D" type="Array2D&lt;ComplexNumber&gt;" line="491"/>
            <method name="asList" type="Array1D&lt;ComplexNumber&gt;" line="495"/>
            <method name="builder" type="MatrixStore.Builder&lt;ComplexNumber&gt;" line="499"/>
            <method name="caxpy" type="void" line="503">
                <params>
                    <param name="aSclrA" type="ComplexNumber"/>
                    <param name="aColX" type="int"/>
                    <param name="aColY" type="int"/>
                    <param name="aFirstRow" type="int"/>
                </params>
            </method>
            <method name="computeInPlaceSchur" type="Array1D&lt;ComplexNumber&gt;" line="507">
                <params>
                    <param name="aTransformationCollector" type="PhysicalStore&lt;ComplexNumber&gt;"/>
                    <param name="eigenvalue" type="boolean"/>
                </params>
            </method>
            <method name="conjugate" type="MatrixStore&lt;ComplexNumber&gt;" line="511"/>
            <method name="copy" type="ComplexDenseStore" line="515"/>
            <method name="countColumns" type="long" line="519"/>
            <method name="countRows" type="long" line="523"/>
            <method name="divideAndCopyColumn" type="void" line="527">
                <params>
                    <param name="aRow" type="int"/>
                    <param name="aCol" type="int"/>
                    <param name="aDestination" type="BasicArray&lt;ComplexNumber&gt;"/>
                </params>
                <declaration name="tmpData" type="ComplexNumber[]" line="529"/>
                <declaration name="tmpRowDim" type="int" line="530"/>
                <declaration name="tmpDestination" type="ComplexNumber[]" line="532"/>
                <declaration name="tmpIndex" type="int" line="534"/>
                <declaration name="tmpDenominator" type="ComplexNumber" line="535"/>
                <scope line="537"/>
            </method>
            <method name="doubleValue" type="double" line="543">
                <params>
                    <param name="aRow" type="long"/>
                    <param name="aCol" type="long"/>
                </params>
            </method>
            <method name="equals" type="boolean" line="547">
                <params>
                    <param name="other" type="MatrixStore&lt;ComplexNumber&gt;"/>
                    <param name="context" type="NumberContext"/>
                </params>
            </method>
            <method name="equals" type="boolean" line="553">
                <params>
                    <param name="anObj" type="Object"/>
                </params>
                <scope line="554"/>
                <scope line="556"/>
            </method>
            <method name="exchangeColumns" type="void" line="561">
                <params>
                    <param name="aColA" type="int"/>
                    <param name="aColB" type="int"/>
                </params>
            </method>
            <method name="exchangeRows" type="void" line="565">
                <params>
                    <param name="aRowA" type="int"/>
                    <param name="aRowB" type="int"/>
                </params>
            </method>
            <method name="factory" type="PhysicalStore.Factory&lt;ComplexNumber,ComplexDenseStore&gt;" line="569"/>
            <method name="fillByMultiplying" type="void" line="573">
                <params>
                    <param name="left" type="Access1D&lt;ComplexNumber&gt;"/>
                    <param name="right" type="Access1D&lt;ComplexNumber&gt;"/>
                </params>
                <declaration name="tmpComplexity" type="int" line="575"/>
                <declaration name="tmpProductData" type="ComplexNumber[]" line="577"/>
                <scope line="579"/>
                <scope line="581"/>
                <scope line="583"/>
            </method>
            <method name="fillColumn" type="void" line="588">
                <params>
                    <param name="aRow" type="long"/>
                    <param name="aCol" type="long"/>
                    <param name="aNmbr" type="ComplexNumber"/>
                </params>
            </method>
            <method name="fillConjugated" type="void" line="592">
                <params>
                    <param name="source" type="Access2D&lt;? extends Number&gt;"/>
                </params>
                <declaration name="tmpRowDim" type="int" line="594"/>
                <declaration name="tmpColDim" type="int" line="595"/>
                <scope line="597">
                    <anonymous_class line="599">
                        <method name="conquer" type="void" line="602">
                            <params>
                                <param name="aFirst" type="int"/>
                                <param name="aLimit" type="int"/>
                            </params>
                        </method>
                    </anonymous_class>
                    <declaration name="tmpConquerer" type="DivideAndConquer" line="599"/>
                </scope>
                <scope line="610"/>
            </method>
            <method name="fillDiagonal" type="void" line="616">
                <params>
                    <param name="aRow" type="long"/>
                    <param name="aCol" type="long"/>
                    <param name="aNmbr" type="ComplexNumber"/>
                </params>
            </method>
            <method name="fillMatching" type="void" line="620">
                <params>
                    <param name="source" type="Access1D&lt;? extends Number&gt;"/>
                </params>
                <declaration name="tmpRowDim" type="int" line="622"/>
                <declaration name="tmpColDim" type="int" line="623"/>
                <scope line="625">
                    <anonymous_class line="627">
                        <method name="conquer" type="void" line="630">
                            <params>
                                <param name="aFirst" type="int"/>
                                <param name="aLimit" type="int"/>
                            </params>
                        </method>
                    </anonymous_class>
                    <declaration name="tmpConquerer" type="DivideAndConquer" line="627"/>
                </scope>
                <scope line="638"/>
            </method>
            <method name="fillMatching" type="void" line="644">
                <params>
                    <param name="leftArg" type="Access1D&lt;ComplexNumber&gt;"/>
                    <param name="func" type="BinaryFunction&lt;ComplexNumber&gt;"/>
                    <param name="rightArg" type="Access1D&lt;ComplexNumber&gt;"/>
                </params>
                <declaration name="tmpRowDim" type="int" line="646"/>
                <declaration name="tmpColDim" type="int" line="647"/>
                <scope line="649">
                    <anonymous_class line="651">
                        <method name="conquer" type="void" line="654">
                            <params>
                                <param name="aFirst" type="int"/>
                                <param name="aLimit" type="int"/>
                            </params>
                        </method>
                    </anonymous_class>
                    <declaration name="tmpConquerer" type="DivideAndConquer" line="651"/>
                </scope>
                <scope line="662"/>
            </method>
            <method name="fillMatching" type="void" line="668">
                <params>
                    <param name="aLeftArg" type="Access1D&lt;ComplexNumber&gt;"/>
                    <param name="aFunc" type="BinaryFunction&lt;ComplexNumber&gt;"/>
                    <param name="aRightArg" type="ComplexNumber"/>
                </params>
                <declaration name="tmpRowDim" type="int" line="670"/>
                <declaration name="tmpColDim" type="int" line="671"/>
                <scope line="673">
                    <anonymous_class line="675">
                        <method name="conquer" type="void" line="678">
                            <params>
                                <param name="aFirst" type="int"/>
                                <param name="aLimit" type="int"/>
                            </params>
                        </method>
                    </anonymous_class>
                    <declaration name="tmpConquerer" type="DivideAndConquer" line="675"/>
                </scope>
                <scope line="686"/>
            </method>
            <method name="fillMatching" type="void" line="692">
                <params>
                    <param name="aLeftArg" type="ComplexNumber"/>
                    <param name="aFunc" type="BinaryFunction&lt;ComplexNumber&gt;"/>
                    <param name="aRightArg" type="Access1D&lt;ComplexNumber&gt;"/>
                </params>
                <declaration name="tmpRowDim" type="int" line="694"/>
                <declaration name="tmpColDim" type="int" line="695"/>
                <scope line="697">
                    <anonymous_class line="699">
                        <method name="conquer" type="void" line="702">
                            <params>
                                <param name="aFirst" type="int"/>
                                <param name="aLimit" type="int"/>
                            </params>
                        </method>
                    </anonymous_class>
                    <declaration name="tmpConquerer" type="DivideAndConquer" line="699"/>
                </scope>
                <scope line="710"/>
            </method>
            <method name="fillRow" type="void" line="716">
                <params>
                    <param name="aRow" type="long"/>
                    <param name="aCol" type="long"/>
                    <param name="aNmbr" type="ComplexNumber"/>
                </params>
            </method>
            <method name="fillTransposed" type="void" line="720">
                <params>
                    <param name="source" type="Access2D&lt;? extends Number&gt;"/>
                </params>
                <declaration name="tmpRowDim" type="int" line="722"/>
                <declaration name="tmpColDim" type="int" line="723"/>
                <scope line="725">
                    <anonymous_class line="727">
                        <method name="conquer" type="void" line="730">
                            <params>
                                <param name="aFirst" type="int"/>
                                <param name="aLimit" type="int"/>
                            </params>
                        </method>
                    </anonymous_class>
                    <declaration name="tmpConquerer" type="DivideAndConquer" line="727"/>
                </scope>
                <scope line="738"/>
            </method>
            <method name="generateApplyAndCopyHouseholderColumn" type="boolean" line="744">
                <params>
                    <param name="aRow" type="int"/>
                    <param name="aCol" type="int"/>
                    <param name="aDestination" type="Householder&lt;ComplexNumber&gt;"/>
                </params>
            </method>
            <method name="generateApplyAndCopyHouseholderRow" type="boolean" line="748">
                <params>
                    <param name="aRow" type="int"/>
                    <param name="aCol" type="int"/>
                    <param name="aDestination" type="Householder&lt;ComplexNumber&gt;"/>
                </params>
            </method>
            <method name="get" type="ComplexNumber" line="752">
                <params>
                    <param name="aRow" type="long"/>
                    <param name="aCol" type="long"/>
                </params>
            </method>
            <method name="getColDim" type="int" line="756"/>
            <method name="getIndexOfLargestInColumn" type="int" line="760">
                <params>
                    <param name="aRow" type="int"/>
                    <param name="aCol" type="int"/>
                </params>
            </method>
            <method name="getMaxDim" type="int" line="764"/>
            <method name="getMinDim" type="int" line="768"/>
            <method name="getRowDim" type="int" line="772"/>
            <method name="hashCode" type="int" line="777"/>
            <method name="isAbsolute" type="boolean" line="781">
                <params>
                    <param name="row" type="long"/>
                    <param name="column" type="long"/>
                </params>
            </method>
            <method name="isInfinite" type="boolean" line="785">
                <params>
                    <param name="row" type="long"/>
                    <param name="column" type="long"/>
                </params>
            </method>
            <method name="isLowerLeftShaded" type="boolean" line="789"/>
            <method name="isNaN" type="boolean" line="793">
                <params>
                    <param name="row" type="long"/>
                    <param name="column" type="long"/>
                </params>
            </method>
            <method name="isPositive" type="boolean" line="797">
                <params>
                    <param name="row" type="long"/>
                    <param name="column" type="long"/>
                </params>
            </method>
            <method name="isReal" type="boolean" line="801">
                <params>
                    <param name="row" type="long"/>
                    <param name="column" type="long"/>
                </params>
            </method>
            <method name="isUpperRightShaded" type="boolean" line="805"/>
            <method name="isZero" type="boolean" line="809">
                <params>
                    <param name="row" type="long"/>
                    <param name="column" type="long"/>
                </params>
            </method>
            <method name="maxpy" type="void" line="813">
                <params>
                    <param name="aSclrA" type="ComplexNumber"/>
                    <param name="aMtrxX" type="MatrixStore&lt;ComplexNumber&gt;"/>
                </params>
                <declaration name="tmpRowDim" type="int" line="815"/>
                <declaration name="tmpColDim" type="int" line="816"/>
                <scope line="818">
                    <anonymous_class line="820">
                        <method name="conquer" type="void" line="823">
                            <params>
                                <param name="aFirst" type="int"/>
                                <param name="aLimit" type="int"/>
                            </params>
                        </method>
                    </anonymous_class>
                    <declaration name="tmpConquerer" type="DivideAndConquer" line="820"/>
                </scope>
                <scope line="831"/>
            </method>
            <method name="modifyAll" type="void" line="838">
                <params>
                    <param name="aFunc" type="UnaryFunction&lt;ComplexNumber&gt;"/>
                </params>
                <declaration name="tmpRowDim" type="int" line="840"/>
                <declaration name="tmpColDim" type="int" line="841"/>
                <scope line="843">
                    <anonymous_class line="845">
                        <method name="conquer" type="void" line="848">
                            <params>
                                <param name="aFirst" type="int"/>
                                <param name="aLimit" type="int"/>
                            </params>
                        </method>
                    </anonymous_class>
                    <declaration name="tmpConquerer" type="DivideAndConquer" line="845"/>
                </scope>
                <scope line="856"/>
            </method>
            <method name="modifyColumn" type="void" line="862">
                <params>
                    <param name="row" type="long"/>
                    <param name="column" type="long"/>
                    <param name="function" type="UnaryFunction&lt;ComplexNumber&gt;"/>
                </params>
            </method>
            <method name="modifyDiagonal" type="void" line="866">
                <params>
                    <param name="row" type="long"/>
                    <param name="column" type="long"/>
                    <param name="function" type="UnaryFunction&lt;ComplexNumber&gt;"/>
                </params>
            </method>
            <method name="modifyOne" type="void" line="870">
                <params>
                    <param name="row" type="long"/>
                    <param name="column" type="long"/>
                    <param name="func" type="UnaryFunction&lt;ComplexNumber&gt;"/>
                </params>
                <declaration name="tmpValue" type="ComplexNumber" line="872"/>
            </method>
            <method name="modifyRow" type="void" line="879">
                <params>
                    <param name="row" type="long"/>
                    <param name="column" type="long"/>
                    <param name="function" type="UnaryFunction&lt;ComplexNumber&gt;"/>
                </params>
            </method>
            <method name="multiplyLeft" type="MatrixStore&lt;ComplexNumber&gt;" line="883">
                <params>
                    <param name="left" type="Access1D&lt;ComplexNumber&gt;"/>
                </params>
                <declaration name="retVal" type="ComplexDenseStore" line="885"/>
            </method>
            <method name="multiplyRight" type="MatrixStore&lt;ComplexNumber&gt;" line="892">
                <params>
                    <param name="right" type="Access1D&lt;ComplexNumber&gt;"/>
                </params>
                <declaration name="retVal" type="ComplexDenseStore" line="894"/>
            </method>
            <method name="negate" type="MatrixStore&lt;ComplexNumber&gt;" line="901"/>
            <method name="negateColumn" type="void" line="905">
                <params>
                    <param name="aCol" type="int"/>
                </params>
            </method>
            <method name="raxpy" type="void" line="909">
                <params>
                    <param name="aSclrA" type="ComplexNumber"/>
                    <param name="aRowX" type="int"/>
                    <param name="aRowY" type="int"/>
                    <param name="aFirstCol" type="int"/>
                </params>
            </method>
            <method name="rotateRight" type="void" line="913">
                <params>
                    <param name="aLow" type="int"/>
                    <param name="aHigh" type="int"/>
                    <param name="aCos" type="double"/>
                    <param name="aSin" type="double"/>
                </params>
            </method>
            <method name="scale" type="MatrixStore&lt;ComplexNumber&gt;" line="917">
                <params>
                    <param name="scalar" type="ComplexNumber"/>
                </params>
            </method>
            <method name="set" type="void" line="921">
                <params>
                    <param name="aRow" type="long"/>
                    <param name="aCol" type="long"/>
                    <param name="aNmbr" type="double"/>
                </params>
            </method>
            <method name="set" type="void" line="925">
                <params>
                    <param name="aRow" type="long"/>
                    <param name="aCol" type="long"/>
                    <param name="aNmbr" type="Number"/>
                </params>
            </method>
            <method name="setToIdentity" type="void" line="929">
                <params>
                    <param name="aCol" type="int"/>
                </params>
            </method>
            <method name="substituteBackwards" type="void" line="934">
                <params>
                    <param name="aBody" type="Access2D&lt;ComplexNumber&gt;"/>
                    <param name="conjugated" type="boolean"/>
                </params>
                <declaration name="tmpRowDim" type="int" line="936"/>
                <declaration name="tmpColDim" type="int" line="937"/>
                <scope line="939">
                    <anonymous_class line="941">
                        <method name="conquer" type="void" line="944">
                            <params>
                                <param name="aFirst" type="int"/>
                                <param name="aLimit" type="int"/>
                            </params>
                        </method>
                    </anonymous_class>
                    <declaration name="tmpConquerer" type="DivideAndConquer" line="941"/>
                </scope>
                <scope line="952"/>
            </method>
            <method name="substituteForwards" type="void" line="958">
                <params>
                    <param name="aBody" type="Access2D&lt;ComplexNumber&gt;"/>
                    <param name="onesOnDiagonal" type="boolean"/>
                    <param name="zerosAboveDiagonal" type="boolean"/>
                </params>
                <declaration name="tmpRowDim" type="int" line="960"/>
                <declaration name="tmpColDim" type="int" line="961"/>
                <scope line="963">
                    <anonymous_class line="965">
                        <method name="conquer" type="void" line="968">
                            <params>
                                <param name="aFirst" type="int"/>
                                <param name="aLimit" type="int"/>
                            </params>
                        </method>
                    </anonymous_class>
                    <declaration name="tmpConquerer" type="DivideAndConquer" line="965"/>
                </scope>
                <scope line="976"/>
            </method>
            <method name="subtract" type="MatrixStore&lt;ComplexNumber&gt;" line="982">
                <params>
                    <param name="subtrahend" type="MatrixStore&lt;ComplexNumber&gt;"/>
                </params>
            </method>
            <method name="toScalar" type="Scalar&lt;ComplexNumber&gt;" line="986">
                <params>
                    <param name="row" type="long"/>
                    <param name="column" type="long"/>
                </params>
            </method>
            <method name="toString" type="String" line="991"/>
            <method name="transformLeft" type="void" line="995">
                <params>
                    <param name="aTransf" type="Householder&lt;ComplexNumber&gt;"/>
                    <param name="aFirstCol" type="int"/>
                </params>
                <declaration name="tmpTransf" type="Householder.Complex" line="997"/>
                <declaration name="tmpData" type="ComplexNumber[]" line="999"/>
                <declaration name="tmpRowDim" type="int" line="1001"/>
                <declaration name="tmpColDim" type="int" line="1002"/>
                <scope line="1004">
                    <anonymous_class line="1006">
                        <method name="conquer" type="void" line="1009">
                            <params>
                                <param name="aFirst" type="int"/>
                                <param name="aLimit" type="int"/>
                            </params>
                        </method>
                    </anonymous_class>
                    <declaration name="tmpConquerer" type="DivideAndConquer" line="1006"/>
                </scope>
                <scope line="1017"/>
            </method>
            <method name="transformLeft" type="void" line="1023">
                <params>
                    <param name="aTransf" type="Rotation&lt;ComplexNumber&gt;"/>
                </params>
                <declaration name="tmpTransf" type="Rotation.Complex" line="1025"/>
                <declaration name="tmpLow" type="int" line="1027"/>
                <declaration name="tmpHigh" type="int" line="1028"/>
                <scope line="1030">
                    <scope line="1031"/>
                    <scope line="1033"/>
                </scope>
                <scope line="1036">
                    <scope line="1037"/>
                    <scope line="1039"/>
                    <scope line="1041"/>
                </scope>
            </method>
            <method name="transformRight" type="void" line="1047">
                <params>
                    <param name="aTransf" type="Householder&lt;ComplexNumber&gt;"/>
                    <param name="aFirstRow" type="int"/>
                </params>
                <declaration name="tmpTransf" type="Householder.Complex" line="1049"/>
                <declaration name="tmpData" type="ComplexNumber[]" line="1051"/>
                <declaration name="tmpRowDim" type="int" line="1053"/>
                <declaration name="tmpColDim" type="int" line="1054"/>
                <scope line="1056">
                    <anonymous_class line="1058">
                        <method name="conquer" type="void" line="1061">
                            <params>
                                <param name="aFirst" type="int"/>
                                <param name="aLimit" type="int"/>
                            </params>
                        </method>
                    </anonymous_class>
                    <declaration name="tmpConquerer" type="DivideAndConquer" line="1058"/>
                </scope>
                <scope line="1069"/>
            </method>
            <method name="transformRight" type="void" line="1075">
                <params>
                    <param name="aTransf" type="Rotation&lt;ComplexNumber&gt;"/>
                </params>
                <declaration name="tmpTransf" type="Rotation.Complex" line="1077"/>
                <declaration name="tmpLow" type="int" line="1079"/>
                <declaration name="tmpHigh" type="int" line="1080"/>
                <scope line="1082">
                    <scope line="1083"/>
                    <scope line="1085"/>
                </scope>
                <scope line="1088">
                    <scope line="1089"/>
                    <scope line="1091"/>
                    <scope line="1093"/>
                </scope>
            </method>
            <method name="transformSymmetric" type="void" line="1099">
                <params>
                    <param name="aTransf" type="Householder&lt;ComplexNumber&gt;"/>
                </params>
            </method>
            <method name="transpose" type="MatrixStore&lt;ComplexNumber&gt;" line="1103"/>
            <method name="tred2" type="void" line="1107">
                <params>
                    <param name="mainDiagonal" type="BasicArray&lt;ComplexNumber&gt;"/>
                    <param name="offDiagonal" type="BasicArray&lt;ComplexNumber&gt;"/>
                    <param name="yesvecs" type="boolean"/>
                </params>
            </method>
            <method name="visitAll" type="void" line="1112">
                <params>
                    <param name="visitor" type="VoidFunction&lt;ComplexNumber&gt;"/>
                </params>
            </method>
            <method name="visitColumn" type="void" line="1116">
                <params>
                    <param name="row" type="long"/>
                    <param name="column" type="long"/>
                    <param name="visitor" type="VoidFunction&lt;ComplexNumber&gt;"/>
                </params>
            </method>
            <method name="visitDiagonal" type="void" line="1120">
                <params>
                    <param name="row" type="long"/>
                    <param name="column" type="long"/>
                    <param name="visitor" type="VoidFunction&lt;ComplexNumber&gt;"/>
                </params>
            </method>
            <method name="visitRow" type="void" line="1124">
                <params>
                    <param name="row" type="long"/>
                    <param name="column" type="long"/>
                    <param name="visitor" type="VoidFunction&lt;ComplexNumber&gt;"/>
                </params>
            </method>
        </class>
    </source>