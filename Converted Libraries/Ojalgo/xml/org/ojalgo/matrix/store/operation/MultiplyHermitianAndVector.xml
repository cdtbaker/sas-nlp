<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.ojalgo.matrix.store.operation">
        <import package="org.ojalgo.constant.PrimitiveMath"/>
        <import package="java.math.BigDecimal"/>
        <import package="org.ojalgo.constant.BigMath"/>
        <import package="org.ojalgo.scalar.ComplexNumber"/>
        <class name="MultiplyHermitianAndVector" line="31">
            <extends class="MatrixOperation"/>
            <javadoc line="31">
                Multiplies an hermitian (square symmetric) matrix with a vector.
                  Will only read from the lower/left triangular part of the matrix,
                  and will only calculate the lower/left part of the results.                
                <author>
                    apete                    
                </author>
            </javadoc>
            <declaration name="THRESHOLD" type="int" line="40"/>
            <method name="invoke" type="void" line="43">
                <params>
                    <param name="productMtrx" type="BigDecimal[]"/>
                    <param name="aFirst" type="int"/>
                    <param name="aLimit" type="int"/>
                    <param name="aSymmetric" type="BigDecimal[]"/>
                    <param name="aVector" type="BigDecimal[]"/>
                    <param name="aFirstNonZero" type="int"/>
                </params>
                <comment line="51">
                    tmpVal += aSymmetric[i + c * tmpRowDim] * aVector[c];                    
                </comment>
                <comment line="55">
                    tmpVal += aSymmetric[c + i * tmpRowDim] * aVector[c];                    
                </comment>
                <declaration name="tmpRowDim" type="int" line="45"/>
                <declaration name="tmpVal" type="BigDecimal" line="47"/>
                <scope line="48">
                    <scope line="50"/>
                    <scope line="54"/>
                </scope>
            </method>
            <method name="invoke" type="void" line="63">
                <params>
                    <param name="productMtrx" type="ComplexNumber[]"/>
                    <param name="aFirst" type="int"/>
                    <param name="aLimit" type="int"/>
                    <param name="aSymmetric" type="ComplexNumber[]"/>
                    <param name="aVector" type="ComplexNumber[]"/>
                    <param name="aFirstNonZero" type="int"/>
                </params>
                <comment line="71">
                    tmpVal += aSymmetric[i + c * tmpRowDim] * aVector[c];                    
                </comment>
                <comment line="75">
                    tmpVal += aSymmetric[c + i * tmpRowDim] * aVector[c];                    
                </comment>
                <declaration name="tmpRowDim" type="int" line="65"/>
                <declaration name="tmpVal" type="ComplexNumber" line="67"/>
                <scope line="68">
                    <scope line="70"/>
                    <scope line="74"/>
                </scope>
            </method>
            <method name="invoke" type="void" line="83">
                <params>
                    <param name="productMtrx" type="double[]"/>
                    <param name="aFirst" type="int"/>
                    <param name="aLimit" type="int"/>
                    <param name="aSymmetric" type="double[]"/>
                    <param name="aVector" type="double[]"/>
                    <param name="aFirstNonZero" type="int"/>
                </params>
                <declaration name="tmpRowDim" type="int" line="85"/>
                <declaration name="tmpVal" type="double" line="87"/>
                <scope line="88">
                    <scope line="90"/>
                    <scope line="93"/>
                </scope>
            </method>
            <method name="MultiplyHermitianAndVector" type="constructor" line="100"/>
        </class>
    </source>