<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.ojalgo.matrix.store.operation">
        <import package="java.math.BigDecimal"/>
        <import package="org.ojalgo.access.Access1D"/>
        <import package="org.ojalgo.concurrent.DivideAndConquer"/>
        <import package="org.ojalgo.constant.BigMath"/>
        <import package="org.ojalgo.constant.PrimitiveMath"/>
        <import package="org.ojalgo.matrix.store.BigDenseStore.BigMultiplyRight"/>
        <import package="org.ojalgo.matrix.store.ComplexDenseStore.ComplexMultiplyRight"/>
        <import package="org.ojalgo.matrix.store.PrimitiveDenseStore.PrimitiveMultiplyRight"/>
        <import package="org.ojalgo.scalar.ComplexNumber"/>
        <class name="MultiplyRight" line="35">
            <extends class="MatrixOperation"/>
            <declaration name="THRESHOLD" type="int" line="37"/>
            <declaration name="BIG" type="BigMultiplyRight" line="39"/>
            <anonymous_class line="39">
                <method name="invoke" type="void" line="41">
                    <params>
                        <param name="product" type="BigDecimal[]"/>
                        <param name="left" type="BigDecimal[]"/>
                        <param name="complexity" type="int"/>
                        <param name="right" type="Access1D<BigDecimal>"/>
                    </params>
                </method>
            </anonymous_class>
            <declaration name="BIG_MT" type="BigMultiplyRight" line="47"/>
            <anonymous_class line="47">
                <method name="invoke" type="void" line="49">
                    <params>
                        <param name="product" type="BigDecimal[]"/>
                        <param name="left" type="BigDecimal[]"/>
                        <param name="complexity" type="int"/>
                        <param name="right" type="Access1D<BigDecimal>"/>
                    </params>
                    <anonymous_class line="51">
                        <method name="conquer" type="void" line="54">
                            <params>
                                <param name="first" type="int"/>
                                <param name="limit" type="int"/>
                            </params>
                        </method>
                    </anonymous_class>
                    <declaration name="tmpConquerer" type="DivideAndConquer" line="51"/>
                </method>
            </anonymous_class>
            <declaration name="COMPLEX" type="ComplexMultiplyRight" line="64"/>
            <anonymous_class line="64">
                <method name="invoke" type="void" line="66">
                    <params>
                        <param name="product" type="ComplexNumber[]"/>
                        <param name="left" type="ComplexNumber[]"/>
                        <param name="complexity" type="int"/>
                        <param name="right" type="Access1D<ComplexNumber>"/>
                    </params>
                </method>
            </anonymous_class>
            <declaration name="COMPLEX_MT" type="ComplexMultiplyRight" line="72"/>
            <anonymous_class line="72">
                <method name="invoke" type="void" line="74">
                    <params>
                        <param name="product" type="ComplexNumber[]"/>
                        <param name="left" type="ComplexNumber[]"/>
                        <param name="complexity" type="int"/>
                        <param name="right" type="Access1D<ComplexNumber>"/>
                    </params>
                    <anonymous_class line="76">
                        <method name="conquer" type="void" line="79">
                            <params>
                                <param name="first" type="int"/>
                                <param name="limit" type="int"/>
                            </params>
                        </method>
                    </anonymous_class>
                    <declaration name="tmpConquerer" type="DivideAndConquer" line="76"/>
                </method>
            </anonymous_class>
            <declaration name="PRIMITIVE" type="PrimitiveMultiplyRight" line="89"/>
            <anonymous_class line="89">
                <method name="invoke" type="void" line="91">
                    <params>
                        <param name="product" type="double[]"/>
                        <param name="left" type="double[]"/>
                        <param name="complexity" type="int"/>
                        <param name="right" type="Access1D<?>"/>
                    </params>
                </method>
            </anonymous_class>
            <declaration name="PRIMITIVE_1X1" type="PrimitiveMultiplyRight" line="97"/>
            <anonymous_class line="97">
                <method name="invoke" type="void" line="99">
                    <params>
                        <param name="product" type="double[]"/>
                        <param name="left" type="double[]"/>
                        <param name="complexity" type="int"/>
                        <param name="right" type="Access1D<?>"/>
                    </params>
                    <comment line="104">
                        The number of rows in the product- and left-matrix.                        
                    </comment>
                    <declaration name="tmp00" type="double" line="101"/>
                    <declaration name="tmpLeftStruct" type="int" line="103"/>
                    <scope line="105"/>
                </method>
            </anonymous_class>
            <declaration name="PRIMITIVE_2X2" type="PrimitiveMultiplyRight" line="114"/>
            <anonymous_class line="114">
                <method name="invoke" type="void" line="116">
                    <params>
                        <param name="product" type="double[]"/>
                        <param name="left" type="double[]"/>
                        <param name="complexity" type="int"/>
                        <param name="right" type="Access1D<?>"/>
                    </params>
                    <comment line="124">
                        The number of rows in the product- and left-matrix.                        
                    </comment>
                    <declaration name="tmp00" type="double" line="118"/>
                    <declaration name="tmp10" type="double" line="119"/>
                    <declaration name="tmp01" type="double" line="120"/>
                    <declaration name="tmp11" type="double" line="121"/>
                    <declaration name="tmpLeftStruct" type="int" line="123"/>
                    <declaration name="tmpIndex" type="int" line="125"/>
                    <scope line="126">
                        <declaration name="tmpLeft0" type="double" line="129"/>
                        <declaration name="tmpLeft1" type="double" line="131"/>
                        <declaration name="tmpRight0" type="double" line="133"/>
                        <declaration name="tmpRight1" type="double" line="135"/>
                    </scope>
                </method>
            </anonymous_class>
            <declaration name="PRIMITIVE_3X3" type="PrimitiveMultiplyRight" line="151"/>
            <anonymous_class line="151">
                <method name="invoke" type="void" line="153">
                    <params>
                        <param name="product" type="double[]"/>
                        <param name="left" type="double[]"/>
                        <param name="complexity" type="int"/>
                        <param name="right" type="Access1D<?>"/>
                    </params>
                    <comment line="166">
                        The number of rows in the product- and left-matrix.                        
                    </comment>
                    <declaration name="tmp00" type="double" line="155"/>
                    <declaration name="tmp10" type="double" line="156"/>
                    <declaration name="tmp20" type="double" line="157"/>
                    <declaration name="tmp01" type="double" line="158"/>
                    <declaration name="tmp11" type="double" line="159"/>
                    <declaration name="tmp21" type="double" line="160"/>
                    <declaration name="tmp02" type="double" line="161"/>
                    <declaration name="tmp12" type="double" line="162"/>
                    <declaration name="tmp22" type="double" line="163"/>
                    <declaration name="tmpLeftStruct" type="int" line="165"/>
                    <declaration name="tmpIndex" type="int" line="167"/>
                    <scope line="168">
                        <declaration name="tmpLeft0" type="double" line="171"/>
                        <declaration name="tmpLeft1" type="double" line="173"/>
                        <declaration name="tmpLeft2" type="double" line="175"/>
                        <declaration name="tmpRight0" type="double" line="177"/>
                        <declaration name="tmpRight1" type="double" line="179"/>
                        <declaration name="tmpRight2" type="double" line="181"/>
                    </scope>
                </method>
            </anonymous_class>
            <declaration name="PRIMITIVE_4X4" type="PrimitiveMultiplyRight" line="207"/>
            <anonymous_class line="207">
                <method name="invoke" type="void" line="209">
                    <params>
                        <param name="product" type="double[]"/>
                        <param name="left" type="double[]"/>
                        <param name="complexity" type="int"/>
                        <param name="right" type="Access1D<?>"/>
                    </params>
                    <comment line="229">
                        The number of rows in the product- and left-matrix.                        
                    </comment>
                    <declaration name="tmp00" type="double" line="211"/>
                    <declaration name="tmp10" type="double" line="212"/>
                    <declaration name="tmp20" type="double" line="213"/>
                    <declaration name="tmp30" type="double" line="214"/>
                    <declaration name="tmp01" type="double" line="215"/>
                    <declaration name="tmp11" type="double" line="216"/>
                    <declaration name="tmp21" type="double" line="217"/>
                    <declaration name="tmp31" type="double" line="218"/>
                    <declaration name="tmp02" type="double" line="219"/>
                    <declaration name="tmp12" type="double" line="220"/>
                    <declaration name="tmp22" type="double" line="221"/>
                    <declaration name="tmp32" type="double" line="222"/>
                    <declaration name="tmp03" type="double" line="223"/>
                    <declaration name="tmp13" type="double" line="224"/>
                    <declaration name="tmp23" type="double" line="225"/>
                    <declaration name="tmp33" type="double" line="226"/>
                    <declaration name="tmpLeftStruct" type="int" line="228"/>
                    <declaration name="tmpIndex" type="int" line="230"/>
                    <scope line="231">
                        <declaration name="tmpLeft0" type="double" line="234"/>
                        <declaration name="tmpLeft1" type="double" line="236"/>
                        <declaration name="tmpLeft2" type="double" line="238"/>
                        <declaration name="tmpLeft3" type="double" line="240"/>
                        <declaration name="tmpRight0" type="double" line="242"/>
                        <declaration name="tmpRight1" type="double" line="244"/>
                        <declaration name="tmpRight2" type="double" line="246"/>
                        <declaration name="tmpRight3" type="double" line="248"/>
                    </scope>
                </method>
            </anonymous_class>
            <declaration name="PRIMITIVE_5X5" type="PrimitiveMultiplyRight" line="288"/>
            <anonymous_class line="288">
                <method name="invoke" type="void" line="290">
                    <params>
                        <param name="product" type="double[]"/>
                        <param name="left" type="double[]"/>
                        <param name="complexity" type="int"/>
                        <param name="right" type="Access1D<?>"/>
                    </params>
                    <comment line="319">
                        The number of rows in the product- and left-matrix.                        
                    </comment>
                    <declaration name="tmp00" type="double" line="292"/>
                    <declaration name="tmp10" type="double" line="293"/>
                    <declaration name="tmp20" type="double" line="294"/>
                    <declaration name="tmp30" type="double" line="295"/>
                    <declaration name="tmp40" type="double" line="296"/>
                    <declaration name="tmp01" type="double" line="297"/>
                    <declaration name="tmp11" type="double" line="298"/>
                    <declaration name="tmp21" type="double" line="299"/>
                    <declaration name="tmp31" type="double" line="300"/>
                    <declaration name="tmp41" type="double" line="301"/>
                    <declaration name="tmp02" type="double" line="302"/>
                    <declaration name="tmp12" type="double" line="303"/>
                    <declaration name="tmp22" type="double" line="304"/>
                    <declaration name="tmp32" type="double" line="305"/>
                    <declaration name="tmp42" type="double" line="306"/>
                    <declaration name="tmp03" type="double" line="307"/>
                    <declaration name="tmp13" type="double" line="308"/>
                    <declaration name="tmp23" type="double" line="309"/>
                    <declaration name="tmp33" type="double" line="310"/>
                    <declaration name="tmp43" type="double" line="311"/>
                    <declaration name="tmp04" type="double" line="312"/>
                    <declaration name="tmp14" type="double" line="313"/>
                    <declaration name="tmp24" type="double" line="314"/>
                    <declaration name="tmp34" type="double" line="315"/>
                    <declaration name="tmp44" type="double" line="316"/>
                    <declaration name="tmpLeftStruct" type="int" line="318"/>
                    <declaration name="tmpIndex" type="int" line="320"/>
                    <scope line="321">
                        <declaration name="tmpLeft0" type="double" line="324"/>
                        <declaration name="tmpLeft1" type="double" line="326"/>
                        <declaration name="tmpLeft2" type="double" line="328"/>
                        <declaration name="tmpLeft3" type="double" line="330"/>
                        <declaration name="tmpLeft4" type="double" line="332"/>
                        <declaration name="tmpRight0" type="double" line="334"/>
                        <declaration name="tmpRight1" type="double" line="336"/>
                        <declaration name="tmpRight2" type="double" line="338"/>
                        <declaration name="tmpRight3" type="double" line="340"/>
                        <declaration name="tmpRight4" type="double" line="342"/>
                    </scope>
                </method>
            </anonymous_class>
            <declaration name="PRIMITIVE_MT" type="PrimitiveMultiplyRight" line="400"/>
            <anonymous_class line="400">
                <method name="invoke" type="void" line="402">
                    <params>
                        <param name="product" type="double[]"/>
                        <param name="left" type="double[]"/>
                        <param name="complexity" type="int"/>
                        <param name="right" type="Access1D<?>"/>
                    </params>
                    <anonymous_class line="404">
                        <method name="conquer" type="void" line="407">
                            <params>
                                <param name="first" type="int"/>
                                <param name="limit" type="int"/>
                            </params>
                        </method>
                    </anonymous_class>
                    <declaration name="tmpConquerer" type="DivideAndConquer" line="404"/>
                </method>
            </anonymous_class>
            <method name="getBig" type="BigMultiplyRight" line="417">
                <params>
                    <param name="rows" type="long"/>
                    <param name="columns" type="long"/>
                </params>
                <scope line="418"/>
                <scope line="420"/>
            </method>
            <method name="getComplex" type="ComplexMultiplyRight" line="425">
                <params>
                    <param name="rows" type="long"/>
                    <param name="columns" type="long"/>
                </params>
                <scope line="426"/>
                <scope line="428"/>
            </method>
            <method name="getPrimitive" type="PrimitiveMultiplyRight" line="433">
                <params>
                    <param name="rows" type="long"/>
                    <param name="columns" type="long"/>
                </params>
                <scope line="434"/>
                <scope line="436"/>
                <scope line="438"/>
                <scope line="440"/>
                <scope line="442"/>
                <scope line="444"/>
                <scope line="446"/>
            </method>
            <method name="invoke" type="void" line="452">
                <params>
                    <param name="product" type="BigDecimal[]"/>
                    <param name="firstColumn" type="int"/>
                    <param name="columnLimit" type="int"/>
                    <param name="left" type="BigDecimal[]"/>
                    <param name="complexity" type="int"/>
                    <param name="right" type="Access1D<BigDecimal>"/>
                </params>
                <declaration name="tmpRowDim" type="int" line="454"/>
                <declaration name="tmpIndexLimit" type="int" line="456"/>
                <scope line="457"/>
                <scope line="461">
                    <scope line="462"/>
                </scope>
            </method>
            <method name="invoke" type="void" line="469">
                <params>
                    <param name="product" type="ComplexNumber[]"/>
                    <param name="firstColumn" type="int"/>
                    <param name="columnLimit" type="int"/>
                    <param name="left" type="ComplexNumber[]"/>
                    <param name="complexity" type="int"/>
                    <param name="right" type="Access1D<ComplexNumber>"/>
                </params>
                <declaration name="tmpRowDim" type="int" line="471"/>
                <declaration name="tmpIndexLimit" type="int" line="473"/>
                <scope line="474"/>
                <scope line="478">
                    <scope line="479"/>
                </scope>
            </method>
            <method name="invoke" type="void" line="485">
                <params>
                    <param name="product" type="double[]"/>
                    <param name="firstColumn" type="int"/>
                    <param name="columnLimit" type="int"/>
                    <param name="left" type="double[]"/>
                    <param name="complexity" type="int"/>
                    <param name="right" type="Access1D<?>"/>
                </params>
                <declaration name="tmpRowDim" type="int" line="487"/>
                <declaration name="tmpIndexLimit" type="int" line="489"/>
                <scope line="490"/>
                <scope line="494">
                    <scope line="495"/>
                </scope>
            </method>
            <method name="MultiplyRight" type="constructor" line="501"/>
        </class>
    </source>