<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.ojalgo.matrix.store">
        <import package="org.ojalgo.ProgrammingError"/>
        <import package="org.ojalgo.access.Access1D"/>
        <import package="org.ojalgo.access.Access2D"/>
        <import package="org.ojalgo.function.UnaryFunction"/>
        <import package="org.ojalgo.function.VoidFunction"/>
        <import package="org.ojalgo.function.aggregator.Aggregator"/>
        <import package="org.ojalgo.scalar.Scalar"/>
        <import package="org.ojalgo.type.context.NumberContext"/>
        <interface name="MatrixStore">
            <type_params>
                <type_param name="N"/>
            </type_params>
            <implements interface="Access2D">
                <type_params>
                    <type_param name="N"/>
                </type_params>
            </implements>
            <javadoc line="10">
                &lt;p&gt;
                  A {@linkplain MatrixStore} extends {@linkplain Access2D} (as well as {@linkplain Access2D.Visitable} and{@linkplain Access2D.Elements}) and defines matrix addition and matrix multiplication.
                  &lt;/p&gt;
                  &lt;p&gt;
                  A {@linkplain MatrixStore} is a matrix (two-dimensional) store of numbers/scalars.
                  &lt;/p&gt;
                  &lt;p&gt;
                  This interface does not define any methods that require implementations to alter the matrix. Either the methods
                  return matrix elements, some meta data or produce new instances.
                  &lt;/p&gt;
                  &lt;p&gt;
                  The methods {@linkplain #conjugate()}, {@linkplain #copy()} and {@linkplain #transpose()} return{@linkplain PhysicalStore} instances. {@linkplain PhysicalStore} extends {@linkplain MatrixStore}. It defines
                  additional methods, and is mutable.
                  &lt;/p&gt;                
                <author>
                    apete                    
                </author>
            </javadoc>
            <class name="Builder" line="28">
                <type_params>
                    <type_param name="N"/>
                </type_params>
                <method name="buildColumn" type="MatrixStore<N>" line="29">
                    <params>
                        <param name="aMinRowDim" type="int"/>
                        <param name="aColStore" type="MatrixStore<N>"/>
                    </params>
                    <declaration name="retVal" type="MatrixStore&lt;N&gt;" line="30"/>
                    <scope line="31"/>
                    <declaration name="tmpRowDim" type="int" line="34"/>
                    <scope line="35"/>
                </method>
                <method name="buildColumn" type="MatrixStore<N>" line="40">
                    <params>
                        <param name="aFactory" type="PhysicalStore.Factory<N,?>"/>
                        <param name="aMinRowDim" type="int"/>
                        <param name="aColStore" type="N"/>
                    </params>
                    <declaration name="retVal" type="MatrixStore&lt;N&gt;" line="41"/>
                    <declaration name="tmpRowDim" type="int" line="42"/>
                    <scope line="43"/>
                </method>
                <method name="buildRow" type="MatrixStore<N>" line="48">
                    <params>
                        <param name="aMinColDim" type="int"/>
                        <param name="aRowStore" type="MatrixStore<N>"/>
                    </params>
                    <declaration name="retVal" type="MatrixStore&lt;N&gt;" line="49"/>
                    <scope line="50"/>
                    <declaration name="tmpColDim" type="int" line="53"/>
                    <scope line="54"/>
                </method>
                <method name="buildRow" type="MatrixStore<N>" line="59">
                    <params>
                        <param name="aFactory" type="PhysicalStore.Factory<N,?>"/>
                        <param name="aMinColDim" type="int"/>
                        <param name="aRowStore" type="N"/>
                    </params>
                    <declaration name="retVal" type="MatrixStore&lt;N&gt;" line="60"/>
                    <declaration name="tmpColDim" type="int" line="61"/>
                    <scope line="62"/>
                </method>
                <declaration name="myStore" type="MatrixStore&lt;N&gt;" line="67"/>
                <method name="Builder" type="constructor" line="68">
                    <params>
                        <param name="matrixStore" type="MatrixStore<N>"/>
                    </params>
                </method>
                <method name="Builder" type="constructor" line="72"/>
                <method name="above" type="Builder<N>" line="76">
                    <params>
                        <param name="aRowDim" type="int"/>
                    </params>
                    <declaration name="tmpUpperStore" type="ZeroStore&lt;N&gt;" line="77"/>
                </method>
                <method name="above" type="Builder<N>" line="81">
                    <params>
                        <param name="upperStore" type="MatrixStore<N>"/>
                    </params>
                    <declaration name="tmpUpperStore" type="MatrixStore&lt;N&gt;" line="82"/>
                </method>
                <method name="above" type="Builder<N>" line="86">
                    <params>
                        <param name="anUpperStore" type="N"/>
                    </params>
                    <declaration name="tmpUpperStore" type="MatrixStore&lt;N&gt;" line="87"/>
                </method>
                <method name="below" type="Builder<N>" line="91">
                    <params>
                        <param name="aRowDim" type="int"/>
                    </params>
                    <declaration name="tmpLowerStore" type="ZeroStore&lt;N&gt;" line="92"/>
                </method>
                <method name="below" type="Builder<N>" line="96">
                    <params>
                        <param name="aLowerStore" type="MatrixStore<N>"/>
                    </params>
                    <declaration name="tmpLowerStore" type="MatrixStore&lt;N&gt;" line="97"/>
                </method>
                <method name="below" type="Builder<N>" line="101">
                    <params>
                        <param name="aLowerStore" type="N"/>
                    </params>
                    <declaration name="tmpLowerStore" type="MatrixStore&lt;N&gt;" line="102"/>
                </method>
                <method name="bidiagonal" type="Builder<N>" line="106">
                    <params>
                        <param name="upper" type="boolean"/>
                        <param name="assumeOne" type="boolean"/>
                    </params>
                    <scope line="107"/>
                    <scope line="110"/>
                </method>
                <method name="build" type="MatrixStore<N>" line="115"/>
                <method name="column" type="Builder<N>" line="118">
                    <params>
                        <param name="aCol" type="int"/>
                    </params>
                </method>
                <method name="columns" type="Builder<N>" line="122">
                    <params>
                        <param name="aFirst" type="int"/>
                        <param name="aLimit" type="int"/>
                    </params>
                </method>
                <method name="conjugate" type="Builder<N>" line="126">
                    <scope line="127"/>
                    <scope line="130"/>
                </method>
                <method name="diagonal" type="Builder<N>" line="135">
                    <params>
                        <param name="assumeOne" type="boolean"/>
                    </params>
                </method>
                <method name="diagonally" type="Builder<N>" line="139">
                    <params>
                        <param name="aDiagonalStore" type="MatrixStore<N>"/>
                    </params>
                    <declaration name="tmpFactory" type="PhysicalStore.Factory&lt;N,?&gt;" line="140"/>
                    <declaration name="tmpDiagonalStore" type="MatrixStore&lt;N&gt;" line="141"/>
                    <scope line="142">
                        <declaration name="tmpBaseRowDim" type="int" line="144"/>
                        <declaration name="tmpBaseColDim" type="int" line="145"/>
                        <declaration name="tmpDiagRowDim" type="int" line="146"/>
                        <declaration name="tmpDiagColDim" type="int" line="147"/>
                        <declaration name="tmpRightStore" type="MatrixStore&lt;N&gt;" line="148"/>
                        <declaration name="tmpAboveStore" type="MatrixStore&lt;N&gt;" line="149"/>
                        <declaration name="tmpLeftStore" type="MatrixStore&lt;N&gt;" line="150"/>
                        <declaration name="tmpBelowStore" type="MatrixStore&lt;N&gt;" line="151"/>
                    </scope>
                </method>
                <method name="hessenberg" type="Builder<N>" line="156">
                    <params>
                        <param name="upper" type="boolean"/>
                    </params>
                    <scope line="157"/>
                    <scope line="160"/>
                </method>
                <method name="left" type="Builder<N>" line="165">
                    <params>
                        <param name="aColDim" type="int"/>
                    </params>
                    <declaration name="tmpLeftStore" type="MatrixStore&lt;N&gt;" line="166"/>
                </method>
                <method name="left" type="Builder<N>" line="170">
                    <params>
                        <param name="aLeftStore" type="MatrixStore<N>"/>
                    </params>
                    <declaration name="tmpLeftStore" type="MatrixStore&lt;N&gt;" line="171"/>
                </method>
                <method name="left" type="Builder<N>" line="175">
                    <params>
                        <param name="aLeftStore" type="N"/>
                    </params>
                    <declaration name="tmpLeftStore" type="MatrixStore&lt;N&gt;" line="176"/>
                </method>
                <method name="modify" type="Builder<N>" line="180">
                    <params>
                        <param name="aFunc" type="UnaryFunction<N>"/>
                    </params>
                </method>
                <method name="right" type="Builder<N>" line="184">
                    <params>
                        <param name="aColDim" type="int"/>
                    </params>
                    <declaration name="tmpRightStore" type="MatrixStore&lt;N&gt;" line="185"/>
                </method>
                <method name="right" type="Builder<N>" line="189">
                    <params>
                        <param name="aRightStore" type="MatrixStore<N>"/>
                    </params>
                    <declaration name="tmpRightStore" type="MatrixStore&lt;N&gt;" line="190"/>
                </method>
                <method name="right" type="Builder<N>" line="194">
                    <params>
                        <param name="aRightStore" type="N"/>
                    </params>
                    <declaration name="tmpRightStore" type="MatrixStore&lt;N&gt;" line="195"/>
                </method>
                <method name="row" type="Builder<N>" line="199">
                    <params>
                        <param name="aRow" type="int"/>
                    </params>
                </method>
                <method name="rows" type="Builder<N>" line="203">
                    <params>
                        <param name="aFirst" type="int"/>
                        <param name="aLimit" type="int"/>
                    </params>
                </method>
                <method name="superimpose" type="Builder<N>" line="207">
                    <params>
                        <param name="aRow" type="int"/>
                        <param name="aCol" type="int"/>
                        <param name="aStore" type="MatrixStore<N>"/>
                    </params>
                </method>
                <method name="superimpose" type="Builder<N>" line="211">
                    <params>
                        <param name="aRow" type="int"/>
                        <param name="aCol" type="int"/>
                        <param name="aStore" type="N"/>
                    </params>
                </method>
                <method name="transpose" type="Builder<N>" line="215">
                    <scope line="216"/>
                    <scope line="219"/>
                </method>
                <method name="triangular" type="Builder<N>" line="224">
                    <params>
                        <param name="upper" type="boolean"/>
                        <param name="assumeOne" type="boolean"/>
                    </params>
                    <scope line="225"/>
                    <scope line="228"/>
                </method>
                <method name="tridiagonal" type="Builder<N>" line="233"/>
            </class>
            <method name="aggregateAll" type="N" line="238"/>
            <method name="builder" type="MatrixStore.Builder<N>" line="239"/>
            <method name="conjugate" type="PhysicalStore<N>" line="240"/>
            <javadoc line="240">
                Each call must produce a new instance.                
                <return>
                    A new conjugated {@linkplain PhysicalStore} copy.                    
                </return>
            </javadoc>
            <method name="copy" type="PhysicalStore<N>" line="245"/>
            <javadoc line="245">
                Each call must produce a new instance.                
                <return>
                    A new {@linkplain PhysicalStore} copy.                    
                </return>
            </javadoc>
            <method name="equals" type="boolean" line="250"/>
            <method name="factory" type="PhysicalStore.Factory<N,?>" line="251"/>
            <method name="getMinDim" type="int" line="252"/>
            <javadoc line="252">
                @deprecated v35                
            </javadoc>
            <method name="isAbsolute" type="boolean" line="256"/>
            <javadoc line="256">
                @see Scalar#isAbsolute()                
            </javadoc>
            <method name="isLowerLeftShaded" type="boolean" line="260"/>
            <javadoc line="260">
                The entries below (left of) the first subdiagonal are zero - effectively an upper Hessenberg matrix.                
                <see>
                    #isUpperRightShaded()                    
                </see>
            </javadoc>
            <method name="isPositive" type="boolean" line="265"/>
            <javadoc line="265">
                @see Scalar#isPositive()                
            </javadoc>
            <method name="isReal" type="boolean" line="269"/>
            <javadoc line="269">
                @see Scalar#isReal()                
            </javadoc>
            <method name="isUpperRightShaded" type="boolean" line="273"/>
            <javadoc line="273">
                The entries above (right of) the first superdiagonal are zero - effectively a lower Hessenberg matrix.                
                <see>
                    #isLowerLeftShaded()                    
                </see>
            </javadoc>
            <method name="isZero" type="boolean" line="278"/>
            <javadoc line="278">
                @see Scalar#isZero()                
            </javadoc>
            <method name="multiplyLeft" type="MatrixStore<N>" line="282"/>
            <method name="multiplyRight" type="MatrixStore<N>" line="283"/>
            <method name="toScalar" type="Scalar<N>" line="284"/>
            <method name="transpose" type="PhysicalStore<N>" line="285"/>
            <javadoc line="285">
                Each call must produce a new instance.                
                <return>
                    A new transposed {@linkplain PhysicalStore} copy.                    
                </return>
            </javadoc>
            <method name="visitAll" type="void" line="290"/>
            <method name="visitColumn" type="void" line="291"/>
            <method name="visitDiagonal" type="void" line="292"/>
            <method name="visitRow" type="void" line="293"/>
        </interface>
    </source>