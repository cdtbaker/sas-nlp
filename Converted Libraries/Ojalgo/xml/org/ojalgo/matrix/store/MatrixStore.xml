<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.ojalgo.matrix.store">
        <import package="org.ojalgo.ProgrammingError"/>
        <import package="org.ojalgo.access.Access1D"/>
        <import package="org.ojalgo.access.Access2D"/>
        <import package="org.ojalgo.function.UnaryFunction"/>
        <import package="org.ojalgo.function.aggregator.Aggregator"/>
        <import package="org.ojalgo.scalar.Scalar"/>
        <import package="org.ojalgo.type.context.NumberContext"/>
        <interface name="MatrixStore">
            <type_params>
                <type_param name="N"/>
            </type_params>
            <implements interface="Access2D">
                <type_params>
                    <type_param name="N"/>
                </type_params>
            </implements>
            <implements interface="Access2D.Visitable">
                <type_params>
                    <type_param name="N"/>
                </type_params>
            </implements>
            <implements interface="Access2D.Elements"/>
            <javadoc line="32">
                &lt;p&gt;
                  A {@linkplain MatrixStore} is a two dimensional store of numbers/scalars.
                  &lt;/p&gt;
                  &lt;p&gt;
                  A {@linkplain MatrixStore} extends {@linkplain Access2D} (as well as {@linkplain Access2D.Visitable} and{@linkplain Access2D.Elements}) and defines some futher funtionality - mainly matrix multiplication.
                  &lt;/p&gt;
                  &lt;p&gt;
                  This interface does not define any methods that require implementations to alter the matrix. Either the methods
                  return matrix elements, some meta data or produce new instances.
                  &lt;/p&gt;
                  &lt;p&gt;
                  The methods {@linkplain #conjugate()}, {@linkplain #copy()} and {@linkplain #transpose()} return{@linkplain PhysicalStore} instances. {@linkplain PhysicalStore} extends {@linkplain MatrixStore}. It defines
                  additional methods, and is mutable.
                  &lt;/p&gt;                
                <author>
                    apete                    
                </author>
            </javadoc>
            <class name="Builder" line="54">
                <type_params>
                    <type_param name="N"/>
                </type_params>
                <method name="buildColumn" type="MatrixStore&lt;N&gt;" line="57">
                    <params>
                        <param name="aMinRowDim" type="int"/>
                        <param name="aColStore" type="MatrixStore&lt;N&gt;"/>
                    </params>
                    <declaration name="retVal" type="MatrixStore&amp;lt;N&amp;gt;" line="58"/>
                    <scope line="59"/>
                    <declaration name="tmpRowDim" type="int" line="62"/>
                    <scope line="63"/>
                </method>
                <method name="buildColumn" type="MatrixStore&lt;N&gt;" line="70">
                    <params>
                        <param name="aFactory" type="PhysicalStore.Factory&lt;N,?&gt;"/>
                        <param name="aMinRowDim" type="int"/>
                        <param name="aColStore" type="N"/>
                    </params>
                    <declaration name="retVal" type="MatrixStore&amp;lt;N&amp;gt;" line="71"/>
                    <declaration name="tmpRowDim" type="int" line="72"/>
                    <scope line="73"/>
                </method>
                <method name="buildRow" type="MatrixStore&lt;N&gt;" line="80">
                    <params>
                        <param name="aMinColDim" type="int"/>
                        <param name="aRowStore" type="MatrixStore&lt;N&gt;"/>
                    </params>
                    <declaration name="retVal" type="MatrixStore&amp;lt;N&amp;gt;" line="81"/>
                    <scope line="82"/>
                    <declaration name="tmpColDim" type="int" line="85"/>
                    <scope line="86"/>
                </method>
                <method name="buildRow" type="MatrixStore&lt;N&gt;" line="93">
                    <params>
                        <param name="aFactory" type="PhysicalStore.Factory&lt;N,?&gt;"/>
                        <param name="aMinColDim" type="int"/>
                        <param name="aRowStore" type="N"/>
                    </params>
                    <declaration name="retVal" type="MatrixStore&amp;lt;N&amp;gt;" line="94"/>
                    <declaration name="tmpColDim" type="int" line="95"/>
                    <scope line="96"/>
                </method>
                <declaration name="myStore" type="MatrixStore&amp;lt;N&amp;gt;" line="102"/>
                <method name="Builder" type="constructor" line="104">
                    <params>
                        <param name="matrixStore" type="MatrixStore&lt;N&gt;"/>
                    </params>
                </method>
                <method name="Builder" type="constructor" line="112"/>
                <method name="above" type="Builder&lt;N&gt;" line="119">
                    <params>
                        <param name="aRowDim" type="int"/>
                    </params>
                    <declaration name="tmpUpperStore" type="ZeroStore&amp;lt;N&amp;gt;" line="120"/>
                </method>
                <method name="above" type="Builder&lt;N&gt;" line="126">
                    <params>
                        <param name="upperStore" type="MatrixStore&lt;N&gt;"/>
                    </params>
                    <declaration name="tmpUpperStore" type="MatrixStore&amp;lt;N&amp;gt;" line="127"/>
                </method>
                <method name="above" type="Builder&lt;N&gt;" line="133">
                    <params>
                        <param name="anUpperStore" type="N"/>
                    </params>
                    <declaration name="tmpUpperStore" type="MatrixStore&amp;lt;N&amp;gt;" line="134"/>
                </method>
                <method name="below" type="Builder&lt;N&gt;" line="139">
                    <params>
                        <param name="aRowDim" type="int"/>
                    </params>
                    <declaration name="tmpLowerStore" type="ZeroStore&amp;lt;N&amp;gt;" line="140"/>
                </method>
                <method name="below" type="Builder&lt;N&gt;" line="146">
                    <params>
                        <param name="aLowerStore" type="MatrixStore&lt;N&gt;"/>
                    </params>
                    <declaration name="tmpLowerStore" type="MatrixStore&amp;lt;N&amp;gt;" line="147"/>
                </method>
                <method name="below" type="Builder&lt;N&gt;" line="153">
                    <params>
                        <param name="aLowerStore" type="N"/>
                    </params>
                    <declaration name="tmpLowerStore" type="MatrixStore&amp;lt;N&amp;gt;" line="154"/>
                </method>
                <method name="bidiagonal" type="Builder&lt;N&gt;" line="159">
                    <params>
                        <param name="upper" type="boolean"/>
                        <param name="assumeOne" type="boolean"/>
                    </params>
                    <scope line="160"/>
                    <scope line="162"/>
                </method>
                <method name="build" type="MatrixStore&lt;N&gt;" line="168"/>
                <method name="column" type="Builder&lt;N&gt;" line="172">
                    <params>
                        <param name="aCol" type="int"/>
                    </params>
                </method>
                <method name="columns" type="Builder&lt;N&gt;" line="177">
                    <params>
                        <param name="aFirst" type="int"/>
                        <param name="aLimit" type="int"/>
                    </params>
                </method>
                <method name="conjugate" type="Builder&lt;N&gt;" line="182">
                    <scope line="183"/>
                    <scope line="185"/>
                </method>
                <method name="copy" type="PhysicalStore&lt;N&gt;" line="191"/>
                <method name="diagonal" type="Builder&lt;N&gt;" line="195">
                    <params>
                        <param name="assumeOne" type="boolean"/>
                    </params>
                </method>
                <method name="diagonally" type="Builder&lt;N&gt;" line="201">
                    <params>
                        <param name="aDiagonalStore" type="MatrixStore&lt;N&gt;"/>
                    </params>
                    <declaration name="tmpFactory" type="PhysicalStore.Factory&amp;lt;N,?&amp;gt;" line="203"/>
                    <declaration name="tmpDiagonalStore" type="MatrixStore&amp;lt;N&amp;gt;" line="205"/>
                    <scope line="206">
                        <declaration name="tmpBaseRowDim" type="int" line="210"/>
                        <declaration name="tmpBaseColDim" type="int" line="211"/>
                        <declaration name="tmpDiagRowDim" type="int" line="213"/>
                        <declaration name="tmpDiagColDim" type="int" line="214"/>
                        <declaration name="tmpRightStore" type="MatrixStore&amp;lt;N&amp;gt;" line="216"/>
                        <declaration name="tmpAboveStore" type="MatrixStore&amp;lt;N&amp;gt;" line="217"/>
                        <declaration name="tmpLeftStore" type="MatrixStore&amp;lt;N&amp;gt;" line="219"/>
                        <declaration name="tmpBelowStore" type="MatrixStore&amp;lt;N&amp;gt;" line="220"/>
                    </scope>
                </method>
                <method name="hessenberg" type="Builder&lt;N&gt;" line="228">
                    <params>
                        <param name="upper" type="boolean"/>
                    </params>
                    <scope line="229"/>
                    <scope line="231"/>
                </method>
                <method name="left" type="Builder&lt;N&gt;" line="237">
                    <params>
                        <param name="aColDim" type="int"/>
                    </params>
                    <declaration name="tmpLeftStore" type="MatrixStore&amp;lt;N&amp;gt;" line="238"/>
                </method>
                <method name="left" type="Builder&lt;N&gt;" line="244">
                    <params>
                        <param name="aLeftStore" type="MatrixStore&lt;N&gt;"/>
                    </params>
                    <declaration name="tmpLeftStore" type="MatrixStore&amp;lt;N&amp;gt;" line="245"/>
                </method>
                <method name="left" type="Builder&lt;N&gt;" line="251">
                    <params>
                        <param name="aLeftStore" type="N"/>
                    </params>
                    <declaration name="tmpLeftStore" type="MatrixStore&amp;lt;N&amp;gt;" line="252"/>
                </method>
                <method name="modify" type="Builder&lt;N&gt;" line="257">
                    <params>
                        <param name="aFunc" type="UnaryFunction&lt;N&gt;"/>
                    </params>
                </method>
                <method name="multiplyLeft" type="Builder&lt;N&gt;" line="262">
                    <params>
                        <param name="leftMtrx" type="Access1D&lt;N&gt;"/>
                    </params>
                </method>
                <method name="multiplyRight" type="Builder&lt;N&gt;" line="267">
                    <params>
                        <param name="rightMtrx" type="Access1D&lt;N&gt;"/>
                    </params>
                </method>
                <method name="negate" type="Builder&lt;N&gt;" line="272"/>
                <method name="right" type="Builder&lt;N&gt;" line="277">
                    <params>
                        <param name="aColDim" type="int"/>
                    </params>
                    <declaration name="tmpRightStore" type="MatrixStore&amp;lt;N&amp;gt;" line="278"/>
                </method>
                <method name="right" type="Builder&lt;N&gt;" line="284">
                    <params>
                        <param name="aRightStore" type="MatrixStore&lt;N&gt;"/>
                    </params>
                    <declaration name="tmpRightStore" type="MatrixStore&amp;lt;N&amp;gt;" line="285"/>
                </method>
                <method name="right" type="Builder&lt;N&gt;" line="291">
                    <params>
                        <param name="aRightStore" type="N"/>
                    </params>
                    <declaration name="tmpRightStore" type="MatrixStore&amp;lt;N&amp;gt;" line="292"/>
                </method>
                <method name="row" type="Builder&lt;N&gt;" line="297">
                    <params>
                        <param name="aRow" type="int"/>
                    </params>
                </method>
                <method name="rows" type="Builder&lt;N&gt;" line="302">
                    <params>
                        <param name="aFirst" type="int"/>
                        <param name="aLimit" type="int"/>
                    </params>
                </method>
                <method name="scale" type="Builder&lt;N&gt;" line="307">
                    <params>
                        <param name="scalar" type="N"/>
                    </params>
                </method>
                <method name="superimpose" type="Builder&lt;N&gt;" line="312">
                    <params>
                        <param name="aRow" type="int"/>
                        <param name="aCol" type="int"/>
                        <param name="aStore" type="MatrixStore&lt;N&gt;"/>
                    </params>
                </method>
                <method name="superimpose" type="Builder&lt;N&gt;" line="317">
                    <params>
                        <param name="aRow" type="int"/>
                        <param name="aCol" type="int"/>
                        <param name="aStore" type="N"/>
                    </params>
                </method>
                <method name="superimpose" type="Builder&lt;N&gt;" line="322">
                    <params>
                        <param name="aStore" type="MatrixStore&lt;N&gt;"/>
                    </params>
                </method>
                <method name="toString" type="String" line="328"/>
                <method name="transpose" type="Builder&lt;N&gt;" line="332">
                    <scope line="333"/>
                    <scope line="335"/>
                </method>
                <method name="triangular" type="Builder&lt;N&gt;" line="341">
                    <params>
                        <param name="upper" type="boolean"/>
                        <param name="assumeOne" type="boolean"/>
                    </params>
                    <scope line="342"/>
                    <scope line="344"/>
                </method>
                <method name="tridiagonal" type="Builder&lt;N&gt;" line="350"/>
            </class>
            <method name="add" type="MatrixStore&lt;N&gt;" line="357"/>
            <method name="aggregateAll" type="N" line="359"/>
            <method name="builder" type="MatrixStore.Builder&lt;N&gt;" line="361"/>
            <method name="conjugate" type="MatrixStore&lt;N&gt;" line="363"/>
            <javadoc line="363">
                Each call must produce a new instance.                
                <return>
                    A new conjugated instance.                    
                </return>
            </javadoc>
            <method name="copy" type="PhysicalStore&lt;N&gt;" line="370"/>
            <javadoc line="370">
                Each call must produce a new instance.                
                <return>
                    A new {@linkplain PhysicalStore} copy.                    
                </return>
            </javadoc>
            <method name="equals" type="boolean" line="377"/>
            <method name="factory" type="PhysicalStore.Factory&lt;N,?&gt;" line="379"/>
            <method name="isLowerLeftShaded" type="boolean" line="381"/>
            <javadoc line="381">
                The entries below (left of) the first subdiagonal are zero - effectively an upper Hessenberg matrix.                
                <see>
                    #isUpperRightShaded()                    
                </see>
            </javadoc>
            <method name="isUpperRightShaded" type="boolean" line="388"/>
            <javadoc line="388">
                The entries above (right of) the first superdiagonal are zero - effectively a lower Hessenberg matrix.                
                <see>
                    #isLowerLeftShaded()                    
                </see>
            </javadoc>
            <method name="multiplyLeft" type="MatrixStore&lt;N&gt;" line="395"/>
            <method name="multiplyRight" type="MatrixStore&lt;N&gt;" line="397"/>
            <method name="negate" type="MatrixStore&lt;N&gt;" line="399"/>
            <method name="scale" type="MatrixStore&lt;N&gt;" line="401"/>
            <method name="subtract" type="MatrixStore&lt;N&gt;" line="403"/>
            <method name="toScalar" type="Scalar&lt;N&gt;" line="405"/>
            <method name="transpose" type="MatrixStore&lt;N&gt;" line="407"/>
            <javadoc line="407">
                Each call must produce a new instance.                
                <return>
                    A new transposed instance.                    
                </return>
            </javadoc>
        </interface>
    </source>