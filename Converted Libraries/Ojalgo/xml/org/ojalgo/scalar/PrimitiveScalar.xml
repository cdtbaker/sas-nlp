<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.ojalgo.scalar">
        <import package="java.math.BigDecimal"/>
        <import package="java.math.MathContext"/>
        <import package="org.ojalgo.constant.PrimitiveMath"/>
        <import package="org.ojalgo.type.context.NumberContext"/>
        <import package="org.ojalgo.type.context.NumberContext.Enforceable"/>
        <class name="PrimitiveScalar" line="31">
            <extends class="AbstractScalar">
                <type_params>
                    <type_param name="Double"/>
                </type_params>
            </extends>
            <implements interface="Enforceable">
                <type_params>
                    <type_param name="PrimitiveScalar"/>
                </type_params>
            </implements>
            <declaration name="FACTORY" type="Scalar.Factory&amp;lt;Double&amp;gt;" line="33"/>
            <anonymous_class line="33">
                <method name="cast" type="Double" line="35">
                    <params>
                        <param name="value" type="double"/>
                    </params>
                </method>
                <method name="cast" type="Double" line="39">
                    <params>
                        <param name="number" type="Number"/>
                    </params>
                </method>
                <method name="convert" type="PrimitiveScalar" line="43">
                    <params>
                        <param name="value" type="double"/>
                    </params>
                </method>
                <method name="convert" type="PrimitiveScalar" line="47">
                    <params>
                        <param name="number" type="Number"/>
                    </params>
                </method>
                <method name="one" type="PrimitiveScalar" line="51"/>
                <method name="zero" type="PrimitiveScalar" line="55"/>
            </anonymous_class>
            <declaration name="IS_REAL" type="boolean" line="61"/>
            <declaration name="NaN" type="PrimitiveScalar" line="62"/>
            <declaration name="NEGATIVE_INFINITY" type="PrimitiveScalar" line="63"/>
            <declaration name="ONE" type="PrimitiveScalar" line="64"/>
            <declaration name="POSITIVE_INFINITY" type="PrimitiveScalar" line="65"/>
            <declaration name="PRECISION" type="NumberContext" line="66"/>
            <declaration name="ZERO" type="PrimitiveScalar" line="67"/>
            <method name="isAbsolute" type="boolean" line="69">
                <params>
                    <param name="value" type="double"/>
                </params>
            </method>
            <method name="isInfinite" type="boolean" line="73">
                <params>
                    <param name="value" type="double"/>
                </params>
            </method>
            <method name="isNaN" type="boolean" line="77">
                <params>
                    <param name="value" type="double"/>
                </params>
            </method>
            <method name="isPositive" type="boolean" line="81">
                <params>
                    <param name="value" type="double"/>
                </params>
            </method>
            <method name="isZero" type="boolean" line="85">
                <params>
                    <param name="value" type="double"/>
                </params>
            </method>
            <declaration name="myValue" type="double" line="89"/>
            <method name="PrimitiveScalar" type="constructor" line="91">
                <params>
                    <param name="aVal" type="double"/>
                </params>
            </method>
            <method name="PrimitiveScalar" type="constructor" line="98">
                <params>
                    <param name="aNmbr" type="Number"/>
                </params>
            </method>
            <method name="PrimitiveScalar" type="constructor" line="106"/>
            <method name="add" type="Scalar&lt;Double&gt;" line="113">
                <params>
                    <param name="arg" type="double"/>
                </params>
            </method>
            <method name="add" type="PrimitiveScalar" line="117">
                <params>
                    <param name="arg" type="Double"/>
                </params>
            </method>
            <method name="compareTo" type="int" line="121">
                <params>
                    <param name="reference" type="Double"/>
                </params>
            </method>
            <method name="conjugate" type="PrimitiveScalar" line="125"/>
            <method name="divide" type="PrimitiveScalar" line="129">
                <params>
                    <param name="arg" type="double"/>
                </params>
            </method>
            <method name="divide" type="PrimitiveScalar" line="133">
                <params>
                    <param name="arg" type="Double"/>
                </params>
            </method>
            <method name="doubleValue" type="double" line="138"/>
            <method name="enforce" type="PrimitiveScalar" line="142">
                <params>
                    <param name="context" type="NumberContext"/>
                </params>
            </method>
            <method name="equals" type="boolean" line="147">
                <params>
                    <param name="obj" type="Object"/>
                </params>
                <scope line="148"/>
                <scope line="151"/>
                <scope line="154"/>
                <declaration name="other" type="double" line="157"/>
                <scope line="158"/>
            </method>
            <method name="floatValue" type="float" line="165"/>
            <method name="getNumber" type="Double" line="169"/>
            <method name="hashCode" type="int" line="174">
                <declaration name="prime" type="int" line="175"/>
                <declaration name="result" type="int" line="176"/>
                <declaration name="temp" type="long" line="177"/>
            </method>
            <method name="intValue" type="int" line="184"/>
            <method name="invert" type="PrimitiveScalar" line="188"/>
            <method name="isAbsolute" type="boolean" line="192"/>
            <method name="isInfinite" type="boolean" line="196"/>
            <method name="isNaN" type="boolean" line="200"/>
            <method name="isPositive" type="boolean" line="204"/>
            <method name="isReal" type="boolean" line="208"/>
            <method name="isZero" type="boolean" line="212"/>
            <method name="longValue" type="long" line="217"/>
            <method name="multiply" type="PrimitiveScalar" line="221">
                <params>
                    <param name="arg" type="double"/>
                </params>
            </method>
            <method name="multiply" type="PrimitiveScalar" line="225">
                <params>
                    <param name="arg" type="Double"/>
                </params>
            </method>
            <method name="negate" type="PrimitiveScalar" line="229"/>
            <method name="norm" type="double" line="233"/>
            <method name="signum" type="PrimitiveScalar" line="237"/>
            <method name="subtract" type="PrimitiveScalar" line="241">
                <params>
                    <param name="arg" type="double"/>
                </params>
            </method>
            <method name="subtract" type="PrimitiveScalar" line="245">
                <params>
                    <param name="arg" type="Double"/>
                </params>
            </method>
            <method name="toBigDecimal" type="BigDecimal" line="249"/>
            <method name="toString" type="String" line="254"/>
            <method name="toString" type="String" line="258">
                <params>
                    <param name="context" type="NumberContext"/>
                </params>
            </method>
        </class>
    </source>