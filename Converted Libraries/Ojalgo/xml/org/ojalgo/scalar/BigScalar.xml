<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.ojalgo.scalar">
        <import package="java.math.BigDecimal"/>
        <import package="java.math.MathContext"/>
        <import package="org.ojalgo.constant.BigMath"/>
        <import package="org.ojalgo.function.BigFunction"/>
        <import package="org.ojalgo.type.TypeUtils"/>
        <import package="org.ojalgo.type.context.NumberContext"/>
        <import package="org.ojalgo.type.context.NumberContext.Enforceable"/>
        <class name="BigScalar" line="33">
            <extends class="AbstractScalar">
                <type_params>
                    <type_param name="BigDecimal"/>
                </type_params>
            </extends>
            <implements interface="Enforceable">
                <type_params>
                    <type_param name="BigScalar"/>
                </type_params>
            </implements>
            <declaration name="FACTORY" type="Scalar.Factory&lt;BigDecimal&gt;" line="35"/>
            <anonymous_class line="35">
                <method name="cast" type="BigDecimal" line="37">
                    <params>
                        <param name="value" type="double"/>
                    </params>
                </method>
                <method name="cast" type="BigDecimal" line="41">
                    <params>
                        <param name="number" type="Number"/>
                    </params>
                </method>
                <method name="convert" type="BigScalar" line="45">
                    <params>
                        <param name="value" type="double"/>
                    </params>
                </method>
                <method name="convert" type="BigScalar" line="49">
                    <params>
                        <param name="number" type="Number"/>
                    </params>
                </method>
                <method name="one" type="BigScalar" line="53"/>
                <method name="zero" type="BigScalar" line="57"/>
            </anonymous_class>
            <declaration name="IS_INFINITE" type="boolean" line="63"/>
            <declaration name="IS_NOT_A_NUMBER" type="boolean" line="64"/>
            <declaration name="IS_REAL" type="boolean" line="65"/>
            <declaration name="ONE" type="BigScalar" line="67"/>
            <declaration name="ZERO" type="BigScalar" line="68"/>
            <declaration name="MATH" type="MathContext" line="70"/>
            <method name="isAbsolute" type="boolean" line="72">
                <params>
                    <param name="value" type="BigDecimal"/>
                </params>
            </method>
            <method name="isPositive" type="boolean" line="76">
                <params>
                    <param name="value" type="BigDecimal"/>
                </params>
            </method>
            <method name="isZero" type="boolean" line="80">
                <params>
                    <param name="value" type="BigDecimal"/>
                </params>
            </method>
            <declaration name="myNumber" type="BigDecimal" line="84"/>
            <method name="BigScalar" type="constructor" line="86">
                <params>
                    <param name="aNmbr" type="BigDecimal"/>
                </params>
            </method>
            <method name="BigScalar" type="constructor" line="93">
                <params>
                    <param name="aNmbr" type="Number"/>
                </params>
            </method>
            <method name="BigScalar" type="constructor" line="100"/>
            <method name="add" type="BigScalar" line="107">
                <params>
                    <param name="arg" type="BigDecimal"/>
                </params>
            </method>
            <method name="add" type="BigScalar" line="111">
                <params>
                    <param name="arg" type="double"/>
                </params>
            </method>
            <method name="compareTo" type="int" line="115">
                <params>
                    <param name="reference" type="BigDecimal"/>
                </params>
            </method>
            <method name="conjugate" type="BigScalar" line="119"/>
            <method name="divide" type="BigScalar" line="123">
                <params>
                    <param name="arg" type="BigDecimal"/>
                </params>
            </method>
            <method name="divide" type="Scalar<BigDecimal>" line="127">
                <params>
                    <param name="arg" type="double"/>
                </params>
            </method>
            <method name="doubleValue" type="double" line="132"/>
            <method name="enforce" type="BigScalar" line="136">
                <params>
                    <param name="context" type="NumberContext"/>
                </params>
            </method>
            <method name="equals" type="boolean" line="141">
                <params>
                    <param name="obj" type="Object"/>
                </params>
                <scope line="142"/>
                <scope line="145"/>
                <scope line="148"/>
                <declaration name="other" type="BigDecimal" line="151"/>
                <scope line="152">
                    <scope line="153"/>
                </scope>
                <scope line="156"/>
            </method>
            <method name="floatValue" type="float" line="163"/>
            <method name="getNumber" type="BigDecimal" line="167"/>
            <method name="hashCode" type="int" line="172">
                <declaration name="prime" type="int" line="173"/>
                <declaration name="result" type="int" line="174"/>
            </method>
            <method name="intValue" type="int" line="180"/>
            <method name="invert" type="BigScalar" line="184"/>
            <method name="isAbsolute" type="boolean" line="188"/>
            <method name="isInfinite" type="boolean" line="192"/>
            <method name="isNaN" type="boolean" line="196"/>
            <method name="isPositive" type="boolean" line="200"/>
            <method name="isReal" type="boolean" line="204"/>
            <method name="isZero" type="boolean" line="208"/>
            <method name="longValue" type="long" line="213"/>
            <method name="multiply" type="BigScalar" line="217">
                <params>
                    <param name="arg" type="BigDecimal"/>
                </params>
            </method>
            <method name="multiply" type="Scalar<BigDecimal>" line="221">
                <params>
                    <param name="arg" type="double"/>
                </params>
            </method>
            <method name="negate" type="BigScalar" line="225"/>
            <method name="norm" type="double" line="229"/>
            <method name="signum" type="BigScalar" line="233"/>
            <method name="subtract" type="BigScalar" line="237">
                <params>
                    <param name="arg" type="BigDecimal"/>
                </params>
            </method>
            <method name="subtract" type="Scalar<BigDecimal>" line="241">
                <params>
                    <param name="arg" type="double"/>
                </params>
            </method>
            <method name="toBigDecimal" type="BigDecimal" line="245"/>
            <method name="toString" type="String" line="250"/>
            <method name="toString" type="String" line="254">
                <params>
                    <param name="context" type="NumberContext"/>
                </params>
            </method>
        </class>
    </source>