<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.ojalgo.scalar">
        <import package="java.math.BigDecimal"/>
        <import package="java.math.MathContext"/>
        <import package="org.ojalgo.constant.BigMath"/>
        <import package="org.ojalgo.function.BigFunction"/>
        <import package="org.ojalgo.type.TypeUtils"/>
        <import package="org.ojalgo.type.context.NumberContext"/>
        <import package="org.ojalgo.type.context.NumberContext.Enforceable"/>
        <class name="BigScalar" line="33">
            <extends class="AbstractScalar">
                <type_params>
                    <type_param name="BigDecimal"/>
                </type_params>
            </extends>
            <implements interface="Enforceable">
                <type_params>
                    <type_param name="BigScalar"/>
                </type_params>
            </implements>
            <declaration name="FACTORY" type="Scalar.Factory&amp;lt;BigDecimal&amp;gt;" line="35"/>
            <anonymous_class line="35">
                <method name="cast" type="BigDecimal" line="37">
                    <params>
                        <param name="value" type="double"/>
                    </params>
                </method>
                <method name="cast" type="BigDecimal" line="41">
                    <params>
                        <param name="number" type="Number"/>
                    </params>
                </method>
                <method name="convert" type="BigScalar" line="45">
                    <params>
                        <param name="value" type="double"/>
                    </params>
                </method>
                <method name="convert" type="BigScalar" line="49">
                    <params>
                        <param name="number" type="Number"/>
                    </params>
                </method>
                <method name="one" type="BigScalar" line="53"/>
                <method name="zero" type="BigScalar" line="57"/>
            </anonymous_class>
            <declaration name="IS_INFINITE" type="boolean" line="63"/>
            <declaration name="IS_NOT_A_NUMBER" type="boolean" line="64"/>
            <declaration name="IS_REAL" type="boolean" line="65"/>
            <declaration name="ONE" type="BigScalar" line="66"/>
            <declaration name="PRECISION" type="NumberContext" line="67"/>
            <declaration name="ZERO" type="BigScalar" line="68"/>
            <method name="isAbsolute" type="boolean" line="70">
                <params>
                    <param name="value" type="BigDecimal"/>
                </params>
            </method>
            <method name="isPositive" type="boolean" line="74">
                <params>
                    <param name="value" type="BigDecimal"/>
                </params>
            </method>
            <method name="isZero" type="boolean" line="78">
                <params>
                    <param name="value" type="BigDecimal"/>
                </params>
            </method>
            <declaration name="myNumber" type="BigDecimal" line="82"/>
            <method name="BigScalar" type="constructor" line="84">
                <params>
                    <param name="aNmbr" type="BigDecimal"/>
                </params>
            </method>
            <method name="BigScalar" type="constructor" line="91">
                <params>
                    <param name="aNmbr" type="Number"/>
                </params>
            </method>
            <method name="BigScalar" type="constructor" line="98"/>
            <method name="add" type="BigScalar" line="105">
                <params>
                    <param name="arg" type="BigDecimal"/>
                </params>
            </method>
            <method name="add" type="BigScalar" line="109">
                <params>
                    <param name="arg" type="double"/>
                </params>
            </method>
            <method name="compareTo" type="int" line="113">
                <params>
                    <param name="reference" type="BigDecimal"/>
                </params>
            </method>
            <method name="conjugate" type="BigScalar" line="117"/>
            <method name="divide" type="BigScalar" line="121">
                <params>
                    <param name="arg" type="BigDecimal"/>
                </params>
            </method>
            <method name="divide" type="Scalar&lt;BigDecimal&gt;" line="125">
                <params>
                    <param name="arg" type="double"/>
                </params>
            </method>
            <method name="doubleValue" type="double" line="130"/>
            <method name="enforce" type="BigScalar" line="134">
                <params>
                    <param name="context" type="NumberContext"/>
                </params>
            </method>
            <method name="equals" type="boolean" line="139">
                <params>
                    <param name="obj" type="Object"/>
                </params>
                <scope line="140"/>
                <scope line="143"/>
                <scope line="146"/>
                <declaration name="other" type="BigDecimal" line="149"/>
                <scope line="150">
                    <scope line="151"/>
                </scope>
                <scope line="154"/>
            </method>
            <method name="floatValue" type="float" line="161"/>
            <method name="getNumber" type="BigDecimal" line="165"/>
            <method name="hashCode" type="int" line="170">
                <declaration name="prime" type="int" line="171"/>
                <declaration name="result" type="int" line="172"/>
            </method>
            <method name="intValue" type="int" line="178"/>
            <method name="invert" type="BigScalar" line="182"/>
            <method name="isAbsolute" type="boolean" line="186"/>
            <method name="isInfinite" type="boolean" line="190"/>
            <method name="isNaN" type="boolean" line="194"/>
            <method name="isPositive" type="boolean" line="198"/>
            <method name="isReal" type="boolean" line="202"/>
            <method name="isZero" type="boolean" line="206"/>
            <method name="longValue" type="long" line="211"/>
            <method name="multiply" type="BigScalar" line="215">
                <params>
                    <param name="arg" type="BigDecimal"/>
                </params>
            </method>
            <method name="multiply" type="Scalar&lt;BigDecimal&gt;" line="219">
                <params>
                    <param name="arg" type="double"/>
                </params>
            </method>
            <method name="negate" type="BigScalar" line="223"/>
            <method name="norm" type="double" line="227"/>
            <method name="signum" type="BigScalar" line="231"/>
            <method name="subtract" type="BigScalar" line="235">
                <params>
                    <param name="arg" type="BigDecimal"/>
                </params>
            </method>
            <method name="subtract" type="Scalar&lt;BigDecimal&gt;" line="239">
                <params>
                    <param name="arg" type="double"/>
                </params>
            </method>
            <method name="toBigDecimal" type="BigDecimal" line="243"/>
            <method name="toString" type="String" line="248"/>
            <method name="toString" type="String" line="252">
                <params>
                    <param name="context" type="NumberContext"/>
                </params>
            </method>
        </class>
    </source>