<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.ojalgo.optimisation.convex">
        <import package="org.ojalgo.constant.PrimitiveMath"/>
        <import package="java.util.HashSet"/>
        <import package="org.ojalgo.constant.PrimitiveMath"/>
        <import package="org.ojalgo.function.PrimitiveFunction"/>
        <import package="org.ojalgo.function.aggregator.Aggregator"/>
        <import package="org.ojalgo.matrix.store.AboveBelowStore"/>
        <import package="org.ojalgo.matrix.store.IdentityStore"/>
        <import package="org.ojalgo.matrix.store.MatrixStore"/>
        <import package="org.ojalgo.matrix.store.PhysicalStore"/>
        <import package="org.ojalgo.matrix.store.RowsStore"/>
        <import package="org.ojalgo.matrix.store.ZeroStore"/>
        <import package="org.ojalgo.optimisation.ExpressionsBasedModel"/>
        <import package="org.ojalgo.optimisation.ModelEntity"/>
        <import package="org.ojalgo.optimisation.Optimisation"/>
        <import package="org.ojalgo.optimisation.convex.KKTSolver.Input"/>
        <import package="org.ojalgo.optimisation.convex.KKTSolver.Output"/>
        <import package="org.ojalgo.optimisation.linear.LinearSolver"/>
        <import package="org.ojalgo.type.IndexSelector"/>
        <class name="ActiveSetSolver" line="45">
            <extends class="ConvexSolver"/>
            <javadoc line="45">
                Solves optimisation problems of the form:
                  &lt;p&gt;
                  min 1/2 [X]&lt;sup&gt;T&lt;/sup&gt;[Q][X] - [C]&lt;sup&gt;T&lt;/sup&gt;[X]&lt;br&gt;
                  when [AE][X] == [BE]&lt;br&gt;
                  and [AI][X] &lt;= [BI]
                  &lt;/p&gt;                
                <author>
                    apete                    
                </author>
            </javadoc>
            <declaration name="myActivator" type="IndexSelector" line="57"/>
            <declaration name="myConstraintToInclude" type="int" line="59"/>
            <method name="ActiveSetSolver" type="constructor" line="61">
                <params>
                    <param name="aModel" type="ExpressionsBasedModel"/>
                    <param name="solverOptions" type="Optimisation.Options"/>
                    <param name="aBuilder" type="ConvexSolver.Builder"/>
                </params>
                <comment line="78">
                    BasicLogger.logDebug(&quot;AS solver innequalities: &quot; + this.countInequalityConstraints());                    
                </comment>
                <scope line="65"/>
                <scope line="67"/>
                <declaration name="tmpIterationsLimit" type="int" line="71"/>
            </method>
            <method name="isFeasible" type="boolean" line="80">
                <params>
                    <param name="onlyExcluded" type="boolean"/>
                </params>
                <declaration name="retVal" type="boolean" line="82"/>
                <scope line="84">
                    <declaration name="tmpSE" type="MatrixStore&amp;lt;Double&amp;gt;" line="86"/>
                    <scope line="87">
                        <declaration name="tmpVal" type="double" line="88"/>
                        <scope line="89"/>
                    </scope>
                    <declaration name="tmpSIincl" type="MatrixStore&amp;lt;Double&amp;gt;" line="94"/>
                    <scope line="95">
                        <declaration name="tmpVal" type="double" line="96"/>
                        <scope line="97"/>
                    </scope>
                </scope>
                <declaration name="tmpSIexcl" type="MatrixStore&amp;lt;Double&amp;gt;" line="103"/>
                <scope line="104">
                    <declaration name="tmpVal" type="double" line="105"/>
                    <scope line="106"/>
                </scope>
            </method>
            <javadoc line="114">
                Find the minimum (largest negative) lagrange multiplier - for the active inequalities - to potentially
                  deactivate.                
            </javadoc>
            <method name="suggestConstraintToExclude" type="int" line="118">
                <declaration name="retVal" type="int" line="120"/>
                <declaration name="tmpIncluded" type="int[]" line="122"/>
                <declaration name="tmpLastIncluded" type="int" line="123"/>
                <declaration name="tmpIndexOfLast" type="int" line="124"/>
                <declaration name="tmpMin" type="double" line="126"/>
                <declaration name="tmpVal" type="double" line="127"/>
                <declaration name="tmpLI" type="MatrixStore&amp;lt;Double&amp;gt;" line="129"/>
                <scope line="131"/>
                <scope line="135">
                    <scope line="137">
                        <scope line="141">
                            <scope line="144"/>
                        </scope>
                    </scope>
                    <scope line="149"/>
                </scope>
                <scope line="155">
                    <scope line="159">
                        <scope line="162"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="171">
                Find minimum (largest negative) slack - for the inactive inequalities - to potentially activate. Negative slack
                  means the constraint is violated. Need to make sure it is enforced by activating it.                
            </javadoc>
            <method name="suggestConstraintToInclude" type="int" line="175"/>
            <method name="buildResult" type="Result" line="180">
                <comment line="189">
                    BasicLogger.logDebug(&quot;A S Iterations: &quot; + this.countIterations());                    
                </comment>
                <declaration name="retVal" type="Result" line="182"/>
                <declaration name="tmpModel" type="ExpressionsBasedModel" line="184"/>
                <scope line="186">
                    <declaration name="tmpActiveInequalityEntities" type="HashSet&amp;lt;ModelEntity&amp;lt;?&amp;gt;&amp;gt;" line="190"/>
                    <declaration name="tmpInequalityEntities" type="ModelEntity&amp;lt;?&amp;gt;[]" line="192"/>
                    <declaration name="tmpActiveIndeces" type="int[]" line="193"/>
                    <scope line="195"/>
                </scope>
            </method>
            <method name="extractSolution" type="MatrixStore&lt;Double&gt;" line="206"/>
            <method name="initialise" type="boolean" line="211">
                <params>
                    <param name="kickStarter" type="Result"/>
                </params>
                <comment line="239">
                    for (int i = 0; i &lt; tmpC.countRows(); i++) {
                                        final double tmpNumer = tmpC.doubleValue(i);
                                        final double tmpDenom = tmpQ.doubleValue(i, i);
                                        if (options.problem.isZero(tmpDenom)) {
                                            this.setX(i, 0.0);
                                        } else {
                                            this.setX(i, tmpNumer / tmpDenom);
                                        }
                                    }                    
                </comment>
                <declaration name="tmpQ" type="MatrixStore&amp;lt;Double&amp;gt;" line="213"/>
                <declaration name="tmpC" type="MatrixStore&amp;lt;Double&amp;gt;" line="214"/>
                <declaration name="tmpAE" type="MatrixStore&amp;lt;Double&amp;gt;" line="215"/>
                <declaration name="tmpBE" type="MatrixStore&amp;lt;Double&amp;gt;" line="216"/>
                <declaration name="tmpAI" type="MatrixStore&amp;lt;Double&amp;gt;" line="217"/>
                <declaration name="tmpBI" type="MatrixStore&amp;lt;Double&amp;gt;" line="218"/>
                <declaration name="tmpFeasible" type="boolean" line="222"/>
                <scope line="224"/>
                <scope line="228">
                    <declaration name="tmpUnconstrInput" type="KKTSolver.Input" line="230"/>
                    <declaration name="tmpUnconstrSolver" type="KKTSolver" line="231"/>
                    <declaration name="tmpUnconstrOutput" type="Output" line="232"/>
                    <scope line="234"/>
                    <scope line="237"/>
                </scope>
                <scope line="252">
                    <declaration name="tmpLinearC" type="MatrixStore&amp;lt;Double&amp;gt;" line="254"/>
                    <declaration name="tmpNumberOfVariables" type="int" line="256"/>
                    <declaration name="tmpNumberOfEqualities" type="int" line="257"/>
                    <declaration name="tmpNumberOfInequalities" type="int" line="258"/>
                    <declaration name="tmpLinBuilder" type="LinearSolver.Builder" line="260"/>
                    <declaration name="tmpLinearAE" type="MatrixStore&amp;lt;Double&amp;gt;" line="263"/>
                    <declaration name="tmpLinearBE" type="MatrixStore&amp;lt;Double&amp;gt;" line="264"/>
                    <scope line="266"/>
                    <scope line="271">
                        <declaration name="tmpLinAI" type="MatrixStore&amp;lt;Double&amp;gt;" line="272"/>
                        <scope line="273"/>
                        <scope line="276"/>
                    </scope>
                    <scope line="282">
                        <declaration name="tmpCopyAE" type="PhysicalStore&amp;lt;Double&amp;gt;" line="284"/>
                        <declaration name="tmpCopyBE" type="PhysicalStore&amp;lt;Double&amp;gt;" line="285"/>
                        <scope line="287">
                            <scope line="288"/>
                        </scope>
                    </scope>
                    <declaration name="tmpLinearSolver" type="LinearSolver" line="297"/>
                    <declaration name="tmpLinearResult" type="Result" line="299"/>
                    <scope line="303"/>
                </scope>
                <scope line="308">
                    <scope line="312"/>
                    <declaration name="tmpIncluded" type="int[]" line="316"/>
                    <declaration name="tmpSIincl" type="MatrixStore&amp;lt;Double&amp;gt;" line="317"/>
                    <scope line="318">
                        <declaration name="tmpVal" type="double" line="319"/>
                        <scope line="320"/>
                    </scope>
                    <declaration name="tmpExcluded" type="int[]" line="325"/>
                    <declaration name="tmpSIexcl" type="MatrixStore&amp;lt;Double&amp;gt;" line="326"/>
                    <scope line="327">
                        <declaration name="tmpVal" type="double" line="328"/>
                        <scope line="329"/>
                    </scope>
                </scope>
                <scope line="334"/>
                <scope line="341">
                    <scope line="343"/>
                    <scope line="346"/>
                </scope>
            </method>
            <method name="needsAnotherIteration" type="boolean" line="356">
                <comment line="381">
                    Suggested to do nothing                    
                </comment>
                <comment line="385">
                    Only suggested to include                    
                </comment>
                <comment line="392">
                    Only suggested to exclude                    
                </comment>
                <comment line="397">
                    Suggested both to exclude and include                    
                </comment>
                <scope line="358"/>
                <declaration name="tmpToInclude" type="int" line="363"/>
                <declaration name="tmpToExclude" type="int" line="364"/>
                <scope line="366">
                    <scope line="368"/>
                </scope>
                <scope line="373"/>
                <scope line="378">
                    <scope line="379"/>
                    <scope line="383"/>
                </scope>
                <scope line="389">
                    <scope line="390"/>
                    <scope line="395"/>
                </scope>
            </method>
            <method name="performIteration" type="void" line="407">
                <comment line="428">
                    Subproblem solved successfully                    
                </comment>
                <comment line="440">
                    Non-zero solution                    
                </comment>
                <comment line="479">
                    Zero solution                    
                </comment>
                <comment line="495">
                    Subproblem NOT solved successfully
                     At least 1 active inequality                    
                </comment>
                <comment line="507">
                    Subproblem NOT solved successfully
                     No active inequality
                     Feasible current solution                    
                </comment>
                <comment line="514">
                    Subproblem NOT solved successfully
                     No active inequality
                     Not feasible current solution                    
                </comment>
                <scope line="409"/>
                <declaration name="tmpInput" type="Input" line="416"/>
                <declaration name="tmpSolver" type="KKTSolver" line="417"/>
                <declaration name="tmpOutput" type="Output" line="418"/>
                <declaration name="tmpIncluded" type="int[]" line="420"/>
                <declaration name="tmpCountVariables" type="int" line="422"/>
                <declaration name="tmpCountEqualityConstraints" type="int" line="423"/>
                <declaration name="tmpCountActiveInequalityConstraints" type="int" line="424"/>
                <scope line="426">
                    <declaration name="tmpSubX" type="MatrixStore&amp;lt;Double&amp;gt;" line="429"/>
                    <declaration name="tmpSubL" type="MatrixStore&amp;lt;Double&amp;gt;" line="430"/>
                    <scope line="432"/>
                    <declaration name="tmpFrobNormX" type="double" line="437"/>
                    <scope line="438">
                        <declaration name="tmpExcluded" type="int[]" line="441"/>
                        <declaration name="tmpNumer" type="MatrixStore&amp;lt;Double&amp;gt;" line="443"/>
                        <declaration name="tmpDenom" type="MatrixStore&amp;lt;Double&amp;gt;" line="444"/>
                        <declaration name="tmpStepLengths" type="PhysicalStore&amp;lt;Double&amp;gt;" line="445"/>
                        <scope line="448"/>
                        <declaration name="tmpStepLength" type="double" line="454"/>
                        <scope line="455">
                            <declaration name="tmpN" type="double" line="457"/>
                            <declaration name="tmpD" type="double" line="458"/>
                            <declaration name="tmpVal" type="double" line="459"/>
                            <scope line="462">
                                <scope line="465"/>
                            </scope>
                        </scope>
                        <scope line="471"/>
                    </scope>
                    <scope line="477"/>
                    <scope line="485"/>
                    <scope line="489"/>
                </scope>
                <scope line="493">
                    <scope line="499"/>
                </scope>
                <scope line="505"/>
                <scope line="512"/>
                <scope line="520">
                    <scope line="523"/>
                    <scope line="526"/>
                </scope>
            </method>
            <method name="buildDelegateSolverInput" type="KKTSolver.Input" line="534">
                <declaration name="tmpSubAE" type="MatrixStore&amp;lt;Double&amp;gt;" line="536"/>
                <declaration name="tmpSubQ" type="MatrixStore&amp;lt;Double&amp;gt;" line="537"/>
                <declaration name="tmpSubC" type="MatrixStore&amp;lt;Double&amp;gt;" line="538"/>
                <declaration name="tmpActivator" type="int[]" line="540"/>
                <scope line="542">
                    <scope line="543"/>
                    <scope line="545"/>
                </scope>
                <scope line="548">
                    <scope line="549"/>
                    <scope line="551"/>
                </scope>
                <declaration name="tmpX" type="PhysicalStore&amp;lt;Double&amp;gt;" line="556"/>
            </method>
        </class>
    </source>