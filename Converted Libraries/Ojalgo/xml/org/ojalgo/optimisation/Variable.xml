<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.ojalgo.optimisation">
        <import package="org.ojalgo.constant.BigMath"/>
        <import package="java.math.BigDecimal"/>
        <import package="org.ojalgo.function.aggregator.AggregatorCollection"/>
        <import package="org.ojalgo.function.aggregator.AggregatorFunction"/>
        <import package="org.ojalgo.function.aggregator.BigAggregator"/>
        <import package="org.ojalgo.type.context.NumberContext"/>
        <class name="Variable" line="33">
            <extends class="ModelEntity">
                <type_params>
                    <type_param name="Variable"/>
                </type_params>
            </extends>
            <javadoc line="33">
                Variable                
                <author>
                    apete                    
                </author>
            </javadoc>
            <method name="make" type="Variable" line="40">
                <params>
                    <param name="name" type="String"/>
                </params>
            </method>
            <method name="makeBinary" type="Variable" line="44">
                <params>
                    <param name="name" type="String"/>
                </params>
            </method>
            <declaration name="myAdjustmentExponent" type="int" line="48"/>
            <declaration name="myIndex" type="Expression.Index" line="50"/>
            <declaration name="myInteger" type="boolean" line="51"/>
            <declaration name="myValue" type="BigDecimal" line="52"/>
            <method name="Variable" type="constructor" line="54">
                <params>
                    <param name="name" type="String"/>
                </params>
            </method>
            <method name="Variable" type="constructor" line="58">
                <params>
                    <param name="entityToCopy" type="Variable"/>
                </params>
            </method>
            <method name="binary" type="Variable" line="67"/>
            <method name="copy" type="Variable" line="71"/>
            <method name="getLowerSlack" type="BigDecimal" line="75">
                <declaration name="retVal" type="BigDecimal" line="77"/>
                <scope line="79">
                    <scope line="81"/>
                    <scope line="85"/>
                </scope>
                <scope line="91"/>
            </method>
            <method name="getUpperSlack" type="BigDecimal" line="98">
                <declaration name="retVal" type="BigDecimal" line="100"/>
                <scope line="102">
                    <scope line="104"/>
                    <scope line="108"/>
                </scope>
                <scope line="114"/>
            </method>
            <method name="getValue" type="BigDecimal" line="121"/>
            <method name="integer" type="Variable" line="125">
                <params>
                    <param name="aBool" type="boolean"/>
                </params>
            </method>
            <method name="isBinary" type="boolean" line="130">
                <declaration name="retVal" type="boolean" line="132"/>
            </method>
            <method name="isInteger" type="boolean" line="141"/>
            <method name="isValueSet" type="boolean" line="145"/>
            <method name="quantifyContribution" type="BigDecimal" line="149">
                <declaration name="retVal" type="BigDecimal" line="151"/>
                <declaration name="tmpContributionWeight" type="BigDecimal" line="153"/>
                <scope line="154"/>
            </method>
            <method name="relax" type="Variable" line="161"/>
            <method name="setInteger" type="void" line="165">
                <params>
                    <param name="aBool" type="boolean"/>
                </params>
            </method>
            <method name="setValue" type="void" line="170">
                <params>
                    <param name="aValue" type="BigDecimal"/>
                </params>
            </method>
            <method name="validate" type="boolean" line="175">
                <params>
                    <param name="context" type="NumberContext"/>
                </params>
                <scope line="177"/>
                <scope line="181"/>
            </method>
            <method name="appendMiddlePart" type="void" line="188">
                <params>
                    <param name="aStringBuilder" type="StringBuilder"/>
                </params>
                <scope line="192"/>
                <scope line="197"/>
            </method>
            <method name="destroy" type="void" line="205"/>
            <method name="getAdjustmentExponent" type="int" line="214">
                <scope line="216">
                    <declaration name="tmpCollection" type="AggregatorCollection&lt;BigDecimal&gt;" line="218"/>
                    <declaration name="tmpLargestAggr" type="AggregatorFunction&lt;BigDecimal&gt;" line="219"/>
                    <declaration name="tmpSmallestAggr" type="AggregatorFunction&lt;BigDecimal&gt;" line="220"/>
                    <declaration name="tmpLowerLimit" type="BigDecimal" line="225"/>
                    <scope line="226"/>
                    <declaration name="tmpUpperLimit" type="BigDecimal" line="231"/>
                    <scope line="232"/>
                </scope>
            </method>
            <method name="validate" type="boolean" line="244">
                <params>
                    <param name="value" type="BigDecimal"/>
                    <param name="context" type="NumberContext"/>
                </params>
                <comment line="252">
                    BasicLogger.logError(value + &quot; ! Integer: &quot; + this.getName());                    
                </comment>
                <declaration name="retVal" type="boolean" line="246"/>
                <scope line="248">
                    <scope line="249"/>
                    <scope line="251"/>
                </scope>
            </method>
            <method name="getIndex" type="Expression.Index" line="260"/>
            <method name="setIndex" type="void" line="264">
                <params>
                    <param name="index" type="Expression.Index"/>
                </params>
                <scope line="265"/>
                <scope line="267"/>
            </method>
        </class>
    </source>