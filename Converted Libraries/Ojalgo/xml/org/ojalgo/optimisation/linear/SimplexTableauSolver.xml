<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.ojalgo.optimisation.linear">
        <import package="org.ojalgo.constant.PrimitiveMath"/>
        <import package="org.ojalgo.function.PrimitiveFunction"/>
        <import package="java.util.Arrays"/>
        <import package="java.util.List"/>
        <import package="java.util.Set"/>
        <import package="org.ojalgo.ProgrammingError"/>
        <import package="org.ojalgo.array.Array1D"/>
        <import package="org.ojalgo.constant.PrimitiveMath"/>
        <import package="org.ojalgo.function.aggregator.AggregatorFunction"/>
        <import package="org.ojalgo.function.aggregator.PrimitiveAggregator"/>
        <import package="org.ojalgo.matrix.MatrixUtils"/>
        <import package="org.ojalgo.matrix.store.MatrixStore"/>
        <import package="org.ojalgo.matrix.store.PhysicalStore"/>
        <import package="org.ojalgo.matrix.store.PrimitiveDenseStore"/>
        <import package="org.ojalgo.matrix.store.ZeroStore"/>
        <import package="org.ojalgo.optimisation.Expression.Index"/>
        <import package="org.ojalgo.optimisation.ExpressionsBasedModel"/>
        <import package="org.ojalgo.optimisation.Optimisation"/>
        <import package="org.ojalgo.optimisation.Variable"/>
        <class name="SimplexTableauSolver" line="21">
            <extends class="LinearSolver"/>
            <javadoc line="21">
                SimplexTableauSolver                
                <author>
                    apete                    
                </author>
            </javadoc>
            <class name="PivotPoint" line="26">
                <declaration name="myRowObjective" type="int" line="27"/>
                <declaration name="mySolver" type="SimplexTableauSolver" line="28"/>
                <declaration name="col" type="int" line="29"/>
                <declaration name="row" type="int" line="30"/>
                <method name="PivotPoint" type="constructor" line="31"/>
                <method name="PivotPoint" type="constructor" line="35">
                    <params>
                        <param name="solver" type="SimplexTableauSolver"/>
                    </params>
                </method>
                <method name="getColRHS" type="int" line="41"/>
                <method name="getRowObjective" type="int" line="44"/>
                <method name="isPhase1" type="boolean" line="47"/>
                <method name="isPhase2" type="boolean" line="50"/>
                <method name="objective" type="double" line="53"/>
                <method name="phase" type="int" line="56"/>
                <method name="reset" type="void" line="59"/>
                <method name="switchToPhase2" type="void" line="63"/>
            </class>
            <declaration name="myBasis" type="int[]" line="67"/>
            <declaration name="myPoint" type="PivotPoint" line="68"/>
            <declaration name="myTransposedTableau" type="PrimitiveDenseStore" line="69"/>
            <method name="SimplexTableauSolver" type="constructor" line="70">
                <params>
                    <param name="aModel" type="ExpressionsBasedModel"/>
                    <param name="solverOptions" type="Optimisation.Options"/>
                    <param name="matrices" type="LinearSolver.Builder"/>
                </params>
                <declaration name="tmpConstraintsCount" type="int" line="73"/>
                <declaration name="tmpTableauBuilder" type="MatrixStore.Builder&lt;Double&gt;" line="74"/>
                <scope line="76"/>
                <declaration name="tmpKickStarter" type="Result" line="81"/>
                <declaration name="tmpBasis" type="int[]" line="82"/>
                <scope line="83"/>
                <scope line="87"/>
                <scope line="90">
                    <scope line="91"/>
                </scope>
                <scope line="95"/>
            </method>
            <method name="solve" type="Result" line="99">
                <params>
                    <param name="kickStart" type="Result"/>
                </params>
                <scope line="100">
                    <scope line="102"/>
                </scope>
            </method>
            <method name="countBasicArtificials" type="int" line="108">
                <declaration name="retVal" type="int" line="109"/>
                <declaration name="tmpLength" type="int" line="110"/>
                <scope line="111">
                    <scope line="112"/>
                </scope>
            </method>
            <method name="isTableauPrintable" type="boolean" line="118"/>
            <method name="logDebugTableau" type="void" line="121">
                <params>
                    <param name="aMessage" type="String"/>
                </params>
            </method>
            <javadoc line="125">
                Extract solution MatrixStore from the tableau                
            </javadoc>
            <method name="extractSolution" type="PhysicalStore<Double>" line="128">
                <declaration name="tmpCountVariables" type="int" line="129"/>
                <declaration name="tmpLength" type="int" line="131"/>
                <scope line="132">
                    <declaration name="tmpBasisIndex" type="int" line="133"/>
                    <scope line="134"/>
                </scope>
                <declaration name="tmpTableauSolution" type="PhysicalStore&lt;Double&gt;" line="138"/>
                <declaration name="tmpModel" type="ExpressionsBasedModel" line="139"/>
                <scope line="140">
                    <declaration name="tmpFreeVariables" type="List&lt;Variable&gt;" line="141"/>
                    <declaration name="tmpFixedVariables" type="Set&lt;Index&gt;" line="142"/>
                    <declaration name="tmpModelSolution" type="PrimitiveDenseStore" line="143"/>
                    <declaration name="tmpModelSolutionSize" type="int" line="144"/>
                    <declaration name="tmpVariablesSize" type="int" line="145"/>
                    <scope line="146"/>
                    <scope line="149"/>
                    <declaration name="tmpPositive" type="List&lt;Variable&gt;" line="152"/>
                    <scope line="153">
                        <declaration name="tmpIndex" type="int" line="154"/>
                    </scope>
                    <declaration name="tmpNegative" type="List&lt;Variable&gt;" line="157"/>
                    <scope line="158">
                        <declaration name="tmpIndex" type="int" line="159"/>
                    </scope>
                </scope>
                <scope line="164"/>
            </method>
            <method name="initialise" type="boolean" line="168">
                <params>
                    <param name="kickStart" type="Result"/>
                </params>
            </method>
            <method name="needsAnotherIteration" type="boolean" line="171">
                <scope line="172"/>
                <declaration name="retVal" type="boolean" line="175"/>
                <scope line="177">
                    <declaration name="tmpPhaseOneValue" type="double" line="178"/>
                    <scope line="179">
                        <scope line="180"/>
                    </scope>
                </scope>
                <scope line="188">
                    <scope line="190"/>
                    <scope line="193">
                        <scope line="194"/>
                        <scope line="198"/>
                    </scope>
                </scope>
                <scope line="204">
                    <scope line="205"/>
                    <scope line="209"/>
                </scope>
                <scope line="214">
                    <scope line="215"/>
                    <scope line="218"/>
                </scope>
            </method>
            <method name="validate" type="boolean" line="224">
                <declaration name="retVal" type="boolean" line="225"/>
            </method>
            <method name="findNextPivotCol" type="int" line="229">
                <declaration name="tmpExcluded" type="int[]" line="230"/>
                <scope line="231">
                    <scope line="232"/>
                    <scope line="235"/>
                </scope>
                <declaration name="retVal" type="int" line="239"/>
                <declaration name="tmpVal" type="double" line="240"/>
                <declaration name="tmpMinVal" type="double" line="241"/>
                <declaration name="tmpCol" type="int" line="242"/>
                <scope line="243">
                    <scope line="246">
                        <scope line="249"/>
                    </scope>
                </scope>
            </method>
            <method name="findNextPivotRow" type="int" line="256">
                <declaration name="tmpNumerCol" type="int" line="257"/>
                <declaration name="tmpDenomCol" type="int" line="258"/>
                <scope line="259">
                    <scope line="260">
                        <declaration name="tmpNumerators" type="Array1D&lt;Double&gt;" line="261"/>
                        <declaration name="tmpDenominators" type="Array1D&lt;Double&gt;" line="262"/>
                        <declaration name="tmpRatios" type="Array1D&lt;Double&gt;" line="263"/>
                    </scope>
                    <scope line="267"/>
                </scope>
                <declaration name="retVal" type="int" line="271"/>
                <declaration name="tmpNumer" type="double" line="272"/>
                <declaration name="tmpMinRatio" type="double" line="273"/>
                <declaration name="tmpConstraintsCount" type="int" line="274"/>
                <declaration name="tmpPhase2" type="boolean" line="275"/>
                <scope line="276">
                    <declaration name="tmpSpecialCase" type="boolean" line="277"/>
                    <scope line="279"/>
                    <scope line="282">
                        <scope line="284">
                            <scope line="285"/>
                            <scope line="288"/>
                        </scope>
                        <scope line="292"/>
                    </scope>
                    <scope line="296">
                        <scope line="299"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="306">
                It&apos;s transposed for you!                
            </javadoc>
            <method name="getTableauElement" type="double" line="309">
                <params>
                    <param name="aRow" type="int"/>
                    <param name="aCol" type="int"/>
                </params>
            </method>
            <method name="performIteration" type="void" line="312">
                <params>
                    <param name="aPivotRow" type="int"/>
                    <param name="aPivotCol" type="int"/>
                </params>
                <declaration name="tmpPivotElement" type="double" line="313"/>
                <declaration name="tmpPivotRHS" type="double" line="314"/>
                <scope line="315">
                    <scope line="316">
                        <declaration name="tmpPivotColVal" type="double" line="317"/>
                        <scope line="318"/>
                    </scope>
                </scope>
                <scope line="323"/>
                <scope line="326"/>
                <scope line="329"/>
                <declaration name="tmpOld" type="int" line="332"/>
                <scope line="333"/>
                <declaration name="tmpNew" type="int" line="336"/>
                <scope line="337"/>
                <scope line="341">
                    <declaration name="tmpRHS" type="Array1D&lt;Double&gt;" line="342"/>
                    <declaration name="tmpMinAggr" type="AggregatorFunction&lt;Double&gt;" line="343"/>
                    <declaration name="tmpMinVal" type="double" line="345"/>
                    <scope line="346">
                        <scope line="348"/>
                    </scope>
                    <declaration name="tmpModel" type="ExpressionsBasedModel" line="352"/>
                    <scope line="353">
                        <declaration name="tmpResult" type="Result" line="354"/>
                        <scope line="355">
                            <scope line="356"/>
                        </scope>
                    </scope>
                </scope>
            </method>
            <javadoc line="364">
                It&apos;s transposed for you, and only returns the part of the column corresponding to the constraints - not the
                  objective(s).                
            </javadoc>
            <method name="sliceTableauColumn" type="Array1D<Double>" line="368">
                <params>
                    <param name="aCol" type="int"/>
                </params>
            </method>
            <javadoc line="371">
                It&apos;s transposed for you, and only returns the part of the row corresponding to the variables - not the RHS.                
            </javadoc>
            <method name="sliceTableauRow" type="Array1D<Double>" line="374">
                <params>
                    <param name="aRow" type="int"/>
                </params>
            </method>
        </class>
    </source>