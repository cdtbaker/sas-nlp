<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.ojalgo.optimisation.linear">
        <import package="org.ojalgo.constant.PrimitiveMath"/>
        <import package="org.ojalgo.function.PrimitiveFunction"/>
        <import package="java.util.Arrays"/>
        <import package="java.util.List"/>
        <import package="java.util.Set"/>
        <import package="org.ojalgo.ProgrammingError"/>
        <import package="org.ojalgo.array.Array1D"/>
        <import package="org.ojalgo.constant.PrimitiveMath"/>
        <import package="org.ojalgo.function.aggregator.AggregatorFunction"/>
        <import package="org.ojalgo.function.aggregator.PrimitiveAggregator"/>
        <import package="org.ojalgo.matrix.MatrixUtils"/>
        <import package="org.ojalgo.matrix.store.MatrixStore"/>
        <import package="org.ojalgo.matrix.store.PhysicalStore"/>
        <import package="org.ojalgo.matrix.store.PrimitiveDenseStore"/>
        <import package="org.ojalgo.matrix.store.ZeroStore"/>
        <import package="org.ojalgo.optimisation.Expression.Index"/>
        <import package="org.ojalgo.optimisation.ExpressionsBasedModel"/>
        <import package="org.ojalgo.optimisation.Optimisation"/>
        <import package="org.ojalgo.optimisation.Variable"/>
        <class name="SimplexTableauSolver" line="46">
            <extends class="LinearSolver"/>
            <javadoc line="46">
                SimplexTableauSolver                
                <author>
                    apete                    
                </author>
            </javadoc>
            <class name="PivotPoint" line="53">
                <declaration name="myRowObjective" type="int" line="55"/>
                <declaration name="mySolver" type="SimplexTableauSolver" line="57"/>
                <declaration name="col" type="int" line="58"/>
                <declaration name="row" type="int" line="59"/>
                <method name="PivotPoint" type="constructor" line="62"/>
                <method name="PivotPoint" type="constructor" line="67">
                    <params>
                        <param name="solver" type="SimplexTableauSolver"/>
                    </params>
                </method>
                <method name="getColRHS" type="int" line="78"/>
                <method name="getRowObjective" type="int" line="82"/>
                <method name="isPhase1" type="boolean" line="86"/>
                <method name="isPhase2" type="boolean" line="90"/>
                <method name="objective" type="double" line="94"/>
                <method name="phase" type="int" line="98"/>
                <method name="reset" type="void" line="102"/>
                <method name="switchToPhase2" type="void" line="107"/>
            </class>
            <declaration name="myBasis" type="int[]" line="113"/>
            <declaration name="myPoint" type="PivotPoint" line="114"/>
            <declaration name="myTransposedTableau" type="PrimitiveDenseStore" line="115"/>
            <method name="SimplexTableauSolver" type="constructor" line="117">
                <params>
                    <param name="aModel" type="ExpressionsBasedModel"/>
                    <param name="solverOptions" type="Optimisation.Options"/>
                    <param name="matrices" type="LinearSolver.Builder"/>
                </params>
                <declaration name="tmpConstraintsCount" type="int" line="123"/>
                <declaration name="tmpTableauBuilder" type="MatrixStore.Builder&lt;Double&gt;" line="125"/>
                <scope line="128"/>
                <declaration name="tmpKickStarter" type="Result" line="134"/>
                <declaration name="tmpBasis" type="int[]" line="135"/>
                <scope line="136"/>
                <scope line="139"/>
                <scope line="143">
                    <scope line="144"/>
                </scope>
                <scope line="149"/>
            </method>
            <method name="solve" type="Result" line="154">
                <params>
                    <param name="kickStart" type="Result"/>
                </params>
                <scope line="156">
                    <scope line="160"/>
                </scope>
            </method>
            <method name="countBasicArtificials" type="int" line="168">
                <declaration name="retVal" type="int" line="169"/>
                <declaration name="tmpLength" type="int" line="170"/>
                <scope line="171">
                    <scope line="172"/>
                </scope>
            </method>
            <method name="isTableauPrintable" type="boolean" line="179"/>
            <method name="logDebugTableau" type="void" line="183">
                <params>
                    <param name="aMessage" type="String"/>
                </params>
            </method>
            <javadoc line="188">
                Extract solution MatrixStore from the tableau                
            </javadoc>
            <method name="extractSolution" type="PhysicalStore<Double>" line="192">
                <declaration name="tmpCountVariables" type="int" line="194"/>
                <declaration name="tmpLength" type="int" line="198"/>
                <scope line="199">
                    <declaration name="tmpBasisIndex" type="int" line="200"/>
                    <scope line="201"/>
                </scope>
                <declaration name="tmpTableauSolution" type="PhysicalStore&lt;Double&gt;" line="205"/>
                <declaration name="tmpModel" type="ExpressionsBasedModel" line="207"/>
                <scope line="209">
                    <declaration name="tmpFreeVariables" type="List&lt;Variable&gt;" line="211"/>
                    <declaration name="tmpFixedVariables" type="Set&lt;Index&gt;" line="212"/>
                    <declaration name="tmpModelSolution" type="PrimitiveDenseStore" line="214"/>
                    <declaration name="tmpModelSolutionSize" type="int" line="216"/>
                    <declaration name="tmpVariablesSize" type="int" line="217"/>
                    <scope line="218"/>
                    <scope line="222"/>
                    <declaration name="tmpPositive" type="List&lt;Variable&gt;" line="226"/>
                    <scope line="227">
                        <declaration name="tmpIndex" type="int" line="228"/>
                    </scope>
                    <declaration name="tmpNegative" type="List&lt;Variable&gt;" line="232"/>
                    <scope line="233">
                        <declaration name="tmpIndex" type="int" line="234"/>
                    </scope>
                </scope>
                <scope line="240"/>
            </method>
            <method name="initialise" type="boolean" line="248">
                <params>
                    <param name="kickStart" type="Result"/>
                </params>
                <comment line="251">
                    TODO Auto-generated method stub                    
                </comment>
            </method>
            <method name="needsAnotherIteration" type="boolean" line="255">
                <scope line="257"/>
                <declaration name="retVal" type="boolean" line="261"/>
                <scope line="264">
                    <declaration name="tmpPhaseOneValue" type="double" line="266"/>
                    <scope line="268">
                        <scope line="270"/>
                    </scope>
                </scope>
                <scope line="281">
                    <scope line="285"/>
                    <scope line="289">
                        <scope line="291"/>
                        <scope line="296"/>
                    </scope>
                </scope>
                <scope line="303">
                    <scope line="305"/>
                    <scope line="310"/>
                </scope>
                <scope line="317">
                    <scope line="318"/>
                    <scope line="320"/>
                </scope>
            </method>
            <method name="validate" type="boolean" line="329">
                <declaration name="retVal" type="boolean" line="331"/>
            </method>
            <method name="findNextPivotCol" type="int" line="337">
                <declaration name="tmpExcluded" type="int[]" line="339"/>
                <scope line="341">
                    <scope line="342"/>
                    <scope line="345"/>
                </scope>
                <declaration name="retVal" type="int" line="350"/>
                <declaration name="tmpVal" type="double" line="352"/>
                <declaration name="tmpMinVal" type="double" line="353"/>
                <declaration name="tmpCol" type="int" line="355"/>
                <scope line="357">
                    <scope line="360">
                        <scope line="363"/>
                    </scope>
                </scope>
            </method>
            <method name="findNextPivotRow" type="int" line="372">
                <comment line="411">
                    Should always be &gt;=0.0, but very small numbers may &quot;accidentally&quot; get a negative sign.                    
                </comment>
                <declaration name="tmpNumerCol" type="int" line="374"/>
                <declaration name="tmpDenomCol" type="int" line="375"/>
                <scope line="377">
                    <scope line="378">
                        <declaration name="tmpNumerators" type="Array1D&lt;Double&gt;" line="379"/>
                        <declaration name="tmpDenominators" type="Array1D&lt;Double&gt;" line="380"/>
                        <declaration name="tmpRatios" type="Array1D&lt;Double&gt;" line="381"/>
                    </scope>
                    <scope line="385"/>
                </scope>
                <declaration name="retVal" type="int" line="390"/>
                <declaration name="tmpNumer" type="double" line="391"/>
                <declaration name="tmpMinRatio" type="double" line="392"/>
                <declaration name="tmpConstraintsCount" type="int" line="394"/>
                <declaration name="tmpPhase2" type="boolean" line="396"/>
                <scope line="398">
                    <declaration name="tmpSpecialCase" type="boolean" line="400"/>
                    <scope line="404"/>
                    <scope line="408">
                        <scope line="413">
                            <scope line="414"/>
                            <scope line="416"/>
                        </scope>
                        <scope line="419"/>
                    </scope>
                    <scope line="424">
                        <scope line="429"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="438">
                It&apos;s transposed for you!                
            </javadoc>
            <method name="getTableauElement" type="double" line="441">
                <params>
                    <param name="aRow" type="int"/>
                    <param name="aCol" type="int"/>
                </params>
            </method>
            <method name="performIteration" type="void" line="445">
                <params>
                    <param name="aPivotRow" type="int"/>
                    <param name="aPivotCol" type="int"/>
                </params>
                <comment line="485">
                    Right-most column of the tableau                    
                </comment>
                <declaration name="tmpPivotElement" type="double" line="447"/>
                <declaration name="tmpPivotRHS" type="double" line="448"/>
                <scope line="450">
                    <scope line="451">
                        <declaration name="tmpPivotColVal" type="double" line="453"/>
                        <scope line="455"/>
                    </scope>
                </scope>
                <scope line="461"/>
                <scope line="463"/>
                <scope line="467"/>
                <declaration name="tmpOld" type="int" line="472"/>
                <scope line="473"/>
                <declaration name="tmpNew" type="int" line="476"/>
                <scope line="477"/>
                <scope line="482">
                    <declaration name="tmpRHS" type="Array1D&lt;Double&gt;" line="485"/>
                    <declaration name="tmpMinAggr" type="AggregatorFunction&lt;Double&gt;" line="487"/>
                    <declaration name="tmpMinVal" type="double" line="489"/>
                    <scope line="491">
                        <scope line="493"/>
                    </scope>
                    <declaration name="tmpModel" type="ExpressionsBasedModel" line="498"/>
                    <scope line="500">
                        <declaration name="tmpResult" type="Result" line="501"/>
                        <scope line="502">
                            <scope line="503"/>
                        </scope>
                    </scope>
                </scope>
            </method>
            <javadoc line="512">
                It&apos;s transposed for you, and only returns the part of the column corresponding to the constraints - not the
                  objective(s).                
            </javadoc>
            <method name="sliceTableauColumn" type="Array1D<Double>" line="516">
                <params>
                    <param name="aCol" type="int"/>
                </params>
            </method>
            <javadoc line="520">
                It&apos;s transposed for you, and only returns the part of the row corresponding to the variables - not the RHS.                
            </javadoc>
            <method name="sliceTableauRow" type="Array1D<Double>" line="523">
                <params>
                    <param name="aRow" type="int"/>
                </params>
            </method>
        </class>
    </source>