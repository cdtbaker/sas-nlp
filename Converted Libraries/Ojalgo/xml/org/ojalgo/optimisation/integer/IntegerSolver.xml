<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.ojalgo.optimisation.integer">
        <import package="java.util.concurrent.atomic.AtomicInteger"/>
        <import package="org.ojalgo.matrix.store.ZeroStore"/>
        <import package="org.ojalgo.optimisation.ExpressionsBasedModel"/>
        <import package="org.ojalgo.optimisation.GenericSolver"/>
        <import package="org.ojalgo.optimisation.Optimisation"/>
        <class name="IntegerSolver" line="31">
            <extends class="GenericSolver"/>
            <class name="NodeStatistics" line="33">
                <declaration name="myAbandoned" type="AtomicInteger" line="35"/>
                <declaration name="myBranched" type="AtomicInteger" line="36"/>
                <javadoc line="36">
                    Resulted in 2 new nodes                    
                </javadoc>
                <declaration name="myExhausted" type="AtomicInteger" line="40"/>
                <javadoc line="40">
                    Integer solution found and/or solution not good enough to continue                    
                </javadoc>
                <declaration name="myFailed" type="AtomicInteger" line="44"/>
                <javadoc line="44">
                    Failed to solve node problem (not because it was infeasible)                    
                </javadoc>
                <declaration name="myInfeasible" type="AtomicInteger" line="48"/>
                <javadoc line="48">
                    Node problem infeasible                    
                </javadoc>
                <declaration name="myTruncated" type="AtomicInteger" line="52"/>
                <javadoc line="52">
                    Noninteger solution                    
                </javadoc>
                <declaration name="myInteger" type="AtomicInteger" line="56"/>
                <javadoc line="56">
                    Integer solution                    
                </javadoc>
                <method name="countCreated" type="int" line="61"/>
                <method name="countEvaluated" type="int" line="65"/>
                <javadoc line="69">
                    Node never evaluated (sub/node problem never solved)                    
                </javadoc>
                <method name="abandoned" type="boolean" line="72"/>
                <javadoc line="77">
                    Node evaluated, but solution not integer. Estimate still possible to find better integer solution. Created 2
                      new branches.                    
                </javadoc>
                <method name="branched" type="boolean" line="81"/>
                <javadoc line="86">
                    Node evaluated, but solution not integer. Estimate NOT possible to find better integer solution.                    
                </javadoc>
                <method name="exhausted" type="boolean" line="89"/>
                <method name="failed" type="boolean" line="94">
                    <params>
                        <param name="state" type="boolean"/>
                    </params>
                </method>
                <method name="infeasible" type="boolean" line="99"/>
                <method name="infeasible" type="boolean" line="104">
                    <params>
                        <param name="state" type="boolean"/>
                    </params>
                </method>
                <javadoc line="109">
                    Integer solution found                    
                </javadoc>
                <method name="integer" type="boolean" line="112"/>
                <method name="truncated" type="boolean" line="117">
                    <params>
                        <param name="state" type="boolean"/>
                    </params>
                </method>
            </class>
            <declaration name="myBestResultSoFar" type="Optimisation.Result" line="124"/>
            <declaration name="myIntegerSolutionsCount" type="AtomicInteger" line="125"/>
            <declaration name="myMinimisation" type="boolean" line="126"/>
            <declaration name="myNodeStatistics" type="NodeStatistics" line="127"/>
            <method name="IntegerSolver" type="constructor" line="129">
                <params>
                    <param name="model" type="ExpressionsBasedModel"/>
                    <param name="solverOptions" type="Options"/>
                </params>
            </method>
            <method name="countIntegerSolutions" type="int" line="136"/>
            <method name="getBestResultSoFar" type="Optimisation.Result" line="140">
                <declaration name="tmpCurrentlyTheBest" type="Result" line="142"/>
                <scope line="144"/>
                <scope line="148">
                    <declaration name="tmpSate" type="State" line="150"/>
                    <declaration name="tmpValue" type="double" line="151"/>
                    <declaration name="tmpSolution" type="ZeroStore&amp;lt;Double&amp;gt;" line="152"/>
                </scope>
            </method>
            <method name="isGoodEnoughToContinueBranching" type="boolean" line="158">
                <params>
                    <param name="nonIntegerValue" type="double"/>
                </params>
                <declaration name="tmpCurrentlyTheBest" type="Result" line="160"/>
                <scope line="162"/>
                <scope line="166">
                    <declaration name="tmpBestIntegerValue" type="double" line="168"/>
                    <declaration name="tmpMipGap" type="double" line="170"/>
                    <scope line="172"/>
                    <scope line="174"/>
                </scope>
            </method>
            <method name="isIntegerSolutionFound" type="boolean" line="180"/>
            <method name="isIterationNecessary" type="boolean" line="184">
                <scope line="186"/>
                <scope line="190">
                    <declaration name="tmpIterations" type="int" line="192"/>
                    <declaration name="tmpTime" type="long" line="193"/>
                </scope>
            </method>
            <method name="markInteger" type="void" line="199">
                <params>
                    <param name="node" type="NodeKey"/>
                    <param name="result" type="Optimisation.Result"/>
                </params>
                <declaration name="tmpCurrentlyTheBest" type="Optimisation.Result" line="201"/>
                <scope line="203"/>
                <scope line="207"/>
                <scope line="211"/>
            </method>
        </class>
    </source>