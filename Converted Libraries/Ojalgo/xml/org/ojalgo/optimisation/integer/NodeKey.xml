<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.ojalgo.optimisation.integer">
        <import package="java.io.Serializable"/>
        <import package="java.math.BigDecimal"/>
        <import package="java.util.Arrays"/>
        <import package="java.util.List"/>
        <import package="java.util.concurrent.atomic.AtomicLong"/>
        <import package="org.ojalgo.array.ArrayUtils"/>
        <import package="org.ojalgo.constant.PrimitiveMath"/>
        <import package="org.ojalgo.optimisation.ExpressionsBasedModel"/>
        <import package="org.ojalgo.optimisation.Variable"/>
        <class name="NodeKey" line="35">
            <implements interface="Serializable"/>
            <implements interface="Comparable">
                <type_params>
                    <type_param name="NodeKey"/>
                </type_params>
            </implements>
            <declaration name="GENERATOR" type="AtomicLong" line="37"/>
            <declaration name="myLowerBounds" type="int[]" line="39"/>
            <declaration name="myUpperBounds" type="int[]" line="40"/>
            <declaration name="sequence" type="long" line="42"/>
            <declaration name="parent" type="long" line="43"/>
            <declaration name="index" type="int" line="44"/>
            <declaration name="displacement" type="double" line="45"/>
            <declaration name="objective" type="double" line="46"/>
            <method name="NodeKey" type="constructor" line="48">
                <params>
                    <param name="lowerBounds" type="int[]"/>
                    <param name="upperBounds" type="int[]"/>
                    <param name="parent" type="long"/>
                    <param name="index" type="int"/>
                    <param name="displacement" type="double"/>
                    <param name="objective" type="double"/>
                </params>
            </method>
            <method name="NodeKey" type="constructor" line="61">
                <params>
                    <param name="integerModel" type="ExpressionsBasedModel"/>
                </params>
                <declaration name="tmpIntegerVariables" type="List&amp;lt;Variable&amp;gt;" line="65"/>
                <declaration name="tmpLength" type="int" line="66"/>
                <scope line="73">
                    <declaration name="tmpVariable" type="Variable" line="75"/>
                    <declaration name="tmpLowerLimit" type="BigDecimal" line="77"/>
                    <scope line="78"/>
                    <declaration name="tmpUpperLimit" type="BigDecimal" line="82"/>
                    <scope line="83"/>
                </scope>
            </method>
            <method name="compareTo" type="int" line="94">
                <params>
                    <param name="ref" type="NodeKey"/>
                </params>
            </method>
            <method name="equals" type="boolean" line="99">
                <params>
                    <param name="obj" type="Object"/>
                </params>
                <scope line="100"/>
                <scope line="103"/>
                <scope line="106"/>
                <declaration name="other" type="NodeKey" line="109"/>
                <scope line="110"/>
                <scope line="113"/>
            </method>
            <method name="hashCode" type="int" line="120">
                <declaration name="prime" type="int" line="121"/>
                <declaration name="result" type="int" line="122"/>
            </method>
            <method name="toString" type="String" line="129">
                <declaration name="retVal" type="StringBuilder" line="131"/>
                <scope line="147"/>
                <scope line="151"/>
            </method>
            <method name="append" type="void" line="160">
                <params>
                    <param name="builder" type="StringBuilder"/>
                    <param name="index" type="int"/>
                </params>
            </method>
            <method name="feasible" type="double" line="168">
                <params>
                    <param name="index" type="int"/>
                    <param name="value" type="double"/>
                </params>
            </method>
            <method name="getLowerBounds" type="int[]" line="172"/>
            <method name="getUpperBounds" type="int[]" line="176"/>
            <method name="calculateTreeSize" type="long" line="180">
                <declaration name="retVal" type="long" line="182"/>
                <declaration name="tmpLength" type="int" line="184"/>
                <scope line="185"/>
            </method>
            <method name="createLowerBranch" type="NodeKey" line="192">
                <params>
                    <param name="index" type="int"/>
                    <param name="value" type="double"/>
                    <param name="objective" type="double"/>
                </params>
                <declaration name="tmpLBs" type="int[]" line="194"/>
                <declaration name="tmpUBs" type="int[]" line="195"/>
                <declaration name="tmpFeasibleValue" type="double" line="197"/>
                <declaration name="tmpFloor" type="int" line="199"/>
                <scope line="201"/>
                <scope line="203"/>
            </method>
            <method name="createUpperBranch" type="NodeKey" line="210">
                <params>
                    <param name="index" type="int"/>
                    <param name="value" type="double"/>
                    <param name="objective" type="double"/>
                </params>
                <declaration name="tmpLBs" type="int[]" line="212"/>
                <declaration name="tmpUBs" type="int[]" line="213"/>
                <declaration name="tmpFeasibleValue" type="double" line="215"/>
                <declaration name="tmpCeil" type="int" line="217"/>
                <scope line="219"/>
                <scope line="221"/>
            </method>
            <method name="getFraction" type="double" line="228">
                <params>
                    <param name="index" type="int"/>
                    <param name="value" type="double"/>
                </params>
                <declaration name="tmpFeasibleValue" type="double" line="230"/>
            </method>
            <method name="getLowerBound" type="BigDecimal" line="235">
                <params>
                    <param name="index" type="int"/>
                </params>
            </method>
            <method name="getUpperBound" type="BigDecimal" line="239">
                <params>
                    <param name="index" type="int"/>
                </params>
            </method>
        </class>
    </source>