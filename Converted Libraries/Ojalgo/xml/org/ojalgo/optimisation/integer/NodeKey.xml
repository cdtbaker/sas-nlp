<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.ojalgo.optimisation.integer">
        <import package="java.io.Serializable"/>
        <import package="java.math.BigDecimal"/>
        <import package="java.util.Arrays"/>
        <import package="java.util.List"/>
        <import package="org.ojalgo.array.ArrayUtils"/>
        <import package="org.ojalgo.constant.PrimitiveMath"/>
        <import package="org.ojalgo.optimisation.ExpressionsBasedModel"/>
        <import package="org.ojalgo.optimisation.Variable"/>
        <class name="NodeKey" line="10">
            <implements interface="Serializable"/>
            <implements interface="Comparable">
                <type_params>
                    <type_param name="NodeKey"/>
                </type_params>
            </implements>
            <declaration name="myLowerBounds" type="int[]" line="11"/>
            <declaration name="myUpperBounds" type="int[]" line="12"/>
            <declaration name="myParentValue" type="double" line="13"/>
            <javadoc line="13">
                The parent node objective function value                
            </javadoc>
            <method name="NodeKey" type="constructor" line="17">
                <params>
                    <param name="lowerBounds" type="int[]"/>
                    <param name="upperBounds" type="int[]"/>
                    <param name="parentValue" type="double"/>
                </params>
            </method>
            <method name="NodeKey" type="constructor" line="23">
                <params>
                    <param name="integerModel" type="ExpressionsBasedModel"/>
                </params>
                <declaration name="tmpIntegerVariables" type="List&lt;Variable&gt;" line="25"/>
                <declaration name="tmpLength" type="int" line="26"/>
                <scope line="31">
                    <declaration name="tmpVariable" type="Variable" line="32"/>
                    <declaration name="tmpLowerLimit" type="BigDecimal" line="33"/>
                    <scope line="34"/>
                    <declaration name="tmpUpperLimit" type="BigDecimal" line="37"/>
                    <scope line="38"/>
                </scope>
                <scope line="42"/>
                <scope line="45"/>
            </method>
            <method name="compareTo" type="int" line="49">
                <params>
                    <param name="ref" type="NodeKey"/>
                </params>
            </method>
            <method name="equals" type="boolean" line="52">
                <params>
                    <param name="obj" type="Object"/>
                </params>
                <scope line="53"/>
                <scope line="56"/>
                <scope line="59"/>
                <declaration name="other" type="NodeKey" line="62"/>
                <scope line="63"/>
                <scope line="66"/>
            </method>
            <method name="hashCode" type="int" line="71">
                <declaration name="prime" type="int" line="72"/>
                <declaration name="result" type="int" line="73"/>
            </method>
            <method name="toString" type="String" line="78">
                <declaration name="retVal" type="StringBuilder" line="79"/>
                <scope line="83"/>
                <scope line="86"/>
            </method>
            <method name="append" type="void" line="93">
                <params>
                    <param name="builder" type="StringBuilder"/>
                    <param name="index" type="int"/>
                </params>
            </method>
            <method name="getLowerBounds" type="int[]" line="100"/>
            <method name="getUpperBounds" type="int[]" line="103"/>
            <method name="calculateTreeSize" type="long" line="106">
                <declaration name="retVal" type="long" line="107"/>
                <declaration name="tmpLength" type="int" line="108"/>
                <scope line="109"/>
            </method>
            <method name="createLowerBranch" type="NodeKey" line="114">
                <params>
                    <param name="index" type="int"/>
                    <param name="value" type="double"/>
                    <param name="parentValue" type="double"/>
                </params>
                <declaration name="tmpLBs" type="int[]" line="115"/>
                <declaration name="tmpUBs" type="int[]" line="116"/>
                <declaration name="tmpFloor" type="int" line="117"/>
                <scope line="118"/>
                <scope line="121"/>
            </method>
            <method name="createUpperBranch" type="NodeKey" line="126">
                <params>
                    <param name="index" type="int"/>
                    <param name="value" type="double"/>
                    <param name="parentValue" type="double"/>
                </params>
                <declaration name="tmpLBs" type="int[]" line="127"/>
                <declaration name="tmpUBs" type="int[]" line="128"/>
                <declaration name="tmpCeil" type="int" line="129"/>
                <scope line="130"/>
                <scope line="133"/>
            </method>
            <method name="getIntegerFraction" type="double" line="138">
                <params>
                    <param name="index" type="int"/>
                    <param name="value" type="double"/>
                </params>
                <declaration name="tmpFeasibleValue" type="double" line="139"/>
            </method>
            <method name="getLowerBound" type="BigDecimal" line="142">
                <params>
                    <param name="index" type="int"/>
                </params>
            </method>
            <method name="getParentValue" type="double" line="145"/>
            <method name="getUpperBound" type="BigDecimal" line="148">
                <params>
                    <param name="index" type="int"/>
                </params>
            </method>
        </class>
    </source>