<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.ojalgo.optimisation.quadratic">
        <import package="org.ojalgo.constant.PrimitiveMath"/>
        <import package="java.util.HashSet"/>
        <import package="org.ojalgo.matrix.store.AboveBelowStore"/>
        <import package="org.ojalgo.matrix.store.MatrixStore"/>
        <import package="org.ojalgo.matrix.store.RowsStore"/>
        <import package="org.ojalgo.optimisation.ExpressionsBasedModel"/>
        <import package="org.ojalgo.optimisation.ModelEntity"/>
        <import package="org.ojalgo.optimisation.Optimisation"/>
        <import package="org.ojalgo.type.IndexSelector"/>
        <class name="ActiveSetSolver" line="11">
            <extends class="QuadraticSolver"/>
            <javadoc line="11">
                @author apete                
            </javadoc>
            <declaration name="myActivator" type="IndexSelector" line="15"/>
            <method name="ActiveSetSolver" type="constructor" line="16">
                <params>
                    <param name="aModel" type="ExpressionsBasedModel"/>
                    <param name="solverOptions" type="Optimisation.Options"/>
                    <param name="aBuilder" type="QuadraticSolver.Builder"/>
                </params>
                <scope line="18"/>
                <scope line="21"/>
                <declaration name="tmpIterationsLimit" type="int" line="24"/>
            </method>
            <method name="buildIterationSolver" type="QuadraticSolver" line="29">
                <declaration name="tmpSubAE" type="MatrixStore&lt;Double&gt;" line="30"/>
                <declaration name="tmpSubBE" type="MatrixStore&lt;Double&gt;" line="31"/>
                <declaration name="tmpSubQ" type="MatrixStore&lt;Double&gt;" line="32"/>
                <declaration name="tmpSubC" type="MatrixStore&lt;Double&gt;" line="33"/>
                <declaration name="tmpActivator" type="int[]" line="34"/>
                <scope line="35">
                    <scope line="36"/>
                    <scope line="40"/>
                </scope>
                <scope line="45">
                    <scope line="46"/>
                    <scope line="50"/>
                </scope>
                <declaration name="retVal" type="Builder" line="55"/>
                <scope line="56"/>
            </method>
            <javadoc line="61">
                Find the minimum (largest negative) lagrange multiplier - for the active inequalities - to potentially
                  deactivate.                
            </javadoc>
            <method name="suggestConstraintToExclude" type="int" line="65">
                <declaration name="retVal" type="int" line="66"/>
                <declaration name="tmpIncluded" type="int[]" line="67"/>
                <declaration name="tmpLastIncluded" type="int" line="68"/>
                <declaration name="tmpIndexOfLast" type="int" line="69"/>
                <declaration name="tmpMin" type="double" line="70"/>
                <declaration name="tmpVal" type="double" line="71"/>
                <declaration name="tmpLI" type="MatrixStore&lt;Double&gt;" line="72"/>
                <scope line="73"/>
                <scope line="76">
                    <scope line="77">
                        <scope line="79">
                            <scope line="82"/>
                        </scope>
                    </scope>
                    <scope line="87"/>
                </scope>
                <scope line="91">
                    <scope line="93">
                        <scope line="96"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="103">
                Find minimum (largest negative) slack - for the inactive inequalities - to potentially activate. Negative slack
                  means the constraint is violated. Need to make sure it is enforced by activating it.                
            </javadoc>
            <method name="suggestConstraintToInclude" type="int" line="107">
                <declaration name="retVal" type="int" line="108"/>
                <declaration name="tmpExcluded" type="int[]" line="109"/>
                <declaration name="tmpLastExcluded" type="int" line="110"/>
                <declaration name="tmpIndexOfLast" type="int" line="111"/>
                <declaration name="tmpMin" type="double" line="112"/>
                <declaration name="tmpVal" type="double" line="113"/>
                <declaration name="tmpSI" type="MatrixStore&lt;Double&gt;" line="114"/>
                <scope line="115"/>
                <scope line="118">
                    <scope line="119">
                        <scope line="121">
                            <scope line="124"/>
                        </scope>
                    </scope>
                    <scope line="129"/>
                </scope>
                <scope line="133">
                    <scope line="135">
                        <scope line="138"/>
                    </scope>
                </scope>
            </method>
            <method name="buildResult" type="Result" line="145">
                <declaration name="retVal" type="Result" line="146"/>
                <declaration name="tmpModel" type="ExpressionsBasedModel" line="147"/>
                <scope line="148">
                    <declaration name="tmpActiveInequalityEntities" type="HashSet&lt;ModelEntity&lt;?&gt;&gt;" line="149"/>
                    <declaration name="tmpInequalityEntities" type="ModelEntity&lt;?&gt;[]" line="150"/>
                    <declaration name="tmpActiveIndeces" type="int[]" line="151"/>
                    <scope line="152"/>
                </scope>
            </method>
            <method name="extractSolution" type="MatrixStore<Double>" line="159"/>
            <method name="initialise" type="boolean" line="162">
                <params>
                    <param name="kickStart" type="Result"/>
                </params>
                <scope line="163">
                    <scope line="166">
                        <declaration name="tmpActiveSet" type="int[]" line="167"/>
                    </scope>
                    <declaration name="tmpIncluded" type="int[]" line="170"/>
                    <declaration name="tmpSlack" type="MatrixStore&lt;Double&gt;" line="171"/>
                    <scope line="172">
                        <declaration name="tmpVal" type="double" line="173"/>
                        <scope line="174"/>
                    </scope>
                </scope>
            </method>
            <method name="needsAnotherIteration" type="boolean" line="181">
                <scope line="182"/>
                <declaration name="tmpToInclude" type="int" line="186"/>
                <declaration name="tmpToExclude" type="int" line="187"/>
                <scope line="188"/>
                <scope line="192"/>
                <scope line="196">
                    <scope line="197"/>
                    <scope line="201"/>
                </scope>
                <scope line="207">
                    <scope line="208"/>
                    <scope line="213"/>
                </scope>
            </method>
            <method name="performIteration" type="void" line="221">
                <declaration name="tmpSolver" type="QuadraticSolver" line="222"/>
                <declaration name="tmpResult" type="Optimisation.Result" line="223"/>
                <declaration name="tmpIncluded" type="int[]" line="224"/>
                <declaration name="tmpCountVariables" type="int" line="225"/>
                <declaration name="tmpCountEqualityConstraints" type="int" line="226"/>
                <declaration name="tmpCountActiveInequalityConstraints" type="int" line="227"/>
                <scope line="228">
                    <declaration name="tmpSolutionX" type="MatrixStore&lt;Double&gt;" line="229"/>
                    <declaration name="tmpSolutionLE" type="MatrixStore&lt;Double&gt;" line="230"/>
                    <scope line="231"/>
                    <scope line="234"/>
                    <scope line="237"/>
                </scope>
                <scope line="242">
                    <scope line="243"/>
                    <scope line="247"/>
                </scope>
                <scope line="253"/>
            </method>
            <method name="validate" type="boolean" line="259">
                <declaration name="retVal" type="boolean" line="260"/>
            </method>
        </class>
    </source>