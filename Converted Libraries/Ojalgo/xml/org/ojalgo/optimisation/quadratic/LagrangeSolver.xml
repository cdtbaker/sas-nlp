<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.ojalgo.optimisation.quadratic">
        <import package="org.ojalgo.constant.PrimitiveMath"/>
        <import package="org.ojalgo.function.PrimitiveFunction"/>
        <import package="org.ojalgo.function.UnaryFunction"/>
        <import package="org.ojalgo.function.aggregator.Aggregator"/>
        <import package="org.ojalgo.function.aggregator.AggregatorFunction"/>
        <import package="org.ojalgo.function.aggregator.PrimitiveAggregator"/>
        <import package="org.ojalgo.matrix.decomposition"/>
        <import package="org.ojalgo.matrix.store.AboveBelowStore"/>
        <import package="org.ojalgo.matrix.store.LeftRightStore"/>
        <import package="org.ojalgo.matrix.store.MatrixStore"/>
        <import package="org.ojalgo.matrix.store.PhysicalStore"/>
        <import package="org.ojalgo.matrix.store.ZeroStore"/>
        <import package="org.ojalgo.optimisation.ExpressionsBasedModel"/>
        <import package="org.ojalgo.optimisation.Optimisation"/>
        <class name="LagrangeSolver" line="16">
            <extends class="QuadraticSolver"/>
            <javadoc line="16">
                @author apete                
            </javadoc>
            <declaration name="myLU" type="LU&lt;Double&gt;" line="20"/>
            <declaration name="mySingularValue" type="SingularValue&lt;Double&gt;" line="21"/>
            <method name="LagrangeSolver" type="constructor" line="22">
                <params>
                    <param name="aModel" type="ExpressionsBasedModel"/>
                    <param name="solverOptions" type="Optimisation.Options"/>
                    <param name="matrices" type="QuadraticSolver.Builder"/>
                </params>
            </method>
            <method name="extractSolution" type="void" line="25">
                <params>
                    <param name="aSolver" type="Builder"/>
                </params>
                <declaration name="tmpSolutionX" type="MatrixStore&lt;Double&gt;" line="26"/>
                <declaration name="tmpCountVariables" type="int" line="27"/>
                <declaration name="tmpCountEqualityConstraints" type="int" line="28"/>
                <scope line="29"/>
                <scope line="32"/>
            </method>
            <method name="makeBuilder" type="Builder" line="36">
                <params>
                    <param name="addSmallDiagonal" type="boolean"/>
                </params>
                <declaration name="tmpBuilder" type="Builder" line="37"/>
                <declaration name="tmpQ" type="MatrixStore&lt;Double&gt;" line="38"/>
                <declaration name="tmpC" type="MatrixStore&lt;Double&gt;" line="39"/>
                <scope line="40">
                    <declaration name="tmpCopyQ" type="PhysicalStore&lt;Double&gt;" line="41"/>
                    <declaration name="tmpLargest" type="double" line="42"/>
                    <declaration name="tmpRelativelySmall" type="double" line="43"/>
                    <declaration name="tmpPracticalLimit" type="double" line="44"/>
                    <declaration name="tmpSmallToAdd" type="double" line="45"/>
                    <declaration name="tmpFunc" type="UnaryFunction&lt;Double&gt;" line="46"/>
                </scope>
                <scope line="50">
                    <declaration name="tmpAE" type="MatrixStore&lt;Double&gt;" line="51"/>
                    <declaration name="tmpBE" type="MatrixStore&lt;Double&gt;" line="52"/>
                    <declaration name="tmpZeroSize" type="int" line="53"/>
                    <declaration name="tmpUpperLeftAE" type="MatrixStore&lt;Double&gt;" line="54"/>
                    <declaration name="tmpUpperRightAE" type="MatrixStore&lt;Double&gt;" line="55"/>
                    <declaration name="tmpLowerLefAE" type="MatrixStore&lt;Double&gt;" line="56"/>
                    <declaration name="tmpLowerRightAE" type="MatrixStore&lt;Double&gt;" line="57"/>
                    <declaration name="tmpSubAE" type="MatrixStore&lt;Double&gt;" line="58"/>
                    <declaration name="tmpUpperBE" type="MatrixStore&lt;Double&gt;" line="59"/>
                    <declaration name="tmpLowerBE" type="MatrixStore&lt;Double&gt;" line="60"/>
                    <declaration name="tmpSubBE" type="MatrixStore&lt;Double&gt;" line="61"/>
                </scope>
                <scope line="64"/>
            </method>
            <method name="performIteration" type="void" line="69">
                <params>
                    <param name="builder" type="Builder"/>
                </params>
                <declaration name="tmpAE" type="MatrixStore&lt;Double&gt;" line="70"/>
                <declaration name="tmpBE" type="MatrixStore&lt;Double&gt;" line="71"/>
                <declaration name="tmpX" type="DecompositionStore&lt;Double&gt;" line="72"/>
                <scope line="74">
                    <scope line="75"/>
                    <declaration name="tmpSolution" type="MatrixStore&lt;Double&gt;" line="78"/>
                    <scope line="80"/>
                </scope>
                <scope line="84">
                    <scope line="85"/>
                    <scope line="89">
                        <scope line="90"/>
                        <declaration name="tmpSolution" type="MatrixStore&lt;Double&gt;" line="93"/>
                        <scope line="95"/>
                        <declaration name="tmpFrobNormCalc" type="AggregatorFunction&lt;Double&gt;" line="98"/>
                        <declaration name="tmpSlack" type="MatrixStore&lt;Double&gt;" line="99"/>
                        <scope line="101">
                            <scope line="102"/>
                        </scope>
                    </scope>
                    <scope line="109">
                        <scope line="110"/>
                    </scope>
                </scope>
            </method>
            <method name="initialise" type="boolean" line="118">
                <params>
                    <param name="kickStart" type="Result"/>
                </params>
            </method>
            <method name="needsAnotherIteration" type="boolean" line="123"/>
            <method name="performIteration" type="void" line="126">
                <declaration name="tmpBuilder" type="Builder" line="127"/>
                <scope line="129"/>
                <scope line="133">
                    <scope line="136"/>
                    <scope line="140"/>
                </scope>
            </method>
            <method name="validate" type="boolean" line="146">
                <declaration name="retVal" type="boolean" line="147"/>
                <scope line="149">
                    <declaration name="tmpQ" type="MatrixStore&lt;Double&gt;" line="150"/>
                    <declaration name="tmpCholesky" type="Cholesky&lt;Double&gt;" line="151"/>
                    <scope line="153">
                        <declaration name="tmpEigenvalue" type="Eigenvalue&lt;Double&gt;" line="154"/>
                        <declaration name="tmpD" type="MatrixStore&lt;Double&gt;" line="156"/>
                        <scope line="157">
                            <scope line="158"/>
                        </scope>
                    </scope>
                    <scope line="164"/>
                </scope>
                <scope line="167"/>
            </method>
        </class>
    </source>