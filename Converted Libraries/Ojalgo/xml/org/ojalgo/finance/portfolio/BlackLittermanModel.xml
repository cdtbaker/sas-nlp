<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.ojalgo.finance.portfolio">
        <import package="java.math.BigDecimal"/>
        <import package="java.util.ArrayList"/>
        <import package="java.util.List"/>
        <import package="org.ojalgo.ProgrammingError"/>
        <import package="org.ojalgo.access.Access2D"/>
        <import package="org.ojalgo.access.Access2D.Builder"/>
        <import package="org.ojalgo.constant.BigMath"/>
        <import package="org.ojalgo.constant.PrimitiveMath"/>
        <import package="org.ojalgo.function.PrimitiveFunction"/>
        <import package="org.ojalgo.matrix.BasicMatrix"/>
        <import package="org.ojalgo.matrix.PrimitiveMatrix"/>
        <import package="org.ojalgo.scalar.BigScalar"/>
        <import package="org.ojalgo.scalar.Scalar"/>
        <import package="org.ojalgo.type.TypeUtils"/>
        <class name="BlackLittermanModel" line="16">
            <extends class="EquilibriumModel"/>
            <class name="View" line="17">
                <extends class="FinancePortfolio"/>
                <javadoc line="17">
                    View/Forecast/Opinion                    
                    <author>
                        apete                        
                    </author>
                </javadoc>
                <declaration name="myMeanReturn" type="BigDecimal" line="22"/>
                <declaration name="myModel" type="BlackLittermanModel" line="23"/>
                <declaration name="myReturnVariance" type="BigDecimal" line="24"/>
                <declaration name="myScale" type="BigDecimal" line="25"/>
                <declaration name="myWeights" type="List&lt;BigDecimal&gt;" line="26"/>
                <method name="View" type="constructor" line="27">
                    <params>
                        <param name="aModel" type="BlackLittermanModel"/>
                        <param name="someWeights" type="List<BigDecimal>"/>
                    </params>
                </method>
                <method name="View" type="constructor" line="32"/>
                <method name="getMeanReturn" type="double" line="38">
                    <scope line="39"/>
                    <scope line="42"/>
                </method>
                <method name="getReturnVariance" type="double" line="46">
                    <scope line="47"/>
                    <scope line="50">
                        <declaration name="tmpWeights" type="BasicMatrix" line="51"/>
                        <declaration name="retVal" type="BigDecimal" line="52"/>
                        <scope line="53"/>
                        <scope line="56"/>
                    </scope>
                </method>
                <method name="getWeights" type="List<BigDecimal>" line="62"/>
                <method name="reset" type="void" line="65"/>
                <method name="setMeanReturn" type="void" line="67">
                    <params>
                        <param name="aMeanReturn" type="BigDecimal"/>
                    </params>
                </method>
                <method name="setReturnVariance" type="void" line="70">
                    <params>
                        <param name="aReturnVariance" type="BigDecimal"/>
                    </params>
                </method>
                <method name="setScale" type="void" line="73">
                    <params>
                        <param name="aScale" type="BigDecimal"/>
                    </params>
                </method>
            </class>
            <declaration name="myConfidence" type="BigDecimal" line="77"/>
            <declaration name="myOriginalWeights" type="BasicMatrix" line="78"/>
            <declaration name="myViews" type="List&lt;FinancePortfolio&gt;" line="79"/>
            <method name="BlackLittermanModel" type="constructor" line="80">
                <params>
                    <param name="aContext" type="Context"/>
                    <param name="originalWeights" type="FinancePortfolio"/>
                </params>
            </method>
            <javadoc line="85">
                @param aMarketEquilibrium The covariance matrix, and market risk aversion                
                <param>
                    originalWeights The market portfolio                    
                </param>
            </javadoc>
            <method name="BlackLittermanModel" type="constructor" line="89">
                <params>
                    <param name="aMarketEquilibrium" type="MarketEquilibrium"/>
                    <param name="originalWeights" type="BasicMatrix"/>
                </params>
            </method>
            <method name="BlackLittermanModel" type="constructor" line="94">
                <params>
                    <param name="aMarketEquilibrium" type="MarketEquilibrium"/>
                </params>
            </method>
            <method name="addView" type="void" line="100">
                <params>
                    <param name="aView" type="FinancePortfolio"/>
                </params>
            </method>
            <method name="addViewWithBalancedConfidence" type="void" line="103">
                <params>
                    <param name="someWeights" type="List<BigDecimal>"/>
                    <param name="aReturn" type="Number"/>
                </params>
                <declaration name="tmpView" type="View" line="104"/>
            </method>
            <method name="addViewWithScaledConfidence" type="void" line="110">
                <params>
                    <param name="someWeights" type="List<BigDecimal>"/>
                    <param name="aReturn" type="Number"/>
                    <param name="aScale" type="Number"/>
                </params>
                <declaration name="tmpView" type="View" line="111"/>
            </method>
            <javadoc line="117">
                @deprecated v30                
            </javadoc>
            <method name="addViewWithStandardDeviation" type="void" line="120">
                <params>
                    <param name="someWeights" type="List<BigDecimal>"/>
                    <param name="aReturn" type="BigDecimal"/>
                    <param name="aStdDev" type="BigDecimal"/>
                </params>
                <declaration name="tmpView" type="View" line="121"/>
            </method>
            <javadoc line="127">
                &quot;weight on views&quot; or &quot;tau&quot;
                  A parameter that describes the general confidence in the views.
                  Typically set to sometghing between 0.0 and 1.0.
                  0.0 = &quot;No confidence!&quot; Why bother...
                  1.0 = As confident as the market. This is highly unlikely.                
            </javadoc>
            <method name="getConfidence" type="Scalar<?>" line="134"/>
            <javadoc line="137">
                @see #getConfidence()                
            </javadoc>
            <method name="setConfidence" type="void" line="140">
                <params>
                    <param name="aWeight" type="Number"/>
                </params>
            </method>
            <method name="calculateAssetReturns" type="BasicMatrix" line="143"/>
            <method name="calculateAssetWeights" type="BasicMatrix" line="146">
                <declaration name="tmpViewPortfolios" type="BasicMatrix" line="147"/>
                <declaration name="tmpViewReturns" type="BasicMatrix" line="148"/>
                <declaration name="tmpViewVariances" type="BasicMatrix" line="149"/>
                <declaration name="tmpCovariances" type="BasicMatrix" line="150"/>
                <declaration name="tmpRightParenthesis" type="BasicMatrix" line="151"/>
                <declaration name="tmpViewsTransposed" type="BasicMatrix" line="152"/>
                <declaration name="tmpLeftParenthesis" type="BasicMatrix" line="153"/>
            </method>
            <method name="getOriginalReturns" type="BasicMatrix" line="156"/>
            <javadoc line="159">
                @see org.ojalgo.finance.portfolio.BlackLittermanModel#getOriginalWeights()                
                <see>
                    org.ojalgo.finance.portfolio.BlackLittermanModel#getAssetWeights()                    
                </see>
            </javadoc>
            <method name="getOriginalWeights" type="BasicMatrix" line="163"/>
            <method name="getViewPortfolios" type="BasicMatrix" line="166">
                <declaration name="tmpRowDim" type="int" line="167"/>
                <declaration name="tmpColDim" type="int" line="168"/>
                <declaration name="retVal" type="Access2D.Builder&lt;PrimitiveMatrix&gt;" line="169"/>
                <declaration name="tmpView" type="FinancePortfolio" line="170"/>
                <declaration name="tmpWeights" type="List&lt;BigDecimal&gt;" line="171"/>
                <scope line="172">
                    <scope line="175"/>
                </scope>
            </method>
            <javadoc line="181">
                Scaled by risk aversion factor.                
            </javadoc>
            <method name="getViewReturns" type="BasicMatrix" line="184">
                <declaration name="tmpRowDim" type="int" line="185"/>
                <declaration name="tmpColDim" type="int" line="186"/>
                <declaration name="retVal" type="Access2D.Builder&lt;PrimitiveMatrix&gt;" line="187"/>
                <declaration name="tmpRet" type="double" line="188"/>
                <declaration name="tmpRAF" type="double" line="189"/>
                <scope line="190"/>
            </method>
            <method name="getViews" type="List<FinancePortfolio>" line="196"/>
            <javadoc line="199">
                Scaled by tau / weight on views                
            </javadoc>
            <method name="getViewVariances" type="BasicMatrix" line="202">
                <declaration name="tmpDim" type="int" line="203"/>
                <declaration name="retVal" type="Builder&lt;PrimitiveMatrix&gt;" line="204"/>
                <scope line="205">
                    <scope line="206"/>
                </scope>
                <scope line="210">
                    <declaration name="tmpScale" type="double" line="211"/>
                    <declaration name="tmpVar" type="double" line="212"/>
                    <scope line="213"/>
                </scope>
            </method>
            <method name="calculateVariance" type="BigDecimal" line="220">
                <params>
                    <param name="aWeightsMtrx" type="BasicMatrix"/>
                </params>
                <declaration name="tmpVal" type="BasicMatrix" line="221"/>
            </method>
        </class>
    </source>