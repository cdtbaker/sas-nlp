<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.ojalgo.finance">
        <import package="org.ojalgo.constant.PrimitiveMath"/>
        <import package="java.math.BigDecimal"/>
        <import package="java.util.ArrayList"/>
        <import package="java.util.Calendar"/>
        <import package="java.util.Collection"/>
        <import package="java.util.Date"/>
        <import package="java.util.Map.Entry"/>
        <import package="org.ojalgo.access.Access1D"/>
        <import package="org.ojalgo.access.Access2D"/>
        <import package="org.ojalgo.access.Access2D.Builder"/>
        <import package="org.ojalgo.array.Array1D"/>
        <import package="org.ojalgo.array.ArrayUtils"/>
        <import package="org.ojalgo.constant.PrimitiveMath"/>
        <import package="org.ojalgo.function.PrimitiveFunction"/>
        <import package="org.ojalgo.matrix.BasicMatrix"/>
        <import package="org.ojalgo.matrix.PrimitiveMatrix"/>
        <import package="org.ojalgo.matrix.decomposition.Eigenvalue"/>
        <import package="org.ojalgo.matrix.decomposition.EigenvalueDecomposition"/>
        <import package="org.ojalgo.matrix.store.MatrixStore"/>
        <import package="org.ojalgo.matrix.store.PhysicalStore"/>
        <import package="org.ojalgo.random.Deterministic"/>
        <import package="org.ojalgo.random.RandomNumber"/>
        <import package="org.ojalgo.random.RandomUtils"/>
        <import package="org.ojalgo.random.SampleSet"/>
        <import package="org.ojalgo.random.process.GeometricBrownianMotion"/>
        <import package="org.ojalgo.series.CalendarDateSeries"/>
        <import package="org.ojalgo.series.CoordinationSet"/>
        <import package="org.ojalgo.type.CalendarDate"/>
        <import package="org.ojalgo.type.CalendarDateUnit"/>
        <class name="FinanceUtils" line="31">
            <method name="calculateValueAtRisk" type="double" line="32">
                <params>
                    <param name="aReturn" type="double"/>
                    <param name="aStdDev" type="double"/>
                    <param name="aConfidence" type="double"/>
                    <param name="aTime" type="double"/>
                </params>
                <declaration name="tmpConfidenceScale" type="double" line="33"/>
            </method>
            <method name="estimateExcessDiffusionProcess" type="GeometricBrownianMotion" line="36">
                <params>
                    <param name="aPriceSeries" type="CalendarDateSeries<?>"/>
                    <param name="aRiskFreeInterestRateSeries" type="CalendarDateSeries<?>"/>
                    <param name="aTimeUnit" type="CalendarDateUnit"/>
                </params>
                <declaration name="tmpSampleSet" type="SampleSet" line="37"/>
                <declaration name="tmpStepSize" type="double" line="38"/>
                <declaration name="tmpExp" type="double" line="40"/>
                <declaration name="tmpVar" type="double" line="41"/>
                <declaration name="tmpDiff" type="double" line="42"/>
                <declaration name="tmpDrift" type="double" line="43"/>
                <declaration name="retVal" type="GeometricBrownianMotion" line="44"/>
            </method>
            <method name="forecast" type="CalendarDateSeries<RandomNumber>" line="47">
                <params>
                    <param name="aSeries" type="CalendarDateSeries<? extends Number>"/>
                    <param name="aPointCount" type="int"/>
                    <param name="aTimeUnit" type="CalendarDateUnit"/>
                    <param name="includeOriginalSeries" type="boolean"/>
                </params>
                <declaration name="retVal" type="CalendarDateSeries&lt;RandomNumber&gt;" line="48"/>
                <declaration name="tmpSamplePeriod" type="double" line="50"/>
                <declaration name="tmpProcess" type="GeometricBrownianMotion" line="51"/>
                <scope line="52">
                    <scope line="53"/>
                </scope>
                <declaration name="tmpLastKey" type="CalendarDate" line="57"/>
                <declaration name="tmpLastValue" type="double" line="58"/>
                <scope line="60"/>
            </method>
            <method name="makeCalendarPriceSeries" type="CalendarDateSeries<BigDecimal>" line="65">
                <params>
                    <param name="somePrices" type="double[]"/>
                    <param name="aStartCalendar" type="Calendar"/>
                    <param name="aResolution" type="CalendarDateUnit"/>
                </params>
                <declaration name="retVal" type="CalendarDateSeries&lt;BigDecimal&gt;" line="66"/>
            </method>
            <javadoc line="70">
                @param timeSeriesCollection                
                <return>
                    Annualised covariances                    
                </return>
            </javadoc>
            <method name="makeCovarianceMatrix" type="BasicMatrix<?>" line="74">
                <params>
                    <param name="timeSeriesCollection" type="Collection<CalendarDateSeries<V>>"/>
                </params>
                <declaration name="tmpCoordinator" type="CoordinationSet&lt;V&gt;" line="75"/>
                <declaration name="tmpSampleSets" type="ArrayList&lt;SampleSet&gt;" line="76"/>
                <scope line="77">
                    <declaration name="someValues" type="double[]" line="78"/>
                    <declaration name="tmpSize1" type="int" line="79"/>
                    <declaration name="retVal" type="double[]" line="80"/>
                    <scope line="81"/>
                    <declaration name="tmpMakeUsingLogarithmicChanges" type="SampleSet" line="84"/>
                </scope>
                <declaration name="tmpSize" type="int" line="87"/>
                <declaration name="retValStore" type="Access2D.Builder&lt;PrimitiveMatrix&gt;" line="88"/>
                <declaration name="tmpToYearFactor" type="double" line="89"/>
                <declaration name="tmpRowSet" type="SampleSet" line="90"/>
                <declaration name="tmpColSet" type="SampleSet" line="91"/>
                <scope line="92">
                    <scope line="94"/>
                </scope>
            </method>
            <method name="makeDatePriceSeries" type="CalendarDateSeries<BigDecimal>" line="101">
                <params>
                    <param name="somePrices" type="double[]"/>
                    <param name="aStartDate" type="Date"/>
                    <param name="aResolution" type="CalendarDateUnit"/>
                </params>
                <declaration name="retVal" type="CalendarDateSeries&lt;BigDecimal&gt;" line="102"/>
            </method>
            <javadoc line="106">
                @param aPriceSeries A series of prices                
                <param>
                    aRiskFreeInterestRateSeries A series of interest rates (risk free return expressed in %, 5.0 means 5.0%
                      annualized risk free return)                    
                </param>
                <return>
                    A sample set of price growth rates adjusted for risk free return                    
                </return>
            </javadoc>
            <method name="makeExcessGrowthRateSampleSet" type="SampleSet" line="112">
                <params>
                    <param name="aPriceSeries" type="CalendarDateSeries<?>"/>
                    <param name="aRiskFreeInterestRateSeries" type="CalendarDateSeries<?>"/>
                </params>
                <scope line="113"/>
                <scope line="116"/>
                <scope line="119"/>
                <declaration name="tmpPrices" type="double[]" line="122"/>
                <declaration name="tmpRiskFreeInterestRates" type="double[]" line="123"/>
                <declaration name="retVal" type="Array1D&lt;Double&gt;" line="124"/>
                <declaration name="tmpUnit" type="CalendarDateUnit" line="125"/>
                <declaration name="tmpThisRiskFree" type="double" line="126"/>
                <scope line="127"/>
            </method>
            <javadoc line="141">
                @param aPriceSeries A series of prices                
                <param>
                    aRiskFreeInterestRateSeries A series of interest rates (risk free return expressed in %, 5.0 means 5.0%
                      annualized risk free return)                    
                </param>
                <return>
                    A sample set of price growth rates adjusted for risk free return                    
                </return>
            </javadoc>
            <method name="makeNormalisedExcessPrice" type="CalendarDateSeries<Double>" line="147">
                <params>
                    <param name="aPriceSeries" type="CalendarDateSeries<?>"/>
                    <param name="aRiskFreeInterestRateSeries" type="CalendarDateSeries<?>"/>
                </params>
                <scope line="148"/>
                <scope line="151"/>
                <scope line="154"/>
                <declaration name="tmpDates" type="long[]" line="157"/>
                <declaration name="tmpPrices" type="double[]" line="158"/>
                <declaration name="tmpRiskFreeInterestRates" type="double[]" line="159"/>
                <declaration name="tmpResolution" type="CalendarDateUnit" line="160"/>
                <declaration name="retVal" type="CalendarDateSeries&lt;Double&gt;" line="161"/>
                <declaration name="tmpThisRiskFree" type="double" line="162"/>
                <declaration name="tmpAggregatedExcessPrice" type="double" line="163"/>
                <scope line="165"/>
            </method>
            <javadoc line="179">
                GrowthRate = ln(GrowthFactor)                
                <param>
                    growthFactor A growth factor per unit (day, week, month, year...)                    
                </param>
                <param>
                    growthFactorUnit A growth factor unit                    
                </param>
                <return>
                    Annualised return (percentage per year)                    
                </return>
            </javadoc>
            <method name="toAnnualReturnFromGrowthFactor" type="double" line="185">
                <params>
                    <param name="growthFactor" type="double"/>
                    <param name="growthFactorUnit" type="CalendarDateUnit"/>
                </params>
                <declaration name="tmpGrowthFactorUnitsPerYear" type="double" line="186"/>
            </method>
            <javadoc line="189">
                AnnualReturn = exp(GrowthRate  GrowthRateUnitsPerYear) - 1.0                
                <param>
                    growthRate A growth rate per unit (day, week, month, year...)                    
                </param>
                <param>
                    growthRateUnit A growth rate unit                    
                </param>
                <return>
                    Annualised return (percentage per year)                    
                </return>
            </javadoc>
            <method name="toAnnualReturnFromGrowthRate" type="double" line="195">
                <params>
                    <param name="growthRate" type="double"/>
                    <param name="growthRateUnit" type="CalendarDateUnit"/>
                </params>
                <declaration name="tmpGrowthRateUnitsPerYear" type="double" line="196"/>
            </method>
            <method name="toAssetVolatilities" type="PrimitiveMatrix" line="199">
                <params>
                    <param name="covariances" type="Access2D<?>"/>
                </params>
                <declaration name="tmpSize" type="int" line="200"/>
                <declaration name="retVal" type="Builder&lt;PrimitiveMatrix&gt;" line="201"/>
                <scope line="202"/>
            </method>
            <method name="toCorrelations" type="PrimitiveMatrix" line="207">
                <params>
                    <param name="covariances" type="Access2D<?>"/>
                    <param name="clean" type="boolean"/>
                </params>
                <declaration name="tmpSize" type="int" line="208"/>
                <declaration name="tmpCovariances" type="Access2D&lt;?&gt;" line="209"/>
                <scope line="210">
                    <declaration name="tmpEvD" type="Eigenvalue&lt;Double&gt;" line="211"/>
                    <declaration name="tmpV" type="MatrixStore&lt;Double&gt;" line="213"/>
                    <declaration name="tmpD" type="PhysicalStore&lt;Double&gt;" line="214"/>
                    <declaration name="tmpLargest" type="double" line="215"/>
                    <declaration name="tmpLimit" type="double" line="216"/>
                    <scope line="217">
                        <scope line="218"/>
                    </scope>
                    <declaration name="tmpLeft" type="MatrixStore&lt;Double&gt;" line="222"/>
                    <declaration name="tmpMiddle" type="MatrixStore&lt;Double&gt;" line="223"/>
                    <declaration name="tmpRight" type="MatrixStore&lt;Double&gt;" line="224"/>
                </scope>
                <declaration name="retVal" type="Builder&lt;PrimitiveMatrix&gt;" line="227"/>
                <declaration name="tmpVolatilities" type="double[]" line="228"/>
                <scope line="229"/>
                <scope line="232">
                    <declaration name="tmpColVol" type="double" line="233"/>
                    <scope line="235">
                        <declaration name="tmpCovariance" type="double" line="236"/>
                        <declaration name="tmpCorrelation" type="double" line="237"/>
                    </scope>
                </scope>
            </method>
            <method name="toCovariances" type="PrimitiveMatrix" line="244">
                <params>
                    <param name="assetVolatilities" type="Access1D<?>"/>
                    <param name="correlations" type="Access2D<?>"/>
                </params>
                <declaration name="tmpSize" type="int" line="245"/>
                <declaration name="retVal" type="Builder&lt;PrimitiveMatrix&gt;" line="246"/>
                <scope line="247">
                    <declaration name="tmpColumnVolatility" type="double" line="248"/>
                    <scope line="250">
                        <declaration name="tmpCovariance" type="double" line="251"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="258">
                GrowthFactor = exp(GrowthRate)                
                <param>
                    annualReturn Annualised return (percentage per year)                    
                </param>
                <param>
                    growthFactorUnit A growth factor unit                    
                </param>
                <return>
                    A growth factor per unit (day, week, month, year...)                    
                </return>
            </javadoc>
            <method name="toGrowthFactorFromAnnualReturn" type="double" line="264">
                <params>
                    <param name="annualReturn" type="double"/>
                    <param name="growthFactorUnit" type="CalendarDateUnit"/>
                </params>
                <declaration name="tmpAnnualGrowthFactor" type="double" line="265"/>
                <declaration name="tmpYearsPerGrowthFactorUnit" type="double" line="266"/>
            </method>
            <javadoc line="269">
                GrowthRate = ln(1.0 + InterestRate) / GrowthRateUnitsPerYear                
                <param>
                    annualReturn Annualised return (percentage per year)                    
                </param>
                <param>
                    growthRateUnit A growth rate unit                    
                </param>
                <return>
                    A growth rate per unit (day, week, month, year...)                    
                </return>
            </javadoc>
            <method name="toGrowthRateFromAnnualReturn" type="double" line="275">
                <params>
                    <param name="annualReturn" type="double"/>
                    <param name="growthRateUnit" type="CalendarDateUnit"/>
                </params>
                <declaration name="tmpAnnualGrowthRate" type="double" line="276"/>
                <declaration name="tmpYearsPerGrowthRateUnit" type="double" line="277"/>
            </method>
            <method name="copyValues" type="void" line="280">
                <params>
                    <param name="aSeries" type="CalendarDateSeries<BigDecimal>"/>
                    <param name="aFirstKey" type="CalendarDate"/>
                    <param name="someValues" type="double[]"/>
                </params>
                <declaration name="tmpKey" type="CalendarDate" line="281"/>
                <scope line="282"/>
            </method>
            <method name="FinanceUtils" type="constructor" line="287"/>
        </class>
    </source>