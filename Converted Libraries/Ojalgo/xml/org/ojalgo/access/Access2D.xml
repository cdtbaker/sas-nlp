<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.ojalgo.access">
        <import package="java.util.List"/>
        <import package="org.ojalgo.function.UnaryFunction"/>
        <import package="org.ojalgo.function.VoidFunction"/>
        <import package="org.ojalgo.random.RandomNumber"/>
        <import package="org.ojalgo.scalar.Scalar"/>
        <interface name="Access2D">
            <type_params>
                <type_param name="N"/>
            </type_params>
            <implements interface="Structure2D"/>
            <implements interface="Access1D">
                <type_params>
                    <type_param name="N"/>
                </type_params>
            </implements>
            <interface name="Builder">
                <type_params>
                    <type_param name="I"/>
                </type_params>
                <implements interface="Structure2D"/>
                <implements interface="Access1D.Builder">
                    <type_params>
                        <type_param name="I"/>
                    </type_params>
                </implements>
                <javadoc line="33">
                    This interface mimics {@linkplain Fillable}, but methods return the builder instance instead, and then adds the{@link #build()} method.                    
                    <author>
                        apete                        
                    </author>
                </javadoc>
                <method name="build" type="I" line="41"/>
                <method name="fillColumn" type="Builder&lt;I&gt;" line="43"/>
                <method name="fillDiagonal" type="Builder&lt;I&gt;" line="45"/>
                <method name="fillRow" type="Builder&lt;I&gt;" line="47"/>
                <method name="set" type="Builder&lt;I&gt;" line="49"/>
                <method name="set" type="Builder&lt;I&gt;" line="51"/>
            </interface>
            <interface name="Elements">
                <implements interface="Structure2D"/>
                <implements interface="Access1D.Elements"/>
                <method name="isAbsolute" type="boolean" line="57"/>
                <javadoc line="57">
                    @see Scalar#isAbsolute()                    
                </javadoc>
                <method name="isInfinite" type="boolean" line="62"/>
                <javadoc line="62">
                    @see Scalar#isInfinite()                    
                    <deprecated>
                        v36 Only plan to keep {@link #isAbsolute(long,long)} and {@link #isZero(long,long)}.                        
                    </deprecated>
                </javadoc>
                <method name="isNaN" type="boolean" line="69"/>
                <javadoc line="69">
                    @see Scalar#isNaN()                    
                    <deprecated>
                        v36 Only plan to keep {@link #isAbsolute(long,long)} and {@link #isZero(long,long)}.                        
                    </deprecated>
                </javadoc>
                <method name="isPositive" type="boolean" line="76"/>
                <javadoc line="76">
                    @see Scalar#isPositive()                    
                    <deprecated>
                        v36 Only plan to keep {@link #isAbsolute(long,long)} and {@link #isZero(long,long)}.                        
                    </deprecated>
                </javadoc>
                <method name="isReal" type="boolean" line="83"/>
                <javadoc line="83">
                    @see Scalar#isReal()                    
                    <deprecated>
                        v36 Only plan to keep {@link #isAbsolute(long,long)} and {@link #isZero(long,long)}.                        
                    </deprecated>
                </javadoc>
                <method name="isZero" type="boolean" line="90"/>
                <javadoc line="90">
                    @see Scalar#isZero()                    
                </javadoc>
            </interface>
            <interface name="Factory">
                <type_params>
                    <type_param name="I"/>
                </type_params>
                <method name="columns" type="I" line="99"/>
                <method name="columns" type="I" line="101"/>
                <method name="columns" type="I" line="103"/>
                <method name="columns" type="I" line="106"/>
                <method name="copy" type="I" line="108"/>
                <method name="makeEye" type="I" line="110"/>
                <method name="makeRandom" type="I" line="112"/>
                <method name="makeZero" type="I" line="114"/>
                <method name="rows" type="I" line="116"/>
                <method name="rows" type="I" line="118"/>
                <method name="rows" type="I" line="120"/>
                <method name="rows" type="I" line="123"/>
            </interface>
            <interface name="Fillable">
                <type_params>
                    <type_param name="N"/>
                </type_params>
                <implements interface="Structure2D"/>
                <implements interface="Access1D.Fillable">
                    <type_params>
                        <type_param name="N"/>
                    </type_params>
                </implements>
                <method name="fillColumn" type="void" line="129"/>
                <method name="fillDiagonal" type="void" line="131"/>
                <method name="fillRow" type="void" line="133"/>
                <method name="set" type="void" line="135"/>
                <method name="set" type="void" line="137"/>
            </interface>
            <interface name="Iterable2D">
                <type_params>
                    <type_param name="N"/>
                </type_params>
                <method name="columns" type="Iterable&lt;Access1D&lt;N&gt;&gt;" line="143"/>
                <method name="rows" type="Iterable&lt;Access1D&lt;N&gt;&gt;" line="145"/>
            </interface>
            <interface name="Modifiable">
                <type_params>
                    <type_param name="N"/>
                </type_params>
                <implements interface="Structure2D"/>
                <implements interface="Access1D.Modifiable">
                    <type_params>
                        <type_param name="N"/>
                    </type_params>
                </implements>
                <method name="modifyColumn" type="void" line="150"/>
                <method name="modifyDiagonal" type="void" line="152"/>
                <method name="modifyRow" type="void" line="154"/>
            </interface>
            <interface name="Visitable">
                <type_params>
                    <type_param name="N"/>
                </type_params>
                <implements interface="Structure2D"/>
                <implements interface="Access1D.Visitable">
                    <type_params>
                        <type_param name="N"/>
                    </type_params>
                </implements>
                <method name="visitColumn" type="void" line="160"/>
                <method name="visitDiagonal" type="void" line="162"/>
                <method name="visitRow" type="void" line="164"/>
            </interface>
            <method name="doubleValue" type="double" line="168"/>
            <javadoc line="168">
                Extracts one element of this matrix as a double.                
                <param>
                    row A row index.                    
                </param>
                <param>
                    column A column index.                    
                </param>
                <return>
                    One matrix element                    
                </return>
            </javadoc>
            <method name="get" type="N" line="177"/>
        </interface>
    </source>