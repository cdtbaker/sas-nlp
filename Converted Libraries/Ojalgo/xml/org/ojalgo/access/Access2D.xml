<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.ojalgo.access">
        <import package="java.util.List"/>
        <import package="org.ojalgo.function.UnaryFunction"/>
        <import package="org.ojalgo.function.VoidFunction"/>
        <import package="org.ojalgo.random.RandomNumber"/>
        <import package="org.ojalgo.scalar.Scalar"/>
        <interface name="Access2D">
            <type_params>
                <type_param name="N"/>
            </type_params>
            <implements interface="Structure2D"/>
            <implements interface="Access1D">
                <type_params>
                    <type_param name="N"/>
                </type_params>
            </implements>
            <interface name="Builder">
                <type_params>
                    <type_param name="I"/>
                </type_params>
                <implements interface="Structure2D"/>
                <implements interface="Access1D.Builder">
                    <type_params>
                        <type_param name="I"/>
                    </type_params>
                </implements>
                <javadoc line="8">
                    This interface mimics {@linkplain Fillable}, but methods return the builder instance instead, and then adds the{@link #build()} method.                    
                    <author>
                        apete                        
                    </author>
                </javadoc>
                <method name="build" type="I" line="13"/>
                <method name="fillColumn" type="Builder<I>" line="14"/>
                <method name="fillDiagonal" type="Builder<I>" line="15"/>
                <method name="fillRow" type="Builder<I>" line="16"/>
                <method name="set" type="Builder<I>" line="17"/>
                <method name="set" type="Builder<I>" line="18"/>
            </interface>
            <interface name="Elements">
                <implements interface="Structure2D"/>
                <implements interface="Access1D.Elements"/>
                <method name="isAbsolute" type="boolean" line="21"/>
                <javadoc line="21">
                    @see Scalar#isAbsolute()                    
                </javadoc>
                <method name="isInfinite" type="boolean" line="25"/>
                <javadoc line="25">
                    @see Scalar#isInfinite()                    
                </javadoc>
                <method name="isNaN" type="boolean" line="29"/>
                <javadoc line="29">
                    @see Scalar#isNaN()                    
                </javadoc>
                <method name="isPositive" type="boolean" line="33"/>
                <javadoc line="33">
                    @see Scalar#isPositive()                    
                </javadoc>
                <method name="isReal" type="boolean" line="37"/>
                <javadoc line="37">
                    @see Scalar#isReal()                    
                </javadoc>
                <method name="isZero" type="boolean" line="41"/>
                <javadoc line="41">
                    @see Scalar#isZero()                    
                </javadoc>
            </interface>
            <interface name="Factory">
                <type_params>
                    <type_param name="I"/>
                </type_params>
                <method name="columns" type="I" line="47"/>
                <method name="columns" type="I" line="48"/>
                <method name="columns" type="I" line="49"/>
                <method name="columns" type="I" line="50"/>
                <method name="copy" type="I" line="51"/>
                <method name="makeEye" type="I" line="52"/>
                <method name="makeRandom" type="I" line="53"/>
                <method name="makeZero" type="I" line="54"/>
                <method name="rows" type="I" line="55"/>
                <method name="rows" type="I" line="56"/>
                <method name="rows" type="I" line="57"/>
                <method name="rows" type="I" line="58"/>
            </interface>
            <interface name="Fillable">
                <type_params>
                    <type_param name="N"/>
                </type_params>
                <implements interface="Structure2D"/>
                <implements interface="Access1D.Fillable">
                    <type_params>
                        <type_param name="N"/>
                    </type_params>
                </implements>
                <method name="fillColumn" type="void" line="61"/>
                <method name="fillDiagonal" type="void" line="62"/>
                <method name="fillRow" type="void" line="63"/>
                <method name="set" type="void" line="64"/>
                <method name="set" type="void" line="65"/>
            </interface>
            <interface name="Iterable2D">
                <type_params>
                    <type_param name="N"/>
                </type_params>
                <method name="columns" type="Iterable<Access1D<N>>" line="68"/>
                <method name="rows" type="Iterable<Access1D<N>>" line="69"/>
            </interface>
            <interface name="Modifiable">
                <type_params>
                    <type_param name="N"/>
                </type_params>
                <implements interface="Structure2D"/>
                <implements interface="Access1D.Modifiable">
                    <type_params>
                        <type_param name="N"/>
                    </type_params>
                </implements>
                <method name="modifyColumn" type="void" line="72"/>
                <method name="modifyDiagonal" type="void" line="73"/>
                <method name="modifyRow" type="void" line="74"/>
            </interface>
            <interface name="Visitable">
                <type_params>
                    <type_param name="N"/>
                </type_params>
                <implements interface="Structure2D"/>
                <implements interface="Access1D.Visitable">
                    <type_params>
                        <type_param name="N"/>
                    </type_params>
                </implements>
                <method name="visitColumn" type="void" line="77"/>
                <method name="visitDiagonal" type="void" line="78"/>
                <method name="visitRow" type="void" line="79"/>
            </interface>
            <method name="doubleValue" type="double" line="81"/>
            <javadoc line="81">
                Extracts one element of this matrix as a double.                
                <param>
                    row A row index.                    
                </param>
                <param>
                    column A column index.                    
                </param>
                <return>
                    One matrix element                    
                </return>
            </javadoc>
            <method name="get" type="N" line="88"/>
        </interface>
    </source>