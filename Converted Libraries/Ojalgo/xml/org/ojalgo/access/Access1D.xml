<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.ojalgo.access">
        <import package="java.util.List"/>
        <import package="org.ojalgo.function.UnaryFunction"/>
        <import package="org.ojalgo.function.VoidFunction"/>
        <import package="org.ojalgo.random.RandomNumber"/>
        <import package="org.ojalgo.scalar.Scalar"/>
        <interface name="Access1D">
            <type_params>
                <type_param name="N"/>
            </type_params>
            <implements interface="Structure1D"/>
            <implements interface="Iterable">
                <type_params>
                    <type_param name="N"/>
                </type_params>
            </implements>
            <interface name="Builder">
                <type_params>
                    <type_param name="I"/>
                </type_params>
                <implements interface="Structure1D"/>
                <method name="build" type="I" line="9"/>
                <method name="fillAll" type="Builder<I>" line="10"/>
                <method name="set" type="Builder<I>" line="11"/>
                <method name="set" type="Builder<I>" line="12"/>
            </interface>
            <interface name="Elements">
                <implements interface="Structure1D"/>
                <method name="isAbsolute" type="boolean" line="15"/>
                <javadoc line="15">
                    @see Scalar#isAbsolute()                    
                </javadoc>
                <method name="isInfinite" type="boolean" line="19"/>
                <javadoc line="19">
                    @see Scalar#isInfinite()                    
                </javadoc>
                <method name="isNaN" type="boolean" line="23"/>
                <javadoc line="23">
                    @see Scalar#isNaN()                    
                </javadoc>
                <method name="isPositive" type="boolean" line="27"/>
                <javadoc line="27">
                    @see Scalar#isPositive()                    
                </javadoc>
                <method name="isReal" type="boolean" line="31"/>
                <javadoc line="31">
                    @see Scalar#isReal()                    
                </javadoc>
                <method name="isZero" type="boolean" line="35"/>
                <javadoc line="35">
                    @see Scalar#isZero()                    
                </javadoc>
            </interface>
            <interface name="Factory">
                <type_params>
                    <type_param name="I"/>
                </type_params>
                <method name="copy" type="I" line="41"/>
                <method name="copy" type="I" line="42"/>
                <method name="copy" type="I" line="43"/>
                <method name="copy" type="I" line="44"/>
                <method name="makeRandom" type="I" line="45"/>
                <method name="makeZero" type="I" line="46"/>
            </interface>
            <interface name="Fillable">
                <type_params>
                    <type_param name="N"/>
                </type_params>
                <implements interface="Structure1D"/>
                <method name="fillAll" type="void" line="49"/>
                <method name="fillRange" type="void" line="50"/>
                <method name="set" type="N" line="51"/>
                <javadoc line="51">
                    Compatible with {@linkplain List#set(int,Object)}                    
                    <deprecated>
                        v35 Use {@link #set(long,double)} instead                        
                    </deprecated>
                </javadoc>
                <method name="set" type="void" line="56"/>
                <method name="set" type="void" line="57"/>
            </interface>
            <interface name="Modifiable">
                <type_params>
                    <type_param name="N"/>
                </type_params>
                <implements interface="Structure1D"/>
                <method name="modifyAll" type="void" line="60"/>
                <method name="modifyRange" type="void" line="61"/>
            </interface>
            <interface name="Visitable">
                <type_params>
                    <type_param name="N"/>
                </type_params>
                <implements interface="Structure1D"/>
                <method name="visitAll" type="void" line="64"/>
                <method name="visitRange" type="void" line="65"/>
            </interface>
            <method name="doubleValue" type="double" line="67"/>
            <method name="get" type="N" line="68"/>
        </interface>
    </source>