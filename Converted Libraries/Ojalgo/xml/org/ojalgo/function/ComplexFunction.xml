<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.ojalgo.function">
        <import package="org.ojalgo.constant.PrimitiveMath"/>
        <import package="org.ojalgo.scalar.ComplexNumber"/>
        <import package="org.ojalgo.type.TypeUtils"/>
        <class name="ComplexFunction" line="28">
            <extends class="FunctionSet">
                <type_params>
                    <type_param name="ComplexNumber"/>
                </type_params>
            </extends>
            <class name="Binary" line="30">
                <extends class="BinaryFunction">
                    <type_params>
                        <type_param name="ComplexNumber"/>
                    </type_params>
                </extends>
                <method name="invoke" type="double" line="33">
                    <params>
                        <param name="arg1" type="double"/>
                        <param name="arg2" type="double"/>
                    </params>
                </method>
            </class>
            <class name="Parameter" line="39">
                <extends class="ParameterFunction">
                    <type_params>
                        <type_param name="ComplexNumber"/>
                    </type_params>
                </extends>
                <method name="invoke" type="double" line="42">
                    <params>
                        <param name="arg" type="double"/>
                        <param name="param" type="int"/>
                    </params>
                </method>
            </class>
            <class name="Unary" line="48">
                <implements interface="UnaryFunction">
                    <type_params>
                        <type_param name="ComplexNumber"/>
                    </type_params>
                </implements>
                <method name="invoke" type="double" line="50">
                    <params>
                        <param name="arg" type="double"/>
                    </params>
                </method>
            </class>
            <declaration name="ABS" type="UnaryFunction&amp;lt;ComplexNumber&amp;gt;" line="56"/>
            <anonymous_class line="56">
                <method name="invoke" type="ComplexNumber" line="58">
                    <params>
                        <param name="arg" type="ComplexNumber"/>
                    </params>
                </method>
            </anonymous_class>
            <declaration name="ACOS" type="UnaryFunction&amp;lt;ComplexNumber&amp;gt;" line="64"/>
            <anonymous_class line="64">
                <method name="invoke" type="ComplexNumber" line="66">
                    <params>
                        <param name="arg" type="ComplexNumber"/>
                    </params>
                    <declaration name="tmpNmbr" type="ComplexNumber" line="68"/>
                </method>
            </anonymous_class>
            <declaration name="ACOSH" type="UnaryFunction&amp;lt;ComplexNumber&amp;gt;" line="77"/>
            <anonymous_class line="77">
                <method name="invoke" type="ComplexNumber" line="79">
                    <params>
                        <param name="arg" type="ComplexNumber"/>
                    </params>
                    <declaration name="tmpNmbr" type="ComplexNumber" line="81"/>
                </method>
            </anonymous_class>
            <declaration name="ADD" type="BinaryFunction&amp;lt;ComplexNumber&amp;gt;" line="88"/>
            <anonymous_class line="88">
                <method name="invoke" type="ComplexNumber" line="91">
                    <params>
                        <param name="arg1" type="ComplexNumber"/>
                        <param name="arg2" type="ComplexNumber"/>
                    </params>
                </method>
            </anonymous_class>
            <declaration name="ASIN" type="UnaryFunction&amp;lt;ComplexNumber&amp;gt;" line="97"/>
            <anonymous_class line="97">
                <method name="invoke" type="ComplexNumber" line="99">
                    <params>
                        <param name="arg" type="ComplexNumber"/>
                    </params>
                    <declaration name="tmpNmbr" type="ComplexNumber" line="101"/>
                </method>
            </anonymous_class>
            <declaration name="ASINH" type="UnaryFunction&amp;lt;ComplexNumber&amp;gt;" line="110"/>
            <anonymous_class line="110">
                <method name="invoke" type="ComplexNumber" line="112">
                    <params>
                        <param name="arg" type="ComplexNumber"/>
                    </params>
                    <declaration name="tmpNmbr" type="ComplexNumber" line="114"/>
                </method>
            </anonymous_class>
            <declaration name="ATAN" type="UnaryFunction&amp;lt;ComplexNumber&amp;gt;" line="121"/>
            <anonymous_class line="121">
                <method name="invoke" type="ComplexNumber" line="123">
                    <params>
                        <param name="arg" type="ComplexNumber"/>
                    </params>
                    <declaration name="tmpNmbr" type="ComplexNumber" line="125"/>
                </method>
            </anonymous_class>
            <declaration name="ATANH" type="UnaryFunction&amp;lt;ComplexNumber&amp;gt;" line="132"/>
            <anonymous_class line="132">
                <method name="invoke" type="ComplexNumber" line="134">
                    <params>
                        <param name="arg" type="ComplexNumber"/>
                    </params>
                    <declaration name="tmpNmbr" type="ComplexNumber" line="136"/>
                </method>
            </anonymous_class>
            <declaration name="CARDINALITY" type="UnaryFunction&amp;lt;ComplexNumber&amp;gt;" line="143"/>
            <anonymous_class line="143">
                <method name="invoke" type="ComplexNumber" line="145">
                    <params>
                        <param name="arg" type="ComplexNumber"/>
                    </params>
                </method>
            </anonymous_class>
            <declaration name="CONJUGATE" type="UnaryFunction&amp;lt;ComplexNumber&amp;gt;" line="151"/>
            <anonymous_class line="151">
                <method name="invoke" type="ComplexNumber" line="153">
                    <params>
                        <param name="arg" type="ComplexNumber"/>
                    </params>
                </method>
            </anonymous_class>
            <declaration name="COS" type="UnaryFunction&amp;lt;ComplexNumber&amp;gt;" line="159"/>
            <anonymous_class line="159">
                <method name="invoke" type="ComplexNumber" line="161">
                    <params>
                        <param name="arg" type="ComplexNumber"/>
                    </params>
                </method>
            </anonymous_class>
            <declaration name="COSH" type="UnaryFunction&amp;lt;ComplexNumber&amp;gt;" line="167"/>
            <anonymous_class line="167">
                <method name="invoke" type="ComplexNumber" line="169">
                    <params>
                        <param name="arg" type="ComplexNumber"/>
                    </params>
                </method>
            </anonymous_class>
            <declaration name="DIVIDE" type="BinaryFunction&amp;lt;ComplexNumber&amp;gt;" line="175"/>
            <anonymous_class line="175">
                <method name="invoke" type="ComplexNumber" line="178">
                    <params>
                        <param name="arg1" type="ComplexNumber"/>
                        <param name="arg2" type="ComplexNumber"/>
                    </params>
                </method>
            </anonymous_class>
            <declaration name="EXP" type="UnaryFunction&amp;lt;ComplexNumber&amp;gt;" line="184"/>
            <anonymous_class line="184">
                <method name="invoke" type="ComplexNumber" line="186">
                    <params>
                        <param name="arg" type="ComplexNumber"/>
                    </params>
                    <declaration name="retMod" type="double" line="188"/>
                    <declaration name="retArg" type="double" line="189"/>
                </method>
            </anonymous_class>
            <declaration name="EXPM1" type="UnaryFunction&amp;lt;ComplexNumber&amp;gt;" line="196"/>
            <anonymous_class line="196">
                <method name="invoke" type="ComplexNumber" line="198">
                    <params>
                        <param name="arg" type="ComplexNumber"/>
                    </params>
                    <declaration name="retMod" type="double" line="200"/>
                    <declaration name="retArg" type="double" line="201"/>
                </method>
            </anonymous_class>
            <declaration name="HYPOT" type="BinaryFunction&amp;lt;ComplexNumber&amp;gt;" line="208"/>
            <anonymous_class line="208">
                <method name="invoke" type="ComplexNumber" line="211">
                    <params>
                        <param name="arg1" type="ComplexNumber"/>
                        <param name="arg2" type="ComplexNumber"/>
                    </params>
                </method>
            </anonymous_class>
            <declaration name="INVERT" type="UnaryFunction&amp;lt;ComplexNumber&amp;gt;" line="217"/>
            <anonymous_class line="217">
                <method name="invoke" type="ComplexNumber" line="219">
                    <params>
                        <param name="arg" type="ComplexNumber"/>
                    </params>
                </method>
            </anonymous_class>
            <declaration name="SQRT1PX2" type="UnaryFunction&amp;lt;ComplexNumber&amp;gt;" line="225"/>
            <anonymous_class line="225">
                <method name="invoke" type="ComplexNumber" line="227">
                    <params>
                        <param name="arg" type="ComplexNumber"/>
                    </params>
                </method>
            </anonymous_class>
            <declaration name="LOG" type="UnaryFunction&amp;lt;ComplexNumber&amp;gt;" line="233"/>
            <anonymous_class line="233">
                <method name="invoke" type="ComplexNumber" line="235">
                    <params>
                        <param name="arg" type="ComplexNumber"/>
                    </params>
                    <declaration name="retRe" type="double" line="237"/>
                    <declaration name="retIm" type="double" line="238"/>
                </method>
            </anonymous_class>
            <declaration name="LOG10" type="UnaryFunction&amp;lt;ComplexNumber&amp;gt;" line="245"/>
            <anonymous_class line="245">
                <method name="invoke" type="ComplexNumber" line="247">
                    <params>
                        <param name="arg" type="ComplexNumber"/>
                    </params>
                    <declaration name="retRe" type="double" line="249"/>
                    <declaration name="retIm" type="double" line="250"/>
                </method>
            </anonymous_class>
            <declaration name="LOG1P" type="UnaryFunction&amp;lt;ComplexNumber&amp;gt;" line="257"/>
            <anonymous_class line="257">
                <method name="invoke" type="ComplexNumber" line="259">
                    <params>
                        <param name="arg" type="ComplexNumber"/>
                    </params>
                    <declaration name="retRe" type="double" line="261"/>
                    <declaration name="retIm" type="double" line="262"/>
                </method>
            </anonymous_class>
            <declaration name="MAX" type="BinaryFunction&amp;lt;ComplexNumber&amp;gt;" line="269"/>
            <anonymous_class line="269">
                <method name="invoke" type="ComplexNumber" line="272">
                    <params>
                        <param name="arg1" type="ComplexNumber"/>
                        <param name="arg2" type="ComplexNumber"/>
                    </params>
                    <declaration name="retVal" type="ComplexNumber" line="274"/>
                    <scope line="276"/>
                    <scope line="278"/>
                </method>
            </anonymous_class>
            <declaration name="MIN" type="BinaryFunction&amp;lt;ComplexNumber&amp;gt;" line="287"/>
            <anonymous_class line="287">
                <method name="invoke" type="ComplexNumber" line="290">
                    <params>
                        <param name="arg1" type="ComplexNumber"/>
                        <param name="arg2" type="ComplexNumber"/>
                    </params>
                    <declaration name="retVal" type="ComplexNumber" line="292"/>
                    <scope line="294"/>
                    <scope line="296"/>
                </method>
            </anonymous_class>
            <declaration name="MULTIPLY" type="BinaryFunction&amp;lt;ComplexNumber&amp;gt;" line="305"/>
            <anonymous_class line="305">
                <method name="invoke" type="ComplexNumber" line="308">
                    <params>
                        <param name="arg1" type="ComplexNumber"/>
                        <param name="arg2" type="ComplexNumber"/>
                    </params>
                </method>
            </anonymous_class>
            <declaration name="NEGATE" type="UnaryFunction&amp;lt;ComplexNumber&amp;gt;" line="314"/>
            <anonymous_class line="314">
                <method name="invoke" type="ComplexNumber" line="316">
                    <params>
                        <param name="arg" type="ComplexNumber"/>
                    </params>
                </method>
            </anonymous_class>
            <declaration name="POW" type="BinaryFunction&amp;lt;ComplexNumber&amp;gt;" line="322"/>
            <anonymous_class line="322">
                <method name="invoke" type="ComplexNumber" line="325">
                    <params>
                        <param name="arg1" type="ComplexNumber"/>
                        <param name="arg2" type="ComplexNumber"/>
                    </params>
                </method>
            </anonymous_class>
            <declaration name="POWER" type="ParameterFunction&amp;lt;ComplexNumber&amp;gt;" line="331"/>
            <anonymous_class line="331">
                <method name="invoke" type="ComplexNumber" line="334">
                    <params>
                        <param name="arg" type="ComplexNumber"/>
                        <param name="param" type="int"/>
                    </params>
                    <declaration name="retMod" type="double" line="336"/>
                    <declaration name="retArg" type="double" line="337"/>
                </method>
            </anonymous_class>
            <declaration name="ROOT" type="ParameterFunction&amp;lt;ComplexNumber&amp;gt;" line="344"/>
            <anonymous_class line="344">
                <method name="invoke" type="ComplexNumber" line="347">
                    <params>
                        <param name="arg" type="ComplexNumber"/>
                        <param name="param" type="int"/>
                    </params>
                    <scope line="349">
                        <declaration name="tmpExp" type="double" line="351"/>
                        <declaration name="retMod" type="double" line="353"/>
                        <declaration name="retArg" type="double" line="354"/>
                    </scope>
                    <scope line="358"/>
                </method>
            </anonymous_class>
            <declaration name="SCALE" type="ParameterFunction&amp;lt;ComplexNumber&amp;gt;" line="366"/>
            <anonymous_class line="366">
                <method name="invoke" type="ComplexNumber" line="369">
                    <params>
                        <param name="arg" type="ComplexNumber"/>
                        <param name="param" type="int"/>
                    </params>
                    <declaration name="tmpRe" type="double" line="370"/>
                    <declaration name="tmpIm" type="double" line="371"/>
                </method>
            </anonymous_class>
            <declaration name="SIGNUM" type="UnaryFunction&amp;lt;ComplexNumber&amp;gt;" line="377"/>
            <anonymous_class line="377">
                <method name="invoke" type="ComplexNumber" line="379">
                    <params>
                        <param name="arg" type="ComplexNumber"/>
                    </params>
                </method>
            </anonymous_class>
            <declaration name="SIN" type="UnaryFunction&amp;lt;ComplexNumber&amp;gt;" line="385"/>
            <anonymous_class line="385">
                <method name="invoke" type="ComplexNumber" line="387">
                    <params>
                        <param name="arg" type="ComplexNumber"/>
                    </params>
                </method>
            </anonymous_class>
            <declaration name="SINH" type="UnaryFunction&amp;lt;ComplexNumber&amp;gt;" line="393"/>
            <anonymous_class line="393">
                <method name="invoke" type="ComplexNumber" line="395">
                    <params>
                        <param name="arg" type="ComplexNumber"/>
                    </params>
                </method>
            </anonymous_class>
            <declaration name="SQRT" type="UnaryFunction&amp;lt;ComplexNumber&amp;gt;" line="401"/>
            <anonymous_class line="401">
                <method name="invoke" type="ComplexNumber" line="403">
                    <params>
                        <param name="arg" type="ComplexNumber"/>
                    </params>
                    <declaration name="retMod" type="double" line="405"/>
                    <declaration name="retArg" type="double" line="406"/>
                </method>
            </anonymous_class>
            <declaration name="SUBTRACT" type="BinaryFunction&amp;lt;ComplexNumber&amp;gt;" line="413"/>
            <anonymous_class line="413">
                <method name="invoke" type="ComplexNumber" line="416">
                    <params>
                        <param name="arg1" type="ComplexNumber"/>
                        <param name="arg2" type="ComplexNumber"/>
                    </params>
                </method>
            </anonymous_class>
            <declaration name="TAN" type="UnaryFunction&amp;lt;ComplexNumber&amp;gt;" line="422"/>
            <anonymous_class line="422">
                <method name="invoke" type="ComplexNumber" line="424">
                    <params>
                        <param name="arg" type="ComplexNumber"/>
                    </params>
                </method>
            </anonymous_class>
            <declaration name="TANH" type="UnaryFunction&amp;lt;ComplexNumber&amp;gt;" line="430"/>
            <anonymous_class line="430">
                <method name="invoke" type="ComplexNumber" line="432">
                    <params>
                        <param name="arg" type="ComplexNumber"/>
                    </params>
                    <declaration name="retVal" type="ComplexNumber" line="434"/>
                    <declaration name="tmpPlus" type="ComplexNumber" line="436"/>
                    <declaration name="tmpMinus" type="ComplexNumber" line="437"/>
                    <declaration name="tmpDividend" type="ComplexNumber" line="439"/>
                    <declaration name="tmpDivisor" type="ComplexNumber" line="440"/>
                    <scope line="442"/>
                    <scope line="444"/>
                    <scope line="446"/>
                </method>
            </anonymous_class>
            <declaration name="VALUE" type="UnaryFunction&amp;lt;ComplexNumber&amp;gt;" line="455"/>
            <anonymous_class line="455">
                <method name="invoke" type="ComplexNumber" line="457">
                    <params>
                        <param name="arg" type="ComplexNumber"/>
                    </params>
                </method>
            </anonymous_class>
            <declaration name="SET" type="ComplexFunction" line="463"/>
            <method name="getSet" type="ComplexFunction" line="465"/>
            <method name="doInvSinAndCosPart1" type="ComplexNumber" line="469">
                <params>
                    <param name="aNumber" type="ComplexNumber"/>
                </params>
            </method>
            <method name="doInvSinAndCosPart2" type="ComplexNumber" line="473">
                <params>
                    <param name="aNumber" type="ComplexNumber"/>
                </params>
            </method>
            <method name="ComplexFunction" type="constructor" line="477"/>
            <method name="abs" type="UnaryFunction&lt;ComplexNumber&gt;" line="482"/>
            <method name="acos" type="UnaryFunction&lt;ComplexNumber&gt;" line="487"/>
            <method name="acosh" type="UnaryFunction&lt;ComplexNumber&gt;" line="492"/>
            <method name="add" type="BinaryFunction&lt;ComplexNumber&gt;" line="497"/>
            <method name="asin" type="UnaryFunction&lt;ComplexNumber&gt;" line="502"/>
            <method name="asinh" type="UnaryFunction&lt;ComplexNumber&gt;" line="507"/>
            <method name="atan" type="UnaryFunction&lt;ComplexNumber&gt;" line="512"/>
            <method name="atanh" type="UnaryFunction&lt;ComplexNumber&gt;" line="517"/>
            <method name="cardinality" type="UnaryFunction&lt;ComplexNumber&gt;" line="522"/>
            <method name="conjugate" type="UnaryFunction&lt;ComplexNumber&gt;" line="527"/>
            <method name="cos" type="UnaryFunction&lt;ComplexNumber&gt;" line="532"/>
            <method name="cosh" type="UnaryFunction&lt;ComplexNumber&gt;" line="537"/>
            <method name="divide" type="BinaryFunction&lt;ComplexNumber&gt;" line="542"/>
            <method name="exp" type="UnaryFunction&lt;ComplexNumber&gt;" line="547"/>
            <method name="expm1" type="UnaryFunction&lt;ComplexNumber&gt;" line="552"/>
            <method name="hypot" type="BinaryFunction&lt;ComplexNumber&gt;" line="557"/>
            <method name="invert" type="UnaryFunction&lt;ComplexNumber&gt;" line="562"/>
            <method name="log" type="UnaryFunction&lt;ComplexNumber&gt;" line="567"/>
            <method name="log10" type="UnaryFunction&lt;ComplexNumber&gt;" line="572"/>
            <method name="log1p" type="UnaryFunction&lt;ComplexNumber&gt;" line="577"/>
            <method name="max" type="BinaryFunction&lt;ComplexNumber&gt;" line="582"/>
            <method name="min" type="BinaryFunction&lt;ComplexNumber&gt;" line="587"/>
            <method name="multiply" type="BinaryFunction&lt;ComplexNumber&gt;" line="592"/>
            <method name="negate" type="UnaryFunction&lt;ComplexNumber&gt;" line="597"/>
            <method name="pow" type="BinaryFunction&lt;ComplexNumber&gt;" line="602"/>
            <method name="power" type="ParameterFunction&lt;ComplexNumber&gt;" line="607"/>
            <method name="root" type="ParameterFunction&lt;ComplexNumber&gt;" line="612"/>
            <method name="scale" type="ParameterFunction&lt;ComplexNumber&gt;" line="617"/>
            <method name="signum" type="UnaryFunction&lt;ComplexNumber&gt;" line="622"/>
            <method name="sin" type="UnaryFunction&lt;ComplexNumber&gt;" line="627"/>
            <method name="sinh" type="UnaryFunction&lt;ComplexNumber&gt;" line="632"/>
            <method name="sqrt" type="UnaryFunction&lt;ComplexNumber&gt;" line="637"/>
            <method name="sqrt1px2" type="UnaryFunction&lt;ComplexNumber&gt;" line="642"/>
            <method name="subtract" type="BinaryFunction&lt;ComplexNumber&gt;" line="647"/>
            <method name="tan" type="UnaryFunction&lt;ComplexNumber&gt;" line="652"/>
            <method name="tanh" type="UnaryFunction&lt;ComplexNumber&gt;" line="657"/>
            <method name="value" type="UnaryFunction&lt;ComplexNumber&gt;" line="662"/>
        </class>
    </source>