<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.ojalgo.function">
        <import package="org.ojalgo.constant.PrimitiveMath"/>
        <import package="org.ojalgo.scalar.ComplexNumber"/>
        <import package="org.ojalgo.type.TypeUtils"/>
        <class name="ComplexFunction" line="5">
            <extends class="FunctionSet">
                <type_params>
                    <type_param name="ComplexNumber"/>
                </type_params>
            </extends>
            <class name="Binary" line="6">
                <extends class="BinaryFunction">
                    <type_params>
                        <type_param name="ComplexNumber"/>
                    </type_params>
                </extends>
                <method name="invoke" type="double" line="7">
                    <params>
                        <param name="arg1" type="double"/>
                        <param name="arg2" type="double"/>
                    </params>
                </method>
            </class>
            <class name="Parameter" line="11">
                <extends class="ParameterFunction">
                    <type_params>
                        <type_param name="ComplexNumber"/>
                    </type_params>
                </extends>
                <method name="invoke" type="double" line="12">
                    <params>
                        <param name="arg" type="double"/>
                        <param name="param" type="int"/>
                    </params>
                </method>
            </class>
            <class name="Unary" line="16">
                <implements interface="UnaryFunction">
                    <type_params>
                        <type_param name="ComplexNumber"/>
                    </type_params>
                </implements>
                <method name="invoke" type="double" line="17">
                    <params>
                        <param name="arg" type="double"/>
                    </params>
                </method>
            </class>
            <declaration name="ABS" type="UnaryFunction&lt;ComplexNumber&gt;" line="21"/>
            <anonymous_class line="21">
                <method name="invoke" type="ComplexNumber" line="22">
                    <params>
                        <param name="arg" type="ComplexNumber"/>
                    </params>
                </method>
            </anonymous_class>
            <declaration name="ACOS" type="UnaryFunction&lt;ComplexNumber&gt;" line="27"/>
            <anonymous_class line="27">
                <method name="invoke" type="ComplexNumber" line="28">
                    <params>
                        <param name="arg" type="ComplexNumber"/>
                    </params>
                    <declaration name="tmpNmbr" type="ComplexNumber" line="29"/>
                </method>
            </anonymous_class>
            <declaration name="ACOSH" type="UnaryFunction&lt;ComplexNumber&gt;" line="35"/>
            <anonymous_class line="35">
                <method name="invoke" type="ComplexNumber" line="36">
                    <params>
                        <param name="arg" type="ComplexNumber"/>
                    </params>
                    <declaration name="tmpNmbr" type="ComplexNumber" line="37"/>
                </method>
            </anonymous_class>
            <declaration name="ADD" type="BinaryFunction&lt;ComplexNumber&gt;" line="42"/>
            <anonymous_class line="42">
                <method name="invoke" type="ComplexNumber" line="43">
                    <params>
                        <param name="arg1" type="ComplexNumber"/>
                        <param name="arg2" type="ComplexNumber"/>
                    </params>
                </method>
            </anonymous_class>
            <declaration name="ASIN" type="UnaryFunction&lt;ComplexNumber&gt;" line="48"/>
            <anonymous_class line="48">
                <method name="invoke" type="ComplexNumber" line="49">
                    <params>
                        <param name="arg" type="ComplexNumber"/>
                    </params>
                    <declaration name="tmpNmbr" type="ComplexNumber" line="50"/>
                </method>
            </anonymous_class>
            <declaration name="ASINH" type="UnaryFunction&lt;ComplexNumber&gt;" line="56"/>
            <anonymous_class line="56">
                <method name="invoke" type="ComplexNumber" line="57">
                    <params>
                        <param name="arg" type="ComplexNumber"/>
                    </params>
                    <declaration name="tmpNmbr" type="ComplexNumber" line="58"/>
                </method>
            </anonymous_class>
            <declaration name="ATAN" type="UnaryFunction&lt;ComplexNumber&gt;" line="63"/>
            <anonymous_class line="63">
                <method name="invoke" type="ComplexNumber" line="64">
                    <params>
                        <param name="arg" type="ComplexNumber"/>
                    </params>
                    <declaration name="tmpNmbr" type="ComplexNumber" line="65"/>
                </method>
            </anonymous_class>
            <declaration name="ATANH" type="UnaryFunction&lt;ComplexNumber&gt;" line="70"/>
            <anonymous_class line="70">
                <method name="invoke" type="ComplexNumber" line="71">
                    <params>
                        <param name="arg" type="ComplexNumber"/>
                    </params>
                    <declaration name="tmpNmbr" type="ComplexNumber" line="72"/>
                </method>
            </anonymous_class>
            <declaration name="CARDINALITY" type="UnaryFunction&lt;ComplexNumber&gt;" line="77"/>
            <anonymous_class line="77">
                <method name="invoke" type="ComplexNumber" line="78">
                    <params>
                        <param name="arg" type="ComplexNumber"/>
                    </params>
                </method>
            </anonymous_class>
            <declaration name="CONJUGATE" type="UnaryFunction&lt;ComplexNumber&gt;" line="83"/>
            <anonymous_class line="83">
                <method name="invoke" type="ComplexNumber" line="84">
                    <params>
                        <param name="arg" type="ComplexNumber"/>
                    </params>
                </method>
            </anonymous_class>
            <declaration name="COS" type="UnaryFunction&lt;ComplexNumber&gt;" line="89"/>
            <anonymous_class line="89">
                <method name="invoke" type="ComplexNumber" line="90">
                    <params>
                        <param name="arg" type="ComplexNumber"/>
                    </params>
                </method>
            </anonymous_class>
            <declaration name="COSH" type="UnaryFunction&lt;ComplexNumber&gt;" line="95"/>
            <anonymous_class line="95">
                <method name="invoke" type="ComplexNumber" line="96">
                    <params>
                        <param name="arg" type="ComplexNumber"/>
                    </params>
                </method>
            </anonymous_class>
            <declaration name="DIVIDE" type="BinaryFunction&lt;ComplexNumber&gt;" line="101"/>
            <anonymous_class line="101">
                <method name="invoke" type="ComplexNumber" line="102">
                    <params>
                        <param name="arg1" type="ComplexNumber"/>
                        <param name="arg2" type="ComplexNumber"/>
                    </params>
                </method>
            </anonymous_class>
            <declaration name="EXP" type="UnaryFunction&lt;ComplexNumber&gt;" line="107"/>
            <anonymous_class line="107">
                <method name="invoke" type="ComplexNumber" line="108">
                    <params>
                        <param name="arg" type="ComplexNumber"/>
                    </params>
                    <declaration name="retMod" type="double" line="109"/>
                    <declaration name="retArg" type="double" line="110"/>
                </method>
            </anonymous_class>
            <declaration name="EXPM1" type="UnaryFunction&lt;ComplexNumber&gt;" line="115"/>
            <anonymous_class line="115">
                <method name="invoke" type="ComplexNumber" line="116">
                    <params>
                        <param name="arg" type="ComplexNumber"/>
                    </params>
                    <declaration name="retMod" type="double" line="117"/>
                    <declaration name="retArg" type="double" line="118"/>
                </method>
            </anonymous_class>
            <declaration name="HYPOT" type="BinaryFunction&lt;ComplexNumber&gt;" line="123"/>
            <anonymous_class line="123">
                <method name="invoke" type="ComplexNumber" line="124">
                    <params>
                        <param name="arg1" type="ComplexNumber"/>
                        <param name="arg2" type="ComplexNumber"/>
                    </params>
                </method>
            </anonymous_class>
            <declaration name="INVERT" type="UnaryFunction&lt;ComplexNumber&gt;" line="129"/>
            <anonymous_class line="129">
                <method name="invoke" type="ComplexNumber" line="130">
                    <params>
                        <param name="arg" type="ComplexNumber"/>
                    </params>
                </method>
            </anonymous_class>
            <declaration name="SQRT1PX2" type="UnaryFunction&lt;ComplexNumber&gt;" line="135"/>
            <anonymous_class line="135">
                <method name="invoke" type="ComplexNumber" line="136">
                    <params>
                        <param name="arg" type="ComplexNumber"/>
                    </params>
                </method>
            </anonymous_class>
            <declaration name="LOG" type="UnaryFunction&lt;ComplexNumber&gt;" line="141"/>
            <anonymous_class line="141">
                <method name="invoke" type="ComplexNumber" line="142">
                    <params>
                        <param name="arg" type="ComplexNumber"/>
                    </params>
                    <declaration name="retRe" type="double" line="143"/>
                    <declaration name="retIm" type="double" line="144"/>
                </method>
            </anonymous_class>
            <declaration name="LOG10" type="UnaryFunction&lt;ComplexNumber&gt;" line="149"/>
            <anonymous_class line="149">
                <method name="invoke" type="ComplexNumber" line="150">
                    <params>
                        <param name="arg" type="ComplexNumber"/>
                    </params>
                    <declaration name="retRe" type="double" line="151"/>
                    <declaration name="retIm" type="double" line="152"/>
                </method>
            </anonymous_class>
            <declaration name="LOG1P" type="UnaryFunction&lt;ComplexNumber&gt;" line="157"/>
            <anonymous_class line="157">
                <method name="invoke" type="ComplexNumber" line="158">
                    <params>
                        <param name="arg" type="ComplexNumber"/>
                    </params>
                    <declaration name="retRe" type="double" line="159"/>
                    <declaration name="retIm" type="double" line="160"/>
                </method>
            </anonymous_class>
            <declaration name="MAX" type="BinaryFunction&lt;ComplexNumber&gt;" line="165"/>
            <anonymous_class line="165">
                <method name="invoke" type="ComplexNumber" line="166">
                    <params>
                        <param name="arg1" type="ComplexNumber"/>
                        <param name="arg2" type="ComplexNumber"/>
                    </params>
                    <declaration name="retVal" type="ComplexNumber" line="167"/>
                    <scope line="168"/>
                    <scope line="171"/>
                </method>
            </anonymous_class>
            <declaration name="MIN" type="BinaryFunction&lt;ComplexNumber&gt;" line="178"/>
            <anonymous_class line="178">
                <method name="invoke" type="ComplexNumber" line="179">
                    <params>
                        <param name="arg1" type="ComplexNumber"/>
                        <param name="arg2" type="ComplexNumber"/>
                    </params>
                    <declaration name="retVal" type="ComplexNumber" line="180"/>
                    <scope line="181"/>
                    <scope line="184"/>
                </method>
            </anonymous_class>
            <declaration name="MULTIPLY" type="BinaryFunction&lt;ComplexNumber&gt;" line="191"/>
            <anonymous_class line="191">
                <method name="invoke" type="ComplexNumber" line="192">
                    <params>
                        <param name="arg1" type="ComplexNumber"/>
                        <param name="arg2" type="ComplexNumber"/>
                    </params>
                </method>
            </anonymous_class>
            <declaration name="NEGATE" type="UnaryFunction&lt;ComplexNumber&gt;" line="197"/>
            <anonymous_class line="197">
                <method name="invoke" type="ComplexNumber" line="198">
                    <params>
                        <param name="arg" type="ComplexNumber"/>
                    </params>
                </method>
            </anonymous_class>
            <declaration name="POW" type="BinaryFunction&lt;ComplexNumber&gt;" line="203"/>
            <anonymous_class line="203">
                <method name="invoke" type="ComplexNumber" line="204">
                    <params>
                        <param name="arg1" type="ComplexNumber"/>
                        <param name="arg2" type="ComplexNumber"/>
                    </params>
                </method>
            </anonymous_class>
            <declaration name="POWER" type="ParameterFunction&lt;ComplexNumber&gt;" line="209"/>
            <anonymous_class line="209">
                <method name="invoke" type="ComplexNumber" line="210">
                    <params>
                        <param name="arg" type="ComplexNumber"/>
                        <param name="param" type="int"/>
                    </params>
                    <declaration name="retMod" type="double" line="211"/>
                    <declaration name="retArg" type="double" line="212"/>
                </method>
            </anonymous_class>
            <declaration name="ROOT" type="ParameterFunction&lt;ComplexNumber&gt;" line="217"/>
            <anonymous_class line="217">
                <method name="invoke" type="ComplexNumber" line="218">
                    <params>
                        <param name="arg" type="ComplexNumber"/>
                        <param name="param" type="int"/>
                    </params>
                    <scope line="219">
                        <declaration name="tmpExp" type="double" line="220"/>
                        <declaration name="retMod" type="double" line="221"/>
                        <declaration name="retArg" type="double" line="222"/>
                    </scope>
                    <scope line="225"/>
                </method>
            </anonymous_class>
            <declaration name="SCALE" type="ParameterFunction&lt;ComplexNumber&gt;" line="231"/>
            <anonymous_class line="231">
                <method name="invoke" type="ComplexNumber" line="232">
                    <params>
                        <param name="arg" type="ComplexNumber"/>
                        <param name="param" type="int"/>
                    </params>
                    <declaration name="tmpRe" type="double" line="233"/>
                    <declaration name="tmpIm" type="double" line="234"/>
                </method>
            </anonymous_class>
            <declaration name="SIGNUM" type="UnaryFunction&lt;ComplexNumber&gt;" line="239"/>
            <anonymous_class line="239">
                <method name="invoke" type="ComplexNumber" line="240">
                    <params>
                        <param name="arg" type="ComplexNumber"/>
                    </params>
                </method>
            </anonymous_class>
            <declaration name="SIN" type="UnaryFunction&lt;ComplexNumber&gt;" line="245"/>
            <anonymous_class line="245">
                <method name="invoke" type="ComplexNumber" line="246">
                    <params>
                        <param name="arg" type="ComplexNumber"/>
                    </params>
                </method>
            </anonymous_class>
            <declaration name="SINH" type="UnaryFunction&lt;ComplexNumber&gt;" line="251"/>
            <anonymous_class line="251">
                <method name="invoke" type="ComplexNumber" line="252">
                    <params>
                        <param name="arg" type="ComplexNumber"/>
                    </params>
                </method>
            </anonymous_class>
            <declaration name="SQRT" type="UnaryFunction&lt;ComplexNumber&gt;" line="257"/>
            <anonymous_class line="257">
                <method name="invoke" type="ComplexNumber" line="258">
                    <params>
                        <param name="arg" type="ComplexNumber"/>
                    </params>
                    <declaration name="retMod" type="double" line="259"/>
                    <declaration name="retArg" type="double" line="260"/>
                </method>
            </anonymous_class>
            <declaration name="SUBTRACT" type="BinaryFunction&lt;ComplexNumber&gt;" line="265"/>
            <anonymous_class line="265">
                <method name="invoke" type="ComplexNumber" line="266">
                    <params>
                        <param name="arg1" type="ComplexNumber"/>
                        <param name="arg2" type="ComplexNumber"/>
                    </params>
                </method>
            </anonymous_class>
            <declaration name="TAN" type="UnaryFunction&lt;ComplexNumber&gt;" line="271"/>
            <anonymous_class line="271">
                <method name="invoke" type="ComplexNumber" line="272">
                    <params>
                        <param name="arg" type="ComplexNumber"/>
                    </params>
                </method>
            </anonymous_class>
            <declaration name="TANH" type="UnaryFunction&lt;ComplexNumber&gt;" line="277"/>
            <anonymous_class line="277">
                <method name="invoke" type="ComplexNumber" line="278">
                    <params>
                        <param name="arg" type="ComplexNumber"/>
                    </params>
                    <declaration name="retVal" type="ComplexNumber" line="279"/>
                    <declaration name="tmpPlus" type="ComplexNumber" line="280"/>
                    <declaration name="tmpMinus" type="ComplexNumber" line="281"/>
                    <declaration name="tmpDividend" type="ComplexNumber" line="282"/>
                    <declaration name="tmpDivisor" type="ComplexNumber" line="283"/>
                    <scope line="284"/>
                    <scope line="287"/>
                    <scope line="290"/>
                </method>
            </anonymous_class>
            <declaration name="VALUE" type="UnaryFunction&lt;ComplexNumber&gt;" line="297"/>
            <anonymous_class line="297">
                <method name="invoke" type="ComplexNumber" line="298">
                    <params>
                        <param name="arg" type="ComplexNumber"/>
                    </params>
                </method>
            </anonymous_class>
            <declaration name="SET" type="ComplexFunction" line="303"/>
            <method name="getSet" type="ComplexFunction" line="304"/>
            <method name="doInvSinAndCosPart1" type="ComplexNumber" line="307">
                <params>
                    <param name="aNumber" type="ComplexNumber"/>
                </params>
            </method>
            <method name="doInvSinAndCosPart2" type="ComplexNumber" line="310">
                <params>
                    <param name="aNumber" type="ComplexNumber"/>
                </params>
            </method>
            <method name="ComplexFunction" type="constructor" line="313"/>
            <method name="abs" type="UnaryFunction<ComplexNumber>" line="316"/>
            <method name="acos" type="UnaryFunction<ComplexNumber>" line="319"/>
            <method name="acosh" type="UnaryFunction<ComplexNumber>" line="322"/>
            <method name="add" type="BinaryFunction<ComplexNumber>" line="325"/>
            <method name="asin" type="UnaryFunction<ComplexNumber>" line="328"/>
            <method name="asinh" type="UnaryFunction<ComplexNumber>" line="331"/>
            <method name="atan" type="UnaryFunction<ComplexNumber>" line="334"/>
            <method name="atanh" type="UnaryFunction<ComplexNumber>" line="337"/>
            <method name="cardinality" type="UnaryFunction<ComplexNumber>" line="340"/>
            <method name="conjugate" type="UnaryFunction<ComplexNumber>" line="343"/>
            <method name="cos" type="UnaryFunction<ComplexNumber>" line="346"/>
            <method name="cosh" type="UnaryFunction<ComplexNumber>" line="349"/>
            <method name="divide" type="BinaryFunction<ComplexNumber>" line="352"/>
            <method name="exp" type="UnaryFunction<ComplexNumber>" line="355"/>
            <method name="expm1" type="UnaryFunction<ComplexNumber>" line="358"/>
            <method name="hypot" type="BinaryFunction<ComplexNumber>" line="361"/>
            <method name="invert" type="UnaryFunction<ComplexNumber>" line="364"/>
            <method name="log" type="UnaryFunction<ComplexNumber>" line="367"/>
            <method name="log10" type="UnaryFunction<ComplexNumber>" line="370"/>
            <method name="log1p" type="UnaryFunction<ComplexNumber>" line="373"/>
            <method name="max" type="BinaryFunction<ComplexNumber>" line="376"/>
            <method name="min" type="BinaryFunction<ComplexNumber>" line="379"/>
            <method name="multiply" type="BinaryFunction<ComplexNumber>" line="382"/>
            <method name="negate" type="UnaryFunction<ComplexNumber>" line="385"/>
            <method name="pow" type="BinaryFunction<ComplexNumber>" line="388"/>
            <method name="power" type="ParameterFunction<ComplexNumber>" line="391"/>
            <method name="root" type="ParameterFunction<ComplexNumber>" line="394"/>
            <method name="scale" type="ParameterFunction<ComplexNumber>" line="397"/>
            <method name="signum" type="UnaryFunction<ComplexNumber>" line="400"/>
            <method name="sin" type="UnaryFunction<ComplexNumber>" line="403"/>
            <method name="sinh" type="UnaryFunction<ComplexNumber>" line="406"/>
            <method name="sqrt" type="UnaryFunction<ComplexNumber>" line="409"/>
            <method name="sqrt1px2" type="UnaryFunction<ComplexNumber>" line="412"/>
            <method name="subtract" type="BinaryFunction<ComplexNumber>" line="415"/>
            <method name="tan" type="UnaryFunction<ComplexNumber>" line="418"/>
            <method name="tanh" type="UnaryFunction<ComplexNumber>" line="421"/>
            <method name="value" type="UnaryFunction<ComplexNumber>" line="424"/>
        </class>
    </source>