<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.ojalgo.function.multiary">
        <import package="java.math.BigDecimal"/>
        <import package="org.ojalgo.access.Access1D"/>
        <import package="org.ojalgo.access.Access2D"/>
        <import package="org.ojalgo.matrix.store.MatrixStore"/>
        <import package="org.ojalgo.matrix.store.PhysicalStore"/>
        <import package="org.ojalgo.matrix.store.PhysicalStore.Factory"/>
        <import package="org.ojalgo.scalar.ComplexNumber"/>
        <import package="org.ojalgo.scalar.Scalar"/>
        <class name="CompoundFunction" line="10">
            <type_params>
                <type_param name="N"/>
            </type_params>
            <extends class="AbstractMultiary">
                <type_params>
                    <type_param name="N"/>
                    <type_param name="CompoundFunction<N>"/>
                </type_params>
            </extends>
            <implements interface="MultiaryFunction.Linear">
                <type_params>
                    <type_param name="N"/>
                </type_params>
            </implements>
            <implements interface="MultiaryFunction.Quadratic">
                <type_params>
                    <type_param name="N"/>
                </type_params>
            </implements>
            <javadoc line="10">
                [x]&lt;sup&gt;T&lt;/sup&gt;[Q][x] + [c]&lt;sup&gt;T&lt;/sup&gt;[x] + b                
                <author>
                    apete                    
                </author>
            </javadoc>
            <method name="makeBig" type="CompoundFunction<BigDecimal>" line="15">
                <params>
                    <param name="quadraticFactors" type="Access2D<? extends Number>"/>
                    <param name="linearFactors" type="Access1D<? extends Number>"/>
                </params>
                <declaration name="tmpQuadratic" type="QuadraticFunction&lt;BigDecimal&gt;" line="16"/>
                <declaration name="tmpLinear" type="LinearFunction&lt;BigDecimal&gt;" line="17"/>
            </method>
            <method name="makeBig" type="CompoundFunction<BigDecimal>" line="20">
                <params>
                    <param name="arity" type="int"/>
                </params>
                <declaration name="tmpQuadratic" type="QuadraticFunction&lt;BigDecimal&gt;" line="21"/>
                <declaration name="tmpLinear" type="LinearFunction&lt;BigDecimal&gt;" line="22"/>
            </method>
            <method name="makeComplex" type="CompoundFunction<ComplexNumber>" line="25">
                <params>
                    <param name="quadraticFactors" type="Access2D<? extends Number>"/>
                    <param name="linearFactors" type="Access1D<? extends Number>"/>
                </params>
                <declaration name="tmpQuadratic" type="QuadraticFunction&lt;ComplexNumber&gt;" line="26"/>
                <declaration name="tmpLinear" type="LinearFunction&lt;ComplexNumber&gt;" line="27"/>
            </method>
            <method name="makeComplex" type="CompoundFunction<ComplexNumber>" line="30">
                <params>
                    <param name="arity" type="int"/>
                </params>
                <declaration name="tmpQuadratic" type="QuadraticFunction&lt;ComplexNumber&gt;" line="31"/>
                <declaration name="tmpLinear" type="LinearFunction&lt;ComplexNumber&gt;" line="32"/>
            </method>
            <method name="makePrimitive" type="CompoundFunction<Double>" line="35">
                <params>
                    <param name="quadraticFactors" type="Access2D<? extends Number>"/>
                    <param name="linearFactors" type="Access1D<? extends Number>"/>
                </params>
                <declaration name="tmpQuadratic" type="QuadraticFunction&lt;Double&gt;" line="36"/>
                <declaration name="tmpLinear" type="LinearFunction&lt;Double&gt;" line="37"/>
            </method>
            <method name="makePrimitive" type="CompoundFunction<Double>" line="40">
                <params>
                    <param name="arity" type="int"/>
                </params>
                <declaration name="tmpQuadratic" type="QuadraticFunction&lt;Double&gt;" line="41"/>
                <declaration name="tmpLinear" type="LinearFunction&lt;Double&gt;" line="42"/>
            </method>
            <declaration name="myLinear" type="LinearFunction&lt;N&gt;" line="45"/>
            <declaration name="myQuadratic" type="QuadraticFunction&lt;N&gt;" line="46"/>
            <method name="CompoundFunction" type="constructor" line="47"/>
            <method name="CompoundFunction" type="constructor" line="50">
                <params>
                    <param name="quadratic" type="QuadraticFunction<N>"/>
                    <param name="linear" type="LinearFunction<N>"/>
                </params>
                <scope line="54"/>
            </method>
            <method name="arity" type="int" line="58"/>
            <method name="getGradient" type="MatrixStore<N>" line="61">
                <params>
                    <param name="arg" type="Access1D<?>"/>
                </params>
            </method>
            <method name="getHessian" type="MatrixStore<N>" line="64">
                <params>
                    <param name="arg" type="Access1D<?>"/>
                </params>
            </method>
            <method name="invoke" type="N" line="67">
                <params>
                    <param name="arg" type="Access1D<?>"/>
                </params>
                <declaration name="retVal" type="Scalar&lt;N&gt;" line="68"/>
            </method>
            <method name="linear" type="PhysicalStore<N>" line="73"/>
            <method name="quadratic" type="PhysicalStore<N>" line="76"/>
            <method name="factory" type="Factory<N,?>" line="79"/>
        </class>
    </source>