<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.ojalgo.function.multiary">
        <import package="java.math.BigDecimal"/>
        <import package="org.ojalgo.access.Access1D"/>
        <import package="org.ojalgo.matrix.store.BigDenseStore"/>
        <import package="org.ojalgo.matrix.store.ComplexDenseStore"/>
        <import package="org.ojalgo.matrix.store.MatrixStore"/>
        <import package="org.ojalgo.matrix.store.PhysicalStore"/>
        <import package="org.ojalgo.matrix.store.PhysicalStore.Factory"/>
        <import package="org.ojalgo.matrix.store.PrimitiveDenseStore"/>
        <import package="org.ojalgo.matrix.store.ZeroStore"/>
        <import package="org.ojalgo.scalar.ComplexNumber"/>
        <import package="org.ojalgo.scalar.Scalar"/>
        <class name="LinearFunction" line="37">
            <type_params>
                <type_param name="N"/>
            </type_params>
            <extends class="AbstractMultiary">
                <type_params>
                    <type_param name="N"/>
                    <type_param name="LinearFunction&lt;N&gt;"/>
                </type_params>
            </extends>
            <implements interface="MultiaryFunction.Linear">
                <type_params>
                    <type_param name="N"/>
                </type_params>
            </implements>
            <javadoc line="37">
                [c]&lt;sup&gt;T&lt;/sup&gt;[x]                
                <author>
                    apete                    
                </author>
            </javadoc>
            <method name="makeBig" type="LinearFunction&lt;BigDecimal&gt;" line="44">
                <params>
                    <param name="factors" type="Access1D&lt;? extends Number&gt;"/>
                </params>
            </method>
            <method name="makeBig" type="LinearFunction&lt;BigDecimal&gt;" line="48">
                <params>
                    <param name="arity" type="int"/>
                </params>
            </method>
            <method name="makeComplex" type="LinearFunction&lt;ComplexNumber&gt;" line="52">
                <params>
                    <param name="factors" type="Access1D&lt;? extends Number&gt;"/>
                </params>
            </method>
            <method name="makeComplex" type="LinearFunction&lt;ComplexNumber&gt;" line="56">
                <params>
                    <param name="arity" type="int"/>
                </params>
            </method>
            <method name="makePrimitive" type="LinearFunction&lt;Double&gt;" line="60">
                <params>
                    <param name="factors" type="Access1D&lt;? extends Number&gt;"/>
                </params>
            </method>
            <method name="makePrimitive" type="LinearFunction&lt;Double&gt;" line="64">
                <params>
                    <param name="arity" type="int"/>
                </params>
            </method>
            <declaration name="myFactors" type="MatrixStore&amp;lt;N&amp;gt;" line="68"/>
            <method name="LinearFunction" type="constructor" line="71"/>
            <method name="LinearFunction" type="constructor" line="75">
                <params>
                    <param name="factors" type="MatrixStore&lt;N&gt;"/>
                </params>
                <scope line="81"/>
            </method>
            <method name="arity" type="int" line="86"/>
            <method name="getGradient" type="MatrixStore&lt;N&gt;" line="91">
                <params>
                    <param name="arg" type="Access1D&lt;?&gt;"/>
                </params>
            </method>
            <method name="getHessian" type="MatrixStore&lt;N&gt;" line="96">
                <params>
                    <param name="arg" type="Access1D&lt;?&gt;"/>
                </params>
            </method>
            <method name="invoke" type="N" line="101">
                <params>
                    <param name="arg" type="Access1D&lt;?&gt;"/>
                </params>
                <declaration name="retVal" type="Scalar&amp;lt;N&amp;gt;" line="103"/>
            </method>
            <method name="linear" type="PhysicalStore&lt;N&gt;" line="110"/>
            <method name="factory" type="Factory&lt;N,?&gt;" line="115"/>
        </class>
    </source>