<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.ojalgo.function">
        <class name="FunctionSet" line="2">
            <type_params>
                <type_param name="N"/>
            </type_params>
            <method name="FunctionSet" type="constructor" line="3"/>
            <method name="abs" type="UnaryFunction<N>" line="6"/>
            <javadoc line="6">
                @see StrictMath#abs(double)                
            </javadoc>
            <method name="acos" type="UnaryFunction<N>" line="10"/>
            <javadoc line="10">
                @see StrictMath#acos(double)                
            </javadoc>
            <method name="acosh" type="UnaryFunction<N>" line="14"/>
            <method name="add" type="BinaryFunction<N>" line="15"/>
            <javadoc line="15">
                +                
            </javadoc>
            <method name="asin" type="UnaryFunction<N>" line="19"/>
            <javadoc line="19">
                @see StrictMath#asin(double)                
            </javadoc>
            <method name="asinh" type="UnaryFunction<N>" line="23"/>
            <method name="atan" type="UnaryFunction<N>" line="24"/>
            <javadoc line="24">
                @see StrictMath#atan(double)                
            </javadoc>
            <method name="atanh" type="UnaryFunction<N>" line="28"/>
            <method name="cardinality" type="UnaryFunction<N>" line="29"/>
            <method name="conjugate" type="UnaryFunction<N>" line="30"/>
            <method name="cos" type="UnaryFunction<N>" line="31"/>
            <javadoc line="31">
                @see StrictMath#cos(double)                
            </javadoc>
            <method name="cosh" type="UnaryFunction<N>" line="35"/>
            <javadoc line="35">
                @see StrictMath#cosh(double)                
            </javadoc>
            <method name="divide" type="BinaryFunction<N>" line="39"/>
            <javadoc line="39">
                /                
            </javadoc>
            <method name="exp" type="UnaryFunction<N>" line="43"/>
            <javadoc line="43">
                @see StrictMath#exp(double)                
            </javadoc>
            <method name="expm1" type="UnaryFunction<N>" line="47"/>
            <javadoc line="47">
                @see StrictMath#expm1(double)                
            </javadoc>
            <method name="hypot" type="BinaryFunction<N>" line="51"/>
            <javadoc line="51">
                @see StrictMath#hypot(double,double)                
            </javadoc>
            <method name="invert" type="UnaryFunction<N>" line="55"/>
            <method name="log" type="UnaryFunction<N>" line="56"/>
            <javadoc line="56">
                @see StrictMath#log(double)                
            </javadoc>
            <method name="log10" type="UnaryFunction<N>" line="60"/>
            <javadoc line="60">
                @see StrictMath#log10(double)                
            </javadoc>
            <method name="log1p" type="UnaryFunction<N>" line="64"/>
            <javadoc line="64">
                @see StrictMath#log1p(double)                
            </javadoc>
            <method name="max" type="BinaryFunction<N>" line="68"/>
            <javadoc line="68">
                @see StrictMath#max(double,double)                
            </javadoc>
            <method name="min" type="BinaryFunction<N>" line="72"/>
            <javadoc line="72">
                @see StrictMath#min(double,double)                
            </javadoc>
            <method name="multiply" type="BinaryFunction<N>" line="76"/>
            <javadoc line="76">
                                
            </javadoc>
            <method name="negate" type="UnaryFunction<N>" line="80"/>
            <method name="pow" type="BinaryFunction<N>" line="81"/>
            <javadoc line="81">
                @see StrictMath#pow(double,double)                
            </javadoc>
            <method name="power" type="ParameterFunction<N>" line="85"/>
            <method name="root" type="ParameterFunction<N>" line="86"/>
            <method name="scale" type="ParameterFunction<N>" line="87"/>
            <method name="signum" type="UnaryFunction<N>" line="88"/>
            <javadoc line="88">
                @see StrictMath#signum(double)                
            </javadoc>
            <method name="sin" type="UnaryFunction<N>" line="92"/>
            <javadoc line="92">
                @see StrictMath#sin(double)                
            </javadoc>
            <method name="sinh" type="UnaryFunction<N>" line="96"/>
            <javadoc line="96">
                @see StrictMath#sinh(double)                
            </javadoc>
            <method name="sqrt" type="UnaryFunction<N>" line="100"/>
            <javadoc line="100">
                @see StrictMath#sqrt(double)                
            </javadoc>
            <method name="sqrt1px2" type="UnaryFunction<N>" line="104"/>
            <javadoc line="104">
                @return sqrt(1.0 + x&lt;sup&gt;2&lt;/sup&gt;)                
            </javadoc>
            <method name="subtract" type="BinaryFunction<N>" line="108"/>
            <javadoc line="108">
                -                
            </javadoc>
            <method name="tan" type="UnaryFunction<N>" line="112"/>
            <javadoc line="112">
                @see StrictMath#tan(double)                
            </javadoc>
            <method name="tanh" type="UnaryFunction<N>" line="116"/>
            <javadoc line="116">
                @see StrictMath#tanh(double)                
            </javadoc>
            <method name="value" type="UnaryFunction<N>" line="120"/>
        </class>
    </source>