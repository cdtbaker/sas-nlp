<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.ojalgo.type">
        <import package="java.awt.Color"/>
        <import package="java.math.BigDecimal"/>
        <import package="java.sql.Date"/>
        <import package="java.sql.Time"/>
        <import package="java.sql.Timestamp"/>
        <import package="java.util.Calendar"/>
        <import package="java.util.GregorianCalendar"/>
        <import package="org.ojalgo.constant.BigMath"/>
        <import package="org.ojalgo.constant.PrimitiveMath"/>
        <import package="org.ojalgo.netio.ASCII"/>
        <import package="org.ojalgo.scalar.ComplexNumber"/>
        <import package="org.ojalgo.scalar.Quaternion"/>
        <import package="org.ojalgo.scalar.RationalNumber"/>
        <import package="org.ojalgo.scalar.Scalar"/>
        <import package="org.ojalgo.type.context.NumberContext"/>
        <class name="TypeUtils" line="41">
            <comment line="44">
                365.2425 * 24 * 100 = 876582)                
            </comment>
            <declaration name="HOURS_PER_CENTURY" type="long" line="43"/>
            <declaration name="MILLIS_PER_HOUR" type="long" line="44"/>
            <declaration name="HEX" type="String" line="46"/>
            <declaration name="START" type="char" line="47"/>
            <javadoc line="49">
                Compatible with slf4j. {} in the message pattern will be replaced by the arguments.                
            </javadoc>
            <method name="format" type="String" line="52">
                <params>
                    <param name="aMessagePattern" type="String"/>
                    <param name="someArgs" type="Object"/>
                </params>
                <scope line="54"/>
                <declaration name="tmpPatternSize" type="int" line="58"/>
                <declaration name="tmpArgsCount" type="int" line="59"/>
                <declaration name="tmpFirst" type="int" line="61"/>
                <declaration name="tmpLimit" type="int" line="62"/>
                <declaration name="retVal" type="StringBuilder" line="64"/>
                <scope line="66">
                    <scope line="70"/>
                    <scope line="73"/>
                </scope>
            </method>
            <method name="getHundredYearsAgo" type="GregorianCalendar" line="85">
                <declaration name="retVal" type="GregorianCalendar" line="87"/>
            </method>
            <method name="getThousandYearsAgo" type="GregorianCalendar" line="94">
                <declaration name="retVal" type="GregorianCalendar" line="96"/>
            </method>
            <method name="getThousandYearsFromNow" type="GregorianCalendar" line="103">
                <declaration name="retVal" type="GregorianCalendar" line="105"/>
            </method>
            <method name="isZero" type="boolean" line="112">
                <params>
                    <param name="value" type="double"/>
                </params>
            </method>
            <method name="isZero" type="boolean" line="116">
                <params>
                    <param name="value" type="double"/>
                    <param name="tolerance" type="double"/>
                </params>
            </method>
            <method name="makeSqlDate" type="Date" line="120">
                <params>
                    <param name="aTimeInMillis" type="long"/>
                </params>
            </method>
            <method name="makeSqlTime" type="Time" line="124">
                <params>
                    <param name="aTimeInMillis" type="long"/>
                </params>
            </method>
            <method name="makeSqlTimestamp" type="Timestamp" line="128">
                <params>
                    <param name="aTimeInMillis" type="long"/>
                </params>
            </method>
            <javadoc line="132">
                If the input {@linkplain java.lang.Number} is a {@linkplain java.math.BigDecimal} it is passed through unaltered.
                  Otherwise an equivalent BigDecimal is created.                
                <param>
                    number Any Number                    
                </param>
                <return>
                    A corresponding BigDecimal                    
                </return>
            </javadoc>
            <method name="toBigDecimal" type="BigDecimal" line="139">
                <params>
                    <param name="number" type="Number"/>
                </params>
                <declaration name="retVal" type="BigDecimal" line="141"/>
                <scope line="143">
                    <scope line="145"/>
                    <scope line="149"/>
                    <scope line="153">
                        <scope line="155"/>
                        <scope line="159">
                            <declaration name="tmpVal" type="double" line="161"/>
                            <scope line="163"/>
                            <scope line="165"/>
                            <scope line="167"/>
                            <scope line="169"/>
                        </scope>
                    </scope>
                </scope>
            </method>
            <method name="toBigDecimal" type="BigDecimal" line="179">
                <params>
                    <param name="number" type="Number"/>
                    <param name="context" type="NumberContext"/>
                </params>
            </method>
            <method name="toComplexNumber" type="ComplexNumber" line="183">
                <params>
                    <param name="number" type="Number"/>
                </params>
                <declaration name="retVal" type="ComplexNumber" line="185"/>
                <scope line="187">
                    <scope line="189"/>
                    <scope line="193"/>
                </scope>
            </method>
            <javadoc line="202">
                The way colours are specified in html pages.                
            </javadoc>
            <method name="toHexString" type="String" line="205">
                <params>
                    <param name="aColor" type="Color"/>
                </params>
            </method>
            <method name="toQuaternion" type="Quaternion" line="209">
                <params>
                    <param name="number" type="Number"/>
                </params>
                <declaration name="retVal" type="Quaternion" line="211"/>
                <scope line="213">
                    <scope line="215"/>
                    <scope line="219"/>
                    <scope line="223"/>
                </scope>
            </method>
            <method name="toRationalNumber" type="RationalNumber" line="232">
                <params>
                    <param name="number" type="Number"/>
                </params>
                <declaration name="retVal" type="RationalNumber" line="234"/>
                <scope line="236">
                    <scope line="238"/>
                    <scope line="242"/>
                </scope>
            </method>
            <method name="isSameDate" type="boolean" line="251">
                <params>
                    <param name="aCal1" type="Calendar"/>
                    <param name="aCal2" type="Calendar"/>
                </params>
                <declaration name="retVal" type="boolean" line="253"/>
            </method>
            <method name="isSameTime" type="boolean" line="262">
                <params>
                    <param name="aCal1" type="Calendar"/>
                    <param name="aCal2" type="Calendar"/>
                </params>
                <declaration name="retVal" type="boolean" line="264"/>
            </method>
            <method name="TypeUtils" type="constructor" line="273"/>
        </class>
    </source>