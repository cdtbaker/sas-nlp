<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.ojalgo.type">
        <import package="java.awt.Color"/>
        <import package="java.math.BigDecimal"/>
        <import package="java.sql.Date"/>
        <import package="java.sql.Time"/>
        <import package="java.sql.Timestamp"/>
        <import package="java.util.Calendar"/>
        <import package="java.util.GregorianCalendar"/>
        <import package="org.ojalgo.constant.BigMath"/>
        <import package="org.ojalgo.constant.PrimitiveMath"/>
        <import package="org.ojalgo.netio.ASCII"/>
        <import package="org.ojalgo.scalar.ComplexNumber"/>
        <import package="org.ojalgo.scalar.Quaternion"/>
        <import package="org.ojalgo.scalar.RationalNumber"/>
        <import package="org.ojalgo.scalar.Scalar"/>
        <import package="org.ojalgo.type.context.NumberContext"/>
        <class name="TypeUtils" line="17">
            <declaration name="HOURS_PER_CENTURY" type="long" line="18"/>
            <declaration name="MILLIS_PER_HOUR" type="long" line="19"/>
            <declaration name="HEX" type="String" line="20"/>
            <declaration name="START" type="char" line="21"/>
            <javadoc line="22">
                Compatible with slf4j. {} in the message pattern will be replaced by the arguments.                
            </javadoc>
            <method name="format" type="String" line="25">
                <params>
                    <param name="aMessagePattern" type="String"/>
                    <param name="someArgs" type="Object"/>
                </params>
                <scope line="26"/>
                <declaration name="tmpPatternSize" type="int" line="29"/>
                <declaration name="tmpArgsCount" type="int" line="30"/>
                <declaration name="tmpFirst" type="int" line="31"/>
                <declaration name="tmpLimit" type="int" line="32"/>
                <declaration name="retVal" type="StringBuilder" line="33"/>
                <scope line="34">
                    <scope line="36"/>
                    <scope line="40"/>
                </scope>
            </method>
            <method name="getHundredYearsAgo" type="GregorianCalendar" line="49">
                <declaration name="retVal" type="GregorianCalendar" line="50"/>
            </method>
            <method name="getThousandYearsAgo" type="GregorianCalendar" line="54">
                <declaration name="retVal" type="GregorianCalendar" line="55"/>
            </method>
            <method name="getThousandYearsFromNow" type="GregorianCalendar" line="59">
                <declaration name="retVal" type="GregorianCalendar" line="60"/>
            </method>
            <method name="isZero" type="boolean" line="64">
                <params>
                    <param name="value" type="double"/>
                </params>
            </method>
            <method name="isZero" type="boolean" line="67">
                <params>
                    <param name="value" type="double"/>
                    <param name="tolerance" type="double"/>
                </params>
            </method>
            <method name="makeSqlDate" type="Date" line="70">
                <params>
                    <param name="aTimeInMillis" type="long"/>
                </params>
            </method>
            <method name="makeSqlTime" type="Time" line="73">
                <params>
                    <param name="aTimeInMillis" type="long"/>
                </params>
            </method>
            <method name="makeSqlTimestamp" type="Timestamp" line="76">
                <params>
                    <param name="aTimeInMillis" type="long"/>
                </params>
            </method>
            <javadoc line="79">
                If the input {@linkplain java.lang.Number} is a {@linkplain java.math.BigDecimal} it is passed through unaltered.
                  Otherwise an equivalent BigDecimal is created.                
                <param>
                    number Any Number                    
                </param>
                <return>
                    A corresponding BigDecimal                    
                </return>
            </javadoc>
            <method name="toBigDecimal" type="BigDecimal" line="85">
                <params>
                    <param name="number" type="Number"/>
                </params>
                <declaration name="retVal" type="BigDecimal" line="86"/>
                <scope line="87">
                    <scope line="88"/>
                    <scope line="91"/>
                    <scope line="94">
                        <scope line="95"/>
                        <scope line="98">
                            <declaration name="tmpVal" type="double" line="99"/>
                            <scope line="100"/>
                            <scope line="103"/>
                            <scope line="106"/>
                            <scope line="109"/>
                        </scope>
                    </scope>
                </scope>
            </method>
            <method name="toBigDecimal" type="BigDecimal" line="117">
                <params>
                    <param name="number" type="Number"/>
                    <param name="context" type="NumberContext"/>
                </params>
            </method>
            <method name="toComplexNumber" type="ComplexNumber" line="120">
                <params>
                    <param name="number" type="Number"/>
                </params>
                <declaration name="retVal" type="ComplexNumber" line="121"/>
                <scope line="122">
                    <scope line="123"/>
                    <scope line="126"/>
                </scope>
            </method>
            <javadoc line="132">
                The way colours are specified in html pages.                
            </javadoc>
            <method name="toHexString" type="String" line="135">
                <params>
                    <param name="aColor" type="Color"/>
                </params>
            </method>
            <method name="toQuaternion" type="Quaternion" line="138">
                <params>
                    <param name="number" type="Number"/>
                </params>
                <declaration name="retVal" type="Quaternion" line="139"/>
                <scope line="140">
                    <scope line="141"/>
                    <scope line="144"/>
                    <scope line="147"/>
                </scope>
            </method>
            <method name="toRationalNumber" type="RationalNumber" line="153">
                <params>
                    <param name="number" type="Number"/>
                </params>
                <declaration name="retVal" type="RationalNumber" line="154"/>
                <scope line="155">
                    <scope line="156"/>
                    <scope line="159"/>
                </scope>
            </method>
            <method name="isSameDate" type="boolean" line="165">
                <params>
                    <param name="aCal1" type="Calendar"/>
                    <param name="aCal2" type="Calendar"/>
                </params>
                <declaration name="retVal" type="boolean" line="166"/>
            </method>
            <method name="isSameTime" type="boolean" line="171">
                <params>
                    <param name="aCal1" type="Calendar"/>
                    <param name="aCal2" type="Calendar"/>
                </params>
                <declaration name="retVal" type="boolean" line="172"/>
            </method>
            <method name="TypeUtils" type="constructor" line="177"/>
        </class>
    </source>