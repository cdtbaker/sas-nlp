<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.ojalgo.array">
        <import package="java.util.Arrays"/>
        <import package="org.ojalgo.access.Access1D"/>
        <import package="org.ojalgo.function.BinaryFunction"/>
        <import package="org.ojalgo.function.ParameterFunction"/>
        <import package="org.ojalgo.function.UnaryFunction"/>
        <import package="org.ojalgo.function.VoidFunction"/>
        <import package="org.ojalgo.machine.MemoryEstimator"/>
        <import package="org.ojalgo.scalar.RationalNumber"/>
        <import package="org.ojalgo.scalar.Scalar"/>
        <import package="org.ojalgo.type.TypeUtils"/>
        <class name="RationalArray" line="36">
            <extends class="DenseArray">
                <type_params>
                    <type_param name="RationalNumber"/>
                </type_params>
            </extends>
            <javadoc line="36">
                A one- and/or arbitrary-dimensional array of {@linkplain org.ojalgo.scalar.RationalNumber}.                
                <author>
                    apete                    
                </author>
            </javadoc>
            <declaration name="ELEMENT_SIZE" type="long" line="43"/>
            <declaration name="FACTORY" type="DenseFactory&amp;lt;RationalNumber&amp;gt;" line="45"/>
            <anonymous_class line="45">
                <method name="getElementSize" type="long" line="48"/>
                <method name="make" type="DenseArray&lt;RationalNumber&gt;" line="53">
                    <params>
                        <param name="size" type="int"/>
                    </params>
                </method>
                <method name="zero" type="Scalar&lt;RationalNumber&gt;" line="58"/>
            </anonymous_class>
            <method name="make" type="RationalArray" line="63">
                <params>
                    <param name="size" type="int"/>
                </params>
            </method>
            <method name="makeSegmented" type="SegmentedArray&lt;RationalNumber&gt;" line="67">
                <params>
                    <param name="count" type="long"/>
                </params>
            </method>
            <method name="wrap" type="RationalArray" line="71">
                <params>
                    <param name="data" type="RationalNumber[]"/>
                </params>
            </method>
            <method name="exchange" type="void" line="75">
                <params>
                    <param name="aData" type="RationalNumber[]"/>
                    <param name="aFirstA" type="int"/>
                    <param name="aFirstB" type="int"/>
                    <param name="aStep" type="int"/>
                    <param name="aCount" type="int"/>
                </params>
                <declaration name="tmpIndexA" type="int" line="77"/>
                <declaration name="tmpIndexB" type="int" line="78"/>
                <declaration name="tmpVal" type="RationalNumber" line="80"/>
                <scope line="82"/>
            </method>
            <method name="fill" type="void" line="93">
                <params>
                    <param name="aData" type="RationalNumber[]"/>
                    <param name="anArg" type="Access1D&lt;?&gt;"/>
                </params>
                <declaration name="tmpLimit" type="int" line="94"/>
                <scope line="95"/>
            </method>
            <method name="fill" type="void" line="100">
                <params>
                    <param name="aData" type="RationalNumber[]"/>
                    <param name="aFirst" type="int"/>
                    <param name="aLimit" type="int"/>
                    <param name="aStep" type="int"/>
                    <param name="aNmbr" type="RationalNumber"/>
                </params>
                <scope line="101"/>
            </method>
            <method name="invoke" type="void" line="107">
                <params>
                    <param name="aData" type="RationalNumber[]"/>
                    <param name="aFirst" type="int"/>
                    <param name="aLimit" type="int"/>
                    <param name="aStep" type="int"/>
                    <param name="aLeftArg" type="Access1D&lt;RationalNumber&gt;"/>
                    <param name="aFunc" type="BinaryFunction&lt;RationalNumber&gt;"/>
                    <param name="aRightArg" type="Access1D&lt;RationalNumber&gt;"/>
                </params>
                <scope line="108"/>
            </method>
            <method name="invoke" type="void" line="114">
                <params>
                    <param name="aData" type="RationalNumber[]"/>
                    <param name="aFirst" type="int"/>
                    <param name="aLimit" type="int"/>
                    <param name="aStep" type="int"/>
                    <param name="aLeftArg" type="Access1D&lt;RationalNumber&gt;"/>
                    <param name="aFunc" type="BinaryFunction&lt;RationalNumber&gt;"/>
                    <param name="aRightArg" type="RationalNumber"/>
                </params>
                <scope line="115"/>
            </method>
            <method name="invoke" type="void" line="121">
                <params>
                    <param name="aData" type="RationalNumber[]"/>
                    <param name="aFirst" type="int"/>
                    <param name="aLimit" type="int"/>
                    <param name="aStep" type="int"/>
                    <param name="anArg" type="Access1D&lt;RationalNumber&gt;"/>
                    <param name="aFunc" type="ParameterFunction&lt;RationalNumber&gt;"/>
                    <param name="aParam" type="int"/>
                </params>
                <scope line="122"/>
            </method>
            <method name="invoke" type="void" line="128">
                <params>
                    <param name="aData" type="RationalNumber[]"/>
                    <param name="aFirst" type="int"/>
                    <param name="aLimit" type="int"/>
                    <param name="aStep" type="int"/>
                    <param name="anArg" type="Access1D&lt;RationalNumber&gt;"/>
                    <param name="aFunc" type="UnaryFunction&lt;RationalNumber&gt;"/>
                </params>
                <scope line="129"/>
            </method>
            <method name="invoke" type="void" line="135">
                <params>
                    <param name="aData" type="RationalNumber[]"/>
                    <param name="aFirst" type="int"/>
                    <param name="aLimit" type="int"/>
                    <param name="aStep" type="int"/>
                    <param name="aLeftArg" type="RationalNumber"/>
                    <param name="aFunc" type="BinaryFunction&lt;RationalNumber&gt;"/>
                    <param name="aRightArg" type="Access1D&lt;RationalNumber&gt;"/>
                </params>
                <scope line="136"/>
            </method>
            <method name="invoke" type="void" line="141">
                <params>
                    <param name="aData" type="RationalNumber[]"/>
                    <param name="aFirst" type="int"/>
                    <param name="aLimit" type="int"/>
                    <param name="aStep" type="int"/>
                    <param name="aVisitor" type="VoidFunction&lt;RationalNumber&gt;"/>
                </params>
                <scope line="142"/>
            </method>
            <declaration name="data" type="RationalNumber[]" line="147"/>
            <method name="RationalArray" type="constructor" line="149">
                <params>
                    <param name="size" type="int"/>
                </params>
            </method>
            <method name="RationalArray" type="constructor" line="157">
                <params>
                    <param name="data" type="RationalNumber[]"/>
                </params>
            </method>
            <method name="equals" type="boolean" line="165">
                <params>
                    <param name="anObj" type="Object"/>
                </params>
                <scope line="166"/>
                <scope line="168"/>
            </method>
            <method name="hashCode" type="int" line="174"/>
            <method name="copyOfData" type="RationalNumber[]" line="178"/>
            <method name="doubleValue" type="double" line="183">
                <params>
                    <param name="index" type="int"/>
                </params>
            </method>
            <method name="exchange" type="void" line="188">
                <params>
                    <param name="firstA" type="int"/>
                    <param name="firstB" type="int"/>
                    <param name="step" type="int"/>
                    <param name="count" type="int"/>
                </params>
            </method>
            <method name="fill" type="void" line="192">
                <params>
                    <param name="anArg" type="Access1D&lt;?&gt;"/>
                </params>
            </method>
            <method name="fill" type="void" line="198">
                <params>
                    <param name="aFirst" type="int"/>
                    <param name="aLimit" type="int"/>
                    <param name="aLeftArg" type="Access1D&lt;RationalNumber&gt;"/>
                    <param name="aFunc" type="BinaryFunction&lt;RationalNumber&gt;"/>
                    <param name="aRightArg" type="Access1D&lt;RationalNumber&gt;"/>
                </params>
            </method>
            <method name="fill" type="void" line="204">
                <params>
                    <param name="aFirst" type="int"/>
                    <param name="aLimit" type="int"/>
                    <param name="aLeftArg" type="Access1D&lt;RationalNumber&gt;"/>
                    <param name="aFunc" type="BinaryFunction&lt;RationalNumber&gt;"/>
                    <param name="aRightArg" type="RationalNumber"/>
                </params>
            </method>
            <method name="fill" type="void" line="209">
                <params>
                    <param name="first" type="int"/>
                    <param name="limit" type="int"/>
                    <param name="step" type="int"/>
                    <param name="value" type="RationalNumber"/>
                </params>
            </method>
            <method name="fill" type="void" line="215">
                <params>
                    <param name="aFirst" type="int"/>
                    <param name="aLimit" type="int"/>
                    <param name="aLeftArg" type="RationalNumber"/>
                    <param name="aFunc" type="BinaryFunction&lt;RationalNumber&gt;"/>
                    <param name="aRightArg" type="Access1D&lt;RationalNumber&gt;"/>
                </params>
            </method>
            <method name="get" type="RationalNumber" line="220">
                <params>
                    <param name="index" type="int"/>
                </params>
            </method>
            <method name="indexOfLargest" type="int" line="225">
                <params>
                    <param name="first" type="int"/>
                    <param name="limit" type="int"/>
                    <param name="step" type="int"/>
                </params>
                <declaration name="retVal" type="int" line="227"/>
                <declaration name="tmpLargest" type="RationalNumber" line="228"/>
                <declaration name="tmpValue" type="RationalNumber" line="229"/>
                <scope line="231">
                    <scope line="233"/>
                </scope>
            </method>
            <method name="isAbsolute" type="boolean" line="243">
                <params>
                    <param name="index" type="int"/>
                </params>
            </method>
            <method name="isInfinite" type="boolean" line="248">
                <params>
                    <param name="index" type="int"/>
                </params>
            </method>
            <method name="isNaN" type="boolean" line="253">
                <params>
                    <param name="index" type="int"/>
                </params>
            </method>
            <method name="isPositive" type="boolean" line="258">
                <params>
                    <param name="index" type="int"/>
                </params>
            </method>
            <method name="isReal" type="boolean" line="263">
                <params>
                    <param name="index" type="int"/>
                </params>
            </method>
            <method name="isZero" type="boolean" line="268">
                <params>
                    <param name="index" type="int"/>
                </params>
            </method>
            <method name="isZeros" type="boolean" line="273">
                <params>
                    <param name="first" type="int"/>
                    <param name="limit" type="int"/>
                    <param name="step" type="int"/>
                </params>
                <declaration name="retVal" type="boolean" line="275"/>
                <scope line="277"/>
            </method>
            <method name="modify" type="void" line="285">
                <params>
                    <param name="index" type="int"/>
                    <param name="left" type="Access1D&lt;RationalNumber&gt;"/>
                    <param name="function" type="BinaryFunction&lt;RationalNumber&gt;"/>
                </params>
                <comment line="287">
                    TODO Auto-generated method stub                    
                </comment>
            </method>
            <method name="modify" type="void" line="291">
                <params>
                    <param name="index" type="int"/>
                    <param name="function" type="BinaryFunction&lt;RationalNumber&gt;"/>
                    <param name="right" type="Access1D&lt;RationalNumber&gt;"/>
                </params>
                <comment line="293">
                    TODO Auto-generated method stub                    
                </comment>
            </method>
            <method name="modify" type="void" line="298">
                <params>
                    <param name="aFirst" type="int"/>
                    <param name="aLimit" type="int"/>
                    <param name="aStep" type="int"/>
                    <param name="aLeftArg" type="Access1D&lt;RationalNumber&gt;"/>
                    <param name="aFunc" type="BinaryFunction&lt;RationalNumber&gt;"/>
                </params>
            </method>
            <method name="modify" type="void" line="304">
                <params>
                    <param name="aFirst" type="int"/>
                    <param name="aLimit" type="int"/>
                    <param name="aStep" type="int"/>
                    <param name="aFunc" type="BinaryFunction&lt;RationalNumber&gt;"/>
                    <param name="aRightArg" type="Access1D&lt;RationalNumber&gt;"/>
                </params>
            </method>
            <method name="modify" type="void" line="309">
                <params>
                    <param name="aFirst" type="int"/>
                    <param name="aLimit" type="int"/>
                    <param name="aStep" type="int"/>
                    <param name="aFunc" type="BinaryFunction&lt;RationalNumber&gt;"/>
                    <param name="aRightArg" type="RationalNumber"/>
                </params>
            </method>
            <method name="modify" type="void" line="314">
                <params>
                    <param name="first" type="int"/>
                    <param name="limit" type="int"/>
                    <param name="step" type="int"/>
                    <param name="func" type="ParameterFunction&lt;RationalNumber&gt;"/>
                    <param name="param" type="int"/>
                </params>
            </method>
            <method name="modify" type="void" line="319">
                <params>
                    <param name="aFirst" type="int"/>
                    <param name="aLimit" type="int"/>
                    <param name="aStep" type="int"/>
                    <param name="aLeftArg" type="RationalNumber"/>
                    <param name="aFunc" type="BinaryFunction&lt;RationalNumber&gt;"/>
                </params>
            </method>
            <method name="modify" type="void" line="324">
                <params>
                    <param name="first" type="int"/>
                    <param name="limit" type="int"/>
                    <param name="step" type="int"/>
                    <param name="func" type="UnaryFunction&lt;RationalNumber&gt;"/>
                </params>
            </method>
            <method name="modify" type="void" line="329">
                <params>
                    <param name="index" type="int"/>
                    <param name="func" type="UnaryFunction&lt;RationalNumber&gt;"/>
                </params>
            </method>
            <javadoc line="333">
                @see org.ojalgo.array.BasicArray#searchAscending(java.lang.Number)                
            </javadoc>
            <method name="searchAscending" type="int" line="337">
                <params>
                    <param name="aNmbr" type="RationalNumber"/>
                </params>
            </method>
            <method name="set" type="void" line="342">
                <params>
                    <param name="index" type="int"/>
                    <param name="value" type="double"/>
                </params>
            </method>
            <method name="set" type="void" line="347">
                <params>
                    <param name="index" type="int"/>
                    <param name="value" type="Number"/>
                </params>
            </method>
            <method name="size" type="int" line="352"/>
            <method name="sortAscending" type="void" line="357"/>
            <method name="toScalar" type="RationalNumber" line="362">
                <params>
                    <param name="index" type="long"/>
                </params>
            </method>
            <method name="visit" type="void" line="367">
                <params>
                    <param name="first" type="int"/>
                    <param name="limit" type="int"/>
                    <param name="step" type="int"/>
                    <param name="visitor" type="VoidFunction&lt;RationalNumber&gt;"/>
                </params>
            </method>
            <method name="visit" type="void" line="372">
                <params>
                    <param name="index" type="int"/>
                    <param name="visitor" type="VoidFunction&lt;RationalNumber&gt;"/>
                </params>
            </method>
            <method name="isPrimitive" type="boolean" line="377"/>
            <method name="newInstance" type="DenseArray&lt;RationalNumber&gt;" line="382">
                <params>
                    <param name="capacity" type="int"/>
                </params>
            </method>
        </class>
    </source>