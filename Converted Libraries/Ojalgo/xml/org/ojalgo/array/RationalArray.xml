<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.ojalgo.array">
        <import package="java.util.Arrays"/>
        <import package="org.ojalgo.access.Access1D"/>
        <import package="org.ojalgo.function.BinaryFunction"/>
        <import package="org.ojalgo.function.ParameterFunction"/>
        <import package="org.ojalgo.function.UnaryFunction"/>
        <import package="org.ojalgo.function.VoidFunction"/>
        <import package="org.ojalgo.scalar.RationalNumber"/>
        <import package="org.ojalgo.type.TypeUtils"/>
        <class name="RationalArray" line="34">
            <extends class="BasicArray">
                <type_params>
                    <type_param name="RationalNumber"/>
                </type_params>
            </extends>
            <javadoc line="34">
                A one- and/or arbitrary-dimensional array of {@linkplain org.ojalgo.scalar.RationalNumber}.                
                <see>
                    PrimitiveArray                    
                </see>
                <author>
                    apete                    
                </author>
            </javadoc>
            <method name="exchange" type="void" line="42">
                <params>
                    <param name="aData" type="RationalNumber[]"/>
                    <param name="aFirstA" type="int"/>
                    <param name="aFirstB" type="int"/>
                    <param name="aStep" type="int"/>
                    <param name="aCount" type="int"/>
                </params>
                <declaration name="tmpIndexA" type="int" line="44"/>
                <declaration name="tmpIndexB" type="int" line="45"/>
                <declaration name="tmpVal" type="RationalNumber" line="47"/>
                <scope line="49"/>
            </method>
            <method name="fill" type="void" line="60">
                <params>
                    <param name="aData" type="RationalNumber[]"/>
                    <param name="anArg" type="Access1D<?>"/>
                </params>
                <declaration name="tmpLimit" type="int" line="61"/>
                <scope line="62"/>
            </method>
            <method name="fill" type="void" line="67">
                <params>
                    <param name="aData" type="RationalNumber[]"/>
                    <param name="aFirst" type="int"/>
                    <param name="aLimit" type="int"/>
                    <param name="aStep" type="int"/>
                    <param name="aNmbr" type="RationalNumber"/>
                </params>
                <scope line="68"/>
            </method>
            <method name="invoke" type="void" line="74">
                <params>
                    <param name="aData" type="RationalNumber[]"/>
                    <param name="aFirst" type="int"/>
                    <param name="aLimit" type="int"/>
                    <param name="aStep" type="int"/>
                    <param name="aLeftArg" type="Access1D<RationalNumber>"/>
                    <param name="aFunc" type="BinaryFunction<RationalNumber>"/>
                    <param name="aRightArg" type="Access1D<RationalNumber>"/>
                </params>
                <scope line="75"/>
            </method>
            <method name="invoke" type="void" line="81">
                <params>
                    <param name="aData" type="RationalNumber[]"/>
                    <param name="aFirst" type="int"/>
                    <param name="aLimit" type="int"/>
                    <param name="aStep" type="int"/>
                    <param name="aLeftArg" type="Access1D<RationalNumber>"/>
                    <param name="aFunc" type="BinaryFunction<RationalNumber>"/>
                    <param name="aRightArg" type="RationalNumber"/>
                </params>
                <scope line="82"/>
            </method>
            <method name="invoke" type="void" line="88">
                <params>
                    <param name="aData" type="RationalNumber[]"/>
                    <param name="aFirst" type="int"/>
                    <param name="aLimit" type="int"/>
                    <param name="aStep" type="int"/>
                    <param name="anArg" type="Access1D<RationalNumber>"/>
                    <param name="aFunc" type="ParameterFunction<RationalNumber>"/>
                    <param name="aParam" type="int"/>
                </params>
                <scope line="89"/>
            </method>
            <method name="invoke" type="void" line="95">
                <params>
                    <param name="aData" type="RationalNumber[]"/>
                    <param name="aFirst" type="int"/>
                    <param name="aLimit" type="int"/>
                    <param name="aStep" type="int"/>
                    <param name="anArg" type="Access1D<RationalNumber>"/>
                    <param name="aFunc" type="UnaryFunction<RationalNumber>"/>
                </params>
                <scope line="96"/>
            </method>
            <method name="invoke" type="void" line="102">
                <params>
                    <param name="aData" type="RationalNumber[]"/>
                    <param name="aFirst" type="int"/>
                    <param name="aLimit" type="int"/>
                    <param name="aStep" type="int"/>
                    <param name="aLeftArg" type="RationalNumber"/>
                    <param name="aFunc" type="BinaryFunction<RationalNumber>"/>
                    <param name="aRightArg" type="Access1D<RationalNumber>"/>
                </params>
                <scope line="103"/>
            </method>
            <method name="invoke" type="void" line="108">
                <params>
                    <param name="aData" type="RationalNumber[]"/>
                    <param name="aFirst" type="int"/>
                    <param name="aLimit" type="int"/>
                    <param name="aStep" type="int"/>
                    <param name="aVisitor" type="VoidFunction<RationalNumber>"/>
                </params>
                <scope line="109"/>
            </method>
            <declaration name="myData" type="RationalNumber[]" line="114"/>
            <method name="RationalArray" type="constructor" line="116">
                <params>
                    <param name="aLength" type="int"/>
                </params>
            </method>
            <method name="RationalArray" type="constructor" line="125">
                <params>
                    <param name="anArray" type="RationalNumber[]"/>
                </params>
            </method>
            <method name="doubleValue" type="double" line="132">
                <params>
                    <param name="index" type="long"/>
                </params>
            </method>
            <method name="equals" type="boolean" line="137">
                <params>
                    <param name="anObj" type="Object"/>
                </params>
                <scope line="138"/>
                <scope line="140"/>
            </method>
            <method name="fillAll" type="void" line="145">
                <params>
                    <param name="aNmbr" type="RationalNumber"/>
                </params>
            </method>
            <method name="fillRange" type="void" line="149">
                <params>
                    <param name="first" type="long"/>
                    <param name="limit" type="long"/>
                    <param name="value" type="RationalNumber"/>
                </params>
            </method>
            <method name="get" type="RationalNumber" line="153">
                <params>
                    <param name="index" type="long"/>
                </params>
            </method>
            <method name="hashCode" type="int" line="158"/>
            <method name="isAbsolute" type="boolean" line="162">
                <params>
                    <param name="index" type="long"/>
                </params>
            </method>
            <method name="isInfinite" type="boolean" line="166">
                <params>
                    <param name="index" type="long"/>
                </params>
            </method>
            <method name="isNaN" type="boolean" line="170">
                <params>
                    <param name="index" type="long"/>
                </params>
            </method>
            <method name="isPositive" type="boolean" line="174">
                <params>
                    <param name="index" type="long"/>
                </params>
            </method>
            <method name="isReal" type="boolean" line="178">
                <params>
                    <param name="index" type="long"/>
                </params>
            </method>
            <method name="isZero" type="boolean" line="182">
                <params>
                    <param name="index" type="long"/>
                </params>
            </method>
            <method name="set" type="RationalNumber" line="187">
                <params>
                    <param name="index" type="int"/>
                    <param name="value" type="Number"/>
                </params>
                <declaration name="retVal" type="RationalNumber" line="188"/>
            </method>
            <method name="set" type="void" line="193">
                <params>
                    <param name="index" type="long"/>
                    <param name="value" type="double"/>
                </params>
            </method>
            <method name="set" type="void" line="197">
                <params>
                    <param name="index" type="long"/>
                    <param name="value" type="Number"/>
                </params>
            </method>
            <method name="copyOfData" type="RationalNumber[]" line="201"/>
            <method name="data" type="RationalNumber[]" line="205"/>
            <method name="exchange" type="void" line="210">
                <params>
                    <param name="aFirstA" type="int"/>
                    <param name="aFirstB" type="int"/>
                    <param name="aStep" type="int"/>
                    <param name="aCount" type="int"/>
                </params>
            </method>
            <method name="fill" type="void" line="215">
                <params>
                    <param name="anArg" type="Access1D<?>"/>
                </params>
            </method>
            <method name="fill" type="void" line="221">
                <params>
                    <param name="aFirst" type="int"/>
                    <param name="aLimit" type="int"/>
                    <param name="aLeftArg" type="Access1D<RationalNumber>"/>
                    <param name="aFunc" type="BinaryFunction<RationalNumber>"/>
                    <param name="aRightArg" type="Access1D<RationalNumber>"/>
                </params>
            </method>
            <method name="fill" type="void" line="227">
                <params>
                    <param name="aFirst" type="int"/>
                    <param name="aLimit" type="int"/>
                    <param name="aLeftArg" type="Access1D<RationalNumber>"/>
                    <param name="aFunc" type="BinaryFunction<RationalNumber>"/>
                    <param name="aRightArg" type="RationalNumber"/>
                </params>
            </method>
            <method name="fill" type="void" line="232">
                <params>
                    <param name="aFirst" type="int"/>
                    <param name="aLimit" type="int"/>
                    <param name="aStep" type="int"/>
                    <param name="aNmbr" type="RationalNumber"/>
                </params>
            </method>
            <method name="fill" type="void" line="238">
                <params>
                    <param name="aFirst" type="int"/>
                    <param name="aLimit" type="int"/>
                    <param name="aLeftArg" type="RationalNumber"/>
                    <param name="aFunc" type="BinaryFunction<RationalNumber>"/>
                    <param name="aRightArg" type="Access1D<RationalNumber>"/>
                </params>
            </method>
            <method name="getIndexOfLargest" type="int" line="243">
                <params>
                    <param name="aFirst" type="int"/>
                    <param name="aLimit" type="int"/>
                    <param name="aStep" type="int"/>
                </params>
                <declaration name="retVal" type="int" line="245"/>
                <declaration name="tmpLargest" type="RationalNumber" line="246"/>
                <declaration name="tmpValue" type="RationalNumber" line="247"/>
                <scope line="249">
                    <scope line="251"/>
                </scope>
            </method>
            <method name="isReal" type="boolean" line="261">
                <params>
                    <param name="index" type="int"/>
                </params>
            </method>
            <method name="isZero" type="boolean" line="266">
                <params>
                    <param name="index" type="int"/>
                </params>
            </method>
            <method name="isZeros" type="boolean" line="271">
                <params>
                    <param name="aFirst" type="int"/>
                    <param name="aLimit" type="int"/>
                    <param name="aStep" type="int"/>
                </params>
                <declaration name="retVal" type="boolean" line="273"/>
                <scope line="275"/>
            </method>
            <method name="modify" type="void" line="284">
                <params>
                    <param name="aFirst" type="int"/>
                    <param name="aLimit" type="int"/>
                    <param name="aStep" type="int"/>
                    <param name="aLeftArg" type="Access1D<RationalNumber>"/>
                    <param name="aFunc" type="BinaryFunction<RationalNumber>"/>
                </params>
            </method>
            <method name="modify" type="void" line="290">
                <params>
                    <param name="aFirst" type="int"/>
                    <param name="aLimit" type="int"/>
                    <param name="aStep" type="int"/>
                    <param name="aFunc" type="BinaryFunction<RationalNumber>"/>
                    <param name="aRightArg" type="Access1D<RationalNumber>"/>
                </params>
            </method>
            <method name="modify" type="void" line="295">
                <params>
                    <param name="aFirst" type="int"/>
                    <param name="aLimit" type="int"/>
                    <param name="aStep" type="int"/>
                    <param name="aFunc" type="BinaryFunction<RationalNumber>"/>
                    <param name="aRightArg" type="RationalNumber"/>
                </params>
            </method>
            <method name="modify" type="void" line="300">
                <params>
                    <param name="aFirst" type="int"/>
                    <param name="aLimit" type="int"/>
                    <param name="aStep" type="int"/>
                    <param name="aFunc" type="ParameterFunction<RationalNumber>"/>
                    <param name="aParam" type="int"/>
                </params>
            </method>
            <method name="modify" type="void" line="305">
                <params>
                    <param name="aFirst" type="int"/>
                    <param name="aLimit" type="int"/>
                    <param name="aStep" type="int"/>
                    <param name="aLeftArg" type="RationalNumber"/>
                    <param name="aFunc" type="BinaryFunction<RationalNumber>"/>
                </params>
            </method>
            <method name="modify" type="void" line="310">
                <params>
                    <param name="aFirst" type="int"/>
                    <param name="aLimit" type="int"/>
                    <param name="aStep" type="int"/>
                    <param name="aFunc" type="UnaryFunction<RationalNumber>"/>
                </params>
            </method>
            <javadoc line="314">
                @see org.ojalgo.array.BasicArray#searchAscending(java.lang.Number)                
            </javadoc>
            <method name="searchAscending" type="int" line="318">
                <params>
                    <param name="aNmbr" type="RationalNumber"/>
                </params>
            </method>
            <method name="sortAscending" type="void" line="323"/>
            <method name="toScalar" type="RationalNumber" line="328">
                <params>
                    <param name="index" type="int"/>
                </params>
            </method>
            <method name="visit" type="void" line="333">
                <params>
                    <param name="aFirst" type="int"/>
                    <param name="aLimit" type="int"/>
                    <param name="aStep" type="int"/>
                    <param name="aVisitor" type="VoidFunction<RationalNumber>"/>
                </params>
            </method>
        </class>
    </source>