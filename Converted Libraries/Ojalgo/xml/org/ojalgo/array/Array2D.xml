<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.ojalgo.array">
        <import package="java.io.Serializable"/>
        <import package="java.math.BigDecimal"/>
        <import package="java.util.Iterator"/>
        <import package="java.util.List"/>
        <import package="org.ojalgo.access.Access1D"/>
        <import package="org.ojalgo.access.Access2D"/>
        <import package="org.ojalgo.access.ColumnsIterator"/>
        <import package="org.ojalgo.access.Iterator1D"/>
        <import package="org.ojalgo.access.RowsIterator"/>
        <import package="org.ojalgo.array.BasicArray.BasicFactory"/>
        <import package="org.ojalgo.function.BinaryFunction"/>
        <import package="org.ojalgo.function.UnaryFunction"/>
        <import package="org.ojalgo.function.VoidFunction"/>
        <import package="org.ojalgo.random.RandomNumber"/>
        <import package="org.ojalgo.scalar.ComplexNumber"/>
        <import package="org.ojalgo.scalar.RationalNumber"/>
        <import package="org.ojalgo.scalar.Scalar"/>
        <class name="Array2D" line="43">
            <type_params>
                <type_param name="N"/>
            </type_params>
            <implements interface="Access2D">
                <type_params>
                    <type_param name="N"/>
                </type_params>
            </implements>
            <implements interface="Access2D.Elements"/>
            <implements interface="Access2D.Fillable">
                <type_params>
                    <type_param name="N"/>
                </type_params>
            </implements>
            <implements interface="Access2D.Iterable2D">
                <type_params>
                    <type_param name="N"/>
                </type_params>
            </implements>
            <implements interface="Access2D.Modifiable">
                <type_params>
                    <type_param name="N"/>
                </type_params>
            </implements>
            <implements interface="Access2D.Visitable">
                <type_params>
                    <type_param name="N"/>
                </type_params>
            </implements>
            <implements interface="Serializable"/>
            <javadoc line="43">
                Array2D                
                <author>
                    apete                    
                </author>
            </javadoc>
            <class name="Factory" line="51">
                <type_params>
                    <type_param name="N"/>
                </type_params>
                <implements interface="Access2D.Factory">
                    <type_params>
                        <type_param name="Array2D&lt;N&gt;"/>
                    </type_params>
                </implements>
                <method name="columns" type="Array2D&lt;N&gt;" line="53">
                    <params>
                        <param name="source" type="Access1D&lt;?&gt;"/>
                    </params>
                    <declaration name="tmpColumns" type="int" line="55"/>
                    <declaration name="tmpRows" type="long" line="56"/>
                    <declaration name="tmpDelegate" type="BasicArray&amp;lt;N&amp;gt;" line="58"/>
                    <declaration name="tmpIndex" type="long" line="60"/>
                    <scope line="61">
                        <declaration name="tmpColumn" type="Access1D&amp;lt;?&amp;gt;" line="62"/>
                        <scope line="63"/>
                    </scope>
                </method>
                <method name="columns" type="Array2D&lt;N&gt;" line="71">
                    <params>
                        <param name="source" type="double[]"/>
                    </params>
                    <declaration name="tmpColumns" type="int" line="73"/>
                    <declaration name="tmpRows" type="int" line="74"/>
                    <declaration name="tmpDelegate" type="BasicArray&amp;lt;N&amp;gt;" line="76"/>
                    <declaration name="tmpIndex" type="long" line="78"/>
                    <scope line="79">
                        <declaration name="tmpColumn" type="double[]" line="80"/>
                        <scope line="81"/>
                    </scope>
                </method>
                <method name="columns" type="Array2D&lt;N&gt;" line="90">
                    <params>
                        <param name="source" type="List&lt;? extends Number&gt;"/>
                    </params>
                    <declaration name="tmpColumns" type="int" line="92"/>
                    <declaration name="tmpRows" type="int" line="93"/>
                    <declaration name="tmpDelegate" type="BasicArray&amp;lt;N&amp;gt;" line="95"/>
                    <declaration name="tmpIndex" type="long" line="97"/>
                    <scope line="98">
                        <declaration name="tmpColumn" type="List&amp;lt;? extends Number&amp;gt;" line="99"/>
                        <scope line="100"/>
                    </scope>
                </method>
                <method name="columns" type="Array2D&lt;N&gt;" line="108">
                    <params>
                        <param name="source" type="Number[]"/>
                    </params>
                    <declaration name="tmpColumns" type="int" line="110"/>
                    <declaration name="tmpRows" type="int" line="111"/>
                    <declaration name="tmpDelegate" type="BasicArray&amp;lt;N&amp;gt;" line="113"/>
                    <declaration name="tmpIndex" type="long" line="115"/>
                    <scope line="116">
                        <declaration name="tmpColumn" type="Number[]" line="117"/>
                        <scope line="118"/>
                    </scope>
                </method>
                <method name="copy" type="Array2D&lt;N&gt;" line="126">
                    <params>
                        <param name="source" type="Access2D&lt;?&gt;"/>
                    </params>
                    <declaration name="tmpColumns" type="long" line="128"/>
                    <declaration name="tmpRows" type="long" line="129"/>
                    <declaration name="tmpDelegate" type="BasicArray&amp;lt;N&amp;gt;" line="131"/>
                    <declaration name="tmpIndex" type="long" line="133"/>
                    <scope line="134">
                        <scope line="135"/>
                    </scope>
                </method>
                <method name="makeEye" type="Array2D&lt;N&gt;" line="143">
                    <params>
                        <param name="rows" type="long"/>
                        <param name="columns" type="long"/>
                    </params>
                    <declaration name="tmpDelegate" type="BasicArray&amp;lt;N&amp;gt;" line="145"/>
                    <declaration name="tmpLimit" type="long" line="147"/>
                    <declaration name="tmpIncr" type="long" line="149"/>
                    <scope line="150"/>
                </method>
                <method name="makeRandom" type="Array2D&lt;N&gt;" line="157">
                    <params>
                        <param name="rows" type="long"/>
                        <param name="columns" type="long"/>
                        <param name="distribution" type="RandomNumber"/>
                    </params>
                    <declaration name="tmpDelegate" type="BasicArray&amp;lt;N&amp;gt;" line="159"/>
                    <declaration name="tmpIndex" type="long" line="161"/>
                    <scope line="162">
                        <scope line="163"/>
                    </scope>
                </method>
                <method name="makeZero" type="Array2D&lt;N&gt;" line="171">
                    <params>
                        <param name="rows" type="long"/>
                        <param name="columns" type="long"/>
                    </params>
                </method>
                <method name="rows" type="Array2D&lt;N&gt;" line="175">
                    <params>
                        <param name="source" type="Access1D&lt;?&gt;"/>
                    </params>
                    <declaration name="tmpRows" type="int" line="177"/>
                    <declaration name="tmpColumns" type="long" line="178"/>
                    <declaration name="tmpDelegate" type="BasicArray&amp;lt;N&amp;gt;" line="180"/>
                    <scope line="182">
                        <declaration name="tmpRow" type="Access1D&amp;lt;?&amp;gt;" line="183"/>
                        <scope line="184"/>
                    </scope>
                </method>
                <method name="rows" type="Array2D&lt;N&gt;" line="192">
                    <params>
                        <param name="source" type="double[]"/>
                    </params>
                    <declaration name="tmpRows" type="int" line="194"/>
                    <declaration name="tmpColumns" type="int" line="195"/>
                    <declaration name="tmpDelegate" type="BasicArray&amp;lt;N&amp;gt;" line="197"/>
                    <scope line="199">
                        <declaration name="tmpRow" type="double[]" line="200"/>
                        <scope line="201"/>
                    </scope>
                </method>
                <method name="rows" type="Array2D&lt;N&gt;" line="210">
                    <params>
                        <param name="source" type="List&lt;? extends Number&gt;"/>
                    </params>
                    <declaration name="tmpRows" type="int" line="212"/>
                    <declaration name="tmpColumns" type="int" line="213"/>
                    <declaration name="tmpDelegate" type="BasicArray&amp;lt;N&amp;gt;" line="215"/>
                    <scope line="217">
                        <declaration name="tmpRow" type="List&amp;lt;? extends Number&amp;gt;" line="218"/>
                        <scope line="219"/>
                    </scope>
                </method>
                <method name="rows" type="Array2D&lt;N&gt;" line="227">
                    <params>
                        <param name="source" type="Number[]"/>
                    </params>
                    <declaration name="tmpRows" type="int" line="229"/>
                    <declaration name="tmpColumns" type="int" line="230"/>
                    <declaration name="tmpDelegate" type="BasicArray&amp;lt;N&amp;gt;" line="232"/>
                    <scope line="234">
                        <declaration name="tmpRow" type="Number[]" line="235"/>
                        <scope line="236"/>
                    </scope>
                </method>
                <method name="delegate" type="BasicArray.BasicFactory&lt;N&gt;" line="244"/>
            </class>
            <declaration name="BIG" type="Factory&amp;lt;BigDecimal&amp;gt;" line="248"/>
            <anonymous_class line="248">
                <method name="delegate" type="BasicFactory&lt;BigDecimal&gt;" line="251"/>
            </anonymous_class>
            <declaration name="COMPLEX" type="Factory&amp;lt;ComplexNumber&amp;gt;" line="257"/>
            <anonymous_class line="257">
                <method name="delegate" type="BasicFactory&lt;ComplexNumber&gt;" line="260"/>
            </anonymous_class>
            <declaration name="PRIMITIVE" type="Factory&amp;lt;Double&amp;gt;" line="266"/>
            <anonymous_class line="266">
                <method name="delegate" type="BasicFactory&lt;Double&gt;" line="269"/>
            </anonymous_class>
            <declaration name="RATIONAL" type="Factory&amp;lt;RationalNumber&amp;gt;" line="275"/>
            <anonymous_class line="275">
                <method name="delegate" type="BasicFactory&lt;RationalNumber&gt;" line="278"/>
            </anonymous_class>
            <declaration name="myColumnsCount" type="long" line="284"/>
            <declaration name="myDelegate" type="BasicArray&amp;lt;N&amp;gt;" line="285"/>
            <declaration name="myRowsCount" type="long" line="286"/>
            <method name="Array2D" type="constructor" line="289"/>
            <method name="Array2D" type="constructor" line="293">
                <params>
                    <param name="delegate" type="BasicArray&lt;N&gt;"/>
                    <param name="structure" type="long"/>
                </params>
            </method>
            <javadoc line="303">
                Flattens this two dimensional array to a one dimensional array. The (internal/actual) array is not copied, it is
                  just accessed through a different adaptor.                
            </javadoc>
            <method name="asArray1D" type="Array1D&lt;N&gt;" line="307"/>
            <method name="columns" type="Iterable&lt;Access1D&lt;N&gt;&gt;" line="311"/>
            <method name="count" type="long" line="315"/>
            <method name="countColumns" type="long" line="319"/>
            <method name="countRows" type="long" line="323"/>
            <method name="doubleValue" type="double" line="327">
                <params>
                    <param name="index" type="long"/>
                </params>
            </method>
            <method name="doubleValue" type="double" line="331">
                <params>
                    <param name="row" type="long"/>
                    <param name="column" type="long"/>
                </params>
            </method>
            <method name="equals" type="boolean" line="337">
                <params>
                    <param name="obj" type="Object"/>
                </params>
                <scope line="338">
                    <declaration name="tmpObj" type="Array2D&amp;lt;N&amp;gt;" line="339"/>
                </scope>
                <scope line="341"/>
            </method>
            <method name="exchangeColumns" type="void" line="346">
                <params>
                    <param name="aColA" type="long"/>
                    <param name="aColB" type="long"/>
                </params>
            </method>
            <method name="exchangeRows" type="void" line="350">
                <params>
                    <param name="aRowA" type="long"/>
                    <param name="aRowB" type="long"/>
                </params>
            </method>
            <method name="fillAll" type="void" line="354">
                <params>
                    <param name="value" type="N"/>
                </params>
            </method>
            <method name="fillColumn" type="void" line="358">
                <params>
                    <param name="row" type="long"/>
                    <param name="column" type="long"/>
                    <param name="value" type="N"/>
                </params>
                <declaration name="tmpFirst" type="long" line="359"/>
                <declaration name="tmpLimit" type="long" line="360"/>
            </method>
            <method name="fillDiagonal" type="void" line="364">
                <params>
                    <param name="row" type="long"/>
                    <param name="column" type="long"/>
                    <param name="value" type="N"/>
                </params>
                <declaration name="tmpCount" type="long" line="366"/>
                <declaration name="tmpFirst" type="long" line="368"/>
                <declaration name="tmpLimit" type="long" line="369"/>
                <declaration name="tmpStep" type="long" line="370"/>
            </method>
            <method name="fillRange" type="void" line="375">
                <params>
                    <param name="first" type="long"/>
                    <param name="limit" type="long"/>
                    <param name="value" type="N"/>
                </params>
            </method>
            <method name="fillRow" type="void" line="379">
                <params>
                    <param name="row" type="long"/>
                    <param name="column" type="long"/>
                    <param name="value" type="N"/>
                </params>
                <declaration name="tmpFirst" type="int" line="380"/>
                <declaration name="tmpLimit" type="int" line="381"/>
            </method>
            <method name="get" type="N" line="385">
                <params>
                    <param name="index" type="long"/>
                </params>
            </method>
            <method name="get" type="N" line="389">
                <params>
                    <param name="row" type="long"/>
                    <param name="column" type="long"/>
                </params>
            </method>
            <javadoc line="393">
                @deprecated v36 Use {@link #indexOfLargestInColumn(long,long)} instead                
            </javadoc>
            <method name="getIndexOfLargestInColumn" type="long" line="397">
                <params>
                    <param name="row" type="long"/>
                    <param name="column" type="long"/>
                </params>
            </method>
            <javadoc line="401">
                @deprecated v36 Use {@link #indexOfLargestInRow(long,long)} instead                
            </javadoc>
            <method name="getIndexOfLargestInRow" type="long" line="405">
                <params>
                    <param name="row" type="long"/>
                    <param name="column" type="long"/>
                </params>
            </method>
            <method name="hashCode" type="int" line="410"/>
            <method name="indexOfLargestInColumn" type="long" line="414">
                <params>
                    <param name="row" type="long"/>
                    <param name="column" type="long"/>
                </params>
            </method>
            <method name="indexOfLargestInRow" type="long" line="418">
                <params>
                    <param name="row" type="long"/>
                    <param name="column" type="long"/>
                </params>
            </method>
            <method name="isAbsolute" type="boolean" line="422">
                <params>
                    <param name="index" type="long"/>
                </params>
            </method>
            <javadoc line="426">
                @see Scalar#isAbsolute()                
            </javadoc>
            <method name="isAbsolute" type="boolean" line="429">
                <params>
                    <param name="row" type="long"/>
                    <param name="column" type="long"/>
                </params>
            </method>
            <method name="isAllZeros" type="boolean" line="433"/>
            <method name="isColumnZeros" type="boolean" line="437">
                <params>
                    <param name="row" type="long"/>
                    <param name="column" type="long"/>
                </params>
            </method>
            <method name="isDiagonalZeros" type="boolean" line="441">
                <params>
                    <param name="row" type="long"/>
                    <param name="column" type="long"/>
                </params>
                <declaration name="tmpCount" type="long" line="443"/>
            </method>
            <method name="isInfinite" type="boolean" line="448">
                <params>
                    <param name="index" type="long"/>
                </params>
            </method>
            <method name="isInfinite" type="boolean" line="452">
                <params>
                    <param name="row" type="long"/>
                    <param name="column" type="long"/>
                </params>
            </method>
            <method name="isNaN" type="boolean" line="456">
                <params>
                    <param name="index" type="long"/>
                </params>
            </method>
            <method name="isNaN" type="boolean" line="460">
                <params>
                    <param name="row" type="long"/>
                    <param name="column" type="long"/>
                </params>
            </method>
            <method name="isPositive" type="boolean" line="464">
                <params>
                    <param name="index" type="long"/>
                </params>
            </method>
            <method name="isPositive" type="boolean" line="468">
                <params>
                    <param name="row" type="long"/>
                    <param name="column" type="long"/>
                </params>
            </method>
            <method name="isReal" type="boolean" line="472">
                <params>
                    <param name="index" type="long"/>
                </params>
            </method>
            <method name="isReal" type="boolean" line="476">
                <params>
                    <param name="row" type="long"/>
                    <param name="column" type="long"/>
                </params>
            </method>
            <method name="isRowZeros" type="boolean" line="480">
                <params>
                    <param name="row" type="long"/>
                    <param name="column" type="long"/>
                </params>
            </method>
            <method name="isZero" type="boolean" line="484">
                <params>
                    <param name="index" type="long"/>
                </params>
            </method>
            <method name="isZero" type="boolean" line="488">
                <params>
                    <param name="row" type="long"/>
                    <param name="column" type="long"/>
                </params>
            </method>
            <method name="iterator" type="Iterator&lt;N&gt;" line="492"/>
            <method name="modifyAll" type="void" line="496">
                <params>
                    <param name="function" type="UnaryFunction&lt;N&gt;"/>
                </params>
            </method>
            <method name="modifyColumn" type="void" line="500">
                <params>
                    <param name="row" type="long"/>
                    <param name="column" type="long"/>
                    <param name="function" type="UnaryFunction&lt;N&gt;"/>
                </params>
            </method>
            <method name="modifyDiagonal" type="void" line="504">
                <params>
                    <param name="row" type="long"/>
                    <param name="column" type="long"/>
                    <param name="function" type="UnaryFunction&lt;N&gt;"/>
                </params>
                <declaration name="tmpCount" type="long" line="506"/>
                <declaration name="tmpFirst" type="long" line="508"/>
                <declaration name="tmpLimit" type="long" line="509"/>
                <declaration name="tmpStep" type="long" line="510"/>
            </method>
            <method name="modifyMatching" type="void" line="515">
                <params>
                    <param name="aLeftArg" type="Array2D&lt;N&gt;"/>
                    <param name="function" type="BinaryFunction&lt;N&gt;"/>
                </params>
            </method>
            <method name="modifyMatching" type="void" line="519">
                <params>
                    <param name="function" type="BinaryFunction&lt;N&gt;"/>
                    <param name="aRightArg" type="Array2D&lt;N&gt;"/>
                </params>
            </method>
            <method name="modifyRange" type="void" line="523">
                <params>
                    <param name="first" type="long"/>
                    <param name="limit" type="long"/>
                    <param name="function" type="UnaryFunction&lt;N&gt;"/>
                </params>
            </method>
            <method name="modifyRow" type="void" line="527">
                <params>
                    <param name="row" type="long"/>
                    <param name="column" type="long"/>
                    <param name="function" type="UnaryFunction&lt;N&gt;"/>
                </params>
            </method>
            <method name="rows" type="Iterable&lt;Access1D&lt;N&gt;&gt;" line="531"/>
            <method name="set" type="void" line="535">
                <params>
                    <param name="index" type="long"/>
                    <param name="value" type="double"/>
                </params>
            </method>
            <method name="set" type="void" line="539">
                <params>
                    <param name="row" type="long"/>
                    <param name="column" type="long"/>
                    <param name="value" type="double"/>
                </params>
            </method>
            <method name="set" type="void" line="543">
                <params>
                    <param name="row" type="long"/>
                    <param name="column" type="long"/>
                    <param name="value" type="Number"/>
                </params>
            </method>
            <method name="set" type="void" line="547">
                <params>
                    <param name="index" type="long"/>
                    <param name="value" type="Number"/>
                </params>
            </method>
            <method name="sliceColumn" type="Array1D&lt;N&gt;" line="551">
                <params>
                    <param name="row" type="long"/>
                    <param name="column" type="long"/>
                </params>
            </method>
            <method name="sliceDiagonal" type="Array1D&lt;N&gt;" line="555">
                <params>
                    <param name="row" type="long"/>
                    <param name="column" type="long"/>
                </params>
                <declaration name="tmpCount" type="long" line="556"/>
            </method>
            <method name="sliceRow" type="Array1D&lt;N&gt;" line="560">
                <params>
                    <param name="row" type="long"/>
                    <param name="column" type="long"/>
                </params>
            </method>
            <javadoc line="564">
                @return An array of arrays of doubles                
            </javadoc>
            <method name="toRawCopy" type="double[][]" line="567"/>
            <method name="toScalar" type="Scalar&lt;N&gt;" line="571">
                <params>
                    <param name="row" type="long"/>
                    <param name="column" type="long"/>
                </params>
            </method>
            <method name="toString" type="String" line="576"/>
            <method name="visitAll" type="void" line="580">
                <params>
                    <param name="visitor" type="VoidFunction&lt;N&gt;"/>
                </params>
            </method>
            <method name="visitColumn" type="void" line="584">
                <params>
                    <param name="row" type="long"/>
                    <param name="column" type="long"/>
                    <param name="visitor" type="VoidFunction&lt;N&gt;"/>
                </params>
                <declaration name="tmpFirst" type="long" line="585"/>
                <declaration name="tmpLimit" type="long" line="586"/>
            </method>
            <method name="visitDiagonal" type="void" line="590">
                <params>
                    <param name="row" type="long"/>
                    <param name="column" type="long"/>
                    <param name="visitor" type="VoidFunction&lt;N&gt;"/>
                </params>
                <declaration name="tmpCount" type="long" line="592"/>
                <declaration name="tmpFirst" type="long" line="594"/>
                <declaration name="tmpLimit" type="long" line="595"/>
            </method>
            <method name="visitRange" type="void" line="599">
                <params>
                    <param name="first" type="long"/>
                    <param name="limit" type="long"/>
                    <param name="visitor" type="VoidFunction&lt;N&gt;"/>
                </params>
            </method>
            <method name="visitRow" type="void" line="603">
                <params>
                    <param name="row" type="long"/>
                    <param name="column" type="long"/>
                    <param name="visitor" type="VoidFunction&lt;N&gt;"/>
                </params>
                <declaration name="tmpFirst" type="long" line="604"/>
                <declaration name="tmpLimit" type="long" line="605"/>
            </method>
            <method name="getDelegate" type="BasicArray&lt;N&gt;" line="609"/>
        </class>
    </source>