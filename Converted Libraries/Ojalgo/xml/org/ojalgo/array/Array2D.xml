<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.ojalgo.array">
        <import package="java.io.Serializable"/>
        <import package="java.math.BigDecimal"/>
        <import package="java.util.Iterator"/>
        <import package="java.util.List"/>
        <import package="org.ojalgo.access.Access1D"/>
        <import package="org.ojalgo.access.Access2D"/>
        <import package="org.ojalgo.access.ColumnsIterator"/>
        <import package="org.ojalgo.access.Iterator1D"/>
        <import package="org.ojalgo.access.RowsIterator"/>
        <import package="org.ojalgo.function.BinaryFunction"/>
        <import package="org.ojalgo.function.ParameterFunction"/>
        <import package="org.ojalgo.function.UnaryFunction"/>
        <import package="org.ojalgo.function.VoidFunction"/>
        <import package="org.ojalgo.matrix.store.BigDenseStore"/>
        <import package="org.ojalgo.matrix.store.ComplexDenseStore"/>
        <import package="org.ojalgo.matrix.store.PrimitiveDenseStore"/>
        <import package="org.ojalgo.random.RandomNumber"/>
        <import package="org.ojalgo.scalar.ComplexNumber"/>
        <import package="org.ojalgo.scalar.Scalar"/>
        <class name="Array2D" line="21">
            <type_params>
                <type_param name="N"/>
            </type_params>
            <implements interface="Access2D">
                <type_params>
                    <type_param name="N"/>
                </type_params>
            </implements>
            <implements interface="Access2D.Elements"/>
            <implements interface="Access2D.Fillable">
                <type_params>
                    <type_param name="N"/>
                </type_params>
            </implements>
            <implements interface="Access2D.Iterable2D">
                <type_params>
                    <type_param name="N"/>
                </type_params>
            </implements>
            <implements interface="Access2D.Modifiable">
                <type_params>
                    <type_param name="N"/>
                </type_params>
            </implements>
            <implements interface="Access2D.Visitable">
                <type_params>
                    <type_param name="N"/>
                </type_params>
            </implements>
            <implements interface="Serializable"/>
            <javadoc line="21">
                Array2D                
                <author>
                    apete                    
                </author>
            </javadoc>
            <declaration name="BIG" type="Access2D.Factory&lt;Array2D&lt;BigDecimal&gt;&gt;" line="26"/>
            <anonymous_class line="26">
                <method name="columns" type="Array2D<BigDecimal>" line="27">
                    <params>
                        <param name="source" type="Access1D<?>"/>
                    </params>
                </method>
                <method name="columns" type="Array2D<BigDecimal>" line="30">
                    <params>
                        <param name="source" type="double[]"/>
                    </params>
                </method>
                <method name="columns" type="Array2D<BigDecimal>" line="33">
                    <params>
                        <param name="source" type="List<? extends Number>"/>
                    </params>
                </method>
                <method name="columns" type="Array2D<BigDecimal>" line="36">
                    <params>
                        <param name="source" type="Number[]"/>
                    </params>
                </method>
                <method name="copy" type="Array2D<BigDecimal>" line="39">
                    <params>
                        <param name="source" type="Access2D<?>"/>
                    </params>
                </method>
                <method name="makeEye" type="Array2D<BigDecimal>" line="42">
                    <params>
                        <param name="rows" type="long"/>
                        <param name="columns" type="long"/>
                    </params>
                </method>
                <method name="makeRandom" type="Array2D<BigDecimal>" line="45">
                    <params>
                        <param name="rows" type="long"/>
                        <param name="columns" type="long"/>
                        <param name="distribution" type="RandomNumber"/>
                    </params>
                </method>
                <method name="makeZero" type="Array2D<BigDecimal>" line="48">
                    <params>
                        <param name="rows" type="long"/>
                        <param name="columns" type="long"/>
                    </params>
                </method>
                <method name="rows" type="Array2D<BigDecimal>" line="51">
                    <params>
                        <param name="source" type="Access1D<?>"/>
                    </params>
                </method>
                <method name="rows" type="Array2D<BigDecimal>" line="54">
                    <params>
                        <param name="source" type="double[]"/>
                    </params>
                </method>
                <method name="rows" type="Array2D<BigDecimal>" line="57">
                    <params>
                        <param name="source" type="List<? extends Number>"/>
                    </params>
                </method>
                <method name="rows" type="Array2D<BigDecimal>" line="60">
                    <params>
                        <param name="source" type="Number[]"/>
                    </params>
                </method>
            </anonymous_class>
            <declaration name="COMPLEX" type="Factory&lt;Array2D&lt;ComplexNumber&gt;&gt;" line="65"/>
            <anonymous_class line="65">
                <method name="columns" type="Array2D<ComplexNumber>" line="66">
                    <params>
                        <param name="source" type="Access1D<?>"/>
                    </params>
                </method>
                <method name="columns" type="Array2D<ComplexNumber>" line="69">
                    <params>
                        <param name="source" type="double[]"/>
                    </params>
                </method>
                <method name="columns" type="Array2D<ComplexNumber>" line="72">
                    <params>
                        <param name="source" type="List<? extends Number>"/>
                    </params>
                </method>
                <method name="columns" type="Array2D<ComplexNumber>" line="75">
                    <params>
                        <param name="source" type="Number[]"/>
                    </params>
                </method>
                <method name="copy" type="Array2D<ComplexNumber>" line="78">
                    <params>
                        <param name="source" type="Access2D<?>"/>
                    </params>
                </method>
                <method name="makeEye" type="Array2D<ComplexNumber>" line="81">
                    <params>
                        <param name="rows" type="long"/>
                        <param name="columns" type="long"/>
                    </params>
                </method>
                <method name="makeRandom" type="Array2D<ComplexNumber>" line="84">
                    <params>
                        <param name="rows" type="long"/>
                        <param name="columns" type="long"/>
                        <param name="distribution" type="RandomNumber"/>
                    </params>
                </method>
                <method name="makeZero" type="Array2D<ComplexNumber>" line="87">
                    <params>
                        <param name="rows" type="long"/>
                        <param name="columns" type="long"/>
                    </params>
                </method>
                <method name="rows" type="Array2D<ComplexNumber>" line="90">
                    <params>
                        <param name="source" type="Access1D<?>"/>
                    </params>
                </method>
                <method name="rows" type="Array2D<ComplexNumber>" line="93">
                    <params>
                        <param name="source" type="double[]"/>
                    </params>
                </method>
                <method name="rows" type="Array2D<ComplexNumber>" line="96">
                    <params>
                        <param name="source" type="List<? extends Number>"/>
                    </params>
                </method>
                <method name="rows" type="Array2D<ComplexNumber>" line="99">
                    <params>
                        <param name="source" type="Number[]"/>
                    </params>
                </method>
            </anonymous_class>
            <declaration name="PRIMITIVE" type="Access2D.Factory&lt;Array2D&lt;Double&gt;&gt;" line="104"/>
            <anonymous_class line="104">
                <method name="columns" type="Array2D<Double>" line="105">
                    <params>
                        <param name="source" type="Access1D<?>"/>
                    </params>
                </method>
                <method name="columns" type="Array2D<Double>" line="108">
                    <params>
                        <param name="source" type="double[]"/>
                    </params>
                </method>
                <method name="columns" type="Array2D<Double>" line="111">
                    <params>
                        <param name="source" type="List<? extends Number>"/>
                    </params>
                </method>
                <method name="columns" type="Array2D<Double>" line="114">
                    <params>
                        <param name="source" type="Number[]"/>
                    </params>
                </method>
                <method name="copy" type="Array2D<Double>" line="117">
                    <params>
                        <param name="source" type="Access2D<?>"/>
                    </params>
                </method>
                <method name="makeEye" type="Array2D<Double>" line="120">
                    <params>
                        <param name="rows" type="long"/>
                        <param name="columns" type="long"/>
                    </params>
                </method>
                <method name="makeRandom" type="Array2D<Double>" line="123">
                    <params>
                        <param name="rows" type="long"/>
                        <param name="columns" type="long"/>
                        <param name="distribution" type="RandomNumber"/>
                    </params>
                </method>
                <method name="makeZero" type="Array2D<Double>" line="126">
                    <params>
                        <param name="rows" type="long"/>
                        <param name="columns" type="long"/>
                    </params>
                </method>
                <method name="rows" type="Array2D<Double>" line="129">
                    <params>
                        <param name="source" type="Access1D<?>"/>
                    </params>
                </method>
                <method name="rows" type="Array2D<Double>" line="132">
                    <params>
                        <param name="source" type="double[]"/>
                    </params>
                </method>
                <method name="rows" type="Array2D<Double>" line="135">
                    <params>
                        <param name="source" type="List<? extends Number>"/>
                    </params>
                </method>
                <method name="rows" type="Array2D<Double>" line="138">
                    <params>
                        <param name="source" type="Number[]"/>
                    </params>
                </method>
            </anonymous_class>
            <declaration name="myColDim" type="int" line="143"/>
            <declaration name="myDelegate" type="BasicArray&lt;N&gt;" line="144"/>
            <declaration name="myRowDim" type="int" line="145"/>
            <method name="Array2D" type="constructor" line="146"/>
            <method name="Array2D" type="constructor" line="149">
                <params>
                    <param name="aDelegate" type="BasicArray<N>"/>
                    <param name="aRowDim" type="int"/>
                    <param name="aColDim" type="int"/>
                </params>
            </method>
            <javadoc line="155">
                Flattens this two dimensional array to a one dimensional array. The (internal/actual) array is not copied, it is
                  just accessed through a different adaptor.                
            </javadoc>
            <method name="asArray1D" type="Array1D<N>" line="159"/>
            <method name="columns" type="Iterable<Access1D<N>>" line="162"/>
            <method name="count" type="long" line="165"/>
            <method name="countColumns" type="long" line="168"/>
            <method name="countRows" type="long" line="171"/>
            <method name="doubleValue" type="double" line="174">
                <params>
                    <param name="index" type="long"/>
                </params>
            </method>
            <method name="doubleValue" type="double" line="177">
                <params>
                    <param name="row" type="long"/>
                    <param name="column" type="long"/>
                </params>
            </method>
            <method name="equals" type="boolean" line="180">
                <params>
                    <param name="obj" type="Object"/>
                </params>
                <scope line="181">
                    <declaration name="tmpObj" type="Array2D&lt;N&gt;" line="182"/>
                </scope>
                <scope line="185"/>
            </method>
            <method name="exchangeColumns" type="void" line="189">
                <params>
                    <param name="aColA" type="int"/>
                    <param name="aColB" type="int"/>
                </params>
            </method>
            <method name="exchangeRows" type="void" line="192">
                <params>
                    <param name="aRowA" type="int"/>
                    <param name="aRowB" type="int"/>
                </params>
            </method>
            <method name="fillAll" type="void" line="195">
                <params>
                    <param name="value" type="N"/>
                </params>
            </method>
            <method name="fillColumn" type="void" line="198">
                <params>
                    <param name="row" type="long"/>
                    <param name="column" type="long"/>
                    <param name="value" type="N"/>
                </params>
                <declaration name="tmpFirst" type="int" line="199"/>
                <declaration name="tmpLimit" type="int" line="200"/>
            </method>
            <method name="fillDiagonal" type="void" line="203">
                <params>
                    <param name="row" type="long"/>
                    <param name="column" type="long"/>
                    <param name="value" type="N"/>
                </params>
                <declaration name="tmpCount" type="long" line="204"/>
                <declaration name="tmpFirst" type="int" line="205"/>
                <declaration name="tmpLimit" type="int" line="206"/>
                <declaration name="tmpStep" type="int" line="207"/>
            </method>
            <method name="fillMatching" type="void" line="210">
                <params>
                    <param name="aLeftArg" type="Array2D<N>"/>
                    <param name="aFunc" type="BinaryFunction<N>"/>
                    <param name="aRightArg" type="Array2D<N>"/>
                </params>
            </method>
            <method name="fillRange" type="void" line="213">
                <params>
                    <param name="first" type="long"/>
                    <param name="limit" type="long"/>
                    <param name="value" type="N"/>
                </params>
            </method>
            <method name="fillRow" type="void" line="216">
                <params>
                    <param name="row" type="long"/>
                    <param name="column" type="long"/>
                    <param name="value" type="N"/>
                </params>
                <declaration name="tmpFirst" type="int" line="217"/>
                <declaration name="tmpLimit" type="int" line="218"/>
            </method>
            <method name="get" type="N" line="221">
                <params>
                    <param name="index" type="long"/>
                </params>
            </method>
            <method name="get" type="N" line="224">
                <params>
                    <param name="row" type="long"/>
                    <param name="column" type="long"/>
                </params>
            </method>
            <method name="getColDim" type="int" line="227"/>
            <method name="getIndexOfLargestInColumn" type="int" line="230">
                <params>
                    <param name="row" type="int"/>
                    <param name="column" type="int"/>
                </params>
            </method>
            <method name="getIndexOfLargestInRow" type="int" line="233">
                <params>
                    <param name="row" type="int"/>
                    <param name="column" type="int"/>
                </params>
            </method>
            <method name="getMaxDim" type="int" line="236"/>
            <method name="getMinDim" type="int" line="239"/>
            <method name="getRowDim" type="int" line="242"/>
            <method name="hashCode" type="int" line="245"/>
            <method name="isAbsolute" type="boolean" line="248">
                <params>
                    <param name="index" type="long"/>
                </params>
            </method>
            <javadoc line="251">
                @see Scalar#isAbsolute()                
            </javadoc>
            <method name="isAbsolute" type="boolean" line="254">
                <params>
                    <param name="row" type="long"/>
                    <param name="column" type="long"/>
                </params>
            </method>
            <method name="isAllZeros" type="boolean" line="257"/>
            <method name="isColumnZeros" type="boolean" line="260">
                <params>
                    <param name="row" type="int"/>
                    <param name="column" type="int"/>
                </params>
            </method>
            <method name="isDiagonalZeros" type="boolean" line="263">
                <params>
                    <param name="row" type="int"/>
                    <param name="column" type="int"/>
                </params>
                <declaration name="tmpCount" type="int" line="264"/>
            </method>
            <method name="isInfinite" type="boolean" line="267">
                <params>
                    <param name="index" type="long"/>
                </params>
            </method>
            <method name="isInfinite" type="boolean" line="270">
                <params>
                    <param name="row" type="long"/>
                    <param name="column" type="long"/>
                </params>
            </method>
            <method name="isNaN" type="boolean" line="273">
                <params>
                    <param name="index" type="long"/>
                </params>
            </method>
            <method name="isNaN" type="boolean" line="276">
                <params>
                    <param name="row" type="long"/>
                    <param name="column" type="long"/>
                </params>
            </method>
            <method name="isPositive" type="boolean" line="279">
                <params>
                    <param name="index" type="long"/>
                </params>
            </method>
            <method name="isPositive" type="boolean" line="282">
                <params>
                    <param name="row" type="long"/>
                    <param name="column" type="long"/>
                </params>
            </method>
            <method name="isReal" type="boolean" line="285">
                <params>
                    <param name="row" type="int"/>
                    <param name="column" type="int"/>
                </params>
            </method>
            <method name="isReal" type="boolean" line="288">
                <params>
                    <param name="index" type="long"/>
                </params>
            </method>
            <method name="isReal" type="boolean" line="291">
                <params>
                    <param name="row" type="long"/>
                    <param name="column" type="long"/>
                </params>
            </method>
            <method name="isRowZeros" type="boolean" line="294">
                <params>
                    <param name="row" type="int"/>
                    <param name="column" type="int"/>
                </params>
            </method>
            <method name="isZero" type="boolean" line="297">
                <params>
                    <param name="row" type="int"/>
                    <param name="column" type="int"/>
                </params>
            </method>
            <method name="isZero" type="boolean" line="300">
                <params>
                    <param name="index" type="long"/>
                </params>
            </method>
            <method name="isZero" type="boolean" line="303">
                <params>
                    <param name="row" type="long"/>
                    <param name="column" type="long"/>
                </params>
            </method>
            <method name="iterator" type="Iterator<N>" line="306"/>
            <method name="modifyAll" type="void" line="309">
                <params>
                    <param name="aFunc" type="BinaryFunction<N>"/>
                    <param name="value" type="N"/>
                </params>
            </method>
            <method name="modifyAll" type="void" line="312">
                <params>
                    <param name="value" type="N"/>
                    <param name="aFunc" type="BinaryFunction<N>"/>
                </params>
            </method>
            <method name="modifyAll" type="void" line="315">
                <params>
                    <param name="aFunc" type="ParameterFunction<N>"/>
                    <param name="aParam" type="int"/>
                </params>
            </method>
            <method name="modifyAll" type="void" line="318">
                <params>
                    <param name="aFunc" type="UnaryFunction<N>"/>
                </params>
            </method>
            <method name="modifyColumn" type="void" line="321">
                <params>
                    <param name="row" type="int"/>
                    <param name="column" type="int"/>
                    <param name="aFunc" type="BinaryFunction<N>"/>
                    <param name="value" type="N"/>
                </params>
            </method>
            <method name="modifyColumn" type="void" line="324">
                <params>
                    <param name="row" type="int"/>
                    <param name="column" type="int"/>
                    <param name="value" type="N"/>
                    <param name="aFunc" type="BinaryFunction<N>"/>
                </params>
            </method>
            <method name="modifyColumn" type="void" line="327">
                <params>
                    <param name="row" type="int"/>
                    <param name="column" type="int"/>
                    <param name="aFunc" type="ParameterFunction<N>"/>
                    <param name="aParam" type="int"/>
                </params>
            </method>
            <method name="modifyColumn" type="void" line="330">
                <params>
                    <param name="row" type="long"/>
                    <param name="column" type="long"/>
                    <param name="function" type="UnaryFunction<N>"/>
                </params>
                <declaration name="tmpFirst" type="int" line="331"/>
                <declaration name="tmpLimit" type="int" line="332"/>
            </method>
            <method name="modifyDiagonal" type="void" line="335">
                <params>
                    <param name="row" type="int"/>
                    <param name="column" type="int"/>
                    <param name="aFunc" type="BinaryFunction<N>"/>
                    <param name="value" type="N"/>
                </params>
                <declaration name="tmpCount" type="int" line="336"/>
            </method>
            <method name="modifyDiagonal" type="void" line="339">
                <params>
                    <param name="row" type="int"/>
                    <param name="column" type="int"/>
                    <param name="value" type="N"/>
                    <param name="aFunc" type="BinaryFunction<N>"/>
                </params>
                <declaration name="tmpCount" type="int" line="340"/>
            </method>
            <method name="modifyDiagonal" type="void" line="343">
                <params>
                    <param name="row" type="int"/>
                    <param name="column" type="int"/>
                    <param name="aFunc" type="ParameterFunction<N>"/>
                    <param name="aParam" type="int"/>
                </params>
                <declaration name="tmpCount" type="int" line="344"/>
            </method>
            <method name="modifyDiagonal" type="void" line="347">
                <params>
                    <param name="row" type="long"/>
                    <param name="column" type="long"/>
                    <param name="function" type="UnaryFunction<N>"/>
                </params>
                <declaration name="tmpCount" type="long" line="348"/>
                <declaration name="tmpFirst" type="int" line="349"/>
                <declaration name="tmpLimit" type="int" line="350"/>
                <declaration name="tmpStep" type="int" line="351"/>
            </method>
            <method name="modifyMatching" type="void" line="354">
                <params>
                    <param name="aLeftArg" type="Array2D<N>"/>
                    <param name="aFunc" type="BinaryFunction<N>"/>
                </params>
            </method>
            <method name="modifyMatching" type="void" line="357">
                <params>
                    <param name="aFunc" type="BinaryFunction<N>"/>
                    <param name="aRightArg" type="Array2D<N>"/>
                </params>
            </method>
            <method name="modifyRange" type="void" line="360">
                <params>
                    <param name="first" type="long"/>
                    <param name="limit" type="long"/>
                    <param name="function" type="UnaryFunction<N>"/>
                </params>
            </method>
            <method name="modifyRow" type="void" line="363">
                <params>
                    <param name="row" type="int"/>
                    <param name="column" type="int"/>
                    <param name="aFunc" type="BinaryFunction<N>"/>
                    <param name="value" type="N"/>
                </params>
            </method>
            <method name="modifyRow" type="void" line="366">
                <params>
                    <param name="row" type="int"/>
                    <param name="column" type="int"/>
                    <param name="value" type="N"/>
                    <param name="aFunc" type="BinaryFunction<N>"/>
                </params>
            </method>
            <method name="modifyRow" type="void" line="369">
                <params>
                    <param name="row" type="int"/>
                    <param name="column" type="int"/>
                    <param name="aFunc" type="ParameterFunction<N>"/>
                    <param name="aParam" type="int"/>
                </params>
            </method>
            <method name="modifyRow" type="void" line="372">
                <params>
                    <param name="row" type="long"/>
                    <param name="column" type="long"/>
                    <param name="function" type="UnaryFunction<N>"/>
                </params>
                <declaration name="tmpFirst" type="int" line="373"/>
                <declaration name="tmpLimit" type="int" line="374"/>
            </method>
            <method name="rows" type="Iterable<Access1D<N>>" line="377"/>
            <method name="set" type="N" line="380">
                <params>
                    <param name="index" type="int"/>
                    <param name="value" type="Number"/>
                </params>
            </method>
            <method name="set" type="void" line="383">
                <params>
                    <param name="index" type="long"/>
                    <param name="value" type="double"/>
                </params>
            </method>
            <method name="set" type="void" line="386">
                <params>
                    <param name="row" type="long"/>
                    <param name="column" type="long"/>
                    <param name="value" type="double"/>
                </params>
            </method>
            <method name="set" type="void" line="389">
                <params>
                    <param name="row" type="long"/>
                    <param name="column" type="long"/>
                    <param name="value" type="Number"/>
                </params>
            </method>
            <method name="set" type="void" line="392">
                <params>
                    <param name="index" type="long"/>
                    <param name="value" type="Number"/>
                </params>
            </method>
            <method name="size" type="int" line="395"/>
            <method name="sliceColumn" type="Array1D<N>" line="398">
                <params>
                    <param name="row" type="int"/>
                    <param name="column" type="int"/>
                </params>
            </method>
            <method name="sliceDiagonal" type="Array1D<N>" line="401">
                <params>
                    <param name="row" type="int"/>
                    <param name="column" type="int"/>
                </params>
                <declaration name="tmpCount" type="int" line="402"/>
            </method>
            <method name="sliceRow" type="Array1D<N>" line="405">
                <params>
                    <param name="row" type="int"/>
                    <param name="column" type="int"/>
                </params>
            </method>
            <javadoc line="408">
                @return An array of arrays of doubles                
            </javadoc>
            <method name="toRawCopy" type="double[][]" line="411"/>
            <method name="toScalar" type="Scalar<N>" line="414">
                <params>
                    <param name="row" type="int"/>
                    <param name="column" type="int"/>
                </params>
            </method>
            <method name="toString" type="String" line="417"/>
            <method name="visitAll" type="void" line="420">
                <params>
                    <param name="visitor" type="VoidFunction<N>"/>
                </params>
            </method>
            <method name="visitColumn" type="void" line="423">
                <params>
                    <param name="row" type="int"/>
                    <param name="column" type="int"/>
                    <param name="visitor" type="VoidFunction<N>"/>
                </params>
            </method>
            <method name="visitColumn" type="void" line="426">
                <params>
                    <param name="row" type="long"/>
                    <param name="column" type="long"/>
                    <param name="visitor" type="VoidFunction<N>"/>
                </params>
                <declaration name="tmpFirst" type="int" line="427"/>
                <declaration name="tmpLimit" type="int" line="428"/>
            </method>
            <method name="visitDiagonal" type="void" line="431">
                <params>
                    <param name="row" type="int"/>
                    <param name="column" type="int"/>
                    <param name="visitor" type="VoidFunction<N>"/>
                </params>
                <declaration name="tmpCount" type="int" line="432"/>
            </method>
            <method name="visitDiagonal" type="void" line="435">
                <params>
                    <param name="row" type="long"/>
                    <param name="column" type="long"/>
                    <param name="visitor" type="VoidFunction<N>"/>
                </params>
                <declaration name="tmpCount" type="long" line="436"/>
                <declaration name="tmpFirst" type="int" line="437"/>
                <declaration name="tmpLimit" type="int" line="438"/>
            </method>
            <method name="visitRange" type="void" line="441">
                <params>
                    <param name="first" type="long"/>
                    <param name="limit" type="long"/>
                    <param name="visitor" type="VoidFunction<N>"/>
                </params>
            </method>
            <method name="visitRow" type="void" line="444">
                <params>
                    <param name="row" type="int"/>
                    <param name="column" type="int"/>
                    <param name="visitor" type="VoidFunction<N>"/>
                </params>
            </method>
            <method name="visitRow" type="void" line="447">
                <params>
                    <param name="row" type="long"/>
                    <param name="column" type="long"/>
                    <param name="visitor" type="VoidFunction<N>"/>
                </params>
                <declaration name="tmpFirst" type="int" line="448"/>
                <declaration name="tmpLimit" type="int" line="449"/>
            </method>
            <method name="getDelegate" type="BasicArray<N>" line="452"/>
        </class>
    </source>