<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.ojalgo.array">
        <import package="org.ojalgo.constant.PrimitiveMath"/>
        <import package="java.lang.reflect.Field"/>
        <import package="org.ojalgo.access.Access1D"/>
        <import package="org.ojalgo.access.AccessUtils"/>
        <import package="org.ojalgo.constant.PrimitiveMath"/>
        <import package="org.ojalgo.function.BinaryFunction"/>
        <import package="org.ojalgo.function.UnaryFunction"/>
        <import package="org.ojalgo.function.VoidFunction"/>
        <import package="org.ojalgo.scalar.PrimitiveScalar"/>
        <import package="org.ojalgo.scalar.Scalar"/>
        <import package="org.ojalgo.type.TypeUtils"/>
        <import package="sun.misc.Unsafe"/>
        <class name="OffHeapArray" line="40">
            <extends class="BasicArray">
                <type_params>
                    <type_param name="Double"/>
                </type_params>
            </extends>
            <javadoc line="40">
                Off heap memory array.                
                <author>
                    apete                    
                </author>
            </javadoc>
            <declaration name="FACTORY" type="ArrayFactory&amp;lt;Double&amp;gt;" line="47"/>
            <anonymous_class line="47">
                <method name="makeStructuredZero" type="BasicArray&lt;Double&gt;" line="50">
                    <params>
                        <param name="structure" type="long"/>
                    </params>
                </method>
                <method name="makeToBeFilled" type="BasicArray&lt;Double&gt;" line="55">
                    <params>
                        <param name="structure" type="long"/>
                    </params>
                </method>
            </anonymous_class>
            <declaration name="UNSAFE" type="Unsafe" line="61"/>
            <scope line="63">
                <declaration name="tmpUnsafe" type="Unsafe" line="65"/>
                <scope line="67">
                    <declaration name="tmpField" type="Field" line="68"/>
                </scope>
                <scope line="71"/>
                <scope line="73"/>
            </scope>
            <method name="make" type="OffHeapArray" line="78">
                <params>
                    <param name="count" type="long"/>
                </params>
            </method>
            <method name="makeSegmented" type="SegmentedArray&lt;Double&gt;" line="82">
                <params>
                    <param name="count" type="long"/>
                </params>
            </method>
            <declaration name="data" type="long" line="86"/>
            <declaration name="myCount" type="long" line="88"/>
            <method name="OffHeapArray" type="constructor" line="90">
                <params>
                    <param name="count" type="long"/>
                </params>
            </method>
            <method name="count" type="long" line="101"/>
            <method name="doubleValue" type="double" line="105">
                <params>
                    <param name="index" type="long"/>
                </params>
            </method>
            <method name="fillAll" type="void" line="109">
                <params>
                    <param name="value" type="Double"/>
                </params>
            </method>
            <method name="fillRange" type="void" line="113">
                <params>
                    <param name="first" type="long"/>
                    <param name="limit" type="long"/>
                    <param name="value" type="Double"/>
                </params>
            </method>
            <method name="get" type="Double" line="117">
                <params>
                    <param name="index" type="long"/>
                </params>
            </method>
            <method name="isAbsolute" type="boolean" line="121">
                <params>
                    <param name="index" type="long"/>
                </params>
            </method>
            <method name="isInfinite" type="boolean" line="125">
                <params>
                    <param name="index" type="long"/>
                </params>
            </method>
            <method name="isNaN" type="boolean" line="129">
                <params>
                    <param name="index" type="long"/>
                </params>
            </method>
            <method name="isPositive" type="boolean" line="133">
                <params>
                    <param name="index" type="long"/>
                </params>
            </method>
            <method name="isReal" type="boolean" line="137">
                <params>
                    <param name="index" type="long"/>
                </params>
            </method>
            <method name="isZero" type="boolean" line="141">
                <params>
                    <param name="index" type="long"/>
                </params>
            </method>
            <method name="set" type="void" line="145">
                <params>
                    <param name="index" type="long"/>
                    <param name="value" type="double"/>
                </params>
            </method>
            <method name="set" type="void" line="149">
                <params>
                    <param name="index" type="long"/>
                    <param name="value" type="Number"/>
                </params>
            </method>
            <method name="address" type="long" line="153">
                <params>
                    <param name="index" type="long"/>
                </params>
            </method>
            <method name="increment" type="long" line="157">
                <params>
                    <param name="step" type="long"/>
                </params>
            </method>
            <method name="exchange" type="void" line="162">
                <params>
                    <param name="firstA" type="long"/>
                    <param name="firstB" type="long"/>
                    <param name="step" type="long"/>
                    <param name="count" type="long"/>
                </params>
                <declaration name="tmpIndexA" type="long" line="164"/>
                <declaration name="tmpIndexB" type="long" line="165"/>
                <declaration name="tmpVal" type="double" line="167"/>
                <scope line="169"/>
            </method>
            <method name="fill" type="void" line="181">
                <params>
                    <param name="first" type="long"/>
                    <param name="limit" type="long"/>
                    <param name="step" type="long"/>
                    <param name="value" type="Double"/>
                </params>
                <declaration name="tmpFirst" type="long" line="182"/>
                <declaration name="tmpLimit" type="long" line="183"/>
                <declaration name="tmpStep" type="long" line="184"/>
                <declaration name="tmpValue" type="double" line="185"/>
                <scope line="186"/>
            </method>
            <method name="finalize" type="void" line="192"/>
            <method name="indexOfLargest" type="long" line="197">
                <params>
                    <param name="first" type="long"/>
                    <param name="limit" type="long"/>
                    <param name="step" type="long"/>
                </params>
                <declaration name="retVal" type="long" line="199"/>
                <declaration name="tmpLargest" type="double" line="200"/>
                <declaration name="tmpValue" type="double" line="201"/>
                <scope line="203">
                    <scope line="205"/>
                </scope>
            </method>
            <method name="isZeros" type="boolean" line="215">
                <params>
                    <param name="first" type="long"/>
                    <param name="limit" type="long"/>
                    <param name="step" type="long"/>
                </params>
                <declaration name="retVal" type="boolean" line="217"/>
                <scope line="219"/>
            </method>
            <method name="modify" type="void" line="227">
                <params>
                    <param name="first" type="long"/>
                    <param name="limit" type="long"/>
                    <param name="step" type="long"/>
                    <param name="left" type="Access1D&lt;Double&gt;"/>
                    <param name="function" type="BinaryFunction&lt;Double&gt;"/>
                </params>
                <declaration name="tmpAddress" type="long" line="228"/>
                <scope line="229"/>
            </method>
            <method name="modify" type="void" line="236">
                <params>
                    <param name="first" type="long"/>
                    <param name="limit" type="long"/>
                    <param name="step" type="long"/>
                    <param name="function" type="BinaryFunction&lt;Double&gt;"/>
                    <param name="right" type="Access1D&lt;Double&gt;"/>
                </params>
                <declaration name="tmpAddress" type="long" line="237"/>
                <scope line="238"/>
            </method>
            <method name="modify" type="void" line="245">
                <params>
                    <param name="first" type="long"/>
                    <param name="limit" type="long"/>
                    <param name="step" type="long"/>
                    <param name="function" type="UnaryFunction&lt;Double&gt;"/>
                </params>
                <declaration name="tmpFirst" type="long" line="246"/>
                <declaration name="tmpLimit" type="long" line="247"/>
                <declaration name="tmpStep" type="long" line="248"/>
                <scope line="249"/>
            </method>
            <method name="toScalar" type="Scalar&lt;Double&gt;" line="255">
                <params>
                    <param name="index" type="long"/>
                </params>
            </method>
            <method name="visit" type="void" line="260">
                <params>
                    <param name="first" type="long"/>
                    <param name="limit" type="long"/>
                    <param name="step" type="long"/>
                    <param name="visitor" type="VoidFunction&lt;Double&gt;"/>
                </params>
                <declaration name="tmpFirst" type="long" line="261"/>
                <declaration name="tmpLimit" type="long" line="262"/>
                <declaration name="tmpStep" type="long" line="263"/>
                <scope line="264"/>
            </method>
            <method name="isPrimitive" type="boolean" line="270"/>
        </class>
    </source>