<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.ojalgo.array">
        <import package="java.io.Serializable"/>
        <import package="java.math.BigDecimal"/>
        <import package="java.util.Arrays"/>
        <import package="java.util.Iterator"/>
        <import package="org.ojalgo.access.AccessAnyD"/>
        <import package="org.ojalgo.access.AccessUtils"/>
        <import package="org.ojalgo.access.Iterator1D"/>
        <import package="org.ojalgo.array.BasicArray.BasicFactory"/>
        <import package="org.ojalgo.function.BinaryFunction"/>
        <import package="org.ojalgo.function.UnaryFunction"/>
        <import package="org.ojalgo.function.VoidFunction"/>
        <import package="org.ojalgo.random.RandomNumber"/>
        <import package="org.ojalgo.scalar.ComplexNumber"/>
        <import package="org.ojalgo.scalar.RationalNumber"/>
        <import package="org.ojalgo.scalar.Scalar"/>
        <class name="ArrayAnyD" line="41">
            <type_params>
                <type_param name="N"/>
            </type_params>
            <implements interface="AccessAnyD">
                <type_params>
                    <type_param name="N"/>
                </type_params>
            </implements>
            <implements interface="AccessAnyD.Elements"/>
            <implements interface="AccessAnyD.Fillable">
                <type_params>
                    <type_param name="N"/>
                </type_params>
            </implements>
            <implements interface="AccessAnyD.Modifiable">
                <type_params>
                    <type_param name="N"/>
                </type_params>
            </implements>
            <implements interface="AccessAnyD.Visitable">
                <type_params>
                    <type_param name="N"/>
                </type_params>
            </implements>
            <implements interface="Serializable"/>
            <javadoc line="41">
                ArrayAnyD                
                <author>
                    apete                    
                </author>
            </javadoc>
            <class name="Factory" line="49">
                <type_params>
                    <type_param name="N"/>
                </type_params>
                <implements interface="AccessAnyD.Factory">
                    <type_params>
                        <type_param name="ArrayAnyD&lt;N&gt;"/>
                    </type_params>
                </implements>
                <method name="copy" type="ArrayAnyD&lt;N&gt;" line="51">
                    <params>
                        <param name="source" type="AccessAnyD&lt;?&gt;"/>
                    </params>
                    <declaration name="tmpStructure" type="long[]" line="53"/>
                    <declaration name="tmpDelegate" type="BasicArray&amp;lt;N&amp;gt;" line="55"/>
                    <declaration name="tmpCount" type="long" line="57"/>
                    <scope line="58"/>
                </method>
                <method name="makeRandom" type="ArrayAnyD&lt;N&gt;" line="65">
                    <params>
                        <param name="structure" type="long[]"/>
                        <param name="distribution" type="RandomNumber"/>
                    </params>
                    <declaration name="tmpDelegate" type="BasicArray&amp;lt;N&amp;gt;" line="67"/>
                    <declaration name="tmpCount" type="long" line="69"/>
                    <scope line="70"/>
                </method>
                <method name="makeZero" type="ArrayAnyD&lt;N&gt;" line="77">
                    <params>
                        <param name="structure" type="long"/>
                    </params>
                </method>
                <method name="delegate" type="BasicArray.BasicFactory&lt;N&gt;" line="81"/>
            </class>
            <declaration name="BIG" type="Factory&amp;lt;BigDecimal&amp;gt;" line="85"/>
            <anonymous_class line="85">
                <method name="delegate" type="BasicFactory&lt;BigDecimal&gt;" line="88"/>
            </anonymous_class>
            <declaration name="COMPLEX" type="Factory&amp;lt;ComplexNumber&amp;gt;" line="94"/>
            <anonymous_class line="94">
                <method name="delegate" type="BasicFactory&lt;ComplexNumber&gt;" line="97"/>
            </anonymous_class>
            <declaration name="PRIMITIVE" type="Factory&amp;lt;Double&amp;gt;" line="103"/>
            <anonymous_class line="103">
                <method name="copy" type="ArrayAnyD&lt;Double&gt;" line="106">
                    <params>
                        <param name="source" type="AccessAnyD&lt;?&gt;"/>
                    </params>
                    <declaration name="tmpStructure" type="long[]" line="108"/>
                    <declaration name="tmpDelegate" type="BasicArray&amp;lt;Double&amp;gt;" line="110"/>
                    <declaration name="tmpCount" type="long" line="112"/>
                    <scope line="113"/>
                </method>
                <method name="delegate" type="BasicFactory&lt;Double&gt;" line="121"/>
            </anonymous_class>
            <declaration name="RATIONAL" type="Factory&amp;lt;RationalNumber&amp;gt;" line="127"/>
            <anonymous_class line="127">
                <method name="delegate" type="BasicFactory&lt;RationalNumber&gt;" line="130"/>
            </anonymous_class>
            <declaration name="myDelegate" type="BasicArray&amp;lt;N&amp;gt;" line="136"/>
            <declaration name="myStructure" type="long[]" line="137"/>
            <method name="ArrayAnyD" type="constructor" line="140"/>
            <method name="ArrayAnyD" type="constructor" line="144">
                <params>
                    <param name="delegate" type="BasicArray&lt;N&gt;"/>
                    <param name="structure" type="long[]"/>
                </params>
            </method>
            <javadoc line="152">
                Flattens this abitrary dimensional array to a one dimensional array. The (internal/actual) array is not copied,
                  it is just accessed through a different adaptor.                
            </javadoc>
            <method name="asArray1D" type="Array1D&lt;N&gt;" line="156"/>
            <method name="count" type="long" line="160"/>
            <method name="count" type="long" line="164">
                <params>
                    <param name="dimension" type="int"/>
                </params>
            </method>
            <method name="doubleValue" type="double" line="168">
                <params>
                    <param name="index" type="long"/>
                </params>
            </method>
            <method name="doubleValue" type="double" line="172">
                <params>
                    <param name="reference" type="long[]"/>
                </params>
            </method>
            <method name="equals" type="boolean" line="178">
                <params>
                    <param name="obj" type="Object"/>
                </params>
                <scope line="179">
                    <declaration name="tmpObj" type="ArrayAnyD&amp;lt;N&amp;gt;" line="180"/>
                </scope>
                <scope line="182"/>
            </method>
            <method name="fillAll" type="void" line="187">
                <params>
                    <param name="number" type="N"/>
                </params>
            </method>
            <method name="fillRange" type="void" line="191">
                <params>
                    <param name="first" type="long"/>
                    <param name="limit" type="long"/>
                    <param name="value" type="N"/>
                </params>
            </method>
            <method name="fillSet" type="void" line="195">
                <params>
                    <param name="first" type="long[]"/>
                    <param name="dimension" type="int"/>
                    <param name="number" type="N"/>
                </params>
                <declaration name="tmpCount" type="long" line="197"/>
                <declaration name="tmpFirst" type="long" line="199"/>
                <declaration name="tmpStep" type="long" line="200"/>
                <declaration name="tmpLimit" type="long" line="201"/>
            </method>
            <method name="get" type="N" line="206">
                <params>
                    <param name="index" type="long"/>
                </params>
            </method>
            <method name="get" type="N" line="210">
                <params>
                    <param name="reference" type="long[]"/>
                </params>
            </method>
            <method name="hashCode" type="int" line="215"/>
            <method name="isAbsolute" type="boolean" line="219">
                <params>
                    <param name="index" type="long"/>
                </params>
            </method>
            <javadoc line="223">
                @see Scalar#isAbsolute()                
            </javadoc>
            <method name="isAbsolute" type="boolean" line="226">
                <params>
                    <param name="reference" type="long[]"/>
                </params>
            </method>
            <method name="isAllZeros" type="boolean" line="230"/>
            <method name="isInfinite" type="boolean" line="234">
                <params>
                    <param name="index" type="long"/>
                </params>
            </method>
            <method name="isInfinite" type="boolean" line="238">
                <params>
                    <param name="reference" type="long[]"/>
                </params>
            </method>
            <method name="isNaN" type="boolean" line="242">
                <params>
                    <param name="index" type="long"/>
                </params>
            </method>
            <method name="isNaN" type="boolean" line="246">
                <params>
                    <param name="reference" type="long[]"/>
                </params>
            </method>
            <method name="isPositive" type="boolean" line="250">
                <params>
                    <param name="index" type="long"/>
                </params>
            </method>
            <method name="isPositive" type="boolean" line="254">
                <params>
                    <param name="reference" type="long[]"/>
                </params>
            </method>
            <method name="isReal" type="boolean" line="258">
                <params>
                    <param name="index" type="long"/>
                </params>
            </method>
            <javadoc line="262">
                @see Scalar#isReal()                
            </javadoc>
            <method name="isReal" type="boolean" line="265">
                <params>
                    <param name="reference" type="long[]"/>
                </params>
            </method>
            <method name="isZero" type="boolean" line="269">
                <params>
                    <param name="index" type="long"/>
                </params>
            </method>
            <javadoc line="273">
                @see Scalar#isZero()                
            </javadoc>
            <method name="isZero" type="boolean" line="276">
                <params>
                    <param name="reference" type="long[]"/>
                </params>
            </method>
            <method name="isZeros" type="boolean" line="280">
                <params>
                    <param name="first" type="long[]"/>
                    <param name="dimension" type="int"/>
                </params>
                <declaration name="tmpCount" type="long" line="282"/>
                <declaration name="tmpFirst" type="long" line="284"/>
                <declaration name="tmpStep" type="long" line="285"/>
                <declaration name="tmpLimit" type="long" line="286"/>
            </method>
            <method name="iterator" type="Iterator&lt;N&gt;" line="291"/>
            <method name="modifyAll" type="void" line="295">
                <params>
                    <param name="function" type="UnaryFunction&lt;N&gt;"/>
                </params>
            </method>
            <method name="modifyMatching" type="void" line="299">
                <params>
                    <param name="left" type="ArrayAnyD&lt;N&gt;"/>
                    <param name="function" type="BinaryFunction&lt;N&gt;"/>
                </params>
            </method>
            <method name="modifyMatching" type="void" line="303">
                <params>
                    <param name="function" type="BinaryFunction&lt;N&gt;"/>
                    <param name="right" type="ArrayAnyD&lt;N&gt;"/>
                </params>
            </method>
            <method name="modifyRange" type="void" line="307">
                <params>
                    <param name="first" type="long"/>
                    <param name="limit" type="long"/>
                    <param name="function" type="UnaryFunction&lt;N&gt;"/>
                </params>
            </method>
            <method name="modifySet" type="void" line="311">
                <params>
                    <param name="first" type="long[]"/>
                    <param name="dimension" type="int"/>
                    <param name="function" type="UnaryFunction&lt;N&gt;"/>
                </params>
                <declaration name="tmpCount" type="long" line="313"/>
                <declaration name="tmpFirst" type="long" line="315"/>
                <declaration name="tmpStep" type="long" line="316"/>
                <declaration name="tmpLimit" type="long" line="317"/>
            </method>
            <method name="rank" type="int" line="322"/>
            <method name="set" type="void" line="326">
                <params>
                    <param name="index" type="long"/>
                    <param name="value" type="double"/>
                </params>
            </method>
            <method name="set" type="void" line="330">
                <params>
                    <param name="index" type="long"/>
                    <param name="value" type="Number"/>
                </params>
            </method>
            <method name="set" type="void" line="334">
                <params>
                    <param name="reference" type="long[]"/>
                    <param name="value" type="double"/>
                </params>
            </method>
            <method name="set" type="void" line="338">
                <params>
                    <param name="reference" type="long[]"/>
                    <param name="value" type="Number"/>
                </params>
            </method>
            <method name="slice" type="Array1D&lt;N&gt;" line="342">
                <params>
                    <param name="first" type="long[]"/>
                    <param name="dimension" type="int"/>
                </params>
                <declaration name="tmpCount" type="long" line="344"/>
                <declaration name="tmpFirst" type="long" line="346"/>
                <declaration name="tmpStep" type="long" line="347"/>
                <declaration name="tmpLimit" type="long" line="348"/>
            </method>
            <method name="structure" type="long[]" line="353"/>
            <method name="toScalar" type="Scalar&lt;N&gt;" line="357">
                <params>
                    <param name="reference" type="long"/>
                </params>
            </method>
            <method name="toString" type="String" line="362">
                <declaration name="retVal" type="StringBuilder" line="364"/>
                <scope line="368"/>
                <declaration name="tmpLength" type="int" line="374"/>
                <scope line="375"/>
            </method>
            <method name="visitAll" type="void" line="383">
                <params>
                    <param name="visitor" type="VoidFunction&lt;N&gt;"/>
                </params>
            </method>
            <method name="visitRange" type="void" line="387">
                <params>
                    <param name="first" type="long"/>
                    <param name="limit" type="long"/>
                    <param name="visitor" type="VoidFunction&lt;N&gt;"/>
                </params>
            </method>
            <method name="visitSet" type="void" line="391">
                <params>
                    <param name="first" type="long[]"/>
                    <param name="dimension" type="int"/>
                    <param name="visitor" type="VoidFunction&lt;N&gt;"/>
                </params>
                <declaration name="tmpCount" type="long" line="393"/>
                <declaration name="tmpFirst" type="long" line="395"/>
                <declaration name="tmpStep" type="long" line="396"/>
                <declaration name="tmpLimit" type="long" line="397"/>
            </method>
            <method name="getDelegate" type="BasicArray&lt;N&gt;" line="402"/>
        </class>
    </source>