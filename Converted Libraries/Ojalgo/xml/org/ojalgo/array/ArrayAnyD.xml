<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.ojalgo.array">
        <import package="java.io.Serializable"/>
        <import package="java.math.BigDecimal"/>
        <import package="java.util.Arrays"/>
        <import package="java.util.Iterator"/>
        <import package="org.ojalgo.access.AccessAnyD"/>
        <import package="org.ojalgo.access.AccessUtils"/>
        <import package="org.ojalgo.access.Iterator1D"/>
        <import package="org.ojalgo.function.BinaryFunction"/>
        <import package="org.ojalgo.function.ParameterFunction"/>
        <import package="org.ojalgo.function.UnaryFunction"/>
        <import package="org.ojalgo.function.VoidFunction"/>
        <import package="org.ojalgo.random.RandomNumber"/>
        <import package="org.ojalgo.scalar.ComplexNumber"/>
        <import package="org.ojalgo.scalar.RationalNumber"/>
        <import package="org.ojalgo.scalar.Scalar"/>
        <import package="org.ojalgo.type.TypeUtils"/>
        <class name="ArrayAnyD" line="18">
            <type_params>
                <type_param name="N"/>
            </type_params>
            <implements interface="AccessAnyD">
                <type_params>
                    <type_param name="N"/>
                </type_params>
            </implements>
            <implements interface="AccessAnyD.Elements"/>
            <implements interface="AccessAnyD.Fillable">
                <type_params>
                    <type_param name="N"/>
                </type_params>
            </implements>
            <implements interface="AccessAnyD.Modifiable">
                <type_params>
                    <type_param name="N"/>
                </type_params>
            </implements>
            <implements interface="AccessAnyD.Visitable">
                <type_params>
                    <type_param name="N"/>
                </type_params>
            </implements>
            <implements interface="Serializable"/>
            <javadoc line="18">
                ArrayAnyD                
                <author>
                    apete                    
                </author>
            </javadoc>
            <declaration name="BIG" type="Factory&lt;ArrayAnyD&lt;BigDecimal&gt;&gt;" line="23"/>
            <anonymous_class line="23">
                <method name="copy" type="ArrayAnyD<BigDecimal>" line="24">
                    <params>
                        <param name="aSource" type="AccessAnyD<?>"/>
                    </params>
                    <declaration name="tmpSize" type="int" line="25"/>
                    <declaration name="tmpData" type="BigDecimal[]" line="26"/>
                    <declaration name="tmpStructure" type="int[]" line="27"/>
                    <scope line="28"/>
                </method>
                <method name="makeRandom" type="ArrayAnyD<BigDecimal>" line="33">
                    <params>
                        <param name="structure" type="long[]"/>
                        <param name="distribution" type="RandomNumber"/>
                    </params>
                    <declaration name="tmpSize" type="int" line="34"/>
                    <declaration name="tmpData" type="BigDecimal[]" line="35"/>
                    <scope line="36"/>
                </method>
                <method name="makeZero" type="ArrayAnyD<BigDecimal>" line="41">
                    <params>
                        <param name="aStructure" type="long"/>
                    </params>
                    <declaration name="tmpSize" type="int" line="42"/>
                </method>
            </anonymous_class>
            <declaration name="COMPLEX" type="Factory&lt;ArrayAnyD&lt;ComplexNumber&gt;&gt;" line="47"/>
            <anonymous_class line="47">
                <method name="copy" type="ArrayAnyD<ComplexNumber>" line="48">
                    <params>
                        <param name="aSource" type="AccessAnyD<?>"/>
                    </params>
                    <declaration name="tmpSize" type="int" line="49"/>
                    <declaration name="tmpData" type="ComplexNumber[]" line="50"/>
                    <declaration name="tmpStructure" type="int[]" line="51"/>
                    <scope line="52"/>
                </method>
                <method name="makeRandom" type="ArrayAnyD<ComplexNumber>" line="57">
                    <params>
                        <param name="structure" type="long[]"/>
                        <param name="distribution" type="RandomNumber"/>
                    </params>
                    <declaration name="tmpSize" type="int" line="58"/>
                    <declaration name="tmpData" type="ComplexNumber[]" line="59"/>
                    <scope line="60"/>
                </method>
                <method name="makeZero" type="ArrayAnyD<ComplexNumber>" line="65">
                    <params>
                        <param name="aStructure" type="long"/>
                    </params>
                    <declaration name="tmpSize" type="int" line="66"/>
                </method>
            </anonymous_class>
            <declaration name="PRIMITIVE" type="Factory&lt;ArrayAnyD&lt;Double&gt;&gt;" line="71"/>
            <anonymous_class line="71">
                <method name="copy" type="ArrayAnyD<Double>" line="72">
                    <params>
                        <param name="aSource" type="AccessAnyD<?>"/>
                    </params>
                    <declaration name="tmpSize" type="int" line="73"/>
                    <declaration name="tmpData" type="double[]" line="74"/>
                    <declaration name="tmpStructure" type="int[]" line="75"/>
                    <scope line="76"/>
                </method>
                <method name="makeRandom" type="ArrayAnyD<Double>" line="81">
                    <params>
                        <param name="structure" type="long[]"/>
                        <param name="aRndm" type="RandomNumber"/>
                    </params>
                    <declaration name="tmpSize" type="int" line="82"/>
                    <declaration name="tmpData" type="double[]" line="83"/>
                    <scope line="84"/>
                </method>
                <method name="makeZero" type="ArrayAnyD<Double>" line="89">
                    <params>
                        <param name="aStructure" type="long"/>
                    </params>
                    <declaration name="tmpSize" type="int" line="90"/>
                </method>
            </anonymous_class>
            <declaration name="RATIONAL" type="Factory&lt;ArrayAnyD&lt;RationalNumber&gt;&gt;" line="95"/>
            <anonymous_class line="95">
                <method name="copy" type="ArrayAnyD<RationalNumber>" line="96">
                    <params>
                        <param name="aSource" type="AccessAnyD<?>"/>
                    </params>
                    <declaration name="tmpSize" type="int" line="97"/>
                    <declaration name="tmpBase" type="BasicArray&lt;RationalNumber&gt;" line="98"/>
                    <declaration name="tmpStructure" type="int[]" line="100"/>
                </method>
                <method name="makeRandom" type="ArrayAnyD<RationalNumber>" line="103">
                    <params>
                        <param name="structure" type="long[]"/>
                        <param name="distribution" type="RandomNumber"/>
                    </params>
                    <declaration name="tmpSize" type="int" line="104"/>
                    <declaration name="tmpData" type="RationalNumber[]" line="105"/>
                    <scope line="106"/>
                </method>
                <method name="makeZero" type="ArrayAnyD<RationalNumber>" line="111">
                    <params>
                        <param name="aStructure" type="long"/>
                    </params>
                    <declaration name="tmpSize" type="int" line="112"/>
                </method>
            </anonymous_class>
            <declaration name="myDelegate" type="BasicArray&lt;N&gt;" line="117"/>
            <declaration name="myStructure" type="int[]" line="118"/>
            <method name="ArrayAnyD" type="constructor" line="119"/>
            <method name="ArrayAnyD" type="constructor" line="122">
                <params>
                    <param name="aDelegate" type="BasicArray<N>"/>
                    <param name="aStructure" type="int[]"/>
                </params>
            </method>
            <javadoc line="127">
                Flattens this abitrary dimensional array to a one dimensional array. The (internal/actual) array is not copied,
                  it is just accessed through a different adaptor.                
            </javadoc>
            <method name="asArray1D" type="Array1D<N>" line="131"/>
            <method name="count" type="long" line="134"/>
            <method name="count" type="long" line="137">
                <params>
                    <param name="dimension" type="int"/>
                </params>
            </method>
            <method name="doubleValue" type="double" line="140">
                <params>
                    <param name="index" type="long"/>
                </params>
            </method>
            <method name="doubleValue" type="double" line="143">
                <params>
                    <param name="reference" type="long[]"/>
                </params>
            </method>
            <method name="equals" type="boolean" line="146">
                <params>
                    <param name="obj" type="Object"/>
                </params>
                <scope line="147">
                    <declaration name="tmpObj" type="ArrayAnyD&lt;N&gt;" line="148"/>
                </scope>
                <scope line="151"/>
            </method>
            <method name="fillAll" type="void" line="155">
                <params>
                    <param name="aNmbr" type="N"/>
                </params>
            </method>
            <method name="fillRange" type="void" line="158">
                <params>
                    <param name="first" type="long"/>
                    <param name="limit" type="long"/>
                    <param name="value" type="N"/>
                </params>
            </method>
            <method name="fillSet" type="void" line="161">
                <params>
                    <param name="aFirst" type="int[]"/>
                    <param name="aDim" type="int"/>
                    <param name="aNmbr" type="N"/>
                </params>
                <declaration name="tmpCount" type="int" line="162"/>
                <declaration name="tmpFirst" type="int" line="163"/>
                <declaration name="tmpStep" type="int" line="164"/>
                <declaration name="tmpLimit" type="int" line="165"/>
            </method>
            <method name="get" type="N" line="168">
                <params>
                    <param name="index" type="long"/>
                </params>
            </method>
            <method name="get" type="N" line="171">
                <params>
                    <param name="reference" type="long[]"/>
                </params>
            </method>
            <method name="hashCode" type="int" line="174"/>
            <method name="isAbsolute" type="boolean" line="177">
                <params>
                    <param name="index" type="long"/>
                </params>
            </method>
            <javadoc line="180">
                @see Scalar#isAbsolute()                
            </javadoc>
            <method name="isAbsolute" type="boolean" line="183">
                <params>
                    <param name="reference" type="long[]"/>
                </params>
            </method>
            <method name="isAllZeros" type="boolean" line="186"/>
            <method name="isInfinite" type="boolean" line="189">
                <params>
                    <param name="index" type="long"/>
                </params>
            </method>
            <method name="isInfinite" type="boolean" line="192">
                <params>
                    <param name="reference" type="long[]"/>
                </params>
            </method>
            <method name="isNaN" type="boolean" line="195">
                <params>
                    <param name="index" type="long"/>
                </params>
            </method>
            <method name="isNaN" type="boolean" line="198">
                <params>
                    <param name="reference" type="long[]"/>
                </params>
            </method>
            <method name="isPositive" type="boolean" line="201">
                <params>
                    <param name="index" type="long"/>
                </params>
            </method>
            <method name="isPositive" type="boolean" line="204">
                <params>
                    <param name="reference" type="long[]"/>
                </params>
            </method>
            <javadoc line="207">
                @see Scalar#isReal()                
            </javadoc>
            <method name="isReal" type="boolean" line="210">
                <params>
                    <param name="reference" type="int[]"/>
                </params>
            </method>
            <method name="isReal" type="boolean" line="213">
                <params>
                    <param name="index" type="long"/>
                </params>
            </method>
            <method name="isReal" type="boolean" line="216">
                <params>
                    <param name="reference" type="long[]"/>
                </params>
            </method>
            <javadoc line="219">
                @see Scalar#isZero()                
            </javadoc>
            <method name="isZero" type="boolean" line="222">
                <params>
                    <param name="reference" type="int[]"/>
                </params>
            </method>
            <method name="isZero" type="boolean" line="225">
                <params>
                    <param name="index" type="long"/>
                </params>
            </method>
            <method name="isZero" type="boolean" line="228">
                <params>
                    <param name="reference" type="long[]"/>
                </params>
            </method>
            <method name="isZeros" type="boolean" line="231">
                <params>
                    <param name="aFirst" type="int[]"/>
                    <param name="aDim" type="int"/>
                </params>
                <declaration name="tmpCount" type="int" line="232"/>
                <declaration name="tmpFirst" type="int" line="233"/>
                <declaration name="tmpStep" type="int" line="234"/>
                <declaration name="tmpLimit" type="int" line="235"/>
            </method>
            <method name="iterator" type="Iterator<N>" line="238"/>
            <method name="modifyAll" type="void" line="241">
                <params>
                    <param name="aFunc" type="BinaryFunction<N>"/>
                    <param name="aNmbr" type="N"/>
                </params>
            </method>
            <method name="modifyAll" type="void" line="244">
                <params>
                    <param name="aNmbr" type="N"/>
                    <param name="aFunc" type="BinaryFunction<N>"/>
                </params>
            </method>
            <method name="modifyAll" type="void" line="247">
                <params>
                    <param name="aFunc" type="ParameterFunction<N>"/>
                    <param name="aParam" type="int"/>
                </params>
            </method>
            <method name="modifyAll" type="void" line="250">
                <params>
                    <param name="aFunc" type="UnaryFunction<N>"/>
                </params>
            </method>
            <method name="modifyMatching" type="void" line="253">
                <params>
                    <param name="aLeftArg" type="ArrayAnyD<N>"/>
                    <param name="aFunc" type="BinaryFunction<N>"/>
                </params>
            </method>
            <method name="modifyMatching" type="void" line="256">
                <params>
                    <param name="aFunc" type="BinaryFunction<N>"/>
                    <param name="aRightArg" type="ArrayAnyD<N>"/>
                </params>
            </method>
            <method name="modifyRange" type="void" line="259">
                <params>
                    <param name="first" type="long"/>
                    <param name="limit" type="long"/>
                    <param name="function" type="UnaryFunction<N>"/>
                </params>
            </method>
            <method name="modifySet" type="void" line="261">
                <params>
                    <param name="aFirst" type="int[]"/>
                    <param name="aDim" type="int"/>
                    <param name="aFunc" type="BinaryFunction<N>"/>
                    <param name="aNmbr" type="N"/>
                </params>
                <declaration name="tmpCount" type="int" line="262"/>
                <declaration name="tmpFirst" type="int" line="263"/>
                <declaration name="tmpStep" type="int" line="264"/>
                <declaration name="tmpLimit" type="int" line="265"/>
            </method>
            <method name="modifySet" type="void" line="268">
                <params>
                    <param name="aFirst" type="int[]"/>
                    <param name="aDim" type="int"/>
                    <param name="aNmbr" type="N"/>
                    <param name="aFunc" type="BinaryFunction<N>"/>
                </params>
                <declaration name="tmpCount" type="int" line="269"/>
                <declaration name="tmpFirst" type="int" line="270"/>
                <declaration name="tmpStep" type="int" line="271"/>
                <declaration name="tmpLimit" type="int" line="272"/>
            </method>
            <method name="modifySet" type="void" line="275">
                <params>
                    <param name="aFirst" type="int[]"/>
                    <param name="aDim" type="int"/>
                    <param name="aFunc" type="ParameterFunction<N>"/>
                    <param name="aParam" type="int"/>
                </params>
                <declaration name="tmpCount" type="int" line="276"/>
                <declaration name="tmpFirst" type="int" line="277"/>
                <declaration name="tmpStep" type="int" line="278"/>
                <declaration name="tmpLimit" type="int" line="279"/>
            </method>
            <method name="modifySet" type="void" line="282">
                <params>
                    <param name="aFirst" type="int[]"/>
                    <param name="aDim" type="int"/>
                    <param name="aFunc" type="UnaryFunction<N>"/>
                </params>
                <declaration name="tmpCount" type="int" line="283"/>
                <declaration name="tmpFirst" type="int" line="284"/>
                <declaration name="tmpStep" type="int" line="285"/>
                <declaration name="tmpLimit" type="int" line="286"/>
            </method>
            <method name="rank" type="int" line="289"/>
            <method name="set" type="N" line="292">
                <params>
                    <param name="index" type="int"/>
                    <param name="value" type="Number"/>
                </params>
            </method>
            <method name="set" type="void" line="295">
                <params>
                    <param name="index" type="long"/>
                    <param name="value" type="double"/>
                </params>
            </method>
            <method name="set" type="void" line="298">
                <params>
                    <param name="index" type="long"/>
                    <param name="value" type="Number"/>
                </params>
            </method>
            <method name="set" type="void" line="301">
                <params>
                    <param name="reference" type="long[]"/>
                    <param name="value" type="double"/>
                </params>
            </method>
            <method name="set" type="void" line="304">
                <params>
                    <param name="reference" type="long[]"/>
                    <param name="value" type="Number"/>
                </params>
            </method>
            <method name="size" type="int" line="307"/>
            <method name="size" type="int" line="310">
                <params>
                    <param name="aDim" type="int"/>
                </params>
            </method>
            <method name="slice" type="Array1D<N>" line="313">
                <params>
                    <param name="aFirst" type="int[]"/>
                    <param name="aDim" type="int"/>
                </params>
                <declaration name="tmpCount" type="int" line="314"/>
                <declaration name="tmpFirst" type="int" line="315"/>
                <declaration name="tmpStep" type="int" line="316"/>
                <declaration name="tmpLimit" type="int" line="317"/>
            </method>
            <method name="structure" type="int[]" line="320"/>
            <method name="toScalar" type="Scalar<N>" line="323">
                <params>
                    <param name="reference" type="int"/>
                </params>
            </method>
            <method name="toString" type="String" line="326">
                <declaration name="retVal" type="StringBuilder" line="327"/>
                <scope line="330"/>
                <declaration name="tmpLength" type="int" line="335"/>
                <scope line="336"/>
            </method>
            <method name="visitAll" type="void" line="342">
                <params>
                    <param name="visitor" type="VoidFunction<N>"/>
                </params>
            </method>
            <method name="visitRange" type="void" line="345">
                <params>
                    <param name="first" type="long"/>
                    <param name="limit" type="long"/>
                    <param name="visitor" type="VoidFunction<N>"/>
                </params>
            </method>
            <method name="visitSet" type="void" line="347">
                <params>
                    <param name="aFirst" type="int[]"/>
                    <param name="aDim" type="int"/>
                    <param name="aVisitor" type="VoidFunction<N>"/>
                </params>
                <declaration name="tmpCount" type="int" line="348"/>
                <declaration name="tmpFirst" type="int" line="349"/>
                <declaration name="tmpStep" type="int" line="350"/>
                <declaration name="tmpLimit" type="int" line="351"/>
            </method>
            <method name="getDelegate" type="BasicArray<N>" line="354"/>
        </class>
    </source>