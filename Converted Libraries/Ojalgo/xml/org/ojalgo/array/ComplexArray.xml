<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.ojalgo.array">
        <import package="org.ojalgo.constant.PrimitiveMath"/>
        <import package="java.util.Arrays"/>
        <import package="org.ojalgo.access.Access1D"/>
        <import package="org.ojalgo.function.BinaryFunction"/>
        <import package="org.ojalgo.function.ParameterFunction"/>
        <import package="org.ojalgo.function.UnaryFunction"/>
        <import package="org.ojalgo.function.VoidFunction"/>
        <import package="org.ojalgo.scalar.ComplexNumber"/>
        <import package="org.ojalgo.type.TypeUtils"/>
        <class name="ComplexArray" line="36">
            <extends class="BasicArray">
                <type_params>
                    <type_param name="ComplexNumber"/>
                </type_params>
            </extends>
            <javadoc line="36">
                A one- and/or arbitrary-dimensional array of {@linkplain org.ojalgo.scalar.ComplexNumber}.                
                <see>
                    PrimitiveArray                    
                </see>
                <author>
                    apete                    
                </author>
            </javadoc>
            <method name="exchange" type="void" line="44">
                <params>
                    <param name="aData" type="ComplexNumber[]"/>
                    <param name="aFirstA" type="int"/>
                    <param name="aFirstB" type="int"/>
                    <param name="aStep" type="int"/>
                    <param name="aCount" type="int"/>
                </params>
                <declaration name="tmpIndexA" type="int" line="46"/>
                <declaration name="tmpIndexB" type="int" line="47"/>
                <declaration name="tmpVal" type="ComplexNumber" line="49"/>
                <scope line="51"/>
            </method>
            <method name="fill" type="void" line="62">
                <params>
                    <param name="aData" type="ComplexNumber[]"/>
                    <param name="anArg" type="Access1D<?>"/>
                </params>
                <declaration name="tmpLimit" type="int" line="63"/>
                <scope line="64"/>
            </method>
            <method name="fill" type="void" line="69">
                <params>
                    <param name="aData" type="ComplexNumber[]"/>
                    <param name="aFirst" type="int"/>
                    <param name="aLimit" type="int"/>
                    <param name="aStep" type="int"/>
                    <param name="aNmbr" type="ComplexNumber"/>
                </params>
                <scope line="70"/>
            </method>
            <method name="invoke" type="void" line="76">
                <params>
                    <param name="aData" type="ComplexNumber[]"/>
                    <param name="aFirst" type="int"/>
                    <param name="aLimit" type="int"/>
                    <param name="aStep" type="int"/>
                    <param name="aLeftArg" type="Access1D<ComplexNumber>"/>
                    <param name="aFunc" type="BinaryFunction<ComplexNumber>"/>
                    <param name="aRightArg" type="Access1D<ComplexNumber>"/>
                </params>
                <scope line="77"/>
            </method>
            <method name="invoke" type="void" line="83">
                <params>
                    <param name="aData" type="ComplexNumber[]"/>
                    <param name="aFirst" type="int"/>
                    <param name="aLimit" type="int"/>
                    <param name="aStep" type="int"/>
                    <param name="aLeftArg" type="Access1D<ComplexNumber>"/>
                    <param name="aFunc" type="BinaryFunction<ComplexNumber>"/>
                    <param name="aRightArg" type="ComplexNumber"/>
                </params>
                <scope line="84"/>
            </method>
            <method name="invoke" type="void" line="90">
                <params>
                    <param name="aData" type="ComplexNumber[]"/>
                    <param name="aFirst" type="int"/>
                    <param name="aLimit" type="int"/>
                    <param name="aStep" type="int"/>
                    <param name="anArg" type="Access1D<ComplexNumber>"/>
                    <param name="aFunc" type="ParameterFunction<ComplexNumber>"/>
                    <param name="aParam" type="int"/>
                </params>
                <scope line="91"/>
            </method>
            <method name="invoke" type="void" line="97">
                <params>
                    <param name="aData" type="ComplexNumber[]"/>
                    <param name="aFirst" type="int"/>
                    <param name="aLimit" type="int"/>
                    <param name="aStep" type="int"/>
                    <param name="anArg" type="Access1D<ComplexNumber>"/>
                    <param name="aFunc" type="UnaryFunction<ComplexNumber>"/>
                </params>
                <scope line="98"/>
            </method>
            <method name="invoke" type="void" line="104">
                <params>
                    <param name="aData" type="ComplexNumber[]"/>
                    <param name="aFirst" type="int"/>
                    <param name="aLimit" type="int"/>
                    <param name="aStep" type="int"/>
                    <param name="aLeftArg" type="ComplexNumber"/>
                    <param name="aFunc" type="BinaryFunction<ComplexNumber>"/>
                    <param name="aRightArg" type="Access1D<ComplexNumber>"/>
                </params>
                <scope line="105"/>
            </method>
            <method name="invoke" type="void" line="110">
                <params>
                    <param name="aData" type="ComplexNumber[]"/>
                    <param name="aFirst" type="int"/>
                    <param name="aLimit" type="int"/>
                    <param name="aStep" type="int"/>
                    <param name="aVisitor" type="VoidFunction<ComplexNumber>"/>
                </params>
                <scope line="111"/>
            </method>
            <declaration name="myData" type="ComplexNumber[]" line="116"/>
            <method name="ComplexArray" type="constructor" line="118">
                <params>
                    <param name="anArray" type="ComplexNumber[]"/>
                </params>
            </method>
            <method name="ComplexArray" type="constructor" line="125">
                <params>
                    <param name="aLength" type="int"/>
                </params>
            </method>
            <method name="doubleValue" type="double" line="134">
                <params>
                    <param name="index" type="long"/>
                </params>
            </method>
            <method name="equals" type="boolean" line="139">
                <params>
                    <param name="anObj" type="Object"/>
                </params>
                <scope line="140"/>
                <scope line="142"/>
            </method>
            <method name="fillAll" type="void" line="147">
                <params>
                    <param name="aNmbr" type="ComplexNumber"/>
                </params>
            </method>
            <method name="fillRange" type="void" line="151">
                <params>
                    <param name="first" type="long"/>
                    <param name="limit" type="long"/>
                    <param name="value" type="ComplexNumber"/>
                </params>
            </method>
            <method name="get" type="ComplexNumber" line="155">
                <params>
                    <param name="index" type="long"/>
                </params>
            </method>
            <method name="hashCode" type="int" line="160"/>
            <method name="isAbsolute" type="boolean" line="164">
                <params>
                    <param name="index" type="long"/>
                </params>
            </method>
            <method name="isInfinite" type="boolean" line="168">
                <params>
                    <param name="index" type="long"/>
                </params>
            </method>
            <method name="isNaN" type="boolean" line="172">
                <params>
                    <param name="index" type="long"/>
                </params>
            </method>
            <method name="isPositive" type="boolean" line="176">
                <params>
                    <param name="index" type="long"/>
                </params>
            </method>
            <method name="isReal" type="boolean" line="180">
                <params>
                    <param name="index" type="long"/>
                </params>
            </method>
            <method name="isZero" type="boolean" line="184">
                <params>
                    <param name="index" type="long"/>
                </params>
            </method>
            <method name="set" type="ComplexNumber" line="189">
                <params>
                    <param name="index" type="int"/>
                    <param name="aNmbr" type="Number"/>
                </params>
                <declaration name="retVal" type="ComplexNumber" line="190"/>
            </method>
            <method name="set" type="void" line="195">
                <params>
                    <param name="index" type="long"/>
                    <param name="value" type="double"/>
                </params>
            </method>
            <method name="set" type="void" line="199">
                <params>
                    <param name="index" type="long"/>
                    <param name="value" type="Number"/>
                </params>
            </method>
            <method name="copyOfData" type="ComplexNumber[]" line="203"/>
            <method name="data" type="ComplexNumber[]" line="207"/>
            <method name="exchange" type="void" line="212">
                <params>
                    <param name="aFirstA" type="int"/>
                    <param name="aFirstB" type="int"/>
                    <param name="aStep" type="int"/>
                    <param name="aCount" type="int"/>
                </params>
            </method>
            <method name="fill" type="void" line="217">
                <params>
                    <param name="anArg" type="Access1D<?>"/>
                </params>
            </method>
            <method name="fill" type="void" line="223">
                <params>
                    <param name="aFirst" type="int"/>
                    <param name="aLimit" type="int"/>
                    <param name="aLeftArg" type="Access1D<ComplexNumber>"/>
                    <param name="aFunc" type="BinaryFunction<ComplexNumber>"/>
                    <param name="aRightArg" type="Access1D<ComplexNumber>"/>
                </params>
            </method>
            <method name="fill" type="void" line="229">
                <params>
                    <param name="aFirst" type="int"/>
                    <param name="aLimit" type="int"/>
                    <param name="aLeftArg" type="Access1D<ComplexNumber>"/>
                    <param name="aFunc" type="BinaryFunction<ComplexNumber>"/>
                    <param name="aRightArg" type="ComplexNumber"/>
                </params>
            </method>
            <method name="fill" type="void" line="235">
                <params>
                    <param name="aFirst" type="int"/>
                    <param name="aLimit" type="int"/>
                    <param name="aLeftArg" type="ComplexNumber"/>
                    <param name="aFunc" type="BinaryFunction<ComplexNumber>"/>
                    <param name="aRightArg" type="Access1D<ComplexNumber>"/>
                </params>
            </method>
            <method name="fill" type="void" line="240">
                <params>
                    <param name="aFirst" type="int"/>
                    <param name="aLimit" type="int"/>
                    <param name="aStep" type="int"/>
                    <param name="aNmbr" type="ComplexNumber"/>
                </params>
            </method>
            <method name="getIndexOfLargest" type="int" line="245">
                <params>
                    <param name="aFirst" type="int"/>
                    <param name="aLimit" type="int"/>
                    <param name="aStep" type="int"/>
                </params>
                <declaration name="retVal" type="int" line="247"/>
                <declaration name="tmpLargest" type="double" line="248"/>
                <declaration name="tmpValue" type="double" line="249"/>
                <scope line="251">
                    <scope line="253"/>
                </scope>
            </method>
            <method name="isReal" type="boolean" line="263">
                <params>
                    <param name="index" type="int"/>
                </params>
            </method>
            <method name="isZero" type="boolean" line="268">
                <params>
                    <param name="index" type="int"/>
                </params>
            </method>
            <method name="isZeros" type="boolean" line="273">
                <params>
                    <param name="aFirst" type="int"/>
                    <param name="aLimit" type="int"/>
                    <param name="aStep" type="int"/>
                </params>
                <declaration name="retVal" type="boolean" line="275"/>
                <scope line="277"/>
            </method>
            <method name="modify" type="void" line="286">
                <params>
                    <param name="aFirst" type="int"/>
                    <param name="aLimit" type="int"/>
                    <param name="aStep" type="int"/>
                    <param name="aLeftArg" type="Access1D<ComplexNumber>"/>
                    <param name="aFunc" type="BinaryFunction<ComplexNumber>"/>
                </params>
            </method>
            <method name="modify" type="void" line="292">
                <params>
                    <param name="aFirst" type="int"/>
                    <param name="aLimit" type="int"/>
                    <param name="aStep" type="int"/>
                    <param name="aFunc" type="BinaryFunction<ComplexNumber>"/>
                    <param name="aRightArg" type="Access1D<ComplexNumber>"/>
                </params>
            </method>
            <method name="modify" type="void" line="297">
                <params>
                    <param name="aFirst" type="int"/>
                    <param name="aLimit" type="int"/>
                    <param name="aStep" type="int"/>
                    <param name="aFunc" type="BinaryFunction<ComplexNumber>"/>
                    <param name="aRightArg" type="ComplexNumber"/>
                </params>
            </method>
            <method name="modify" type="void" line="302">
                <params>
                    <param name="aFirst" type="int"/>
                    <param name="aLimit" type="int"/>
                    <param name="aStep" type="int"/>
                    <param name="aLeftArg" type="ComplexNumber"/>
                    <param name="aFunc" type="BinaryFunction<ComplexNumber>"/>
                </params>
            </method>
            <method name="modify" type="void" line="307">
                <params>
                    <param name="aFirst" type="int"/>
                    <param name="aLimit" type="int"/>
                    <param name="aStep" type="int"/>
                    <param name="aFunc" type="ParameterFunction<ComplexNumber>"/>
                    <param name="aParam" type="int"/>
                </params>
            </method>
            <method name="modify" type="void" line="312">
                <params>
                    <param name="aFirst" type="int"/>
                    <param name="aLimit" type="int"/>
                    <param name="aStep" type="int"/>
                    <param name="aFunc" type="UnaryFunction<ComplexNumber>"/>
                </params>
            </method>
            <javadoc line="316">
                @see org.ojalgo.array.BasicArray#searchAscending(java.lang.Number)                
            </javadoc>
            <method name="searchAscending" type="int" line="320">
                <params>
                    <param name="aNmbr" type="ComplexNumber"/>
                </params>
            </method>
            <method name="sortAscending" type="void" line="325"/>
            <method name="toScalar" type="ComplexNumber" line="330">
                <params>
                    <param name="index" type="int"/>
                </params>
            </method>
            <method name="visit" type="void" line="335">
                <params>
                    <param name="aFirst" type="int"/>
                    <param name="aLimit" type="int"/>
                    <param name="aStep" type="int"/>
                    <param name="aVisitor" type="VoidFunction<ComplexNumber>"/>
                </params>
            </method>
        </class>
    </source>