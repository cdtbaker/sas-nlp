<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.ojalgo.array">
        <import package="java.io.Serializable"/>
        <import package="java.math.BigDecimal"/>
        <import package="java.util.AbstractList"/>
        <import package="java.util.Arrays"/>
        <import package="java.util.Iterator"/>
        <import package="java.util.List"/>
        <import package="java.util.RandomAccess"/>
        <import package="org.ojalgo.access.Access1D"/>
        <import package="org.ojalgo.access.Iterator1D"/>
        <import package="org.ojalgo.array.BasicArray.BasicFactory"/>
        <import package="org.ojalgo.function.BinaryFunction"/>
        <import package="org.ojalgo.function.UnaryFunction"/>
        <import package="org.ojalgo.function.VoidFunction"/>
        <import package="org.ojalgo.random.RandomNumber"/>
        <import package="org.ojalgo.scalar.ComplexNumber"/>
        <import package="org.ojalgo.scalar.RationalNumber"/>
        <import package="org.ojalgo.scalar.Scalar"/>
        <class name="Array1D" line="43">
            <type_params>
                <type_param name="N"/>
            </type_params>
            <extends class="AbstractList">
                <type_params>
                    <type_param name="N"/>
                </type_params>
            </extends>
            <implements interface="Access1D">
                <type_params>
                    <type_param name="N"/>
                </type_params>
            </implements>
            <implements interface="Access1D.Elements"/>
            <implements interface="Access1D.Fillable">
                <type_params>
                    <type_param name="N"/>
                </type_params>
            </implements>
            <implements interface="Access1D.Modifiable">
                <type_params>
                    <type_param name="N"/>
                </type_params>
            </implements>
            <implements interface="Access1D.Visitable">
                <type_params>
                    <type_param name="N"/>
                </type_params>
            </implements>
            <implements interface="RandomAccess"/>
            <implements interface="Serializable"/>
            <javadoc line="43">
                Array1D                
                <author>
                    apete                    
                </author>
            </javadoc>
            <class name="Factory" line="51">
                <type_params>
                    <type_param name="N"/>
                </type_params>
                <implements interface="Access1D.Factory">
                    <type_params>
                        <type_param name="Array1D&lt;N&gt;"/>
                    </type_params>
                </implements>
                <method name="copy" type="Array1D&lt;N&gt;" line="53">
                    <params>
                        <param name="source" type="Access1D&lt;?&gt;"/>
                    </params>
                    <declaration name="tmpCount" type="long" line="55"/>
                    <declaration name="tmpDelegate" type="BasicArray&amp;lt;N&amp;gt;" line="57"/>
                    <scope line="59"/>
                </method>
                <method name="copy" type="Array1D&lt;N&gt;" line="66">
                    <params>
                        <param name="source" type="double"/>
                    </params>
                    <declaration name="tmpLength" type="int" line="68"/>
                    <declaration name="tmpDelegate" type="BasicArray&amp;lt;N&amp;gt;" line="70"/>
                    <scope line="72"/>
                </method>
                <method name="copy" type="Array1D&lt;N&gt;" line="79">
                    <params>
                        <param name="source" type="List&lt;? extends Number&gt;"/>
                    </params>
                    <declaration name="tmpSize" type="int" line="81"/>
                    <declaration name="tmpDelegate" type="BasicArray&amp;lt;N&amp;gt;" line="83"/>
                    <scope line="85"/>
                </method>
                <method name="copy" type="Array1D&lt;N&gt;" line="92">
                    <params>
                        <param name="source" type="Number"/>
                    </params>
                    <declaration name="tmpLength" type="int" line="94"/>
                    <declaration name="tmpDelegate" type="BasicArray&amp;lt;N&amp;gt;" line="96"/>
                    <scope line="98"/>
                </method>
                <method name="makeRandom" type="Array1D&lt;N&gt;" line="105">
                    <params>
                        <param name="count" type="long"/>
                        <param name="distribution" type="RandomNumber"/>
                    </params>
                    <declaration name="tmpDelegate" type="BasicArray&amp;lt;N&amp;gt;" line="107"/>
                    <scope line="109"/>
                </method>
                <method name="makeZero" type="Array1D&lt;N&gt;" line="116">
                    <params>
                        <param name="count" type="long"/>
                    </params>
                </method>
                <method name="wrap" type="Array1D&lt;N&gt;" line="120">
                    <params>
                        <param name="array" type="BasicArray&lt;N&gt;"/>
                    </params>
                </method>
                <method name="delegate" type="BasicArray.BasicFactory&lt;N&gt;" line="124"/>
            </class>
            <declaration name="BIG" type="Factory&amp;lt;BigDecimal&amp;gt;" line="128"/>
            <anonymous_class line="128">
                <method name="delegate" type="BasicFactory&lt;BigDecimal&gt;" line="131"/>
            </anonymous_class>
            <declaration name="COMPLEX" type="Factory&amp;lt;ComplexNumber&amp;gt;" line="137"/>
            <anonymous_class line="137">
                <method name="delegate" type="BasicFactory&lt;ComplexNumber&gt;" line="140"/>
            </anonymous_class>
            <declaration name="PRIMITIVE" type="Factory&amp;lt;Double&amp;gt;" line="146"/>
            <anonymous_class line="146">
                <method name="copy" type="Array1D&lt;Double&gt;" line="149">
                    <params>
                        <param name="source" type="Access1D&lt;?&gt;"/>
                    </params>
                    <declaration name="tmpCount" type="long" line="151"/>
                    <declaration name="tmpDelegate" type="BasicArray&amp;lt;Double&amp;gt;" line="153"/>
                    <scope line="155"/>
                </method>
                <method name="copy" type="Array1D&lt;Double&gt;" line="163">
                    <params>
                        <param name="source" type="double"/>
                    </params>
                </method>
                <method name="delegate" type="BasicFactory&lt;Double&gt;" line="168"/>
            </anonymous_class>
            <declaration name="RATIONAL" type="Factory&amp;lt;RationalNumber&amp;gt;" line="174"/>
            <anonymous_class line="174">
                <method name="delegate" type="BasicFactory&lt;RationalNumber&gt;" line="177"/>
            </anonymous_class>
            <method name="copyAndSort" type="T[]" line="184">
                <params>
                    <param name="anArray" type="Array1D&lt;T&gt;"/>
                </params>
                <declaration name="tmpLength" type="int" line="186"/>
                <declaration name="retVal" type="T[]" line="187"/>
                <scope line="189"/>
            </method>
            <declaration name="length" type="long" line="198"/>
            <declaration name="myDelegate" type="BasicArray&amp;lt;N&amp;gt;" line="200"/>
            <declaration name="myFirst" type="long" line="202"/>
            <declaration name="myLimit" type="long" line="203"/>
            <declaration name="myStep" type="long" line="204"/>
            <method name="Array1D" type="constructor" line="207"/>
            <method name="Array1D" type="constructor" line="211">
                <params>
                    <param name="delegate" type="BasicArray&lt;N&gt;"/>
                </params>
            </method>
            <method name="Array1D" type="constructor" line="215">
                <params>
                    <param name="delegate" type="BasicArray&lt;N&gt;"/>
                    <param name="first" type="long"/>
                    <param name="limit" type="long"/>
                    <param name="step" type="long"/>
                </params>
            </method>
            <method name="contains" type="boolean" line="229">
                <params>
                    <param name="obj" type="Object"/>
                </params>
            </method>
            <method name="copy" type="Array1D&lt;N&gt;" line="234">
                <declaration name="retVal" type="BasicArray&amp;lt;N&amp;gt;" line="236"/>
                <scope line="238">
                    <scope line="242"/>
                </scope>
                <scope line="248">
                    <scope line="252"/>
                </scope>
                <scope line="258">
                    <scope line="262"/>
                </scope>
                <scope line="268"/>
            </method>
            <javadoc line="274">
                Creates a copy of this containing only the selected elements, in the specified order.                
            </javadoc>
            <method name="copy" type="Array1D&lt;N&gt;" line="278">
                <params>
                    <param name="indices" type="int"/>
                </params>
                <declaration name="retVal" type="BasicArray&amp;lt;N&amp;gt;" line="280"/>
                <declaration name="tmpLength" type="int" line="282"/>
                <scope line="284">
                    <scope line="288"/>
                </scope>
                <scope line="294">
                    <scope line="298"/>
                </scope>
                <scope line="304">
                    <scope line="308"/>
                </scope>
                <scope line="314"/>
            </method>
            <method name="count" type="long" line="320"/>
            <method name="doubleValue" type="double" line="324">
                <params>
                    <param name="index" type="long"/>
                </params>
            </method>
            <method name="fillAll" type="void" line="328">
                <params>
                    <param name="value" type="N"/>
                </params>
            </method>
            <method name="fillRange" type="void" line="332">
                <params>
                    <param name="first" type="long"/>
                    <param name="limit" type="long"/>
                    <param name="value" type="N"/>
                </params>
                <declaration name="tmpFirst" type="long" line="333"/>
                <declaration name="tmpLimit" type="long" line="334"/>
            </method>
            <method name="get" type="N" line="339">
                <params>
                    <param name="index" type="int"/>
                </params>
            </method>
            <method name="get" type="N" line="343">
                <params>
                    <param name="index" type="long"/>
                </params>
            </method>
            <javadoc line="347">
                @deprecated v36 Use {@link #indexOfLargestInRange(long,long)} instead                
            </javadoc>
            <method name="getIndexOfLargestInRange" type="long" line="351">
                <params>
                    <param name="first" type="long"/>
                    <param name="limit" type="long"/>
                </params>
            </method>
            <method name="indexOf" type="int" line="356">
                <params>
                    <param name="obj" type="Object"/>
                </params>
                <declaration name="tmpLength" type="int" line="357"/>
                <scope line="358">
                    <scope line="359">
                        <scope line="360"/>
                    </scope>
                </scope>
                <scope line="364">
                    <scope line="365">
                        <scope line="366"/>
                    </scope>
                </scope>
            </method>
            <method name="indexOfLargest" type="long" line="374"/>
            <method name="indexOfLargestInRange" type="long" line="378">
                <params>
                    <param name="first" type="long"/>
                    <param name="limit" type="long"/>
                </params>
            </method>
            <javadoc line="382">
                @see Scalar#isAbsolute()                
            </javadoc>
            <method name="isAbsolute" type="boolean" line="385">
                <params>
                    <param name="index" type="long"/>
                </params>
            </method>
            <method name="isAllZeros" type="boolean" line="389"/>
            <method name="isEmpty" type="boolean" line="394"/>
            <method name="isInfinite" type="boolean" line="398">
                <params>
                    <param name="index" type="long"/>
                </params>
            </method>
            <method name="isNaN" type="boolean" line="402">
                <params>
                    <param name="index" type="long"/>
                </params>
            </method>
            <javadoc line="406">
                @see Scalar#isPositive()                
            </javadoc>
            <method name="isPositive" type="boolean" line="409">
                <params>
                    <param name="index" type="long"/>
                </params>
            </method>
            <method name="isRangeZeros" type="boolean" line="413">
                <params>
                    <param name="first" type="long"/>
                    <param name="limit" type="long"/>
                </params>
            </method>
            <javadoc line="417">
                @see Scalar#isReal()                
            </javadoc>
            <method name="isReal" type="boolean" line="420">
                <params>
                    <param name="index" type="long"/>
                </params>
            </method>
            <javadoc line="424">
                @see Scalar#isZero()                
            </javadoc>
            <method name="isZero" type="boolean" line="427">
                <params>
                    <param name="index" type="long"/>
                </params>
            </method>
            <method name="iterator" type="Iterator&lt;N&gt;" line="432"/>
            <method name="modifyAll" type="void" line="436">
                <params>
                    <param name="function" type="UnaryFunction&lt;N&gt;"/>
                </params>
            </method>
            <method name="modifyMatching" type="void" line="440">
                <params>
                    <param name="left" type="Access1D&lt;N&gt;"/>
                    <param name="function" type="BinaryFunction&lt;N&gt;"/>
                </params>
                <declaration name="tmpLength" type="long" line="441"/>
                <scope line="442">
                    <scope line="443"/>
                </scope>
                <scope line="446">
                    <scope line="447"/>
                </scope>
            </method>
            <method name="modifyMatching" type="void" line="453">
                <params>
                    <param name="function" type="BinaryFunction&lt;N&gt;"/>
                    <param name="right" type="Access1D&lt;N&gt;"/>
                </params>
                <declaration name="tmpLength" type="long" line="454"/>
                <scope line="455">
                    <scope line="456"/>
                </scope>
                <scope line="459">
                    <scope line="460"/>
                </scope>
            </method>
            <method name="modifyRange" type="void" line="466">
                <params>
                    <param name="first" type="long"/>
                    <param name="limit" type="long"/>
                    <param name="function" type="UnaryFunction&lt;N&gt;"/>
                </params>
                <declaration name="tmpFirst" type="long" line="467"/>
                <declaration name="tmpLimit" type="long" line="468"/>
            </method>
            <javadoc line="472">
                Assumes you have first called {@linkplain #sortAscending()}.                
            </javadoc>
            <method name="searchAscending" type="int" line="475">
                <params>
                    <param name="key" type="N"/>
                </params>
                <scope line="477">
                    <scope line="479">
                        <declaration name="tmpLength" type="int" line="481"/>
                        <declaration name="tmpArray" type="Number[]" line="483"/>
                        <scope line="485"/>
                    </scope>
                    <scope line="491"/>
                </scope>
                <scope line="496"/>
            </method>
            <javadoc line="502">
                Asssumes you have first called {@linkplain #sortDescending()}.                
            </javadoc>
            <method name="searchDescending" type="int" line="505">
                <params>
                    <param name="key" type="N"/>
                </params>
                <scope line="507">
                    <declaration name="tmpLength" type="int" line="509"/>
                    <declaration name="tmpArray" type="Number[]" line="510"/>
                    <scope line="512"/>
                    <declaration name="tmpInd" type="int" line="516"/>
                    <scope line="518"/>
                    <scope line="520"/>
                    <scope line="522"/>
                </scope>
                <scope line="526"/>
            </method>
            <method name="set" type="N" line="533">
                <params>
                    <param name="index" type="int"/>
                    <param name="value" type="Number"/>
                </params>
                <declaration name="tmpIndex" type="long" line="534"/>
                <declaration name="retVal" type="N" line="535"/>
            </method>
            <method name="set" type="void" line="540">
                <params>
                    <param name="index" type="long"/>
                    <param name="value" type="double"/>
                </params>
            </method>
            <method name="set" type="void" line="544">
                <params>
                    <param name="index" type="long"/>
                    <param name="value" type="Number"/>
                </params>
            </method>
            <method name="size" type="int" line="549"/>
            <method name="sortAscending" type="void" line="553">
                <scope line="555">
                    <scope line="557">
                        <declaration name="tmpArray" type="N[]" line="559"/>
                        <declaration name="tmpLength" type="int" line="561"/>
                        <scope line="562"/>
                    </scope>
                    <scope line="566"/>
                </scope>
                <scope line="571"/>
            </method>
            <method name="sortDescending" type="void" line="577">
                <scope line="579">
                    <declaration name="tmpArray" type="N[]" line="581"/>
                    <declaration name="tmpLength" type="int" line="583"/>
                    <scope line="584"/>
                </scope>
                <scope line="588"/>
            </method>
            <method name="subList" type="Array1D&lt;N&gt;" line="595">
                <params>
                    <param name="first" type="int"/>
                    <param name="limit" type="int"/>
                </params>
            </method>
            <method name="toRawCopy" type="double[]" line="599">
                <declaration name="tmpLength" type="int" line="601"/>
                <declaration name="retVal" type="double[]" line="602"/>
                <scope line="604"/>
            </method>
            <method name="toScalar" type="Scalar&lt;N&gt;" line="611">
                <params>
                    <param name="index" type="int"/>
                </params>
            </method>
            <method name="visitAll" type="void" line="615">
                <params>
                    <param name="visitor" type="VoidFunction&lt;N&gt;"/>
                </params>
            </method>
            <method name="visitRange" type="void" line="619">
                <params>
                    <param name="first" type="long"/>
                    <param name="limit" type="long"/>
                    <param name="visitor" type="VoidFunction&lt;N&gt;"/>
                </params>
                <declaration name="tmpFirst" type="long" line="620"/>
                <declaration name="tmpLimit" type="long" line="621"/>
            </method>
            <method name="getDelegate" type="BasicArray&lt;N&gt;" line="625"/>
        </class>
    </source>