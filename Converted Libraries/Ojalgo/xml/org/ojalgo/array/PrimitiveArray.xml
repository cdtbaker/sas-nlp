<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.ojalgo.array">
        <import package="org.ojalgo.constant.PrimitiveMath"/>
        <import package="java.util.Arrays"/>
        <import package="org.ojalgo.access.Access1D"/>
        <import package="org.ojalgo.function.BinaryFunction"/>
        <import package="org.ojalgo.function.BinaryFunction.FixedFirst"/>
        <import package="org.ojalgo.function.BinaryFunction.FixedSecond"/>
        <import package="org.ojalgo.function.ParameterFunction"/>
        <import package="org.ojalgo.function.ParameterFunction.FixedParameter"/>
        <import package="org.ojalgo.function.PrimitiveFunction"/>
        <import package="org.ojalgo.function.UnaryFunction"/>
        <import package="org.ojalgo.function.VoidFunction"/>
        <import package="org.ojalgo.scalar.PrimitiveScalar"/>
        <import package="org.ojalgo.scalar.Scalar"/>
        <import package="org.ojalgo.type.TypeUtils"/>
        <class name="PrimitiveArray" line="16">
            <extends class="BasicArray">
                <type_params>
                    <type_param name="Double"/>
                </type_params>
            </extends>
            <javadoc line="16">
                &lt;p&gt;
                  A one- and/or arbitrary-dimensional array of double.
                  &lt;/p&gt;
                  &lt;p&gt;
                  You cannot instantiate a PrimitiveArray directly. You have to either subclass it and implement instantiation code in
                  that subclass, or use one of the static factory methods in {@linkplain Array1D}, {@linkplain Array2D} or{@linkplain ArrayAnyD}.
                  &lt;/p&gt;                
                <author>
                    apete                    
                </author>
            </javadoc>
            <method name="add" type="void" line="27">
                <params>
                    <param name="aData" type="double[]"/>
                    <param name="aFirst" type="int"/>
                    <param name="aLimit" type="int"/>
                    <param name="aStep" type="int"/>
                    <param name="aLeftArg" type="double"/>
                    <param name="aRightArg" type="double[]"/>
                </params>
                <scope line="28"/>
            </method>
            <method name="add" type="void" line="32">
                <params>
                    <param name="aData" type="double[]"/>
                    <param name="aFirst" type="int"/>
                    <param name="aLimit" type="int"/>
                    <param name="aStep" type="int"/>
                    <param name="aLeftArg" type="double[]"/>
                    <param name="aRightArg" type="double"/>
                </params>
                <scope line="33"/>
            </method>
            <method name="add" type="void" line="37">
                <params>
                    <param name="aData" type="double[]"/>
                    <param name="aFirst" type="int"/>
                    <param name="aLimit" type="int"/>
                    <param name="aStep" type="int"/>
                    <param name="aLeftArg" type="double[]"/>
                    <param name="aRightArg" type="double[]"/>
                </params>
                <scope line="38"/>
            </method>
            <method name="divide" type="void" line="42">
                <params>
                    <param name="aData" type="double[]"/>
                    <param name="aFirst" type="int"/>
                    <param name="aLimit" type="int"/>
                    <param name="aStep" type="int"/>
                    <param name="aLeftArg" type="double"/>
                    <param name="aRightArg" type="double[]"/>
                </params>
                <scope line="43"/>
            </method>
            <method name="divide" type="void" line="47">
                <params>
                    <param name="aData" type="double[]"/>
                    <param name="aFirst" type="int"/>
                    <param name="aLimit" type="int"/>
                    <param name="aStep" type="int"/>
                    <param name="aLeftArg" type="double[]"/>
                    <param name="aRightArg" type="double"/>
                </params>
                <scope line="48"/>
            </method>
            <method name="divide" type="void" line="52">
                <params>
                    <param name="aData" type="double[]"/>
                    <param name="aFirst" type="int"/>
                    <param name="aLimit" type="int"/>
                    <param name="aStep" type="int"/>
                    <param name="aLeftArg" type="double[]"/>
                    <param name="aRightArg" type="double[]"/>
                </params>
                <scope line="53"/>
            </method>
            <method name="multiply" type="void" line="57">
                <params>
                    <param name="aData" type="double[]"/>
                    <param name="aFirst" type="int"/>
                    <param name="aLimit" type="int"/>
                    <param name="aStep" type="int"/>
                    <param name="aLeftArg" type="double"/>
                    <param name="aRightArg" type="double[]"/>
                </params>
                <scope line="58"/>
            </method>
            <method name="multiply" type="void" line="62">
                <params>
                    <param name="aData" type="double[]"/>
                    <param name="aFirst" type="int"/>
                    <param name="aLimit" type="int"/>
                    <param name="aStep" type="int"/>
                    <param name="aLeftArg" type="double[]"/>
                    <param name="aRightArg" type="double"/>
                </params>
                <scope line="63"/>
            </method>
            <method name="multiply" type="void" line="67">
                <params>
                    <param name="aData" type="double[]"/>
                    <param name="aFirst" type="int"/>
                    <param name="aLimit" type="int"/>
                    <param name="aStep" type="int"/>
                    <param name="aLeftArg" type="double[]"/>
                    <param name="aRightArg" type="double[]"/>
                </params>
                <scope line="68"/>
            </method>
            <method name="negate" type="void" line="72">
                <params>
                    <param name="aData" type="double[]"/>
                    <param name="aFirst" type="int"/>
                    <param name="aLimit" type="int"/>
                    <param name="aStep" type="int"/>
                    <param name="anArg" type="double[]"/>
                </params>
                <scope line="73"/>
            </method>
            <method name="subtract" type="void" line="77">
                <params>
                    <param name="aData" type="double[]"/>
                    <param name="aFirst" type="int"/>
                    <param name="aLimit" type="int"/>
                    <param name="aStep" type="int"/>
                    <param name="aLeftArg" type="double"/>
                    <param name="aRightArg" type="double[]"/>
                </params>
                <scope line="78"/>
            </method>
            <method name="subtract" type="void" line="82">
                <params>
                    <param name="aData" type="double[]"/>
                    <param name="aFirst" type="int"/>
                    <param name="aLimit" type="int"/>
                    <param name="aStep" type="int"/>
                    <param name="aLeftArg" type="double[]"/>
                    <param name="aRightArg" type="double"/>
                </params>
                <scope line="83"/>
            </method>
            <method name="subtract" type="void" line="87">
                <params>
                    <param name="aData" type="double[]"/>
                    <param name="aFirst" type="int"/>
                    <param name="aLimit" type="int"/>
                    <param name="aStep" type="int"/>
                    <param name="aLeftArg" type="double[]"/>
                    <param name="aRightArg" type="double[]"/>
                </params>
                <scope line="88"/>
            </method>
            <method name="exchange" type="void" line="92">
                <params>
                    <param name="aData" type="double[]"/>
                    <param name="aFirstA" type="int"/>
                    <param name="aFirstB" type="int"/>
                    <param name="aStep" type="int"/>
                    <param name="aCount" type="int"/>
                </params>
                <declaration name="tmpIndexA" type="int" line="93"/>
                <declaration name="tmpIndexB" type="int" line="94"/>
                <declaration name="tmpVal" type="double" line="95"/>
                <scope line="96"/>
            </method>
            <method name="fill" type="void" line="104">
                <params>
                    <param name="aData" type="double[]"/>
                    <param name="anArg" type="Access1D<?>"/>
                </params>
                <declaration name="tmpLimit" type="int" line="105"/>
                <scope line="106"/>
            </method>
            <method name="fill" type="void" line="110">
                <params>
                    <param name="aData" type="double[]"/>
                    <param name="aFirst" type="int"/>
                    <param name="aLimit" type="int"/>
                    <param name="aStep" type="int"/>
                    <param name="aVal" type="double"/>
                </params>
                <scope line="111"/>
            </method>
            <method name="invoke" type="void" line="115">
                <params>
                    <param name="aData" type="double[]"/>
                    <param name="aFirst" type="int"/>
                    <param name="aLimit" type="int"/>
                    <param name="aStep" type="int"/>
                    <param name="aLeftArg" type="Access1D<Double>"/>
                    <param name="aFunc" type="BinaryFunction<Double>"/>
                    <param name="aRightArg" type="Access1D<Double>"/>
                </params>
                <scope line="116"/>
                <scope line="119">
                    <scope line="120"/>
                </scope>
            </method>
            <method name="invoke" type="void" line="125">
                <params>
                    <param name="aData" type="double[]"/>
                    <param name="aFirst" type="int"/>
                    <param name="aLimit" type="int"/>
                    <param name="aStep" type="int"/>
                    <param name="aLeftArg" type="Access1D<Double>"/>
                    <param name="aFunc" type="BinaryFunction<Double>"/>
                    <param name="aRightArg" type="double"/>
                </params>
                <scope line="126"/>
                <scope line="129">
                    <scope line="130"/>
                </scope>
            </method>
            <method name="invoke" type="void" line="135">
                <params>
                    <param name="aData" type="double[]"/>
                    <param name="aFirst" type="int"/>
                    <param name="aLimit" type="int"/>
                    <param name="aStep" type="int"/>
                    <param name="anArg" type="Access1D<Double>"/>
                    <param name="aFunc" type="ParameterFunction<Double>"/>
                    <param name="aParam" type="int"/>
                </params>
                <scope line="136"/>
                <scope line="139">
                    <scope line="140"/>
                </scope>
            </method>
            <method name="invoke" type="void" line="145">
                <params>
                    <param name="aData" type="double[]"/>
                    <param name="aFirst" type="int"/>
                    <param name="aLimit" type="int"/>
                    <param name="aStep" type="int"/>
                    <param name="anArg" type="Access1D<Double>"/>
                    <param name="aFunc" type="UnaryFunction<Double>"/>
                </params>
                <scope line="146"/>
                <scope line="149">
                    <scope line="150"/>
                </scope>
            </method>
            <method name="invoke" type="void" line="155">
                <params>
                    <param name="aData" type="double[]"/>
                    <param name="aFirst" type="int"/>
                    <param name="aLimit" type="int"/>
                    <param name="aStep" type="int"/>
                    <param name="aLeftArg" type="double"/>
                    <param name="aFunc" type="BinaryFunction<Double>"/>
                    <param name="aRightArg" type="Access1D<Double>"/>
                </params>
                <scope line="156"/>
                <scope line="159">
                    <scope line="160"/>
                </scope>
            </method>
            <method name="invoke" type="void" line="165">
                <params>
                    <param name="aData" type="double[]"/>
                    <param name="aFirst" type="int"/>
                    <param name="aLimit" type="int"/>
                    <param name="aStep" type="int"/>
                    <param name="aVisitor" type="VoidFunction<Double>"/>
                </params>
                <scope line="166"/>
            </method>
            <method name="invoke" type="void" line="170">
                <params>
                    <param name="aData" type="double[]"/>
                    <param name="aFirst" type="int"/>
                    <param name="aLimit" type="int"/>
                    <param name="aStep" type="int"/>
                    <param name="aLeftArg" type="double"/>
                    <param name="aFunc" type="BinaryFunction<Double>"/>
                    <param name="aRightArg" type="double[]"/>
                </params>
                <scope line="171"/>
                <scope line="174"/>
                <scope line="177"/>
                <scope line="180"/>
                <scope line="183">
                    <scope line="184"/>
                </scope>
            </method>
            <method name="invoke" type="void" line="189">
                <params>
                    <param name="aData" type="double[]"/>
                    <param name="aFirst" type="int"/>
                    <param name="aLimit" type="int"/>
                    <param name="aStep" type="int"/>
                    <param name="aLeftArg" type="double[]"/>
                    <param name="aFunc" type="BinaryFunction<Double>"/>
                    <param name="aRightArg" type="double"/>
                </params>
                <scope line="190"/>
                <scope line="193"/>
                <scope line="196"/>
                <scope line="199"/>
                <scope line="202">
                    <scope line="203"/>
                </scope>
            </method>
            <method name="invoke" type="void" line="208">
                <params>
                    <param name="aData" type="double[]"/>
                    <param name="aFirst" type="int"/>
                    <param name="aLimit" type="int"/>
                    <param name="aStep" type="int"/>
                    <param name="aLeftArg" type="double[]"/>
                    <param name="aFunc" type="BinaryFunction<Double>"/>
                    <param name="aRightArg" type="double[]"/>
                </params>
                <scope line="209"/>
                <scope line="212"/>
                <scope line="215"/>
                <scope line="218"/>
                <scope line="221">
                    <scope line="222"/>
                </scope>
            </method>
            <method name="invoke" type="void" line="227">
                <params>
                    <param name="aData" type="double[]"/>
                    <param name="aFirst" type="int"/>
                    <param name="aLimit" type="int"/>
                    <param name="aStep" type="int"/>
                    <param name="anArg" type="double[]"/>
                    <param name="aFunc" type="ParameterFunction<Double>"/>
                    <param name="aParam" type="int"/>
                </params>
                <scope line="228"/>
            </method>
            <method name="invoke" type="void" line="232">
                <params>
                    <param name="aData" type="double[]"/>
                    <param name="aFirst" type="int"/>
                    <param name="aLimit" type="int"/>
                    <param name="aStep" type="int"/>
                    <param name="anArg" type="double[]"/>
                    <param name="aFunc" type="UnaryFunction<Double>"/>
                </params>
                <scope line="233"/>
                <scope line="236">
                    <declaration name="tmpFunc" type="FixedFirst&lt;Double&gt;" line="237"/>
                </scope>
                <scope line="240">
                    <declaration name="tmpFunc" type="FixedSecond&lt;Double&gt;" line="241"/>
                </scope>
                <scope line="244">
                    <declaration name="tmpFunc" type="FixedParameter&lt;Double&gt;" line="245"/>
                </scope>
                <scope line="248">
                    <scope line="249"/>
                </scope>
            </method>
            <declaration name="myData" type="double[]" line="254"/>
            <javadoc line="255">
                Array not copied! No checking!                
            </javadoc>
            <method name="PrimitiveArray" type="constructor" line="258">
                <params>
                    <param name="anArray" type="double[]"/>
                </params>
            </method>
            <method name="PrimitiveArray" type="constructor" line="262">
                <params>
                    <param name="aLength" type="int"/>
                </params>
            </method>
            <method name="doubleValue" type="double" line="266">
                <params>
                    <param name="index" type="long"/>
                </params>
            </method>
            <method name="equals" type="boolean" line="269">
                <params>
                    <param name="anObj" type="Object"/>
                </params>
                <scope line="270"/>
                <scope line="273"/>
            </method>
            <method name="fillAll" type="void" line="277">
                <params>
                    <param name="aNmbr" type="Double"/>
                </params>
            </method>
            <method name="fillRange" type="void" line="280">
                <params>
                    <param name="first" type="long"/>
                    <param name="limit" type="long"/>
                    <param name="value" type="Double"/>
                </params>
            </method>
            <method name="get" type="Double" line="283">
                <params>
                    <param name="index" type="long"/>
                </params>
            </method>
            <method name="hashCode" type="int" line="286"/>
            <method name="isAbsolute" type="boolean" line="289">
                <params>
                    <param name="index" type="long"/>
                </params>
            </method>
            <method name="isInfinite" type="boolean" line="292">
                <params>
                    <param name="index" type="long"/>
                </params>
            </method>
            <method name="isNaN" type="boolean" line="295">
                <params>
                    <param name="index" type="long"/>
                </params>
            </method>
            <method name="isPositive" type="boolean" line="298">
                <params>
                    <param name="index" type="long"/>
                </params>
            </method>
            <method name="isReal" type="boolean" line="301">
                <params>
                    <param name="index" type="long"/>
                </params>
            </method>
            <method name="isZero" type="boolean" line="304">
                <params>
                    <param name="index" type="long"/>
                </params>
            </method>
            <method name="set" type="Double" line="307">
                <params>
                    <param name="index" type="int"/>
                    <param name="aNmbr" type="Number"/>
                </params>
                <declaration name="retVal" type="double" line="308"/>
            </method>
            <method name="set" type="void" line="312">
                <params>
                    <param name="index" type="long"/>
                    <param name="value" type="double"/>
                </params>
            </method>
            <method name="set" type="void" line="315">
                <params>
                    <param name="index" type="long"/>
                    <param name="value" type="Number"/>
                </params>
            </method>
            <method name="copyOfData" type="double[]" line="318"/>
            <method name="data" type="double[]" line="321"/>
            <method name="exchange" type="void" line="324">
                <params>
                    <param name="aFirstA" type="int"/>
                    <param name="aFirstB" type="int"/>
                    <param name="aStep" type="int"/>
                    <param name="aCount" type="int"/>
                </params>
            </method>
            <method name="fill" type="void" line="327">
                <params>
                    <param name="anArg" type="Access1D<?>"/>
                </params>
            </method>
            <method name="fill" type="void" line="330">
                <params>
                    <param name="aFirst" type="int"/>
                    <param name="aLimit" type="int"/>
                    <param name="aLeftArg" type="Access1D<Double>"/>
                    <param name="aFunc" type="BinaryFunction<Double>"/>
                    <param name="aRightArg" type="Access1D<Double>"/>
                </params>
            </method>
            <method name="fill" type="void" line="333">
                <params>
                    <param name="aFirst" type="int"/>
                    <param name="aLimit" type="int"/>
                    <param name="aLeftArg" type="Access1D<Double>"/>
                    <param name="aFunc" type="BinaryFunction<Double>"/>
                    <param name="aRightArg" type="Double"/>
                </params>
            </method>
            <method name="fill" type="void" line="336">
                <params>
                    <param name="aFirst" type="int"/>
                    <param name="aLimit" type="int"/>
                    <param name="aLeftArg" type="Double"/>
                    <param name="aFunc" type="BinaryFunction<Double>"/>
                    <param name="aRightArg" type="Access1D<Double>"/>
                </params>
            </method>
            <method name="fill" type="void" line="339">
                <params>
                    <param name="aFirst" type="int"/>
                    <param name="aLimit" type="int"/>
                    <param name="aStep" type="int"/>
                    <param name="aNmbr" type="Double"/>
                </params>
            </method>
            <method name="getIndexOfLargest" type="int" line="342">
                <params>
                    <param name="aFirst" type="int"/>
                    <param name="aLimit" type="int"/>
                    <param name="aStep" type="int"/>
                </params>
                <declaration name="retVal" type="int" line="343"/>
                <declaration name="tmpLargest" type="double" line="344"/>
                <declaration name="tmpValue" type="double" line="345"/>
                <scope line="346">
                    <scope line="348"/>
                </scope>
            </method>
            <method name="isReal" type="boolean" line="355">
                <params>
                    <param name="index" type="int"/>
                </params>
            </method>
            <method name="isZero" type="boolean" line="358">
                <params>
                    <param name="index" type="int"/>
                </params>
            </method>
            <method name="isZeros" type="boolean" line="361">
                <params>
                    <param name="aFirst" type="int"/>
                    <param name="aLimit" type="int"/>
                    <param name="aStep" type="int"/>
                </params>
                <declaration name="retVal" type="boolean" line="362"/>
                <scope line="363"/>
            </method>
            <method name="modify" type="void" line="368">
                <params>
                    <param name="aFirst" type="int"/>
                    <param name="aLimit" type="int"/>
                    <param name="aStep" type="int"/>
                    <param name="aLeftArg" type="Access1D<Double>"/>
                    <param name="aFunc" type="BinaryFunction<Double>"/>
                </params>
            </method>
            <method name="modify" type="void" line="371">
                <params>
                    <param name="aFirst" type="int"/>
                    <param name="aLimit" type="int"/>
                    <param name="aStep" type="int"/>
                    <param name="aFunc" type="BinaryFunction<Double>"/>
                    <param name="aRightArg" type="Access1D<Double>"/>
                </params>
            </method>
            <method name="modify" type="void" line="374">
                <params>
                    <param name="aFirst" type="int"/>
                    <param name="aLimit" type="int"/>
                    <param name="aStep" type="int"/>
                    <param name="aFunc" type="BinaryFunction<Double>"/>
                    <param name="aRightArg" type="Double"/>
                </params>
            </method>
            <method name="modify" type="void" line="377">
                <params>
                    <param name="aFirst" type="int"/>
                    <param name="aLimit" type="int"/>
                    <param name="aStep" type="int"/>
                    <param name="aLeftArg" type="Double"/>
                    <param name="aFunc" type="BinaryFunction<Double>"/>
                </params>
            </method>
            <method name="modify" type="void" line="380">
                <params>
                    <param name="aFirst" type="int"/>
                    <param name="aLimit" type="int"/>
                    <param name="aStep" type="int"/>
                    <param name="aFunc" type="ParameterFunction<Double>"/>
                    <param name="aParam" type="int"/>
                </params>
            </method>
            <method name="modify" type="void" line="383">
                <params>
                    <param name="aFirst" type="int"/>
                    <param name="aLimit" type="int"/>
                    <param name="aStep" type="int"/>
                    <param name="aFunc" type="UnaryFunction<Double>"/>
                </params>
            </method>
            <method name="searchAscending" type="int" line="386">
                <params>
                    <param name="aNmbr" type="Double"/>
                </params>
            </method>
            <method name="sortAscending" type="void" line="389"/>
            <method name="toScalar" type="Scalar<Double>" line="392">
                <params>
                    <param name="index" type="int"/>
                </params>
            </method>
            <method name="visit" type="void" line="395">
                <params>
                    <param name="aFirst" type="int"/>
                    <param name="aLimit" type="int"/>
                    <param name="aStep" type="int"/>
                    <param name="aVisitor" type="VoidFunction<Double>"/>
                </params>
            </method>
        </class>
    </source>