<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.ejml.alg.block">
        <import package="org.ejml.data.D1Submatrix64F"/>
        <class name="BlockVectorOps" line="3">
            <javadoc line="3">
                &lt;p&gt;
                  Math operations for inner vectors (row and column) inside of block matrices:&lt;br&gt;
                  &lt;br&gt;
                  scale: b&lt;sub&gt;i&lt;/sub&gt; = &amp;alpha;a&lt;sub&gt;i&lt;/sub&gt;&lt;br&gt;
                  div:  &lt;sub&gt;i&lt;/sub&gt; = a&lt;sub&gt;i&lt;/sub&gt;/&amp;alpha;&lt;br&gt;
                  add: c&lt;sub&gt;i&lt;/sub&gt; = &amp;alpha;a&lt;sub&gt;i&lt;/sub&gt; + &amp;beta;B&lt;sub&gt;i&lt;/sub&gt;&lt;br&gt;
                  dot: c = sum a&lt;sub&gt;i&lt;/sub&gt;b&lt;sub&gt;i&lt;/sub&gt;&lt;br&gt;
                  &lt;/p&gt;
                  &lt;p&gt;
                  All submatrices must be block aligned.  All offsets and end indexes are relative to the beginning of each
                  submatrix.
                  &lt;/p&gt;                
                <author>
                    Peter Abeles                    
                </author>
            </javadoc>
            <javadoc line="19">
                &lt;p&gt;
                  Row vector scale:&lt;br&gt;
                  scale: b&lt;sub&gt;i&lt;/sub&gt; = &amp;alpha;a&lt;sub&gt;i&lt;/sub&gt;&lt;br&gt;
                  where &apos;a&apos; and &apos;b&apos; are row vectors within the row block vector A and B.
                  &lt;/p&gt;                
                <param>
                    A submatrix. Not modified.                    
                </param>
                <param>
                    rowA which row in A the vector is contained in.                    
                </param>
                <param>
                    alpha scale factor.                    
                </param>
                <param>
                    B submatrix that the results are written to.  Modified.                    
                </param>
                <param>
                    offset Index at which the vectors start at.                    
                </param>
                <param>
                    end Index at which the vectors end at.                    
                </param>
            </javadoc>
            <method name="scale_row" type="void" line="32">
                <params>
                    <param name="blockLength" type="int"/>
                    <param name="A" type="D1Submatrix64F"/>
                    <param name="rowA" type="int"/>
                    <param name="alpha" type="double"/>
                    <param name="B" type="D1Submatrix64F"/>
                    <param name="rowB" type="int"/>
                    <param name="offset" type="int"/>
                    <param name="end" type="int"/>
                </params>
                <declaration name="dataA" type="double" line="33"/>
                <declaration name="dataB" type="double" line="34"/>
                <declaration name="startI" type="int" line="35"/>
                <declaration name="rowBlockA" type="int" line="37"/>
                <declaration name="rowBlockB" type="int" line="39"/>
                <declaration name="heightA" type="int" line="41"/>
                <declaration name="heightB" type="int" line="42"/>
                <scope line="43">
                    <declaration name="segment" type="int" line="44"/>
                    <declaration name="widthA" type="int" line="45"/>
                    <declaration name="widthB" type="int" line="46"/>
                    <declaration name="indexA" type="int" line="47"/>
                    <declaration name="indexB" type="int" line="48"/>
                    <scope line="49">
                        <scope line="52"/>
                    </scope>
                    <scope line="56">
                        <scope line="57"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="63">
                &lt;p&gt;
                  Row vector divide:&lt;br&gt;
                  div: b&lt;sub&gt;i&lt;/sub&gt; = a&lt;sub&gt;i&lt;/sub&gt;/&amp;alpha;&lt;br&gt;
                  where &apos;a&apos; and &apos;b&apos; are row vectors within the row block vector A and B.
                  &lt;/p&gt;                
                <param>
                    A submatrix. Not modified.                    
                </param>
                <param>
                    rowA which row in A the vector is contained in.                    
                </param>
                <param>
                    alpha scale factor.                    
                </param>
                <param>
                    B submatrix that the results are written to.  Modified.                    
                </param>
                <param>
                    offset Index at which the vectors start at.                    
                </param>
                <param>
                    end Index at which the vectors end at.                    
                </param>
            </javadoc>
            <method name="div_row" type="void" line="76">
                <params>
                    <param name="blockLength" type="int"/>
                    <param name="A" type="D1Submatrix64F"/>
                    <param name="rowA" type="int"/>
                    <param name="alpha" type="double"/>
                    <param name="B" type="D1Submatrix64F"/>
                    <param name="rowB" type="int"/>
                    <param name="offset" type="int"/>
                    <param name="end" type="int"/>
                </params>
                <declaration name="dataA" type="double" line="77"/>
                <declaration name="dataB" type="double" line="78"/>
                <declaration name="startI" type="int" line="79"/>
                <declaration name="rowBlockA" type="int" line="81"/>
                <declaration name="rowBlockB" type="int" line="83"/>
                <declaration name="heightA" type="int" line="85"/>
                <declaration name="heightB" type="int" line="86"/>
                <scope line="87">
                    <declaration name="segment" type="int" line="88"/>
                    <declaration name="widthA" type="int" line="89"/>
                    <declaration name="widthB" type="int" line="90"/>
                    <declaration name="indexA" type="int" line="91"/>
                    <declaration name="indexB" type="int" line="92"/>
                    <scope line="93">
                        <scope line="96"/>
                    </scope>
                    <scope line="100">
                        <scope line="101"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="107">
                &lt;p&gt;
                  Row vector add:&lt;br&gt;
                  add: c&lt;sub&gt;i&lt;/sub&gt; = &amp;alpha;a&lt;sub&gt;i&lt;/sub&gt; + &amp;beta;B&lt;sub&gt;i&lt;/sub&gt;&lt;br&gt;
                  where &apos;a&apos;, &apos;b&apos;, and &apos;c&apos; are row vectors within the row block vectors of A, B, and C respectively.
                  &lt;/p&gt;                
                <param>
                    blockLength Length of each inner matrix block.                    
                </param>
                <param>
                    A submatrix. Not modified.                    
                </param>
                <param>
                    rowA which row in A the vector is contained in.                    
                </param>
                <param>
                    alpha scale factor of A                    
                </param>
                <param>
                    B submatrix. Not modified.                    
                </param>
                <param>
                    rowB which row in B the vector is contained in.                    
                </param>
                <param>
                    beta scale factor of B                    
                </param>
                <param>
                    C submatrix where the results are written to. Modified.                    
                </param>
                <param>
                    rowC which row in C is the vector contained.                    
                </param>
                <param>
                    offset Index at which the vectors start at.                    
                </param>
                <param>
                    end Index at which the vectors end at.                    
                </param>
            </javadoc>
            <method name="add_row" type="void" line="125">
                <params>
                    <param name="blockLength" type="int"/>
                    <param name="A" type="D1Submatrix64F"/>
                    <param name="rowA" type="int"/>
                    <param name="alpha" type="double"/>
                    <param name="B" type="D1Submatrix64F"/>
                    <param name="rowB" type="int"/>
                    <param name="beta" type="double"/>
                    <param name="C" type="D1Submatrix64F"/>
                    <param name="rowC" type="int"/>
                    <param name="offset" type="int"/>
                    <param name="end" type="int"/>
                </params>
                <declaration name="heightA" type="int" line="126"/>
                <declaration name="heightB" type="int" line="127"/>
                <declaration name="heightC" type="int" line="128"/>
                <declaration name="startI" type="int" line="129"/>
                <declaration name="dataA" type="double" line="131"/>
                <declaration name="dataB" type="double" line="132"/>
                <declaration name="dataC" type="double" line="133"/>
                <scope line="134">
                    <declaration name="segment" type="int" line="135"/>
                    <declaration name="widthA" type="int" line="136"/>
                    <declaration name="widthB" type="int" line="137"/>
                    <declaration name="widthC" type="int" line="138"/>
                    <declaration name="indexA" type="int" line="139"/>
                    <declaration name="indexB" type="int" line="140"/>
                    <declaration name="indexC" type="int" line="141"/>
                    <scope line="142">
                        <scope line="146"/>
                    </scope>
                    <scope line="150">
                        <scope line="151"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="157">
                &lt;p&gt;
                  Row vector dot/inner product:&lt;br&gt;
                  dot: c = sum a&lt;sub&gt;i&lt;/sub&gt;b&lt;sub&gt;i&lt;/sub&gt;&lt;br&gt;
                  where &apos;a&apos; and &apos;b&apos; are row vectors within the row block vector A and B, and &apos;c&apos; is a scalar.
                  &lt;/p&gt;                
                <param>
                    A submatrix. Not modified.                    
                </param>
                <param>
                    rowA which row in A the vector is contained in.                    
                </param>
                <param>
                    B submatrix. Not modified.                    
                </param>
                <param>
                    rowB which row in B the vector is contained in.                    
                </param>
                <param>
                    offset Index at which the vectors start at.                    
                </param>
                <param>
                    end Index at which the vectors end at.                    
                </param>
                <return>
                    Results of the dot product.                    
                </return>
            </javadoc>
            <method name="dot_row" type="double" line="171">
                <params>
                    <param name="blockLength" type="int"/>
                    <param name="A" type="D1Submatrix64F"/>
                    <param name="rowA" type="int"/>
                    <param name="B" type="D1Submatrix64F"/>
                    <param name="rowB" type="int"/>
                    <param name="offset" type="int"/>
                    <param name="end" type="int"/>
                </params>
                <declaration name="startI" type="int" line="172"/>
                <declaration name="dataA" type="double" line="174"/>
                <declaration name="dataB" type="double" line="175"/>
                <declaration name="total" type="double" line="176"/>
                <declaration name="rowBlockA" type="int" line="177"/>
                <declaration name="rowBlockB" type="int" line="179"/>
                <declaration name="heightA" type="int" line="181"/>
                <declaration name="heightB" type="int" line="182"/>
                <scope line="184">
                    <declaration name="segment" type="int" line="185"/>
                    <declaration name="widthA" type="int" line="186"/>
                    <declaration name="widthB" type="int" line="187"/>
                    <declaration name="indexA" type="int" line="188"/>
                    <declaration name="indexB" type="int" line="189"/>
                    <scope line="190">
                        <scope line="193"/>
                    </scope>
                    <scope line="197">
                        <scope line="198"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="205">
                &lt;p&gt;
                  vector dot/inner product from one row vector and one column vector:&lt;br&gt;
                  dot: c = sum a&lt;sub&gt;i&lt;/sub&gt;b&lt;sub&gt;i&lt;/sub&gt;&lt;br&gt;
                  where &apos;a&apos; is a row vector &apos;b&apos; is a column vectors within the row block vector A and B, and &apos;c&apos; is a scalar.
                  &lt;/p&gt;                
                <param>
                    A block row vector. Not modified.                    
                </param>
                <param>
                    rowA which row in A the vector is contained in.                    
                </param>
                <param>
                    B block column vector. Not modified.                    
                </param>
                <param>
                    colB which column in B is the vector contained in.                    
                </param>
                <param>
                    offset Index at which the vectors start at.                    
                </param>
                <param>
                    end Index at which the vectors end at.                    
                </param>
                <return>
                    Results of the dot product.                    
                </return>
            </javadoc>
            <method name="dot_row_col" type="double" line="219">
                <params>
                    <param name="blockLength" type="int"/>
                    <param name="A" type="D1Submatrix64F"/>
                    <param name="rowA" type="int"/>
                    <param name="B" type="D1Submatrix64F"/>
                    <param name="colB" type="int"/>
                    <param name="offset" type="int"/>
                    <param name="end" type="int"/>
                </params>
                <declaration name="startI" type="int" line="220"/>
                <declaration name="dataA" type="double" line="222"/>
                <declaration name="dataB" type="double" line="223"/>
                <declaration name="total" type="double" line="224"/>
                <declaration name="rowBlockA" type="int" line="225"/>
                <declaration name="colBlockB" type="int" line="227"/>
                <declaration name="heightA" type="int" line="229"/>
                <declaration name="widthB" type="int" line="230"/>
                <scope line="232">
                    <declaration name="segment" type="int" line="233"/>
                    <declaration name="widthA" type="int" line="234"/>
                    <declaration name="heightB" type="int" line="235"/>
                    <declaration name="indexA" type="int" line="236"/>
                    <declaration name="indexB" type="int" line="237"/>
                    <scope line="238">
                        <scope line="241"/>
                    </scope>
                    <scope line="245">
                        <scope line="246"/>
                    </scope>
                </scope>
            </method>
        </class>
    </source>