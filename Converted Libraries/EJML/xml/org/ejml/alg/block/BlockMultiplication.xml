<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.ejml.alg.block">
        <import package="org.ejml.data.D1Submatrix64F"/>
        <import package="org.ejml.alg.block.BlockInnerMultiplication"/>
        <class name="BlockMultiplication" line="25">
            <javadoc line="25">
                &lt;p&gt;
                  Matrix multiplication for {@link org.ejml.data.BlockMatrix64F}.  All sub-matrices must be
                  block aligned.
                  &lt;/p&gt;                
                <author>
                    Peter Abeles                    
                </author>
            </javadoc>
            <javadoc line="35">
                &lt;p&gt;
                  Performs a matrix multiplication on {@link org.ejml.data.BlockMatrix64F} submatrices.&lt;br&gt;
                  &lt;br&gt;
                  c = a  b &lt;br&gt;
                  &lt;br&gt;
                  &lt;/p&gt;
                  &lt;p&gt;
                  It is assumed that all submatrices start at the beginning of a block and end at the end of a block.
                  &lt;/p&gt;                
                <param>
                    blockLength Size of the blocks in the submatrix.                    
                </param>
                <param>
                    A A submatrix.  Not modified.                    
                </param>
                <param>
                    B A submatrix.  Not modified.                    
                </param>
                <param>
                    C Result of the operation.  Modified,                    
                </param>
            </javadoc>
            <method name="mult" type="void" line="55">
                <params>
                    <param name="blockLength" type="int"/>
                    <param name="A" type="D1Submatrix64F"/>
                    <param name="B" type="D1Submatrix64F"/>
                    <param name="C" type="D1Submatrix64F"/>
                </params>
                <scope line="56">
                    <declaration name="heightA" type="int" line="57"/>
                    <scope line="59">
                        <declaration name="widthB" type="int" line="60"/>
                        <declaration name="indexC" type="int" line="62"/>
                        <scope line="64">
                            <declaration name="widthA" type="int" line="65"/>
                            <declaration name="indexA" type="int" line="67"/>
                            <declaration name="indexB" type="int" line="68"/>
                        </scope>
                    </scope>
                </scope>
            </method>
            <javadoc line="81">
                &lt;p&gt;
                  Performs a matrix multiplication on {@link org.ejml.data.BlockMatrix64F} submatrices.&lt;br&gt;
                  &lt;br&gt;
                  c = c + a  b &lt;br&gt;
                  &lt;br&gt;
                  &lt;/p&gt;
                  &lt;p&gt;
                  It is assumed that all submatrices start at the beginning of a block and end at the end of a block.
                  &lt;/p&gt;                
                <param>
                    blockLength Size of the blocks in the submatrix.                    
                </param>
                <param>
                    A A submatrix.  Not modified.                    
                </param>
                <param>
                    B A submatrix.  Not modified.                    
                </param>
                <param>
                    C Result of the operation.  Modified,                    
                </param>
            </javadoc>
            <method name="multPlus" type="void" line="101">
                <params>
                    <param name="blockLength" type="int"/>
                    <param name="A" type="D1Submatrix64F"/>
                    <param name="B" type="D1Submatrix64F"/>
                    <param name="C" type="D1Submatrix64F"/>
                </params>
                <comment line="102">
                    checkInput( blockLength,A,B,C);                    
                </comment>
                <scope line="104">
                    <declaration name="heightA" type="int" line="105"/>
                    <scope line="107">
                        <declaration name="widthB" type="int" line="108"/>
                        <declaration name="indexC" type="int" line="110"/>
                        <scope line="112">
                            <declaration name="widthA" type="int" line="113"/>
                            <declaration name="indexA" type="int" line="115"/>
                            <declaration name="indexB" type="int" line="116"/>
                        </scope>
                    </scope>
                </scope>
            </method>
            <javadoc line="125">
                &lt;p&gt;
                  Performs a matrix multiplication on {@link org.ejml.data.BlockMatrix64F} submatrices.&lt;br&gt;
                  &lt;br&gt;
                  c = c - a  b &lt;br&gt;
                  &lt;br&gt;
                  &lt;/p&gt;
                  &lt;p&gt;
                  It is assumed that all submatrices start at the beginning of a block and end at the end of a block.
                  &lt;/p&gt;                
                <param>
                    blockLength Size of the blocks in the submatrix.                    
                </param>
                <param>
                    A A submatrix.  Not modified.                    
                </param>
                <param>
                    B A submatrix.  Not modified.                    
                </param>
                <param>
                    C Result of the operation.  Modified,                    
                </param>
            </javadoc>
            <method name="multMinus" type="void" line="145">
                <params>
                    <param name="blockLength" type="int"/>
                    <param name="A" type="D1Submatrix64F"/>
                    <param name="B" type="D1Submatrix64F"/>
                    <param name="C" type="D1Submatrix64F"/>
                </params>
                <scope line="148">
                    <declaration name="heightA" type="int" line="149"/>
                    <scope line="151">
                        <declaration name="widthB" type="int" line="152"/>
                        <declaration name="indexC" type="int" line="154"/>
                        <scope line="156">
                            <declaration name="widthA" type="int" line="157"/>
                            <declaration name="indexA" type="int" line="159"/>
                            <declaration name="indexB" type="int" line="160"/>
                        </scope>
                    </scope>
                </scope>
            </method>
            <method name="checkInput" type="void" line="172">
                <params>
                    <param name="blockLength" type="int"/>
                    <param name="A" type="D1Submatrix64F"/>
                    <param name="B" type="D1Submatrix64F"/>
                    <param name="C" type="D1Submatrix64F"/>
                </params>
                <declaration name="Arow" type="int" line="173"/>
                <declaration name="Acol" type="int" line="173"/>
                <declaration name="Brow" type="int" line="174"/>
                <declaration name="Bcol" type="int" line="174"/>
                <declaration name="Crow" type="int" line="175"/>
                <declaration name="Ccol" type="int" line="175"/>
            </method>
            <javadoc line="194">
                &lt;p&gt;
                  Performs a matrix multiplication with a transpose on {@link org.ejml.data.BlockMatrix64F} submatrices.&lt;br&gt;
                  &lt;br&gt;
                  c = a&lt;sup&gt;T&lt;/sup&gt;  b &lt;br&gt;
                  &lt;br&gt;
                  &lt;/p&gt;
                  &lt;p&gt;
                  It is assumed that all submatrices start at the beginning of a block and end at the end of a block.
                  &lt;/p&gt;                
                <param>
                    blockLength Size of the blocks in the submatrix.                    
                </param>
                <param>
                    A A submatrix.  Not modified.                    
                </param>
                <param>
                    B A submatrix.  Not modified.                    
                </param>
                <param>
                    C Result of the operation.  Modified,                    
                </param>
            </javadoc>
            <method name="multTransA" type="void" line="214">
                <params>
                    <param name="blockLength" type="int"/>
                    <param name="A" type="D1Submatrix64F"/>
                    <param name="B" type="D1Submatrix64F"/>
                    <param name="C" type="D1Submatrix64F"/>
                </params>
                <scope line="215">
                    <declaration name="widthA" type="int" line="216"/>
                    <scope line="218">
                        <declaration name="widthB" type="int" line="219"/>
                        <declaration name="indexC" type="int" line="221"/>
                        <scope line="223">
                            <declaration name="heightA" type="int" line="224"/>
                            <declaration name="indexA" type="int" line="226"/>
                            <declaration name="indexB" type="int" line="227"/>
                        </scope>
                    </scope>
                </scope>
            </method>
            <method name="multPlusTransA" type="void" line="243">
                <params>
                    <param name="blockLength" type="int"/>
                    <param name="A" type="D1Submatrix64F"/>
                    <param name="B" type="D1Submatrix64F"/>
                    <param name="C" type="D1Submatrix64F"/>
                </params>
                <scope line="244">
                    <declaration name="widthA" type="int" line="245"/>
                    <scope line="247">
                        <declaration name="widthB" type="int" line="248"/>
                        <declaration name="indexC" type="int" line="250"/>
                        <scope line="252">
                            <declaration name="heightA" type="int" line="253"/>
                            <declaration name="indexA" type="int" line="255"/>
                            <declaration name="indexB" type="int" line="256"/>
                        </scope>
                    </scope>
                </scope>
            </method>
            <method name="multMinusTransA" type="void" line="268">
                <params>
                    <param name="blockLength" type="int"/>
                    <param name="A" type="D1Submatrix64F"/>
                    <param name="B" type="D1Submatrix64F"/>
                    <param name="C" type="D1Submatrix64F"/>
                </params>
                <scope line="269">
                    <declaration name="widthA" type="int" line="270"/>
                    <scope line="272">
                        <declaration name="widthB" type="int" line="273"/>
                        <declaration name="indexC" type="int" line="275"/>
                        <scope line="277">
                            <declaration name="heightA" type="int" line="278"/>
                            <declaration name="indexA" type="int" line="280"/>
                            <declaration name="indexB" type="int" line="281"/>
                        </scope>
                    </scope>
                </scope>
            </method>
            <javadoc line="291">
                &lt;p&gt;
                  Performs a matrix multiplication with a transpose on {@link org.ejml.data.BlockMatrix64F} submatrices.&lt;br&gt;
                  &lt;br&gt;
                  c = a  b &lt;sup&gt;T&lt;/sup&gt; &lt;br&gt;
                  &lt;br&gt;
                  &lt;/p&gt;
                  &lt;p&gt;
                  It is assumed that all submatrices start at the beginning of a block and end at the end of a block.
                  &lt;/p&gt;                
                <param>
                    blockLength Length of the blocks in the submatrix.                    
                </param>
                <param>
                    A A submatrix.  Not modified.                    
                </param>
                <param>
                    B A submatrix.  Not modified.                    
                </param>
                <param>
                    C Result of the operation.  Modified,                    
                </param>
            </javadoc>
            <method name="multTransB" type="void" line="311">
                <params>
                    <param name="blockLength" type="int"/>
                    <param name="A" type="D1Submatrix64F"/>
                    <param name="B" type="D1Submatrix64F"/>
                    <param name="C" type="D1Submatrix64F"/>
                </params>
                <scope line="312">
                    <declaration name="heightA" type="int" line="313"/>
                    <scope line="315">
                        <declaration name="widthC" type="int" line="316"/>
                        <declaration name="indexC" type="int" line="318"/>
                        <scope line="320">
                            <declaration name="widthA" type="int" line="321"/>
                            <declaration name="indexA" type="int" line="323"/>
                            <declaration name="indexB" type="int" line="324"/>
                        </scope>
                    </scope>
                </scope>
            </method>
        </class>
    </source>