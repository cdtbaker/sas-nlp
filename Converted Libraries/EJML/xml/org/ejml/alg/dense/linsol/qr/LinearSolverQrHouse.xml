<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.ejml.alg.dense.linsol.qr">
        <import package="org.ejml.alg.dense.decomposition.TriangularSolver"/>
        <import package="org.ejml.alg.dense.decomposition.qr.QRDecompositionHouseholder"/>
        <import package="org.ejml.alg.dense.linsol.LinearSolverAbstract"/>
        <import package="org.ejml.data.DenseMatrix64F"/>
        <import package="org.ejml.ops.SpecializedOps"/>
        <class name="LinearSolverQrHouse" line="7">
            <extends class="LinearSolverAbstract"/>
            <javadoc line="7">
                &lt;p&gt;
                  QR decomposition can be used to solve for systems.  However, this is not as computationally efficient
                  as LU decomposition and costs about 3n&lt;sup&gt;2&lt;/sup&gt; flops.
                  &lt;/p&gt;
                  &lt;p&gt;
                  It solve for x by first multiplying b by the transpose of Q then solving for the result.
                  &lt;br&gt;
                  QRx=b&lt;br&gt;
                  Rx=Q^T b&lt;br&gt;
                  &lt;/p&gt;                
                <author>
                    Peter Abeles                    
                </author>
            </javadoc>
            <declaration name="decomposer" type="QRDecompositionHouseholder" line="21"/>
            <declaration name="a" type="double[]" line="22"/>
            <declaration name="maxRows" type="int" line="23"/>
            <declaration name="QR" type="DenseMatrix64F" line="24"/>
            <declaration name="gammas" type="double" line="25"/>
            <javadoc line="26">
                Creates a linear solver that uses QR decomposition.                
            </javadoc>
            <method name="LinearSolverQrHouse" type="constructor" line="29"/>
            <method name="setMaxSize" type="void" line="32">
                <params>
                    <param name="maxRows" type="int"/>
                </params>
            </method>
            <javadoc line="37">
                Performs QR decomposition on A                
                <param>
                    A not modified.                    
                </param>
            </javadoc>
            <method name="setA" type="boolean" line="41">
                <params>
                    <param name="A" type="DenseMatrix64F"/>
                </params>
                <scope line="42"/>
            </method>
            <method name="quality" type="double" line="51"/>
            <javadoc line="54">
                Solves for X using the QR decomposition.                
                <param>
                    B A matrix that is n by m.  Not modified.                    
                </param>
                <param>
                    X An n by m matrix where the solution is writen to.  Modified.                    
                </param>
            </javadoc>
            <method name="solve" type="void" line="59">
                <params>
                    <param name="B" type="DenseMatrix64F"/>
                    <param name="X" type="DenseMatrix64F"/>
                </params>
                <declaration name="BnumCols" type="int" line="62"/>
                <scope line="63">
                    <scope line="64"/>
                    <scope line="67">
                        <declaration name="ub" type="double" line="69"/>
                        <scope line="70"/>
                        <scope line="74"/>
                    </scope>
                    <scope line="79"/>
                </scope>
            </method>
            <method name="modifiesA" type="boolean" line="84"/>
            <method name="modifiesB" type="boolean" line="87"/>
        </class>
    </source>