<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.ejml.alg.dense.linsol">
        <import package="org.ejml.alg.dense.misc.UnrolledInverseFromMinor"/>
        <import package="org.ejml.data.DenseMatrix64F"/>
        <import package="org.ejml.factory.LinearSolver"/>
        <class name="LinearSolverUnrolled" line="5">
            <implements interface="LinearSolver">
                <type_params>
                    <type_param name="DenseMatrix64F"/>
                </type_params>
            </implements>
            <javadoc line="5">
                Solver which uses an unrolled inverse to compute the inverse.  This can only invert matrices and not solve.
                  This is faster than LU inverse but only supports small matrices..                
                <author>
                    Peter Abeles                    
                </author>
            </javadoc>
            <declaration name="A" type="DenseMatrix64F" line="11"/>
            <method name="setA" type="boolean" line="12">
                <params>
                    <param name="A" type="DenseMatrix64F"/>
                </params>
            </method>
            <method name="quality" type="double" line="17"/>
            <method name="solve" type="void" line="20">
                <params>
                    <param name="B" type="DenseMatrix64F"/>
                    <param name="X" type="DenseMatrix64F"/>
                </params>
            </method>
            <method name="invert" type="void" line="23">
                <params>
                    <param name="A_inv" type="DenseMatrix64F"/>
                </params>
            </method>
            <method name="modifiesA" type="boolean" line="27"/>
            <method name="modifiesB" type="boolean" line="30"/>
        </class>
    </source>