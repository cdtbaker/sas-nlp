<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.ejml.alg.dense.linsol.chol">
        <import package="org.ejml.alg.dense.decomposition.TriangularSolver"/>
        <import package="org.ejml.alg.dense.decomposition.chol.CholeskyDecompositionCommon"/>
        <import package="org.ejml.alg.dense.linsol.LinearSolverAbstract"/>
        <import package="org.ejml.data.DenseMatrix64F"/>
        <import package="org.ejml.ops.SpecializedOps"/>
        <class name="LinearSolverChol" line="7">
            <extends class="LinearSolverAbstract"/>
            <javadoc line="7">
                @author Peter Abeles                
            </javadoc>
            <declaration name="decomp" type="CholeskyDecompositionCommon" line="11"/>
            <declaration name="n" type="int" line="12"/>
            <declaration name="vv" type="double" line="13"/>
            <declaration name="t" type="double" line="14"/>
            <method name="LinearSolverChol" type="constructor" line="15">
                <params>
                    <param name="decomp" type="CholeskyDecompositionCommon"/>
                </params>
            </method>
            <method name="setA" type="boolean" line="18">
                <params>
                    <param name="A" type="DenseMatrix64F"/>
                </params>
                <scope line="20"/>
                <scope line="26"/>
            </method>
            <method name="quality" type="double" line="30"/>
            <javadoc line="33">
                &lt;p&gt;
                  Using the decomposition, finds the value of &apos;X&apos; in the linear equation below:&lt;br&gt;
                  Ax = b&lt;br&gt;
                  where A has dimension of n by n, x and b are n by m dimension.
                  &lt;/p&gt;
                  &lt;p&gt;
                  Note that &apos;b&apos; and &apos;x&apos; can be the same matrix instance.
                  &lt;/p&gt;                
                <param>
                    B A matrix that is n by m.  Not modified.                    
                </param>
                <param>
                    X An n by m matrix where the solution is writen to.  Modified.                    
                </param>
            </javadoc>
            <method name="solve" type="void" line="45">
                <params>
                    <param name="B" type="DenseMatrix64F"/>
                    <param name="X" type="DenseMatrix64F"/>
                </params>
                <scope line="46"/>
                <declaration name="numCols" type="int" line="49"/>
                <declaration name="dataB" type="double" line="50"/>
                <declaration name="dataX" type="double" line="51"/>
                <scope line="52">
                    <scope line="53"/>
                </scope>
                <scope line="59"/>
            </method>
            <javadoc line="63">
                Used internally to find the solution to a single column vector.                
            </javadoc>
            <method name="solveInternalL" type="void" line="66"/>
            <javadoc line="70">
                Sets the matrix &apos;inv&apos; equal to the inverse of the matrix that was decomposed.                
                <param>
                    inv Where the value of the inverse will be stored.  Modified.                    
                </param>
            </javadoc>
            <method name="invert" type="void" line="74">
                <params>
                    <param name="inv" type="DenseMatrix64F"/>
                </params>
                <scope line="75"/>
                <scope line="78"/>
                <declaration name="a" type="double" line="81"/>
                <scope line="82"/>
                <scope line="85"/>
            </method>
            <javadoc line="89">
                Sets the matrix to the inverse using a lower triangular matrix.                
            </javadoc>
            <method name="setToInverseL" type="void" line="92">
                <params>
                    <param name="a" type="double"/>
                </params>
                <scope line="93">
                    <declaration name="el_ii" type="double" line="94"/>
                    <scope line="95">
                        <declaration name="sum" type="double" line="96"/>
                        <scope line="97"/>
                    </scope>
                </scope>
                <scope line="103">
                    <declaration name="el_ii" type="double" line="104"/>
                    <scope line="105">
                        <declaration name="sum" type="double" line="106"/>
                        <scope line="107"/>
                    </scope>
                </scope>
            </method>
            <method name="modifiesA" type="boolean" line="114"/>
            <method name="modifiesB" type="boolean" line="117"/>
        </class>
    </source>