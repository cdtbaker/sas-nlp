<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.ejml.alg.dense.linsol.chol">
        <import package="org.ejml.alg.dense.decomposition.TriangularSolver"/>
        <import package="org.ejml.alg.dense.decomposition.chol.CholeskyDecompositionLDL"/>
        <import package="org.ejml.alg.dense.linsol.LinearSolverAbstract"/>
        <import package="org.ejml.data.DenseMatrix64F"/>
        <import package="org.ejml.ops.SpecializedOps"/>
        <class name="LinearSolverCholLDL" line="7">
            <extends class="LinearSolverAbstract"/>
            <javadoc line="7">
                @author Peter Abeles                
            </javadoc>
            <declaration name="decomp" type="CholeskyDecompositionLDL" line="11"/>
            <declaration name="n" type="int" line="12"/>
            <declaration name="vv" type="double" line="13"/>
            <declaration name="el" type="double" line="14"/>
            <declaration name="d" type="double" line="15"/>
            <method name="LinearSolverCholLDL" type="constructor" line="16">
                <params>
                    <param name="decomp" type="CholeskyDecompositionLDL"/>
                </params>
            </method>
            <method name="LinearSolverCholLDL" type="constructor" line="19"/>
            <method name="setA" type="boolean" line="22">
                <params>
                    <param name="A" type="DenseMatrix64F"/>
                </params>
                <scope line="24"/>
                <scope line="31"/>
            </method>
            <method name="quality" type="double" line="35"/>
            <javadoc line="38">
                &lt;p&gt;
                  Using the decomposition, finds the value of &apos;X&apos; in the linear equation below:&lt;br&gt;
                  Ax = b&lt;br&gt;
                  where A has dimension of n by n, x and b are n by m dimension.
                  &lt;/p&gt;
                  &lt;p&gt;
                  Note that &apos;b&apos; and &apos;x&apos; can be the same matrix instance.
                  &lt;/p&gt;                
                <param>
                    B A matrix that is n by m.  Not modified.                    
                </param>
                <param>
                    X An n by m matrix where the solution is writen to.  Modified.                    
                </param>
            </javadoc>
            <method name="solve" type="void" line="50">
                <params>
                    <param name="B" type="DenseMatrix64F"/>
                    <param name="X" type="DenseMatrix64F"/>
                </params>
                <scope line="51"/>
                <declaration name="numCols" type="int" line="54"/>
                <declaration name="dataB" type="double" line="55"/>
                <declaration name="dataX" type="double" line="56"/>
                <scope line="57"/>
            </method>
            <javadoc line="63">
                Used internally to find the solution to a single column vector.                
            </javadoc>
            <method name="solveInternal" type="void" line="66">
                <scope line="68"/>
            </method>
            <javadoc line="73">
                Sets the matrix &apos;inv&apos; equal to the inverse of the matrix that was decomposed.                
                <param>
                    inv Where the value of the inverse will be stored.  Modified.                    
                </param>
            </javadoc>
            <method name="invert" type="void" line="77">
                <params>
                    <param name="inv" type="DenseMatrix64F"/>
                </params>
                <scope line="78"/>
                <declaration name="a" type="double" line="81"/>
                <scope line="82">
                    <scope line="83">
                        <declaration name="sum" type="double" line="84"/>
                        <scope line="85"/>
                    </scope>
                </scope>
                <scope line="91">
                    <declaration name="inv_d" type="double" line="92"/>
                    <scope line="93"/>
                </scope>
                <scope line="97">
                    <scope line="98">
                        <declaration name="sum" type="double" line="99"/>
                        <scope line="100"/>
                    </scope>
                </scope>
            </method>
            <method name="modifiesA" type="boolean" line="107"/>
            <method name="modifiesB" type="boolean" line="110"/>
        </class>
    </source>