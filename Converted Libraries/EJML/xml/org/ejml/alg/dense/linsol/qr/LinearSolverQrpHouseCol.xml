<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.ejml.alg.dense.linsol.qr">
        <import package="org.ejml.alg.dense.decomposition.TriangularSolver"/>
        <import package="org.ejml.alg.dense.decomposition.qr.QRColPivDecompositionHouseholderColumn"/>
        <import package="org.ejml.alg.dense.decomposition.qr.QrHelperFunctions"/>
        <import package="org.ejml.data.DenseMatrix64F"/>
        <class name="LinearSolverQrpHouseCol" line="26">
            <extends class="BaseLinearSolverQrp"/>
            <comment line="37">
                Computes the QR decomposition                
            </comment>
            <comment line="40">
                storage for basic solution                
            </comment>
            <javadoc line="26">
                &lt;p&gt;
                  Performs a pseudo inverse solver using the {@link QRColPivDecompositionHouseholderColumn} decomposition
                  directly.  For details on how the pseudo inverse is computed see {@link BaseLinearSolverQrp}.
                  &lt;/p&gt;                
                <author>
                    Peter Abeles                    
                </author>
            </javadoc>
            <declaration name="decomposition" type="QRColPivDecompositionHouseholderColumn" line="37"/>
            <declaration name="x_basic" type="DenseMatrix64F" line="40"/>
            <method name="LinearSolverQrpHouseCol" type="constructor" line="44">
                <params>
                    <param name="decomposition" type="QRColPivDecompositionHouseholderColumn"/>
                    <param name="norm2Solution" type="boolean"/>
                </params>
            </method>
            <method name="solve" type="void" line="50">
                <params>
                    <param name="B" type="DenseMatrix64F"/>
                    <param name="X" type="DenseMatrix64F"/>
                </params>
                <comment line="59">
                    get the pivots and transpose them                    
                </comment>
                <comment line="65">
                    solve each column one by one                    
                </comment>
                <comment line="70">
                    make a copy of this column in the vector                    
                </comment>
                <comment line="75">
                    Solve Q*x=b =&gt; x = Q&apos;*b
                     Q_n*b = (I-gamma*u*u^T)*b = b - u*(gamma*U^T*b)                    
                </comment>
                <comment line="86">
                    solve for Rx = b using the standard upper triangular solver                    
                </comment>
                <comment line="89">
                    finish the basic solution by filling in zeros                    
                </comment>
                <comment line="97">
                    save the results                    
                </comment>
                <declaration name="BnumCols" type="int" line="56"/>
                <declaration name="pivots" type="int" line="59"/>
                <declaration name="qr" type="double" line="61"/>
                <declaration name="gammas" type="double" line="62"/>
                <scope line="65">
                    <scope line="70"/>
                    <scope line="76">
                        <declaration name="u" type="double" line="77"/>
                        <declaration name="vv" type="double" line="79"/>
                    </scope>
                    <scope line="97"/>
                </scope>
            </method>
            <method name="modifiesA" type="boolean" line="104"/>
            <method name="modifiesB" type="boolean" line="109"/>
        </class>
    </source>