<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.ejml.alg.dense.linsol.lu">
        <import package="org.ejml.alg.dense.decomposition.lu.LUDecompositionBase"/>
        <import package="org.ejml.data.DenseMatrix64F"/>
        <class name="LinearSolverLu" line="4">
            <extends class="LinearSolverLuBase"/>
            <javadoc line="4">
                For each column in the B matrix it makes a copy, which is then solved for and
                  writen into X.  By making a copy of the column cpu cache issues are reduced.                
                <author>
                    Peter Abeles                    
                </author>
            </javadoc>
            <declaration name="doImprove" type="boolean" line="10"/>
            <method name="LinearSolverLu" type="constructor" line="11">
                <params>
                    <param name="decomp" type="LUDecompositionBase"/>
                </params>
            </method>
            <method name="LinearSolverLu" type="constructor" line="14">
                <params>
                    <param name="decomp" type="LUDecompositionBase"/>
                    <param name="doImprove" type="boolean"/>
                </params>
            </method>
            <method name="solve" type="void" line="18">
                <params>
                    <param name="b" type="DenseMatrix64F"/>
                    <param name="x" type="DenseMatrix64F"/>
                </params>
                <scope line="19"/>
                <declaration name="numCols" type="int" line="22"/>
                <declaration name="dataB" type="double" line="23"/>
                <declaration name="dataX" type="double" line="24"/>
                <declaration name="vv" type="double[]" line="25"/>
                <scope line="26">
                    <declaration name="index" type="int" line="27"/>
                </scope>
                <scope line="33"/>
            </method>
        </class>
    </source>