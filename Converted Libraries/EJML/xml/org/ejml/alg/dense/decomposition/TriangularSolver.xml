<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.ejml.alg.dense.decomposition">
        <class name="TriangularSolver" line="2">
            <javadoc line="2">
                &lt;p&gt;
                  This contains algorithms for solving systems of equations where T is a
                  non-singular triangular matrix:&lt;br&gt;
                  &lt;br&gt;
                  Tx = b&lt;br&gt;
                  &lt;br&gt;
                  where x and b are vectors, and T is an n by n matrix. T can either be a lower or upper triangular matrix.&lt;br&gt;
                  &lt;/p&gt;
                  &lt;p&gt;
                  These functions are designed for use inside of other algorithms.  To use them directly
                  is dangerous since no sanity checks are performed.
                  &lt;/p&gt;                
                <author>
                    Peter Abeles                    
                </author>
            </javadoc>
            <javadoc line="18">
                &lt;p&gt;
                  Inverts a square lower triangular matrix:  L = L&lt;sup&gt;-1&lt;/sup&gt;
                  &lt;/p&gt;                
                <param>
                    L                    
                </param>
                <param>
                    m                    
                </param>
            </javadoc>
            <method name="invertLower" type="void" line="25">
                <params>
                    <param name="L" type="double"/>
                    <param name="m" type="int"/>
                </params>
                <scope line="26">
                    <declaration name="L_ii" type="double" line="27"/>
                    <scope line="28">
                        <declaration name="val" type="double" line="29"/>
                        <scope line="30"/>
                    </scope>
                </scope>
            </method>
            <method name="invertLower" type="void" line="38">
                <params>
                    <param name="L" type="double"/>
                    <param name="L_inv" type="double"/>
                    <param name="m" type="int"/>
                </params>
                <scope line="39">
                    <declaration name="L_ii" type="double" line="40"/>
                    <scope line="41">
                        <declaration name="val" type="double" line="42"/>
                        <scope line="43"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="51">
                &lt;p&gt;
                  Solves for non-singular lower triangular matrices using forward substitution.
                  &lt;br&gt;
                  b = L&lt;sup&gt;-1&lt;/sup&gt;b&lt;br&gt;
                  &lt;br&gt;
                  where b is a vector, L is an n by n matrix.&lt;br&gt;
                  &lt;/p&gt;                
                <param>
                    L An n by n non-singular lower triangular matrix. Not modified.                    
                </param>
                <param>
                    b A vector of length n. Modified.                    
                </param>
                <param>
                    n The size of the matrices.                    
                </param>
            </javadoc>
            <method name="solveL" type="void" line="63">
                <params>
                    <param name="L" type="double"/>
                    <param name="b" type="double[]"/>
                    <param name="n" type="int"/>
                </params>
                <scope line="64">
                    <declaration name="sum" type="double" line="65"/>
                    <declaration name="indexL" type="int" line="66"/>
                    <scope line="67"/>
                </scope>
            </method>
            <javadoc line="73">
                L is a m by m matrix
                  B is a m by n matrix                
                <param>
                    L                    
                </param>
                <param>
                    b                    
                </param>
                <param>
                    m                    
                </param>
                <param>
                    n                    
                </param>
            </javadoc>
            <method name="solveL" type="void" line="81">
                <params>
                    <param name="L" type="double"/>
                    <param name="b" type="double[]"/>
                    <param name="m" type="int"/>
                    <param name="n" type="int"/>
                </params>
                <scope line="82">
                    <scope line="83">
                        <declaration name="sum" type="double" line="84"/>
                        <scope line="85"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="92">
                &lt;p&gt;
                  This is a forward substitution solver for non-singular lower triangular matrices.
                  &lt;br&gt;
                  b = (L&lt;sup&gt;T&lt;/sup&gt;)&lt;sup&gt;-1&lt;/sup&gt;b&lt;br&gt;
                  &lt;br&gt;
                  where b is a vector, L is an n by n matrix.&lt;br&gt;
                  &lt;/p&gt;
                  &lt;p&gt;
                  L is a lower triangular matrix, but it comes up with a solution as if it was
                  an upper triangular matrix that was computed by transposing L.
                  &lt;/p&gt;                
                <param>
                    L An n by n non-singular lower triangular matrix. Not modified.                    
                </param>
                <param>
                    b A vector of length n. Modified.                    
                </param>
                <param>
                    n The size of the matrices.                    
                </param>
            </javadoc>
            <method name="solveTranL" type="void" line="108">
                <params>
                    <param name="L" type="double"/>
                    <param name="b" type="double[]"/>
                    <param name="n" type="int"/>
                </params>
                <scope line="109">
                    <declaration name="sum" type="double" line="110"/>
                    <scope line="111"/>
                </scope>
            </method>
            <javadoc line="117">
                &lt;p&gt;
                  This is a forward substitution solver for non-singular upper triangular matrices.
                  &lt;br&gt;
                  b = U&lt;sup&gt;-1&lt;/sup&gt;b&lt;br&gt;
                  &lt;br&gt;
                  where b is a vector, U is an n by n matrix.&lt;br&gt;
                  &lt;/p&gt;                
                <param>
                    U An n by n non-singular upper triangular matrix. Not modified.                    
                </param>
                <param>
                    b A vector of length n. Modified.                    
                </param>
                <param>
                    n The size of the matrices.                    
                </param>
            </javadoc>
            <method name="solveU" type="void" line="129">
                <params>
                    <param name="U" type="double"/>
                    <param name="b" type="double[]"/>
                    <param name="n" type="int"/>
                </params>
                <scope line="130">
                    <declaration name="sum" type="double" line="131"/>
                    <declaration name="indexU" type="int" line="132"/>
                    <scope line="133"/>
                </scope>
            </method>
            <method name="solveU" type="void" line="139">
                <params>
                    <param name="U" type="double"/>
                    <param name="b" type="double[]"/>
                    <param name="sideLength" type="int"/>
                    <param name="minRow" type="int"/>
                    <param name="maxRow" type="int"/>
                </params>
                <scope line="140">
                    <declaration name="sum" type="double" line="141"/>
                    <declaration name="indexU" type="int" line="142"/>
                    <scope line="143"/>
                </scope>
            </method>
            <javadoc line="149">
                &lt;p&gt;
                  This is a forward substitution solver for non-singular upper triangular matrices which are
                  a sub-matrix inside a larger.  The columns of &apos;b&apos; are solved for individually
                  &lt;br&gt;
                  b = U&lt;sup&gt;-1&lt;/sup&gt;b&lt;br&gt;
                  &lt;br&gt;
                  where b is a matrix, U is an n by n matrix.&lt;br&gt;
                  &lt;/p&gt;                
                <param>
                    U Matrix containing the upper triangle system                    
                </param>
                <param>
                    startU Index of the first element in U                    
                </param>
                <param>
                    strideU stride between rows                    
                </param>
                <param>
                    widthU How wide the square matrix is                    
                </param>
                <param>
                    b Matrix containing the solution to the system.  Overwritten with the solution.                    
                </param>
                <param>
                    startB Index of the first element in B                    
                </param>
                <param>
                    strideB stride between rows                    
                </param>
                <param>
                    widthB How wide the matrix is.  Length is the same as U's width                    
                </param>
            </javadoc>
            <method name="solveU" type="void" line="167">
                <params>
                    <param name="U" type="double[]"/>
                    <param name="startU" type="int"/>
                    <param name="strideU" type="int"/>
                    <param name="widthU" type="int"/>
                    <param name="b" type="double[]"/>
                    <param name="startB" type="int"/>
                    <param name="strideB" type="int"/>
                    <param name="widthB" type="int"/>
                </params>
                <scope line="168">
                    <scope line="169">
                        <declaration name="sum" type="double" line="170"/>
                        <scope line="171"/>
                    </scope>
                </scope>
            </method>
        </class>
    </source>