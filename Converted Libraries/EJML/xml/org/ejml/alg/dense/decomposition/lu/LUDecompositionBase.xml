<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.ejml.alg.dense.decomposition.lu">
        <import package="org.ejml.UtilEjml"/>
        <import package="org.ejml.alg.dense.decomposition.TriangularSolver"/>
        <import package="org.ejml.data.DenseMatrix64F"/>
        <import package="org.ejml.factory.LUDecomposition"/>
        <import package="org.ejml.ops.CommonOps"/>
        <import package="org.ejml.ops.SpecializedOps"/>
        <class name="LUDecompositionBase" line="8">
            <implements interface="LUDecomposition">
                <type_params>
                    <type_param name="DenseMatrix64F"/>
                </type_params>
            </implements>
            <javadoc line="8">
                &lt;p&gt;
                  Contains common data structures and operations for LU decomposition algorithms.
                  &lt;/p&gt;                
                <author>
                    Peter Abeles                    
                </author>
            </javadoc>
            <declaration name="LU" type="DenseMatrix64F" line="15"/>
            <declaration name="maxWidth" type="int" line="16"/>
            <declaration name="m" type="int" line="17"/>
            <declaration name="dataLU" type="double" line="18"/>
            <declaration name="vv" type="double" line="19"/>
            <declaration name="indx" type="int" line="20"/>
            <declaration name="pivot" type="int" line="21"/>
            <declaration name="pivsign" type="double" line="22"/>
            <method name="setExpectedMaxSize" type="void" line="23">
                <params>
                    <param name="numRows" type="int"/>
                    <param name="numCols" type="int"/>
                </params>
            </method>
            <method name="getLU" type="DenseMatrix64F" line="31"/>
            <method name="getIndx" type="int[]" line="34"/>
            <method name="getPivot" type="int[]" line="37"/>
            <method name="inputModified" type="boolean" line="40"/>
            <javadoc line="43">
                Writes the lower triangular matrix into the specified matrix.                
                <param>
                    lower Where the lower triangular matrix is writen to.                    
                </param>
            </javadoc>
            <method name="getLower" type="DenseMatrix64F" line="47">
                <params>
                    <param name="lower" type="DenseMatrix64F"/>
                </params>
                <declaration name="numRows" type="int" line="48"/>
                <declaration name="numCols" type="int" line="49"/>
                <scope line="50"/>
                <scope line="53"/>
                <scope line="57">
                    <scope line="59"/>
                </scope>
                <scope line="63">
                    <scope line="64">
                        <scope line="65"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="72">
                Writes the upper triangular matrix into the specified matrix.                
                <param>
                    upper Where the upper triangular matrix is writen to.                    
                </param>
            </javadoc>
            <method name="getUpper" type="DenseMatrix64F" line="76">
                <params>
                    <param name="upper" type="DenseMatrix64F"/>
                </params>
                <declaration name="numRows" type="int" line="77"/>
                <declaration name="numCols" type="int" line="78"/>
                <scope line="79"/>
                <scope line="82"/>
                <scope line="86">
                    <scope line="87"/>
                </scope>
            </method>
            <method name="getPivot" type="DenseMatrix64F" line="93">
                <params>
                    <param name="pivot" type="DenseMatrix64F"/>
                </params>
            </method>
            <method name="decomposeCommonInit" type="void" line="96">
                <params>
                    <param name="a" type="DenseMatrix64F"/>
                </params>
                <scope line="97"/>
                <scope line="103"/>
            </method>
            <javadoc line="108">
                Determines if the decomposed matrix is singular.  This function can return
                  false and the matrix be almost singular, which is still bad.                
                <return>
                    true if singular false otherwise.                    
                </return>
            </javadoc>
            <method name="isSingular" type="boolean" line="113">
                <scope line="114"/>
            </method>
            <javadoc line="119">
                Computes the determinant from the LU decomposition.                
                <return>
                    The matrix's determinant.                    
                </return>
            </javadoc>
            <method name="computeDeterminant" type="double" line="123">
                <declaration name="ret" type="double" line="125"/>
                <declaration name="total" type="int" line="126"/>
                <scope line="127"/>
            </method>
            <method name="quality" type="double" line="132"/>
            <javadoc line="135">
                a specialized version of solve that avoid additional checks that are not needed.                
            </javadoc>
            <method name="_solveVectorInternal" type="void" line="138">
                <params>
                    <param name="vv" type="double[]"/>
                </params>
                <declaration name="ii" type="int" line="139"/>
                <scope line="140">
                    <declaration name="ip" type="int" line="141"/>
                    <declaration name="sum" type="double" line="142"/>
                    <scope line="144">
                        <declaration name="index" type="int" line="145"/>
                    </scope>
                    <scope line="148"/>
                </scope>
            </method>
            <method name="_getVV" type="double[]" line="155"/>
        </class>
    </source>