<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.ejml.alg.dense.decomposition.eig">
        <import package="org.ejml.alg.dense.decomposition.eig.watched.WatchedDoubleStepQREigenvalue"/>
        <import package="org.ejml.alg.dense.decomposition.eig.watched.WatchedDoubleStepQREigenvector"/>
        <import package="org.ejml.alg.dense.decomposition.hessenberg.HessenbergSimilarDecomposition_D64"/>
        <import package="org.ejml.data.Complex64F"/>
        <import package="org.ejml.data.DenseMatrix64F"/>
        <import package="org.ejml.interfaces.decomposition.EigenDecomposition"/>
        <class name="WatchedDoubleStepQRDecomposition_D64" line="29">
            <comment line="44">
                TODO looks like there might be some pointless copying of arrays going on                
            </comment>
            <comment line="54">
                should it compute eigenvectors or just eigenvalues                
            </comment>
            <implements interface="EigenDecomposition">
                <type_params>
                    <type_param name="DenseMatrix64F"/>
                </type_params>
            </implements>
            <javadoc line="29">
                &lt;p&gt;
                  Finds the eigenvalue decomposition of an arbitrary square matrix using the implicit double-step QR algorithm.
                  Watched is included in its name because it is designed to print out internal debugging information.  This
                  class is still underdevelopment and has yet to be optimized.
                  &lt;/p&gt;
                  &lt;p&gt;
                  Based off the description found in:&lt;br&gt;
                  David S. Watkins, &quot;Fundamentals of Matrix Computations.&quot; Second Edition.
                  &lt;/p&gt;                
                <author>
                    Peter Abeles                    
                </author>
            </javadoc>
            <declaration name="hessenberg" type="HessenbergSimilarDecomposition_D64" line="47"/>
            <declaration name="algValue" type="WatchedDoubleStepQREigenvalue" line="48"/>
            <declaration name="algVector" type="WatchedDoubleStepQREigenvector" line="49"/>
            <declaration name="H" type="DenseMatrix64F" line="51"/>
            <declaration name="computeVectors" type="boolean" line="54"/>
            <method name="WatchedDoubleStepQRDecomposition_D64" type="constructor" line="56">
                <params>
                    <param name="computeVectors" type="boolean"/>
                </params>
            </method>
            <method name="decompose" type="boolean" line="65">
                <params>
                    <param name="A" type="DenseMatrix64F"/>
                </params>
                <comment line="74">
                    algValue.getImplicitQR().setChecks(true,true,true);                    
                </comment>
                <comment line="79">
                    for( int i = 0; i &lt; A.numRows; i++ ) {
                                System.out.println(algValue.getEigenvalues()[i]);
                            }                    
                </comment>
            </method>
            <method name="inputModified" type="boolean" line="91"/>
            <method name="getNumberOfEigenvalues" type="int" line="96"/>
            <method name="getEigenvalue" type="Complex64F" line="101">
                <params>
                    <param name="index" type="int"/>
                </params>
            </method>
            <method name="getEigenVector" type="DenseMatrix64F" line="106">
                <params>
                    <param name="index" type="int"/>
                </params>
            </method>
        </class>
    </source>