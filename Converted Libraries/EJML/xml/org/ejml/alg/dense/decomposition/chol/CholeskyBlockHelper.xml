<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.ejml.alg.dense.decomposition.chol">
        <import package="org.ejml.data.DenseMatrix64F"/>
        <class name="CholeskyBlockHelper" line="3">
            <javadoc line="3">
                A specialized Cholesky decomposition algorithm that is designed to help out{@link CholeskyDecompositionBlock} perform its calculations.  While decomposing
                  the matrix it will modify its internal lower triangular matrix and the original
                  that is being modified.                
                <author>
                    Peter Abeles                    
                </author>
            </javadoc>
            <declaration name="L" type="DenseMatrix64F" line="10"/>
            <declaration name="el" type="double[]" line="11"/>
            <javadoc line="12">
                Creates a CholeksyDecomposition capable of decomposing a matrix that is
                  n by n, where n is the width.                
                <param>
                    widthMax The maximum width of a matrix that can be processed.                    
                </param>
            </javadoc>
            <method name="CholeskyBlockHelper" type="constructor" line="17">
                <params>
                    <param name="widthMax" type="int"/>
                </params>
            </method>
            <javadoc line="21">
                Decomposes a submatrix.  The results are written to the submatrix
                  and to its internal matrix L.                
                <param>
                    mat A matrix which has a submatrix that needs to be inverted                    
                </param>
                <param>
                    indexStart the first index of the submatrix                    
                </param>
                <param>
                    n The width of the submatrix that is to be inverted.                    
                </param>
                <return>
                    True if it was able to finish the decomposition.                    
                </return>
            </javadoc>
            <method name="decompose" type="boolean" line="29">
                <params>
                    <param name="mat" type="DenseMatrix64F"/>
                    <param name="indexStart" type="int"/>
                    <param name="n" type="int"/>
                </params>
                <declaration name="m" type="double" line="30"/>
                <declaration name="el_ii" type="double" line="31"/>
                <declaration name="div_el_ii" type="double" line="32"/>
                <scope line="33">
                    <scope line="34">
                        <declaration name="sum" type="double" line="35"/>
                        <declaration name="iEl" type="int" line="36"/>
                        <declaration name="jEl" type="int" line="37"/>
                        <declaration name="end" type="int" line="38"/>
                        <scope line="39"/>
                        <scope line="42"/>
                        <scope line="49">
                            <declaration name="v" type="double" line="50"/>
                        </scope>
                    </scope>
                </scope>
            </method>
            <javadoc line="58">
                Returns L matrix from the decomposition.&lt;br&gt;
                  LL&lt;sup&gt;T&lt;/sup&gt;=A                
                <return>
                    A lower triangular matrix.                    
                </return>
            </javadoc>
            <method name="getL" type="DenseMatrix64F" line="63"/>
        </class>
    </source>