<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.ejml.alg.dense.decomposition.lu">
        <import package="org.ejml.data.DenseMatrix64F"/>
        <class name="LUDecompositionAlt_D64" line="24">
            <extends class="LUDecompositionBase_D64"/>
            <javadoc line="24">
                &lt;p&gt;
                  An LU decomposition algorithm that originally came from Jama.  In general this is faster than
                  what is in NR since it creates a cache of a column, which makes a big difference in larger
                  matrices.
                  &lt;/p&gt;                
                <author>
                    Peter Abeles                    
                </author>
            </javadoc>
            <javadoc line="35">
                This is a modified version of what was found in the JAMA package.  The order that it
                  performs its permutations in is the primary difference from NR                
                <param>
                    a The matrix that is to be decomposed.  Not modified.                    
                </param>
                <return>
                    true If the matrix can be decomposed and false if it can not.                    
                </return>
            </javadoc>
            <method name="decompose" type="boolean" line="43">
                <params>
                    <param name="a" type="DenseMatrix64F"/>
                </params>
                <comment line="51">
                    make a copy of the column to avoid cache jumping issues                    
                </comment>
                <comment line="56">
                    Apply previous transformations.                    
                </comment>
                <comment line="60">
                    Most of the time is spent in the following dot product.                    
                </comment>
                <comment line="70">
                    Find pivot and exchange if necessary.                    
                </comment>
                <comment line="82">
                    swap the rows                    
                </comment>
                <comment line="83">
                    for (int k = 0; k &lt; n; k++) {
                                        double t = dataLU[p*n + k];
                                        dataLU[p*n + k] = dataLU[j*n + k];
                                        dataLU[j*n + k] = t;
                                    }                    
                </comment>
                <comment line="101">
                    Compute multipliers.                    
                </comment>
                <declaration name="LUcolj" type="double" line="46"/>
                <scope line="48">
                    <scope line="51"/>
                    <scope line="56">
                        <declaration name="rowIndex" type="int" line="57"/>
                        <declaration name="kmax" type="int" line="60"/>
                        <declaration name="s" type="double" line="61"/>
                        <scope line="62"/>
                    </scope>
                    <declaration name="p" type="int" line="70"/>
                    <declaration name="max" type="double" line="71"/>
                    <scope line="72">
                        <declaration name="v" type="double" line="73"/>
                        <scope line="74"/>
                    </scope>
                    <scope line="80">
                        <declaration name="rowP" type="int" line="87"/>
                        <declaration name="rowJ" type="int" line="88"/>
                        <declaration name="endP" type="int" line="89"/>
                        <scope line="90">
                            <declaration name="t" type="double" line="91"/>
                        </scope>
                        <declaration name="k" type="int" line="95"/>
                    </scope>
                    <scope line="101">
                        <declaration name="lujj" type="double" line="102"/>
                        <scope line="103">
                            <scope line="104"/>
                        </scope>
                    </scope>
                </scope>
            </method>
        </class>
    </source>