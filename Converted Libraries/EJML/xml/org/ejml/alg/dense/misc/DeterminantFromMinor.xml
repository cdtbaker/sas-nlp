<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.ejml.alg.dense.misc">
        <import package="org.ejml.data.DenseMatrix64F"/>
        <import package="org.ejml.data.RowD1Matrix64F"/>
        <class name="DeterminantFromMinor" line="25">
            <comment line="49">
                how wide the square matrix is                
            </comment>
            <comment line="52">
                used to decide at which point it uses a direct algorithm to compute the determinant                
            </comment>
            <comment line="55">
                used to keep track of which submatrix it is computing the results for                
            </comment>
            <comment line="57">
                the results at different levels of minor matrices                
            </comment>
            <comment line="59">
                which columns where removed at what level                
            </comment>
            <comment line="62">
                columns that are currently open                
            </comment>
            <comment line="65">
                a minor matrix which is created at the lowest level                
            </comment>
            <javadoc line="25">
                &lt;p&gt;
                  Computes the determinant of a matrix using Laplace expansion.  This is done
                  using minor matrices as is shown below:&lt;br&gt;
                  &lt;br&gt;
                  |A| = Sum{ i=1:k ; a&lt;sub&gt;ij&lt;/sub&gt; C&lt;sub&gt;ij&lt;/sub&gt; }&lt;br&gt;
                  &lt;br&gt;
                  C&lt;sub&gt;ij&lt;/sub&gt; = (-1)&lt;sup&gt;i+j&lt;/sup&gt; M&lt;sub&gt;ij&lt;/sub&gt;&lt;br&gt;
                  &lt;br&gt;
                  Where M_ij is the minor of matrix A formed by eliminating row i and column j from A.
                  &lt;/p&gt;
                  &lt;p&gt;
                  This is significantly more computationally expensive than using LU decomposition, but
                  its computation has the advantage being independent of the matrices value.
                  &lt;/p&gt;                
                <see>
                    org.ejml.alg.dense.decomposition.lu.LUDecompositionAlt                    
                </see>
                <author>
                    Peter Abeles                    
                </author>
            </javadoc>
            <declaration name="width" type="int" line="49"/>
            <declaration name="minWidth" type="int" line="52"/>
            <declaration name="levelIndexes" type="int[]" line="55"/>
            <declaration name="levelResults" type="double[]" line="57"/>
            <declaration name="levelRemoved" type="int[]" line="59"/>
            <declaration name="open" type="int" line="62"/>
            <declaration name="numOpen" type="int" line="63"/>
            <declaration name="tempMat" type="DenseMatrix64F" line="65"/>
            <declaration name="dirty" type="boolean" line="67"/>
            <javadoc line="69">
                @param width The width of the matrices that it will be computing the determinant for                
            </javadoc>
            <method name="DeterminantFromMinor" type="constructor" line="74">
                <params>
                    <param name="width" type="int"/>
                </params>
            </method>
            <javadoc line="78">
                @param width The width of the matrices that it will be computing the determinant for                
                <param>
                    minWidth At which point should it use a predefined function to compute the determinant.                    
                </param>
            </javadoc>
            <method name="DeterminantFromMinor" type="constructor" line="84">
                <params>
                    <param name="width" type="int"/>
                    <param name="minWidth" type="int"/>
                </params>
                <scope line="85"/>
                <declaration name="numLevels" type="int" line="95"/>
            </method>
            <javadoc line="106">
                Computes the determinant for the specified matrix.  It must be square and have
                  the same width and height as what was specified in the constructor.                
                <param>
                    mat The matrix whose determinant is to be computed.                    
                </param>
                <return>
                    The determinant.                    
                </return>
            </javadoc>
            <method name="compute" type="double" line="113">
                <params>
                    <param name="mat" type="RowD1Matrix64F"/>
                </params>
                <comment line="119">
                    make sure everything is in the proper state before it starts                    
                </comment>
                <comment line="122">
                    System.arraycopy(mat.data,0,minorMatrix[0],0,mat.data.length);                    
                </comment>
                <comment line="164">
                    put it back into the list                    
                </comment>
                <scope line="114"/>
                <declaration name="level" type="int" line="123"/>
                <scope line="124">
                    <declaration name="levelWidth" type="int" line="125"/>
                    <declaration name="levelIndex" type="int" line="126"/>
                    <scope line="128">
                        <scope line="129"/>
                        <declaration name="prevLevelIndex" type="int" line="132"/>
                        <declaration name="val" type="double" line="134"/>
                        <scope line="135"/>
                        <scope line="137"/>
                    </scope>
                    <scope line="146">
                        <declaration name="excluded" type="int" line="147"/>
                        <scope line="151">
                            <declaration name="subresult" type="double" line="153"/>
                            <scope line="157"/>
                            <scope line="159"/>
                        </scope>
                        <scope line="166"/>
                    </scope>
                </scope>
            </method>
            <method name="initStructures" type="void" line="173">
                <scope line="174"/>
                <scope line="179">
                    <scope line="180"/>
                </scope>
            </method>
            <method name="openRemove" type="int" line="189">
                <params>
                    <param name="where" type="int"/>
                </params>
                <declaration name="val" type="int" line="190"/>
            </method>
            <method name="openAdd" type="void" line="199">
                <params>
                    <param name="where" type="int"/>
                    <param name="val" type="int"/>
                </params>
                <scope line="200"/>
            </method>
            <method name="openAdd" type="void" line="207">
                <params>
                    <param name="val" type="int"/>
                </params>
            </method>
            <method name="putIntoOpen" type="void" line="211">
                <params>
                    <param name="level" type="int"/>
                </params>
                <declaration name="added" type="boolean" line="212"/>
                <scope line="213">
                    <scope line="214"/>
                </scope>
                <scope line="220"/>
            </method>
            <method name="createMinor" type="void" line="225">
                <params>
                    <param name="mat" type="RowD1Matrix64F"/>
                </params>
                <declaration name="w" type="int" line="227"/>
                <declaration name="firstRow" type="int" line="228"/>
                <scope line="230">
                    <declaration name="col" type="int" line="231"/>
                    <declaration name="srcIndex" type="int" line="232"/>
                    <declaration name="dstIndex" type="int" line="233"/>
                    <scope line="235"/>
                </scope>
            </method>
        </class>
    </source>