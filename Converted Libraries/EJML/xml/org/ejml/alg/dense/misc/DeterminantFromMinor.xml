<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.ejml.alg.dense.misc">
        <import package="org.ejml.data.DenseMatrix64F"/>
        <import package="org.ejml.data.RowD1Matrix64F"/>
        <class name="DeterminantFromMinor" line="4">
            <javadoc line="4">
                &lt;p&gt;
                  Computes the determinant of a matrix using Laplace expansion.  This is done
                  using minor matrices as is shown below:&lt;br&gt;
                  &lt;br&gt;
                  |A| = Sum{ i=1:k ; a&lt;sub&gt;ij&lt;/sub&gt; C&lt;sub&gt;ij&lt;/sub&gt; }&lt;br&gt;
                  &lt;br&gt;
                  C&lt;sub&gt;ij&lt;/sub&gt; = (-1)&lt;sup&gt;i+j&lt;/sup&gt; M&lt;sub&gt;ij&lt;/sub&gt;&lt;br&gt;
                  &lt;br&gt;
                  Where M_ij is the minor of matrix A formed by eliminating row i and column j from A.
                  &lt;/p&gt;
                  &lt;p&gt;
                  This is significantly more computationally expensive than using LU decomposition, but
                  its computation has the advantage being independent of the matrices value.
                  &lt;/p&gt;                
                <see>
                    org.ejml.alg.dense.decomposition.lu.LUDecompositionAlt                    
                </see>
                <author>
                    Peter Abeles                    
                </author>
            </javadoc>
            <declaration name="width" type="int" line="23"/>
            <declaration name="minWidth" type="int" line="24"/>
            <declaration name="levelIndexes" type="int[]" line="25"/>
            <declaration name="levelResults" type="double[]" line="26"/>
            <declaration name="levelRemoved" type="int[]" line="27"/>
            <declaration name="open" type="int" line="28"/>
            <declaration name="numOpen" type="int" line="29"/>
            <declaration name="tempMat" type="DenseMatrix64F" line="30"/>
            <declaration name="dirty" type="boolean" line="31"/>
            <javadoc line="32">
                @param width The width of the matrices that it will be computing the determinant for                
            </javadoc>
            <method name="DeterminantFromMinor" type="constructor" line="35">
                <params>
                    <param name="width" type="int"/>
                </params>
            </method>
            <javadoc line="38">
                @param width The width of the matrices that it will be computing the determinant for                
                <param>
                    minWidth At which point should it use a predefined function to compute the determinant.                    
                </param>
            </javadoc>
            <method name="DeterminantFromMinor" type="constructor" line="42">
                <params>
                    <param name="width" type="int"/>
                    <param name="minWidth" type="int"/>
                </params>
                <scope line="43"/>
                <declaration name="numLevels" type="int" line="49"/>
            </method>
            <javadoc line="56">
                Computes the determinant for the specified matrix.  It must be square and have
                  the same width and height as what was specified in the constructor.                
                <param>
                    mat The matrix whose determinant is to be computed.                    
                </param>
                <return>
                    The determinant.                    
                </return>
            </javadoc>
            <method name="compute" type="double" line="62">
                <params>
                    <param name="mat" type="RowD1Matrix64F"/>
                </params>
                <scope line="63"/>
                <declaration name="level" type="int" line="67"/>
                <scope line="68">
                    <declaration name="levelWidth" type="int" line="69"/>
                    <declaration name="levelIndex" type="int" line="70"/>
                    <scope line="71">
                        <scope line="72"/>
                        <declaration name="prevLevelIndex" type="int" line="75"/>
                        <declaration name="val" type="double" line="76"/>
                        <scope line="77"/>
                        <scope line="80"/>
                    </scope>
                    <scope line="88">
                        <declaration name="excluded" type="int" line="89"/>
                        <scope line="91">
                            <declaration name="subresult" type="double" line="93"/>
                            <scope line="95"/>
                            <scope line="98"/>
                        </scope>
                        <scope line="104"/>
                    </scope>
                </scope>
            </method>
            <method name="initStructures" type="void" line="110">
                <scope line="111"/>
                <scope line="115">
                    <scope line="116"/>
                </scope>
            </method>
            <method name="openRemove" type="int" line="124">
                <params>
                    <param name="where" type="int"/>
                </params>
                <declaration name="val" type="int" line="125"/>
            </method>
            <method name="openAdd" type="void" line="130">
                <params>
                    <param name="where" type="int"/>
                    <param name="val" type="int"/>
                </params>
                <scope line="131"/>
            </method>
            <method name="openAdd" type="void" line="137">
                <params>
                    <param name="val" type="int"/>
                </params>
            </method>
            <method name="putIntoOpen" type="void" line="140">
                <params>
                    <param name="level" type="int"/>
                </params>
                <declaration name="added" type="boolean" line="141"/>
                <scope line="142">
                    <scope line="143"/>
                </scope>
                <scope line="149"/>
            </method>
            <method name="createMinor" type="void" line="153">
                <params>
                    <param name="mat" type="RowD1Matrix64F"/>
                </params>
                <declaration name="w" type="int" line="154"/>
                <declaration name="firstRow" type="int" line="155"/>
                <scope line="156">
                    <declaration name="col" type="int" line="157"/>
                    <declaration name="srcIndex" type="int" line="158"/>
                    <declaration name="dstIndex" type="int" line="159"/>
                    <scope line="160"/>
                </scope>
            </method>
        </class>
    </source>