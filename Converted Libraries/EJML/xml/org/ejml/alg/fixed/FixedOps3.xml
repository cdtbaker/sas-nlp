<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.ejml.alg.fixed">
        <import package="org.ejml.data.FixedMatrix3_64F"/>
        <import package="org.ejml.data.FixedMatrix3x3_64F"/>
        <class name="FixedOps3" line="4">
            <javadoc line="4">
                &lt;p&gt;Common matrix operations for fixed sized matrices which are 3 x 3 or 3 element vectors.&lt;/p&gt;
                  &lt;p&gt;DO NOT MODIFY.  Automatically generated code created by GenerateFixedOps&lt;/p&gt;                
                <author>
                    Peter Abeles                    
                </author>
            </javadoc>
            <javadoc line="10">
                &lt;p&gt;Performs the following operation:&lt;br&gt;
                  &lt;br&gt;
                  c = a + b &lt;br&gt;
                  c&lt;sub&gt;ij&lt;/sub&gt; = a&lt;sub&gt;ij&lt;/sub&gt; + b&lt;sub&gt;ij&lt;/sub&gt; &lt;br&gt;
                  &lt;/p&gt;
                  &lt;p&gt;
                  Matrix C can be the same instance as Matrix A and/or B.
                  &lt;/p&gt;                
                <param>
                    a A Matrix. Not modified.                    
                </param>
                <param>
                    b A Matrix. Not modified.                    
                </param>
                <param>
                    c A Matrix where the results are stored. Modified.                    
                </param>
            </javadoc>
            <method name="add" type="void" line="23">
                <params>
                    <param name="a" type="FixedMatrix3x3_64F"/>
                    <param name="b" type="FixedMatrix3x3_64F"/>
                    <param name="c" type="FixedMatrix3x3_64F"/>
                </params>
            </method>
            <javadoc line="34">
                &lt;p&gt;Performs the following operation:&lt;br&gt;
                  &lt;br&gt;
                  a = a + b &lt;br&gt;
                  a&lt;sub&gt;ij&lt;/sub&gt; = a&lt;sub&gt;ij&lt;/sub&gt; + b&lt;sub&gt;ij&lt;/sub&gt; &lt;br&gt;
                  &lt;/p&gt;                
                <param>
                    a A Matrix. Modified.                    
                </param>
                <param>
                    b A Matrix. Not modified.                    
                </param>
            </javadoc>
            <method name="addEquals" type="void" line="43">
                <params>
                    <param name="a" type="FixedMatrix3x3_64F"/>
                    <param name="b" type="FixedMatrix3x3_64F"/>
                </params>
            </method>
            <javadoc line="54">
                Performs an in-place transpose.  This algorithm is only efficient for square
                  matrices.                
                <param>
                    m The matrix that is to be transposed. Modified.                    
                </param>
            </javadoc>
            <method name="transpose" type="void" line="59">
                <params>
                    <param name="m" type="FixedMatrix3x3_64F"/>
                </params>
                <declaration name="tmp" type="double" line="60"/>
            </method>
            <javadoc line="71">
                &lt;p&gt;
                  Transposes matrix &apos;a&apos; and stores the results in &apos;b&apos;:&lt;br&gt;
                  &lt;br&gt;
                  b&lt;sub&gt;ij&lt;/sub&gt; = a&lt;sub&gt;ji&lt;/sub&gt;&lt;br&gt;
                  where &apos;b&apos; is the transpose of &apos;a&apos;.
                  &lt;/p&gt;                
                <param>
                    input The original matrix.  Not modified.                    
                </param>
                <param>
                    output Where the transpose is stored. If null a new matrix is created. Modified.                    
                </param>
                <return>
                    The transposed matrix.                    
                </return>
            </javadoc>
            <method name="transpose" type="FixedMatrix3x3_64F" line="82">
                <params>
                    <param name="input" type="FixedMatrix3x3_64F"/>
                    <param name="output" type="FixedMatrix3x3_64F"/>
                </params>
            </method>
            <javadoc line="95">
                &lt;p&gt;Performs the following operation:&lt;br&gt;
                  &lt;br&gt;
                  c = a  b &lt;br&gt;
                  &lt;br&gt;
                  c&lt;sub&gt;ij&lt;/sub&gt; = &amp;sum;&lt;sub&gt;k=1:n&lt;/sub&gt; { a&lt;sub&gt;ik&lt;/sub&gt;  b&lt;sub&gt;kj&lt;/sub&gt;}
                  &lt;/p&gt;                
                <param>
                    a The left matrix in the multiplication operation. Not modified.                    
                </param>
                <param>
                    b The right matrix in the multiplication operation. Not modified.                    
                </param>
                <param>
                    c Where the results of the operation are stored. Modified.                    
                </param>
            </javadoc>
            <method name="mult" type="void" line="106">
                <params>
                    <param name="a" type="FixedMatrix3x3_64F"/>
                    <param name="b" type="FixedMatrix3x3_64F"/>
                    <param name="c" type="FixedMatrix3x3_64F"/>
                </params>
            </method>
            <javadoc line="117">
                &lt;p&gt;Performs the following operation:&lt;br&gt;
                  &lt;br&gt;
                  c = a&lt;sup&gt;T&lt;/sup&gt;  b &lt;br&gt;
                  &lt;br&gt;
                  c&lt;sub&gt;ij&lt;/sub&gt; = &amp;sum;&lt;sub&gt;k=1:n&lt;/sub&gt; { a&lt;sub&gt;ki&lt;/sub&gt;  b&lt;sub&gt;kj&lt;/sub&gt;}
                  &lt;/p&gt;                
                <param>
                    a The left matrix in the multiplication operation. Not modified.                    
                </param>
                <param>
                    b The right matrix in the multiplication operation. Not modified.                    
                </param>
                <param>
                    c Where the results of the operation are stored. Modified.                    
                </param>
            </javadoc>
            <method name="multTransA" type="void" line="128">
                <params>
                    <param name="a" type="FixedMatrix3x3_64F"/>
                    <param name="b" type="FixedMatrix3x3_64F"/>
                    <param name="c" type="FixedMatrix3x3_64F"/>
                </params>
            </method>
            <javadoc line="139">
                &lt;p&gt;
                  Performs the following operation:&lt;br&gt;
                  &lt;br&gt;
                  c = a&lt;sup&gt;T&lt;/sup&gt;  b&lt;sup&gt;T&lt;/sup&gt;&lt;br&gt;
                  c&lt;sub&gt;ij&lt;/sub&gt; = &amp;sum;&lt;sub&gt;k=1:n&lt;/sub&gt; { a&lt;sub&gt;ki&lt;/sub&gt;  b&lt;sub&gt;jk&lt;/sub&gt;}
                  &lt;/p&gt;                
                <param>
                    a The left matrix in the multiplication operation. Not modified.                    
                </param>
                <param>
                    b The right matrix in the multiplication operation. Not modified.                    
                </param>
                <param>
                    c Where the results of the operation are stored. Modified.                    
                </param>
            </javadoc>
            <method name="multTransAB" type="void" line="150">
                <params>
                    <param name="a" type="FixedMatrix3x3_64F"/>
                    <param name="b" type="FixedMatrix3x3_64F"/>
                    <param name="c" type="FixedMatrix3x3_64F"/>
                </params>
            </method>
            <javadoc line="161">
                &lt;p&gt;
                  Performs the following operation:&lt;br&gt;
                  &lt;br&gt;
                  c = a  b&lt;sup&gt;T&lt;/sup&gt; &lt;br&gt;
                  c&lt;sub&gt;ij&lt;/sub&gt; = &amp;sum;&lt;sub&gt;k=1:n&lt;/sub&gt; { a&lt;sub&gt;ik&lt;/sub&gt;  b&lt;sub&gt;jk&lt;/sub&gt;}
                  &lt;/p&gt;                
                <param>
                    a The left matrix in the multiplication operation. Not modified.                    
                </param>
                <param>
                    b The right matrix in the multiplication operation. Not modified.                    
                </param>
                <param>
                    c Where the results of the operation are stored. Modified.                    
                </param>
            </javadoc>
            <method name="multTransB" type="void" line="172">
                <params>
                    <param name="a" type="FixedMatrix3x3_64F"/>
                    <param name="b" type="FixedMatrix3x3_64F"/>
                    <param name="c" type="FixedMatrix3x3_64F"/>
                </params>
            </method>
            <javadoc line="183">
                &lt;p&gt;Performs matrix to vector multiplication:&lt;br&gt;
                  &lt;br&gt;
                  c = a  b &lt;br&gt;
                  &lt;br&gt;
                  c&lt;sub&gt;i&lt;/sub&gt; = &amp;sum;&lt;sub&gt;k=1:n&lt;/sub&gt; { a&lt;sub&gt;ik&lt;/sub&gt;  b&lt;sub&gt;k&lt;/sub&gt;}
                  &lt;/p&gt;                
                <param>
                    a The left matrix in the multiplication operation. Not modified.                    
                </param>
                <param>
                    b The right vector in the multiplication operation. Not modified.                    
                </param>
                <param>
                    c Where the results of the operation are stored. Modified.                    
                </param>
            </javadoc>
            <method name="mult" type="void" line="194">
                <params>
                    <param name="a" type="FixedMatrix3x3_64F"/>
                    <param name="b" type="FixedMatrix3_64F"/>
                    <param name="c" type="FixedMatrix3_64F"/>
                </params>
            </method>
            <javadoc line="199">
                &lt;p&gt;Performs vector to matrix multiplication:&lt;br&gt;
                  &lt;br&gt;
                  c = a  b &lt;br&gt;
                  &lt;br&gt;
                  c&lt;sub&gt;j&lt;/sub&gt; = &amp;sum;&lt;sub&gt;k=1:n&lt;/sub&gt; { b&lt;sub&gt;k&lt;/sub&gt;  a&lt;sub&gt;kj&lt;/sub&gt; }
                  &lt;/p&gt;                
                <param>
                    a The left vector in the multiplication operation. Not modified.                    
                </param>
                <param>
                    b The right matrix in the multiplication operation. Not modified.                    
                </param>
                <param>
                    c Where the results of the operation are stored. Modified.                    
                </param>
            </javadoc>
            <method name="mult" type="void" line="210">
                <params>
                    <param name="a" type="FixedMatrix3_64F"/>
                    <param name="b" type="FixedMatrix3x3_64F"/>
                    <param name="c" type="FixedMatrix3_64F"/>
                </params>
            </method>
            <javadoc line="215">
                &lt;p&gt;Performs the vector dot product:&lt;br&gt;
                  &lt;br&gt;
                  c = a  b &lt;br&gt;
                  &lt;br&gt;
                  c&gt; = &amp;sum;&lt;sub&gt;k=1:n&lt;/sub&gt; { b&lt;sub&gt;k&lt;/sub&gt;  a&lt;sub&gt;k&lt;/sub&gt; }
                  &lt;/p&gt;                
                <param>
                    a The left vector in the multiplication operation. Not modified.                    
                </param>
                <param>
                    b The right matrix in the multiplication operation. Not modified.                    
                </param>
                <return>
                    The dot product                    
                </return>
            </javadoc>
            <method name="dot" type="double" line="226">
                <params>
                    <param name="a" type="FixedMatrix3_64F"/>
                    <param name="b" type="FixedMatrix3_64F"/>
                </params>
            </method>
            <javadoc line="229">
                Sets all the diagonal elements equal to one and everything else equal to zero.
                  If this is a square matrix then it will be an identity matrix.                
                <param>
                    a A matrix.                    
                </param>
            </javadoc>
            <method name="setIdentity" type="void" line="234">
                <params>
                    <param name="a" type="FixedMatrix3x3_64F"/>
                </params>
            </method>
            <javadoc line="245">
                Inverts matrix &apos;a&apos; using minor matrices and stores the results in &apos;inv&apos;.  Scaling is applied to improve
                  stability against overflow and underflow.
                  WARNING: Potentially less stable than using LU decomposition.                
                <param>
                    a Input matrix. Not modified.                    
                </param>
                <param>
                    inv Inverted output matrix.  Modified.                    
                </param>
                <return>
                    true if it was successful or false if it failed.  Not always reliable.                    
                </return>
            </javadoc>
            <method name="invert" type="boolean" line="253">
                <params>
                    <param name="a" type="FixedMatrix3x3_64F"/>
                    <param name="inv" type="FixedMatrix3x3_64F"/>
                </params>
                <declaration name="scale" type="double" line="254"/>
                <declaration name="a11" type="double" line="255"/>
                <declaration name="a12" type="double" line="256"/>
                <declaration name="a13" type="double" line="257"/>
                <declaration name="a21" type="double" line="258"/>
                <declaration name="a22" type="double" line="259"/>
                <declaration name="a23" type="double" line="260"/>
                <declaration name="a31" type="double" line="261"/>
                <declaration name="a32" type="double" line="262"/>
                <declaration name="a33" type="double" line="263"/>
                <declaration name="m11" type="double" line="264"/>
                <declaration name="m12" type="double" line="265"/>
                <declaration name="m13" type="double" line="266"/>
                <declaration name="m21" type="double" line="267"/>
                <declaration name="m22" type="double" line="268"/>
                <declaration name="m23" type="double" line="269"/>
                <declaration name="m31" type="double" line="270"/>
                <declaration name="m32" type="double" line="271"/>
                <declaration name="m33" type="double" line="272"/>
                <declaration name="det" type="double" line="273"/>
            </method>
            <javadoc line="285">
                Computes the determinant using minor matrices.
                  &lt;p&gt;&lt;/p&gt;
                  WARNING: Potentially less stable than using LU decomposition.                
                <param>
                    mat Input matrix.  Not modified.                    
                </param>
                <return>
                    The determinant.                    
                </return>
            </javadoc>
            <method name="det" type="double" line="292">
                <params>
                    <param name="mat" type="FixedMatrix3x3_64F"/>
                </params>
                <declaration name="a" type="double" line="293"/>
                <declaration name="b" type="double" line="294"/>
                <declaration name="c" type="double" line="295"/>
            </method>
            <javadoc line="298">
                &lt;p&gt;
                  This computes the trace of the matrix:&lt;br&gt;
                  &lt;br&gt;
                  trace = &amp;sum;&lt;sub&gt;i=1:n&lt;/sub&gt; { a&lt;sub&gt;ii&lt;/sub&gt; }
                  &lt;/p&gt;
                  &lt;p&gt;
                  The trace is only defined for square matrices.
                  &lt;/p&gt;                
                <param>
                    a A square matrix.  Not modified.                    
                </param>
            </javadoc>
            <method name="trace" type="double" line="309">
                <params>
                    <param name="a" type="FixedMatrix3x3_64F"/>
                </params>
            </method>
            <javadoc line="312">
                &lt;p&gt;
                  Extracts all diagonal elements from &apos;input&apos; and places them inside the &apos;out&apos; vector. Elements
                  are in sequential order.
                  &lt;/p&gt;                
                <param>
                    input Matrix.  Not modified.                    
                </param>
                <param>
                    out Vector containing diagonal elements.  Modified.                    
                </param>
            </javadoc>
            <method name="diag" type="void" line="320">
                <params>
                    <param name="input" type="FixedMatrix3x3_64F"/>
                    <param name="out" type="FixedMatrix3_64F"/>
                </params>
            </method>
            <javadoc line="325">
                &lt;p&gt;
                  Returns the value of the element in the matrix that has the largest value.&lt;br&gt;
                  &lt;br&gt;
                  Max{ a&lt;sub&gt;ij&lt;/sub&gt; } for all i and j&lt;br&gt;
                  &lt;/p&gt;                
                <param>
                    a A matrix. Not modified.                    
                </param>
                <return>
                    The max element value of the matrix.                    
                </return>
            </javadoc>
            <method name="elementMax" type="double" line="334">
                <params>
                    <param name="a" type="FixedMatrix3x3_64F"/>
                </params>
                <declaration name="max" type="double" line="335"/>
            </method>
            <javadoc line="346">
                &lt;p&gt;
                  Returns the absolute value of the element in the matrix that has the largest absolute value.&lt;br&gt;
                  &lt;br&gt;
                  Max{ |a&lt;sub&gt;ij&lt;/sub&gt;| } for all i and j&lt;br&gt;
                  &lt;/p&gt;                
                <param>
                    a A matrix. Not modified.                    
                </param>
                <return>
                    The max abs element value of the matrix.                    
                </return>
            </javadoc>
            <method name="elementMaxAbs" type="double" line="355">
                <params>
                    <param name="a" type="FixedMatrix3x3_64F"/>
                </params>
                <declaration name="max" type="double" line="356"/>
            </method>
            <javadoc line="367">
                &lt;p&gt;
                  Returns the value of the element in the matrix that has the minimum value.&lt;br&gt;
                  &lt;br&gt;
                  Min{ a&lt;sub&gt;ij&lt;/sub&gt; } for all i and j&lt;br&gt;
                  &lt;/p&gt;                
                <param>
                    a A matrix. Not modified.                    
                </param>
                <return>
                    The value of element in the matrix with the minimum value.                    
                </return>
            </javadoc>
            <method name="elementMin" type="double" line="376">
                <params>
                    <param name="a" type="FixedMatrix3x3_64F"/>
                </params>
                <declaration name="min" type="double" line="377"/>
            </method>
            <javadoc line="388">
                &lt;p&gt;
                  Returns the absolute value of the element in the matrix that has the smallest absolute value.&lt;br&gt;
                  &lt;br&gt;
                  Min{ |a&lt;sub&gt;ij&lt;/sub&gt;| } for all i and j&lt;br&gt;
                  &lt;/p&gt;                
                <param>
                    a A matrix. Not modified.                    
                </param>
                <return>
                    The max element value of the matrix.                    
                </return>
            </javadoc>
            <method name="elementMinAbs" type="double" line="397">
                <params>
                    <param name="a" type="FixedMatrix3x3_64F"/>
                </params>
                <declaration name="min" type="double" line="398"/>
            </method>
            <javadoc line="409">
                &lt;p&gt;Performs the an element by element multiplication operation:&lt;br&gt;
                  &lt;br&gt;
                  a&lt;sub&gt;ij&lt;/sub&gt; = a&lt;sub&gt;ij&lt;/sub&gt;  b&lt;sub&gt;ij&lt;/sub&gt; &lt;br&gt;
                  &lt;/p&gt;                
                <param>
                    a The left matrix in the multiplication operation. Modified.                    
                </param>
                <param>
                    b The right matrix in the multiplication operation. Not modified.                    
                </param>
            </javadoc>
            <method name="elementMult" type="void" line="417">
                <params>
                    <param name="a" type="FixedMatrix3x3_64F"/>
                    <param name="b" type="FixedMatrix3x3_64F"/>
                </params>
            </method>
            <javadoc line="428">
                &lt;p&gt;Performs the an element by element multiplication operation:&lt;br&gt;
                  &lt;br&gt;
                  c&lt;sub&gt;ij&lt;/sub&gt; = a&lt;sub&gt;ij&lt;/sub&gt;  b&lt;sub&gt;ij&lt;/sub&gt; &lt;br&gt;
                  &lt;/p&gt;                
                <param>
                    a The left matrix in the multiplication operation. Not modified.                    
                </param>
                <param>
                    b The right matrix in the multiplication operation. Not modified.                    
                </param>
                <param>
                    c Where the results of the operation are stored. Modified.                    
                </param>
            </javadoc>
            <method name="elementMult" type="void" line="437">
                <params>
                    <param name="a" type="FixedMatrix3x3_64F"/>
                    <param name="b" type="FixedMatrix3x3_64F"/>
                    <param name="c" type="FixedMatrix3x3_64F"/>
                </params>
            </method>
            <javadoc line="448">
                &lt;p&gt;Performs the an element by element division operation:&lt;br&gt;
                  &lt;br&gt;
                  a&lt;sub&gt;ij&lt;/sub&gt; = a&lt;sub&gt;ij&lt;/sub&gt; / b&lt;sub&gt;ij&lt;/sub&gt; &lt;br&gt;
                  &lt;/p&gt;                
                <param>
                    a The left matrix in the division operation. Modified.                    
                </param>
                <param>
                    b The right matrix in the division operation. Not modified.                    
                </param>
            </javadoc>
            <method name="elementDiv" type="void" line="456">
                <params>
                    <param name="a" type="FixedMatrix3x3_64F"/>
                    <param name="b" type="FixedMatrix3x3_64F"/>
                </params>
            </method>
            <javadoc line="467">
                &lt;p&gt;Performs the an element by element division operation:&lt;br&gt;
                  &lt;br&gt;
                  c&lt;sub&gt;ij&lt;/sub&gt; = a&lt;sub&gt;ij&lt;/sub&gt; / b&lt;sub&gt;ij&lt;/sub&gt; &lt;br&gt;
                  &lt;/p&gt;                
                <param>
                    a The left matrix in the division operation. Not modified.                    
                </param>
                <param>
                    b The right matrix in the division operation. Not modified.                    
                </param>
                <param>
                    c Where the results of the operation are stored. Modified.                    
                </param>
            </javadoc>
            <method name="elementDiv" type="void" line="476">
                <params>
                    <param name="a" type="FixedMatrix3x3_64F"/>
                    <param name="b" type="FixedMatrix3x3_64F"/>
                    <param name="c" type="FixedMatrix3x3_64F"/>
                </params>
            </method>
            <javadoc line="487">
                &lt;p&gt;
                  Performs an in-place element by element scalar multiplication.&lt;br&gt;
                  &lt;br&gt;
                  a&lt;sub&gt;ij&lt;/sub&gt; = &amp;alpha;a&lt;sub&gt;ij&lt;/sub&gt;
                  &lt;/p&gt;                
                <param>
                    a The matrix that is to be scaled.  Modified.                    
                </param>
                <param>
                    alpha the amount each element is multiplied by.                    
                </param>
            </javadoc>
            <method name="scale" type="void" line="496">
                <params>
                    <param name="alpha" type="double"/>
                    <param name="a" type="FixedMatrix3x3_64F"/>
                </params>
            </method>
            <javadoc line="507">
                &lt;p&gt;
                  Performs an element by element scalar multiplication.&lt;br&gt;
                  &lt;br&gt;
                  b&lt;sub&gt;ij&lt;/sub&gt; = &amp;alpha;a&lt;sub&gt;ij&lt;/sub&gt;
                  &lt;/p&gt;                
                <param>
                    alpha the amount each element is multiplied by.                    
                </param>
                <param>
                    a The matrix that is to be scaled.  Not modified.                    
                </param>
                <param>
                    b Where the scaled matrix is stored. Modified.                    
                </param>
            </javadoc>
            <method name="scale" type="void" line="517">
                <params>
                    <param name="alpha" type="double"/>
                    <param name="a" type="FixedMatrix3x3_64F"/>
                    <param name="b" type="FixedMatrix3x3_64F"/>
                </params>
            </method>
            <javadoc line="528">
                &lt;p&gt;
                  Performs an in-place element by element scalar division.&lt;br&gt;
                  &lt;br&gt;
                  a&lt;sub&gt;ij&lt;/sub&gt; = a&lt;sub&gt;ij&lt;/sub&gt;/&amp;alpha;
                  &lt;/p&gt;                
                <param>
                    a The matrix whose elements are to be divided.  Modified.                    
                </param>
                <param>
                    alpha the amount each element is divided by.                    
                </param>
            </javadoc>
            <method name="divide" type="void" line="537">
                <params>
                    <param name="alpha" type="double"/>
                    <param name="a" type="FixedMatrix3x3_64F"/>
                </params>
            </method>
            <javadoc line="548">
                &lt;p&gt;
                  Performs an element by element scalar division.&lt;br&gt;
                  &lt;br&gt;
                  b&lt;sub&gt;ij&lt;/sub&gt; = a&lt;sub&gt;ij&lt;/sub&gt; /&amp;alpha;
                  &lt;/p&gt;                
                <param>
                    alpha the amount each element is divided by.                    
                </param>
                <param>
                    a The matrix whose elements are to be divided.  Not modified.                    
                </param>
                <param>
                    b Where the results are stored. Modified.                    
                </param>
            </javadoc>
            <method name="divide" type="void" line="558">
                <params>
                    <param name="alpha" type="double"/>
                    <param name="a" type="FixedMatrix3x3_64F"/>
                    <param name="b" type="FixedMatrix3x3_64F"/>
                </params>
            </method>
            <javadoc line="569">
                &lt;p&gt;
                  Changes the sign of every element in the matrix.&lt;br&gt;
                  &lt;br&gt;
                  a&lt;sub&gt;ij&lt;/sub&gt; = -a&lt;sub&gt;ij&lt;/sub&gt;
                  &lt;/p&gt;                
                <param>
                    a A matrix. Modified.                    
                </param>
            </javadoc>
            <method name="changeSign" type="void" line="577">
                <params>
                    <param name="a" type="FixedMatrix3x3_64F"/>
                </params>
            </method>
            <javadoc line="588">
                &lt;p&gt;
                  Sets every element in the matrix to the specified value.&lt;br&gt;
                  &lt;br&gt;
                  a&lt;sub&gt;ij&lt;/sub&gt; = value
                  &lt;p&gt;                
                <param>
                    a A matrix whose elements are about to be set. Modified.                    
                </param>
                <param>
                    v The value each element will have.                    
                </param>
            </javadoc>
            <method name="fill" type="void" line="597">
                <params>
                    <param name="a" type="FixedMatrix3x3_64F"/>
                    <param name="v" type="double"/>
                </params>
            </method>
        </class>
    </source>