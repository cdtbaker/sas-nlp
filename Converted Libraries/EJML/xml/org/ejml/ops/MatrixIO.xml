<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.ejml.ops">
        <import package="org.ejml.data.DenseMatrix64F"/>
        <import package="org.ejml.data.Matrix64F"/>
        <import package="org.ejml.data.ReshapeMatrix64F"/>
        <import package="java.io"/>
        <class name="MatrixIO" line="6">
            <javadoc line="6">
                Provides simple to use routines for reading and writing matrices to and from files.                
                <author>
                    Peter Abeles                    
                </author>
            </javadoc>
            <javadoc line="11">
                Saves a matrix to disk using Java binary serialization.                
                <param>
                    A The matrix being saved.                    
                </param>
                <param>
                    fileName Name of the file its being saved at.                    
                </param>
                <throws>
                    java.io.IOException                    
                </throws>
            </javadoc>
            <method name="saveBin" type="void" line="17">
                <params>
                    <param name="A" type="ReshapeMatrix64F"/>
                    <param name="fileName" type="String"/>
                </params>
                <declaration name="fileStream" type="FileOutputStream" line="18"/>
                <declaration name="stream" type="ObjectOutputStream" line="19"/>
                <scope line="20"/>
                <scope line="24">
                    <scope line="25"/>
                    <scope line="28"/>
                </scope>
            </method>
            <javadoc line="33">
                Loads a DeneMatrix64F which has been saved to file using Java binary
                  serialization.                
                <param>
                    fileName The file being loaded.                    
                </param>
                <return>
                    DenseMatrix64F                    
                </return>
                <throws>
                    IOException                    
                </throws>
            </javadoc>
            <method name="loadBin" type="T" line="40">
                <params>
                    <param name="fileName" type="String"/>
                </params>
                <declaration name="fileStream" type="FileInputStream" line="41"/>
                <declaration name="stream" type="ObjectInputStream" line="42"/>
                <declaration name="ret" type="T" line="43"/>
                <scope line="44">
                    <scope line="46"/>
                </scope>
                <scope line="50"/>
            </method>
            <javadoc line="56">
                Saves a matrix to disk using in a Column Space Value (CSV) format. For a 
                  description of the format see {@link MatrixIO#loadCSV(String)}.                
                <param>
                    A The matrix being saved.                    
                </param>
                <param>
                    fileName Name of the file its being saved at.                    
                </param>
                <throws>
                    java.io.IOException                    
                </throws>
            </javadoc>
            <method name="saveCSV" type="void" line="63">
                <params>
                    <param name="A" type="ReshapeMatrix64F"/>
                    <param name="fileName" type="String"/>
                </params>
                <declaration name="fileStream" type="PrintStream" line="64"/>
                <scope line="67">
                    <scope line="68"/>
                </scope>
            </method>
            <javadoc line="75">
                Reads a matrix in which has been encoded using a Column Space Value (CSV)
                  file format. The number of rows and columns are read in on the first line. Then
                  each row is read in the subsequent lines.                
                <param>
                    fileName The file being loaded.                    
                </param>
                <return>
                    DenseMatrix64F                    
                </return>
                <throws>
                    IOException                    
                </throws>
            </javadoc>
            <method name="loadCSV" type="DenseMatrix64F" line="83">
                <params>
                    <param name="fileName" type="String"/>
                </params>
                <declaration name="fileStream" type="FileInputStream" line="84"/>
                <declaration name="csv" type="ReadMatrixCsv" line="85"/>
                <declaration name="ret" type="DenseMatrix64F" line="86"/>
            </method>
            <javadoc line="90">
                Reads a matrix in which has been encoded using a Column Space Value (CSV)
                  file format.  For a description of the format see {@link MatrixIO#loadCSV(String)}.                
                <param>
                    fileName The file being loaded.                    
                </param>
                <param>
                    numRows number of rows in the matrix.                    
                </param>
                <param>
                    numCols number of columns in the matrix.                    
                </param>
                <return>
                    DenseMatrix64F                    
                </return>
                <throws>
                    IOException                    
                </throws>
            </javadoc>
            <method name="loadCSV" type="DenseMatrix64F" line="99">
                <params>
                    <param name="fileName" type="String"/>
                    <param name="numRows" type="int"/>
                    <param name="numCols" type="int"/>
                </params>
                <declaration name="fileStream" type="FileInputStream" line="100"/>
                <declaration name="csv" type="ReadMatrixCsv" line="101"/>
                <declaration name="ret" type="DenseMatrix64F" line="102"/>
            </method>
            <method name="print" type="void" line="106">
                <params>
                    <param name="out" type="PrintStream"/>
                    <param name="mat" type="Matrix64F"/>
                </params>
            </method>
            <method name="print" type="void" line="109">
                <params>
                    <param name="out" type="PrintStream"/>
                    <param name="mat" type="Matrix64F"/>
                    <param name="numChar" type="int"/>
                    <param name="precision" type="int"/>
                </params>
                <declaration name="format" type="String" line="110"/>
            </method>
            <method name="print" type="void" line="113">
                <params>
                    <param name="out" type="PrintStream"/>
                    <param name="mat" type="Matrix64F"/>
                    <param name="format" type="String"/>
                </params>
                <declaration name="type" type="String" line="114"/>
                <scope line="117">
                    <scope line="118"/>
                </scope>
            </method>
            <method name="print" type="void" line="124">
                <params>
                    <param name="out" type="PrintStream"/>
                    <param name="mat" type="ReshapeMatrix64F"/>
                    <param name="format" type="String"/>
                    <param name="row0" type="int"/>
                    <param name="row1" type="int"/>
                    <param name="col0" type="int"/>
                    <param name="col1" type="int"/>
                </params>
                <scope line="127">
                    <scope line="128"/>
                </scope>
            </method>
        </class>
    </source>