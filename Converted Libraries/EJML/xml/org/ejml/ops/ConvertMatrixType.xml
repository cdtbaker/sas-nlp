<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.ejml.ops">
        <import package="org.ejml.alg.block.BlockMatrixOps"/>
        <import package="org.ejml.data"/>
        <class name="ConvertMatrixType" line="24">
            <javadoc line="24">
                Functions for converting between matrix types.  Both matrices must be the same size and their values will
                  be copied.                
                <author>
                    Peter Abeles                    
                </author>
            </javadoc>
            <javadoc line="32">
                Generic, but slow, conversion function.                
                <param>
                    input Input matrix.                    
                </param>
                <param>
                    output Output matrix.                    
                </param>
            </javadoc>
            <method name="convert" type="void" line="38">
                <params>
                    <param name="input" type="Matrix64F"/>
                    <param name="output" type="Matrix64F"/>
                </params>
                <scope line="44">
                    <scope line="45"/>
                </scope>
            </method>
            <javadoc line="51">
                Converts {@link FixedMatrix2x2_64F} into {@link DenseMatrix64F}.                
                <param>
                    input Input matrix.                    
                </param>
                <param>
                    output Output matrix.  If null a new matrix will be declared.                    
                </param>
                <return>
                    Converted matrix.                    
                </return>
            </javadoc>
            <method name="convert" type="DenseMatrix64F" line="58">
                <params>
                    <param name="input" type="FixedMatrix2x2_64F"/>
                    <param name="output" type="DenseMatrix64F"/>
                </params>
            </method>
            <javadoc line="75">
                Converts {@link FixedMatrix3x3_64F} into {@link DenseMatrix64F}.                
                <param>
                    input Input matrix.                    
                </param>
                <param>
                    output Output matrix.  If null a new matrix will be declared.                    
                </param>
                <return>
                    Converted matrix.                    
                </return>
            </javadoc>
            <method name="convert" type="DenseMatrix64F" line="82">
                <params>
                    <param name="input" type="FixedMatrix3x3_64F"/>
                    <param name="output" type="DenseMatrix64F"/>
                </params>
            </method>
            <javadoc line="104">
                Converts {@link FixedMatrix4x4_64F} into {@link DenseMatrix64F}.                
                <param>
                    input Input matrix.                    
                </param>
                <param>
                    output Output matrix.  If null a new matrix will be declared.                    
                </param>
                <return>
                    Converted matrix.                    
                </return>
            </javadoc>
            <method name="convert" type="DenseMatrix64F" line="111">
                <params>
                    <param name="input" type="FixedMatrix4x4_64F"/>
                    <param name="output" type="DenseMatrix64F"/>
                </params>
            </method>
            <javadoc line="140">
                Converts {@link FixedMatrix5x5_64F} into {@link DenseMatrix64F}.                
                <param>
                    input Input matrix.                    
                </param>
                <param>
                    output Output matrix.  If null a new matrix will be declared.                    
                </param>
                <return>
                    Converted matrix.                    
                </return>
            </javadoc>
            <method name="convert" type="DenseMatrix64F" line="147">
                <params>
                    <param name="input" type="FixedMatrix5x5_64F"/>
                    <param name="output" type="DenseMatrix64F"/>
                </params>
            </method>
            <javadoc line="185">
                Converts {@link FixedMatrix6x6_64F} into {@link DenseMatrix64F}.                
                <param>
                    input Input matrix.                    
                </param>
                <param>
                    output Output matrix.  If null a new matrix will be declared.                    
                </param>
                <return>
                    Converted matrix.                    
                </return>
            </javadoc>
            <method name="convert" type="DenseMatrix64F" line="192">
                <params>
                    <param name="input" type="FixedMatrix6x6_64F"/>
                    <param name="output" type="DenseMatrix64F"/>
                </params>
            </method>
            <javadoc line="241">
                Converts {@link DenseMatrix64F} into {@link FixedMatrix2x2_64F}                
                <param>
                    input Input matrix.                    
                </param>
                <param>
                    output Output matrix.  If null a new matrix will be declared.                    
                </param>
                <return>
                    Converted matrix.                    
                </return>
            </javadoc>
            <method name="convert" type="FixedMatrix2x2_64F" line="248">
                <params>
                    <param name="input" type="DenseMatrix64F"/>
                    <param name="output" type="FixedMatrix2x2_64F"/>
                </params>
            </method>
            <javadoc line="265">
                Converts {@link DenseMatrix64F} into {@link FixedMatrix3x3_64F}                
                <param>
                    input Input matrix.                    
                </param>
                <param>
                    output Output matrix.  If null a new matrix will be declared.                    
                </param>
                <return>
                    Converted matrix.                    
                </return>
            </javadoc>
            <method name="convert" type="FixedMatrix3x3_64F" line="272">
                <params>
                    <param name="input" type="DenseMatrix64F"/>
                    <param name="output" type="FixedMatrix3x3_64F"/>
                </params>
            </method>
            <javadoc line="294">
                Converts {@link DenseMatrix64F} into {@link FixedMatrix4x4_64F}                
                <param>
                    input Input matrix.                    
                </param>
                <param>
                    output Output matrix.  If null a new matrix will be declared.                    
                </param>
                <return>
                    Converted matrix.                    
                </return>
            </javadoc>
            <method name="convert" type="FixedMatrix4x4_64F" line="301">
                <params>
                    <param name="input" type="DenseMatrix64F"/>
                    <param name="output" type="FixedMatrix4x4_64F"/>
                </params>
            </method>
            <javadoc line="330">
                Converts {@link DenseMatrix64F} into {@link FixedMatrix5x5_64F}                
                <param>
                    input Input matrix.                    
                </param>
                <param>
                    output Output matrix.  If null a new matrix will be declared.                    
                </param>
                <return>
                    Converted matrix.                    
                </return>
            </javadoc>
            <method name="convert" type="FixedMatrix5x5_64F" line="337">
                <params>
                    <param name="input" type="DenseMatrix64F"/>
                    <param name="output" type="FixedMatrix5x5_64F"/>
                </params>
            </method>
            <javadoc line="375">
                Converts {@link DenseMatrix64F} into {@link FixedMatrix6x6_64F}                
                <param>
                    input Input matrix.                    
                </param>
                <param>
                    output Output matrix.  If null a new matrix will be declared.                    
                </param>
                <return>
                    Converted matrix.                    
                </return>
            </javadoc>
            <method name="convert" type="FixedMatrix6x6_64F" line="382">
                <params>
                    <param name="input" type="DenseMatrix64F"/>
                    <param name="output" type="FixedMatrix6x6_64F"/>
                </params>
            </method>
            <javadoc line="431">
                Converts {@link FixedMatrix2_64F} into {@link DenseMatrix64F}.                
                <param>
                    input Input matrix.                    
                </param>
                <param>
                    output Output matrix.  If null a new matrix will be declared.                    
                </param>
                <return>
                    Converted matrix.                    
                </return>
            </javadoc>
            <method name="convert" type="DenseMatrix64F" line="438">
                <params>
                    <param name="input" type="FixedMatrix2_64F"/>
                    <param name="output" type="DenseMatrix64F"/>
                </params>
                <declaration name="length" type="int" line="444"/>
            </method>
            <javadoc line="454">
                Converts {@link FixedMatrix3_64F} into {@link DenseMatrix64F}.                
                <param>
                    input Input matrix.                    
                </param>
                <param>
                    output Output matrix.  If null a new matrix will be declared.                    
                </param>
                <return>
                    Converted matrix.                    
                </return>
            </javadoc>
            <method name="convert" type="DenseMatrix64F" line="461">
                <params>
                    <param name="input" type="FixedMatrix3_64F"/>
                    <param name="output" type="DenseMatrix64F"/>
                </params>
                <declaration name="length" type="int" line="467"/>
            </method>
            <javadoc line="478">
                Converts {@link FixedMatrix4_64F} into {@link DenseMatrix64F}.                
                <param>
                    input Input matrix.                    
                </param>
                <param>
                    output Output matrix.  If null a new matrix will be declared.                    
                </param>
                <return>
                    Converted matrix.                    
                </return>
            </javadoc>
            <method name="convert" type="DenseMatrix64F" line="485">
                <params>
                    <param name="input" type="FixedMatrix4_64F"/>
                    <param name="output" type="DenseMatrix64F"/>
                </params>
                <declaration name="length" type="int" line="491"/>
            </method>
            <javadoc line="503">
                Converts {@link FixedMatrix5_64F} into {@link DenseMatrix64F}.                
                <param>
                    input Input matrix.                    
                </param>
                <param>
                    output Output matrix.  If null a new matrix will be declared.                    
                </param>
                <return>
                    Converted matrix.                    
                </return>
            </javadoc>
            <method name="convert" type="DenseMatrix64F" line="510">
                <params>
                    <param name="input" type="FixedMatrix5_64F"/>
                    <param name="output" type="DenseMatrix64F"/>
                </params>
                <declaration name="length" type="int" line="516"/>
            </method>
            <javadoc line="529">
                Converts {@link FixedMatrix6_64F} into {@link DenseMatrix64F}.                
                <param>
                    input Input matrix.                    
                </param>
                <param>
                    output Output matrix.  If null a new matrix will be declared.                    
                </param>
                <return>
                    Converted matrix.                    
                </return>
            </javadoc>
            <method name="convert" type="DenseMatrix64F" line="536">
                <params>
                    <param name="input" type="FixedMatrix6_64F"/>
                    <param name="output" type="DenseMatrix64F"/>
                </params>
                <declaration name="length" type="int" line="542"/>
            </method>
            <javadoc line="556">
                Converts {@link DenseMatrix64F} into {@link FixedMatrix2_64F}                
                <param>
                    input Input matrix.                    
                </param>
                <param>
                    output Output matrix.  If null a new matrix will be declared.                    
                </param>
                <return>
                    Converted matrix.                    
                </return>
            </javadoc>
            <method name="convert" type="FixedMatrix2_64F" line="563">
                <params>
                    <param name="input" type="DenseMatrix64F"/>
                    <param name="output" type="FixedMatrix2_64F"/>
                </params>
                <declaration name="length" type="int" line="569"/>
            </method>
            <javadoc line="579">
                Converts {@link DenseMatrix64F} into {@link FixedMatrix3_64F}                
                <param>
                    input Input matrix.                    
                </param>
                <param>
                    output Output matrix.  If null a new matrix will be declared.                    
                </param>
                <return>
                    Converted matrix.                    
                </return>
            </javadoc>
            <method name="convert" type="FixedMatrix3_64F" line="586">
                <params>
                    <param name="input" type="DenseMatrix64F"/>
                    <param name="output" type="FixedMatrix3_64F"/>
                </params>
                <declaration name="length" type="int" line="592"/>
            </method>
            <javadoc line="603">
                Converts {@link DenseMatrix64F} into {@link FixedMatrix4_64F}                
                <param>
                    input Input matrix.                    
                </param>
                <param>
                    output Output matrix.  If null a new matrix will be declared.                    
                </param>
                <return>
                    Converted matrix.                    
                </return>
            </javadoc>
            <method name="convert" type="FixedMatrix4_64F" line="610">
                <params>
                    <param name="input" type="DenseMatrix64F"/>
                    <param name="output" type="FixedMatrix4_64F"/>
                </params>
                <declaration name="length" type="int" line="616"/>
            </method>
            <javadoc line="628">
                Converts {@link DenseMatrix64F} into {@link FixedMatrix5_64F}                
                <param>
                    input Input matrix.                    
                </param>
                <param>
                    output Output matrix.  If null a new matrix will be declared.                    
                </param>
                <return>
                    Converted matrix.                    
                </return>
            </javadoc>
            <method name="convert" type="FixedMatrix5_64F" line="635">
                <params>
                    <param name="input" type="DenseMatrix64F"/>
                    <param name="output" type="FixedMatrix5_64F"/>
                </params>
                <declaration name="length" type="int" line="641"/>
            </method>
            <javadoc line="654">
                Converts {@link DenseMatrix64F} into {@link FixedMatrix6_64F}                
                <param>
                    input Input matrix.                    
                </param>
                <param>
                    output Output matrix.  If null a new matrix will be declared.                    
                </param>
                <return>
                    Converted matrix.                    
                </return>
            </javadoc>
            <method name="convert" type="FixedMatrix6_64F" line="661">
                <params>
                    <param name="input" type="DenseMatrix64F"/>
                    <param name="output" type="FixedMatrix6_64F"/>
                </params>
                <declaration name="length" type="int" line="667"/>
            </method>
            <javadoc line="681">
                Converts {@link DenseMatrix64F} into {@link BlockMatrix64F}Can&apos;t handle null output matrix since block size needs to be specified.                
                <param>
                    input Input matrix.                    
                </param>
                <param>
                    output Output matrix.                    
                </param>
            </javadoc>
            <method name="convert" type="void" line="689">
                <params>
                    <param name="input" type="DenseMatrix64F"/>
                    <param name="output" type="BlockMatrix64F"/>
                </params>
            </method>
            <javadoc line="693">
                Converts {@link BlockMatrix64F} into {@link DenseMatrix64F}                
                <param>
                    input Input matrix.                    
                </param>
                <param>
                    output Output matrix.  If null a new matrix will be declared.                    
                </param>
                <return>
                    Converted matrix.                    
                </return>
            </javadoc>
            <method name="convert" type="DenseMatrix64F" line="700">
                <params>
                    <param name="input" type="BlockMatrix64F"/>
                    <param name="output" type="DenseMatrix64F"/>
                </params>
            </method>
        </class>
    </source>