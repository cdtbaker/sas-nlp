<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.ejml.ops">
        <import package="org.ejml.alg.block.BlockMatrixOps"/>
        <import package="org.ejml.data"/>
        <class name="ConvertMatrixType" line="4">
            <javadoc line="4">
                Functions for converting between matrix types.  Both matrices must be the same size and their values will
                  be copied.                
                <author>
                    Peter Abeles                    
                </author>
            </javadoc>
            <javadoc line="10">
                Generic, but slow, conversion function.                
                <param>
                    input Input matrix.                    
                </param>
                <param>
                    output Output matrix.                    
                </param>
            </javadoc>
            <method name="convert" type="void" line="15">
                <params>
                    <param name="input" type="Matrix64F"/>
                    <param name="output" type="Matrix64F"/>
                </params>
                <scope line="18">
                    <scope line="19"/>
                </scope>
            </method>
            <javadoc line="24">
                Converts {@link FixedMatrix2x2_64F} into {@link DenseMatrix64F}.                
                <param>
                    input Input matrix.                    
                </param>
                <param>
                    output Output matrix.  If null a new matrix will be declared.                    
                </param>
                <return>
                    Converted matrix.                    
                </return>
            </javadoc>
            <method name="convert" type="DenseMatrix64F" line="30">
                <params>
                    <param name="input" type="FixedMatrix2x2_64F"/>
                    <param name="output" type="DenseMatrix64F"/>
                </params>
            </method>
            <javadoc line="40">
                Converts {@link FixedMatrix3x3_64F} into {@link DenseMatrix64F}.                
                <param>
                    input Input matrix.                    
                </param>
                <param>
                    output Output matrix.  If null a new matrix will be declared.                    
                </param>
                <return>
                    Converted matrix.                    
                </return>
            </javadoc>
            <method name="convert" type="DenseMatrix64F" line="46">
                <params>
                    <param name="input" type="FixedMatrix3x3_64F"/>
                    <param name="output" type="DenseMatrix64F"/>
                </params>
            </method>
            <javadoc line="61">
                Converts {@link FixedMatrix4x4_64F} into {@link DenseMatrix64F}.                
                <param>
                    input Input matrix.                    
                </param>
                <param>
                    output Output matrix.  If null a new matrix will be declared.                    
                </param>
                <return>
                    Converted matrix.                    
                </return>
            </javadoc>
            <method name="convert" type="DenseMatrix64F" line="67">
                <params>
                    <param name="input" type="FixedMatrix4x4_64F"/>
                    <param name="output" type="DenseMatrix64F"/>
                </params>
            </method>
            <javadoc line="89">
                Converts {@link FixedMatrix5x5_64F} into {@link DenseMatrix64F}.                
                <param>
                    input Input matrix.                    
                </param>
                <param>
                    output Output matrix.  If null a new matrix will be declared.                    
                </param>
                <return>
                    Converted matrix.                    
                </return>
            </javadoc>
            <method name="convert" type="DenseMatrix64F" line="95">
                <params>
                    <param name="input" type="FixedMatrix5x5_64F"/>
                    <param name="output" type="DenseMatrix64F"/>
                </params>
            </method>
            <javadoc line="126">
                Converts {@link FixedMatrix6x6_64F} into {@link DenseMatrix64F}.                
                <param>
                    input Input matrix.                    
                </param>
                <param>
                    output Output matrix.  If null a new matrix will be declared.                    
                </param>
                <return>
                    Converted matrix.                    
                </return>
            </javadoc>
            <method name="convert" type="DenseMatrix64F" line="132">
                <params>
                    <param name="input" type="FixedMatrix6x6_64F"/>
                    <param name="output" type="DenseMatrix64F"/>
                </params>
            </method>
            <javadoc line="174">
                Converts {@link DenseMatrix64F} into {@link FixedMatrix2x2_64F}                
                <param>
                    input Input matrix.                    
                </param>
                <param>
                    output Output matrix.  If null a new matrix will be declared.                    
                </param>
                <return>
                    Converted matrix.                    
                </return>
            </javadoc>
            <method name="convert" type="FixedMatrix2x2_64F" line="180">
                <params>
                    <param name="input" type="DenseMatrix64F"/>
                    <param name="output" type="FixedMatrix2x2_64F"/>
                </params>
            </method>
            <javadoc line="190">
                Converts {@link DenseMatrix64F} into {@link FixedMatrix3x3_64F}                
                <param>
                    input Input matrix.                    
                </param>
                <param>
                    output Output matrix.  If null a new matrix will be declared.                    
                </param>
                <return>
                    Converted matrix.                    
                </return>
            </javadoc>
            <method name="convert" type="FixedMatrix3x3_64F" line="196">
                <params>
                    <param name="input" type="DenseMatrix64F"/>
                    <param name="output" type="FixedMatrix3x3_64F"/>
                </params>
            </method>
            <javadoc line="211">
                Converts {@link DenseMatrix64F} into {@link FixedMatrix4x4_64F}                
                <param>
                    input Input matrix.                    
                </param>
                <param>
                    output Output matrix.  If null a new matrix will be declared.                    
                </param>
                <return>
                    Converted matrix.                    
                </return>
            </javadoc>
            <method name="convert" type="FixedMatrix4x4_64F" line="217">
                <params>
                    <param name="input" type="DenseMatrix64F"/>
                    <param name="output" type="FixedMatrix4x4_64F"/>
                </params>
            </method>
            <javadoc line="239">
                Converts {@link DenseMatrix64F} into {@link FixedMatrix5x5_64F}                
                <param>
                    input Input matrix.                    
                </param>
                <param>
                    output Output matrix.  If null a new matrix will be declared.                    
                </param>
                <return>
                    Converted matrix.                    
                </return>
            </javadoc>
            <method name="convert" type="FixedMatrix5x5_64F" line="245">
                <params>
                    <param name="input" type="DenseMatrix64F"/>
                    <param name="output" type="FixedMatrix5x5_64F"/>
                </params>
            </method>
            <javadoc line="276">
                Converts {@link DenseMatrix64F} into {@link FixedMatrix6x6_64F}                
                <param>
                    input Input matrix.                    
                </param>
                <param>
                    output Output matrix.  If null a new matrix will be declared.                    
                </param>
                <return>
                    Converted matrix.                    
                </return>
            </javadoc>
            <method name="convert" type="FixedMatrix6x6_64F" line="282">
                <params>
                    <param name="input" type="DenseMatrix64F"/>
                    <param name="output" type="FixedMatrix6x6_64F"/>
                </params>
            </method>
            <javadoc line="324">
                Converts {@link FixedMatrix2_64F} into {@link DenseMatrix64F}.                
                <param>
                    input Input matrix.                    
                </param>
                <param>
                    output Output matrix.  If null a new matrix will be declared.                    
                </param>
                <return>
                    Converted matrix.                    
                </return>
            </javadoc>
            <method name="convert" type="DenseMatrix64F" line="330">
                <params>
                    <param name="input" type="FixedMatrix2_64F"/>
                    <param name="output" type="DenseMatrix64F"/>
                </params>
                <declaration name="length" type="int" line="333"/>
            </method>
            <javadoc line="339">
                Converts {@link FixedMatrix3_64F} into {@link DenseMatrix64F}.                
                <param>
                    input Input matrix.                    
                </param>
                <param>
                    output Output matrix.  If null a new matrix will be declared.                    
                </param>
                <return>
                    Converted matrix.                    
                </return>
            </javadoc>
            <method name="convert" type="DenseMatrix64F" line="345">
                <params>
                    <param name="input" type="FixedMatrix3_64F"/>
                    <param name="output" type="DenseMatrix64F"/>
                </params>
                <declaration name="length" type="int" line="348"/>
            </method>
            <javadoc line="355">
                Converts {@link FixedMatrix4_64F} into {@link DenseMatrix64F}.                
                <param>
                    input Input matrix.                    
                </param>
                <param>
                    output Output matrix.  If null a new matrix will be declared.                    
                </param>
                <return>
                    Converted matrix.                    
                </return>
            </javadoc>
            <method name="convert" type="DenseMatrix64F" line="361">
                <params>
                    <param name="input" type="FixedMatrix4_64F"/>
                    <param name="output" type="DenseMatrix64F"/>
                </params>
                <declaration name="length" type="int" line="364"/>
            </method>
            <javadoc line="372">
                Converts {@link FixedMatrix5_64F} into {@link DenseMatrix64F}.                
                <param>
                    input Input matrix.                    
                </param>
                <param>
                    output Output matrix.  If null a new matrix will be declared.                    
                </param>
                <return>
                    Converted matrix.                    
                </return>
            </javadoc>
            <method name="convert" type="DenseMatrix64F" line="378">
                <params>
                    <param name="input" type="FixedMatrix5_64F"/>
                    <param name="output" type="DenseMatrix64F"/>
                </params>
                <declaration name="length" type="int" line="381"/>
            </method>
            <javadoc line="390">
                Converts {@link FixedMatrix6_64F} into {@link DenseMatrix64F}.                
                <param>
                    input Input matrix.                    
                </param>
                <param>
                    output Output matrix.  If null a new matrix will be declared.                    
                </param>
                <return>
                    Converted matrix.                    
                </return>
            </javadoc>
            <method name="convert" type="DenseMatrix64F" line="396">
                <params>
                    <param name="input" type="FixedMatrix6_64F"/>
                    <param name="output" type="DenseMatrix64F"/>
                </params>
                <declaration name="length" type="int" line="399"/>
            </method>
            <javadoc line="409">
                Converts {@link DenseMatrix64F} into {@link FixedMatrix2_64F}                
                <param>
                    input Input matrix.                    
                </param>
                <param>
                    output Output matrix.  If null a new matrix will be declared.                    
                </param>
                <return>
                    Converted matrix.                    
                </return>
            </javadoc>
            <method name="convert" type="FixedMatrix2_64F" line="415">
                <params>
                    <param name="input" type="DenseMatrix64F"/>
                    <param name="output" type="FixedMatrix2_64F"/>
                </params>
                <declaration name="length" type="int" line="418"/>
            </method>
            <javadoc line="424">
                Converts {@link DenseMatrix64F} into {@link FixedMatrix3_64F}                
                <param>
                    input Input matrix.                    
                </param>
                <param>
                    output Output matrix.  If null a new matrix will be declared.                    
                </param>
                <return>
                    Converted matrix.                    
                </return>
            </javadoc>
            <method name="convert" type="FixedMatrix3_64F" line="430">
                <params>
                    <param name="input" type="DenseMatrix64F"/>
                    <param name="output" type="FixedMatrix3_64F"/>
                </params>
                <declaration name="length" type="int" line="433"/>
            </method>
            <javadoc line="440">
                Converts {@link DenseMatrix64F} into {@link FixedMatrix4_64F}                
                <param>
                    input Input matrix.                    
                </param>
                <param>
                    output Output matrix.  If null a new matrix will be declared.                    
                </param>
                <return>
                    Converted matrix.                    
                </return>
            </javadoc>
            <method name="convert" type="FixedMatrix4_64F" line="446">
                <params>
                    <param name="input" type="DenseMatrix64F"/>
                    <param name="output" type="FixedMatrix4_64F"/>
                </params>
                <declaration name="length" type="int" line="449"/>
            </method>
            <javadoc line="457">
                Converts {@link DenseMatrix64F} into {@link FixedMatrix5_64F}                
                <param>
                    input Input matrix.                    
                </param>
                <param>
                    output Output matrix.  If null a new matrix will be declared.                    
                </param>
                <return>
                    Converted matrix.                    
                </return>
            </javadoc>
            <method name="convert" type="FixedMatrix5_64F" line="463">
                <params>
                    <param name="input" type="DenseMatrix64F"/>
                    <param name="output" type="FixedMatrix5_64F"/>
                </params>
                <declaration name="length" type="int" line="466"/>
            </method>
            <javadoc line="475">
                Converts {@link DenseMatrix64F} into {@link FixedMatrix6_64F}                
                <param>
                    input Input matrix.                    
                </param>
                <param>
                    output Output matrix.  If null a new matrix will be declared.                    
                </param>
                <return>
                    Converted matrix.                    
                </return>
            </javadoc>
            <method name="convert" type="FixedMatrix6_64F" line="481">
                <params>
                    <param name="input" type="DenseMatrix64F"/>
                    <param name="output" type="FixedMatrix6_64F"/>
                </params>
                <declaration name="length" type="int" line="484"/>
            </method>
            <javadoc line="494">
                Converts {@link DenseMatrix64F} into {@link BlockMatrix64F}Can&apos;t handle null output matrix since block size needs to be specified.                
                <param>
                    input Input matrix.                    
                </param>
                <param>
                    output Output matrix.                    
                </param>
            </javadoc>
            <method name="convert" type="void" line="499">
                <params>
                    <param name="input" type="DenseMatrix64F"/>
                    <param name="output" type="BlockMatrix64F"/>
                </params>
            </method>
            <javadoc line="502">
                Converts {@link BlockMatrix64F} into {@link DenseMatrix64F}                
                <param>
                    input Input matrix.                    
                </param>
                <param>
                    output Output matrix.  If null a new matrix will be declared.                    
                </param>
                <return>
                    Converted matrix.                    
                </return>
            </javadoc>
            <method name="convert" type="DenseMatrix64F" line="508">
                <params>
                    <param name="input" type="BlockMatrix64F"/>
                    <param name="output" type="DenseMatrix64F"/>
                </params>
            </method>
        </class>
    </source>