<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.ejml.simple">
        <import package="org.ejml.UtilEjml"/>
        <import package="org.ejml.data.DenseMatrix64F"/>
        <import package="org.ejml.factory.DecompositionFactory"/>
        <import package="org.ejml.factory.SingularValueDecomposition"/>
        <import package="org.ejml.ops.SingularOps"/>
        <class name="SimpleSVD" line="7">
            <type_params>
                <type_param name="T"/>
            </type_params>
            <javadoc line="7">
                &lt;p&gt;
                  Wrapper around SVD for simple matrix.  See {@link SingularValueDecomposition} for more details.
                  &lt;/p&gt;
                  &lt;p&gt;
                  SVD is defined as the following decomposition:&lt;br&gt;
                  &lt;div align=center&gt; A = U  W  V &lt;sup&gt;T&lt;/sup&gt; &lt;/div&gt;&lt;br&gt;
                  where A is m by n, and U and V are orthogonal matrices, and  W is a diagonal matrix
                  &lt;/p&gt;                
                <author>
                    Peter Abeles                    
                </author>
            </javadoc>
            <declaration name="svd" type="SingularValueDecomposition&lt;DenseMatrix64F&gt;" line="19"/>
            <declaration name="U" type="T" line="20"/>
            <declaration name="W" type="T" line="21"/>
            <declaration name="V" type="T" line="22"/>
            <declaration name="mat" type="DenseMatrix64F" line="23"/>
            <method name="SimpleSVD" type="constructor" line="24">
                <params>
                    <param name="mat" type="DenseMatrix64F"/>
                    <param name="compact" type="boolean"/>
                </params>
            </method>
            <javadoc line="33">
                &lt;p&gt;
                  Returns the orthogonal &apos;U&apos; matrix.
                  &lt;/p&gt;                
                <return>
                    An orthogonal m by m matrix.                    
                </return>
            </javadoc>
            <method name="getU" type="T" line="39"/>
            <javadoc line="42">
                Returns a diagonal matrix with the singular values.  The singular values are ordered
                  from largest to smallest.                
                <return>
                    Diagonal matrix with singular values along the diagonal.                    
                </return>
            </javadoc>
            <method name="getW" type="T" line="47"/>
            <javadoc line="50">
                &lt;p&gt;
                  Returns the orthogonal &apos;V&apos; matrix.
                  &lt;/p&gt;                
                <return>
                    An orthogonal n by n matrix.                    
                </return>
            </javadoc>
            <method name="getV" type="T" line="56"/>
            <javadoc line="59">
                &lt;p&gt;
                  Computes the quality of the computed decomposition.  A value close to or less than 1e-15
                  is considered to be within machine precision.
                  &lt;/p&gt;
                  &lt;p&gt;
                  This function must be called before the original matrix has been modified or else it will
                  produce meaningless results.
                  &lt;/p&gt;                
                <return>
                    Quality of the decomposition.                    
                </return>
            </javadoc>
            <method name="quality" type="double" line="70"/>
            <javadoc line="73">
                Computes the null space from an SVD.  For more information see {@link SingularOps#nullSpace}.                
                <return>
                    Null space vector.                    
                </return>
            </javadoc>
            <method name="nullSpace" type="SimpleMatrix" line="77"/>
            <javadoc line="80">
                Returns the specified singular value.                
                <param>
                    index Which singular value is to be returned.                    
                </param>
                <return>
                    A singular value.                    
                </return>
            </javadoc>
            <method name="getSingleValue" type="double" line="85">
                <params>
                    <param name="index" type="int"/>
                </params>
            </method>
            <javadoc line="88">
                Returns the rank of the decomposed matrix.                
                <see>
                    SingularOps#rank(org.ejml.factory.SingularValueDecomposition,double)                    
                </see>
                <return>
                    The matrix's rank                    
                </return>
            </javadoc>
            <method name="rank" type="int" line="93"/>
            <javadoc line="96">
                The nullity of the decomposed matrix.                
                <see>
                    SingularOps#nullity(org.ejml.factory.SingularValueDecomposition,double)                    
                </see>
                <return>
                    The matrix's nullity                    
                </return>
            </javadoc>
            <method name="nullity" type="int" line="101"/>
            <javadoc line="104">
                Returns the underlying decomposition that this is a wrapper around.                
                <return>
                    SingularValueDecomposition                    
                </return>
            </javadoc>
            <method name="getSVD" type="SingularValueDecomposition" line="108"/>
        </class>
    </source>