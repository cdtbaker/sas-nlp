<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.ejml.simple">
        <import package="org.ejml.data.Complex64F"/>
        <import package="org.ejml.data.DenseMatrix64F"/>
        <import package="org.ejml.factory.DecompositionFactory"/>
        <import package="org.ejml.factory.EigenDecomposition"/>
        <class name="SimpleEVD" line="6">
            <type_params>
                <type_param name="T"/>
            </type_params>
            <javadoc line="6">
                Wrapper around EigenDecomposition for SimpleMatrix                
                <author>
                    Peter Abeles                    
                </author>
            </javadoc>
            <declaration name="eig" type="EigenDecomposition&lt;DenseMatrix64F&gt;" line="11"/>
            <declaration name="mat" type="DenseMatrix64F" line="12"/>
            <method name="SimpleEVD" type="constructor" line="13">
                <params>
                    <param name="mat" type="DenseMatrix64F"/>
                </params>
            </method>
            <javadoc line="18">
                Returns the number of eigenvalues/eigenvectors.  This is the matrix&apos;s dimension.                
                <return>
                    number of eigenvalues/eigenvectors.                    
                </return>
            </javadoc>
            <method name="getNumberOfEigenvalues" type="int" line="22"/>
            <javadoc line="25">
                &lt;p&gt;
                  Returns an eigenvalue as a complex number.  For symmetric matrices the returned eigenvalue will always be a real
                  number, which means the imaginary component will be equal to zero.
                  &lt;/p&gt;
                  &lt;p&gt;
                  NOTE: The order of the eigenvalues is dependent upon the decomposition algorithm used.  This means that they may
                  or may not be ordered by magnitude.  For example the QR algorithm will returns results that are partially
                  ordered by magnitude, but this behavior should not be relied upon.
                  &lt;/p&gt;                
                <param>
                    index Index of the eigenvalue eigenvector pair.                    
                </param>
                <return>
                    An eigenvalue.                    
                </return>
            </javadoc>
            <method name="getEigenvalue" type="Complex64F" line="38">
                <params>
                    <param name="index" type="int"/>
                </params>
            </method>
            <javadoc line="41">
                &lt;p&gt;
                  Used to retrieve real valued eigenvectors.  If an eigenvector is associated with a complex eigenvalue
                  then null is returned instead.
                  &lt;/p&gt;                
                <param>
                    index Index of the eigenvalue eigenvector pair.                    
                </param>
                <return>
                    If the associated eigenvalue is real then an eigenvector is returned, null otherwise.                    
                </return>
            </javadoc>
            <method name="getEigenVector" type="T" line="49">
                <params>
                    <param name="index" type="int"/>
                </params>
            </method>
            <javadoc line="52">
                &lt;p&gt;
                  Computes the quality of the computed decomposition.  A value close to or less than 1e-15
                  is considered to be within machine precision.
                  &lt;/p&gt;
                  &lt;p&gt;
                  This function must be called before the original matrix has been modified or else it will
                  produce meaningless results.
                  &lt;/p&gt;                
                <return>
                    Quality of the decomposition.                    
                </return>
            </javadoc>
            <method name="quality" type="double" line="63"/>
            <javadoc line="66">
                Returns the underlying decomposition that this is a wrapper around.                
                <return>
                    EigenDecomposition                    
                </return>
            </javadoc>
            <method name="getEVD" type="EigenDecomposition" line="70"/>
            <javadoc line="73">
                Returns the index of the eigenvalue which has the largest magnitude.                
                <return>
                    index of the largest magnitude eigen value.                    
                </return>
            </javadoc>
            <method name="getIndexMax" type="int" line="77">
                <declaration name="indexMax" type="int" line="78"/>
                <declaration name="max" type="double" line="79"/>
                <declaration name="N" type="int" line="80"/>
                <scope line="81">
                    <declaration name="m" type="double" line="82"/>
                    <scope line="83"/>
                </scope>
            </method>
            <javadoc line="90">
                Returns the index of the eigenvalue which has the smallest magnitude.                
                <return>
                    index of the smallest magnitude eigen value.                    
                </return>
            </javadoc>
            <method name="getIndexMin" type="int" line="94">
                <declaration name="indexMin" type="int" line="95"/>
                <declaration name="min" type="double" line="96"/>
                <declaration name="N" type="int" line="97"/>
                <scope line="98">
                    <declaration name="m" type="double" line="99"/>
                    <scope line="100"/>
                </scope>
            </method>
        </class>
    </source>