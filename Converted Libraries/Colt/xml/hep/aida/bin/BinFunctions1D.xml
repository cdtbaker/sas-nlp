<?xml version="1.0" encoding="UTF-8"?>
    <source package="hep.aida.bin">
        <class name="BinFunctions1D" line="2">
            <extends class="Object"/>
            <javadoc line="2">
                Function objects computing dynamic bin aggregations; to be passed to generic methods.                
                <see>
                    cern.colt.matrix.doublealgo.Formatter                    
                </see>
                <see>
                    cern.colt.matrix.doublealgo.Statistic                    
                </see>
                <author>
                    wolfgang.hoschek@cern.ch                    
                </author>
                <version>
                    1.0, 09/24/99                    
                </version>
            </javadoc>
            <declaration name="functions" type="BinFunctions1D" line="10"/>
            <javadoc line="10">
                Little trick to allow for &quot;aliasing&quot;, that is, renaming this class.
                  Using the aliasing you can instead write
                  &lt;p&gt;
                  &lt;tt&gt;BinFunctions F = BinFunctions.functions; &lt;br&gt;
                  someAlgo(F.max);&lt;/tt&gt;                
            </javadoc>
            <declaration name="max" type="BinFunction1D" line="18"/>
            <javadoc line="18">
                Function that returns &lt;tt&gt;bin.max()&lt;/tt&gt;.                
            </javadoc>
            <anonymous_class line="21">
                <method name="apply" type="double" line="22">
                    <params>
                        <param name="bin" type="DynamicBin1D"/>
                    </params>
                </method>
                <method name="name" type="String" line="25"/>
            </anonymous_class>
            <declaration name="mean" type="BinFunction1D" line="30"/>
            <javadoc line="30">
                Function that returns &lt;tt&gt;bin.mean()&lt;/tt&gt;.                
            </javadoc>
            <anonymous_class line="33">
                <method name="apply" type="double" line="34">
                    <params>
                        <param name="bin" type="DynamicBin1D"/>
                    </params>
                </method>
                <method name="name" type="String" line="37"/>
            </anonymous_class>
            <declaration name="median" type="BinFunction1D" line="42"/>
            <javadoc line="42">
                Function that returns &lt;tt&gt;bin.median()&lt;/tt&gt;.                
            </javadoc>
            <anonymous_class line="45">
                <method name="apply" type="double" line="46">
                    <params>
                        <param name="bin" type="DynamicBin1D"/>
                    </params>
                </method>
                <method name="name" type="String" line="49"/>
            </anonymous_class>
            <declaration name="min" type="BinFunction1D" line="54"/>
            <javadoc line="54">
                Function that returns &lt;tt&gt;bin.min()&lt;/tt&gt;.                
            </javadoc>
            <anonymous_class line="57">
                <method name="apply" type="double" line="58">
                    <params>
                        <param name="bin" type="DynamicBin1D"/>
                    </params>
                </method>
                <method name="name" type="String" line="61"/>
            </anonymous_class>
            <declaration name="rms" type="BinFunction1D" line="66"/>
            <javadoc line="66">
                Function that returns &lt;tt&gt;bin.rms()&lt;/tt&gt;.                
            </javadoc>
            <anonymous_class line="69">
                <method name="apply" type="double" line="70">
                    <params>
                        <param name="bin" type="DynamicBin1D"/>
                    </params>
                </method>
                <method name="name" type="String" line="73"/>
            </anonymous_class>
            <declaration name="size" type="BinFunction1D" line="78"/>
            <javadoc line="78">
                Function that returns &lt;tt&gt;bin.size()&lt;/tt&gt;.                
            </javadoc>
            <anonymous_class line="81">
                <method name="apply" type="double" line="82">
                    <params>
                        <param name="bin" type="DynamicBin1D"/>
                    </params>
                </method>
                <method name="name" type="String" line="85"/>
            </anonymous_class>
            <declaration name="stdDev" type="BinFunction1D" line="90"/>
            <javadoc line="90">
                Function that returns &lt;tt&gt;bin.standardDeviation()&lt;/tt&gt;.                
            </javadoc>
            <anonymous_class line="93">
                <method name="apply" type="double" line="94">
                    <params>
                        <param name="bin" type="DynamicBin1D"/>
                    </params>
                </method>
                <method name="name" type="String" line="97"/>
            </anonymous_class>
            <declaration name="sum" type="BinFunction1D" line="102"/>
            <javadoc line="102">
                Function that returns &lt;tt&gt;bin.sum()&lt;/tt&gt;.                
            </javadoc>
            <anonymous_class line="105">
                <method name="apply" type="double" line="106">
                    <params>
                        <param name="bin" type="DynamicBin1D"/>
                    </params>
                </method>
                <method name="name" type="String" line="109"/>
            </anonymous_class>
            <declaration name="sumLog" type="BinFunction1D" line="114"/>
            <javadoc line="114">
                Function that returns &lt;tt&gt;bin.sumOfLogarithms()&lt;/tt&gt;.                
            </javadoc>
            <anonymous_class line="117">
                <method name="apply" type="double" line="118">
                    <params>
                        <param name="bin" type="DynamicBin1D"/>
                    </params>
                </method>
                <method name="name" type="String" line="121"/>
            </anonymous_class>
            <declaration name="geometricMean" type="BinFunction1D" line="126"/>
            <javadoc line="126">
                Function that returns &lt;tt&gt;bin.geometricMean()&lt;/tt&gt;.                
            </javadoc>
            <anonymous_class line="129">
                <method name="apply" type="double" line="130">
                    <params>
                        <param name="bin" type="DynamicBin1D"/>
                    </params>
                </method>
                <method name="name" type="String" line="133"/>
            </anonymous_class>
            <javadoc line="138">
                Makes this class non instantiable, but still let&apos;s others inherit from it.                
            </javadoc>
            <method name="BinFunctions1D" type="constructor" line="141"/>
            <javadoc line="143">
                Function that returns &lt;tt&gt;bin.quantile(percentage)&lt;/tt&gt;.                
                <param>
                    the percentage of the quantile (<tt>0 <= percentage <= 1</tt>).                    
                </param>
            </javadoc>
            <method name="quantile" type="BinFunction1D" line="147">
                <params>
                    <param name="percentage" type="double"/>
                </params>
                <anonymous_class line="148">
                    <method name="apply" type="double" line="149">
                        <params>
                            <param name="bin" type="DynamicBin1D"/>
                        </params>
                    </method>
                    <method name="name" type="String" line="152"/>
                </anonymous_class>
            </method>
        </class>
    </source>