<?xml version="1.0" encoding="UTF-8"?>
    <source package="hep.aida.ref">
        <import package="hep.aida.IAxis"/>
        <import package="hep.aida.IHistogram1D"/>
        <import package="hep.aida.IHistogram2D"/>
        <import package="hep.aida.IHistogram3D"/>
        <class name="Converter" line="6">
            <javadoc line="6">
                Histogram conversions, for example to String and XML format; 
                  This class requires the Colt distribution, whereas the rest of the package is entirelly stand-alone.                
            </javadoc>
            <javadoc line="11">
                Creates a new histogram converter.                
            </javadoc>
            <method name="Converter" type="constructor" line="14"/>
            <javadoc line="16">
                Returns all edges of the given axis.                
            </javadoc>
            <method name="edges" type="double[]" line="19">
                <params>
                    <param name="axis" type="IAxis"/>
                </params>
                <declaration name="b" type="int" line="20"/>
                <declaration name="bounds" type="double[]" line="21"/>
            </method>
            <method name="form" type="String" line="26">
                <params>
                    <param name="formatter" type="cern.colt.matrix.impl.Former"/>
                    <param name="value" type="double"/>
                </params>
            </method>
            <javadoc line="29">
                Returns an array[h.xAxis().bins()]; ignoring extra bins.                
            </javadoc>
            <method name="toArrayErrors" type="double[]" line="32">
                <params>
                    <param name="h" type="IHistogram1D"/>
                </params>
                <declaration name="xBins" type="int" line="33"/>
                <declaration name="array" type="double[]" line="34"/>
                <scope line="35"/>
            </method>
            <javadoc line="40">
                Returns an array[h.xAxis().bins()][h.yAxis().bins()]; ignoring extra bins.                
            </javadoc>
            <method name="toArrayErrors" type="double[][]" line="43">
                <params>
                    <param name="h" type="IHistogram2D"/>
                </params>
                <declaration name="xBins" type="int" line="44"/>
                <declaration name="yBins" type="int" line="45"/>
                <declaration name="array" type="double[][]" line="46"/>
                <scope line="47">
                    <scope line="48"/>
                </scope>
            </method>
            <javadoc line="54">
                Returns an array[h.xAxis().bins()]; ignoring extra bins.                
            </javadoc>
            <method name="toArrayHeights" type="double[]" line="57">
                <params>
                    <param name="h" type="IHistogram1D"/>
                </params>
                <declaration name="xBins" type="int" line="58"/>
                <declaration name="array" type="double[]" line="59"/>
                <scope line="60"/>
            </method>
            <javadoc line="65">
                Returns an array[h.xAxis().bins()][h.yAxis().bins()]; ignoring extra bins.                
            </javadoc>
            <method name="toArrayHeights" type="double[][]" line="68">
                <params>
                    <param name="h" type="IHistogram2D"/>
                </params>
                <declaration name="xBins" type="int" line="69"/>
                <declaration name="yBins" type="int" line="70"/>
                <declaration name="array" type="double[][]" line="71"/>
                <scope line="72">
                    <scope line="73"/>
                </scope>
            </method>
            <javadoc line="79">
                Returns an array[h.xAxis().bins()][h.yAxis().bins()][h.zAxis().bins()]; ignoring extra bins.                
            </javadoc>
            <method name="toArrayHeights" type="double[][][]" line="82">
                <params>
                    <param name="h" type="IHistogram3D"/>
                </params>
                <declaration name="xBins" type="int" line="83"/>
                <declaration name="yBins" type="int" line="84"/>
                <declaration name="zBins" type="int" line="85"/>
                <declaration name="array" type="double[][][]" line="86"/>
                <scope line="87">
                    <scope line="88">
                        <scope line="89"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="96">
                Returns a string representation of the specified array.  The string
                  representation consists of a list of the arrays&apos;s elements, enclosed in square brackets
                  (&lt;tt&gt;&quot;[]&quot;&lt;/tt&gt;).  Adjacent elements are separated by the characters
                  &lt;tt&gt;&quot;, &quot;&lt;/tt&gt; (comma and space).                
                <return>
                    a string representation of the specified array.                    
                </return>
            </javadoc>
            <method name="toString" type="String" line="103">
                <params>
                    <param name="array" type="double[]"/>
                </params>
                <declaration name="buf" type="StringBuffer" line="104"/>
                <declaration name="maxIndex" type="int" line="106"/>
                <scope line="107"/>
            </method>
            <javadoc line="114">
                Returns a string representation of the given argument.                
            </javadoc>
            <method name="toString" type="String" line="117">
                <params>
                    <param name="axis" type="IAxis"/>
                </params>
                <declaration name="buf" type="StringBuffer" line="118"/>
            </method>
            <javadoc line="124">
                Returns a string representation of the given argument.                
            </javadoc>
            <method name="toString" type="String" line="127">
                <params>
                    <param name="h" type="IHistogram1D"/>
                </params>
                <declaration name="columnAxisName" type="String" line="128"/>
                <declaration name="rowAxisName" type="String" line="129"/>
                <declaration name="aggr" type="hep.aida.bin.BinFunction1D[]" line="130"/>
                <declaration name="format" type="String" line="131"/>
                <declaration name="f" type="cern.colt.matrix.impl.Former" line="132"/>
                <declaration name="sep" type="String" line="133"/>
                <declaration name="minMaxBins" type="int[]" line="134"/>
                <declaration name="title" type="String" line="135"/>
                <declaration name="xEdges" type="String[]" line="136"/>
                <declaration name="yEdges" type="String[]" line="138"/>
                <declaration name="heights" type="cern.colt.matrix.DoubleMatrix2D" line="139"/>
            </method>
            <javadoc line="143">
                Returns a string representation of the given argument.                
            </javadoc>
            <method name="toString" type="String" line="146">
                <params>
                    <param name="h" type="IHistogram2D"/>
                </params>
                <declaration name="columnAxisName" type="String" line="147"/>
                <declaration name="rowAxisName" type="String" line="148"/>
                <declaration name="aggr" type="hep.aida.bin.BinFunction1D[]" line="149"/>
                <declaration name="format" type="String" line="150"/>
                <declaration name="f" type="cern.colt.matrix.impl.Former" line="151"/>
                <declaration name="sep" type="String" line="152"/>
                <declaration name="minMaxBins" type="int[]" line="153"/>
                <declaration name="title" type="String" line="154"/>
                <declaration name="xEdges" type="String[]" line="155"/>
                <declaration name="yEdges" type="String[]" line="157"/>
                <declaration name="heights" type="cern.colt.matrix.DoubleMatrix2D" line="160"/>
            </method>
            <javadoc line="164">
                Returns a string representation of the given argument.                
            </javadoc>
            <method name="toString" type="String" line="167">
                <params>
                    <param name="h" type="IHistogram3D"/>
                </params>
                <declaration name="columnAxisName" type="String" line="168"/>
                <declaration name="rowAxisName" type="String" line="169"/>
                <declaration name="sliceAxisName" type="String" line="170"/>
                <declaration name="aggr" type="hep.aida.bin.BinFunction1D[]" line="171"/>
                <declaration name="format" type="String" line="172"/>
                <declaration name="f" type="cern.colt.matrix.impl.Former" line="173"/>
                <declaration name="sep" type="String" line="174"/>
                <declaration name="minMaxBins" type="int[]" line="175"/>
                <declaration name="title" type="String" line="176"/>
                <declaration name="xEdges" type="String[]" line="177"/>
                <declaration name="yEdges" type="String[]" line="179"/>
                <declaration name="zEdges" type="String[]" line="182"/>
                <declaration name="heights" type="cern.colt.matrix.DoubleMatrix3D" line="185"/>
            </method>
            <javadoc line="189">
                Returns a XML representation of the given argument.                
            </javadoc>
            <method name="toXML" type="String" line="192">
                <params>
                    <param name="h" type="IHistogram1D"/>
                </params>
                <declaration name="buf" type="StringBuffer" line="193"/>
                <declaration name="sep" type="String" line="194"/>
                <scope line="209"/>
                <scope line="229"/>
                <scope line="233"/>
            </method>
            <javadoc line="249">
                Returns a XML representation of the given argument.                
            </javadoc>
            <method name="toXML" type="String" line="252">
                <params>
                    <param name="h" type="IHistogram2D"/>
                </params>
                <declaration name="out" type="StringBuffer" line="253"/>
                <declaration name="sep" type="String" line="254"/>
                <scope line="269"/>
            </method>
        </class>
    </source>