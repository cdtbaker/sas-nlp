<?xml version="1.0" encoding="UTF-8"?>
    <source package="hep.aida.ref">
        <import package="hep.aida.IAxis"/>
        <import package="hep.aida.IHistogram"/>
        <import package="hep.aida.IHistogram2D"/>
        <import package="hep.aida.IHistogram3D"/>
        <class name="AbstractHistogram3D" line="6">
            <extends class="Histogram"/>
            <implements interface="IHistogram3D"/>
            <javadoc line="6">
                Abstract base class extracting and implementing most of the redundancy of the interface.                
                <author>
                    Wolfgang Hoschek, Tony Johnson, and others.                    
                </author>
                <version>
                    1.0, 23/03/2000                    
                </version>
            </javadoc>
            <declaration name="xAxis" type="IAxis" line="12"/>
            <method name="AbstractHistogram3D" type="constructor" line="13">
                <params>
                    <param name="title" type="String"/>
                </params>
            </method>
            <method name="allEntries" type="int" line="16">
                <declaration name="n" type="int" line="17"/>
                <scope line="18"/>
            </method>
            <method name="dimensions" type="int" line="23"/>
            <method name="entries" type="int" line="26">
                <declaration name="n" type="int" line="27"/>
                <scope line="28"/>
            </method>
            <method name="extraEntries" type="int" line="33"/>
            <method name="fill" type="void" line="36">
                <params>
                    <param name="x" type="double"/>
                    <param name="y" type="double"/>
                    <param name="z" type="double"/>
                </params>
            </method>
            <method name="internalSliceXY" type="IHistogram2D" line="39"/>
            <javadoc line="39">
                The precise meaning of the arguments to the public slice
                  methods is somewhat ambiguous, so we define this internal
                  slice method and clearly specify its arguments.
                  &lt;p&gt;
                  &lt;b&gt;Note 0&lt;/b&gt;indexX1 and indexX2 use our INTERNAL bin numbering scheme
                  &lt;b&gt;Note 1&lt;/b&gt;The slice is done between indexX1 and indexX2 INCLUSIVE
                  &lt;b&gt;Note 2&lt;/b&gt;indexX1 and indexX2 may include the use of under and over flow bins
                  &lt;b&gt;Note 3&lt;/b&gt;There is no note 3 (yet)                
            </javadoc>
            <method name="internalSliceXZ" type="IHistogram2D" line="50"/>
            <javadoc line="50">
                The precise meaning of the arguments to the public slice
                  methods is somewhat ambiguous, so we define this internal
                  slice method and clearly specify its arguments.
                  &lt;p&gt;
                  &lt;b&gt;Note 0&lt;/b&gt;indexY1 and indexY2 use our INTERNAL bin numbering scheme
                  &lt;b&gt;Note 1&lt;/b&gt;The slice is done between indexY1 and indexY2 INCLUSIVE
                  &lt;b&gt;Note 2&lt;/b&gt;indexY1 and indexY2 may include the use of under and over flow bins
                  &lt;b&gt;Note 3&lt;/b&gt;There is no note 3 (yet)                
            </javadoc>
            <method name="internalSliceYZ" type="IHistogram2D" line="61"/>
            <javadoc line="61">
                The precise meaning of the arguments to the public slice
                  methods is somewhat ambiguous, so we define this internal
                  slice method and clearly specify its arguments.
                  &lt;p&gt;
                  &lt;b&gt;Note 0&lt;/b&gt;indexX1 and indexX2 use our INTERNAL bin numbering scheme
                  &lt;b&gt;Note 1&lt;/b&gt;The slice is done between indexX1 and indexX2 INCLUSIVE
                  &lt;b&gt;Note 2&lt;/b&gt;indexX1 and indexX2 may include the use of under and over flow bins
                  &lt;b&gt;Note 3&lt;/b&gt;There is no note 3 (yet)                
            </javadoc>
            <javadoc line="72">
                Package private method to map from the external representation of bin
                  number to our internal representation of bin number                
            </javadoc>
            <method name="mapX" type="int" line="76">
                <params>
                    <param name="index" type="int"/>
                </params>
                <declaration name="bins" type="int" line="77"/>
            </method>
            <javadoc line="84">
                Package private method to map from the external representation of bin
                  number to our internal representation of bin number                
            </javadoc>
            <method name="mapY" type="int" line="88">
                <params>
                    <param name="index" type="int"/>
                </params>
                <declaration name="bins" type="int" line="89"/>
            </method>
            <javadoc line="96">
                Package private method to map from the external representation of bin
                  number to our internal representation of bin number                
            </javadoc>
            <method name="mapZ" type="int" line="100">
                <params>
                    <param name="index" type="int"/>
                </params>
                <declaration name="bins" type="int" line="101"/>
            </method>
            <method name="minMaxBins" type="int[]" line="108">
                <declaration name="minValue" type="double" line="109"/>
                <declaration name="maxValue" type="double" line="110"/>
                <declaration name="minBinX" type="int" line="111"/>
                <declaration name="minBinY" type="int" line="112"/>
                <declaration name="minBinZ" type="int" line="113"/>
                <declaration name="maxBinX" type="int" line="114"/>
                <declaration name="maxBinY" type="int" line="115"/>
                <declaration name="maxBinZ" type="int" line="116"/>
                <scope line="117">
                    <scope line="118">
                        <scope line="119">
                            <declaration name="value" type="double" line="120"/>
                            <scope line="121"/>
                            <scope line="127"/>
                        </scope>
                    </scope>
                </scope>
                <declaration name="result" type="int[]" line="136"/>
            </method>
            <method name="projectionXY" type="IHistogram2D" line="139">
                <declaration name="newTitle" type="String" line="140"/>
            </method>
            <method name="projectionXZ" type="IHistogram2D" line="143">
                <declaration name="newTitle" type="String" line="144"/>
            </method>
            <method name="projectionYZ" type="IHistogram2D" line="147">
                <declaration name="newTitle" type="String" line="148"/>
            </method>
            <method name="sliceXY" type="IHistogram2D" line="151">
                <params>
                    <param name="indexZ" type="int"/>
                </params>
            </method>
            <method name="sliceXY" type="IHistogram2D" line="154">
                <params>
                    <param name="indexZ1" type="int"/>
                    <param name="indexZ2" type="int"/>
                </params>
                <declaration name="start" type="int" line="155"/>
                <declaration name="stop" type="int" line="156"/>
                <declaration name="newTitle" type="String" line="157"/>
            </method>
            <method name="sliceXZ" type="IHistogram2D" line="160">
                <params>
                    <param name="indexY" type="int"/>
                </params>
            </method>
            <method name="sliceXZ" type="IHistogram2D" line="163">
                <params>
                    <param name="indexY1" type="int"/>
                    <param name="indexY2" type="int"/>
                </params>
                <declaration name="start" type="int" line="164"/>
                <declaration name="stop" type="int" line="165"/>
                <declaration name="newTitle" type="String" line="166"/>
            </method>
            <method name="sliceYZ" type="IHistogram2D" line="169">
                <params>
                    <param name="indexX" type="int"/>
                </params>
            </method>
            <method name="sliceYZ" type="IHistogram2D" line="172">
                <params>
                    <param name="indexX1" type="int"/>
                    <param name="indexX2" type="int"/>
                </params>
                <declaration name="start" type="int" line="173"/>
                <declaration name="stop" type="int" line="174"/>
                <declaration name="newTitle" type="String" line="175"/>
            </method>
            <method name="sumAllBinHeights" type="double" line="178">
                <declaration name="n" type="double" line="179"/>
                <scope line="180"/>
            </method>
            <method name="sumBinHeights" type="double" line="185">
                <declaration name="n" type="double" line="186"/>
                <scope line="187"/>
            </method>
            <method name="sumExtraBinHeights" type="double" line="192"/>
            <method name="xAxis" type="IAxis" line="195"/>
            <method name="yAxis" type="IAxis" line="198"/>
            <method name="zAxis" type="IAxis" line="201"/>
        </class>
    </source>