<?xml version="1.0" encoding="UTF-8"?>
    <source package="hep.aida.ref">
        <import package="hep.aida.IAxis"/>
        <import package="hep.aida.IHistogram"/>
        <class name="VariableAxis" line="4">
            <implements interface="IAxis"/>
            <javadoc line="4">
                Variable-width axis; A reference implementation of hep.aida.IAxis.                
                <author>
                    Wolfgang Hoschek, Tony Johnson, and others.                    
                </author>
                <version>
                    1.0, 23/03/2000                    
                </version>
            </javadoc>
            <declaration name="min" type="double" line="10"/>
            <declaration name="bins" type="int" line="11"/>
            <declaration name="edges" type="double[]" line="12"/>
            <javadoc line="13">
                Constructs and returns an axis with the given bin edges.
                  Example: &lt;tt&gt;edges = (0.2, 1.0, 5.0)&lt;/tt&gt; yields an axis with 2 in-range bins &lt;tt&gt;[0.2,1.0), [1.0,5.0)&lt;/tt&gt; and 2 extra bins &lt;tt&gt;[-inf,0.2), [5.0,inf]&lt;/tt&gt;.                
                <param>
                    edges the bin boundaries the partition shall have;
                      must be sorted ascending and must not contain multiple identical elements.                    
                </param>
                <throws>
                    IllegalArgumentException if <tt>edges.length < 1</tt>.                    
                </throws>
            </javadoc>
            <method name="VariableAxis" type="constructor" line="20">
                <params>
                    <param name="edges" type="double[]"/>
                </params>
                <scope line="22">
                    <scope line="23"/>
                </scope>
            </method>
            <method name="binCentre" type="double" line="31">
                <params>
                    <param name="index" type="int"/>
                </params>
            </method>
            <method name="binLowerEdge" type="double" line="34">
                <params>
                    <param name="index" type="int"/>
                </params>
            </method>
            <method name="bins" type="int" line="39"/>
            <method name="binUpperEdge" type="double" line="42">
                <params>
                    <param name="index" type="int"/>
                </params>
            </method>
            <method name="binWidth" type="double" line="47">
                <params>
                    <param name="index" type="int"/>
                </params>
            </method>
            <method name="coordToIndex" type="int" line="50">
                <params>
                    <param name="coord" type="double"/>
                </params>
                <declaration name="index" type="int" line="52"/>
            </method>
            <method name="lowerEdge" type="double" line="57"/>
            <javadoc line="60">
                Returns a string representation of the specified array.  The string
                  representation consists of a list of the arrays&apos;s elements, enclosed in square brackets
                  (&lt;tt&gt;&quot;[]&quot;&lt;/tt&gt;).  Adjacent elements are separated by the characters
                  &lt;tt&gt;&quot;, &quot;&lt;/tt&gt; (comma and space).                
                <return>
                    a string representation of the specified array.                    
                </return>
            </javadoc>
            <method name="toString" type="String" line="67">
                <params>
                    <param name="array" type="double[]"/>
                </params>
                <declaration name="buf" type="StringBuffer" line="68"/>
                <declaration name="maxIndex" type="int" line="70"/>
                <scope line="71"/>
            </method>
            <method name="upperEdge" type="double" line="78"/>
        </class>
    </source>