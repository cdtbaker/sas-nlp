<?xml version="1.0" encoding="UTF-8"?>
    <source package="hep.aida.ref">
        <import package="hep.aida.IAxis"/>
        <import package="hep.aida.IHistogram1D"/>
        <import package="hep.aida.IHistogram2D"/>
        <class name="Histogram2D" line="5">
            <extends class="AbstractHistogram2D"/>
            <implements interface="IHistogram2D"/>
            <javadoc line="5">
                A reference implementation of hep.aida.IHistogram2D.
                  The goal is to provide a clear implementation rather than the most efficient implementation.
                  However, performance seems fine - filling 6  10^5 points/sec, both using FixedAxis or VariableAxis.                
                <author>
                    Wolfgang Hoschek, Tony Johnson, and others.                    
                </author>
                <version>
                    1.0, 23/03/2000                    
                </version>
            </javadoc>
            <declaration name="heights" type="double[][]" line="13"/>
            <declaration name="errors" type="double[][]" line="14"/>
            <declaration name="entries" type="int[][]" line="15"/>
            <declaration name="nEntry" type="int" line="16"/>
            <declaration name="sumWeight" type="double" line="17"/>
            <declaration name="sumWeightSquared" type="double" line="18"/>
            <declaration name="meanX" type="double" line="19"/>
            <declaration name="meanY" type="double" line="20"/>
            <javadoc line="21">
                Creates a variable-width histogram.
                  Example: &lt;tt&gt;xEdges = (0.2, 1.0, 5.0, 6.0), yEdges = (-5, 0, 7)&lt;/tt&gt; yields 32 in-range bins.                
                <param>
                    title The histogram title.                    
                </param>
                <param>
                    xEdges the bin boundaries the x-axis shall have;
                      must be sorted ascending and must not contain multiple identical elements.                    
                </param>
                <param>
                    yEdges the bin boundaries the y-axis shall have;
                      must be sorted ascending and must not contain multiple identical elements.                    
                </param>
                <throws>
                    IllegalArgumentException if <tt>xEdges.length < 1 || yEdges.length < 1</tt>.                    
                </throws>
            </javadoc>
            <method name="Histogram2D" type="constructor" line="31">
                <params>
                    <param name="title" type="String"/>
                    <param name="xEdges" type="double[]"/>
                    <param name="yEdges" type="double[]"/>
                </params>
            </method>
            <javadoc line="34">
                Creates a fixed-width histogram.                
                <param>
                    title The histogram title.                    
                </param>
                <param>
                    xBins The number of bins on the X axis.                    
                </param>
                <param>
                    xMin The minimum value on the X axis.                    
                </param>
                <param>
                    xMax The maximum value on the X axis.                    
                </param>
                <param>
                    yBins The number of bins on the Y axis.                    
                </param>
                <param>
                    yMin The minimum value on the Y axis.                    
                </param>
                <param>
                    yMax The maximum value on the Y axis.                    
                </param>
            </javadoc>
            <method name="Histogram2D" type="constructor" line="44">
                <params>
                    <param name="title" type="String"/>
                    <param name="xBins" type="int"/>
                    <param name="xMin" type="double"/>
                    <param name="xMax" type="double"/>
                    <param name="yBins" type="int"/>
                    <param name="yMin" type="double"/>
                    <param name="yMax" type="double"/>
                </params>
            </method>
            <javadoc line="47">
                Creates a histogram with the given axis binning.                
                <param>
                    title The histogram title.                    
                </param>
                <param>
                    xAxis The x-axis description to be used for binning.                    
                </param>
                <param>
                    yAxis The y-axis description to be used for binning.                    
                </param>
            </javadoc>
            <method name="Histogram2D" type="constructor" line="53">
                <params>
                    <param name="title" type="String"/>
                    <param name="xAxis" type="IAxis"/>
                    <param name="yAxis" type="IAxis"/>
                </params>
                <declaration name="xBins" type="int" line="57"/>
                <declaration name="yBins" type="int" line="58"/>
            </method>
            <method name="allEntries" type="int" line="63"/>
            <method name="binEntries" type="int" line="66">
                <params>
                    <param name="indexX" type="int"/>
                    <param name="indexY" type="int"/>
                </params>
            </method>
            <method name="binError" type="double" line="69">
                <params>
                    <param name="indexX" type="int"/>
                    <param name="indexY" type="int"/>
                </params>
            </method>
            <method name="binHeight" type="double" line="72">
                <params>
                    <param name="indexX" type="int"/>
                    <param name="indexY" type="int"/>
                </params>
            </method>
            <method name="equivalentBinEntries" type="double" line="75"/>
            <method name="fill" type="void" line="78">
                <params>
                    <param name="x" type="double"/>
                    <param name="y" type="double"/>
                </params>
                <declaration name="xBin" type="int" line="79"/>
                <declaration name="yBin" type="int" line="80"/>
            </method>
            <method name="fill" type="void" line="92">
                <params>
                    <param name="x" type="double"/>
                    <param name="y" type="double"/>
                    <param name="weight" type="double"/>
                </params>
                <declaration name="xBin" type="int" line="93"/>
                <declaration name="yBin" type="int" line="94"/>
            </method>
            <javadoc line="106">
                The precise meaning of the arguments to the public slice
                  methods is somewhat ambiguous, so we define this internal
                  slice method and clearly specify its arguments.
                  &lt;p&gt;
                  &lt;b&gt;Note 0&lt;/b&gt;indexY1 and indexY2 use our INTERNAL bin numbering scheme
                  &lt;b&gt;Note 1&lt;/b&gt;The slice is done between indexY1 and indexY2 INCLUSIVE
                  &lt;b&gt;Note 2&lt;/b&gt;indexY1 and indexY2 may include the use of under and over flow bins
                  &lt;b&gt;Note 3&lt;/b&gt;There is no note 3 (yet)                
            </javadoc>
            <method name="internalSliceX" type="IHistogram1D" line="116">
                <params>
                    <param name="title" type="String"/>
                    <param name="indexY1" type="int"/>
                    <param name="indexY2" type="int"/>
                </params>
                <declaration name="sliceBins" type="int" line="118"/>
                <declaration name="sliceEntries" type="int[]" line="119"/>
                <declaration name="sliceHeights" type="double[]" line="120"/>
                <declaration name="sliceErrors" type="double[]" line="121"/>
                <scope line="122">
                    <scope line="123"/>
                </scope>
                <declaration name="result" type="Histogram1D" line="129"/>
            </method>
            <javadoc line="133">
                The precise meaning of the arguments to the public slice
                  methods is somewhat ambiguous, so we define this internal
                  slice method and clearly specify its arguments.
                  &lt;p&gt;
                  &lt;b&gt;Note 0&lt;/b&gt;indexX1 and indexX2 use our INTERNAL bin numbering scheme
                  &lt;b&gt;Note 1&lt;/b&gt;The slice is done between indexX1 and indexX2 INCLUSIVE
                  &lt;b&gt;Note 2&lt;/b&gt;indexX1 and indexX2 may include the use of under and over flow bins
                  &lt;b&gt;Note 3&lt;/b&gt;There is no note 3 (yet)                
            </javadoc>
            <method name="internalSliceY" type="IHistogram1D" line="143">
                <params>
                    <param name="title" type="String"/>
                    <param name="indexX1" type="int"/>
                    <param name="indexX2" type="int"/>
                </params>
                <declaration name="sliceBins" type="int" line="145"/>
                <declaration name="sliceEntries" type="int[]" line="146"/>
                <declaration name="sliceHeights" type="double[]" line="147"/>
                <declaration name="sliceErrors" type="double[]" line="148"/>
                <scope line="149">
                    <scope line="150"/>
                </scope>
                <declaration name="result" type="Histogram1D" line="156"/>
            </method>
            <method name="meanX" type="double" line="160"/>
            <method name="meanY" type="double" line="163"/>
            <method name="reset" type="void" line="166">
                <scope line="167"/>
            </method>
            <method name="rmsX" type="double" line="180"/>
            <method name="rmsY" type="double" line="183"/>
            <javadoc line="186">
                Used internally for creating slices and projections                
            </javadoc>
            <method name="setContents" type="void" line="189">
                <params>
                    <param name="entries" type="int[][]"/>
                    <param name="heights" type="double[][]"/>
                    <param name="errors" type="double[][]"/>
                </params>
                <scope line="193"/>
            </method>
            <method name="sumAllBinHeights" type="double" line="203"/>
        </class>
    </source>