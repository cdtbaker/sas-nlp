<?xml version="1.0" encoding="UTF-8"?>
    <source package="hep.aida.ref">
        <import package="hep.aida.IAxis"/>
        <import package="hep.aida.IHistogram1D"/>
        <class name="Histogram1D" line="4">
            <extends class="AbstractHistogram1D"/>
            <implements interface="IHistogram1D"/>
            <javadoc line="4">
                A reference implementation of hep.aida.IHistogram1D.
                  The goal is to provide a clear implementation rather than the most efficient implementation.
                  However, performance seems fine - filling 1.2  10^6 points/sec, both using FixedAxis or VariableAxis.                
                <author>
                    Wolfgang Hoschek, Tony Johnson, and others.                    
                </author>
                <version>
                    1.0, 23/03/2000                    
                </version>
            </javadoc>
            <declaration name="errors" type="double[]" line="12"/>
            <declaration name="heights" type="double[]" line="13"/>
            <declaration name="entries" type="int[]" line="14"/>
            <declaration name="nEntry" type="int" line="15"/>
            <declaration name="sumWeight" type="double" line="16"/>
            <declaration name="sumWeightSquared" type="double" line="17"/>
            <declaration name="mean" type="double" line="18"/>
            <javadoc line="19">
                Creates a variable-width histogram.
                  Example: &lt;tt&gt;edges = (0.2, 1.0, 5.0)&lt;/tt&gt; yields an axis with 2 in-range bins &lt;tt&gt;[0.2,1.0), [1.0,5.0)&lt;/tt&gt; and 2 extra bins &lt;tt&gt;[-inf,0.2), [5.0,inf]&lt;/tt&gt;.                
                <param>
                    title The histogram title.                    
                </param>
                <param>
                    edges the bin boundaries the axis shall have;
                      must be sorted ascending and must not contain multiple identical elements.                    
                </param>
                <throws>
                    IllegalArgumentException if <tt>edges.length < 1</tt>.                    
                </throws>
            </javadoc>
            <method name="Histogram1D" type="constructor" line="27">
                <params>
                    <param name="title" type="String"/>
                    <param name="edges" type="double[]"/>
                </params>
            </method>
            <javadoc line="30">
                Creates a fixed-width histogram.                
                <param>
                    title The histogram title.                    
                </param>
                <param>
                    bins The number of bins.                    
                </param>
                <param>
                    min The minimum value on the X axis.                    
                </param>
                <param>
                    max The maximum value on the X axis.                    
                </param>
            </javadoc>
            <method name="Histogram1D" type="constructor" line="37">
                <params>
                    <param name="title" type="String"/>
                    <param name="bins" type="int"/>
                    <param name="min" type="double"/>
                    <param name="max" type="double"/>
                </params>
            </method>
            <javadoc line="40">
                Creates a histogram with the given axis binning.                
                <param>
                    title The histogram title.                    
                </param>
                <param>
                    axis The axis description to be used for binning.                    
                </param>
            </javadoc>
            <method name="Histogram1D" type="constructor" line="45">
                <params>
                    <param name="title" type="String"/>
                    <param name="axis" type="IAxis"/>
                </params>
                <declaration name="bins" type="int" line="48"/>
            </method>
            <method name="allEntries" type="int" line="53"/>
            <method name="binEntries" type="int" line="56">
                <params>
                    <param name="index" type="int"/>
                </params>
            </method>
            <method name="binError" type="double" line="59">
                <params>
                    <param name="index" type="int"/>
                </params>
            </method>
            <method name="binHeight" type="double" line="62">
                <params>
                    <param name="index" type="int"/>
                </params>
            </method>
            <method name="equivalentBinEntries" type="double" line="65"/>
            <method name="fill" type="void" line="68">
                <params>
                    <param name="x" type="double"/>
                </params>
                <declaration name="bin" type="int" line="69"/>
            </method>
            <method name="fill" type="void" line="79">
                <params>
                    <param name="x" type="double"/>
                    <param name="weight" type="double"/>
                </params>
                <declaration name="bin" type="int" line="80"/>
            </method>
            <method name="mean" type="double" line="90"/>
            <method name="reset" type="void" line="93">
                <scope line="94"/>
            </method>
            <method name="rms" type="double" line="105"/>
            <javadoc line="108">
                Used internally for creating slices and projections                
            </javadoc>
            <method name="setContents" type="void" line="111">
                <params>
                    <param name="entries" type="int[]"/>
                    <param name="heights" type="double[]"/>
                    <param name="errors" type="double[]"/>
                </params>
                <scope line="115"/>
            </method>
        </class>
    </source>