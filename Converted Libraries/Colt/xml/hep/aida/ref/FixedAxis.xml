<?xml version="1.0" encoding="UTF-8"?>
    <source package="hep.aida.ref">
        <import package="hep.aida.IAxis"/>
        <import package="hep.aida.IHistogram"/>
        <class name="FixedAxis" line="5">
            <comment line="17">
                Package private for ease of use in Histogram1D and Histogram2D                
            </comment>
            <implements interface="IAxis"/>
            <javadoc line="5">
                Fixed-width axis; A reference implementation of hep.aida.IAxis.                
                <author>
                    Wolfgang Hoschek, Tony Johnson, and others.                    
                </author>
                <version>
                    1.0, 23/03/2000                    
                </version>
            </javadoc>
            <declaration name="bins" type="int" line="13"/>
            <declaration name="min" type="double" line="14"/>
            <declaration name="binWidth" type="double" line="15"/>
            <declaration name="xunder" type="int" line="17"/>
            <javadoc line="18">
                Create an Axis                
                <param>
                    bins Number of bins                    
                </param>
                <param>
                    min Minimum for axis                    
                </param>
                <param>
                    max Maximum for axis                    
                </param>
            </javadoc>
            <method name="FixedAxis" type="constructor" line="25">
                <params>
                    <param name="bins" type="int"/>
                    <param name="min" type="double"/>
                    <param name="max" type="double"/>
                </params>
                <comment line="29">
                    Note, for internal consistency we save only min and binWidth                    
                </comment>
                <comment line="30">
                    and always use these quantities for all calculations. Due to                    
                </comment>
                <comment line="31">
                    rounding errors the return value from upperEdge is not necessarily                    
                </comment>
                <comment line="32">
                    exactly equal to max                    
                </comment>
                <comment line="38">
                    our internal definition of overflow/underflow differs from                    
                </comment>
                <comment line="39">
                    that of the outside world                    
                </comment>
                <comment line="40">
                    this.under = 0;                    
                </comment>
                <comment line="41">
                    this.over = bins+1;                    
                </comment>
            </method>
            <method name="binCentre" type="double" line="45">
                <params>
                    <param name="index" type="int"/>
                </params>
            </method>
            <method name="binLowerEdge" type="double" line="49">
                <params>
                    <param name="index" type="int"/>
                </params>
            </method>
            <method name="bins" type="int" line="55"/>
            <method name="binUpperEdge" type="double" line="59">
                <params>
                    <param name="index" type="int"/>
                </params>
            </method>
            <method name="binWidth" type="double" line="65">
                <params>
                    <param name="index" type="int"/>
                </params>
            </method>
            <method name="coordToIndex" type="int" line="69">
                <params>
                    <param name="coord" type="double"/>
                </params>
                <declaration name="index" type="int" line="71"/>
            </method>
            <method name="lowerEdge" type="double" line="77"/>
            <method name="upperEdge" type="double" line="81"/>
            <javadoc line="84">
                This package private method is similar to coordToIndex except
                  that it returns our internal definition for overflow/underflow                
            </javadoc>
            <method name="xgetBin" type="int" line="89">
                <params>
                    <param name="coord" type="double"/>
                </params>
                <declaration name="index" type="int" line="91"/>
            </method>
            <javadoc line="95">
                Package private method to map from the external representation of bin
                  number to our internal representation of bin number                
            </javadoc>
            <method name="xmap" type="int" line="100">
                <params>
                    <param name="index" type="int"/>
                </params>
            </method>
        </class>
    </source>