<?xml version="1.0" encoding="UTF-8"?>
    <source package="cern.colt.map">
        <import package="cern.colt.Timer"/>
        <class name="Benchmark" line="12">
            <extends class="Object"/>
            <javadoc line="12">
                Benchmarks the classes of this package.                
                <author>
                    wolfgang.hoschek@cern.ch                    
                </author>
                <version>
                    1.0, 09/24/99                    
                </version>
            </javadoc>
            <javadoc line="19">
                Makes this class non instantiable, but still let&apos;s others inherit from it.                
            </javadoc>
            <method name="Benchmark" type="constructor" line="22"/>
            <javadoc line="23">
                                
            </javadoc>
            <method name="benchmark" type="void" line="25">
                <params>
                    <param name="runs" type="int"/>
                    <param name="size" type="int"/>
                    <param name="kind" type="String"/>
                </params>
                <comment line="32">
                    for (int i=size; --i &gt;=0; ) {                    
                </comment>
                <comment line="45">
                    map.hashCollisions = 0;                    
                </comment>
                <comment line="49">
                    map.ensureCapacity(size*3);                    
                </comment>
                <comment line="78">
                    System.out.println(&quot;collisions=&quot;+map.hashCollisions);                    
                </comment>
                <declaration name="map" type="QuickOpenIntIntHashMap" line="26"/>
                <scope line="32"/>
                <scope line="36"/>
                <scope line="36"/>
                <declaration name="s" type="int" line="40"/>
                <declaration name="timer0" type="Timer" line="41"/>
                <declaration name="timer1" type="Timer" line="42"/>
                <declaration name="timer2" type="Timer" line="43"/>
                <scope line="45">
                    <scope line="46">
                        <scope line="50"/>
                    </scope>
                    <scope line="55">
                        <scope line="57"/>
                    </scope>
                    <scope line="62"/>
                </scope>
            </method>
            <javadoc line="80">
                Tests various methods of this class.                
            </javadoc>
            <method name="main" type="void" line="83">
                <params>
                    <param name="args" type="String"/>
                </params>
                <comment line="87">
                    boolean add = args[2].equals(&quot;add&quot;);                    
                </comment>
                <declaration name="runs" type="int" line="84"/>
                <declaration name="size" type="int" line="85"/>
                <declaration name="kind" type="String" line="87"/>
            </method>
            <javadoc line="90">
                                
            </javadoc>
            <method name="test2" type="void" line="92">
                <params>
                    <param name="length" type="int"/>
                </params>
                <comment line="95">
                    using a map
                    int[]    keys   = {0    , 3     , 277+3, 277*2+3, 100000, 9    };
                    double[] values = {100.0, 1000.0, 277+3, 277*2+3, 70.0  , 71.0 ,};
                    int[]    keys   = {0,1,3,4,5,6, 271,272,273,274,275,276,277+5, 277+6,277+7};                    
                </comment>
                <comment line="107">
                    AbstractIntIntMap map = new OpenIntIntHashMap(size*2, 0.2, 0.5);                    
                </comment>
                <comment line="112">
                    System.out.println(map);                    
                </comment>
                <comment line="115">
                    System.out.println(map.containsKey(3));
                    System.out.println(map.get(3));
                    
                    System.out.println(map.containsKey(4));
                    System.out.println(map.get(4));
                    
                    System.out.println(map.containsValue((int)71.0));
                    System.out.println(map.keyOf((int)71.0));                    
                </comment>
                <comment line="126">
                    System.out.println(map);
                    System.out.println(map.keys());
                    System.out.println(map.values());                    
                </comment>
                <comment line="129">
                    if (map instanceof QuickOpenIntIntHashMap) {
                    System.out.println(&quot;totalProbesSaved=&quot;+((QuickOpenIntIntHashMap)map).totalProbesSaved);
                    }
                    System.out.println(&quot;probes=&quot;+map.hashCollisions);
                    
                    map.hashCollisions = 0;                    
                </comment>
                <comment line="140">
                    System.out.println(map);                    
                </comment>
                <comment line="142">
                    System.out.println(&quot;probes=&quot;+map.hashCollisions);                    
                </comment>
                <declaration name="uniform" type="cern.jet.random.Uniform" line="93"/>
                <declaration name="keys" type="int[]" line="98"/>
                <declaration name="to" type="int" line="99"/>
                <scope line="100"/>
                <declaration name="values" type="int[]" line="103"/>
                <declaration name="size" type="int" line="105"/>
                <declaration name="map" type="AbstractIntIntMap" line="107"/>
                <scope line="109"/>
                <declaration name="sum" type="int" line="136"/>
                <scope line="137"/>
            </method>
        </class>
    </source>