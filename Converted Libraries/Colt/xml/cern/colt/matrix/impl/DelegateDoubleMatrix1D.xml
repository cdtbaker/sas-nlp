<?xml version="1.0" encoding="UTF-8"?>
    <source package="cern.colt.matrix.impl">
        <import package="cern.colt.matrix.DoubleMatrix1D"/>
        <import package="cern.colt.matrix.DoubleMatrix2D"/>
        <class name="DelegateDoubleMatrix1D" line="4">
            <extends class="WrapperDoubleMatrix1D"/>
            <javadoc line="4">
                1-d matrix holding &lt;tt&gt;double&lt;/tt&gt; elements; either a view wrapping another 2-d matrix and therefore delegating calls to it.                
                <author>
                    wolfgang.hoschek@cern.ch                    
                </author>
                <version>
                    1.0, 09/24/99                    
                </version>
            </javadoc>
            <declaration name="content" type="DoubleMatrix2D" line="10"/>
            <declaration name="row" type="int" line="11"/>
            <method name="DelegateDoubleMatrix1D" type="constructor" line="12">
                <params>
                    <param name="newContent" type="DoubleMatrix2D"/>
                    <param name="row" type="int"/>
                </params>
            </method>
            <javadoc line="19">
                Returns the matrix cell value at coordinate &lt;tt&gt;index&lt;/tt&gt;.
                  &lt;p&gt;Provided with invalid parameters this method may return invalid objects without throwing any exception.
                  &lt;b&gt;You should only use this method when you are absolutely sure that the coordinate is within bounds.&lt;/b&gt;
                  Precondition (unchecked): &lt;tt&gt;index&amp;lt;0 || index&amp;gt;=size()&lt;/tt&gt;.                
                <param>
                    index   the index of the cell.                    
                </param>
                <return>
                    the value of the specified cell.                    
                </return>
            </javadoc>
            <method name="getQuick" type="double" line="27">
                <params>
                    <param name="index" type="int"/>
                </params>
            </method>
            <javadoc line="30">
                Construct and returns a new empty matrix &lt;i&gt;of the same dynamic type&lt;/i&gt; as the receiver, having the specified size.
                  For example, if the receiver is an instance of type &lt;tt&gt;DenseDoubleMatrix1D&lt;/tt&gt; the new matrix must also be of type &lt;tt&gt;DenseDoubleMatrix1D&lt;/tt&gt;,
                  if the receiver is an instance of type &lt;tt&gt;SparseDoubleMatrix1D&lt;/tt&gt; the new matrix must also be of type &lt;tt&gt;SparseDoubleMatrix1D&lt;/tt&gt;, etc.
                  In general, the new matrix should have internal parametrization as similar as possible.                
                <param>
                    size the number of cell the matrix shall have.                    
                </param>
                <return>
                    a new empty matrix of the same dynamic type.                    
                </return>
            </javadoc>
            <method name="like" type="DoubleMatrix1D" line="38">
                <params>
                    <param name="size" type="int"/>
                </params>
            </method>
            <javadoc line="41">
                Construct and returns a new 2-d matrix &lt;i&gt;of the corresponding dynamic type&lt;/i&gt;, entirelly independent of the receiver.
                  For example, if the receiver is an instance of type &lt;tt&gt;DenseDoubleMatrix1D&lt;/tt&gt; the new matrix must be of type &lt;tt&gt;DenseDoubleMatrix2D&lt;/tt&gt;,
                  if the receiver is an instance of type &lt;tt&gt;SparseDoubleMatrix1D&lt;/tt&gt; the new matrix must be of type &lt;tt&gt;SparseDoubleMatrix2D&lt;/tt&gt;, etc.                
                <param>
                    rows the number of rows the matrix shall have.                    
                </param>
                <param>
                    columns the number of columns the matrix shall have.                    
                </param>
                <return>
                    a new matrix of the corresponding dynamic type.                    
                </return>
            </javadoc>
            <method name="like2D" type="DoubleMatrix2D" line="49">
                <params>
                    <param name="rows" type="int"/>
                    <param name="columns" type="int"/>
                </params>
            </method>
            <javadoc line="52">
                Sets the matrix cell at coordinate &lt;tt&gt;index&lt;/tt&gt; to the specified value.
                  &lt;p&gt;Provided with invalid parameters this method may access illegal indexes without throwing any exception.
                  &lt;b&gt;You should only use this method when you are absolutely sure that the coordinate is within bounds.&lt;/b&gt;
                  Precondition (unchecked): &lt;tt&gt;index&amp;lt;0 || index&amp;gt;=size()&lt;/tt&gt;.                
                <param>
                    index   the index of the cell.                    
                </param>
                <param>
                    value the value to be filled into the specified cell.                    
                </param>
            </javadoc>
            <method name="setQuick" type="void" line="60">
                <params>
                    <param name="index" type="int"/>
                    <param name="value" type="double"/>
                </params>
            </method>
        </class>
    </source>