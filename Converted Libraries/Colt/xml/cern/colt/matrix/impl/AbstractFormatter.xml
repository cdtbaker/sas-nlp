<?xml version="1.0" encoding="UTF-8"?>
    <source package="cern.colt.matrix.impl">
        <class name="AbstractFormatter" line="2">
            <extends class="cern.colt.PersistentObject"/>
            <javadoc line="2">
                Abstract base class for flexible, well human readable matrix print formatting.
                  Value type independent.
                  A single cell is formatted via a format string.
                  Columns can be aligned left, centered, right and by decimal point. 
                  &lt;p&gt;A column can be broader than specified by the parameter &lt;tt&gt;minColumnWidth&lt;/tt&gt; 
                  (because a cell may not fit into that width) but a column is never smaller than 
                  &lt;tt&gt;minColumnWidth&lt;/tt&gt;. Normally one does not need to specify &lt;tt&gt;minColumnWidth&lt;/tt&gt;.
                  Cells in a row are separated by a separator string, similar separators can be set for rows and slices.
                  For more info, see the concrete subclasses.                
                <author>
                    wolfgang.hoschek@cern.ch                    
                </author>
                <version>
                    1.0, 09/24/99                    
                </version>
            </javadoc>
            <declaration name="LEFT" type="String" line="16"/>
            <javadoc line="16">
                The alignment string aligning the cells of a column to the left.                
            </javadoc>
            <declaration name="CENTER" type="String" line="20"/>
            <javadoc line="20">
                The alignment string aligning the cells of a column to its center.                
            </javadoc>
            <declaration name="RIGHT" type="String" line="24"/>
            <javadoc line="24">
                The alignment string aligning the cells of a column to the right.                
            </javadoc>
            <declaration name="DECIMAL" type="String" line="28"/>
            <javadoc line="28">
                The alignment string aligning the cells of a column to the decimal point.                
            </javadoc>
            <declaration name="DEFAULT_MIN_COLUMN_WIDTH" type="int" line="32"/>
            <javadoc line="32">
                The default minimum number of characters a column may have; currently &lt;tt&gt;1&lt;/tt&gt;.                
            </javadoc>
            <declaration name="DEFAULT_COLUMN_SEPARATOR" type="String" line="36"/>
            <javadoc line="36">
                The default string separating any two columns from another; currently &lt;tt&gt;&quot; &quot;&lt;/tt&gt;.                
            </javadoc>
            <declaration name="DEFAULT_ROW_SEPARATOR" type="String" line="40"/>
            <javadoc line="40">
                The default string separating any two rows from another; currently &lt;tt&gt;&quot;\n&quot;&lt;/tt&gt;.                
            </javadoc>
            <declaration name="DEFAULT_SLICE_SEPARATOR" type="String" line="44"/>
            <javadoc line="44">
                The default string separating any two slices from another; currently &lt;tt&gt;&quot;\n\n&quot;&lt;/tt&gt;.                
            </javadoc>
            <declaration name="alignment" type="String" line="48"/>
            <javadoc line="48">
                The default format string for formatting a single cell value; currently &lt;tt&gt;&quot;%G&quot;&lt;/tt&gt;.                
            </javadoc>
            <declaration name="format" type="String" line="52"/>
            <javadoc line="52">
                The default format string for formatting a single cell value; currently &lt;tt&gt;&quot;%G&quot;&lt;/tt&gt;.                
            </javadoc>
            <declaration name="minColumnWidth" type="int" line="56"/>
            <javadoc line="56">
                The default minimum number of characters a column may have; currently &lt;tt&gt;1&lt;/tt&gt;.                
            </javadoc>
            <declaration name="columnSeparator" type="String" line="60"/>
            <javadoc line="60">
                The default string separating any two columns from another; currently &lt;tt&gt;&quot; &quot;&lt;/tt&gt;.                
            </javadoc>
            <declaration name="rowSeparator" type="String" line="64"/>
            <javadoc line="64">
                The default string separating any two rows from another; currently &lt;tt&gt;&quot;\n&quot;&lt;/tt&gt;.                
            </javadoc>
            <declaration name="sliceSeparator" type="String" line="68"/>
            <javadoc line="68">
                The default string separating any two slices from another; currently &lt;tt&gt;&quot;\n\n&quot;&lt;/tt&gt;.                
            </javadoc>
            <declaration name="printShape" type="boolean" line="72"/>
            <javadoc line="72">
                Tells whether String representations are to be preceded with summary of the shape; currently &lt;tt&gt;true&lt;/tt&gt;.                
            </javadoc>
            <declaration name="blanksCache" type="String[]" line="76"/>
            <declaration name="factory" type="FormerFactory" line="77"/>
            <scope line="78"/>
            <javadoc line="81">
                Makes this class non instantiable, but still let&apos;s others inherit from it.                
            </javadoc>
            <method name="AbstractFormatter" type="constructor" line="84"/>
            <javadoc line="86">
                Modifies the strings in a column of the string matrix to be aligned (left,centered,right,decimal).                
            </javadoc>
            <method name="align" type="void" line="89">
                <params>
                    <param name="strings" type="String[][]"/>
                </params>
                <declaration name="rows" type="int" line="90"/>
                <declaration name="columns" type="int" line="91"/>
                <declaration name="maxColWidth" type="int[]" line="93"/>
                <declaration name="maxColLead" type="int[]" line="94"/>
                <declaration name="isDecimal" type="boolean" line="95"/>
                <scope line="97">
                    <declaration name="maxWidth" type="int" line="98"/>
                    <declaration name="maxLead" type="int" line="99"/>
                    <scope line="100">
                        <declaration name="s" type="String" line="101"/>
                    </scope>
                </scope>
                <scope line="108"/>
            </method>
            <javadoc line="112">
                Converts a row into a string.                
            </javadoc>
            <method name="alignmentCode" type="int" line="115">
                <params>
                    <param name="alignment" type="String"/>
                </params>
            </method>
            <javadoc line="122">
                Modifies the strings the string matrix to be aligned (left,centered,right,decimal).                
            </javadoc>
            <method name="alignRow" type="void" line="125">
                <params>
                    <param name="row" type="String[]"/>
                    <param name="maxColWidth" type="int[]"/>
                    <param name="maxColLead" type="int[]"/>
                </params>
                <declaration name="align" type="int" line="126"/>
                <declaration name="s" type="StringBuffer" line="127"/>
                <declaration name="columns" type="int" line="128"/>
                <scope line="129">
                    <declaration name="c" type="String" line="131"/>
                    <scope line="132"/>
                    <scope line="136"/>
                    <scope line="141"/>
                    <scope line="146"/>
                </scope>
            </method>
            <javadoc line="154">
                Returns a String with &lt;tt&gt;length&lt;/tt&gt; blanks.                
            </javadoc>
            <method name="blanks" type="String" line="157">
                <params>
                    <param name="length" type="int"/>
                </params>
                <declaration name="buf" type="StringBuffer" line="160"/>
                <scope line="161"/>
            </method>
            <javadoc line="166">
                Demonstrates how to use this class.                
            </javadoc>
            <method name="demo1" type="void" line="169"/>
            <javadoc line="171">
                Demonstrates how to use this class.                
            </javadoc>
            <method name="demo2" type="void" line="174"/>
            <javadoc line="176">
                Demonstrates how to use this class.                
            </javadoc>
            <method name="demo3" type="void" line="179">
                <params>
                    <param name="size" type="int"/>
                    <param name="value" type="Object"/>
                </params>
            </method>
            <method name="form" type="String" line="181"/>
            <javadoc line="181">
                Converts a given cell to a String; no alignment considered.                
            </javadoc>
            <method name="format" type="String[][]" line="185"/>
            <javadoc line="185">
                Returns a string representations of all cells; no alignment considered.                
            </javadoc>
            <javadoc line="189">
                Returns a string representations of all cells; no alignment considered.                
            </javadoc>
            <method name="formatRow" type="String[]" line="192">
                <params>
                    <param name="vector" type="AbstractMatrix1D"/>
                </params>
                <declaration name="formatter" type="Former" line="193"/>
                <declaration name="s" type="int" line="195"/>
                <declaration name="strings" type="String[]" line="196"/>
                <scope line="197"/>
            </method>
            <javadoc line="202">
                Returns the number of characters or the number of characters before the decimal point.                
            </javadoc>
            <method name="lead" type="int" line="205">
                <params>
                    <param name="s" type="String"/>
                </params>
            </method>
            <javadoc line="208">
                Returns a String with the given character repeated &lt;tt&gt;length&lt;/tt&gt; times.                
            </javadoc>
            <method name="repeat" type="String" line="211">
                <params>
                    <param name="character" type="char"/>
                    <param name="length" type="int"/>
                </params>
                <declaration name="buf" type="StringBuffer" line="214"/>
                <scope line="215"/>
            </method>
            <javadoc line="220">
                Sets the column alignment (left,center,right,decimal).                
                <param>
                    alignment the new alignment to be used; must be one of <tt>{LEFT,CENTER,RIGHT,DECIMAL}</tt>.                    
                </param>
            </javadoc>
            <method name="setAlignment" type="void" line="224">
                <params>
                    <param name="alignment" type="String"/>
                </params>
            </method>
            <javadoc line="227">
                Sets the string separating any two columns from another.                
                <param>
                    columnSeparator the new columnSeparator to be used.                    
                </param>
            </javadoc>
            <method name="setColumnSeparator" type="void" line="231">
                <params>
                    <param name="columnSeparator" type="String"/>
                </params>
            </method>
            <javadoc line="234">
                Sets the way a &lt;i&gt;single&lt;/i&gt; cell value is to be formatted.                
                <param>
                    format the new format to be used.                    
                </param>
            </javadoc>
            <method name="setFormat" type="void" line="238">
                <params>
                    <param name="format" type="String"/>
                </params>
            </method>
            <javadoc line="241">
                Sets the minimum number of characters a column may have.                
                <param>
                    minColumnWidth the new minColumnWidth to be used.                    
                </param>
            </javadoc>
            <method name="setMinColumnWidth" type="void" line="245">
                <params>
                    <param name="minColumnWidth" type="int"/>
                </params>
            </method>
            <javadoc line="249">
                Specifies whether a string representation of a matrix is to be preceded with a summary of its shape.                
                <param>
                    printShape <tt>true</tt> shape summary is printed, otherwise not printed.                    
                </param>
            </javadoc>
            <method name="setPrintShape" type="void" line="253">
                <params>
                    <param name="printShape" type="boolean"/>
                </params>
            </method>
            <javadoc line="256">
                Sets the string separating any two rows from another.                
                <param>
                    rowSeparator the new rowSeparator to be used.                    
                </param>
            </javadoc>
            <method name="setRowSeparator" type="void" line="260">
                <params>
                    <param name="rowSeparator" type="String"/>
                </params>
            </method>
            <javadoc line="263">
                Sets the string separating any two slices from another.                
                <param>
                    sliceSeparator the new sliceSeparator to be used.                    
                </param>
            </javadoc>
            <method name="setSliceSeparator" type="void" line="267">
                <params>
                    <param name="sliceSeparator" type="String"/>
                </params>
            </method>
            <javadoc line="270">
                Cache for faster string processing.                
            </javadoc>
            <method name="setupBlanksCache" type="void" line="273">
                <declaration name="size" type="int" line="274"/>
                <declaration name="buf" type="StringBuffer" line="276"/>
                <declaration name="str" type="String" line="278"/>
                <scope line="279"/>
            </method>
            <javadoc line="283">
                Returns a short string representation describing the shape of the matrix.                
            </javadoc>
            <method name="shape" type="String" line="286">
                <params>
                    <param name="matrix" type="AbstractMatrix1D"/>
                </params>
            </method>
            <javadoc line="289">
                Returns a short string representation describing the shape of the matrix.                
            </javadoc>
            <method name="shape" type="String" line="292">
                <params>
                    <param name="matrix" type="AbstractMatrix2D"/>
                </params>
            </method>
            <javadoc line="295">
                Returns a short string representation describing the shape of the matrix.                
            </javadoc>
            <method name="shape" type="String" line="298">
                <params>
                    <param name="matrix" type="AbstractMatrix3D"/>
                </params>
            </method>
            <javadoc line="301">
                Returns a single string representation of the given string matrix.                
                <param>
                    strings the matrix to be converted to a single string.                    
                </param>
            </javadoc>
            <method name="toString" type="String" line="305">
                <params>
                    <param name="strings" type="String[][]"/>
                </params>
                <declaration name="rows" type="int" line="306"/>
                <declaration name="columns" type="int" line="307"/>
                <declaration name="total" type="StringBuffer" line="308"/>
                <declaration name="s" type="StringBuffer" line="309"/>
                <scope line="310">
                    <scope line="312"/>
                </scope>
            </method>
            <javadoc line="321">
                Returns a string representation of the given matrix.                
                <param>
                    matrix the matrix to convert.                    
                </param>
            </javadoc>
            <method name="toString" type="String" line="325">
                <params>
                    <param name="matrix" type="AbstractMatrix2D"/>
                </params>
                <declaration name="strings" type="String[][]" line="326"/>
                <declaration name="total" type="StringBuffer" line="328"/>
            </method>
        </class>
    </source>