<?xml version="1.0" encoding="UTF-8"?>
    <source package="cern.colt.matrix.bench">
        <import package="cern.colt.matrix.DoubleFactory2D"/>
        <import package="cern.colt.matrix.DoubleFactory3D"/>
        <import package="cern.colt.matrix.DoubleMatrix2D"/>
        <import package="cern.colt.matrix.DoubleMatrix3D"/>
        <class name="BenchmarkMatrix" line="6">
            <javadoc line="6">
                Configurable matrix benchmark.
                  Runs the operations defined in main(args) or in the file specified by args.
                  To get &lt;a href=&quot;doc-files/usage.txt&quot;&gt;this overall help&lt;/a&gt; on usage type &lt;tt&gt;java cern.colt.matrix.bench.BenchmarkMatrix -help&lt;/tt&gt;.
                  To get help on usage of a given command, type &lt;tt&gt;java cern.colt.matrix.bench.BenchmarkMatrix -help &amp;lt;command&amp;gt;&lt;/tt&gt;.
                  Here is the &lt;a href=&quot;doc-files/usage_dgemm.txt&quot;&gt;help ouput for the dgemm&lt;/a&gt; command.
                  &lt;a href=&quot;../doc-files/dgemmColt1.0.1ibm1.3LxPIII_2.txt&quot;&gt;Here&lt;/a&gt; is a sample result.
                  For more results see the &lt;a href=&quot;../doc-files/performanceLog.html&quot;&gt;performance log&lt;/a&gt;.                
                <author>
                    wolfgang.hoschek@cern.ch                    
                </author>
                <version>
                    0.5, 10-May-2000                    
                </version>
            </javadoc>
            <javadoc line="18">
                Benchmark constructor comment.                
            </javadoc>
            <method name="BenchmarkMatrix" type="constructor" line="21"/>
            <javadoc line="23">
                Not yet documented.                
            </javadoc>
            <method name="bench_dgemm" type="void" line="26">
                <params>
                    <param name="args" type="String[]"/>
                </params>
                <declaration name="types" type="String[]" line="27"/>
                <declaration name="cpus" type="int" line="28"/>
                <declaration name="minSecs" type="double" line="29"/>
                <declaration name="transposeA" type="boolean" line="30"/>
                <declaration name="transposeB" type="boolean" line="31"/>
                <declaration name="densities" type="double[]" line="32"/>
                <declaration name="sizes" type="int[]" line="33"/>
                <scope line="34">
                    <declaration name="k" type="int" line="35"/>
                </scope>
                <scope line="45"/>
                <declaration name="fun" type="Double2DProcedure" line="51"/>
                <declaration name="title" type="String" line="52"/>
                <declaration name="params" type="String" line="53"/>
            </method>
            <javadoc line="57">
                Not yet documented.                
            </javadoc>
            <method name="bench_dgemv" type="void" line="60">
                <params>
                    <param name="args" type="String[]"/>
                </params>
                <declaration name="types" type="String[]" line="61"/>
                <declaration name="cpus" type="int" line="62"/>
                <declaration name="minSecs" type="double" line="63"/>
                <declaration name="transposeA" type="boolean" line="64"/>
                <declaration name="densities" type="double[]" line="65"/>
                <declaration name="sizes" type="int[]" line="66"/>
                <scope line="67">
                    <declaration name="k" type="int" line="68"/>
                </scope>
                <scope line="77"/>
                <declaration name="fun" type="Double2DProcedure" line="83"/>
                <declaration name="title" type="String" line="84"/>
                <declaration name="params" type="String" line="85"/>
            </method>
            <javadoc line="89">
                Not yet documented.                
            </javadoc>
            <method name="bench_pow" type="void" line="92">
                <params>
                    <param name="args" type="String[]"/>
                </params>
                <declaration name="types" type="String[]" line="93"/>
                <declaration name="cpus" type="int" line="94"/>
                <declaration name="minSecs" type="double" line="95"/>
                <declaration name="densities" type="double[]" line="96"/>
                <declaration name="exponent" type="int" line="97"/>
                <declaration name="sizes" type="int[]" line="98"/>
                <scope line="99">
                    <declaration name="k" type="int" line="100"/>
                </scope>
                <scope line="109"/>
                <declaration name="fun" type="Double2DProcedure" line="115"/>
                <declaration name="title" type="String" line="116"/>
                <declaration name="params" type="String" line="117"/>
            </method>
            <javadoc line="121">
                Not yet documented.                
            </javadoc>
            <method name="benchGeneric" type="void" line="124">
                <params>
                    <param name="fun" type="Double2DProcedure"/>
                    <param name="args" type="String[]"/>
                </params>
                <declaration name="types" type="String[]" line="125"/>
                <declaration name="cpus" type="int" line="126"/>
                <declaration name="minSecs" type="double" line="127"/>
                <declaration name="densities" type="double[]" line="128"/>
                <declaration name="sizes" type="int[]" line="129"/>
                <scope line="130">
                    <declaration name="k" type="int" line="131"/>
                </scope>
                <scope line="139"/>
                <declaration name="title" type="String" line="145"/>
            </method>
            <javadoc line="148">
                                
            </javadoc>
            <method name="commands" type="String" line="150"/>
            <javadoc line="153">
                Linear algebrax matrix-matrix multiply.                
            </javadoc>
            <method name="fun_dgemm" type="Double2DProcedure" line="156">
                <params>
                    <param name="transposeA" type="boolean"/>
                    <param name="transposeB" type="boolean"/>
                </params>
                <anonymous_class line="157">
                    <method name="toString" type="String" line="158"/>
                    <method name="setParameters" type="void" line="161">
                        <params>
                            <param name="G" type="DoubleMatrix2D"/>
                            <param name="H" type="DoubleMatrix2D"/>
                        </params>
                    </method>
                    <method name="init" type="void" line="167"/>
                    <method name="apply" type="void" line="170">
                        <params>
                            <param name="timer" type="cern.colt.Timer"/>
                        </params>
                    </method>
                    <method name="operations" type="double" line="173">
                        <declaration name="m" type="double" line="174"/>
                        <declaration name="n" type="double" line="175"/>
                        <declaration name="p" type="double" line="176"/>
                    </method>
                </anonymous_class>
            </method>
            <javadoc line="182">
                Linear algebrax matrix-matrix multiply.                
            </javadoc>
            <method name="fun_dgemv" type="Double2DProcedure" line="185">
                <params>
                    <param name="transposeA" type="boolean"/>
                </params>
                <anonymous_class line="186">
                    <method name="toString" type="String" line="187"/>
                    <method name="setParameters" type="void" line="190">
                        <params>
                            <param name="G" type="DoubleMatrix2D"/>
                            <param name="H" type="DoubleMatrix2D"/>
                        </params>
                    </method>
                    <method name="init" type="void" line="196"/>
                    <method name="apply" type="void" line="199">
                        <params>
                            <param name="timer" type="cern.colt.Timer"/>
                        </params>
                    </method>
                    <method name="operations" type="double" line="202">
                        <declaration name="m" type="double" line="203"/>
                        <declaration name="n" type="double" line="204"/>
                    </method>
                </anonymous_class>
            </method>
            <javadoc line="210">
                2D assign with get,set                
            </javadoc>
            <method name="fun_pow" type="Double2DProcedure" line="213">
                <params>
                    <param name="k" type="int"/>
                </params>
                <anonymous_class line="214">
                    <declaration name="dummy" type="double" line="215"/>
                    <method name="toString" type="String" line="216"/>
                    <method name="setParameters" type="void" line="219">
                        <params>
                            <param name="A" type="DoubleMatrix2D"/>
                            <param name="B" type="DoubleMatrix2D"/>
                        </params>
                        <scope line="220">
                            <scope line="221"/>
                        </scope>
                    </method>
                    <method name="init" type="void" line="227"/>
                    <method name="apply" type="void" line="229">
                        <params>
                            <param name="timer" type="cern.colt.Timer"/>
                        </params>
                    </method>
                    <method name="operations" type="double" line="232">
                        <declaration name="m" type="double" line="233"/>
                        <declaration name="mflops" type="double" line="235"/>
                        <scope line="236">
                            <declaration name="N" type="double" line="237"/>
                            <declaration name="n" type="double" line="239"/>
                            <declaration name="nx" type="double" line="240"/>
                        </scope>
                    </method>
                </anonymous_class>
            </method>
            <javadoc line="249">
                2D assign with A.assign(B)                
            </javadoc>
            <method name="funAssign" type="Double2DProcedure" line="252">
                <anonymous_class line="253">
                    <method name="toString" type="String" line="254"/>
                    <method name="init" type="void" line="257"/>
                    <method name="apply" type="void" line="260">
                        <params>
                            <param name="timer" type="cern.colt.Timer"/>
                        </params>
                    </method>
                </anonymous_class>
            </method>
            <javadoc line="266">
                2D assign with get,set                
            </javadoc>
            <method name="funAssignGetSet" type="Double2DProcedure" line="269">
                <anonymous_class line="270">
                    <method name="toString" type="String" line="271"/>
                    <method name="init" type="void" line="274"/>
                    <method name="apply" type="void" line="277">
                        <params>
                            <param name="timer" type="cern.colt.Timer"/>
                        </params>
                        <declaration name="rows" type="int" line="278"/>
                        <declaration name="columns" type="int" line="279"/>
                        <scope line="280">
                            <scope line="281"/>
                        </scope>
                    </method>
                </anonymous_class>
            </method>
            <javadoc line="289">
                2D assign with getQuick,setQuick                
            </javadoc>
            <method name="funAssignGetSetQuick" type="Double2DProcedure" line="292">
                <anonymous_class line="293">
                    <method name="toString" type="String" line="294"/>
                    <method name="init" type="void" line="297"/>
                    <method name="apply" type="void" line="300">
                        <params>
                            <param name="timer" type="cern.colt.Timer"/>
                        </params>
                        <declaration name="rows" type="int" line="301"/>
                        <declaration name="columns" type="int" line="302"/>
                        <scope line="303">
                            <scope line="304"/>
                        </scope>
                    </method>
                </anonymous_class>
            </method>
            <javadoc line="312">
                2D assign with A.assign(B)                
            </javadoc>
            <method name="funAssignLog" type="Double2DProcedure" line="315">
                <anonymous_class line="316">
                    <method name="toString" type="String" line="317"/>
                    <method name="init" type="void" line="320"/>
                    <method name="apply" type="void" line="323">
                        <params>
                            <param name="timer" type="cern.colt.Timer"/>
                        </params>
                    </method>
                </anonymous_class>
            </method>
            <javadoc line="329">
                2D assign with A.assign(B)                
            </javadoc>
            <method name="funAssignPlusMult" type="Double2DProcedure" line="332">
                <anonymous_class line="333">
                    <method name="toString" type="String" line="334"/>
                    <method name="init" type="void" line="337"/>
                    <method name="apply" type="void" line="340">
                        <params>
                            <param name="timer" type="cern.colt.Timer"/>
                        </params>
                    </method>
                    <method name="operations" type="double" line="343">
                        <declaration name="m" type="double" line="344"/>
                        <declaration name="n" type="double" line="345"/>
                    </method>
                </anonymous_class>
            </method>
            <javadoc line="351">
                Linear algebrax matrix-matrix multiply.                
            </javadoc>
            <method name="funCorrelation" type="Double2DProcedure" line="354">
                <anonymous_class line="355">
                    <method name="toString" type="String" line="356"/>
                    <method name="init" type="void" line="359"/>
                    <method name="setParameters" type="void" line="361">
                        <params>
                            <param name="A" type="DoubleMatrix2D"/>
                            <param name="B" type="DoubleMatrix2D"/>
                        </params>
                    </method>
                    <method name="apply" type="void" line="364">
                        <params>
                            <param name="timer" type="cern.colt.Timer"/>
                        </params>
                    </method>
                    <method name="operations" type="double" line="367">
                        <declaration name="m" type="double" line="368"/>
                        <declaration name="n" type="double" line="369"/>
                    </method>
                </anonymous_class>
            </method>
            <javadoc line="375">
                Element-by-element matrix-matrix multiply.                
            </javadoc>
            <method name="funElementwiseMult" type="Double2DProcedure" line="378">
                <anonymous_class line="379">
                    <method name="toString" type="String" line="380"/>
                    <method name="init" type="void" line="383"/>
                    <method name="apply" type="void" line="386">
                        <params>
                            <param name="timer" type="cern.colt.Timer"/>
                        </params>
                    </method>
                </anonymous_class>
            </method>
            <javadoc line="392">
                Element-by-element matrix-matrix multiply.                
            </javadoc>
            <method name="funElementwiseMultB" type="Double2DProcedure" line="395">
                <anonymous_class line="396">
                    <method name="toString" type="String" line="397"/>
                    <method name="init" type="void" line="400"/>
                    <method name="apply" type="void" line="403">
                        <params>
                            <param name="timer" type="cern.colt.Timer"/>
                        </params>
                    </method>
                </anonymous_class>
            </method>
            <javadoc line="409">
                2D assign with get,set                
            </javadoc>
            <method name="funGetQuick" type="Double2DProcedure" line="412">
                <anonymous_class line="413">
                    <declaration name="dummy" type="double" line="414"/>
                    <method name="toString" type="String" line="415"/>
                    <method name="init" type="void" line="418"/>
                    <method name="apply" type="void" line="420">
                        <params>
                            <param name="timer" type="cern.colt.Timer"/>
                        </params>
                        <declaration name="rows" type="int" line="421"/>
                        <declaration name="columns" type="int" line="422"/>
                        <declaration name="sum" type="double" line="423"/>
                        <scope line="424">
                            <scope line="425"/>
                        </scope>
                    </method>
                </anonymous_class>
            </method>
            <javadoc line="434">
                2D assign with getQuick,setQuick                
            </javadoc>
            <method name="funLUDecompose" type="Double2DProcedure" line="437">
                <anonymous_class line="438">
                    <declaration name="lu" type="cern.colt.matrix.linalg.LUDecompositionQuick" line="439"/>
                    <method name="toString" type="String" line="440"/>
                    <method name="init" type="void" line="443"/>
                    <method name="apply" type="void" line="446">
                        <params>
                            <param name="timer" type="cern.colt.Timer"/>
                        </params>
                    </method>
                    <method name="operations" type="double" line="449">
                        <declaration name="N" type="double" line="450"/>
                    </method>
                </anonymous_class>
            </method>
            <javadoc line="456">
                2D assign with getQuick,setQuick                
            </javadoc>
            <method name="funLUSolve" type="Double2DProcedure" line="459">
                <anonymous_class line="460">
                    <declaration name="lu" type="cern.colt.matrix.linalg.LUDecompositionQuick" line="461"/>
                    <method name="toString" type="String" line="462"/>
                    <method name="setParameters" type="void" line="465">
                        <params>
                            <param name="A" type="DoubleMatrix2D"/>
                            <param name="B" type="DoubleMatrix2D"/>
                        </params>
                        <scope line="467"/>
                    </method>
                    <method name="init" type="void" line="474"/>
                    <method name="apply" type="void" line="477">
                        <params>
                            <param name="timer" type="cern.colt.Timer"/>
                        </params>
                    </method>
                    <method name="operations" type="double" line="480">
                        <declaration name="n" type="double" line="481"/>
                        <declaration name="nx" type="double" line="482"/>
                    </method>
                </anonymous_class>
            </method>
            <javadoc line="488">
                Linear algebrax matrix-matrix multiply.                
            </javadoc>
            <method name="funMatMultLarge" type="Double2DProcedure" line="491">
                <anonymous_class line="492">
                    <method name="toString" type="String" line="493"/>
                    <method name="setParameters" type="void" line="496">
                        <params>
                            <param name="A" type="DoubleMatrix2D"/>
                            <param name="B" type="DoubleMatrix2D"/>
                        </params>
                    </method>
                    <method name="init" type="void" line="501"/>
                    <method name="apply" type="void" line="504">
                        <params>
                            <param name="timer" type="cern.colt.Timer"/>
                        </params>
                    </method>
                    <method name="operations" type="double" line="507">
                        <declaration name="m" type="double" line="508"/>
                        <declaration name="n" type="double" line="509"/>
                        <declaration name="p" type="double" line="510"/>
                    </method>
                </anonymous_class>
            </method>
            <javadoc line="516">
                Linear algebrax matrix-vector multiply.                
            </javadoc>
            <method name="funMatVectorMult" type="Double2DProcedure" line="519">
                <anonymous_class line="520">
                    <method name="toString" type="String" line="521"/>
                    <method name="setParameters" type="void" line="524">
                        <params>
                            <param name="G" type="DoubleMatrix2D"/>
                            <param name="H" type="DoubleMatrix2D"/>
                        </params>
                    </method>
                    <method name="init" type="void" line="530"/>
                    <method name="apply" type="void" line="533">
                        <params>
                            <param name="timer" type="cern.colt.Timer"/>
                        </params>
                    </method>
                    <method name="operations" type="double" line="536">
                        <declaration name="m" type="double" line="537"/>
                        <declaration name="n" type="double" line="538"/>
                    </method>
                </anonymous_class>
            </method>
            <javadoc line="544">
                2D assign with get,set                
            </javadoc>
            <method name="funSetQuick" type="Double2DProcedure" line="547">
                <anonymous_class line="548">
                    <declaration name="current" type="int" line="549"/>
                    <declaration name="density" type="double" line="550"/>
                    <method name="toString" type="String" line="551"/>
                    <method name="init" type="void" line="554">
                        <declaration name="seed" type="int" line="556"/>
                    </method>
                    <method name="apply" type="void" line="560">
                        <params>
                            <param name="timer" type="cern.colt.Timer"/>
                        </params>
                        <declaration name="rows" type="int" line="561"/>
                        <declaration name="columns" type="int" line="562"/>
                        <scope line="563">
                            <scope line="564">
                                <declaration name="random" type="double" line="566"/>
                            </scope>
                        </scope>
                    </method>
                </anonymous_class>
            </method>
            <javadoc line="575">
                                
            </javadoc>
            <method name="funSOR5" type="Double2DProcedure" line="577">
                <anonymous_class line="578">
                    <declaration name="value" type="double" line="579"/>
                    <declaration name="omega" type="double" line="580"/>
                    <declaration name="alpha" type="double" line="581"/>
                    <declaration name="beta" type="double" line="582"/>
                    <declaration name="function" type="cern.colt.function.Double9Function" line="583"/>
                    <anonymous_class line="583">
                        <method name="apply" type="double" line="584">
                            <params>
                                <param name="a00" type="double"/>
                                <param name="a01" type="double"/>
                                <param name="a02" type="double"/>
                                <param name="a10" type="double"/>
                                <param name="a11" type="double"/>
                                <param name="a12" type="double"/>
                                <param name="a20" type="double"/>
                                <param name="a21" type="double"/>
                                <param name="a22" type="double"/>
                            </params>
                        </method>
                    </anonymous_class>
                    <method name="toString" type="String" line="589"/>
                    <method name="init" type="void" line="592"/>
                    <method name="apply" type="void" line="595">
                        <params>
                            <param name="timer" type="cern.colt.Timer"/>
                        </params>
                    </method>
                    <method name="operations" type="double" line="598">
                        <declaration name="n" type="double" line="599"/>
                        <declaration name="m" type="double" line="600"/>
                    </method>
                </anonymous_class>
            </method>
            <javadoc line="606">
                                
            </javadoc>
            <method name="funSOR8" type="Double2DProcedure" line="608">
                <anonymous_class line="609">
                    <declaration name="value" type="double" line="610"/>
                    <declaration name="omega" type="double" line="611"/>
                    <declaration name="alpha" type="double" line="612"/>
                    <declaration name="beta" type="double" line="613"/>
                    <declaration name="function" type="cern.colt.function.Double9Function" line="614"/>
                    <anonymous_class line="614">
                        <method name="apply" type="double" line="615">
                            <params>
                                <param name="a00" type="double"/>
                                <param name="a01" type="double"/>
                                <param name="a02" type="double"/>
                                <param name="a10" type="double"/>
                                <param name="a11" type="double"/>
                                <param name="a12" type="double"/>
                                <param name="a20" type="double"/>
                                <param name="a21" type="double"/>
                                <param name="a22" type="double"/>
                            </params>
                        </method>
                    </anonymous_class>
                    <method name="toString" type="String" line="620"/>
                    <method name="init" type="void" line="623"/>
                    <method name="apply" type="void" line="626">
                        <params>
                            <param name="timer" type="cern.colt.Timer"/>
                        </params>
                    </method>
                    <method name="operations" type="double" line="629">
                        <declaration name="n" type="double" line="630"/>
                        <declaration name="m" type="double" line="631"/>
                    </method>
                </anonymous_class>
            </method>
            <javadoc line="637">
                                
            </javadoc>
            <method name="funSort" type="Double2DProcedure" line="639">
                <anonymous_class line="640">
                    <method name="toString" type="String" line="641"/>
                    <method name="init" type="void" line="644"/>
                    <method name="apply" type="void" line="647">
                        <params>
                            <param name="timer" type="cern.colt.Timer"/>
                        </params>
                    </method>
                </anonymous_class>
            </method>
            <javadoc line="653">
                Not yet documented.                
            </javadoc>
            <method name="getFactory" type="DoubleFactory2D" line="656">
                <params>
                    <param name="type" type="String"/>
                </params>
                <declaration name="factory" type="DoubleFactory2D" line="657"/>
                <declaration name="s" type="String" line="661"/>
            </method>
            <javadoc line="664">
                Not yet documented.                
            </javadoc>
            <method name="getGenericFunction" type="Double2DProcedure" line="667">
                <params>
                    <param name="cmd" type="String"/>
                </params>
            </method>
            <javadoc line="684">
                Executes a command                
            </javadoc>
            <method name="handle" type="boolean" line="687">
                <params>
                    <param name="params" type="String[]"/>
                </params>
                <declaration name="success" type="boolean" line="688"/>
                <declaration name="cmd" type="String" line="689"/>
                <scope line="693">
                    <declaration name="fun" type="Double2DProcedure" line="694"/>
                    <scope line="695"/>
                    <scope line="698">
                        <declaration name="s" type="String" line="700"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="706">
                Runs the matrix benchmark operations defined in args or in the file specified by args0.
                  To get detailed help on usage type java cern.colt.matrix.bench.BenchmarkMatrix -help                
            </javadoc>
            <method name="main" type="void" line="710">
                <params>
                    <param name="args" type="String[]"/>
                </params>
                <declaration name="n" type="int" line="711"/>
                <scope line="712"/>
                <scope line="716">
                    <scope line="717"/>
                    <scope line="720"/>
                </scope>
                <declaration name="timer" type="cern.colt.Timer" line="728"/>
                <scope line="729"/>
                <scope line="733">
                    <declaration name="reader" type="java.io.BufferedReader" line="734"/>
                    <scope line="735"/>
                    <scope line="738"/>
                    <declaration name="stream" type="java.io.StreamTokenizer" line="741"/>
                    <scope line="745">
                        <declaration name="words" type="cern.colt.list.ObjectArrayList" line="746"/>
                        <declaration name="token" type="int" line="747"/>
                        <scope line="748">
                            <scope line="749">
                                <scope line="750">
                                    <declaration name="params" type="String[]" line="751"/>
                                </scope>
                            </scope>
                            <scope line="758">
                                <declaration name="word" type="String" line="759"/>
                                <declaration name="formatter" type="cern.colt.matrix.impl.Former" line="760"/>
                            </scope>
                        </scope>
                        <scope line="768"/>
                        <scope line="771"/>
                        <declaration name="line" type="String" line="774"/>
                        <scope line="775"/>
                    </scope>
                    <scope line="780"/>
                </scope>
            </method>
            <javadoc line="787">
                Executes procedure repeatadly until more than minSeconds have elapsed.                
            </javadoc>
            <method name="run" type="void" line="790">
                <params>
                    <param name="minSeconds" type="double"/>
                    <param name="title" type="String"/>
                    <param name="function" type="Double2DProcedure"/>
                    <param name="types" type="String[]"/>
                    <param name="sizes" type="int[]"/>
                    <param name="densities" type="double[]"/>
                </params>
                <declaration name="timings" type="DoubleMatrix3D" line="791"/>
                <declaration name="runTime" type="cern.colt.Timer" line="792"/>
                <scope line="793">
                    <declaration name="factory" type="DoubleFactory2D" line="794"/>
                    <scope line="796">
                        <declaration name="size" type="int" line="797"/>
                        <scope line="799">
                            <declaration name="density" type="double" line="800"/>
                            <declaration name="opsPerSec" type="float" line="802"/>
                            <scope line="803">
                                <declaration name="val" type="double" line="804"/>
                                <declaration name="A" type="DoubleMatrix2D" line="809"/>
                                <declaration name="B" type="DoubleMatrix2D" line="810"/>
                                <declaration name="ops" type="double" line="814"/>
                                <declaration name="secs" type="double" line="815"/>
                            </scope>
                            <scope line="818"/>
                        </scope>
                    </scope>
                </scope>
                <declaration name="sliceAxisName" type="String" line="826"/>
                <declaration name="rowAxisName" type="String" line="827"/>
                <declaration name="colAxisName" type="String" line="828"/>
                <declaration name="sliceNames" type="String[]" line="829"/>
                <declaration name="F" type="hep.aida.bin.BinFunctions1D" line="830"/>
                <declaration name="aggr" type="hep.aida.bin.BinFunction1D[]" line="831"/>
                <declaration name="rowNames" type="String[]" line="832"/>
                <declaration name="colNames" type="String[]" line="833"/>
                <declaration name="tmp" type="String" line="837"/>
                <declaration name="tmp2" type="String[]" line="840"/>
            </method>
            <javadoc line="847">
                Executes procedure repeatadly until more than minSeconds have elapsed.                
            </javadoc>
            <method name="runSpecial" type="void" line="850">
                <params>
                    <param name="minSeconds" type="double"/>
                    <param name="title" type="String"/>
                    <param name="function" type="Double2DProcedure"/>
                </params>
                <declaration name="sizes" type="int[]" line="851"/>
                <declaration name="densities" type="double[]" line="852"/>
                <declaration name="sparses" type="boolean[]" line="853"/>
                <declaration name="timings" type="DoubleMatrix2D" line="854"/>
                <declaration name="runTime" type="cern.colt.Timer" line="855"/>
                <scope line="856">
                    <declaration name="size" type="int" line="857"/>
                    <declaration name="density" type="double" line="858"/>
                    <declaration name="sparse" type="boolean" line="859"/>
                    <declaration name="factory" type="DoubleFactory2D" line="860"/>
                    <declaration name="val" type="double" line="863"/>
                    <declaration name="A" type="DoubleMatrix2D" line="868"/>
                    <declaration name="B" type="DoubleMatrix2D" line="869"/>
                    <declaration name="secs" type="float" line="873"/>
                    <declaration name="ops" type="double" line="874"/>
                    <declaration name="opsPerSec" type="float" line="875"/>
                </scope>
                <declaration name="F" type="hep.aida.bin.BinFunctions1D" line="882"/>
                <declaration name="aggr" type="hep.aida.bin.BinFunction1D[]" line="883"/>
                <declaration name="rowNames" type="String[]" line="884"/>
                <declaration name="colNames" type="String[]" line="885"/>
                <declaration name="rowAxisName" type="String" line="886"/>
                <declaration name="colAxisName" type="String" line="887"/>
            </method>
            <javadoc line="892">
                Overall usage.                
            </javadoc>
            <method name="usage" type="String" line="895">
                <declaration name="usage" type="String" line="896"/>
            </method>
            <javadoc line="899">
                Usage of a specific command.                
            </javadoc>
            <method name="usage" type="String" line="902">
                <params>
                    <param name="cmd" type="String"/>
                </params>
                <declaration name="usage" type="String" line="903"/>
            </method>
        </class>
    </source>