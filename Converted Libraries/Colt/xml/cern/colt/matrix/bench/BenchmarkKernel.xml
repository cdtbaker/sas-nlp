<?xml version="1.0" encoding="UTF-8"?>
    <source package="cern.colt.matrix.bench">
        <class name="BenchmarkKernel" line="11">
            <javadoc line="11">
                Not yet documented.                
                <author>
                    wolfgang.hoschek@cern.ch                    
                </author>
                <version>
                    1.0, 10-Nov-99                    
                </version>
            </javadoc>
            <javadoc line="18">
                Benchmark constructor comment.                
            </javadoc>
            <method name="BenchmarkKernel" type="constructor" line="21"/>
            <javadoc line="22">
                Executes procedure repeatadly until more than minSeconds have elapsed.                
            </javadoc>
            <method name="run" type="float" line="25">
                <params>
                    <param name="minSeconds" type="double"/>
                    <param name="procedure" type="TimerProcedure"/>
                </params>
                <comment line="37">
                    unreliable timing due to very fast iteration;                    
                </comment>
                <comment line="38">
                    reading, starting and stopping timer distorts measurement                    
                </comment>
                <comment line="39">
                    do it again with minimal timer overhead                    
                </comment>
                <comment line="40">
                    System.out.println(&quot;iter=&quot;+iter+&quot;, minSeconds/iter=&quot;+minSeconds/iter);                    
                </comment>
                <comment line="50">
                    prevent compiler from optimizing away the loop                    
                </comment>
                <comment line="57">
                    if (dummy != 0) throw new RuntimeException(&quot;dummy != 0&quot;);                    
                </comment>
                <declaration name="iter" type="long" line="26"/>
                <declaration name="minMillis" type="long" line="27"/>
                <declaration name="begin" type="long" line="28"/>
                <declaration name="limit" type="long" line="29"/>
                <scope line="30"/>
                <declaration name="end" type="long" line="35"/>
                <scope line="36">
                    <scope line="42"/>
                </scope>
                <declaration name="begin2" type="long" line="49"/>
                <declaration name="dummy" type="int" line="50"/>
                <scope line="51"/>
                <declaration name="end2" type="long" line="55"/>
                <declaration name="elapsed" type="long" line="56"/>
            </method>
            <javadoc line="61">
                Returns a String with the system&apos;s properties (vendor, version, operating system, etc.)                
            </javadoc>
            <method name="systemInfo" type="String" line="64">
                <comment line="75">
                    &quot;java.vm.specification.version&quot;,
                    &quot;java.vm.specification.vendor&quot;,
                    &quot;java.vm.specification.name&quot;,
                    &quot;java.specification.version&quot;,
                    &quot;java.specification.vendor&quot;,
                    &quot;java.specification.name&quot;                    
                </comment>
                <comment line="85">
                    build string matrix                    
                </comment>
                <comment line="89">
                    retrieve property values                    
                </comment>
                <comment line="92">
                    prop not available                    
                </comment>
                <comment line="96">
                    format matrix                    
                </comment>
                <declaration name="properties" type="String[]" line="65"/>
                <declaration name="matrix" type="cern.colt.matrix.ObjectMatrix2D" line="86"/>
                <scope line="90">
                    <declaration name="value" type="String" line="91"/>
                </scope>
                <declaration name="formatter" type="cern.colt.matrix.objectalgo.Formatter" line="97"/>
            </method>
        </class>
    </source>