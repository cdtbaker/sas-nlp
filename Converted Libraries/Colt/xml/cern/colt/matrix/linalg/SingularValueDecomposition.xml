<?xml version="1.0" encoding="UTF-8"?>
    <source package="cern.colt.matrix.linalg">
        <import package="cern.colt.matrix.DoubleFactory2D"/>
        <import package="cern.colt.matrix.DoubleMatrix2D"/>
        <class name="SingularValueDecomposition" line="13">
            <implements interface="java.io.Serializable"/>
            <javadoc line="13">
                For an &lt;tt&gt;m x n&lt;/tt&gt; matrix &lt;tt&gt;A&lt;/tt&gt; with &lt;tt&gt;m &gt;= n&lt;/tt&gt;, the singular value decomposition is
                  an &lt;tt&gt;m x n&lt;/tt&gt; orthogonal matrix &lt;tt&gt;U&lt;/tt&gt;, an &lt;tt&gt;n x n&lt;/tt&gt; diagonal matrix &lt;tt&gt;S&lt;/tt&gt;, and
                  an &lt;tt&gt;n x n&lt;/tt&gt; orthogonal matrix &lt;tt&gt;V&lt;/tt&gt; so that &lt;tt&gt;A = USV&apos;&lt;/tt&gt;.
                  &lt;P&gt;
                  The singular values, &lt;tt&gt;sigma[k] = S[k][k]&lt;/tt&gt;, are ordered so that
                  &lt;tt&gt;sigma[0] &gt;= sigma[1] &gt;= ... &gt;= sigma[n-1]&lt;/tt&gt;.
                  &lt;P&gt;
                  The singular value decomposition always exists, so the constructor will
                  never fail.  The matrix condition number and the effective numerical
                  rank can be computed from this decomposition.                
            </javadoc>
            <declaration name="serialVersionUID" type="long" line="26"/>
            <declaration name="U" type="double[][]" line="27"/>
            <javadoc line="27">
                Arrays for internal storage of U and V.                
                <serial>
                    internal storage of U.                    
                </serial>
                <serial>
                    internal storage of V.                    
                </serial>
            </javadoc>
            <declaration name="s" type="double[]" line="33"/>
            <javadoc line="33">
                Array for internal storage of singular values.                
                <serial>
                    internal storage of singular values.                    
                </serial>
            </javadoc>
            <declaration name="m" type="int" line="38"/>
            <javadoc line="38">
                Row and column dimensions.                
                <serial>
                    row dimension.                    
                </serial>
                <serial>
                    column dimension.                    
                </serial>
            </javadoc>
            <javadoc line="43">
                Constructs and returns a new singular value decomposition object; 
                  The decomposed matrices can be retrieved via instance methods of the returned decomposition object.                
                <param>
                    A    A rectangular matrix.                    
                </param>
                <return>
                    A decomposition object to access <tt>U</tt>, <tt>S</tt> and <tt>V</tt>.                    
                </return>
                <throws>
                    IllegalArgumentException if <tt>A.rows() < A.columns()</tt>.                    
                </throws>
            </javadoc>
            <method name="SingularValueDecomposition" type="constructor" line="50">
                <params>
                    <param name="Arg" type="DoubleMatrix2D"/>
                </params>
                <comment line="53">
                    Derived from LINPACK code.                    
                </comment>
                <comment line="54">
                    Initialize.                    
                </comment>
                <comment line="67">
                    Reduce A to bidiagonal form, storing the diagonal elements                    
                </comment>
                <comment line="68">
                    in s and the super-diagonal elements in e.                    
                </comment>
                <comment line="75">
                    Compute the transformation for the k-th column and                    
                </comment>
                <comment line="76">
                    place the k-th diagonal in s[k].                    
                </comment>
                <comment line="77">
                    Compute 2-norm of k-th column without under/overflow.                    
                </comment>
                <comment line="96">
                    Apply the transformation.                    
                </comment>
                <comment line="108">
                    Place the k-th row of A into e for the                    
                </comment>
                <comment line="109">
                    subsequent calculation of the row transformation.                    
                </comment>
                <comment line="115">
                    Place the transformation in U for subsequent back                    
                </comment>
                <comment line="116">
                    multiplication.                    
                </comment>
                <comment line="124">
                    Compute the k-th row transformation and place the                    
                </comment>
                <comment line="125">
                    k-th super-diagonal in e[k].                    
                </comment>
                <comment line="126">
                    Compute 2-norm without under/overflow.                    
                </comment>
                <comment line="143">
                    Apply the transformation.                    
                </comment>
                <comment line="162">
                    Place the transformation in V for subsequent                    
                </comment>
                <comment line="163">
                    back multiplication.                    
                </comment>
                <comment line="172">
                    Set up the final bidiagonal matrix or order p.                    
                </comment>
                <comment line="186">
                    If required, generate U.                    
                </comment>
                <comment line="223">
                    If required, generate V.                    
                </comment>
                <comment line="246">
                    Main iteration loop for the singular values.                    
                </comment>
                <comment line="254">
                    Here is where a test for too many iterations would go.                    
                </comment>
                <comment line="256">
                    This section of the program inspects for                    
                </comment>
                <comment line="257">
                    negligible elements in the s and e arrays.  On                    
                </comment>
                <comment line="258">
                    completion the variables kase and k are set as follows.                    
                </comment>
                <comment line="260">
                    kase = 1     if s(p) and e[k-1] are negligible and k&lt;p                    
                </comment>
                <comment line="261">
                    kase = 2     if s(k) is negligible and k&lt;p                    
                </comment>
                <comment line="262">
                    kase = 3     if e[k-1] is negligible, k&lt;p, and                    
                </comment>
                <comment line="263">
                    s(k), ..., s(p) are not negligible (qr step).                    
                </comment>
                <comment line="264">
                    kase = 4     if e(p-1) is negligible (convergence).                    
                </comment>
                <comment line="301">
                    Perform the task indicated by kase.                    
                </comment>
                <comment line="305">
                    Deflate negligible s(p).                    
                </comment>
                <comment line="330">
                    Split at negligible s(k).                    
                </comment>
                <comment line="353">
                    Perform one qr step.                    
                </comment>
                <comment line="357">
                    Calculate the shift.                    
                </comment>
                <comment line="380">
                    Chase zeros.                    
                </comment>
                <comment line="421">
                    Convergence.                    
                </comment>
                <comment line="425">
                    Make the singular values positive.                    
                </comment>
                <comment line="436">
                    Order the singular values.                    
                </comment>
                <declaration name="A" type="double[][]" line="55"/>
                <declaration name="nu" type="int" line="58"/>
                <declaration name="e" type="double[]" line="62"/>
                <declaration name="work" type="double[]" line="63"/>
                <declaration name="wantu" type="boolean" line="64"/>
                <declaration name="wantv" type="boolean" line="65"/>
                <declaration name="nct" type="int" line="70"/>
                <declaration name="nrt" type="int" line="71"/>
                <scope line="72">
                    <scope line="73">
                        <scope line="79"/>
                        <scope line="82">
                            <scope line="83"/>
                            <scope line="86"/>
                        </scope>
                    </scope>
                    <scope line="93">
                        <scope line="94">
                            <declaration name="t" type="double" line="98"/>
                            <scope line="99"/>
                            <scope line="103"/>
                        </scope>
                    </scope>
                    <scope line="113">
                        <scope line="118"/>
                    </scope>
                    <scope line="122">
                        <scope line="128"/>
                        <scope line="131">
                            <scope line="132"/>
                            <scope line="135"/>
                        </scope>
                        <scope line="141">
                            <scope line="145"/>
                            <scope line="148">
                                <scope line="149"/>
                            </scope>
                            <scope line="153">
                                <declaration name="t" type="double" line="154"/>
                                <scope line="155"/>
                            </scope>
                        </scope>
                        <scope line="160">
                            <scope line="165"/>
                        </scope>
                    </scope>
                </scope>
                <declaration name="p" type="int" line="174"/>
                <scope line="175"/>
                <scope line="178"/>
                <scope line="181"/>
                <scope line="188">
                    <scope line="189">
                        <scope line="190"/>
                    </scope>
                    <scope line="195">
                        <scope line="196">
                            <scope line="197">
                                <declaration name="t" type="double" line="198"/>
                                <scope line="199"/>
                                <scope line="203"/>
                            </scope>
                            <scope line="207"/>
                            <scope line="211"/>
                        </scope>
                        <scope line="214">
                            <scope line="215"/>
                        </scope>
                    </scope>
                </scope>
                <scope line="225">
                    <scope line="226">
                        <scope line="227">
                            <scope line="228">
                                <declaration name="t" type="double" line="229"/>
                                <scope line="230"/>
                                <scope line="234"/>
                            </scope>
                        </scope>
                        <scope line="239"/>
                    </scope>
                </scope>
                <declaration name="pp" type="int" line="248"/>
                <declaration name="iter" type="int" line="249"/>
                <declaration name="eps" type="double" line="250"/>
                <scope line="251">
                    <declaration name="k" type="int" line="252"/>
                    <scope line="266">
                        <scope line="267"/>
                        <scope line="270"/>
                    </scope>
                    <scope line="275"/>
                    <scope line="277">
                        <declaration name="ks" type="int" line="278"/>
                        <scope line="279">
                            <scope line="280"/>
                            <declaration name="t" type="double" line="283"/>
                            <scope line="285"/>
                        </scope>
                        <scope line="290"/>
                        <scope line="292"/>
                        <scope line="294"/>
                    </scope>
                    <scope line="307">
                        <declaration name="f" type="double" line="308"/>
                        <scope line="310">
                            <declaration name="t" type="double" line="311"/>
                            <declaration name="cs" type="double" line="312"/>
                            <declaration name="sn" type="double" line="313"/>
                            <scope line="315"/>
                            <scope line="319">
                                <scope line="320"/>
                            </scope>
                        </scope>
                    </scope>
                    <scope line="332">
                        <declaration name="f" type="double" line="333"/>
                        <scope line="335">
                            <declaration name="t" type="double" line="336"/>
                            <declaration name="cs" type="double" line="337"/>
                            <declaration name="sn" type="double" line="338"/>
                            <scope line="342">
                                <scope line="343"/>
                            </scope>
                        </scope>
                    </scope>
                    <scope line="355">
                        <declaration name="scale" type="double" line="359"/>
                        <declaration name="sp" type="double" line="362"/>
                        <declaration name="spm1" type="double" line="363"/>
                        <declaration name="epm1" type="double" line="364"/>
                        <declaration name="sk" type="double" line="365"/>
                        <declaration name="ek" type="double" line="366"/>
                        <declaration name="b" type="double" line="367"/>
                        <declaration name="c" type="double" line="368"/>
                        <declaration name="shift" type="double" line="369"/>
                        <scope line="370">
                            <scope line="372"/>
                        </scope>
                        <declaration name="f" type="double" line="377"/>
                        <declaration name="g" type="double" line="378"/>
                        <scope line="382">
                            <declaration name="t" type="double" line="383"/>
                            <declaration name="cs" type="double" line="384"/>
                            <declaration name="sn" type="double" line="385"/>
                            <scope line="386"/>
                            <scope line="393">
                                <scope line="394"/>
                            </scope>
                            <scope line="408">
                                <scope line="409"/>
                            </scope>
                        </scope>
                    </scope>
                    <scope line="423">
                        <scope line="427">
                            <scope line="429">
                                <scope line="430"/>
                            </scope>
                        </scope>
                        <scope line="438">
                            <scope line="439"/>
                            <declaration name="t" type="double" line="442"/>
                            <scope line="445">
                                <scope line="446"/>
                            </scope>
                            <scope line="450">
                                <scope line="451"/>
                            </scope>
                        </scope>
                    </scope>
                </scope>
            </method>
            <javadoc line="464">
                Returns the two norm condition number, which is &lt;tt&gt;max(S) / min(S)&lt;/tt&gt;.                
            </javadoc>
            <method name="cond" type="double" line="467"/>
            <javadoc line="470">
                Returns the diagonal matrix of singular values.                
                <return>
                    S                    
                </return>
            </javadoc>
            <method name="getS" type="DoubleMatrix2D" line="474">
                <declaration name="S" type="double[][]" line="475"/>
                <scope line="476">
                    <scope line="477"/>
                </scope>
            </method>
            <javadoc line="484">
                Returns the diagonal of &lt;tt&gt;S&lt;/tt&gt;, which is a one-dimensional array of singular values                
                <return>
                    diagonal of <tt>S</tt>.                    
                </return>
            </javadoc>
            <method name="getSingularValues" type="double[]" line="488"/>
            <javadoc line="491">
                Returns the left singular vectors &lt;tt&gt;U&lt;/tt&gt;.                
                <return>
                    <tt>U</tt>                    
                </return>
            </javadoc>
            <method name="getU" type="DoubleMatrix2D" line="495">
                <comment line="496">
                    return new DoubleMatrix2D(U,m,Math.min(m+1,n));                    
                </comment>
            </method>
            <javadoc line="499">
                Returns the right singular vectors &lt;tt&gt;V&lt;/tt&gt;.                
                <return>
                    <tt>V</tt>                    
                </return>
            </javadoc>
            <method name="getV" type="DoubleMatrix2D" line="503"/>
            <javadoc line="506">
                Returns the two norm, which is &lt;tt&gt;max(S)&lt;/tt&gt;.                
            </javadoc>
            <method name="norm2" type="double" line="509"/>
            <javadoc line="512">
                Returns the effective numerical matrix rank, which is the number of nonnegligible singular values.                
            </javadoc>
            <method name="rank" type="int" line="515">
                <declaration name="eps" type="double" line="516"/>
                <declaration name="tol" type="double" line="517"/>
                <declaration name="r" type="int" line="518"/>
                <scope line="519">
                    <scope line="520"/>
                </scope>
            </method>
            <javadoc line="526">
                Returns a String with (propertyName, propertyValue) pairs.
                  Useful for debugging or to quickly get the rough picture.
                  For example,
                  &lt;pre&gt;
                  rank          : 3
                  trace         : 0
                  &lt;/pre&gt;                
            </javadoc>
            <method name="toString" type="String" line="535">
                <declaration name="buf" type="StringBuffer" line="536"/>
                <declaration name="unknown" type="String" line="537"/>
                <scope line="544"/>
                <scope line="545"/>
                <scope line="548"/>
                <scope line="549"/>
                <scope line="552"/>
                <scope line="553"/>
                <scope line="556"/>
                <scope line="557"/>
                <scope line="560"/>
                <scope line="561"/>
                <scope line="564"/>
                <scope line="565"/>
            </method>
        </class>
    </source>