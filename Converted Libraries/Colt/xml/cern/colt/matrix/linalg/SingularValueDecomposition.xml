<?xml version="1.0" encoding="UTF-8"?>
    <source package="cern.colt.matrix.linalg">
        <import package="cern.colt.matrix.DoubleFactory2D"/>
        <import package="cern.colt.matrix.DoubleMatrix2D"/>
        <class name="SingularValueDecomposition" line="4">
            <implements interface="java.io.Serializable"/>
            <javadoc line="4">
                For an &lt;tt&gt;m x n&lt;/tt&gt; matrix &lt;tt&gt;A&lt;/tt&gt; with &lt;tt&gt;m &gt;= n&lt;/tt&gt;, the singular value decomposition is
                  an &lt;tt&gt;m x n&lt;/tt&gt; orthogonal matrix &lt;tt&gt;U&lt;/tt&gt;, an &lt;tt&gt;n x n&lt;/tt&gt; diagonal matrix &lt;tt&gt;S&lt;/tt&gt;, and
                  an &lt;tt&gt;n x n&lt;/tt&gt; orthogonal matrix &lt;tt&gt;V&lt;/tt&gt; so that &lt;tt&gt;A = USV&apos;&lt;/tt&gt;.
                  &lt;P&gt;
                  The singular values, &lt;tt&gt;sigma[k] = S[k][k]&lt;/tt&gt;, are ordered so that
                  &lt;tt&gt;sigma[0] &gt;= sigma[1] &gt;= ... &gt;= sigma[n-1]&lt;/tt&gt;.
                  &lt;P&gt;
                  The singular value decomposition always exists, so the constructor will
                  never fail.  The matrix condition number and the effective numerical
                  rank can be computed from this decomposition.                
            </javadoc>
            <declaration name="serialVersionUID" type="long" line="17"/>
            <declaration name="U" type="double[][]" line="18"/>
            <javadoc line="18">
                Arrays for internal storage of U and V.                
                <serial>
                    internal storage of U.                    
                </serial>
                <serial>
                    internal storage of V.                    
                </serial>
            </javadoc>
            <declaration name="s" type="double[]" line="24"/>
            <javadoc line="24">
                Array for internal storage of singular values.                
                <serial>
                    internal storage of singular values.                    
                </serial>
            </javadoc>
            <declaration name="m" type="int" line="29"/>
            <javadoc line="29">
                Row and column dimensions.                
                <serial>
                    row dimension.                    
                </serial>
                <serial>
                    column dimension.                    
                </serial>
            </javadoc>
            <javadoc line="35">
                Constructs and returns a new singular value decomposition object; 
                  The decomposed matrices can be retrieved via instance methods of the returned decomposition object.                
                <param>
                    A    A rectangular matrix.                    
                </param>
                <return>
                    A decomposition object to access <tt>U</tt>, <tt>S</tt> and <tt>V</tt>.                    
                </return>
                <throws>
                    IllegalArgumentException if <tt>A.rows() < A.columns()</tt>.                    
                </throws>
            </javadoc>
            <method name="SingularValueDecomposition" type="constructor" line="42">
                <params>
                    <param name="Arg" type="DoubleMatrix2D"/>
                </params>
                <declaration name="A" type="double[][]" line="44"/>
                <declaration name="nu" type="int" line="47"/>
                <declaration name="e" type="double[]" line="51"/>
                <declaration name="work" type="double[]" line="52"/>
                <declaration name="wantu" type="boolean" line="53"/>
                <declaration name="wantv" type="boolean" line="54"/>
                <declaration name="nct" type="int" line="55"/>
                <declaration name="nrt" type="int" line="56"/>
                <scope line="57">
                    <scope line="58">
                        <scope line="60"/>
                        <scope line="63">
                            <scope line="64"/>
                            <scope line="67"/>
                        </scope>
                    </scope>
                    <scope line="74">
                        <scope line="75">
                            <declaration name="t" type="double" line="76"/>
                            <scope line="77"/>
                            <scope line="81"/>
                        </scope>
                    </scope>
                    <scope line="87">
                        <scope line="88"/>
                    </scope>
                    <scope line="92">
                        <scope line="94"/>
                        <scope line="97">
                            <scope line="98"/>
                            <scope line="101"/>
                        </scope>
                        <scope line="107">
                            <scope line="108"/>
                            <scope line="111">
                                <scope line="112"/>
                            </scope>
                            <scope line="116">
                                <declaration name="t" type="double" line="117"/>
                                <scope line="118"/>
                            </scope>
                        </scope>
                        <scope line="123">
                            <scope line="124"/>
                        </scope>
                    </scope>
                </scope>
                <declaration name="p" type="int" line="130"/>
                <scope line="131"/>
                <scope line="134"/>
                <scope line="137"/>
                <scope line="141">
                    <scope line="142">
                        <scope line="143"/>
                    </scope>
                    <scope line="148">
                        <scope line="149">
                            <scope line="150">
                                <declaration name="t" type="double" line="151"/>
                                <scope line="152"/>
                                <scope line="156"/>
                            </scope>
                            <scope line="160"/>
                            <scope line="164"/>
                        </scope>
                        <scope line="168">
                            <scope line="169"/>
                        </scope>
                    </scope>
                </scope>
                <scope line="176">
                    <scope line="177">
                        <scope line="178">
                            <scope line="179">
                                <declaration name="t" type="double" line="180"/>
                                <scope line="181"/>
                                <scope line="185"/>
                            </scope>
                        </scope>
                        <scope line="190"/>
                    </scope>
                </scope>
                <declaration name="pp" type="int" line="196"/>
                <declaration name="iter" type="int" line="197"/>
                <declaration name="eps" type="double" line="198"/>
                <scope line="199">
                    <declaration name="k" type="int" line="200"/>
                    <scope line="201">
                        <scope line="202"/>
                        <scope line="205"/>
                    </scope>
                    <scope line="210"/>
                    <scope line="213">
                        <declaration name="ks" type="int" line="214"/>
                        <scope line="215">
                            <scope line="216"/>
                            <declaration name="t" type="double" line="219"/>
                            <scope line="220"/>
                        </scope>
                        <scope line="225"/>
                        <scope line="228"/>
                        <scope line="231"/>
                    </scope>
                    <scope line="239">
                        <declaration name="f" type="double" line="240"/>
                        <scope line="242">
                            <declaration name="t" type="double" line="243"/>
                            <declaration name="cs" type="double" line="244"/>
                            <declaration name="sn" type="double" line="245"/>
                            <scope line="247"/>
                            <scope line="251">
                                <scope line="252"/>
                            </scope>
                        </scope>
                    </scope>
                    <scope line="262">
                        <declaration name="f" type="double" line="263"/>
                        <scope line="265">
                            <declaration name="t" type="double" line="266"/>
                            <declaration name="cs" type="double" line="267"/>
                            <declaration name="sn" type="double" line="268"/>
                            <scope line="272">
                                <scope line="273"/>
                            </scope>
                        </scope>
                    </scope>
                    <scope line="283">
                        <declaration name="scale" type="double" line="284"/>
                        <declaration name="sp" type="double" line="285"/>
                        <declaration name="spm1" type="double" line="286"/>
                        <declaration name="epm1" type="double" line="287"/>
                        <declaration name="sk" type="double" line="288"/>
                        <declaration name="ek" type="double" line="289"/>
                        <declaration name="b" type="double" line="290"/>
                        <declaration name="c" type="double" line="291"/>
                        <declaration name="shift" type="double" line="292"/>
                        <scope line="293">
                            <scope line="295"/>
                        </scope>
                        <declaration name="f" type="double" line="300"/>
                        <declaration name="g" type="double" line="301"/>
                        <scope line="302">
                            <declaration name="t" type="double" line="303"/>
                            <declaration name="cs" type="double" line="304"/>
                            <declaration name="sn" type="double" line="305"/>
                            <scope line="306"/>
                            <scope line="313">
                                <scope line="314"/>
                            </scope>
                            <scope line="328">
                                <scope line="329"/>
                            </scope>
                        </scope>
                    </scope>
                    <scope line="341">
                        <scope line="342">
                            <scope line="344">
                                <scope line="345"/>
                            </scope>
                        </scope>
                        <scope line="350">
                            <scope line="351"/>
                            <declaration name="t" type="double" line="354"/>
                            <scope line="357">
                                <scope line="358"/>
                            </scope>
                            <scope line="364">
                                <scope line="365"/>
                            </scope>
                        </scope>
                    </scope>
                </scope>
            </method>
            <javadoc line="380">
                Returns the two norm condition number, which is &lt;tt&gt;max(S) / min(S)&lt;/tt&gt;.                
            </javadoc>
            <method name="cond" type="double" line="383"/>
            <javadoc line="386">
                Returns the diagonal matrix of singular values.                
                <return>
                    S                    
                </return>
            </javadoc>
            <method name="getS" type="DoubleMatrix2D" line="390">
                <declaration name="S" type="double[][]" line="391"/>
                <scope line="392">
                    <scope line="393"/>
                </scope>
            </method>
            <javadoc line="400">
                Returns the diagonal of &lt;tt&gt;S&lt;/tt&gt;, which is a one-dimensional array of singular values                
                <return>
                    diagonal of <tt>S</tt>.                    
                </return>
            </javadoc>
            <method name="getSingularValues" type="double[]" line="404"/>
            <javadoc line="407">
                Returns the left singular vectors &lt;tt&gt;U&lt;/tt&gt;.                
                <return>
                    <tt>U</tt>                    
                </return>
            </javadoc>
            <method name="getU" type="DoubleMatrix2D" line="411"/>
            <javadoc line="414">
                Returns the right singular vectors &lt;tt&gt;V&lt;/tt&gt;.                
                <return>
                    <tt>V</tt>                    
                </return>
            </javadoc>
            <method name="getV" type="DoubleMatrix2D" line="418"/>
            <javadoc line="421">
                Returns the two norm, which is &lt;tt&gt;max(S)&lt;/tt&gt;.                
            </javadoc>
            <method name="norm2" type="double" line="424"/>
            <javadoc line="427">
                Returns the effective numerical matrix rank, which is the number of nonnegligible singular values.                
            </javadoc>
            <method name="rank" type="int" line="430">
                <declaration name="eps" type="double" line="431"/>
                <declaration name="tol" type="double" line="432"/>
                <declaration name="r" type="int" line="433"/>
                <scope line="434">
                    <scope line="435"/>
                </scope>
            </method>
            <javadoc line="441">
                Returns a String with (propertyName, propertyValue) pairs.
                  Useful for debugging or to quickly get the rough picture.
                  For example,
                  &lt;pre&gt;
                  rank          : 3
                  trace         : 0
                  &lt;/pre&gt;                
            </javadoc>
            <method name="toString" type="String" line="450">
                <declaration name="buf" type="StringBuffer" line="451"/>
                <declaration name="unknown" type="String" line="452"/>
                <scope line="457"/>
                <scope line="460"/>
                <scope line="464"/>
                <scope line="467"/>
                <scope line="471"/>
                <scope line="474"/>
                <scope line="478"/>
                <scope line="481"/>
                <scope line="485"/>
                <scope line="488"/>
                <scope line="492"/>
                <scope line="495"/>
            </method>
        </class>
    </source>