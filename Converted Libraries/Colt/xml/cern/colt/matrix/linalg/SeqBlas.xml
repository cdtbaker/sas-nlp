<?xml version="1.0" encoding="UTF-8"?>
    <source package="cern.colt.matrix.linalg">
        <import package="cern.colt.matrix.DoubleMatrix1D"/>
        <import package="cern.colt.matrix.DoubleMatrix2D"/>
        <class name="SeqBlas" line="4">
            <implements interface="Blas"/>
            <javadoc line="4">
                Sequential implementation of the Basic Linear Algebra System.                
                <author>
                    wolfgang.hoschek@cern.ch                    
                </author>
                <version>
                    0.9, 16/04/2000                    
                </version>
            </javadoc>
            <declaration name="seqBlas" type="Blas" line="10"/>
            <javadoc line="10">
                Little trick to allow for &quot;aliasing&quot;, that is, renaming this class.
                  Time and again writing code like
                  &lt;p&gt;
                  &lt;tt&gt;SeqBlas.blas.dgemm(...);&lt;/tt&gt;
                  &lt;p&gt;
                  is a bit awkward. Using the aliasing you can instead write
                  &lt;p&gt;
                  &lt;tt&gt;Blas B = SeqBlas.blas; &lt;br&gt;
                  B.dgemm(...);&lt;/tt&gt;                
            </javadoc>
            <declaration name="F" type="cern.jet.math.Functions" line="22"/>
            <javadoc line="23">
                Makes this class non instantiable, but still let&apos;s others inherit from it.                
            </javadoc>
            <method name="SeqBlas" type="constructor" line="26"/>
            <method name="assign" type="void" line="28">
                <params>
                    <param name="A" type="DoubleMatrix2D"/>
                    <param name="function" type="cern.colt.function.DoubleFunction"/>
                </params>
            </method>
            <method name="assign" type="void" line="31">
                <params>
                    <param name="A" type="DoubleMatrix2D"/>
                    <param name="B" type="DoubleMatrix2D"/>
                    <param name="function" type="cern.colt.function.DoubleDoubleFunction"/>
                </params>
            </method>
            <method name="dasum" type="double" line="34">
                <params>
                    <param name="x" type="DoubleMatrix1D"/>
                </params>
            </method>
            <method name="daxpy" type="void" line="37">
                <params>
                    <param name="alpha" type="double"/>
                    <param name="x" type="DoubleMatrix1D"/>
                    <param name="y" type="DoubleMatrix1D"/>
                </params>
            </method>
            <method name="daxpy" type="void" line="40">
                <params>
                    <param name="alpha" type="double"/>
                    <param name="A" type="DoubleMatrix2D"/>
                    <param name="B" type="DoubleMatrix2D"/>
                </params>
            </method>
            <method name="dcopy" type="void" line="43">
                <params>
                    <param name="x" type="DoubleMatrix1D"/>
                    <param name="y" type="DoubleMatrix1D"/>
                </params>
            </method>
            <method name="dcopy" type="void" line="46">
                <params>
                    <param name="A" type="DoubleMatrix2D"/>
                    <param name="B" type="DoubleMatrix2D"/>
                </params>
            </method>
            <method name="ddot" type="double" line="49">
                <params>
                    <param name="x" type="DoubleMatrix1D"/>
                    <param name="y" type="DoubleMatrix1D"/>
                </params>
            </method>
            <method name="dgemm" type="void" line="52">
                <params>
                    <param name="transposeA" type="boolean"/>
                    <param name="transposeB" type="boolean"/>
                    <param name="alpha" type="double"/>
                    <param name="A" type="DoubleMatrix2D"/>
                    <param name="B" type="DoubleMatrix2D"/>
                    <param name="beta" type="double"/>
                    <param name="C" type="DoubleMatrix2D"/>
                </params>
            </method>
            <method name="dgemv" type="void" line="55">
                <params>
                    <param name="transposeA" type="boolean"/>
                    <param name="alpha" type="double"/>
                    <param name="A" type="DoubleMatrix2D"/>
                    <param name="x" type="DoubleMatrix1D"/>
                    <param name="beta" type="double"/>
                    <param name="y" type="DoubleMatrix1D"/>
                </params>
            </method>
            <method name="dger" type="void" line="58">
                <params>
                    <param name="alpha" type="double"/>
                    <param name="x" type="DoubleMatrix1D"/>
                    <param name="y" type="DoubleMatrix1D"/>
                    <param name="A" type="DoubleMatrix2D"/>
                </params>
                <declaration name="fun" type="cern.jet.math.PlusMult" line="59"/>
                <scope line="60"/>
            </method>
            <method name="dnrm2" type="double" line="65">
                <params>
                    <param name="x" type="DoubleMatrix1D"/>
                </params>
            </method>
            <method name="drot" type="void" line="68">
                <params>
                    <param name="x" type="DoubleMatrix1D"/>
                    <param name="y" type="DoubleMatrix1D"/>
                    <param name="c" type="double"/>
                    <param name="s" type="double"/>
                </params>
                <declaration name="tmp" type="DoubleMatrix1D" line="70"/>
            </method>
            <method name="drotg" type="void" line="76">
                <params>
                    <param name="a" type="double"/>
                    <param name="b" type="double"/>
                    <param name="rotvec" type="double"/>
                </params>
                <declaration name="c" type="double" line="77"/>
                <scope line="81"/>
                <scope line="92"/>
            </method>
            <method name="dscal" type="void" line="105">
                <params>
                    <param name="alpha" type="double"/>
                    <param name="x" type="DoubleMatrix1D"/>
                </params>
            </method>
            <method name="dscal" type="void" line="108">
                <params>
                    <param name="alpha" type="double"/>
                    <param name="A" type="DoubleMatrix2D"/>
                </params>
            </method>
            <method name="dswap" type="void" line="111">
                <params>
                    <param name="x" type="DoubleMatrix1D"/>
                    <param name="y" type="DoubleMatrix1D"/>
                </params>
            </method>
            <method name="dswap" type="void" line="114">
                <params>
                    <param name="A" type="DoubleMatrix2D"/>
                    <param name="B" type="DoubleMatrix2D"/>
                </params>
            </method>
            <method name="dsymv" type="void" line="118">
                <params>
                    <param name="isUpperTriangular" type="boolean"/>
                    <param name="alpha" type="double"/>
                    <param name="A" type="DoubleMatrix2D"/>
                    <param name="x" type="DoubleMatrix1D"/>
                    <param name="beta" type="double"/>
                    <param name="y" type="DoubleMatrix1D"/>
                </params>
                <declaration name="size" type="int" line="121"/>
                <scope line="122"/>
                <declaration name="tmp" type="DoubleMatrix1D" line="125"/>
                <scope line="126">
                    <declaration name="sum" type="double" line="127"/>
                    <scope line="128"/>
                    <scope line="131"/>
                </scope>
            </method>
            <method name="dtrmv" type="void" line="138">
                <params>
                    <param name="isUpperTriangular" type="boolean"/>
                    <param name="transposeA" type="boolean"/>
                    <param name="isUnitTriangular" type="boolean"/>
                    <param name="A" type="DoubleMatrix2D"/>
                    <param name="x" type="DoubleMatrix1D"/>
                </params>
                <scope line="139"/>
                <declaration name="size" type="int" line="144"/>
                <scope line="145"/>
                <declaration name="b" type="DoubleMatrix1D" line="148"/>
                <declaration name="y" type="DoubleMatrix1D" line="149"/>
                <scope line="150"/>
                <scope line="153">
                    <scope line="154"/>
                </scope>
                <scope line="158">
                    <declaration name="sum" type="double" line="159"/>
                    <scope line="160">
                        <scope line="161"/>
                    </scope>
                    <scope line="166">
                        <scope line="168"/>
                    </scope>
                </scope>
            </method>
            <method name="idamax" type="int" line="176">
                <params>
                    <param name="x" type="DoubleMatrix1D"/>
                </params>
                <declaration name="maxIndex" type="int" line="177"/>
                <declaration name="maxValue" type="double" line="178"/>
                <scope line="179">
                    <declaration name="v" type="double" line="180"/>
                    <scope line="181"/>
                </scope>
            </method>
            <javadoc line="188">
                Implements the FORTRAN sign (not sin) function.
                  See the code for details.                
                <param>
                    a   a                    
                </param>
                <param>
                    b   b                    
                </param>
            </javadoc>
            <method name="sign" type="double" line="194">
                <params>
                    <param name="a" type="double"/>
                    <param name="b" type="double"/>
                </params>
                <scope line="195"/>
                <scope line="198"/>
            </method>
        </class>
    </source>