<?xml version="1.0" encoding="UTF-8"?>
    <source package="cern.colt.matrix.doublealgo">
        <import package="cern.colt.matrix.DoubleMatrix1D"/>
        <import package="cern.colt.matrix.DoubleMatrix2D"/>
        <class name="Transform" line="4">
            <extends class="cern.colt.PersistentObject"/>
            <javadoc line="4">
                Deprecated; Basic element-by-element transformations on {@link cern.colt.matrix.DoubleMatrix1D} and {@link cern.colt.matrix.DoubleMatrix2D}.
                  All transformations modify the first argument matrix to hold the result of the transformation.
                  Use idioms like &lt;tt&gt;result = mult(matrix.copy(),5)&lt;/tt&gt; to leave source matrices unaffected.
                  &lt;p&gt;
                  If your favourite transformation is not provided by this class, consider using method &lt;tt&gt;assign&lt;/tt&gt; in combination with prefabricated function objects of {@link cern.jet.math.Functions},
                  using idioms like 
                  &lt;table&gt;
                  &lt;td class=&quot;PRE&quot;&gt; 
                  &lt;pre&gt;
                  cern.jet.math.Functions F = cern.jet.math.Functions.functions; // alias
                  matrix.assign(F.square);
                  matrix.assign(F.sqrt);
                  matrix.assign(F.sin);
                  matrix.assign(F.log);
                  matrix.assign(F.log(b));
                  matrix.assign(otherMatrix, F.min);
                  matrix.assign(otherMatrix, F.max);
                  &lt;/pre&gt;
                  &lt;/td&gt;
                  &lt;/table&gt;
                  Here are some &lt;a href=&quot;../doc-files/functionObjects.html&quot;&gt;other examples&lt;/a&gt;.
                  &lt;p&gt;
                  Implementation: Performance optimized for medium to very large matrices.
                  In fact, there is now nomore a performance advantage in using this class; The assign (transform) methods directly defined on matrices are now just as fast.
                  Thus, this class will soon be removed altogether.                
                <deprecated>
                                        
                </deprecated>
                <author>
                    wolfgang.hoschek@cern.ch                    
                </author>
                <version>
                    1.0, 09/24/99                    
                </version>
            </javadoc>
            <declaration name="transform" type="Transform" line="35"/>
            <javadoc line="35">
                Little trick to allow for &quot;aliasing&quot;, that is, renaming this class.
                  Normally you would write
                  &lt;pre&gt;
                  Transform.mult(myMatrix,2);
                  Transform.plus(myMatrix,5);
                  &lt;/pre&gt;
                  Since this class has only static methods, but no instance methods
                  you can also shorten the name &quot;DoubleTransform&quot; to a name that better suits you, for example &quot;Trans&quot;.
                  &lt;pre&gt;
                  Transform T = Transform.transform; // kind of &quot;alias&quot;
                  T.mult(myMatrix,2);
                  T.plus(myMatrix,5);
                  &lt;/pre&gt;                
            </javadoc>
            <declaration name="F" type="cern.jet.math.Functions" line="51"/>
            <javadoc line="52">
                Makes this class non instantiable, but still let&apos;s others inherit from it.                
            </javadoc>
            <method name="Transform" type="constructor" line="55"/>
            <javadoc line="57">
                &lt;tt&gt;A[i] = Math.abs(A[i])&lt;/tt&gt;.                
                <param>
                    A the matrix to modify.                    
                </param>
                <return>
                    <tt>A</tt> (for convenience only).                    
                </return>
            </javadoc>
            <method name="abs" type="DoubleMatrix1D" line="62">
                <params>
                    <param name="A" type="DoubleMatrix1D"/>
                </params>
            </method>
            <javadoc line="65">
                &lt;tt&gt;A[row,col] = Math.abs(A[row,col])&lt;/tt&gt;.                
                <param>
                    A the matrix to modify.                    
                </param>
                <return>
                    <tt>A</tt> (for convenience only).                    
                </return>
            </javadoc>
            <method name="abs" type="DoubleMatrix2D" line="70">
                <params>
                    <param name="A" type="DoubleMatrix2D"/>
                </params>
            </method>
            <javadoc line="73">
                &lt;tt&gt;A = A / s &lt;=&gt; A[i] = A[i] / s&lt;/tt&gt;.                
                <param>
                    A the matrix to modify.                    
                </param>
                <param>
                    s the scalar; can have any value.                    
                </param>
                <return>
                    <tt>A</tt> (for convenience only).                    
                </return>
            </javadoc>
            <method name="div" type="DoubleMatrix1D" line="79">
                <params>
                    <param name="A" type="DoubleMatrix1D"/>
                    <param name="s" type="double"/>
                </params>
            </method>
            <javadoc line="82">
                &lt;tt&gt;A = A / B &lt;=&gt; A[i] = A[i] / B[i]&lt;/tt&gt;.                
                <param>
                    A the matrix to modify.                    
                </param>
                <param>
                    B the matrix to stay unaffected.                    
                </param>
                <return>
                    <tt>A</tt> (for convenience only).                    
                </return>
            </javadoc>
            <method name="div" type="DoubleMatrix1D" line="88">
                <params>
                    <param name="A" type="DoubleMatrix1D"/>
                    <param name="B" type="DoubleMatrix1D"/>
                </params>
            </method>
            <javadoc line="91">
                &lt;tt&gt;A = A / s &lt;=&gt; A[row,col] = A[row,col] / s&lt;/tt&gt;.                
                <param>
                    A the matrix to modify.                    
                </param>
                <param>
                    s the scalar; can have any value.                    
                </param>
                <return>
                    <tt>A</tt> (for convenience only).                    
                </return>
            </javadoc>
            <method name="div" type="DoubleMatrix2D" line="97">
                <params>
                    <param name="A" type="DoubleMatrix2D"/>
                    <param name="s" type="double"/>
                </params>
            </method>
            <javadoc line="100">
                &lt;tt&gt;A = A / B &lt;=&gt; A[row,col] = A[row,col] / B[row,col]&lt;/tt&gt;.                
                <param>
                    A the matrix to modify.                    
                </param>
                <param>
                    B the matrix to stay unaffected.                    
                </param>
                <return>
                    <tt>A</tt> (for convenience only).                    
                </return>
            </javadoc>
            <method name="div" type="DoubleMatrix2D" line="106">
                <params>
                    <param name="A" type="DoubleMatrix2D"/>
                    <param name="B" type="DoubleMatrix2D"/>
                </params>
            </method>
            <javadoc line="109">
                &lt;tt&gt;A[row,col] = A[row,col] == s ? 1 : 0&lt;/tt&gt;; ignores tolerance.                
                <param>
                    A the matrix to modify.                    
                </param>
                <param>
                    s the scalar; can have any value.                    
                </param>
                <return>
                    <tt>A</tt> (for convenience only).                    
                </return>
            </javadoc>
            <method name="equals" type="DoubleMatrix2D" line="115">
                <params>
                    <param name="A" type="DoubleMatrix2D"/>
                    <param name="s" type="double"/>
                </params>
            </method>
            <javadoc line="118">
                &lt;tt&gt;A[row,col] = A[row,col] == B[row,col] ? 1 : 0&lt;/tt&gt;; ignores tolerance.                
                <param>
                    A the matrix to modify.                    
                </param>
                <param>
                    B the matrix to stay unaffected.                    
                </param>
                <return>
                    <tt>A</tt> (for convenience only).                    
                </return>
            </javadoc>
            <method name="equals" type="DoubleMatrix2D" line="124">
                <params>
                    <param name="A" type="DoubleMatrix2D"/>
                    <param name="B" type="DoubleMatrix2D"/>
                </params>
            </method>
            <javadoc line="127">
                &lt;tt&gt;A[row,col] = A[row,col] &gt; s ? 1 : 0&lt;/tt&gt;.                
                <param>
                    A the matrix to modify.                    
                </param>
                <param>
                    s the scalar; can have any value.                    
                </param>
                <return>
                    <tt>A</tt> (for convenience only).                    
                </return>
            </javadoc>
            <method name="greater" type="DoubleMatrix2D" line="133">
                <params>
                    <param name="A" type="DoubleMatrix2D"/>
                    <param name="s" type="double"/>
                </params>
            </method>
            <javadoc line="136">
                &lt;tt&gt;A[row,col] = A[row,col] &gt; B[row,col] ? 1 : 0&lt;/tt&gt;.                
                <param>
                    A the matrix to modify.                    
                </param>
                <param>
                    B the matrix to stay unaffected.                    
                </param>
                <return>
                    <tt>A</tt> (for convenience only).                    
                </return>
            </javadoc>
            <method name="greater" type="DoubleMatrix2D" line="142">
                <params>
                    <param name="A" type="DoubleMatrix2D"/>
                    <param name="B" type="DoubleMatrix2D"/>
                </params>
            </method>
            <javadoc line="145">
                &lt;tt&gt;A[row,col] = A[row,col] &lt; s ? 1 : 0&lt;/tt&gt;.                
                <param>
                    A the matrix to modify.                    
                </param>
                <param>
                    s the scalar; can have any value.                    
                </param>
                <return>
                    <tt>A</tt> (for convenience only).                    
                </return>
            </javadoc>
            <method name="less" type="DoubleMatrix2D" line="151">
                <params>
                    <param name="A" type="DoubleMatrix2D"/>
                    <param name="s" type="double"/>
                </params>
            </method>
            <javadoc line="154">
                &lt;tt&gt;A[row,col] = A[row,col] &lt; B[row,col] ? 1 : 0&lt;/tt&gt;.                
                <param>
                    A the matrix to modify.                    
                </param>
                <param>
                    B the matrix to stay unaffected.                    
                </param>
                <return>
                    <tt>A</tt> (for convenience only).                    
                </return>
            </javadoc>
            <method name="less" type="DoubleMatrix2D" line="160">
                <params>
                    <param name="A" type="DoubleMatrix2D"/>
                    <param name="B" type="DoubleMatrix2D"/>
                </params>
            </method>
            <javadoc line="163">
                &lt;tt&gt;A = A - s &lt;=&gt; A[i] = A[i] - s&lt;/tt&gt;.                
                <param>
                    A the matrix to modify.                    
                </param>
                <param>
                    s the scalar; can have any value.                    
                </param>
                <return>
                    <tt>A</tt> (for convenience only).                    
                </return>
            </javadoc>
            <method name="minus" type="DoubleMatrix1D" line="169">
                <params>
                    <param name="A" type="DoubleMatrix1D"/>
                    <param name="s" type="double"/>
                </params>
            </method>
            <javadoc line="172">
                &lt;tt&gt;A = A - B &lt;=&gt; A[i] = A[i] - B[i]&lt;/tt&gt;.                
                <param>
                    A the matrix to modify.                    
                </param>
                <param>
                    B the matrix to stay unaffected.                    
                </param>
                <return>
                    <tt>A</tt> (for convenience only).                    
                </return>
            </javadoc>
            <method name="minus" type="DoubleMatrix1D" line="178">
                <params>
                    <param name="A" type="DoubleMatrix1D"/>
                    <param name="B" type="DoubleMatrix1D"/>
                </params>
            </method>
            <javadoc line="181">
                &lt;tt&gt;A = A - s &lt;=&gt; A[row,col] = A[row,col] - s&lt;/tt&gt;.                
                <param>
                    A the matrix to modify.                    
                </param>
                <param>
                    s the scalar; can have any value.                    
                </param>
                <return>
                    <tt>A</tt> (for convenience only).                    
                </return>
            </javadoc>
            <method name="minus" type="DoubleMatrix2D" line="187">
                <params>
                    <param name="A" type="DoubleMatrix2D"/>
                    <param name="s" type="double"/>
                </params>
            </method>
            <javadoc line="190">
                &lt;tt&gt;A = A - B &lt;=&gt; A[row,col] = A[row,col] - B[row,col]&lt;/tt&gt;.                
                <param>
                    A the matrix to modify.                    
                </param>
                <param>
                    B the matrix to stay unaffected.                    
                </param>
                <return>
                    <tt>A</tt> (for convenience only).                    
                </return>
            </javadoc>
            <method name="minus" type="DoubleMatrix2D" line="196">
                <params>
                    <param name="A" type="DoubleMatrix2D"/>
                    <param name="B" type="DoubleMatrix2D"/>
                </params>
            </method>
            <javadoc line="199">
                &lt;tt&gt;A = A - Bs &lt;=&gt; A[i] = A[i] - B[i]s&lt;/tt&gt;.                
                <param>
                    A the matrix to modify.                    
                </param>
                <param>
                    B the matrix to stay unaffected.                    
                </param>
                <param>
                    s the scalar; can have any value.                    
                </param>
                <return>
                    <tt>A</tt> (for convenience only).                    
                </return>
            </javadoc>
            <method name="minusMult" type="DoubleMatrix1D" line="206">
                <params>
                    <param name="A" type="DoubleMatrix1D"/>
                    <param name="B" type="DoubleMatrix1D"/>
                    <param name="s" type="double"/>
                </params>
            </method>
            <javadoc line="209">
                &lt;tt&gt;A = A - Bs &lt;=&gt; A[row,col] = A[row,col] - B[row,col]s&lt;/tt&gt;.                
                <param>
                    A the matrix to modify.                    
                </param>
                <param>
                    B the matrix to stay unaffected.                    
                </param>
                <param>
                    s the scalar; can have any value.                    
                </param>
                <return>
                    <tt>A</tt> (for convenience only).                    
                </return>
            </javadoc>
            <method name="minusMult" type="DoubleMatrix2D" line="216">
                <params>
                    <param name="A" type="DoubleMatrix2D"/>
                    <param name="B" type="DoubleMatrix2D"/>
                    <param name="s" type="double"/>
                </params>
            </method>
            <javadoc line="219">
                &lt;tt&gt;A = A  s &lt;=&gt; A[i] = A[i]  s&lt;/tt&gt;.                
                <param>
                    A the matrix to modify.                    
                </param>
                <param>
                    s the scalar; can have any value.                    
                </param>
                <return>
                    <tt>A</tt> (for convenience only).                    
                </return>
            </javadoc>
            <method name="mult" type="DoubleMatrix1D" line="225">
                <params>
                    <param name="A" type="DoubleMatrix1D"/>
                    <param name="s" type="double"/>
                </params>
            </method>
            <javadoc line="228">
                &lt;tt&gt;A = A  B &lt;=&gt; A[i] = A[i]  B[i]&lt;/tt&gt;.                
                <param>
                    A the matrix to modify.                    
                </param>
                <param>
                    B the matrix to stay unaffected.                    
                </param>
                <return>
                    <tt>A</tt> (for convenience only).                    
                </return>
            </javadoc>
            <method name="mult" type="DoubleMatrix1D" line="234">
                <params>
                    <param name="A" type="DoubleMatrix1D"/>
                    <param name="B" type="DoubleMatrix1D"/>
                </params>
            </method>
            <javadoc line="237">
                &lt;tt&gt;A = A  s &lt;=&gt; A[row,col] = A[row,col]  s&lt;/tt&gt;.                
                <param>
                    A the matrix to modify.                    
                </param>
                <param>
                    s the scalar; can have any value.                    
                </param>
                <return>
                    <tt>A</tt> (for convenience only).                    
                </return>
            </javadoc>
            <method name="mult" type="DoubleMatrix2D" line="243">
                <params>
                    <param name="A" type="DoubleMatrix2D"/>
                    <param name="s" type="double"/>
                </params>
            </method>
            <javadoc line="246">
                &lt;tt&gt;A = A  B &lt;=&gt; A[row,col] = A[row,col]  B[row,col]&lt;/tt&gt;.                
                <param>
                    A the matrix to modify.                    
                </param>
                <param>
                    B the matrix to stay unaffected.                    
                </param>
                <return>
                    <tt>A</tt> (for convenience only).                    
                </return>
            </javadoc>
            <method name="mult" type="DoubleMatrix2D" line="252">
                <params>
                    <param name="A" type="DoubleMatrix2D"/>
                    <param name="B" type="DoubleMatrix2D"/>
                </params>
            </method>
            <javadoc line="255">
                &lt;tt&gt;A = -A &lt;=&gt; A[i] = -A[i]&lt;/tt&gt; for all cells.                
                <return>
                    <tt>A</tt> (for convenience only).                    
                </return>
            </javadoc>
            <method name="negate" type="DoubleMatrix1D" line="259">
                <params>
                    <param name="A" type="DoubleMatrix1D"/>
                </params>
            </method>
            <javadoc line="262">
                &lt;tt&gt;A = -A &lt;=&gt; A[row,col] = -A[row,col]&lt;/tt&gt;.                
                <return>
                    <tt>A</tt> (for convenience only).                    
                </return>
            </javadoc>
            <method name="negate" type="DoubleMatrix2D" line="266">
                <params>
                    <param name="A" type="DoubleMatrix2D"/>
                </params>
            </method>
            <javadoc line="269">
                &lt;tt&gt;A = A + s &lt;=&gt; A[i] = A[i] + s&lt;/tt&gt;.                
                <param>
                    A the matrix to modify.                    
                </param>
                <param>
                    s the scalar; can have any value.                    
                </param>
                <return>
                    <tt>A</tt> (for convenience only).                    
                </return>
            </javadoc>
            <method name="plus" type="DoubleMatrix1D" line="275">
                <params>
                    <param name="A" type="DoubleMatrix1D"/>
                    <param name="s" type="double"/>
                </params>
            </method>
            <javadoc line="278">
                &lt;tt&gt;A = A + B &lt;=&gt; A[i] = A[i] + B[i]&lt;/tt&gt;.                
                <param>
                    A the matrix to modify.                    
                </param>
                <param>
                    B the matrix to stay unaffected.                    
                </param>
                <return>
                    <tt>A</tt> (for convenience only).                    
                </return>
            </javadoc>
            <method name="plus" type="DoubleMatrix1D" line="284">
                <params>
                    <param name="A" type="DoubleMatrix1D"/>
                    <param name="B" type="DoubleMatrix1D"/>
                </params>
            </method>
            <javadoc line="287">
                &lt;tt&gt;A = A + s &lt;=&gt; A[row,col] = A[row,col] + s&lt;/tt&gt;.                
                <param>
                    A the matrix to modify.                    
                </param>
                <param>
                    s the scalar; can have any value.                    
                </param>
                <return>
                    <tt>A</tt> (for convenience only).                    
                </return>
            </javadoc>
            <method name="plus" type="DoubleMatrix2D" line="293">
                <params>
                    <param name="A" type="DoubleMatrix2D"/>
                    <param name="s" type="double"/>
                </params>
            </method>
            <javadoc line="296">
                &lt;tt&gt;A = A + B &lt;=&gt; A[row,col] = A[row,col] + B[row,col]&lt;/tt&gt;.                
                <param>
                    A the matrix to modify.                    
                </param>
                <param>
                    B the matrix to stay unaffected.                    
                </param>
                <return>
                    <tt>A</tt> (for convenience only).                    
                </return>
            </javadoc>
            <method name="plus" type="DoubleMatrix2D" line="302">
                <params>
                    <param name="A" type="DoubleMatrix2D"/>
                    <param name="B" type="DoubleMatrix2D"/>
                </params>
            </method>
            <javadoc line="305">
                &lt;tt&gt;A = A + Bs&lt;=&gt; A[i] = A[i] + B[i]s&lt;/tt&gt;.                
                <param>
                    A the matrix to modify.                    
                </param>
                <param>
                    B the matrix to stay unaffected.                    
                </param>
                <param>
                    s the scalar; can have any value.                    
                </param>
                <return>
                    <tt>A</tt> (for convenience only).                    
                </return>
            </javadoc>
            <method name="plusMult" type="DoubleMatrix1D" line="312">
                <params>
                    <param name="A" type="DoubleMatrix1D"/>
                    <param name="B" type="DoubleMatrix1D"/>
                    <param name="s" type="double"/>
                </params>
            </method>
            <javadoc line="315">
                &lt;tt&gt;A = A + Bs &lt;=&gt; A[row,col] = A[row,col] + B[row,col]s&lt;/tt&gt;.                
                <param>
                    A the matrix to modify.                    
                </param>
                <param>
                    B the matrix to stay unaffected.                    
                </param>
                <param>
                    s the scalar; can have any value.                    
                </param>
                <return>
                    <tt>A</tt> (for convenience only).                    
                </return>
            </javadoc>
            <method name="plusMult" type="DoubleMatrix2D" line="322">
                <params>
                    <param name="A" type="DoubleMatrix2D"/>
                    <param name="B" type="DoubleMatrix2D"/>
                    <param name="s" type="double"/>
                </params>
            </method>
            <javadoc line="325">
                &lt;tt&gt;A = A&lt;sup&gt;s&lt;/sup&gt; &lt;=&gt; A[i] = Math.pow(A[i], s)&lt;/tt&gt;.                
                <param>
                    A the matrix to modify.                    
                </param>
                <param>
                    s the scalar; can have any value.                    
                </param>
                <return>
                    <tt>A</tt> (for convenience only).                    
                </return>
            </javadoc>
            <method name="pow" type="DoubleMatrix1D" line="331">
                <params>
                    <param name="A" type="DoubleMatrix1D"/>
                    <param name="s" type="double"/>
                </params>
            </method>
            <javadoc line="334">
                &lt;tt&gt;A = A&lt;sup&gt;B&lt;/sup&gt; &lt;=&gt; A[i] = Math.pow(A[i], B[i])&lt;/tt&gt;.                
                <param>
                    A the matrix to modify.                    
                </param>
                <param>
                    B the matrix to stay unaffected.                    
                </param>
                <return>
                    <tt>A</tt> (for convenience only).                    
                </return>
            </javadoc>
            <method name="pow" type="DoubleMatrix1D" line="340">
                <params>
                    <param name="A" type="DoubleMatrix1D"/>
                    <param name="B" type="DoubleMatrix1D"/>
                </params>
            </method>
            <javadoc line="343">
                &lt;tt&gt;A = A&lt;sup&gt;s&lt;/sup&gt; &lt;=&gt; A[row,col] = Math.pow(A[row,col], s)&lt;/tt&gt;.                
                <param>
                    A the matrix to modify.                    
                </param>
                <param>
                    s the scalar; can have any value.                    
                </param>
                <return>
                    <tt>A</tt> (for convenience only).                    
                </return>
            </javadoc>
            <method name="pow" type="DoubleMatrix2D" line="349">
                <params>
                    <param name="A" type="DoubleMatrix2D"/>
                    <param name="s" type="double"/>
                </params>
            </method>
            <javadoc line="352">
                &lt;tt&gt;A = A&lt;sup&gt;B&lt;/sup&gt; &lt;=&gt; A[row,col] = Math.pow(A[row,col], B[row,col])&lt;/tt&gt;.                
                <param>
                    A the matrix to modify.                    
                </param>
                <param>
                    B the matrix to stay unaffected.                    
                </param>
                <return>
                    <tt>A</tt> (for convenience only).                    
                </return>
            </javadoc>
            <method name="pow" type="DoubleMatrix2D" line="358">
                <params>
                    <param name="A" type="DoubleMatrix2D"/>
                    <param name="B" type="DoubleMatrix2D"/>
                </params>
            </method>
        </class>
    </source>