<?xml version="1.0" encoding="UTF-8"?>
    <source package="cern.colt.buffer">
        <import package="cern.colt.list.ObjectArrayList"/>
        <class name="ObjectBuffer" line="3">
            <extends class="cern.colt.PersistentObject"/>
            <implements interface="ObjectBufferConsumer"/>
            <javadoc line="3">
                Fixed sized (non resizable) streaming buffer connected to a target &lt;tt&gt;ObjectBufferConsumer&lt;/tt&gt; to which data is automatically flushed upon buffer overflow.                
                <author>
                    wolfgang.hoschek@cern.ch                    
                </author>
                <version>
                    1.0, 09/24/99                    
                </version>
            </javadoc>
            <declaration name="target" type="ObjectBufferConsumer" line="9"/>
            <declaration name="elements" type="Object[]" line="10"/>
            <declaration name="list" type="ObjectArrayList" line="11"/>
            <declaration name="capacity" type="int" line="12"/>
            <declaration name="size" type="int" line="13"/>
            <javadoc line="14">
                Constructs and returns a new buffer with the given target.                
                <param>
                    target the target to flush to.                    
                </param>
                <param>
                    capacity the number of points the buffer shall be capable of holding before overflowing and flushing to the target.                    
                </param>
            </javadoc>
            <method name="ObjectBuffer" type="constructor" line="19">
                <params>
                    <param name="target" type="ObjectBufferConsumer"/>
                    <param name="capacity" type="int"/>
                </params>
            </method>
            <javadoc line="26">
                Adds the specified element to the receiver.                
                <param>
                    element the element to add.                    
                </param>
            </javadoc>
            <method name="add" type="void" line="30">
                <params>
                    <param name="element" type="Object"/>
                </params>
            </method>
            <javadoc line="34">
                Adds all elements of the specified list to the receiver.                
                <param>
                    list the list of which all elements shall be added.                    
                </param>
            </javadoc>
            <method name="addAllOf" type="void" line="38">
                <params>
                    <param name="list" type="ObjectArrayList"/>
                </params>
                <declaration name="listSize" type="int" line="39"/>
            </method>
            <javadoc line="43">
                Sets the receiver&apos;s size to zero.
                  In other words, forgets about any internally buffered elements.                
            </javadoc>
            <method name="clear" type="void" line="47"/>
            <javadoc line="50">
                Adds all internally buffered elements to the receiver&apos;s target, then resets the current buffer size to zero.                
            </javadoc>
            <method name="flush" type="void" line="53">
                <scope line="54"/>
            </method>
        </class>
    </source>