<?xml version="1.0" encoding="UTF-8"?>
    <source package="cern.colt.buffer">
        <import package="cern.colt.list.IntArrayList"/>
        <class name="IntBuffer" line="12">
            <extends class="cern.colt.PersistentObject"/>
            <comment line="23">
                vars cached for speed                
            </comment>
            <implements interface="IntBufferConsumer"/>
            <javadoc line="12">
                Fixed sized (non resizable) streaming buffer connected to a target &lt;tt&gt;IntBufferConsumer&lt;/tt&gt; to which data is automatically flushed upon buffer overflow.                
                <author>
                    wolfgang.hoschek@cern.ch                    
                </author>
                <version>
                    1.0, 09/24/99                    
                </version>
            </javadoc>
            <declaration name="target" type="IntBufferConsumer" line="19"/>
            <declaration name="elements" type="int[]" line="20"/>
            <declaration name="list" type="IntArrayList" line="23"/>
            <declaration name="capacity" type="int" line="24"/>
            <declaration name="size" type="int" line="25"/>
            <javadoc line="26">
                Constructs and returns a new buffer with the given target.                
                <param>
                    target the target to flush to.                    
                </param>
                <param>
                    capacity the number of points the buffer shall be capable of holding before overflowing and flushing to the target.                    
                </param>
            </javadoc>
            <method name="IntBuffer" type="constructor" line="31">
                <params>
                    <param name="target" type="IntBufferConsumer"/>
                    <param name="capacity" type="int"/>
                </params>
            </method>
            <javadoc line="38">
                Adds the specified element to the receiver.                
                <param>
                    element the element to add.                    
                </param>
            </javadoc>
            <method name="add" type="void" line="43">
                <params>
                    <param name="element" type="int"/>
                </params>
            </method>
            <javadoc line="47">
                Adds all elements of the specified list to the receiver.                
                <param>
                    list the list of which all elements shall be added.                    
                </param>
            </javadoc>
            <method name="addAllOf" type="void" line="51">
                <params>
                    <param name="list" type="IntArrayList"/>
                </params>
                <declaration name="listSize" type="int" line="52"/>
            </method>
            <javadoc line="56">
                Sets the receiver&apos;s size to zero.
                  In other words, forgets about any internally buffered elements.                
            </javadoc>
            <method name="clear" type="void" line="60"/>
            <javadoc line="63">
                Adds all internally buffered elements to the receiver&apos;s target, then resets the current buffer size to zero.                
            </javadoc>
            <method name="flush" type="void" line="66">
                <scope line="67"/>
            </method>
        </class>
    </source>