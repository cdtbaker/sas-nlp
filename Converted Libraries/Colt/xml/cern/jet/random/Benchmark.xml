<?xml version="1.0" encoding="UTF-8"?>
    <source package="cern.jet.random">
        <import package="cern.colt.list.DoubleArrayList"/>
        <import package="cern.colt.list.IntArrayList"/>
        <import package="cern.jet.random.engine.RandomEngine"/>
        <class name="Benchmark" line="5">
            <extends class="cern.colt.PersistentObject"/>
            <javadoc line="5">
                Benchmarks random number generation from various distributions as well as PDF and CDF lookups.                
                <author>
                    wolfgang.hoschek@cern.ch                    
                </author>
                <version>
                    1.0, 09/24/99                    
                </version>
            </javadoc>
            <declaration name="randomGenerator" type="RandomEngine" line="11"/>
            <javadoc line="12">
                Makes this class non instantiable, but still let&apos;s others inherit from it.                
            </javadoc>
            <method name="Benchmark" type="constructor" line="15"/>
            <javadoc line="18">
                Prints the first &lt;tt&gt;size&lt;/tt&gt; random numbers generated by the distribution.                
            </javadoc>
            <method name="demo1" type="void" line="21">
                <declaration name="mean" type="double" line="22"/>
                <declaration name="variance" type="double" line="23"/>
                <declaration name="alpha" type="double" line="24"/>
                <declaration name="lambda" type="double" line="25"/>
                <declaration name="engine" type="cern.jet.random.engine.RandomEngine" line="26"/>
                <declaration name="dist" type="cern.jet.random.AbstractDistribution" line="27"/>
                <declaration name="size" type="int" line="28"/>
                <declaration name="numbers" type="cern.colt.list.DoubleArrayList" line="29"/>
                <declaration name="bin" type="hep.aida.bin.DynamicBin1D" line="31"/>
            </method>
            <javadoc line="35">
                Benchmarks all subclasses                
                <param>
                    args[0] the number of random numbers to be generated per subclass.                    
                </param>
                <param>
                    args[1] <tt>true</tt> prints each generated number, <tt>false</tt> does not print generated numbers (use this setting for benchmarking).                    
                </param>
            </javadoc>
            <method name="main" type="void" line="40">
                <params>
                    <param name="args" type="String"/>
                </params>
                <declaration name="size" type="int" line="41"/>
                <declaration name="print" type="boolean" line="42"/>
                <declaration name="mean" type="double" line="43"/>
                <declaration name="generatorName" type="String" line="44"/>
            </method>
            <javadoc line="47">
                Benchmarks all subclasses                
                <param>
                    size the number of random numbers to be generated per subclass.                    
                </param>
                <param>
                    print <tt>true</tt> prints each generated number, <tt>false</tt> does not print generated numbers (use this setting for benchmarking).                    
                </param>
                <param>
                    mean the mean for distributions that require a mean.                    
                </param>
            </javadoc>
            <method name="random" type="void" line="53">
                <params>
                    <param name="size" type="int"/>
                    <param name="print" type="boolean"/>
                    <param name="mean" type="double"/>
                    <param name="generatorName" type="String"/>
                </params>
                <declaration name="largeVariance" type="int" line="55"/>
                <declaration name="gen" type="RandomEngine" line="56"/>
                <scope line="57"/>
                <scope line="60"/>
            </method>
            <javadoc line="65">
                generates &lt;size&gt; random numbers from &lt;dist&gt;                
            </javadoc>
            <method name="randomInstance" type="void" line="68">
                <params>
                    <param name="size" type="int"/>
                    <param name="print" type="boolean"/>
                    <param name="dist" type="AbstractDistribution"/>
                </params>
                <declaration name="timer" type="cern.colt.Timer" line="70"/>
                <scope line="71">
                    <declaration name="rand" type="double" line="72"/>
                    <scope line="73"/>
                </scope>
            </method>
            <javadoc line="81">
                Prints the first &lt;tt&gt;size&lt;/tt&gt; random numbers generated by the distribution.                
            </javadoc>
            <method name="test" type="void" line="84">
                <params>
                    <param name="size" type="int"/>
                    <param name="distribution" type="AbstractDistribution"/>
                </params>
                <scope line="85"/>
            </method>
            <javadoc line="91">
                Prints the first &lt;tt&gt;size&lt;/tt&gt; random numbers generated by the distribution.                
            </javadoc>
            <method name="test2" type="void" line="94">
                <params>
                    <param name="size" type="int"/>
                    <param name="distribution" type="AbstractDistribution"/>
                </params>
                <declaration name="bin" type="hep.aida.bin.DynamicBin1D" line="95"/>
                <scope line="96"/>
            </method>
            <javadoc line="102">
                Prints the first &lt;tt&gt;size&lt;/tt&gt; random numbers generated by the distribution.                
            </javadoc>
            <method name="test2" type="void" line="105">
                <params>
                    <param name="size" type="int"/>
                    <param name="a" type="AbstractDistribution"/>
                    <param name="b" type="AbstractDistribution"/>
                </params>
                <declaration name="binA" type="hep.aida.bin.DynamicBin1D" line="106"/>
                <declaration name="binB" type="hep.aida.bin.DynamicBin1D" line="107"/>
                <scope line="108"/>
                <declaration name="freq" type="IntArrayList" line="113"/>
                <declaration name="distinct" type="DoubleArrayList" line="114"/>
                <declaration name="timer" type="cern.colt.Timer" line="115"/>
            </method>
        </class>
    </source>