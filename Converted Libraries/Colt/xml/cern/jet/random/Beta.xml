<?xml version="1.0" encoding="UTF-8"?>
    <source package="cern.jet.random">
        <import package="cern.jet.random.engine.RandomEngine"/>
        <import package="cern.jet.stat.Probability"/>
        <class name="Beta" line="4">
            <extends class="AbstractContinousDistribution"/>
            <javadoc line="4">
                Beta distribution; &lt;A HREF=&quot;http://www.cern.ch/RD11/rkb/AN16pp/node15.html#SECTION000150000000000000000&quot;&gt; math definition&lt;/A&gt;
                  and &lt;A HREF=&quot;http://www.statsoft.com/textbook/glosb.html#Beta Distribution&quot;&gt; animated definition&lt;/A&gt;.
                  &lt;p&gt;
                  &lt;tt&gt;p(x) = k  x^(alpha-1)  (1-x)^(beta-1)&lt;/tt&gt; with &lt;tt&gt;k = g(alpha+beta)/(g(alpha)g(beta))&lt;/tt&gt; and &lt;tt&gt;g(a)&lt;/tt&gt; being the gamma function.
                  &lt;p&gt;
                  Valid parameter ranges: &lt;tt&gt;alpha &amp;gt; 0&lt;/tt&gt; and &lt;tt&gt;beta &amp;gt; 0&lt;/tt&gt;.            
                  &lt;p&gt;
                  Instance methods operate on a user supplied uniform random number generator; they are unsynchronized.
                  &lt;dt&gt;
                  Static methods operate on a default uniform random number generator; they are synchronized.
                  &lt;p&gt;
                  &lt;b&gt;Implementation:&lt;/b&gt;
                  &lt;dt&gt;Method: Stratified Rejection/Patchwork Rejection.
                  High performance implementation.
                  &lt;dt&gt;This is a port of &lt;tt&gt;bsprc.c&lt;/tt&gt; from the &lt;A HREF=&quot;http://www.cis.tu-graz.ac.at/stat/stadl/random.html&quot;&gt;C-RAND / WIN-RAND&lt;/A&gt; library.
                  C-RAND&apos;s implementation, in turn, is based upon
                  &lt;p&gt;
                  H. Sakasegawa (1983): Stratified rejection and squeeze method for generating beta random numbers, 
                  Ann. Inst. Statist. Math. 35 B, 291-302.                                        
                  &lt;p&gt;
                  and
                  &lt;p&gt;
                  Stadlober E., H. Zechner (1993), &lt;A HREF=&quot;http://www.cis.tu-graz.ac.at/stat/stadl/random.html&quot;&gt; Generating beta variates via patchwork rejection,&lt;/A&gt;,
                  Computing 50, 1-18.                
                <author>
                    wolfgang.hoschek@cern.ch                    
                </author>
                <version>
                    1.0, 09/24/99                    
                </version>
            </javadoc>
            <declaration name="alpha" type="double" line="33"/>
            <declaration name="beta" type="double" line="34"/>
            <declaration name="PDF_CONST" type="double" line="35"/>
            <declaration name="a_last" type="double" line="36"/>
            <declaration name="a_" type="double" line="37"/>
            <declaration name="c" type="double" line="38"/>
            <declaration name="ml" type="double" line="39"/>
            <declaration name="p_last" type="double" line="40"/>
            <declaration name="a" type="double" line="41"/>
            <declaration name="ll" type="double" line="42"/>
            <declaration name="shared" type="Beta" line="43"/>
            <javadoc line="44">
                Constructs a Beta distribution.                
            </javadoc>
            <method name="Beta" type="constructor" line="47">
                <params>
                    <param name="alpha" type="double"/>
                    <param name="beta" type="double"/>
                    <param name="randomGenerator" type="RandomEngine"/>
                </params>
            </method>
            <javadoc line="51">
                                
            </javadoc>
            <method name="b00" type="double" line="53">
                <params>
                    <param name="a" type="double"/>
                    <param name="b" type="double"/>
                    <param name="randomGenerator" type="RandomEngine"/>
                </params>
                <declaration name="U" type="double" line="54"/>
                <scope line="55"/>
                <scope line="67">
                    <scope line="68">
                        <scope line="72"/>
                    </scope>
                    <scope line="76">
                        <scope line="80"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="87">
                                
            </javadoc>
            <method name="b01" type="double" line="89">
                <params>
                    <param name="a" type="double"/>
                    <param name="b" type="double"/>
                    <param name="randomGenerator" type="RandomEngine"/>
                </params>
                <declaration name="U" type="double" line="90"/>
                <scope line="91">
                    <scope line="102"/>
                    <scope line="106"/>
                </scope>
                <scope line="113">
                    <scope line="114">
                        <scope line="118"/>
                    </scope>
                    <scope line="122">
                        <scope line="126"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="133">
                                
            </javadoc>
            <method name="b1prs" type="double" line="135">
                <params>
                    <param name="p" type="double"/>
                    <param name="q" type="double"/>
                    <param name="randomGenerator" type="RandomEngine"/>
                </params>
                <declaration name="U" type="double" line="136"/>
                <scope line="137">
                    <scope line="145"/>
                    <scope line="150">
                        <scope line="154"/>
                        <scope line="159"/>
                    </scope>
                    <scope line="166"/>
                    <scope line="171">
                        <scope line="175"/>
                    </scope>
                </scope>
                <scope line="189">
                    <scope line="190">
                        <scope line="197"/>
                    </scope>
                    <scope line="202">
                        <scope line="210"/>
                    </scope>
                    <scope line="215"/>
                    <scope line="222"/>
                </scope>
            </method>
            <javadoc line="232">
                Returns the cumulative distribution function.                
            </javadoc>
            <method name="cdf" type="double" line="235">
                <params>
                    <param name="x" type="double"/>
                </params>
            </method>
            <method name="f" type="double" line="238">
                <params>
                    <param name="x" type="double"/>
                    <param name="a" type="double"/>
                    <param name="b" type="double"/>
                    <param name="m" type="double"/>
                </params>
            </method>
            <javadoc line="241">
                Returns a random number from the distribution.                
            </javadoc>
            <method name="nextDouble" type="double" line="244"/>
            <javadoc line="247">
                Returns a beta distributed random number; bypasses the internal state.                
            </javadoc>
            <method name="nextDouble" type="double" line="250">
                <params>
                    <param name="alpha" type="double"/>
                    <param name="beta" type="double"/>
                </params>
                <declaration name="a" type="double" line="251"/>
                <declaration name="b" type="double" line="252"/>
                <scope line="253">
                    <scope line="256"/>
                </scope>
                <scope line="260">
                    <scope line="263"/>
                </scope>
                <scope line="267"/>
            </method>
            <javadoc line="273">
                Returns the cumulative distribution function.                
            </javadoc>
            <method name="pdf" type="double" line="276">
                <params>
                    <param name="x" type="double"/>
                </params>
            </method>
            <javadoc line="280">
                Sets the parameters.                
            </javadoc>
            <method name="setState" type="void" line="283">
                <params>
                    <param name="alpha" type="double"/>
                    <param name="beta" type="double"/>
                </params>
            </method>
            <javadoc line="288">
                Returns a random number from the distribution.                
            </javadoc>
            <method name="staticNextDouble" type="double" line="291">
                <params>
                    <param name="alpha" type="double"/>
                    <param name="beta" type="double"/>
                </params>
                <scope line="292"/>
            </method>
            <javadoc line="296">
                Returns a String representation of the receiver.                
            </javadoc>
            <method name="toString" type="String" line="299"/>
            <javadoc line="302">
                Sets the uniform random number generated shared by all &lt;b&gt;static&lt;/b&gt; methods.                
                <param>
                    randomGenerator the new uniform random number generator to be shared.                    
                </param>
            </javadoc>
            <method name="xstaticSetRandomGenerator" type="void" line="306">
                <params>
                    <param name="randomGenerator" type="RandomEngine"/>
                </params>
                <scope line="307"/>
            </method>
        </class>
    </source>