<?xml version="1.0" encoding="UTF-8"?>
    <source package="cern.jet.random">
        <import package="cern.jet.random.engine.RandomEngine"/>
        <import package="cern.jet.stat.Probability"/>
        <class name="Gamma" line="13">
            <extends class="AbstractContinousDistribution"/>
            <comment line="55">
                The uniform random number generated shared by all &lt;b&gt;static&lt;/b&gt; methods.                
            </comment>
            <javadoc line="13">
                Gamma distribution; &lt;A HREF=&quot;http://wwwinfo.cern.ch/asdoc/shortwrupsdir/g106/top.html&quot;&gt; math definition&lt;/A&gt;,
                  &lt;A HREF=&quot;http://www.cern.ch/RD11/rkb/AN16pp/node96.html#SECTION000960000000000000000&quot;&gt; definition of gamma function&lt;/A&gt;
                  and &lt;A HREF=&quot;http://www.statsoft.com/textbook/glosf.html#Gamma Distribution&quot;&gt; animated definition&lt;/A&gt;. 
                  &lt;p&gt;
                  &lt;tt&gt;p(x) = k  x^(alpha-1)  e^(-x/beta)&lt;/tt&gt; with &lt;tt&gt;k = 1/(g(alpha)  b^a))&lt;/tt&gt; and &lt;tt&gt;g(a)&lt;/tt&gt; being the gamma function.
                  &lt;p&gt;
                  Valid parameter ranges: &lt;tt&gt;alpha &amp;gt; 0&lt;/tt&gt;.
                  &lt;p&gt;
                  Note: For a Gamma distribution to have the mean &lt;tt&gt;mean&lt;/tt&gt; and variance &lt;tt&gt;variance&lt;/tt&gt;, set the parameters as follows:
                  &lt;pre&gt;
                  alpha = meanmean / variance; lambda = 1 / (variance / mean); 
                  &lt;/pre&gt;
                  &lt;p&gt;
                  Instance methods operate on a user supplied uniform random number generator; they are unsynchronized.
                  &lt;dt&gt;
                  Static methods operate on a default uniform random number generator; they are synchronized.
                  &lt;p&gt;
                  &lt;b&gt;Implementation:&lt;/b&gt; 
                  &lt;dt&gt;
                  Method: Acceptance Rejection combined with Acceptance Complement.
                  &lt;dt&gt;
                  High performance implementation. This is a port of &lt;A HREF=&quot;http://wwwinfo.cern.ch/asd/lhc++/clhep/manual/RefGuide/Random/RandGamma.html&quot;&gt;RandGamma&lt;/A&gt; used in &lt;A HREF=&quot;http://wwwinfo.cern.ch/asd/lhc++/clhep&quot;&gt;CLHEP 1.4.0&lt;/A&gt; (C++).
                  CLHEP&apos;s implementation, in turn, is based on &lt;tt&gt;gds.c&lt;/tt&gt; from the &lt;A HREF=&quot;http://www.cis.tu-graz.ac.at/stat/stadl/random.html&quot;&gt;C-RAND / WIN-RAND&lt;/A&gt; library.
                  C-RAND&apos;s implementation, in turn, is based upon
                  &lt;p&gt;
                  J.H. Ahrens, U. Dieter (1974): Computer methods for sampling from gamma, beta, Poisson and binomial distributions, 
                  Computing 12, 223-246.
                  &lt;p&gt;
                  and
                  &lt;p&gt;
                  J.H. Ahrens, U. Dieter (1982): Generating gamma variates by a modified rejection technique,
                  Communications of the ACM 25, 47-54.                
                <author>
                    wolfgang.hoschek@cern.ch                    
                </author>
                <version>
                    1.0, 09/24/99                    
                </version>
            </javadoc>
            <declaration name="alpha" type="double" line="51"/>
            <declaration name="lambda" type="double" line="52"/>
            <declaration name="shared" type="Gamma" line="55"/>
            <javadoc line="56">
                Constructs a Gamma distribution.
                  Example: alpha=1.0, lambda=1.0.                
                <throws>
                    IllegalArgumentException if &lt;tt&gt;alpha &amp;lt;= 0.0 || lambda &amp;lt;= 0.0&lt;/tt&gt;.                    
                </throws>
            </javadoc>
            <method name="Gamma" type="constructor" line="61">
                <params>
                    <param name="alpha" type="double"/>
                    <param name="lambda" type="double"/>
                    <param name="randomGenerator" type="RandomEngine"/>
                </params>
            </method>
            <javadoc line="65">
                Returns the cumulative distribution function.                
            </javadoc>
            <method name="cdf" type="double" line="68">
                <params>
                    <param name="x" type="double"/>
                </params>
            </method>
            <javadoc line="71">
                Returns a random number from the distribution.                
            </javadoc>
            <method name="nextDouble" type="double" line="74"/>
            <javadoc line="77">
                Returns a random number from the distribution; bypasses the internal state.                
            </javadoc>
            <method name="nextDouble" type="double" line="80">
                <params>
                    <param name="alpha" type="double"/>
                    <param name="lambda" type="double"/>
                </params>
                <comment line="82">
                    Gamma Distribution - Acceptance Rejection combined with     
                                             Acceptance Complement                  
                                                                                    
                    
                                                                                    
                     FUNCTION:    - gds samples a random number from the standard   
                                    gamma distribution with parameter  a &gt; 0.       
                                    Acceptance Rejection  gs  for  a &lt; 1 ,          
                                    Acceptance Complement gd  for  a &gt;= 1 .         
                     REFERENCES:  - J.H. Ahrens, U. Dieter (1974): Computer methods 
                                    for sampling from gamma, beta, Poisson and      
                                    binomial distributions, Computing 12, 223-246.  
                                  - J.H. Ahrens, U. Dieter (1982): Generating gamma 
                                    variates by a modified rejection technique,     
                                    Communications of the ACM 25, 47-54.            
                     SUBPROGRAMS: - drand(seed) ... (0,1)-Uniform generator with    
                                    unsigned long integer seed                     
                                  - NORMAL(seed) ... Normal generator N(0,1).                    
                </comment>
                <comment line="120">
                    Check for invalid input values                    
                </comment>
                <comment line="125">
                    CASE A: Acceptance rejection algorithm gs                    
                </comment>
                <comment line="126">
                    Step 1                    
                </comment>
                <comment line="129">
                    Step 2. Case gds &lt;= 1                    
                </comment>
                <comment line="133">
                    Step 3. Case gds &gt; 1                    
                </comment>
                <comment line="140">
                    CASE B: Acceptance complement algorithm gd (gaussian distribution, box muller transformation)                    
                </comment>
                <comment line="141">
                    Step 1. Preparations                    
                </comment>
                <comment line="147">
                    Step 2. Normal deviate                    
                </comment>
                <comment line="156">
                    Immediate acceptance                    
                </comment>
                <comment line="158">
                    Step 3. Uniform random number                    
                </comment>
                <comment line="159">
                    Squeeze acceptance                    
                </comment>
                <comment line="161">
                    Step 4. Set-up for hat case                    
                </comment>
                <comment line="184">
                    Step 5. Calculation of q                    
                </comment>
                <comment line="185">
                    Step 6.                    
                </comment>
                <comment line="192">
                    Step 7. Quotient acceptance                    
                </comment>
                <comment line="196">
                    Step 8. Double exponential deviate t                    
                </comment>
                <comment line="203">
                    Step 9. Rejection of t                    
                </comment>
                <comment line="204">
                    Step 10. New q(t)                    
                </comment>
                <comment line="212">
                    Step 11.                    
                </comment>
                <comment line="219">
                    Step 12. Hat acceptance                    
                </comment>
                <declaration name="a" type="double" line="103"/>
                <declaration name="aa" type="double" line="104"/>
                <declaration name="gds" type="double" line="116"/>
                <declaration name="v1" type="double" line="117"/>
                <scope line="124">
                    <scope line="126">
                        <scope line="128"/>
                        <scope line="132"/>
                    </scope>
                </scope>
                <scope line="139">
                    <scope line="140"/>
                    <scope line="147"/>
                    <scope line="160">
                        <scope line="165">
                            <scope line="166"/>
                            <scope line="171"/>
                        </scope>
                        <scope line="177"/>
                    </scope>
                    <scope line="183">
                        <scope line="185"/>
                        <scope line="188"/>
                    </scope>
                    <scope line="195">
                        <scope line="196"/>
                        <scope line="204"/>
                        <scope line="207"/>
                        <scope line="212"/>
                        <scope line="215"/>
                        <scope line="219"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="226">
                Returns the probability distribution function.                
            </javadoc>
            <method name="pdf" type="double" line="229">
                <params>
                    <param name="x" type="double"/>
                </params>
                <scope line="231"/>
            </method>
            <javadoc line="239">
                Sets the mean and variance.                
                <throws>
                    IllegalArgumentException if &lt;tt&gt;alpha &amp;lt;= 0.0 || lambda &amp;lt;= 0.0&lt;/tt&gt;.                    
                </throws>
            </javadoc>
            <method name="setState" type="void" line="243">
                <params>
                    <param name="alpha" type="double"/>
                    <param name="lambda" type="double"/>
                </params>
            </method>
            <javadoc line="249">
                Returns a random number from the distribution.                
                <throws>
                    IllegalArgumentException if &lt;tt&gt;alpha &amp;lt;= 0.0 || lambda &amp;lt;= 0.0&lt;/tt&gt;.                    
                </throws>
            </javadoc>
            <method name="staticNextDouble" type="double" line="253">
                <params>
                    <param name="alpha" type="double"/>
                    <param name="lambda" type="double"/>
                </params>
                <scope line="254"/>
            </method>
            <javadoc line="258">
                Returns a String representation of the receiver.                
            </javadoc>
            <method name="toString" type="String" line="261"/>
            <javadoc line="264">
                Sets the uniform random number generated shared by all &lt;b&gt;static&lt;/b&gt; methods.                
                <param>
                    randomGenerator the new uniform random number generator to be shared.                    
                </param>
            </javadoc>
            <method name="xstaticSetRandomGenerator" type="void" line="268">
                <params>
                    <param name="randomGenerator" type="RandomEngine"/>
                </params>
                <scope line="269"/>
            </method>
        </class>
    </source>