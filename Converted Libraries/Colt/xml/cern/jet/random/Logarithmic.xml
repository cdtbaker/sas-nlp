<?xml version="1.0" encoding="UTF-8"?>
    <source package="cern.jet.random">
        <import package="cern.jet.random.engine.RandomEngine"/>
        <class name="Logarithmic" line="3">
            <extends class="AbstractContinousDistribution"/>
            <javadoc line="3">
                Logarithmic distribution.
                  &lt;p&gt;
                  Valid parameter ranges: &lt;tt&gt;0 &amp;lt; p &amp;lt; 1&lt;/tt&gt;.
                  &lt;p&gt;
                  Instance methods operate on a user supplied uniform random number generator; they are unsynchronized.
                  &lt;dt&gt;
                  Static methods operate on a default uniform random number generator; they are synchronized.
                  &lt;p&gt;
                  &lt;b&gt;Implementation:&lt;/b&gt; 
                  &lt;dt&gt;
                  Method: Inversion/Transformation.
                  &lt;dt&gt;
                  This is a port of &lt;tt&gt;lsk.c&lt;/tt&gt; from the &lt;A HREF=&quot;http://www.cis.tu-graz.ac.at/stat/stadl/random.html&quot;&gt;C-RAND / WIN-RAND&lt;/A&gt; library.
                  C-RAND&apos;s implementation, in turn, is based upon
                  &lt;p&gt;
                  A.W. Kemp (1981): Efficient generation of logarithmically distributed pseudo-random variables, Appl. Statist. 30, 249-253.                
                <author>
                    wolfgang.hoschek@cern.ch                    
                </author>
                <version>
                    1.0, 09/24/99                    
                </version>
            </javadoc>
            <declaration name="my_p" type="double" line="24"/>
            <declaration name="t" type="double" line="25"/>
            <declaration name="shared" type="Logarithmic" line="26"/>
            <javadoc line="27">
                Constructs a Logarithmic distribution.                
            </javadoc>
            <method name="Logarithmic" type="constructor" line="30">
                <params>
                    <param name="p" type="double"/>
                    <param name="randomGenerator" type="RandomEngine"/>
                </params>
            </method>
            <javadoc line="34">
                Returns a random number from the distribution.                
            </javadoc>
            <method name="nextDouble" type="double" line="37"/>
            <javadoc line="40">
                Returns a random number from the distribution; bypasses the internal state.                
            </javadoc>
            <method name="nextDouble" type="double" line="43">
                <params>
                    <param name="a" type="double"/>
                </params>
                <declaration name="u" type="double" line="44"/>
                <declaration name="k" type="int" line="45"/>
                <scope line="46"/>
                <scope line="52">
                    <scope line="55"/>
                </scope>
                <scope line="66"/>
            </method>
            <javadoc line="73">
                Sets the distribution parameter.                
            </javadoc>
            <method name="setState" type="void" line="76">
                <params>
                    <param name="p" type="double"/>
                </params>
            </method>
            <javadoc line="79">
                Returns a random number from the distribution.                
            </javadoc>
            <method name="staticNextDouble" type="double" line="82">
                <params>
                    <param name="p" type="double"/>
                </params>
                <scope line="83"/>
            </method>
            <javadoc line="87">
                Returns a String representation of the receiver.                
            </javadoc>
            <method name="toString" type="String" line="90"/>
            <javadoc line="93">
                Sets the uniform random number generated shared by all &lt;b&gt;static&lt;/b&gt; methods.                
                <param>
                    randomGenerator the new uniform random number generator to be shared.                    
                </param>
            </javadoc>
            <method name="xstaticSetRandomGenerator" type="void" line="97">
                <params>
                    <param name="randomGenerator" type="RandomEngine"/>
                </params>
                <scope line="98"/>
            </method>
        </class>
    </source>