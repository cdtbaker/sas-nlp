<?xml version="1.0" encoding="UTF-8"?>
    <source package="cern.jet.random">
        <import package="cern.jet.random.engine.RandomEngine"/>
        <class name="Exponential" line="3">
            <extends class="AbstractContinousDistribution"/>
            <javadoc line="3">
                Exponential Distribution (aka Negative Exponential Distribution); See the &lt;A HREF=&quot;http://www.cern.ch/RD11/rkb/AN16pp/node78.html#SECTION000780000000000000000&quot;&gt; math definition&lt;/A&gt;
                  &lt;A HREF=&quot;http://www.statsoft.com/textbook/glose.html#Exponential Distribution&quot;&gt; animated definition&lt;/A&gt;.
                  &lt;p&gt;
                  &lt;tt&gt;p(x) = lambdaexp(-xlambda)&lt;/tt&gt; for &lt;tt&gt;x &amp;gt;= 0&lt;/tt&gt;, &lt;tt&gt;lambda &amp;gt; 0&lt;/tt&gt;.
                  &lt;p&gt;
                  Instance methods operate on a user supplied uniform random number generator; they are unsynchronized.
                  &lt;dt&gt;
                  Static methods operate on a default uniform random number generator; they are synchronized.
                  &lt;p&gt;                
                <author>
                    wolfgang.hoschek@cern.ch                    
                </author>
                <version>
                    1.0, 09/24/99                    
                </version>
            </javadoc>
            <declaration name="lambda" type="double" line="17"/>
            <declaration name="shared" type="Exponential" line="18"/>
            <javadoc line="19">
                Constructs a Negative Exponential distribution.                
            </javadoc>
            <method name="Exponential" type="constructor" line="22">
                <params>
                    <param name="lambda" type="double"/>
                    <param name="randomGenerator" type="RandomEngine"/>
                </params>
            </method>
            <javadoc line="26">
                Returns the cumulative distribution function.                
            </javadoc>
            <method name="cdf" type="double" line="29">
                <params>
                    <param name="x" type="double"/>
                </params>
            </method>
            <javadoc line="33">
                Returns a random number from the distribution.                
            </javadoc>
            <method name="nextDouble" type="double" line="36"/>
            <javadoc line="39">
                Returns a random number from the distribution; bypasses the internal state.                
            </javadoc>
            <method name="nextDouble" type="double" line="42">
                <params>
                    <param name="lambda" type="double"/>
                </params>
            </method>
            <javadoc line="45">
                Returns the probability distribution function.                
            </javadoc>
            <method name="pdf" type="double" line="48">
                <params>
                    <param name="x" type="double"/>
                </params>
            </method>
            <javadoc line="52">
                Sets the mean.                
            </javadoc>
            <method name="setState" type="void" line="55">
                <params>
                    <param name="lambda" type="double"/>
                </params>
            </method>
            <javadoc line="58">
                Returns a random number from the distribution with the given lambda.                
            </javadoc>
            <method name="staticNextDouble" type="double" line="61">
                <params>
                    <param name="lambda" type="double"/>
                </params>
                <scope line="62"/>
            </method>
            <javadoc line="66">
                Returns a String representation of the receiver.                
            </javadoc>
            <method name="toString" type="String" line="69"/>
            <javadoc line="72">
                Sets the uniform random number generated shared by all &lt;b&gt;static&lt;/b&gt; methods.                
                <param>
                    randomGenerator the new uniform random number generator to be shared.                    
                </param>
            </javadoc>
            <method name="xstaticSetRandomGenerator" type="void" line="76">
                <params>
                    <param name="randomGenerator" type="RandomEngine"/>
                </params>
                <scope line="77"/>
            </method>
        </class>
    </source>