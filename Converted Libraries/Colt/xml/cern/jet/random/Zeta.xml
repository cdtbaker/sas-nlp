<?xml version="1.0" encoding="UTF-8"?>
    <source package="cern.jet.random">
        <import package="cern.jet.random.engine.RandomEngine"/>
        <class name="Zeta" line="3">
            <extends class="AbstractDiscreteDistribution"/>
            <javadoc line="3">
                Zeta distribution.
                  &lt;p&gt;
                  Valid parameter ranges: &lt;tt&gt;ro &amp;gt; 0&lt;/tt&gt; and &lt;tt&gt;pk &amp;gt;= 0&lt;/tt&gt;.
                  &lt;dt&gt;
                  If either &lt;tt&gt;ro &amp;gt; 100&lt;/tt&gt;  or  &lt;tt&gt;k &amp;gt; 10000&lt;/tt&gt; numerical problems in
                  computing the theoretical moments arise, therefore &lt;tt&gt;ro &amp;lt;= 100&lt;/tt&gt; and 
                  &lt;tt&gt;k &amp;lt;= 10000&lt;/tt&gt; are recommended.                                      
                  &lt;p&gt;
                  Instance methods operate on a user supplied uniform random number generator; they are unsynchronized.
                  &lt;dt&gt;
                  Static methods operate on a default uniform random number generator; they are synchronized.
                  &lt;p&gt;
                  &lt;b&gt;Implementation:&lt;/b&gt; 
                  &lt;dt&gt;Method: Acceptance/Rejection.
                  High performance implementation.
                  &lt;dt&gt;This is a port and adaption of &lt;tt&gt;Zeta.c&lt;/tt&gt; from the &lt;A HREF=&quot;http://www.cis.tu-graz.ac.at/stat/stadl/random.html&quot;&gt;C-RAND / WIN-RAND&lt;/A&gt; library.
                  C-RAND&apos;s implementation, in turn, is based upon
                  &lt;p&gt;
                  J. Dagpunar (1988): Principles of Random Variate  Generation, Clarendon Press, Oxford.                
                <author>
                    wolfgang.hoschek@cern.ch                    
                </author>
                <version>
                    1.0, 09/24/99                    
                </version>
            </javadoc>
            <declaration name="ro" type="double" line="27"/>
            <declaration name="pk" type="double" line="28"/>
            <declaration name="c" type="double" line="29"/>
            <declaration name="maxlongint" type="double" line="30"/>
            <declaration name="shared" type="Zeta" line="31"/>
            <javadoc line="32">
                Constructs a Zeta distribution.                
            </javadoc>
            <method name="Zeta" type="constructor" line="35">
                <params>
                    <param name="ro" type="double"/>
                    <param name="pk" type="double"/>
                    <param name="randomGenerator" type="RandomEngine"/>
                </params>
            </method>
            <javadoc line="39">
                Returns a zeta distributed random number.                
            </javadoc>
            <method name="generateZeta" type="long" line="42">
                <params>
                    <param name="ro" type="double"/>
                    <param name="pk" type="double"/>
                    <param name="randomGenerator" type="RandomEngine"/>
                </params>
                <declaration name="u" type="double" line="43"/>
                <declaration name="k" type="long" line="44"/>
                <scope line="45">
                    <scope line="48"/>
                    <scope line="52"/>
                </scope>
                <scope line="57">
                    <scope line="58"/>
                </scope>
            </method>
            <javadoc line="70">
                Returns a random number from the distribution.                
            </javadoc>
            <method name="nextInt" type="int" line="73"/>
            <javadoc line="76">
                Sets the parameters.                
            </javadoc>
            <method name="setState" type="void" line="79">
                <params>
                    <param name="ro" type="double"/>
                    <param name="pk" type="double"/>
                </params>
            </method>
            <javadoc line="83">
                Returns a random number from the distribution.                
            </javadoc>
            <method name="staticNextInt" type="int" line="86">
                <params>
                    <param name="ro" type="double"/>
                    <param name="pk" type="double"/>
                </params>
                <scope line="87"/>
            </method>
            <javadoc line="92">
                Returns a String representation of the receiver.                
            </javadoc>
            <method name="toString" type="String" line="95"/>
            <javadoc line="98">
                Sets the uniform random number generated shared by all &lt;b&gt;static&lt;/b&gt; methods.                
                <param>
                    randomGenerator the new uniform random number generator to be shared.                    
                </param>
            </javadoc>
            <method name="xstaticSetRandomGenerator" type="void" line="102">
                <params>
                    <param name="randomGenerator" type="RandomEngine"/>
                </params>
                <scope line="103"/>
            </method>
        </class>
    </source>