<?xml version="1.0" encoding="UTF-8"?>
    <source package="cern.jet.random">
        <import package="cern.jet.random.engine.RandomEngine"/>
        <class name="BreitWignerMeanSquare" line="12">
            <extends class="BreitWigner"/>
            <comment line="26">
                helper                
            </comment>
            <comment line="28">
                The uniform random number generated shared by all &lt;b&gt;static&lt;/b&gt; methods.                
            </comment>
            <javadoc line="12">
                Mean-square BreitWigner distribution; See the &lt;A HREF=&quot;http://www.cern.ch/RD11/rkb/AN16pp/node23.html#SECTION000230000000000000000&quot;&gt; math definition&lt;/A&gt;.
                  &lt;p&gt;
                  Instance methods operate on a user supplied uniform random number generator; they are unsynchronized.
                  &lt;dt&gt;
                  Static methods operate on a default uniform random number generator; they are synchronized. 
                  &lt;p&gt;
                  &lt;b&gt;Implementation:&lt;/b&gt; This is a port of &lt;A HREF=&quot;http://wwwinfo.cern.ch/asd/lhc++/clhep/manual/RefGuide/Random/RandBreitWigner.html&quot;&gt;RandBreitWigner&lt;/A&gt; used in &lt;A HREF=&quot;http://wwwinfo.cern.ch/asd/lhc++/clhep&quot;&gt;CLHEP 1.4.0&lt;/A&gt; (C++).                
                <author>
                    wolfgang.hoschek@cern.ch                    
                </author>
                <version>
                    1.0, 09/24/99                    
                </version>
            </javadoc>
            <declaration name="uniform" type="Uniform" line="25"/>
            <declaration name="shared" type="BreitWigner" line="28"/>
            <javadoc line="29">
                Constructs a mean-squared BreitWigner distribution.                
                <param>
                    cut </tt>cut==Double.NEGATIVE_INFINITY</tt> indicates "don't cut".                    
                </param>
            </javadoc>
            <method name="BreitWignerMeanSquare" type="constructor" line="33">
                <params>
                    <param name="mean" type="double"/>
                    <param name="gamma" type="double"/>
                    <param name="cut" type="double"/>
                    <param name="randomGenerator" type="RandomEngine"/>
                </params>
            </method>
            <javadoc line="37">
                Returns a deep copy of the receiver; the copy will produce identical sequences.
                  After this call has returned, the copy and the receiver have equal but separate state.                
                <return>
                    a copy of the receiver.                    
                </return>
            </javadoc>
            <method name="clone" type="Object" line="43">
                <declaration name="copy" type="BreitWignerMeanSquare" line="44"/>
            </method>
            <javadoc line="48">
                Returns a mean-squared random number from the distribution; bypasses the internal state.                
                <param>
                    cut </tt>cut==Double.NEGATIVE_INFINITY</tt> indicates "don't cut".                    
                </param>
            </javadoc>
            <method name="nextDouble" type="double" line="52">
                <params>
                    <param name="mean" type="double"/>
                    <param name="gamma" type="double"/>
                    <param name="cut" type="double"/>
                </params>
                <comment line="54">
                    don&apos;t cut                    
                </comment>
                <scope line="54">
                    <declaration name="val" type="double" line="55"/>
                    <declaration name="rval" type="double" line="56"/>
                    <declaration name="displ" type="double" line="57"/>
                </scope>
                <scope line="60">
                    <declaration name="tmp" type="double" line="61"/>
                    <declaration name="lower" type="double" line="62"/>
                    <declaration name="upper" type="double" line="63"/>
                    <declaration name="rval" type="double" line="64"/>
                    <declaration name="displ" type="double" line="66"/>
                </scope>
            </method>
            <javadoc line="70">
                Returns a random number from the distribution.                
                <param>
                    cut </tt>cut==Double.NEGATIVE_INFINITY</tt> indicates "don't cut".                    
                </param>
            </javadoc>
            <method name="staticNextDouble" type="double" line="74">
                <params>
                    <param name="mean" type="double"/>
                    <param name="gamma" type="double"/>
                    <param name="cut" type="double"/>
                </params>
                <scope line="75"/>
            </method>
            <javadoc line="79">
                Sets the uniform random number generated shared by all &lt;b&gt;static&lt;/b&gt; methods.                
                <param>
                    randomGenerator the new uniform random number generator to be shared.                    
                </param>
            </javadoc>
            <method name="xstaticSetRandomGenerator" type="void" line="83">
                <params>
                    <param name="randomGenerator" type="RandomEngine"/>
                </params>
                <scope line="84"/>
            </method>
        </class>
    </source>