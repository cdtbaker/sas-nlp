<?xml version="1.0" encoding="UTF-8"?>
    <source package="cern.jet.random">
        <import package="cern.jet.random.engine.RandomEngine"/>
        <class name="Hyperbolic" line="3">
            <extends class="AbstractContinousDistribution"/>
            <javadoc line="3">
                Hyperbolic distribution. 
                  &lt;p&gt;
                  Valid parameter ranges: &lt;tt&gt;alpha &amp;gt; 0&lt;/tt&gt; and &lt;tt&gt;beta &amp;gt; 0&lt;/tt&gt;.            
                  &lt;p&gt;
                  Instance methods operate on a user supplied uniform random number generator; they are unsynchronized.
                  &lt;dt&gt;
                  Static methods operate on a default uniform random number generator; they are synchronized.
                  &lt;p&gt;
                  &lt;b&gt;Implementation:&lt;/b&gt;
                  &lt;dt&gt;Method: Non-Universal Rejection.
                  High performance implementation.
                  &lt;dt&gt;This is a port of &lt;tt&gt;hyplc.c&lt;/tt&gt; from the &lt;A HREF=&quot;http://www.cis.tu-graz.ac.at/stat/stadl/random.html&quot;&gt;C-RAND / WIN-RAND&lt;/A&gt; library.
                  C-RAND&apos;s implementation, in turn, is based upon
                  &lt;p&gt;
                  L. Devroye (1986): Non-Uniform Random Variate Generation, Springer Verlag, New York.                
                <author>
                    wolfgang.hoschek@cern.ch                    
                </author>
                <version>
                    1.0, 09/24/99                    
                </version>
            </javadoc>
            <declaration name="alpha" type="double" line="23"/>
            <declaration name="beta" type="double" line="24"/>
            <declaration name="a_setup" type="double" line="25"/>
            <declaration name="x" type="double" line="26"/>
            <declaration name="hr" type="double" line="27"/>
            <declaration name="shared" type="Hyperbolic" line="28"/>
            <javadoc line="29">
                Constructs a Beta distribution.                
            </javadoc>
            <method name="Hyperbolic" type="constructor" line="32">
                <params>
                    <param name="alpha" type="double"/>
                    <param name="beta" type="double"/>
                    <param name="randomGenerator" type="RandomEngine"/>
                </params>
            </method>
            <javadoc line="36">
                Returns a random number from the distribution.                
            </javadoc>
            <method name="nextDouble" type="double" line="39"/>
            <javadoc line="42">
                Returns a hyperbolic distributed random number; bypasses the internal state.                
            </javadoc>
            <method name="nextDouble" type="double" line="45">
                <params>
                    <param name="alpha" type="double"/>
                    <param name="beta" type="double"/>
                </params>
                <declaration name="a" type="double" line="46"/>
                <declaration name="b" type="double" line="47"/>
                <scope line="48">
                    <declaration name="mpa" type="double" line="49"/>
                    <declaration name="amb" type="double" line="50"/>
                    <declaration name="a_" type="double" line="51"/>
                    <declaration name="help_1" type="double" line="52"/>
                </scope>
                <scope line="75">
                    <scope line="78"/>
                    <scope line="82">
                        <scope line="83"/>
                        <scope line="88"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="97">
                Sets the parameters.                
            </javadoc>
            <method name="setState" type="void" line="100">
                <params>
                    <param name="alpha" type="double"/>
                    <param name="beta" type="double"/>
                </params>
            </method>
            <javadoc line="104">
                Returns a random number from the distribution.                
            </javadoc>
            <method name="staticNextDouble" type="double" line="107">
                <params>
                    <param name="alpha" type="double"/>
                    <param name="beta" type="double"/>
                </params>
                <scope line="108"/>
            </method>
            <javadoc line="112">
                Returns a String representation of the receiver.                
            </javadoc>
            <method name="toString" type="String" line="115"/>
            <javadoc line="118">
                Sets the uniform random number generated shared by all &lt;b&gt;static&lt;/b&gt; methods.                
                <param>
                    randomGenerator the new uniform random number generator to be shared.                    
                </param>
            </javadoc>
            <method name="xstaticSetRandomGenerator" type="void" line="122">
                <params>
                    <param name="randomGenerator" type="RandomEngine"/>
                </params>
                <scope line="123"/>
            </method>
        </class>
    </source>