<?xml version="1.0" encoding="UTF-8"?>
    <source package="cern.jet.random">
        <import package="cern.jet.random.engine.RandomEngine"/>
        <class name="BreitWigner" line="3">
            <extends class="AbstractContinousDistribution"/>
            <javadoc line="3">
                BreitWigner (aka Lorentz) distribution; See the &lt;A HREF=&quot;http://www.cern.ch/RD11/rkb/AN16pp/node23.html#SECTION000230000000000000000&quot;&gt; math definition&lt;/A&gt;.
                  A more general form of the Cauchy distribution.
                  &lt;p&gt;
                  Instance methods operate on a user supplied uniform random number generator; they are unsynchronized. 
                  &lt;dt&gt;
                  Static methods operate on a default uniform random number generator; they are synchronized.
                  &lt;p&gt;
                  &lt;b&gt;Implementation:&lt;/b&gt; This is a port of &lt;A HREF=&quot;http://wwwinfo.cern.ch/asd/lhc++/clhep/manual/RefGuide/Random/RandBreitWigner.html&quot;&gt;RandBreitWigner&lt;/A&gt; used in &lt;A HREF=&quot;http://wwwinfo.cern.ch/asd/lhc++/clhep&quot;&gt;CLHEP 1.4.0&lt;/A&gt; (C++).                
                <author>
                    wolfgang.hoschek@cern.ch                    
                </author>
                <version>
                    1.0, 09/24/99                    
                </version>
            </javadoc>
            <declaration name="mean" type="double" line="16"/>
            <declaration name="gamma" type="double" line="17"/>
            <declaration name="cut" type="double" line="18"/>
            <declaration name="shared" type="BreitWigner" line="19"/>
            <javadoc line="20">
                Constructs a BreitWigner distribution.                
                <param>
                    cut </tt>cut==Double.NEGATIVE_INFINITY</tt> indicates "don't cut".                    
                </param>
            </javadoc>
            <method name="BreitWigner" type="constructor" line="24">
                <params>
                    <param name="mean" type="double"/>
                    <param name="gamma" type="double"/>
                    <param name="cut" type="double"/>
                    <param name="randomGenerator" type="RandomEngine"/>
                </params>
            </method>
            <javadoc line="28">
                Returns a random number from the distribution.                
            </javadoc>
            <method name="nextDouble" type="double" line="31"/>
            <javadoc line="34">
                Returns a random number from the distribution; bypasses the internal state.                
                <param>
                    cut </tt>cut==Double.NEGATIVE_INFINITY</tt> indicates "don't cut".                    
                </param>
            </javadoc>
            <method name="nextDouble" type="double" line="38">
                <params>
                    <param name="mean" type="double"/>
                    <param name="gamma" type="double"/>
                    <param name="cut" type="double"/>
                </params>
                <declaration name="val" type="double" line="39"/>
                <scope line="41"/>
                <scope line="46"/>
            </method>
            <javadoc line="53">
                Sets the mean, gamma and cut parameters.                
                <param>
                    cut </tt>cut==Double.NEGATIVE_INFINITY</tt> indicates "don't cut".                    
                </param>
            </javadoc>
            <method name="setState" type="void" line="57">
                <params>
                    <param name="mean" type="double"/>
                    <param name="gamma" type="double"/>
                    <param name="cut" type="double"/>
                </params>
            </method>
            <javadoc line="62">
                Returns a random number from the distribution.                
                <param>
                    cut </tt>cut==Double.NEGATIVE_INFINITY</tt> indicates "don't cut".                    
                </param>
            </javadoc>
            <method name="staticNextDouble" type="double" line="66">
                <params>
                    <param name="mean" type="double"/>
                    <param name="gamma" type="double"/>
                    <param name="cut" type="double"/>
                </params>
                <scope line="67"/>
            </method>
            <javadoc line="71">
                Returns a String representation of the receiver.                
            </javadoc>
            <method name="toString" type="String" line="74"/>
            <javadoc line="77">
                Sets the uniform random number generated shared by all &lt;b&gt;static&lt;/b&gt; methods.                
                <param>
                    randomGenerator the new uniform random number generator to be shared.                    
                </param>
            </javadoc>
            <method name="xstaticSetRandomGenerator" type="void" line="81">
                <params>
                    <param name="randomGenerator" type="RandomEngine"/>
                </params>
                <scope line="82"/>
            </method>
        </class>
    </source>