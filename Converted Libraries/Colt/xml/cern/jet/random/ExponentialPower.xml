<?xml version="1.0" encoding="UTF-8"?>
    <source package="cern.jet.random">
        <import package="cern.jet.random.engine.RandomEngine"/>
        <class name="ExponentialPower" line="3">
            <extends class="AbstractContinousDistribution"/>
            <javadoc line="3">
                Exponential Power distribution.
                  &lt;p&gt;
                  Valid parameter ranges: &lt;tt&gt;tau &amp;gt;= 1&lt;/tt&gt;.
                  &lt;p&gt;
                  Instance methods operate on a user supplied uniform random number generator; they are unsynchronized.
                  &lt;dt&gt;
                  Static methods operate on a default uniform random number generator; they are synchronized.
                  &lt;p&gt;
                  &lt;b&gt;Implementation:&lt;/b&gt;
                  &lt;dt&gt;Method: Non-universal rejection method for logconcave densities.
                  &lt;dt&gt;This is a port of &lt;tt&gt;epd.c&lt;/tt&gt; from the &lt;A HREF=&quot;http://www.cis.tu-graz.ac.at/stat/stadl/random.html&quot;&gt;C-RAND / WIN-RAND&lt;/A&gt; library.
                  C-RAND&apos;s implementation, in turn, is based upon
                  &lt;p&gt;
                  L. Devroye (1986): Non-Uniform Random Variate Generation , Springer Verlag, New York.
                  &lt;p&gt;                
                <author>
                    wolfgang.hoschek@cern.ch                    
                </author>
                <version>
                    1.0, 09/24/99                    
                </version>
            </javadoc>
            <declaration name="tau" type="double" line="23"/>
            <declaration name="s" type="double" line="24"/>
            <declaration name="shared" type="ExponentialPower" line="25"/>
            <javadoc line="26">
                Constructs an Exponential Power distribution.
                  Example: tau=1.0.                
                <throws>
                    IllegalArgumentException if <tt>tau &lt; 1.0</tt>.                    
                </throws>
            </javadoc>
            <method name="ExponentialPower" type="constructor" line="31">
                <params>
                    <param name="tau" type="double"/>
                    <param name="randomGenerator" type="RandomEngine"/>
                </params>
            </method>
            <javadoc line="35">
                Returns a random number from the distribution.                
            </javadoc>
            <method name="nextDouble" type="double" line="38"/>
            <javadoc line="41">
                Returns a random number from the distribution; bypasses the internal state.                
                <throws>
                    IllegalArgumentException if <tt>tau &lt; 1.0</tt>.                    
                </throws>
            </javadoc>
            <method name="nextDouble" type="double" line="45">
                <params>
                    <param name="tau" type="double"/>
                </params>
                <declaration name="u" type="double" line="46"/>
                <scope line="47"/>
                <scope line="52">
                    <scope line="57"/>
                    <scope line="60"/>
                </scope>
            </method>
            <javadoc line="70">
                Sets the distribution parameter.                
                <throws>
                    IllegalArgumentException if <tt>tau &lt; 1.0</tt>.                    
                </throws>
            </javadoc>
            <method name="setState" type="void" line="74">
                <params>
                    <param name="tau" type="double"/>
                </params>
            </method>
            <javadoc line="78">
                Returns a random number from the distribution.                
                <throws>
                    IllegalArgumentException if <tt>tau &lt; 1.0</tt>.                    
                </throws>
            </javadoc>
            <method name="staticNextDouble" type="double" line="82">
                <params>
                    <param name="tau" type="double"/>
                </params>
                <scope line="83"/>
            </method>
            <javadoc line="87">
                Returns a String representation of the receiver.                
            </javadoc>
            <method name="toString" type="String" line="90"/>
            <javadoc line="93">
                Sets the uniform random number generated shared by all &lt;b&gt;static&lt;/b&gt; methods.                
                <param>
                    randomGenerator the new uniform random number generator to be shared.                    
                </param>
            </javadoc>
            <method name="xstaticSetRandomGenerator" type="void" line="97">
                <params>
                    <param name="randomGenerator" type="RandomEngine"/>
                </params>
                <scope line="98"/>
            </method>
        </class>
    </source>