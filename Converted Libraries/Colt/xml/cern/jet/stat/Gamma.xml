<?xml version="1.0" encoding="UTF-8"?>
    <source package="cern.jet.stat">
        <import package="cern.jet.math.Polynomial"/>
        <class name="Gamma" line="3">
            <extends class="cern.jet.math.Constants"/>
            <javadoc line="3">
                Gamma and Beta functions.
                  &lt;p&gt;
                  &lt;b&gt;Implementation:&lt;/b&gt;
                  &lt;dt&gt;
                  Some code taken and adapted from the &lt;A HREF=&quot;http://www.sci.usq.edu.au/staff/leighb/graph/Top.html&quot;&gt;Java 2D Graph Package 2.4&lt;/A&gt;,
                  which in turn is a port from the &lt;A HREF=&quot;http://people.ne.mediaone.net/moshier/index.html#Cephes&quot;&gt;Cephes 2.2&lt;/A&gt; Math Library (C).
                  Most Cephes code (missing from the 2D Graph Package) directly ported.                
                <author>
                    wolfgang.hoschek@cern.ch                    
                </author>
                <version>
                    0.9, 22-Jun-99                    
                </version>
            </javadoc>
            <javadoc line="15">
                Makes this class non instantiable, but still let&apos;s others inherit from it.                
            </javadoc>
            <method name="Gamma" type="constructor" line="18"/>
            <javadoc line="20">
                Returns the beta function of the arguments.
                  &lt;pre&gt;
                  -     -
                  | (a) | (b)
                  beta( a, b )  =  -----------.
                  -
                  | (a+b)
                  &lt;/pre&gt;                
            </javadoc>
            <method name="beta" type="double" line="30">
                <params>
                    <param name="a" type="double"/>
                    <param name="b" type="double"/>
                </params>
                <declaration name="y" type="double" line="31"/>
                <scope line="35"/>
                <scope line="39"/>
            </method>
            <javadoc line="45">
                Returns the Gamma function of the argument.                
            </javadoc>
            <method name="gamma" type="double" line="48">
                <params>
                    <param name="x" type="double"/>
                </params>
                <declaration name="P" type="double" line="49"/>
                <declaration name="Q" type="double" line="50"/>
                <declaration name="p" type="double" line="51"/>
                <declaration name="i" type="int" line="52"/>
                <declaration name="q" type="double" line="53"/>
                <scope line="54">
                    <scope line="55">
                        <scope line="60"/>
                    </scope>
                    <scope line="70"/>
                </scope>
                <scope line="75"/>
                <scope line="79">
                    <scope line="80"/>
                    <scope line="83"/>
                </scope>
                <scope line="89">
                    <scope line="90"/>
                    <scope line="93"/>
                </scope>
            </method>
            <javadoc line="105">
                Returns the Incomplete Beta Function evaluated from zero to &lt;tt&gt;xx&lt;/tt&gt;; formerly named &lt;tt&gt;ibeta&lt;/tt&gt;.                
                <param>
                    aa the alpha parameter of the beta distribution.                    
                </param>
                <param>
                    bb the beta parameter of the beta distribution.                    
                </param>
                <param>
                    xx the integration end point.                    
                </param>
            </javadoc>
            <method name="incompleteBeta" type="double" line="111">
                <params>
                    <param name="aa" type="double"/>
                    <param name="bb" type="double"/>
                    <param name="xx" type="double"/>
                </params>
                <declaration name="a" type="double" line="112"/>
                <declaration name="flag" type="boolean" line="113"/>
                <scope line="115"/>
                <scope line="121"/>
                <scope line="126"/>
                <scope line="133"/>
                <scope line="139"/>
                <scope line="150">
                    <scope line="156"/>
                </scope>
                <scope line="166"/>
            </method>
            <javadoc line="172">
                Continued fraction expansion #1 for incomplete beta integral; formerly named &lt;tt&gt;incbcf&lt;/tt&gt;.                
            </javadoc>
            <method name="incompleteBetaFraction1" type="double" line="175">
                <params>
                    <param name="a" type="double"/>
                    <param name="b" type="double"/>
                    <param name="x" type="double"/>
                </params>
                <declaration name="xk" type="double" line="176"/>
                <declaration name="k1" type="double" line="177"/>
                <declaration name="r" type="double" line="178"/>
                <declaration name="n" type="int" line="179"/>
                <scope line="196">
                    <scope line="212"/>
                    <scope line="226"/>
                    <scope line="232"/>
                </scope>
            </method>
            <javadoc line="242">
                Continued fraction expansion #2 for incomplete beta integral; formerly named &lt;tt&gt;incbd&lt;/tt&gt;.                
            </javadoc>
            <method name="incompleteBetaFraction2" type="double" line="245">
                <params>
                    <param name="a" type="double"/>
                    <param name="b" type="double"/>
                    <param name="x" type="double"/>
                </params>
                <declaration name="xk" type="double" line="246"/>
                <declaration name="k1" type="double" line="247"/>
                <declaration name="r" type="double" line="248"/>
                <declaration name="n" type="int" line="249"/>
                <scope line="268">
                    <scope line="284"/>
                    <scope line="298"/>
                    <scope line="304"/>
                </scope>
            </method>
            <javadoc line="314">
                Returns the Incomplete Gamma function; formerly named &lt;tt&gt;igamma&lt;/tt&gt;.                
                <param>
                    a the parameter of the gamma distribution.                    
                </param>
                <param>
                    x the integration end point.                    
                </param>
            </javadoc>
            <method name="incompleteGamma" type="double" line="319">
                <params>
                    <param name="a" type="double"/>
                    <param name="x" type="double"/>
                </params>
                <declaration name="ans" type="double" line="320"/>
                <scope line="329"/>
            </method>
            <javadoc line="337">
                Returns the Complemented Incomplete Gamma function; formerly named &lt;tt&gt;igamc&lt;/tt&gt;.                
                <param>
                    a the parameter of the gamma distribution.                    
                </param>
                <param>
                    x the integration start point.                    
                </param>
            </javadoc>
            <method name="incompleteGammaComplement" type="double" line="342">
                <params>
                    <param name="a" type="double"/>
                    <param name="x" type="double"/>
                </params>
                <declaration name="ans" type="double" line="343"/>
                <declaration name="pk" type="double" line="344"/>
                <scope line="358">
                    <scope line="365"/>
                    <scope line="375"/>
                </scope>
            </method>
            <javadoc line="385">
                Returns the natural logarithm of the gamma function; formerly named &lt;tt&gt;lgamma&lt;/tt&gt;.                
            </javadoc>
            <method name="logGamma" type="double" line="388">
                <params>
                    <param name="x" type="double"/>
                </params>
                <declaration name="p" type="double" line="389"/>
                <declaration name="A" type="double" line="390"/>
                <declaration name="B" type="double" line="391"/>
                <declaration name="C" type="double" line="392"/>
                <scope line="393">
                    <scope line="399"/>
                </scope>
                <scope line="408">
                    <scope line="410"/>
                    <scope line="414"/>
                </scope>
            </method>
            <javadoc line="433">
                Power series for incomplete beta integral; formerly named &lt;tt&gt;pseries&lt;/tt&gt;.
                  Use when bx is small and x not too close to 1.                
            </javadoc>
            <method name="powerSeries" type="double" line="437">
                <params>
                    <param name="a" type="double"/>
                    <param name="b" type="double"/>
                    <param name="x" type="double"/>
                </params>
                <declaration name="s" type="double" line="438"/>
                <scope line="447"/>
                <scope line="457"/>
                <scope line="461"/>
            </method>
            <javadoc line="468">
                Returns the Gamma function computed by Stirling&apos;s formula; formerly named &lt;tt&gt;stirf&lt;/tt&gt;.
                  The polynomial STIR is valid for 33 &lt;= x &lt;= 172.                
            </javadoc>
            <method name="stirlingFormula" type="double" line="472">
                <params>
                    <param name="x" type="double"/>
                </params>
                <declaration name="STIR" type="double" line="473"/>
                <declaration name="MAXSTIR" type="double" line="474"/>
                <declaration name="w" type="double" line="475"/>
                <declaration name="y" type="double" line="476"/>
                <scope line="478">
                    <declaration name="v" type="double" line="479"/>
                </scope>
                <scope line="482"/>
            </method>
        </class>
    </source>