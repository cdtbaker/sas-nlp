<?xml version="1.0" encoding="UTF-8"?>
    <source package="cern.jet.stat">
        <import package="cern.jet.math.Polynomial"/>
        <class name="Probability" line="3">
            <extends class="cern.jet.math.Constants"/>
            <javadoc line="3">
                Custom tailored numerical integration of certain probability distributions.
                  &lt;p&gt;
                  &lt;b&gt;Implementation:&lt;/b&gt;
                  &lt;dt&gt;
                  Some code taken and adapted from the &lt;A HREF=&quot;http://www.sci.usq.edu.au/staff/leighb/graph/Top.html&quot;&gt;Java 2D Graph Package 2.4&lt;/A&gt;,
                  which in turn is a port from the &lt;A HREF=&quot;http://people.ne.mediaone.net/moshier/index.html#Cephes&quot;&gt;Cephes 2.2&lt;/A&gt; Math Library (C).
                  Most Cephes code (missing from the 2D Graph Package) directly ported.                
                <author>
                    peter.gedeck@pharma.Novartis.com                    
                </author>
                <author>
                    wolfgang.hoschek@cern.ch                    
                </author>
                <version>
                    0.91, 08-Dec-99                    
                </version>
            </javadoc>
            <declaration name="P0" type="double" line="16"/>
            <javadoc line="16">
                COEFFICIENTS FOR METHOD  normalInverse()                
            </javadoc>
            <declaration name="Q0" type="double" line="20"/>
            <declaration name="P1" type="double" line="21"/>
            <declaration name="Q1" type="double" line="22"/>
            <declaration name="P2" type="double" line="23"/>
            <declaration name="Q2" type="double" line="24"/>
            <javadoc line="25">
                Makes this class non instantiable, but still let&apos;s others inherit from it.                
            </javadoc>
            <method name="Probability" type="constructor" line="28"/>
            <javadoc line="30">
                Returns the area from zero to &lt;tt&gt;x&lt;/tt&gt; under the beta density
                  function.
                  &lt;pre&gt;
                  x
                  -             -
                  | (a+b)       | |  a-1      b-1
                  P(x)  =  ----------     |   t    (1-t)    dt
                  -     -     | |
                  | (a) | (b)   -
                  0
                  &lt;/pre&gt;
                  This function is identical to the incomplete beta
                  integral function &lt;tt&gt;Gamma.incompleteBeta(a, b, x)&lt;/tt&gt;.
                  The complemented function is
                  &lt;tt&gt;1 - P(1-x)  =  Gamma.incompleteBeta( b, a, x )&lt;/tt&gt;;                
            </javadoc>
            <method name="beta" type="double" line="47">
                <params>
                    <param name="a" type="double"/>
                    <param name="b" type="double"/>
                    <param name="x" type="double"/>
                </params>
            </method>
            <javadoc line="50">
                Returns the area under the right hand tail (from &lt;tt&gt;x&lt;/tt&gt; to
                  infinity) of the beta density function.
                  This function is identical to the incomplete beta
                  integral function &lt;tt&gt;Gamma.incompleteBeta(b, a, x)&lt;/tt&gt;.                
            </javadoc>
            <method name="betaComplemented" type="double" line="56">
                <params>
                    <param name="a" type="double"/>
                    <param name="b" type="double"/>
                    <param name="x" type="double"/>
                </params>
            </method>
            <javadoc line="59">
                Returns the sum of the terms &lt;tt&gt;0&lt;/tt&gt; through &lt;tt&gt;k&lt;/tt&gt; of the Binomial
                  probability density.
                  &lt;pre&gt;
                  k
                  --  ( n )   j      n-j
                  &gt;   (   )  p  (1-p)
                  --  ( j )
                  j=0
                  &lt;/pre&gt;
                  The terms are not summed directly; instead the incomplete
                  beta integral is employed, according to the formula
                  &lt;p&gt;
                  &lt;tt&gt;y = binomial( k, n, p ) = Gamma.incompleteBeta( n-k, k+1, 1-p )&lt;/tt&gt;.
                  &lt;p&gt;
                  All arguments must be positive,                
                <param>
                    k end term.                    
                </param>
                <param>
                    n the number of trials.                    
                </param>
                <param>
                    p the probability of success (must be in <tt>(0.0,1.0)</tt>).                    
                </param>
            </javadoc>
            <method name="binomial" type="double" line="79">
                <params>
                    <param name="k" type="int"/>
                    <param name="n" type="int"/>
                    <param name="p" type="double"/>
                </params>
            </method>
            <javadoc line="86">
                Returns the sum of the terms &lt;tt&gt;k+1&lt;/tt&gt; through &lt;tt&gt;n&lt;/tt&gt; of the Binomial
                  probability density.
                  &lt;pre&gt;
                  n
                  --  ( n )   j      n-j
                  &gt;   (   )  p  (1-p)
                  --  ( j )
                  j=k+1
                  &lt;/pre&gt;
                  The terms are not summed directly; instead the incomplete
                  beta integral is employed, according to the formula
                  &lt;p&gt;
                  &lt;tt&gt;y = binomialComplemented( k, n, p ) = Gamma.incompleteBeta( k+1, n-k, p )&lt;/tt&gt;.
                  &lt;p&gt;
                  All arguments must be positive,                
                <param>
                    k end term.                    
                </param>
                <param>
                    n the number of trials.                    
                </param>
                <param>
                    p the probability of success (must be in <tt>(0.0,1.0)</tt>).                    
                </param>
            </javadoc>
            <method name="binomialComplemented" type="double" line="106">
                <params>
                    <param name="k" type="int"/>
                    <param name="n" type="int"/>
                    <param name="p" type="double"/>
                </params>
            </method>
            <javadoc line="113">
                Returns the area under the left hand tail (from 0 to &lt;tt&gt;x&lt;/tt&gt;)
                  of the Chi square probability density function with
                  &lt;tt&gt;v&lt;/tt&gt; degrees of freedom.
                  &lt;pre&gt;
                  inf.
                  -
                  1          | |  v/2-1  -t/2
                  P( x | v )   =   -----------     |   t      e     dt
                  v/2  -       | |
                  2    | (v/2)   -
                  x
                  &lt;/pre&gt;
                  where &lt;tt&gt;x&lt;/tt&gt; is the Chi-square variable.
                  &lt;p&gt;
                  The incomplete gamma integral is used, according to the
                  formula
                  &lt;p&gt;
                  &lt;tt&gt;y = chiSquare( v, x ) = incompleteGamma( v/2.0, x/2.0 )&lt;/tt&gt;.
                  &lt;p&gt;
                  The arguments must both be positive.                
                <param>
                    v degrees of freedom.                    
                </param>
                <param>
                    x integration end point.                    
                </param>
            </javadoc>
            <method name="chiSquare" type="double" line="137">
                <params>
                    <param name="v" type="double"/>
                    <param name="x" type="double"/>
                </params>
            </method>
            <javadoc line="141">
                Returns the area under the right hand tail (from &lt;tt&gt;x&lt;/tt&gt; to
                  infinity) of the Chi square probability density function
                  with &lt;tt&gt;v&lt;/tt&gt; degrees of freedom.
                  &lt;pre&gt;
                  inf.
                  -
                  1          | |  v/2-1  -t/2
                  P( x | v )   =   -----------     |   t      e     dt
                  v/2  -       | |
                  2    | (v/2)   -
                  x
                  &lt;/pre&gt;
                  where &lt;tt&gt;x&lt;/tt&gt; is the Chi-square variable.
                  The incomplete gamma integral is used, according to the
                  formula
                  &lt;tt&gt;y = chiSquareComplemented( v, x ) = incompleteGammaComplement( v/2.0, x/2.0 )&lt;/tt&gt;.
                  The arguments must both be positive.                
                <param>
                    v degrees of freedom.                    
                </param>
            </javadoc>
            <method name="chiSquareComplemented" type="double" line="161">
                <params>
                    <param name="v" type="double"/>
                    <param name="x" type="double"/>
                </params>
            </method>
            <javadoc line="165">
                Returns the error function of the normal distribution; formerly named &lt;tt&gt;erf&lt;/tt&gt;.
                  The integral is
                  &lt;pre&gt;
                  x 
                  -
                  2         | |          2
                  erf(x)  =  --------     |    exp( - t  ) dt.
                  sqrt(pi)   | |
                  -
                  0
                  &lt;/pre&gt;
                  &lt;b&gt;Implementation:&lt;/b&gt;
                  For &lt;tt&gt;0 &lt;= |x| &lt; 1, erf(x) = x  P4(x2)/Q5(x2)&lt;/tt&gt;; otherwise
                  &lt;tt&gt;erf(x) = 1 - erfc(x)&lt;/tt&gt;.
                  &lt;p&gt;
                  Code adapted from the &lt;A HREF=&quot;http://www.sci.usq.edu.au/staff/leighb/graph/Top.html&quot;&gt;Java 2D Graph Package 2.4&lt;/A&gt;,
                  which in turn is a port from the &lt;A HREF=&quot;http://people.ne.mediaone.net/moshier/index.html#Cephes&quot;&gt;Cephes 2.2&lt;/A&gt; Math Library (C).                
                <param>
                    a the argument to the function.                    
                </param>
            </javadoc>
            <method name="errorFunction" type="double" line="185">
                <params>
                    <param name="x" type="double"/>
                </params>
                <declaration name="y" type="double" line="186"/>
                <declaration name="T" type="double" line="187"/>
                <declaration name="U" type="double" line="188"/>
            </method>
            <javadoc line="194">
                Returns the complementary Error function of the normal distribution; formerly named &lt;tt&gt;erfc&lt;/tt&gt;.
                  &lt;pre&gt;
                  1 - erf(x) =
                  inf. 
                  -
                  2         | |          2
                  erfc(x)  =  --------     |    exp( - t  ) dt
                  sqrt(pi)   | |
                  -
                  x
                  &lt;/pre&gt;
                  &lt;b&gt;Implementation:&lt;/b&gt;
                  For small x, &lt;tt&gt;erfc(x) = 1 - erf(x)&lt;/tt&gt;; otherwise rational
                  approximations are computed.
                  &lt;p&gt;
                  Code adapted from the &lt;A HREF=&quot;http://www.sci.usq.edu.au/staff/leighb/graph/Top.html&quot;&gt;Java 2D Graph Package 2.4&lt;/A&gt;,
                  which in turn is a port from the &lt;A HREF=&quot;http://people.ne.mediaone.net/moshier/index.html#Cephes&quot;&gt;Cephes 2.2&lt;/A&gt; Math Library (C).                
                <param>
                    a the argument to the function.                    
                </param>
            </javadoc>
            <method name="errorFunctionComplemented" type="double" line="214">
                <params>
                    <param name="a" type="double"/>
                </params>
                <declaration name="x" type="double" line="215"/>
                <declaration name="P" type="double" line="216"/>
                <declaration name="Q" type="double" line="217"/>
                <declaration name="R" type="double" line="218"/>
                <declaration name="S" type="double" line="219"/>
                <scope line="224"/>
                <scope line="229"/>
                <scope line="233"/>
                <scope line="239"/>
            </method>
            <javadoc line="245">
                Returns the integral from zero to &lt;tt&gt;x&lt;/tt&gt; of the gamma probability
                  density function.
                  &lt;pre&gt;
                  x
                  b       -
                  a       | |   b-1  -at
                  y =  -----    |    t    e    dt
                  -     | |
                  | (b)   -
                  0
                  &lt;/pre&gt;
                  The incomplete gamma integral is used, according to the
                  relation
                  &lt;tt&gt;y = Gamma.incompleteGamma( b, ax )&lt;/tt&gt;.                
                <param>
                    a the paramater a (alpha) of the gamma distribution.                    
                </param>
                <param>
                    b the paramater b (beta, lambda) of the gamma distribution.                    
                </param>
                <param>
                    x integration end point.                    
                </param>
            </javadoc>
            <method name="gamma" type="double" line="264">
                <params>
                    <param name="a" type="double"/>
                    <param name="b" type="double"/>
                    <param name="x" type="double"/>
                </params>
            </method>
            <javadoc line="268">
                Returns the integral from &lt;tt&gt;x&lt;/tt&gt; to infinity of the gamma
                  probability density function:
                  &lt;pre&gt;
                  inf.
                  b       -
                  a       | |   b-1  -at
                  y =  -----    |    t    e    dt
                  -     | |
                  | (b)   -
                  x
                  &lt;/pre&gt;
                  The incomplete gamma integral is used, according to the
                  relation
                  &lt;p&gt;
                  y = Gamma.incompleteGammaComplement( b, ax ).                
                <param>
                    a the paramater a (alpha) of the gamma distribution.                    
                </param>
                <param>
                    b the paramater b (beta, lambda) of the gamma distribution.                    
                </param>
                <param>
                    x integration end point.                    
                </param>
            </javadoc>
            <method name="gammaComplemented" type="double" line="288">
                <params>
                    <param name="a" type="double"/>
                    <param name="b" type="double"/>
                    <param name="x" type="double"/>
                </params>
            </method>
            <javadoc line="292">
                Returns the sum of the terms &lt;tt&gt;0&lt;/tt&gt; through &lt;tt&gt;k&lt;/tt&gt; of the Negative Binomial Distribution.
                  &lt;pre&gt;
                  k
                  --  ( n+j-1 )   n      j
                  &gt;   (       )  p  (1-p)
                  --  (   j   )
                  j=0
                  &lt;/pre&gt;
                  In a sequence of Bernoulli trials, this is the probability
                  that &lt;tt&gt;k&lt;/tt&gt; or fewer failures precede the &lt;tt&gt;n&lt;/tt&gt;-th success.
                  &lt;p&gt;
                  The terms are not computed individually; instead the incomplete
                  beta integral is employed, according to the formula
                  &lt;p&gt;
                  &lt;tt&gt;y = negativeBinomial( k, n, p ) = Gamma.incompleteBeta( n, k+1, p )&lt;/tt&gt;.
                  All arguments must be positive,                
                <param>
                    k end term.                    
                </param>
                <param>
                    n the number of trials.                    
                </param>
                <param>
                    p the probability of success (must be in <tt>(0.0,1.0)</tt>).                    
                </param>
            </javadoc>
            <method name="negativeBinomial" type="double" line="313">
                <params>
                    <param name="k" type="int"/>
                    <param name="n" type="int"/>
                    <param name="p" type="double"/>
                </params>
            </method>
            <javadoc line="318">
                Returns the sum of the terms &lt;tt&gt;k+1&lt;/tt&gt; to infinity of the Negative
                  Binomial distribution.
                  &lt;pre&gt;
                  inf
                  --  ( n+j-1 )   n      j
                  &gt;   (       )  p  (1-p)
                  --  (   j   )
                  j=k+1
                  &lt;/pre&gt;
                  The terms are not computed individually; instead the incomplete
                  beta integral is employed, according to the formula
                  &lt;p&gt;
                  y = negativeBinomialComplemented( k, n, p ) = Gamma.incompleteBeta( k+1, n, 1-p ).
                  All arguments must be positive,                
                <param>
                    k end term.                    
                </param>
                <param>
                    n the number of trials.                    
                </param>
                <param>
                    p the probability of success (must be in <tt>(0.0,1.0)</tt>).                    
                </param>
            </javadoc>
            <method name="negativeBinomialComplemented" type="double" line="337">
                <params>
                    <param name="k" type="int"/>
                    <param name="n" type="int"/>
                    <param name="p" type="double"/>
                </params>
            </method>
            <javadoc line="342">
                Returns the area under the Normal (Gaussian) probability density
                  function, integrated from minus infinity to &lt;tt&gt;x&lt;/tt&gt; (assumes mean is zero, variance is one).
                  &lt;pre&gt;
                  x
                  -
                  1        | |          2
                  normal(x)  = ---------    |    exp( - t /2 ) dt
                  sqrt(2pi)  | |
                  -
                  -inf.
                  =  ( 1 + erf(z) ) / 2
                  =  erfc(z) / 2
                  &lt;/pre&gt;
                  where &lt;tt&gt;z = x/sqrt(2)&lt;/tt&gt;.
                  Computation is via the functions &lt;tt&gt;errorFunction&lt;/tt&gt; and &lt;tt&gt;errorFunctionComplement&lt;/tt&gt;.                
            </javadoc>
            <method name="normal" type="double" line="359">
                <params>
                    <param name="a" type="double"/>
                </params>
                <declaration name="x" type="double" line="360"/>
                <scope line="364"/>
            </method>
            <javadoc line="370">
                Returns the area under the Normal (Gaussian) probability density
                  function, integrated from minus infinity to &lt;tt&gt;x&lt;/tt&gt;.
                  &lt;pre&gt;
                  x
                  -
                  1        | |                 2
                  normal(x)  = ---------    |    exp( - (t-mean) / 2v ) dt
                  sqrt(2piv)| |
                  -
                  -inf.
                  &lt;/pre&gt;
                  where &lt;tt&gt;v = variance&lt;/tt&gt;.
                  Computation is via the functions &lt;tt&gt;errorFunction&lt;/tt&gt;.                
                <param>
                    mean the mean of the normal distribution.                    
                </param>
                <param>
                    variance the variance of the normal distribution.                    
                </param>
                <param>
                    x the integration limit.                    
                </param>
            </javadoc>
            <method name="normal" type="double" line="388">
                <params>
                    <param name="mean" type="double"/>
                    <param name="variance" type="double"/>
                    <param name="x" type="double"/>
                </params>
            </method>
            <javadoc line="392">
                Returns the value, &lt;tt&gt;x&lt;/tt&gt;, for which the area under the
                  Normal (Gaussian) probability density function (integrated from
                  minus infinity to &lt;tt&gt;x&lt;/tt&gt;) is equal to the argument &lt;tt&gt;y&lt;/tt&gt; (assumes mean is zero, variance is one); formerly named &lt;tt&gt;ndtri&lt;/tt&gt;.
                  &lt;p&gt;
                  For small arguments &lt;tt&gt;0 &lt; y &lt; exp(-2)&lt;/tt&gt;, the program computes
                  &lt;tt&gt;z = sqrt( -2.0  log(y) )&lt;/tt&gt;;  then the approximation is
                  &lt;tt&gt;x = z - log(z)/z  - (1/z) P(1/z) / Q(1/z)&lt;/tt&gt;.
                  There are two rational functions P/Q, one for &lt;tt&gt;0 &lt; y &lt; exp(-32)&lt;/tt&gt;
                  and the other for &lt;tt&gt;y&lt;/tt&gt; up to &lt;tt&gt;exp(-2)&lt;/tt&gt;. 
                  For larger arguments,
                  &lt;tt&gt;w = y - 0.5&lt;/tt&gt;, and  &lt;tt&gt;x/sqrt(2pi) = w + w3 R(w2)/S(w2))&lt;/tt&gt;.                
            </javadoc>
            <method name="normalInverse" type="double" line="405">
                <params>
                    <param name="y0" type="double"/>
                </params>
                <declaration name="x" type="double" line="406"/>
                <declaration name="code" type="int" line="407"/>
                <declaration name="s2pi" type="double" line="408"/>
                <scope line="413"/>
                <scope line="417"/>
            </method>
            <javadoc line="433">
                Returns the sum of the first &lt;tt&gt;k&lt;/tt&gt; terms of the Poisson distribution.
                  &lt;pre&gt;
                  k         j
                  --   -m  m
                  &gt;   e    --
                  --       j!
                  j=0
                  &lt;/pre&gt;
                  The terms are not summed directly; instead the incomplete
                  gamma integral is employed, according to the relation
                  &lt;p&gt;
                  &lt;tt&gt;y = poisson( k, m ) = Gamma.incompleteGammaComplement( k+1, m )&lt;/tt&gt;.
                  The arguments must both be positive.                
                <param>
                    k number of terms.                    
                </param>
                <param>
                    mean the mean of the poisson distribution.                    
                </param>
            </javadoc>
            <method name="poisson" type="double" line="450">
                <params>
                    <param name="k" type="int"/>
                    <param name="mean" type="double"/>
                </params>
            </method>
            <javadoc line="455">
                Returns the sum of the terms &lt;tt&gt;k+1&lt;/tt&gt; to &lt;tt&gt;Infinity&lt;/tt&gt; of the Poisson distribution.
                  &lt;pre&gt;
                  inf.       j
                  --   -m  m
                  &gt;   e    --
                  --       j!
                  j=k+1
                  &lt;/pre&gt;
                  The terms are not summed directly; instead the incomplete
                  gamma integral is employed, according to the formula
                  &lt;p&gt;
                  &lt;tt&gt;y = poissonComplemented( k, m ) = Gamma.incompleteGamma( k+1, m )&lt;/tt&gt;.
                  The arguments must both be positive.                
                <param>
                    k start term.                    
                </param>
                <param>
                    mean the mean of the poisson distribution.                    
                </param>
            </javadoc>
            <method name="poissonComplemented" type="double" line="472">
                <params>
                    <param name="k" type="int"/>
                    <param name="mean" type="double"/>
                </params>
            </method>
            <javadoc line="477">
                Returns the integral from minus infinity to &lt;tt&gt;t&lt;/tt&gt; of the Student-t 
                  distribution with &lt;tt&gt;k &amp;gt; 0&lt;/tt&gt; degrees of freedom.
                  &lt;pre&gt;
                  t
                  -
                  | |
                  -                      |         2   -(k+1)/2
                  | ( (k+1)/2 )           |  (     x   )
                  ----------------------        |  ( 1 + --- )        dx
                  -               |  (      k  )
                  sqrt( k pi ) | ( k/2 )        |
                  | |
                  -
                  -inf.
                  &lt;/pre&gt;
                  Relation to incomplete beta integral:
                  &lt;p&gt;
                  &lt;tt&gt;1 - studentT(k,t) = 0.5  Gamma.incompleteBeta( k/2, 1/2, z )&lt;/tt&gt;
                  where &lt;tt&gt;z = k/(k + t2)&lt;/tt&gt;.
                  &lt;p&gt;
                  Since the function is symmetric about &lt;tt&gt;t=0&lt;/tt&gt;, the area under the
                  right tail of the density is found by calling the function
                  with &lt;tt&gt;-t&lt;/tt&gt; instead of &lt;tt&gt;t&lt;/tt&gt;.                
                <param>
                    k degrees of freedom.                    
                </param>
                <param>
                    t integration end point.                    
                </param>
            </javadoc>
            <method name="studentT" type="double" line="504">
                <params>
                    <param name="k" type="double"/>
                    <param name="t" type="double"/>
                </params>
                <declaration name="cdf" type="double" line="507"/>
            </method>
            <javadoc line="511">
                Returns the value, &lt;tt&gt;t&lt;/tt&gt;, for which the area under the
                  Student-t probability density function (integrated from
                  minus infinity to &lt;tt&gt;t&lt;/tt&gt;) is equal to &lt;tt&gt;1-alpha/2&lt;/tt&gt;.
                  The value returned corresponds to usual Student t-distribution lookup
                  table for &lt;tt&gt;t&lt;sub&gt;alpha[size]&lt;/sub&gt;&lt;/tt&gt;.
                  &lt;p&gt;
                  The function uses the studentT function to determine the return
                  value iteratively.                
                <param>
                    alpha probability                    
                </param>
                <param>
                    size size of data set                    
                </param>
            </javadoc>
            <method name="studentTInverse" type="double" line="523">
                <params>
                    <param name="alpha" type="double"/>
                    <param name="size" type="int"/>
                </params>
                <declaration name="cumProb" type="double" line="524"/>
                <declaration name="f1" type="double" line="525"/>
                <declaration name="x1" type="double" line="526"/>
                <declaration name="g" type="double" line="527"/>
                <scope line="530"/>
                <scope line="536">
                    <scope line="537"/>
                    <scope line="540"/>
                </scope>
                <scope line="546">
                    <scope line="550"/>
                    <scope line="553"/>
                    <scope line="559"/>
                </scope>
                <scope line="567"/>
                <scope line="570"/>
            </method>
        </class>
    </source>