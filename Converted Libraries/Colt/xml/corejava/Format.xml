<?xml version="1.0" encoding="UTF-8"?>
    <source package="corejava">
        <import package="java.io"/>
        <class name="Format" line="3">
            <javadoc line="3">
                A class for formatting numbers that follows &lt;tt&gt;printf&lt;/tt&gt; conventions.
                  Also implements C-like &lt;tt&gt;atoi&lt;/tt&gt; and &lt;tt&gt;atof&lt;/tt&gt; functions                
                <version>
                    1.22 2002-11-16                    
                </version>
                <author>
                    Cay Horstmann
                      1998-09-14: Fixed a number of bugs.
                      1.Formatting the most extreme negative number (-9223372036854775808L) printed with 2 leading minus signs.
                      2.Printing 0 with a %e or %g format did not work.
                      3.Printing numbers that were closer to 1 than the number of requested decimal places rounded down rather than up, e.g. formatting 1.999 with %.2f printed 1.00. (This one is pretty serious, of course.)
                      4.Printing with precision 0 (e.g %10.0f) didn't work.
                      5.Printing a string with a precision that exceeded the string length (e.g. print "Hello" with %20.10s) caused a StringIndexOutOfBounds error.
                      1998-10-21: Changed method names from print to printf
                      2000-06-09: Moved to package com.horstmann; no longer part of
                      Core Java
                      2000-06-09: Fixed a number of bugs.
                      1.Printing 100.0 with %e printed 10.0e1, not 1.0e2
                      2.Printing Inf and NaN didn't work.
                      2000-06-09: Coding guideline cleanup
                      2002-11-16: Move to package com.horstmann.format; licensed under LGPL                    
                </author>
            </javadoc>
            <javadoc line="24">
                Formats the number following &lt;tt&gt;printf&lt;/tt&gt; conventions.
                  Main limitation: Can only handle one format parameter at a time
                  Use multiple Format objects to format more than one number                
                <param>
                    s the format string following printf conventions
                      The string has a prefix, a format code and a suffix. The prefix and suffix
                      become part of the formatted output. The format code directs the
                      formatting of the (single) parameter to be formatted. The code has the
                      following structure
                      <ul>
                      <li> a % (required)
                      <li> a modifier (optional)
                      <dl>
                      <dt> + <dd> forces display of + for positive numbers
                      <dt> 0 <dd> show leading zeroes
                      <dt> - <dd> align left in the field
                      <dt> space <dd> prepend a space in front of positive numbers
                      <dt> # <dd> use "alternate" format. Add 0 or 0x for octal or hexadecimal numbers. Don't suppress trailing zeroes in general floating point format.
                      </dl>
                      <li> an integer denoting field width (optional)
                      <li> a period followed by an integer denoting precision (optional)
                      <li> a format descriptor (required)
                      <dl>
                      <dt>f <dd> floating point number in fixed format
                      <dt>e, E <dd> floating point number in exponential notation (scientific format). The E format results in an uppercase E for the exponent (1.14130E+003), the e format in a lowercase e.
                      <dt>g, G <dd> floating point number in general format (fixed format for small numbers, exponential format for large numbers). Trailing zeroes are suppressed. The G format results in an uppercase E for the exponent (if any), the g format in a lowercase e.
                      <dt>d, i <dd> integer in decimal
                      <dt>x <dd> integer in hexadecimal
                      <dt>o <dd> integer in octal
                      <dt>s <dd> string
                      <dt>c <dd> character
                      </dl>
                      </ul>                    
                </param>
                <exception>
                    IllegalArgumentException if bad format                    
                </exception>
            </javadoc>
            <method name="Format" type="constructor" line="59">
                <params>
                    <param name="s" type="String"/>
                </params>
                <declaration name="state" type="int" line="70"/>
                <declaration name="length" type="int" line="71"/>
                <declaration name="parseState" type="int" line="72"/>
                <declaration name="i" type="int" line="73"/>
                <scope line="74">
                    <scope line="76">
                        <scope line="77">
                            <scope line="78"/>
                        </scope>
                    </scope>
                </scope>
                <scope line="89">
                    <scope line="96"/>
                </scope>
                <scope line="102">
                    <scope line="104"/>
                    <scope line="108"/>
                </scope>
                <scope line="115">
                    <scope line="117"/>
                </scope>
                <scope line="123"/>
            </method>
            <javadoc line="130">
                prints a formatted number following printf conventions                
                <param>
                    fmt the format string                    
                </param>
                <param>
                    x the double to print                    
                </param>
            </javadoc>
            <method name="printf" type="void" line="135">
                <params>
                    <param name="fmt" type="String"/>
                    <param name="x" type="double"/>
                </params>
            </method>
            <javadoc line="138">
                prints a formatted number following printf conventions                
                <param>
                    fmt the format string                    
                </param>
                <param>
                    x the int to print                    
                </param>
            </javadoc>
            <method name="printf" type="void" line="143">
                <params>
                    <param name="fmt" type="String"/>
                    <param name="x" type="int"/>
                </params>
            </method>
            <javadoc line="146">
                prints a formatted number following printf conventions                
                <param>
                    fmt the format string                    
                </param>
                <param>
                    x the long to print                    
                </param>
            </javadoc>
            <method name="printf" type="void" line="151">
                <params>
                    <param name="fmt" type="String"/>
                    <param name="x" type="long"/>
                </params>
            </method>
            <javadoc line="154">
                prints a formatted number following printf conventions                
                <param>
                    fmt the format string                    
                </param>
                <param>
                    x the character to print                    
                </param>
            </javadoc>
            <method name="printf" type="void" line="159">
                <params>
                    <param name="fmt" type="String"/>
                    <param name="x" type="char"/>
                </params>
            </method>
            <javadoc line="162">
                prints a formatted number following printf conventions                
                <param>
                    fmt the format string                    
                </param>
                <param>
                    x a string to print                    
                </param>
            </javadoc>
            <method name="printf" type="void" line="167">
                <params>
                    <param name="fmt" type="String"/>
                    <param name="x" type="String"/>
                </params>
            </method>
            <javadoc line="170">
                Converts a string of digits (decimal, octal or hex) to an integer                
                <param>
                    s a string                    
                </param>
                <return>
                    the numeric value of the prefix of s representing a base 10 integer                    
                </return>
            </javadoc>
            <method name="atoi" type="int" line="175">
                <params>
                    <param name="s" type="String"/>
                </params>
            </method>
            <javadoc line="178">
                Converts a string of digits (decimal, octal or hex) to a long integer                
                <param>
                    s a string                    
                </param>
                <return>
                    the numeric value of the prefix of s representing a base 10 integer                    
                </return>
            </javadoc>
            <method name="atol" type="long" line="183">
                <params>
                    <param name="s" type="String"/>
                </params>
                <declaration name="i" type="int" line="184"/>
                <scope line="186"/>
            </method>
            <method name="parseLong" type="long" line="192">
                <params>
                    <param name="s" type="String"/>
                    <param name="base" type="int"/>
                </params>
                <declaration name="i" type="int" line="193"/>
                <declaration name="sign" type="int" line="194"/>
                <declaration name="r" type="long" line="195"/>
                <scope line="197"/>
                <scope line="201"/>
                <scope line="204">
                    <declaration name="ch" type="char" line="205"/>
                </scope>
            </method>
            <javadoc line="214">
                Converts a string of digits to a &lt;tt&gt;double&lt;/tt&gt;                
                <param>
                    s a string                    
                </param>
            </javadoc>
            <method name="atof" type="double" line="218">
                <params>
                    <param name="s" type="String"/>
                </params>
                <declaration name="i" type="int" line="219"/>
                <declaration name="sign" type="int" line="220"/>
                <declaration name="r" type="double" line="221"/>
                <declaration name="f" type="double" line="222"/>
                <declaration name="p" type="double" line="223"/>
                <declaration name="state" type="int" line="224"/>
                <scope line="226"/>
                <scope line="230"/>
                <scope line="233">
                    <declaration name="ch" type="char" line="234"/>
                    <scope line="235">
                        <scope line="237"/>
                    </scope>
                    <scope line="242"/>
                    <scope line="246">
                        <declaration name="e" type="long" line="247"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="255">
                Formats a &lt;tt&gt;double&lt;/tt&gt; into a string (like sprintf in C)                
                <param>
                    x the number to format                    
                </param>
                <return>
                    the formatted string                    
                </return>
                <exception>
                    IllegalArgumentException if bad argument                    
                </exception>
            </javadoc>
            <method name="format" type="String" line="261">
                <params>
                    <param name="x" type="double"/>
                </params>
                <declaration name="r" type="String" line="262"/>
                <declaration name="s" type="int" line="264"/>
                <scope line="265"/>
            </method>
            <javadoc line="276">
                Formats an integer into a string (like sprintf in C)                
                <param>
                    x the number to format                    
                </param>
                <return>
                    the formatted string                    
                </return>
            </javadoc>
            <method name="format" type="String" line="281">
                <params>
                    <param name="x" type="int"/>
                </params>
                <declaration name="lx" type="long" line="282"/>
            </method>
            <javadoc line="286">
                Formats a long integer into a string (like sprintf in C)                
                <param>
                    x the number to format                    
                </param>
                <return>
                    the formatted string                    
                </return>
            </javadoc>
            <method name="format" type="String" line="291">
                <params>
                    <param name="x" type="long"/>
                </params>
                <declaration name="r" type="String" line="292"/>
                <declaration name="s" type="int" line="293"/>
                <scope line="294">
                    <scope line="295"/>
                    <scope line="299"/>
                </scope>
            </method>
            <javadoc line="310">
                Formats a character into a string (like sprintf in C)                
                <param>
                    x the value to format                    
                </param>
                <return>
                    the formatted string                    
                </return>
            </javadoc>
            <method name="format" type="String" line="315">
                <params>
                    <param name="c" type="char"/>
                </params>
                <declaration name="r" type="String" line="317"/>
            </method>
            <javadoc line="320">
                Formats a string into a larger string (like sprintf in C)                
                <param>
                    x the value to format                    
                </param>
                <return>
                    the formatted string                    
                </return>
            </javadoc>
            <method name="format" type="String" line="325">
                <params>
                    <param name="s" type="String"/>
                </params>
            </method>
            <javadoc line="330">
                a test stub for the format class                
            </javadoc>
            <method name="main" type="void" line="333">
                <params>
                    <param name="a" type="String[]"/>
                </params>
                <declaration name="x" type="double" line="334"/>
                <declaration name="y" type="double" line="335"/>
                <declaration name="z" type="double" line="336"/>
                <declaration name="w" type="double" line="337"/>
                <declaration name="u" type="double" line="338"/>
                <declaration name="v" type="double" line="339"/>
                <declaration name="d" type="int" line="340"/>
            </method>
            <method name="repeat" type="String" line="403">
                <params>
                    <param name="c" type="char"/>
                    <param name="n" type="int"/>
                </params>
                <declaration name="s" type="StringBuffer" line="405"/>
            </method>
            <method name="convert" type="String" line="409">
                <params>
                    <param name="x" type="long"/>
                    <param name="n" type="int"/>
                    <param name="m" type="int"/>
                    <param name="d" type="String"/>
                </params>
                <declaration name="r" type="String" line="411"/>
                <scope line="412"/>
            </method>
            <method name="pad" type="String" line="418">
                <params>
                    <param name="r" type="String"/>
                </params>
                <declaration name="p" type="String" line="419"/>
            </method>
            <method name="sign" type="String" line="423">
                <params>
                    <param name="s" type="int"/>
                    <param name="r" type="String"/>
                </params>
                <declaration name="p" type="String" line="424"/>
                <scope line="426"/>
                <scope line="430"/>
                <declaration name="w" type="int" line="435"/>
            </method>
            <method name="fixedFormat" type="String" line="440">
                <params>
                    <param name="d" type="double"/>
                </params>
                <declaration name="removeTrailing" type="boolean" line="441"/>
                <declaration name="whole" type="long" line="444"/>
                <declaration name="fr" type="double" line="445"/>
                <declaration name="factor" type="double" line="447"/>
                <declaration name="leadingZeroes" type="String" line="448"/>
                <scope line="449"/>
                <declaration name="l" type="long" line="453"/>
                <scope line="454"/>
                <declaration name="z" type="String" line="458"/>
                <scope line="460">
                    <declaration name="t" type="int" line="461"/>
                </scope>
            </method>
            <method name="expFormat" type="String" line="468">
                <params>
                    <param name="d" type="double"/>
                </params>
                <declaration name="f" type="String" line="469"/>
                <declaration name="e" type="int" line="470"/>
                <declaration name="dd" type="double" line="471"/>
                <declaration name="factor" type="double" line="472"/>
                <scope line="473">
                    <scope line="474"/>
                    <scope line="479"/>
                </scope>
                <declaration name="p" type="String" line="490"/>
                <scope line="491"/>
                <scope line="495"/>
            </method>
            <declaration name="width" type="int" line="501"/>
            <declaration name="precision" type="int" line="502"/>
            <declaration name="pre" type="String" line="503"/>
            <declaration name="post" type="String" line="504"/>
            <declaration name="leadingZeroes" type="boolean" line="505"/>
            <declaration name="showPlus" type="boolean" line="506"/>
            <declaration name="alternate" type="boolean" line="507"/>
            <declaration name="showSpace" type="boolean" line="508"/>
            <declaration name="leftAlign" type="boolean" line="509"/>
            <declaration name="fmt" type="char" line="510"/>
        </class>
    </source>