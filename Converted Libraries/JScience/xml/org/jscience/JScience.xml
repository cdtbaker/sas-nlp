<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.jscience">
        <import package="java.math.BigInteger"/>
        <import package="java.util.Date"/>
        <import package="java.util.Random"/>
        <import package="javax.measure.quantity"/>
        <import package="javax.measure.unit"/>
        <import package="org.jscience.economics.money.Currency"/>
        <import package="org.jscience.economics.money.Money"/>
        <import package="org.jscience.geography.coordinates.Altitude"/>
        <import package="org.jscience.geography.coordinates.CompoundCoordinates"/>
        <import package="org.jscience.geography.coordinates.LatLong"/>
        <import package="org.jscience.geography.coordinates.Time"/>
        <import package="org.jscience.geography.coordinates.UTM"/>
        <import package="org.jscience.geography.coordinates.XYZ"/>
        <import package="org.jscience.geography.coordinates.crs.CoordinatesConverter"/>
        <import package="org.jscience.mathematics.function.Polynomial"/>
        <import package="org.jscience.mathematics.function.Variable"/>
        <import package="org.jscience.mathematics.number.Complex"/>
        <import package="org.jscience.mathematics.number.Float64"/>
        <import package="org.jscience.mathematics.number.LargeInteger"/>
        <import package="org.jscience.mathematics.number.ModuloInteger"/>
        <import package="org.jscience.mathematics.number.Rational"/>
        <import package="org.jscience.mathematics.number.Real"/>
        <import package="org.jscience.mathematics.vector.ComplexMatrix"/>
        <import package="org.jscience.mathematics.vector.DenseMatrix"/>
        <import package="org.jscience.mathematics.vector.DenseVector"/>
        <import package="org.jscience.mathematics.vector.Float64Matrix"/>
        <import package="org.jscience.mathematics.vector.Matrix"/>
        <import package="org.jscience.mathematics.vector.Vector"/>
        <import package="org.jscience.physics.amount.Amount"/>
        <import package="org.jscience.physics.amount.AmountFormat"/>
        <import package="org.jscience.physics.model.RelativisticModel"/>
        <import package="javolution.lang.Configurable"/>
        <import package="javolution.lang.MathLib"/>
        <import package="javolution.text.TextBuilder"/>
        <import package="javolution.context.ConcurrentContext"/>
        <import package="javolution.context.LocalContext"/>
        <import package="javolution.context.StackContext"/>
        <import package="javax.measure.unit.NonSI"/>
        <import package="javax.measure.unit.SI"/>
        <import package="org.jscience.economics.money.Currency"/>
        <class name="JScience" line="42">
            <javadoc line="42">
                &lt;p&gt; This class represents the &lt;b&gt;J&lt;/b&gt;Science library; it contains the{@link #main} method for versionning, self-tests, and performance 
                  analysis.&lt;/p&gt;                
                <author>
                    <a href="mailto:jean-marie@dautelle.com">Jean-Marie Dautelle</a>                    
                </author>
                <version>
                    3.0, February 13, 2006                    
                </version>
            </javadoc>
            <declaration name="VERSION" type="String" line="49"/>
            <javadoc line="49">
                Holds the version information.                
            </javadoc>
            <declaration name="MODULO" type="Configurable&lt;Character&gt;" line="53"/>
            <javadoc line="54">
                Default constructor.                
            </javadoc>
            <method name="JScience" type="constructor" line="57"/>
            <javadoc line="59">
                The library {@link #main} method. The archive &lt;codejscience.jar&lt;/code&gt;
                  is auto-executable.
                  &lt;ul&gt;
                  &lt;li&gt;&lt;code&gt;java [-cp javolution.jar] -jar jscience.jar version&lt;/code&gt;
                  to output version information.&lt;/li&gt;
                  &lt;li&gt;&lt;code&gt;java [-cp javolution.jar] -jar jscience.jar test&lt;/code&gt; to
                  perform self-tests.&lt;/li&gt;
                  &lt;li&gt;&lt;code&gt;java [-cp javolution.jar] -jar jscience.jar perf&lt;/code&gt; for
                  performance analysis.&lt;/li&gt;
                  &lt;/ul&gt;                
                <param>
                    args the option arguments.                    
                </param>
                <throws>
                    Exception if a problem occurs.                    
                </throws>
            </javadoc>
            <method name="main" type="void" line="73">
                <params>
                    <param name="args" type="String[]"/>
                </params>
                <scope line="76">
                    <scope line="77"/>
                    <scope line="81"/>
                    <scope line="85"/>
                </scope>
            </method>
            <javadoc line="96">
                Performs simple tests.                
                <throws>
                    Exception if a problem occurs.                    
                </throws>
            </javadoc>
            <method name="testing" type="void" line="100">
                <scope line="105">
                    <declaration name="m0" type="Amount&lt;Mass&gt;" line="108"/>
                    <declaration name="m1" type="Amount&lt;Mass&gt;" line="109"/>
                    <declaration name="m2" type="Amount&lt;ElectricCurrent&gt;" line="110"/>
                    <declaration name="m3" type="Amount&lt;Mass&gt;" line="116"/>
                    <declaration name="m4" type="Amount&lt;Mass&gt;" line="117"/>
                    <declaration name="m5" type="Amount&lt;ElectricCurrent&gt;" line="118"/>
                    <declaration name="t0" type="Amount&lt;Temperature&gt;" line="119"/>
                    <declaration name="m6" type="Amount&lt;Volume&gt;" line="126"/>
                    <declaration name="m7" type="Amount&lt;Frequency&gt;" line="127"/>
                    <declaration name="m8" type="Amount&lt;Frequency&gt;" line="132"/>
                    <declaration name="m10" type="Amount&lt;Frequency&gt;" line="133"/>
                    <declaration name="m11" type="Amount&lt;Frequency&gt;" line="134"/>
                    <scope line="162">
                        <declaration name="x" type="Amount&lt;Length&gt;" line="163"/>
                        <declaration name="v" type="Amount&lt;Velocity&gt;" line="164"/>
                        <declaration name="t" type="Amount&lt;Duration&gt;" line="165"/>
                        <declaration name="ns" type="long" line="166"/>
                        <scope line="167"/>
                    </scope>
                    <scope line="174">
                        <declaration name="x" type="double" line="175"/>
                        <declaration name="v" type="double" line="176"/>
                        <declaration name="t" type="double" line="177"/>
                        <scope line="178"/>
                    </scope>
                </scope>
                <scope line="185">
                    <declaration name="x" type="Amount&lt;Length&gt;" line="189"/>
                    <declaration name="m" type="Amount&lt;Mass&gt;" line="192"/>
                </scope>
                <scope line="195">
                    <declaration name="carMileage" type="Amount&lt;?&gt;" line="202"/>
                    <declaration name="gazPrice" type="Amount&lt;?&gt;" line="203"/>
                    <declaration name="tripDistance" type="Amount&lt;Length&gt;" line="204"/>
                    <declaration name="tripCost" type="Amount&lt;Money&gt;" line="205"/>
                </scope>
                <scope line="208">
                    <declaration name="R1" type="Amount&lt;ElectricResistance&gt;" line="211"/>
                    <declaration name="R2" type="Amount&lt;ElectricResistance&gt;" line="212"/>
                    <declaration name="U0" type="Amount&lt;ElectricPotential&gt;" line="213"/>
                    <declaration name="A" type="DenseMatrix&lt;Amount&lt;?&gt;&gt;" line="214"/>
                    <declaration name="B" type="DenseVector&lt;Amount&lt;?&gt;&gt;" line="215"/>
                    <declaration name="X" type="Vector&lt;Amount&lt;?&gt;&gt;" line="216"/>
                </scope>
                <scope line="220">
                    <declaration name="varX" type="Variable&lt;Complex&gt;" line="223"/>
                    <declaration name="varY" type="Variable&lt;Complex&gt;" line="224"/>
                    <declaration name="x" type="Polynomial&lt;Complex&gt;" line="225"/>
                    <declaration name="fx" type="Polynomial&lt;Complex&gt;" line="226"/>
                </scope>
                <scope line="235">
                    <declaration name="latLongToUTM" type="CoordinatesConverter&lt;LatLong,UTM&gt;" line="238"/>
                    <declaration name="latLong" type="LatLong" line="239"/>
                    <declaration name="utm" type="UTM" line="240"/>
                    <declaration name="latLongToXYZ" type="CoordinatesConverter&lt;LatLong,XYZ&gt;" line="242"/>
                    <declaration name="xyz" type="XYZ" line="243"/>
                    <declaration name="alt" type="Altitude" line="245"/>
                    <declaration name="latLongAlt" type="CompoundCoordinates&lt;LatLong,Altitude&gt;" line="246"/>
                    <declaration name="time" type="Time" line="249"/>
                    <declaration name="latLongAltTime" type="CompoundCoordinates&lt;CompoundCoordinates&lt;LatLong,Altitude&gt;,Time&gt;" line="250"/>
                </scope>
                <scope line="253">
                    <declaration name="two" type="Real" line="256"/>
                    <declaration name="three" type="Real" line="257"/>
                    <declaration name="sqrt2" type="Real" line="260"/>
                    <declaration name="dividend" type="LargeInteger" line="263"/>
                    <declaration name="divisor" type="LargeInteger" line="264"/>
                    <declaration name="rational" type="Rational" line="265"/>
                    <declaration name="m" type="ModuloInteger" line="267"/>
                    <scope line="269">
                        <declaration name="inv" type="ModuloInteger" line="271"/>
                        <declaration name="one" type="ModuloInteger" line="273"/>
                    </scope>
                    <scope line="276"/>
                </scope>
            </method>
            <javadoc line="281">
                Measures performance.                
            </javadoc>
            <method name="benchmark" type="void" line="284">
                <declaration name="results" type="Object[]" line="289"/>
                <scope line="294">
                    <declaration name="x" type="Float64" line="296"/>
                    <scope line="297"/>
                </scope>
                <scope line="305">
                    <declaration name="x" type="Float64" line="307"/>
                    <scope line="308"/>
                </scope>
                <scope line="316">
                    <declaration name="x" type="Complex" line="318"/>
                    <scope line="319"/>
                </scope>
                <scope line="327">
                    <declaration name="x" type="Complex" line="329"/>
                    <scope line="330"/>
                </scope>
                <scope line="338">
                    <declaration name="x" type="Amount&lt;Mass&gt;" line="340"/>
                    <scope line="341"/>
                </scope>
                <scope line="349">
                    <declaration name="x" type="Amount&lt;Mass&gt;" line="351"/>
                    <scope line="352"/>
                </scope>
                <declaration name="big" type="BigInteger" line="360"/>
                <declaration name="bytes" type="byte[]" line="361"/>
                <declaration name="large" type="LargeInteger" line="362"/>
                <scope line="365">
                    <scope line="367"/>
                </scope>
                <scope line="375">
                    <scope line="377"/>
                </scope>
                <scope line="385">
                    <scope line="386"/>
                </scope>
                <scope line="393">
                    <scope line="394"/>
                </scope>
                <declaration name="size" type="int" line="401"/>
                <declaration name="values" type="double[][]" line="402"/>
                <scope line="403">
                    <scope line="404"/>
                </scope>
                <scope line="410"/>
                <scope line="414"/>
            </method>
            <method name="multiplyMatrices" type="void" line="422">
                <params>
                    <param name="values" type="double[][]"/>
                </params>
                <declaration name="size" type="int" line="423"/>
                <scope line="425">
                    <scope line="426"/>
                </scope>
                <declaration name="PM" type="MatrixDouble" line="430"/>
                <declaration name="R1" type="MatrixDouble" line="433"/>
                <declaration name="FM" type="Matrix&lt;Float64&gt;" line="436"/>
                <declaration name="R2" type="Matrix&lt;Float64&gt;" line="439"/>
                <declaration name="complexes" type="Complex[][]" line="443"/>
                <scope line="444">
                    <scope line="445"/>
                </scope>
                <declaration name="CM" type="Matrix&lt;Complex&gt;" line="449"/>
                <declaration name="measures" type="Amount&lt;?&gt;[][]" line="455"/>
                <scope line="456">
                    <scope line="457"/>
                </scope>
                <declaration name="MM" type="DenseMatrix&lt;Amount&lt;?&gt;&gt;" line="461"/>
            </method>
            <class name="MatrixDouble" line="466">
                <declaration name="o" type="double[][]" line="467"/>
                <declaration name="m" type="int" line="468"/>
                <declaration name="n" type="int" line="469"/>
                <method name="MatrixDouble" type="constructor" line="470">
                    <params>
                        <param name="elements" type="double[][]"/>
                    </params>
                </method>
                <method name="times" type="MatrixDouble" line="475">
                    <params>
                        <param name="that" type="MatrixDouble"/>
                    </params>
                    <declaration name="M" type="MatrixDouble" line="477"/>
                    <declaration name="thatColj" type="double[]" line="478"/>
                    <scope line="479">
                        <scope line="480"/>
                        <scope line="483">
                            <declaration name="thisRowi" type="double[]" line="484"/>
                            <declaration name="s" type="double" line="485"/>
                            <scope line="486"/>
                        </scope>
                    </scope>
                </method>
            </class>
            <method name="startTime" type="void" line="495"/>
            <javadoc line="498">
                Ends measuring time and display the execution time per iteration.                
                <param>
                    iterationsthe number iterations performed since {@link #startTime}.                    
                </param>
            </javadoc>
            <method name="endTime" type="void" line="502">
                <params>
                    <param name="iterations" type="int"/>
                </params>
                <declaration name="nanoSeconds" type="long" line="503"/>
                <declaration name="picoDuration" type="long" line="504"/>
                <declaration name="divisor" type="long" line="505"/>
                <declaration name="unit" type="String" line="506"/>
                <scope line="507"/>
                <scope line="511"/>
                <scope line="515"/>
                <scope line="519"/>
                <declaration name="tb" type="TextBuilder" line="523"/>
                <declaration name="fracDigits" type="int" line="525"/>
                <scope line="527"/>
            </method>
            <declaration name="_time" type="long" line="532"/>
        </class>
    </source>