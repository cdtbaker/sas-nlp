<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.jscience.mathematics.number">
        <import package="javolution.context.ObjectFactory"/>
        <import package="javolution.lang.MathLib"/>
        <import package="javolution.text.Text"/>
        <import package="javolution.text.TypeFormat"/>
        <import package="javolution.xml.XMLFormat"/>
        <import package="javolution.xml.stream.XMLStreamException"/>
        <class name="Integer64" line="8">
            <extends class="Number">
                <type_params>
                    <type_param name="Integer64"/>
                </type_params>
            </extends>
            <javadoc line="8">
                &lt;p&gt; This class represents a 64 bits integer number.&lt;/p&gt;                
                <author>
                    <a href="mailto:jean-marie@dautelle.com">Jean-Marie Dautelle</a>                    
                </author>
                <version>
                    3.0, February 13, 2006                    
                </version>
                <see>
                    <a href="http://en.wikipedia.org/wiki/Integer">
                           Wikipedia: Integer</a>                    
                </see>
            </javadoc>
            <declaration name="XML" type="XMLFormat&lt;Integer64&gt;" line="16"/>
            <javadoc line="16">
                Holds the default XML representation for 64 bits integer numbers.
                  This representation consists of a simple &lt;code&gt;value&lt;/code&gt; attribute
                  holding the {@link #toText() textual} representation.                
            </javadoc>
            <anonymous_class line="21">
                <method name="newInstance" type="Integer64" line="22">
                    <params>
                        <param name="cls" type="Class<Integer64>"/>
                        <param name="xml" type="InputElement"/>
                    </params>
                </method>
                <method name="write" type="void" line="25">
                    <params>
                        <param name="integer64" type="Integer64"/>
                        <param name="xml" type="OutputElement"/>
                    </params>
                </method>
                <method name="read" type="void" line="28">
                    <params>
                        <param name="xml" type="InputElement"/>
                        <param name="integer64" type="Integer64"/>
                    </params>
                </method>
            </anonymous_class>
            <declaration name="FACTORY" type="ObjectFactory&lt;Integer64&gt;" line="32"/>
            <javadoc line="32">
                Holds the factory used to produce 64 bits integer instances.                
            </javadoc>
            <anonymous_class line="35">
                <method name="create" type="Integer64" line="36"/>
            </anonymous_class>
            <declaration name="ZERO" type="Integer64" line="41"/>
            <javadoc line="41">
                The 64 bits floating point representing zero.                
            </javadoc>
            <declaration name="ONE" type="Integer64" line="45"/>
            <javadoc line="45">
                The 64 bits floating point representing one.                
            </javadoc>
            <declaration name="_value" type="long" line="49"/>
            <javadoc line="49">
                The associated long value.                
            </javadoc>
            <javadoc line="53">
                Default constructor.                
            </javadoc>
            <method name="Integer64" type="constructor" line="56"/>
            <javadoc line="58">
                Returns the 64 bits integer from the specified &lt;code&gt;long&lt;/code&gt; value.                
                <param>
                    longValue the <code>long</code> value for this number.                    
                </param>
                <see>
                    #longValue()                    
                </see>
            </javadoc>
            <method name="Integer64" type="constructor" line="63">
                <params>
                    <param name="longValue" type="long"/>
                </params>
            </method>
            <javadoc line="66">
                Returns the 64 bits integer from the specified &lt;code&gt;long&lt;/code&gt; value.                
                <param>
                    longValue the <code>long</code> value for this number.                    
                </param>
                <return>
                    the corresponding number.                    
                </return>
                <see>
                    #longValue()                    
                </see>
            </javadoc>
            <method name="valueOf" type="Integer64" line="72">
                <params>
                    <param name="longValue" type="long"/>
                </params>
                <declaration name="r" type="Integer64" line="73"/>
            </method>
            <javadoc line="77">
                Returns the number for the specified character sequence.                
                <param>
                    chars the character sequence.                    
                </param>
                <return>
                    the corresponding number.                    
                </return>
            </javadoc>
            <method name="valueOf" type="Integer64" line="82">
                <params>
                    <param name="chars" type="CharSequence"/>
                </params>
                <declaration name="r" type="Integer64" line="83"/>
            </method>
            <javadoc line="87">
                Returns the opposite of this number.                
                <return>
                    <code>-this</code>.                    
                </return>
            </javadoc>
            <method name="opposite" type="Integer64" line="91">
                <declaration name="r" type="Integer64" line="92"/>
            </method>
            <javadoc line="96">
                Returns the sum of this number with the one specified.                
                <param>
                    that the number to be added.                    
                </param>
                <return>
                    <code>this + that</code>.                    
                </return>
            </javadoc>
            <method name="plus" type="Integer64" line="101">
                <params>
                    <param name="that" type="Integer64"/>
                </params>
                <declaration name="r" type="Integer64" line="102"/>
            </method>
            <javadoc line="106">
                Returns the sum of this number with the specifice value.                
                <param>
                    value the value to be added.                    
                </param>
                <return>
                    <code>this + value</code>.                    
                </return>
            </javadoc>
            <method name="plus" type="Integer64" line="111">
                <params>
                    <param name="value" type="long"/>
                </params>
                <declaration name="r" type="Integer64" line="112"/>
            </method>
            <javadoc line="116">
                Returns the difference between this number and the one specified.                
                <param>
                    that the number to be subtracted.                    
                </param>
                <return>
                    <code>this - that</code>.                    
                </return>
            </javadoc>
            <method name="minus" type="Integer64" line="121">
                <params>
                    <param name="that" type="Integer64"/>
                </params>
                <declaration name="r" type="Integer64" line="122"/>
            </method>
            <javadoc line="126">
                Returns the difference between this number and the specified value                
                <param>
                    value the value to be subtracted.                    
                </param>
                <return>
                    <code>this - value</code>.                    
                </return>
            </javadoc>
            <method name="minus" type="Integer64" line="131">
                <params>
                    <param name="value" type="long"/>
                </params>
                <declaration name="r" type="Integer64" line="132"/>
            </method>
            <javadoc line="136">
                Returns the product of this number with the one specified.                
                <param>
                    that the number multiplier.                    
                </param>
                <return>
                    <code>this · that</code>.                    
                </return>
            </javadoc>
            <method name="times" type="Integer64" line="141">
                <params>
                    <param name="that" type="Integer64"/>
                </params>
                <declaration name="r" type="Integer64" line="142"/>
            </method>
            <javadoc line="146">
                Returns the product of this number with the specified value.                
                <param>
                    value the value multiplier.                    
                </param>
                <return>
                    <code>this · value</code>.                    
                </return>
            </javadoc>
            <method name="times" type="Integer64" line="151">
                <params>
                    <param name="value" type="long"/>
                </params>
                <declaration name="r" type="Integer64" line="152"/>
            </method>
            <javadoc line="156">
                Returns this number divided by the one specified.                
                <param>
                    that the number divisor.                    
                </param>
                <return>
                    <code>this / that</code>.                    
                </return>
            </javadoc>
            <method name="divide" type="Integer64" line="161">
                <params>
                    <param name="that" type="Integer64"/>
                </params>
                <declaration name="r" type="Integer64" line="162"/>
            </method>
            <javadoc line="166">
                Returns this number divided by the specified value.                
                <param>
                    value the value divisor.                    
                </param>
                <return>
                    <code>this / value</code>.                    
                </return>
            </javadoc>
            <method name="divide" type="Integer64" line="171">
                <params>
                    <param name="value" type="long"/>
                </params>
                <declaration name="r" type="Integer64" line="172"/>
            </method>
            <javadoc line="176">
                Compares the magnitude of this number with that number.                
                <return>
                    <code>|this| > |that|</code>                    
                </return>
            </javadoc>
            <method name="isLargerThan" type="boolean" line="180">
                <params>
                    <param name="that" type="Integer64"/>
                </params>
            </method>
            <javadoc line="183">
                Returns the absolute value of this number.                
                <return>
                    <code>|this|</code>.                    
                </return>
            </javadoc>
            <method name="abs" type="Integer64" line="187">
                <declaration name="r" type="Integer64" line="188"/>
            </method>
            <javadoc line="192">
                Returns the decimal text representation of this number.                
                <return>
                    the text representation of this number.                    
                </return>
            </javadoc>
            <method name="toText" type="Text" line="196"/>
            <javadoc line="199">
                Compares this number against the specified object.                
                <param>
                    that the object to compare with.                    
                </param>
                <return>
                    <code>true</code> if the objects are the same;
                      <code>false</code> otherwise.                    
                </return>
            </javadoc>
            <method name="equals" type="boolean" line="205">
                <params>
                    <param name="that" type="Object"/>
                </params>
            </method>
            <javadoc line="208">
                Compares this number against the specified value.                
                <param>
                    value the value to compare with.                    
                </param>
                <return>
                    <code>this.longValue() == value</code>                    
                </return>
            </javadoc>
            <method name="equals" type="boolean" line="213">
                <params>
                    <param name="value" type="long"/>
                </params>
            </method>
            <javadoc line="216">
                Compares this number with the specified value for order.                
                <param>
                    value the value to be compared with.                    
                </param>
                <return>
                    a negative integer, zero, or a positive integer as this number
                      is less than, equal to, or greater than the specified value.                    
                </return>
            </javadoc>
            <method name="compareTo" type="int" line="222">
                <params>
                    <param name="value" type="long"/>
                </params>
                <scope line="223"/>
                <scope line="226"/>
                <scope line="229"/>
            </method>
            <javadoc line="233">
                Returns the hash code for this number.                
                <return>
                    the hash code value.                    
                </return>
            </javadoc>
            <method name="hashCode" type="int" line="237">
                <declaration name="h" type="int" line="238"/>
            </method>
            <method name="longValue" type="long" line="244"/>
            <method name="doubleValue" type="double" line="247"/>
            <method name="compareTo" type="int" line="250">
                <params>
                    <param name="that" type="Integer64"/>
                </params>
            </method>
            <method name="copy" type="Integer64" line="253"/>
            <declaration name="serialVersionUID" type="long" line="256"/>
        </class>
    </source>