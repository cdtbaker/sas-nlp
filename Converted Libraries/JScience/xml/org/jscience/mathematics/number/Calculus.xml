<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.jscience.mathematics.number">
        <import package="javolution.context.ObjectFactory"/>
        <class name="Calculus" line="13">
            <comment line="200">
                Multiplies by k, add to z if shift != 0                
            </comment>
            <javadoc line="13">
                &lt;p&gt; This class holds utilities upon arrays of positive &lt;code&gt;long&lt;/code&gt;.&lt;/p&gt;                
                <author>
                    <a href="mailto:jean-marie@dautelle.com">Jean-Marie Dautelle</a>                    
                </author>
                <version>
                    3.3, January 14, 2006                    
                </version>
            </javadoc>
            <javadoc line="21">
                Default constructor (private for utilities).                
            </javadoc>
            <method name="Calculus" type="constructor" line="24"/>
            <declaration name="MASK_63" type="long" line="27"/>
            <declaration name="MASK_32" type="long" line="29"/>
            <declaration name="MASK_31" type="long" line="31"/>
            <declaration name="MASK_8" type="long" line="33"/>
            <javadoc line="35">
                x += y                
                <return>
                    x size                    
                </return>
            </javadoc>
            <method name="add" type="int" line="39">
                <params>
                    <param name="x" type="long[]"/>
                    <param name="xSize" type="int"/>
                    <param name="y" type="long"/>
                </params>
                <declaration name="sum" type="long" line="40"/>
                <declaration name="i" type="int" line="42"/>
                <scope line="44">
                    <scope line="45"/>
                </scope>
            </method>
            <javadoc line="56">
                z = x + y
                  Preconditions: xSize &gt;= ySize                
                <return>
                    z size                    
                </return>
            </javadoc>
            <method name="add" type="int" line="61">
                <params>
                    <param name="x" type="long[]"/>
                    <param name="xSize" type="int"/>
                    <param name="y" type="long[]"/>
                    <param name="ySize" type="int"/>
                    <param name="z" type="long[]"/>
                </params>
                <declaration name="sum" type="long" line="62"/>
                <declaration name="i" type="int" line="63"/>
                <scope line="64"/>
                <scope line="69">
                    <scope line="70">
                        <scope line="71"/>
                    </scope>
                    <scope line="76"/>
                </scope>
            </method>
            <javadoc line="86">
                z = x - y
                  Preconditions: x &gt;= y                
                <return>
                    z size                    
                </return>
            </javadoc>
            <method name="subtract" type="int" line="91">
                <params>
                    <param name="x" type="long[]"/>
                    <param name="xSize" type="int"/>
                    <param name="y" type="long[]"/>
                    <param name="ySize" type="int"/>
                    <param name="z" type="long[]"/>
                </params>
                <comment line="97">
                    Equals to -1 if borrow.                    
                </comment>
                <comment line="102">
                    Equals to -1 if borrow.                    
                </comment>
                <comment line="104">
                    Copies rest of x to z.                    
                </comment>
                <comment line="108">
                    Calculates size.                    
                </comment>
                <declaration name="diff" type="long" line="92"/>
                <declaration name="i" type="int" line="93"/>
                <scope line="94"/>
                <scope line="99"/>
                <scope line="105"/>
                <scope line="109"/>
            </method>
            <javadoc line="116">
                x.compare(y)
                  Preconditions: xSize = ySize = size                
                <return>
                    1, -1, 0                    
                </return>
            </javadoc>
            <method name="compare" type="int" line="121">
                <params>
                    <param name="x" type="long[]"/>
                    <param name="y" type="long[]"/>
                    <param name="size" type="int"/>
                </params>
                <scope line="122"/>
            </method>
            <javadoc line="131">
                x &lt;&lt; n
                  Preconditions: xSize != 0                
                <return>
                    z size                    
                </return>
            </javadoc>
            <method name="shiftLeft" type="int" line="137">
                <params>
                    <param name="wordShift" type="int"/>
                    <param name="bitShift" type="int"/>
                    <param name="x" type="long[]"/>
                    <param name="xSize" type="int"/>
                    <param name="z" type="long[]"/>
                </params>
                <declaration name="shiftRight" type="int" line="138"/>
                <declaration name="i" type="int" line="139"/>
                <declaration name="j" type="int" line="140"/>
                <declaration name="tmp" type="long" line="141"/>
                <declaration name="high" type="long" line="142"/>
                <scope line="143"/>
                <scope line="146"/>
                <scope line="151"/>
            </method>
            <javadoc line="157">
                x &gt;&gt; n
                  Preconditions: xSize &gt; wordShift                
                <return>
                    z size                    
                </return>
            </javadoc>
            <method name="shiftRight" type="int" line="163">
                <params>
                    <param name="wordShift" type="int"/>
                    <param name="bitShift" type="int"/>
                    <param name="x" type="long[]"/>
                    <param name="xSize" type="int"/>
                    <param name="z" type="long[]"/>
                </params>
                <declaration name="shiftLeft" type="int" line="164"/>
                <declaration name="i" type="int" line="165"/>
                <declaration name="j" type="int" line="166"/>
                <declaration name="tmp" type="long" line="167"/>
                <scope line="168"/>
            </method>
            <javadoc line="177">
                z = x  y
                  Preconditions: y != 0, x != 0                
                <return>
                    z size                    
                </return>
            </javadoc>
            <method name="multiply" type="int" line="182">
                <params>
                    <param name="x" type="long[]"/>
                    <param name="xSize" type="int"/>
                    <param name="y" type="long"/>
                    <param name="z" type="long[]"/>
                </params>
            </method>
            <javadoc line="186">
                z = x  y
                  Preconditions: y != 0, xSize &gt;= ySize                
                <return>
                    z size                    
                </return>
            </javadoc>
            <method name="multiply" type="int" line="191">
                <params>
                    <param name="x" type="long[]"/>
                    <param name="xSize" type="int"/>
                    <param name="y" type="long[]"/>
                    <param name="ySize" type="int"/>
                    <param name="z" type="long[]"/>
                </params>
                <declaration name="zSize" type="int" line="192"/>
                <scope line="193"/>
            </method>
            <method name="multiply" type="int" line="200">
                <params>
                    <param name="x" type="long[]"/>
                    <param name="xSize" type="int"/>
                    <param name="k" type="long"/>
                    <param name="z" type="long[]"/>
                    <param name="shift" type="int"/>
                </params>
                <comment line="202">
                    32 bits.                    
                </comment>
                <comment line="203">
                    31 bits                    
                </comment>
                <comment line="205">
                    63 bits                    
                </comment>
                <comment line="208">
                    Adds carry.                    
                </comment>
                <comment line="209">
                    63 bits.                    
                </comment>
                <comment line="211">
                    63 bits.                    
                </comment>
                <comment line="213">
                    Splits words in [31 bits][32 bits]                    
                </comment>
                <comment line="215">
                    32 bits                    
                </comment>
                <comment line="216">
                    31 bits                    
                </comment>
                <comment line="218">
                    Adds low.                    
                </comment>
                <comment line="219">
                    64 bits                    
                </comment>
                <comment line="221">
                    64 bits.                    
                </comment>
                <comment line="225">
                    Adds middle.                    
                </comment>
                <comment line="226">
                    64 bits.                    
                </comment>
                <comment line="228">
                    64 bits.                    
                </comment>
                <comment line="232">
                    Adds high to carry.                    
                </comment>
                <declaration name="kl" type="long" line="202"/>
                <declaration name="kh" type="long" line="203"/>
                <declaration name="carry" type="long" line="205"/>
                <scope line="206">
                    <declaration name="zz" type="long" line="209"/>
                    <declaration name="w" type="long" line="214"/>
                    <declaration name="wl" type="long" line="215"/>
                    <declaration name="wh" type="long" line="216"/>
                    <declaration name="tmp" type="long" line="219"/>
                </scope>
                <declaration name="size" type="int" line="236"/>
            </method>
            <javadoc line="243">
                z = x / y
                  Preconditions: y is positive (31 bits).                
                <return>
                    remainder                    
                </return>
            </javadoc>
            <method name="divide" type="long" line="248">
                <params>
                    <param name="x" type="long[]"/>
                    <param name="xSize" type="int"/>
                    <param name="y" type="int"/>
                    <param name="z" type="long[]"/>
                </params>
                <declaration name="r" type="long" line="249"/>
                <scope line="250">
                    <declaration name="w" type="long" line="251"/>
                    <declaration name="wh" type="long" line="253"/>
                    <declaration name="qh" type="long" line="254"/>
                    <declaration name="wl" type="long" line="257"/>
                    <declaration name="ql" type="long" line="258"/>
                </scope>
            </method>
            <class name="MultiplyLogic" line="266">
                <implements interface="Runnable"/>
                <javadoc line="266">
                    Multiplication logic (for concurrent context)                    
                </javadoc>
                <declaration name="FACTORY" type="ObjectFactory&lt;MultiplyLogic&gt;" line="270"/>
                <anonymous_class line="271">
                    <method name="create" type="MultiplyLogic" line="273"/>
                </anonymous_class>
                <declaration name="_left" type="LargeInteger" line="277"/>
                <method name="newInstance" type="MultiplyLogic" line="280">
                    <params>
                        <param name="left" type="LargeInteger"/>
                        <param name="right" type="LargeInteger"/>
                    </params>
                    <declaration name="logic" type="MultiplyLogic" line="281"/>
                </method>
                <method name="run" type="void" line="286">
                    <comment line="287">
                        Recursive.                        
                    </comment>
                </method>
                <method name="value" type="LargeInteger" line="289"/>
            </class>
        </class>
    </source>