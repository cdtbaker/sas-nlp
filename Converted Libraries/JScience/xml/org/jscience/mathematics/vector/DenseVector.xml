<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.jscience.mathematics.vector">
        <import package="java.util.List"/>
        <import package="javolution.context.ObjectFactory"/>
        <import package="javolution.context.StackContext"/>
        <import package="javolution.util.FastTable"/>
        <import package="javolution.xml.XMLFormat"/>
        <import package="javolution.xml.stream.XMLStreamException"/>
        <import package="org.jscience.mathematics.structure.Field"/>
        <class name="DenseVector" line="9">
            <type_params>
                <type_param name="F"/>
            </type_params>
            <extends class="Vector">
                <type_params>
                    <type_param name="F"/>
                </type_params>
            </extends>
            <javadoc line="9">
                &lt;p&gt; This class represents a dense vector.&lt;/p&gt;                
                <author>
                    <a href="mailto:jean-marie@dautelle.com">Jean-Marie Dautelle</a>                    
                </author>
                <version>
                    3.3, January 2, 2007                    
                </version>
            </javadoc>
            <declaration name="XML" type="XMLFormat&lt;DenseVector&gt;" line="15"/>
            <javadoc line="15">
                Holds the default XML representation for dense vectors. For example:
                  [code]
                  &lt;DenseVector dimension=&quot;2&quot;&gt;
                  &lt;Rational value=&quot;1/3&quot; /&gt;
                  &lt;Rational value=&quot;3/5&quot; /&gt;
                  &lt;/DenseVector&gt;[/code]                
            </javadoc>
            <anonymous_class line="23">
                <method name="newInstance" type="DenseVector" line="24">
                    <params>
                        <param name="cls" type="Class<DenseVector>"/>
                        <param name="xml" type="InputElement"/>
                    </params>
                </method>
                <method name="read" type="void" line="27">
                    <params>
                        <param name="xml" type="InputElement"/>
                        <param name="V" type="DenseVector"/>
                    </params>
                    <declaration name="dimension" type="int" line="28"/>
                    <scope line="29"/>
                </method>
                <method name="write" type="void" line="34">
                    <params>
                        <param name="V" type="DenseVector"/>
                        <param name="xml" type="OutputElement"/>
                    </params>
                    <declaration name="dimension" type="int" line="35"/>
                    <scope line="37"/>
                </method>
            </anonymous_class>
            <declaration name="_elements" type="FastTable&lt;F&gt;" line="43"/>
            <javadoc line="43">
                Holds the elements.                
            </javadoc>
            <javadoc line="47">
                Returns a dense vector holding the specified elements.                
                <param>
                    elements the vector elements.                    
                </param>
                <return>
                    the vector having the specified elements.                    
                </return>
            </javadoc>
            <method name="valueOf" type="DenseVector<F>" line="52">
                <params>
                    <param name="elements" type="F"/>
                </params>
                <declaration name="V" type="DenseVector&lt;F&gt;" line="53"/>
                <scope line="54"/>
            </method>
            <javadoc line="59">
                Returns a dense vector holding the elements from the specified 
                  collection.                
                <param>
                    elements the collection of vector elements.                    
                </param>
                <return>
                    the vector having the specified elements.                    
                </return>
            </javadoc>
            <method name="valueOf" type="DenseVector<F>" line="65">
                <params>
                    <param name="elements" type="List<F>"/>
                </params>
                <declaration name="V" type="DenseVector&lt;F&gt;" line="66"/>
            </method>
            <javadoc line="70">
                Returns a dense vector equivalent to the specified vector.                
                <param>
                    that the vector to convert.                    
                </param>
                <return>
                    <code>that</code> or a dense vector holding the same elements
                      as the specified vector.                    
                </return>
            </javadoc>
            <method name="valueOf" type="DenseVector<F>" line="76">
                <params>
                    <param name="that" type="Vector<F>"/>
                </params>
                <declaration name="V" type="DenseVector&lt;F&gt;" line="78"/>
                <scope line="79"/>
            </method>
            <method name="getDimension" type="int" line="84"/>
            <method name="get" type="F" line="87">
                <params>
                    <param name="i" type="int"/>
                </params>
            </method>
            <method name="opposite" type="DenseVector<F>" line="90">
                <declaration name="V" type="DenseVector&lt;F&gt;" line="91"/>
                <scope line="92"/>
            </method>
            <method name="plus" type="DenseVector<F>" line="97">
                <params>
                    <param name="that" type="Vector<F>"/>
                </params>
                <declaration name="n" type="int" line="98"/>
                <declaration name="V" type="DenseVector&lt;F&gt;" line="100"/>
                <scope line="101"/>
            </method>
            <method name="minus" type="DenseVector<F>" line="106">
                <params>
                    <param name="that" type="Vector<F>"/>
                </params>
            </method>
            <method name="times" type="DenseVector<F>" line="109">
                <params>
                    <param name="k" type="F"/>
                </params>
                <declaration name="V" type="DenseVector&lt;F&gt;" line="110"/>
                <scope line="111"/>
            </method>
            <method name="times" type="F" line="116">
                <params>
                    <param name="that" type="Vector<F>"/>
                </params>
                <declaration name="n" type="int" line="117"/>
                <scope line="120">
                    <declaration name="sum" type="F" line="121"/>
                    <scope line="122"/>
                </scope>
                <scope line="127"/>
            </method>
            <method name="copy" type="DenseVector<F>" line="131">
                <declaration name="V" type="DenseVector&lt;F&gt;" line="132"/>
                <scope line="133"/>
            </method>
            <method name="newInstance" type="DenseVector<F>" line="138"/>
            <declaration name="FACTORY" type="ObjectFactory&lt;DenseVector&gt;" line="141"/>
            <anonymous_class line="141">
                <method name="create" type="DenseVector" line="142"/>
                <method name="cleanup" type="void" line="145">
                    <params>
                        <param name="vector" type="DenseVector"/>
                    </params>
                </method>
            </anonymous_class>
            <method name="DenseVector" type="constructor" line="150"/>
            <declaration name="serialVersionUID" type="long" line="152"/>
        </class>
    </source>