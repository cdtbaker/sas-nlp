<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.jscience.mathematics.function">
        <import package="javolution.lang.Reference"/>
        <import package="javolution.context.LocalContext"/>
        <interface name="Variable">
            <type_params>
                <type_param name="X"/>
            </type_params>
            <implements interface="Reference">
                <type_params>
                    <type_param name="X"/>
                </type_params>
            </implements>
            <javadoc line="4">
                &lt;p&gt; This interface represents a symbol on whose value a {@link Function}depends. If the functions is not shared between multiple-threads the 
                  simple {@link Variable.Local} implementation can be used. 
                  For global functions (functions used concurrently by multiple threads)
                  the {@link Variable.Global} implementation with {@link javolution.context.LocalContext context-local} settings is 
                  recommended.&lt;/p&gt;                
                <author>
                    <a href="mailto:jean-marie@dautelle.com">Jean-Marie Dautelle</a>                    
                </author>
                <version>
                    3.0, February 13, 2006                    
                </version>
                <see>
                    Function#evaluate                    
                </see>
            </javadoc>
            <method name="getSymbol" type="String" line="15"/>
            <javadoc line="15">
                Returns the symbol for this variable.                
                <return>
                    this variable's symbol.                    
                </return>
            </javadoc>
            <class name="Local" line="20">
                <type_params>
                    <type_param name="X"/>
                </type_params>
                <implements interface="Variable">
                    <type_params>
                        <type_param name="X"/>
                    </type_params>
                </implements>
                <javadoc line="20">
                    This class represents a simple {@link Variable} implementation for 
                      functions not shared between threads (non static).
                      Functions shared between multiple-threads should use a different 
                      type of variable such as {@link Variable.Global}.                    
                </javadoc>
                <declaration name="_value" type="X" line="27"/>
                <javadoc line="27">
                    Holds the reference value.                    
                </javadoc>
                <declaration name="_symbol" type="String" line="31"/>
                <javadoc line="31">
                    Holds the variable symbol.                    
                </javadoc>
                <javadoc line="35">
                    Creates a new local variable with a unique symbol.                    
                    <param>
                        symbol the variable symbol.                        
                    </param>
                </javadoc>
                <method name="Local" type="constructor" line="39">
                    <params>
                        <param name="symbol" type="String"/>
                    </params>
                </method>
                <method name="getSymbol" type="String" line="42"/>
                <method name="get" type="X" line="45"/>
                <method name="set" type="void" line="48">
                    <params>
                        <param name="arg0" type="X"/>
                    </params>
                </method>
            </class>
            <class name="Global" line="52">
                <type_params>
                    <type_param name="X"/>
                </type_params>
                <implements interface="Variable">
                    <type_params>
                        <type_param name="X"/>
                    </type_params>
                </implements>
                <javadoc line="52">
                    This class represents a simple {@link Variable} implementation with {@link javolution.context.LocalContext context-local} values.
                      Instances of this class can be set independently by multiple-threads 
                      as long as each concurrent thread executes within a {@link javolution.context.LocalContext LocalContext}. For example:[code]
                      public abstract class Engine  {
                      public static final Variable.Global&lt;Amount&lt;AngularVelocity&gt;&gt; RPM
                      = new Variable.Global&lt;Amount&lt;AngularVelocity&gt;&gt;(&quot;rpm&quot;);
                      public abstract Function&lt;Amount&lt;AngularVelocity&gt;, Amount&lt;Torque&gt;&gt; getTorque();    
                      }
                      ...
                      LocalContext.enter(); 
                      try {
                      RPM.set(rpm);
                      Amount&lt;Torque&gt; torque = myEngine.getTorque().evaluate();
                      } finally {
                      LocalContext.exit();
                      }[/code]
                      It should be noted that parameterized evaluations are performed within
                      a local context. Therefore, the example
                      above could also be rewritten:[code]
                      Amount&lt;Torque&gt; torque = myEngine.getTorque().evaluate(rpm);
                      [/code]                    
                </javadoc>
                <declaration name="_value" type="LocalContext.Reference&lt;X&gt;" line="76"/>
                <javadoc line="76">
                    Holds the reference value.                    
                </javadoc>
                <declaration name="_symbol" type="String" line="80"/>
                <javadoc line="80">
                    Holds the variable symbol.                    
                </javadoc>
                <javadoc line="84">
                    Creates a new global variable with a unique symbol.                    
                    <param>
                        symbol the variable symbol.                        
                    </param>
                </javadoc>
                <method name="Global" type="constructor" line="88">
                    <params>
                        <param name="symbol" type="String"/>
                    </params>
                </method>
                <method name="getSymbol" type="String" line="91"/>
                <method name="get" type="X" line="94"/>
                <method name="set" type="void" line="97">
                    <params>
                        <param name="arg0" type="X"/>
                    </params>
                </method>
            </class>
        </interface>
    </source>