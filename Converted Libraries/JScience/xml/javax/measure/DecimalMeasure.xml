<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.measure">
        <import package="java.math.BigDecimal"/>
        <import package="java.math.MathContext"/>
        <import package="javax.measure.converter.AddConverter"/>
        <import package="javax.measure.converter.RationalConverter"/>
        <import package="javax.measure.converter.UnitConverter"/>
        <import package="javax.measure.quantity.Quantity"/>
        <import package="javax.measure.unit.Unit"/>
        <class name="DecimalMeasure" line="9">
            <type_params>
                <type_param name="Q"/>
            </type_params>
            <extends class="Measure">
                <type_params>
                    <type_param name="BigDecimal"/>
                    <type_param name="Q"/>
                </type_params>
            </extends>
            <javadoc line="9">
                &lt;p&gt; This class represents a measure whose value is an arbitrary-precision 
                  decimal number.&lt;/p&gt;
                  &lt;p&gt; When converting, applications may supply the 
                  &lt;code&gt;java.math.Context&lt;/code&gt;:[code]
                  DecimalMeasure&lt;Velocity&gt; c = DecimalMeasure.valueOf(&quot;299792458 m/s&quot;);
                  DecimalMeasure&lt;Velocity&gt; milesPerHour = c.to(MILES_PER_HOUR, MathContext.DECIMAL128);
                  System.out.println(milesPerHour);
                  &gt; 670616629.3843951324266284896206156 mph
                  [/code]                
                <author>
                    <a href="mailto:jean-marie@dautelle.com">Jean-Marie Dautelle</a>                    
                </author>
                <version>
                    4.3, October 3, 2007                    
                </version>
            </javadoc>
            <declaration name="_value" type="BigDecimal" line="23"/>
            <javadoc line="23">
                Holds the BigDecimal value.                
            </javadoc>
            <declaration name="_unit" type="Unit&lt;Q&gt;" line="27"/>
            <javadoc line="27">
                Holds the unit.                
            </javadoc>
            <javadoc line="31">
                Creates a decimal measure for the specified number stated in the 
                  specified unit.                
            </javadoc>
            <method name="DecimalMeasure" type="constructor" line="35">
                <params>
                    <param name="value" type="BigDecimal"/>
                    <param name="unit" type="Unit<Q>"/>
                </params>
            </method>
            <javadoc line="39">
                Returns the decimal measure for the specified number stated in the 
                  specified unit.                
                <param>
                    decimal the measurement value.                    
                </param>
                <param>
                    unit the measurement unit.                    
                </param>
            </javadoc>
            <method name="valueOf" type="DecimalMeasure<Q>" line="45">
                <params>
                    <param name="decimal" type="BigDecimal"/>
                    <param name="unit" type="Unit<Q>"/>
                </params>
            </method>
            <javadoc line="48">
                Returns the decimal measure for the specified textual representation.
                  This method first reads the &lt;code&gt;BigDecimal&lt;/code&gt; value, then 
                  the unit if any (value and unit should be separated by white spaces).                
                <param>
                    csq the decimal measure representation (including unit if any).                    
                </param>
                <throws>
                    NumberFormatException if the specified character sequence is 
                      not a valid representation of decimal measure.                    
                </throws>
            </javadoc>
            <method name="valueOf" type="DecimalMeasure<Q>" line="56">
                <params>
                    <param name="csq" type="CharSequence"/>
                </params>
                <declaration name="str" type="String" line="57"/>
                <declaration name="numberLength" type="int" line="58"/>
                <declaration name="unitStartIndex" type="int" line="59"/>
                <scope line="60">
                    <scope line="61">
                        <scope line="62">
                            <scope line="63"/>
                        </scope>
                    </scope>
                </scope>
                <declaration name="decimal" type="BigDecimal" line="72"/>
                <declaration name="unit" type="Unit" line="73"/>
                <scope line="74"/>
            </method>
            <method name="getUnit" type="Unit<Q>" line="79"/>
            <method name="getValue" type="BigDecimal" line="82"/>
            <javadoc line="85">
                Returns the decimal measure equivalent to this measure but stated in the 
                  specified unit. This method will raise an ArithmeticException if the 
                  resulting measure does not have a terminating decimal expansion.                
                <param>
                    unit the new measurement unit.                    
                </param>
                <return>
                    the measure stated in the specified unit.                    
                </return>
                <throws>
                    ArithmeticException if the converted measure value does not have
                      a terminating decimal expansion                    
                </throws>
                <see>
                    #to(Unit,MathContext)                    
                </see>
            </javadoc>
            <method name="to" type="DecimalMeasure<Q>" line="95">
                <params>
                    <param name="unit" type="Unit<Q>"/>
                </params>
            </method>
            <javadoc line="98">
                Returns the decimal measure equivalent to this measure but stated in the 
                  specified unit, the conversion is performed using the specified math
                  context.                
                <param>
                    unit the new measurement unit.                    
                </param>
                <param>
                    mathContext the mathContext used to convert 
                      <code>BigDecimal</code> values or <code>null</code> if none.                    
                </param>
                <return>
                    the measure stated in the specified unit.                    
                </return>
                <throws>
                    ArithmeticException if the result is inexact but the
                      rounding mode is <code>MathContext.UNNECESSARY</code> or 
                      <code>mathContext.precision == 0</tt> and the quotient has a 
                      non-terminating decimal expansion.                    
                </throws>
            </javadoc>
            <method name="to" type="DecimalMeasure<Q>" line="111">
                <params>
                    <param name="unit" type="Unit<Q>"/>
                    <param name="mathContext" type="MathContext"/>
                </params>
                <declaration name="cvtr" type="UnitConverter" line="113"/>
                <scope line="114">
                    <declaration name="factor" type="RationalConverter" line="115"/>
                    <declaration name="dividend" type="BigDecimal" line="116"/>
                    <declaration name="divisor" type="BigDecimal" line="117"/>
                    <declaration name="result" type="BigDecimal" line="118"/>
                </scope>
                <scope line="121">
                    <declaration name="factor" type="BigDecimal" line="122"/>
                    <declaration name="result" type="BigDecimal" line="123"/>
                </scope>
                <scope line="126">
                    <declaration name="offset" type="BigDecimal" line="127"/>
                    <declaration name="result" type="BigDecimal" line="128"/>
                </scope>
                <scope line="131">
                    <declaration name="result" type="BigDecimal" line="132"/>
                </scope>
            </method>
            <method name="doubleValue" type="double" line="136">
                <params>
                    <param name="unit" type="Unit<Q>"/>
                </params>
            </method>
            <declaration name="serialVersionUID" type="long" line="140"/>
        </class>
    </source>