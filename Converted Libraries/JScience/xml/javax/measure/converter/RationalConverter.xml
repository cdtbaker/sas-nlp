<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.measure.converter">
        <class name="RationalConverter" line="2">
            <extends class="UnitConverter"/>
            <javadoc line="2">
                &lt;p&gt; This class represents a converter multiplying numeric values by an
                  exact scaling factor (represented as the quotient of two 
                  &lt;code&gt;long&lt;/code&gt; numbers).&lt;/p&gt;
                  &lt;p&gt; Instances of this class are immutable.&lt;/p&gt;                
                <author>
                    <a href="mailto:jean-marie@dautelle.com">Jean-Marie Dautelle</a>                    
                </author>
                <version>
                    3.1, April 22, 2006                    
                </version>
            </javadoc>
            <declaration name="_dividend" type="long" line="11"/>
            <javadoc line="11">
                Holds the converter dividend.                
            </javadoc>
            <declaration name="_divisor" type="long" line="15"/>
            <javadoc line="15">
                Holds the converter divisor (always positive).                
            </javadoc>
            <javadoc line="19">
                Creates a rational converter with the specified dividend and 
                  divisor.                
                <param>
                    dividend the dividend.                    
                </param>
                <param>
                    divisor the positive divisor.                    
                </param>
                <throws>
                    IllegalArgumentException if <code>divisor &lt; 0</code>                    
                </throws>
                <throws>
                    IllegalArgumentException if <code>dividend == divisor</code>                    
                </throws>
            </javadoc>
            <method name="RationalConverter" type="constructor" line="27">
                <params>
                    <param name="dividend" type="long"/>
                    <param name="divisor" type="long"/>
                </params>
            </method>
            <javadoc line="33">
                Returns the dividend for this rational converter.                
                <return>
                    this converter dividend.                    
                </return>
            </javadoc>
            <method name="getDividend" type="long" line="37"/>
            <javadoc line="40">
                Returns the positive divisor for this rational converter.                
                <return>
                    this converter divisor.                    
                </return>
            </javadoc>
            <method name="getDivisor" type="long" line="44"/>
            <method name="inverse" type="UnitConverter" line="47"/>
            <method name="convert" type="double" line="50">
                <params>
                    <param name="amount" type="double"/>
                </params>
            </method>
            <method name="isLinear" type="boolean" line="53"/>
            <method name="concatenate" type="UnitConverter" line="56">
                <params>
                    <param name="converter" type="UnitConverter"/>
                </params>
                <scope line="57">
                    <declaration name="that" type="RationalConverter" line="58"/>
                    <declaration name="dividendLong" type="long" line="59"/>
                    <declaration name="divisorLong" type="long" line="60"/>
                    <declaration name="dividendDouble" type="double" line="61"/>
                    <declaration name="divisorDouble" type="double" line="62"/>
                    <scope line="63"/>
                    <declaration name="gcd" type="long" line="66"/>
                </scope>
                <scope line="69"/>
                <scope line="72"/>
            </method>
            <method name="valueOf" type="UnitConverter" line="76">
                <params>
                    <param name="dividend" type="long"/>
                    <param name="divisor" type="long"/>
                </params>
            </method>
            <javadoc line="79">
                Returns the greatest common divisor (Euclid&apos;s algorithm).                
                <param>
                    m the first number.                    
                </param>
                <param>
                    nn the second number.                    
                </param>
                <return>
                    the greatest common divisor.                    
                </return>
            </javadoc>
            <method name="gcd" type="long" line="85">
                <params>
                    <param name="m" type="long"/>
                    <param name="n" type="long"/>
                </params>
                <scope line="86"/>
                <scope line="89"/>
            </method>
            <declaration name="serialVersionUID" type="long" line="93"/>
        </class>
    </source>