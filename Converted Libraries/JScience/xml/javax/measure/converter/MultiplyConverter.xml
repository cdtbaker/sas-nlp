<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.measure.converter">
        <class name="MultiplyConverter" line="2">
            <extends class="UnitConverter"/>
            <javadoc line="2">
                &lt;p&gt; This class represents a converter multiplying numeric values by a 
                  constant scaling factor (approximated as a &lt;code&gt;double&lt;/code&gt;). 
                  For exact scaling conversions {@link RationalConverter} is preferred.&lt;/p&gt;
                  &lt;p&gt; Instances of this class are immutable.&lt;/p&gt;                
                <author>
                    <a href="mailto:jean-marie@dautelle.com">Jean-Marie Dautelle</a>                    
                </author>
                <version>
                    3.1, April 22, 2006                    
                </version>
            </javadoc>
            <declaration name="_factor" type="double" line="11"/>
            <javadoc line="11">
                Holds the scale factor.                
            </javadoc>
            <javadoc line="15">
                Creates a multiply converter with the specified scale factor.                
                <param>
                    factor the scale factor.                    
                </param>
                <throws>
                    IllegalArgumentException if offset is one (or close to one).                    
                </throws>
            </javadoc>
            <method name="MultiplyConverter" type="constructor" line="20">
                <params>
                    <param name="factor" type="double"/>
                </params>
            </method>
            <javadoc line="24">
                Returns the scale factor.                
                <return>
                    the scale factor.                    
                </return>
            </javadoc>
            <method name="getFactor" type="double" line="28"/>
            <method name="inverse" type="UnitConverter" line="31"/>
            <method name="convert" type="double" line="34">
                <params>
                    <param name="amount" type="double"/>
                </params>
            </method>
            <method name="isLinear" type="boolean" line="37"/>
            <method name="concatenate" type="UnitConverter" line="40">
                <params>
                    <param name="converter" type="UnitConverter"/>
                </params>
                <scope line="41">
                    <declaration name="factor" type="double" line="42"/>
                </scope>
                <scope line="45">
                    <declaration name="factor" type="double" line="46"/>
                </scope>
                <scope line="49"/>
            </method>
            <method name="valueOf" type="UnitConverter" line="53">
                <params>
                    <param name="factor" type="double"/>
                </params>
                <declaration name="asFloat" type="float" line="54"/>
            </method>
            <declaration name="serialVersionUID" type="long" line="57"/>
        </class>
    </source>