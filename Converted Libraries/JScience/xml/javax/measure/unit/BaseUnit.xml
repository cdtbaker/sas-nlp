<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.measure.unit">
        <import package="javax.measure.converter.UnitConverter"/>
        <import package="javax.measure.quantity.Quantity"/>
        <class name="BaseUnit" line="14">
            <type_params>
                <type_param name="Q"/>
            </type_params>
            <extends class="Unit">
                <type_params>
                    <type_param name="Q"/>
                </type_params>
            </extends>
            <javadoc line="14">
                &lt;p&gt; This class represents the building blocks on top of which all others
                  units are created. Base units are typically dimensionally independent.
                  The actual unit dimension is determinated by the current {@link Dimension.Model model}. For example using the {@link Dimension.Model#STANDARD standard} model, {@link SI#CANDELA} 
                  has the dimension of {@link SI#WATT watt}:[code]
                  // Standard model.
                  BaseUnit&lt;Length&gt; METER = new BaseUnit&lt;Length&gt;(&quot;m&quot;);
                  BaseUnit&lt;LuminousIntensity&gt; CANDELA = new BaseUnit&lt;LuminousIntensity&gt;(&quot;cd&quot;);
                  System.out.println(METER.getDimension());
                  System.out.println(CANDELA.getDimension());
                  &gt; [L]
                  &gt; [L]²·[M]/[T]³
                  [/code]&lt;/p&gt;
                  &lt;p&gt; This class represents the &quot;standard base units&quot; which includes SI base 
                  units and possibly others user-defined base units. It does not represent 
                  the base units of any specific {@link SystemOfUnits} (they would have 
                  be base units accross all possible systems otherwise).&lt;/p&gt;                
                <author>
                    &lt;a href=&quot;mailto:jean-marie@dautelle.com&quot;&gt;Jean-Marie Dautelle&lt;/a&gt;                    
                </author>
                <version>
                    3.1, April 22, 2006                    
                </version>
                <see>
                    &lt;a href=&quot;http://en.wikipedia.org/wiki/SI_base_unit&quot;&gt;
                            Wikipedia: SI base unit&lt;/a&gt;                    
                </see>
            </javadoc>
            <declaration name="_symbol" type="String" line="42"/>
            <javadoc line="42">
                Holds the symbol.                
            </javadoc>
            <javadoc line="47">
                Creates a base unit having the specified symbol.                
                <param>
                    symbol the symbol of this base unit.                    
                </param>
                <throws>
                    IllegalArgumentException if the specified symbol is 
                      associated to a different unit.                    
                </throws>
            </javadoc>
            <method name="BaseUnit" type="constructor" line="54">
                <params>
                    <param name="symbol" type="String"/>
                </params>
                <comment line="57">
                    Checks if the symbol is associated to a different unit.                    
                </comment>
                <scope line="57">
                    <declaration name="unit" type="Unit&lt;?&gt;" line="58"/>
                    <scope line="59"/>
                </scope>
            </method>
            <javadoc line="69">
                Returns the unique symbol for this base unit.                
                <return>
                    this base unit symbol.                    
                </return>
            </javadoc>
            <method name="getSymbol" type="String" line="74"/>
            <javadoc line="78">
                Indicates if this base unit is considered equals to the specified 
                  object (both are base units with equal symbol, standard dimension and 
                  standard transform).                
                <param>
                    that the object to compare for equality.                    
                </param>
                <return>
                    &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;this&lt;/code&gt; and &lt;code&gt;that&lt;/code&gt;
                      are considered equals; &lt;code&gt;false&lt;/code&gt;otherwise.                    
                </return>
            </javadoc>
            <method name="equals" type="boolean" line="87">
                <params>
                    <param name="that" type="Object"/>
                </params>
                <declaration name="thatUnit" type="BaseUnit&lt;?&gt;" line="92"/>
            </method>
            <method name="hashCode" type="int" line="97"/>
            <method name="getStandardUnit" type="Unit<? super Q>" line="102"/>
            <method name="toStandardUnit" type="UnitConverter" line="107"/>
            <declaration name="serialVersionUID" type="long" line="111"/>
        </class>
    </source>