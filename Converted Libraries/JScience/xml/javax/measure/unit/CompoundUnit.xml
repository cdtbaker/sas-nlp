<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.measure.unit">
        <import package="javax.measure.converter.UnitConverter"/>
        <import package="javax.measure.quantity.Quantity"/>
        <class name="CompoundUnit" line="4">
            <type_params>
                <type_param name="Q"/>
            </type_params>
            <extends class="DerivedUnit">
                <type_params>
                    <type_param name="Q"/>
                </type_params>
            </extends>
            <javadoc line="4">
                &lt;p&gt; This class represents the multi-radix units (such as &quot;hour:min:sec&quot;). 
                  Instances of this class are created using the {@link Unit#compoundUnit} method.&lt;/p&gt;
                  &lt;p&gt; Examples of compound units:[code]
                  Unit&lt;Duration&gt; HOUR_MINUTE_SECOND = HOUR.compound(MINUTE).compound(SECOND);
                  Unit&lt;Angle&gt; DEGREE_MINUTE_ANGLE = DEGREE_ANGLE.compound(MINUTE_ANGLE);
                  [/code]&lt;/p&gt;                
                <author>
                    <a href="mailto:jean-marie@dautelle.com">Jean-Marie Dautelle</a>                    
                </author>
                <version>
                    3.1, April 22, 2006                    
                </version>
            </javadoc>
            <declaration name="_high" type="Unit&lt;Q&gt;" line="15"/>
            <javadoc line="15">
                Holds the higher unit.                
            </javadoc>
            <declaration name="_low" type="Unit&lt;Q&gt;" line="19"/>
            <javadoc line="19">
                Holds the lower unit.                
            </javadoc>
            <javadoc line="23">
                Creates a compound unit from the specified units.                
                <param>
                    high the high unit.                    
                </param>
                <param>
                    low the lower unit(s)                    
                </param>
                <throws>
                    IllegalArgumentException if both units do not the same system
                      unit.                    
                </throws>
            </javadoc>
            <method name="CompoundUnit" type="constructor" line="30">
                <params>
                    <param name="high" type="Unit<Q>"/>
                    <param name="low" type="Unit<Q>"/>
                </params>
            </method>
            <javadoc line="35">
                Returns the lower unit of this compound unit.                
                <return>
                    the lower unit.                    
                </return>
            </javadoc>
            <method name="getLower" type="Unit<Q>" line="39"/>
            <javadoc line="42">
                Returns the higher unit of this compound unit.                
                <return>
                    the higher unit.                    
                </return>
            </javadoc>
            <method name="getHigher" type="Unit<Q>" line="46"/>
            <javadoc line="49">
                Indicates if this compound unit is considered equals to the specified 
                  object (both are compound units with same composing units in the 
                  same order).                
                <param>
                    that the object to compare for equality.                    
                </param>
                <return>
                    <code>true</code> if <code>this</code> and <code>that</code>
                      are considered equals; <code>false</code>otherwise.                    
                </return>
            </javadoc>
            <method name="equals" type="boolean" line="57">
                <params>
                    <param name="that" type="Object"/>
                </params>
                <declaration name="thatUnit" type="CompoundUnit&lt;?&gt;" line="60"/>
            </method>
            <method name="hashCode" type="int" line="63"/>
            <method name="getStandardUnit" type="Unit<? super Q>" line="66"/>
            <method name="toStandardUnit" type="UnitConverter" line="69"/>
            <declaration name="serialVersionUID" type="long" line="72"/>
        </class>
    </source>