<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.measure">
        <import package="javax.measure.converter.UnitConverter"/>
        <import package="javax.measure.quantity.Quantity"/>
        <import package="javax.measure.unit.CompoundUnit"/>
        <import package="javax.measure.unit.Unit"/>
        <class name="VectorMeasure" line="6">
            <type_params>
                <type_param name="Q"/>
            </type_params>
            <extends class="Measure">
                <type_params>
                    <type_param name="double[]"/>
                    <type_param name="Q"/>
                </type_params>
            </extends>
            <javadoc line="6">
                &lt;p&gt; This class represents a measurement vector of two or more dimensions.
                  For example:[code]
                  VectorMeasure&lt;Length&gt; dimension = VectorMeasure.valueOf(12.0, 30.0, 40.0, MILLIMETER);
                  VectorMeasure&lt;Velocity&gt; v2d = VectorMeasure.valueOf(-2.2, -3.0, KNOTS);
                  VectorMeasure&lt;ElectricCurrent&gt; c2d = VectorMeasure.valueOf(-7.3, 3.5, NANOAMPERE);
                  [/code]
                  &lt;/p&gt;
                  &lt;p&gt; Subclasses may provide fixed dimensions specializations:[code]
                  class Velocity2D extends VectorMeasure&lt;Velocity&gt; {
                  public Velocity2D(double x, double y, Unit&lt;Velocity&gt; unit) {
                  ...
                  }
                  }
                  [/code]&lt;/p&gt;
                  &lt;p&gt; Measurement vectors may use {@link CompoundUnit compound units}:[code]
                  VectorMeasure&lt;Angle&gt; latLong = VectorMeasure.valueOf(12.345, 22.23, DEGREE_ANGLE);
                  Unit&lt;Angle&gt; HOUR_MINUTE_SECOND_ANGLE = DEGREE_ANGLE.compound(MINUTE_ANGLE).compound(SECOND_ANGLE);
                  System.out.println(latLong.to(HOUR_MINUTE_SECOND_ANGLE));
                  &gt; [12°19&apos;42&quot;, 22°12&apos;48&quot;] [/code]&lt;/p&gt;
                  &lt;p&gt; Instances of this class (and sub-classes) are immutable.&lt;/p&gt;                
                <author>
                    <a href="mailto:jean-marie@dautelle.com">Jean-Marie Dautelle</a>                    
                </author>
                <version>
                    4.3, October 3, 2007                    
                </version>
            </javadoc>
            <javadoc line="31">
                Default constructor (for sub-classes).                
            </javadoc>
            <method name="VectorMeasure" type="constructor" line="34"/>
            <javadoc line="36">
                Returns a 2-dimensional measurement vector.                
                <param>
                    x the first vector component value.                    
                </param>
                <param>
                    y the second vector component value.                    
                </param>
                <param>
                    unit the measurement unit.                    
                </param>
            </javadoc>
            <method name="valueOf" type="VectorMeasure<Q>" line="42">
                <params>
                    <param name="x" type="double"/>
                    <param name="y" type="double"/>
                    <param name="unit" type="Unit<Q>"/>
                </params>
            </method>
            <javadoc line="45">
                Returns a 3-dimensional measurement vector.                
                <param>
                    x the first vector component value.                    
                </param>
                <param>
                    y the second vector component value.                    
                </param>
                <param>
                    z the third vector component value.                    
                </param>
                <param>
                    unit the measurement unit.                    
                </param>
            </javadoc>
            <method name="valueOf" type="VectorMeasure<Q>" line="52">
                <params>
                    <param name="x" type="double"/>
                    <param name="y" type="double"/>
                    <param name="z" type="double"/>
                    <param name="unit" type="Unit<Q>"/>
                </params>
            </method>
            <javadoc line="55">
                Returns a multi-dimensional measurement vector.                
                <param>
                    components the vector component values.                    
                </param>
                <param>
                    unit the measurement unit.                    
                </param>
            </javadoc>
            <method name="valueOf" type="VectorMeasure<Q>" line="60">
                <params>
                    <param name="components" type="double[]"/>
                    <param name="unit" type="Unit<Q>"/>
                </params>
            </method>
            <method name="to" type="VectorMeasure<Q>" line="63"/>
            <javadoc line="63">
                Returns the measurement vector equivalent to this one but stated in the 
                  specified unit.                
                <param>
                    unit the new measurement unit.                    
                </param>
                <return>
                    the vector measure stated in the specified unit.                    
                </return>
            </javadoc>
            <method name="doubleValue" type="double" line="70"/>
            <javadoc line="70">
                Returns the norm of this measurement vector stated in the specified
                  unit.                
                <param>
                    unit the unit in which the norm is stated.                    
                </param>
                <return>
                    <code>|this|</code>                    
                </return>
            </javadoc>
            <javadoc line="77">
                Returns the &lt;code&gt;String&lt;/code&gt; representation of this measurement
                  vector (for example &lt;code&gt;[2.3 m/s, 5.6 m/s]&lt;/code&gt;).                
                <return>
                    the textual representation of the measurement vector.                    
                </return>
            </javadoc>
            <method name="toString" type="String" line="82">
                <declaration name="values" type="double[]" line="83"/>
                <declaration name="unit" type="Unit&lt;Q&gt;" line="84"/>
                <declaration name="tmp" type="StringBuffer" line="85"/>
                <scope line="87">
                    <scope line="88"/>
                    <scope line="91"/>
                    <scope line="94"/>
                </scope>
            </method>
            <class name="TwoDimensional" line="101">
                <type_params>
                    <type_param name="Q"/>
                </type_params>
                <extends class="VectorMeasure">
                    <type_params>
                        <type_param name="Q"/>
                    </type_params>
                </extends>
                <declaration name="_x" type="double" line="102"/>
                <declaration name="_y" type="double" line="103"/>
                <declaration name="_unit" type="Unit&lt;Q&gt;" line="104"/>
                <method name="TwoDimensional" type="constructor" line="105">
                    <params>
                        <param name="x" type="double"/>
                        <param name="y" type="double"/>
                        <param name="unit" type="Unit<Q>"/>
                    </params>
                </method>
                <method name="doubleValue" type="double" line="110">
                    <params>
                        <param name="unit" type="Unit<Q>"/>
                    </params>
                    <declaration name="norm" type="double" line="111"/>
                </method>
                <method name="getUnit" type="Unit<Q>" line="115"/>
                <method name="getValue" type="double[]" line="118"/>
                <method name="to" type="TwoDimensional<Q>" line="121">
                    <params>
                        <param name="unit" type="Unit<Q>"/>
                    </params>
                    <declaration name="cvtr" type="UnitConverter" line="123"/>
                </method>
                <declaration name="serialVersionUID" type="long" line="126"/>
            </class>
            <class name="ThreeDimensional" line="128">
                <type_params>
                    <type_param name="Q"/>
                </type_params>
                <extends class="VectorMeasure">
                    <type_params>
                        <type_param name="Q"/>
                    </type_params>
                </extends>
                <declaration name="_x" type="double" line="129"/>
                <declaration name="_y" type="double" line="130"/>
                <declaration name="_z" type="double" line="131"/>
                <declaration name="_unit" type="Unit&lt;Q&gt;" line="132"/>
                <method name="ThreeDimensional" type="constructor" line="133">
                    <params>
                        <param name="x" type="double"/>
                        <param name="y" type="double"/>
                        <param name="z" type="double"/>
                        <param name="unit" type="Unit<Q>"/>
                    </params>
                </method>
                <method name="doubleValue" type="double" line="139">
                    <params>
                        <param name="unit" type="Unit<Q>"/>
                    </params>
                    <declaration name="norm" type="double" line="140"/>
                </method>
                <method name="getUnit" type="Unit<Q>" line="144"/>
                <method name="getValue" type="double[]" line="147"/>
                <method name="to" type="ThreeDimensional<Q>" line="150">
                    <params>
                        <param name="unit" type="Unit<Q>"/>
                    </params>
                    <declaration name="cvtr" type="UnitConverter" line="152"/>
                </method>
                <declaration name="serialVersionUID" type="long" line="155"/>
            </class>
            <class name="MultiDimensional" line="157">
                <type_params>
                    <type_param name="Q"/>
                </type_params>
                <extends class="VectorMeasure">
                    <type_params>
                        <type_param name="Q"/>
                    </type_params>
                </extends>
                <declaration name="_components" type="double[]" line="158"/>
                <declaration name="_unit" type="Unit&lt;Q&gt;" line="159"/>
                <method name="MultiDimensional" type="constructor" line="160">
                    <params>
                        <param name="components" type="double[]"/>
                        <param name="unit" type="Unit<Q>"/>
                    </params>
                </method>
                <method name="doubleValue" type="double" line="164">
                    <params>
                        <param name="unit" type="Unit<Q>"/>
                    </params>
                    <declaration name="normSquare" type="double" line="165"/>
                    <scope line="166">
                        <declaration name="d" type="double" line="167"/>
                    </scope>
                </method>
                <method name="getUnit" type="Unit<Q>" line="173"/>
                <method name="getValue" type="double[]" line="176"/>
                <method name="to" type="MultiDimensional<Q>" line="179">
                    <params>
                        <param name="unit" type="Unit<Q>"/>
                    </params>
                    <declaration name="cvtr" type="UnitConverter" line="181"/>
                    <declaration name="newValues" type="double[]" line="182"/>
                    <scope line="183"/>
                </method>
                <declaration name="serialVersionUID" type="long" line="188"/>
            </class>
        </class>
    </source>