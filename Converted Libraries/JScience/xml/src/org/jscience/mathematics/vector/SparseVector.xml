<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.jscience.mathematics.vector">
        <import package="java.util.Map"/>
        <import package="javolution.context.ObjectFactory"/>
        <import package="javolution.util.FastComparator"/>
        <import package="javolution.util.FastMap"/>
        <import package="javolution.util.Index"/>
        <import package="javolution.xml.XMLFormat"/>
        <import package="javolution.xml.stream.XMLStreamException"/>
        <import package="org.jscience.mathematics.structure.Field"/>
        <class name="SparseVector" line="22">
            <type_params>
                <type_param name="F"/>
            </type_params>
            <extends class="Vector">
                <type_params>
                    <type_param name="F"/>
                </type_params>
            </extends>
            <comment line="259">
                /////////////////////
                 Factory creation. 
                /                
            </comment>
            <javadoc line="22">
                &lt;p&gt; This class represents a sparse vector.&lt;/p&gt;
                  &lt;p&gt; Sparse vectors can be created using an index-to-element mapping or 
                  by adding single elements sparse vectors together.&lt;/p&gt;                
                <author>
                    &lt;a href=&quot;mailto:jean-marie@dautelle.com&quot;&gt;Jean-Marie Dautelle&lt;/a&gt;                    
                </author>
                <version>
                    3.3, January 2, 2007                    
                </version>
            </javadoc>
            <declaration name="XML" type="XMLFormat&amp;lt;SparseVector&amp;gt;" line="32"/>
            <javadoc line="32">
                Holds the default XML representation for sparse vectors.
                  For example:[code]
                  &lt;SparseVector dimension=&quot;16&quot;&gt;
                  &lt;Zero class=&quot;Complex&quot; real=&quot;0.0&quot; imaginary=&quot;0.0&quot; /&gt;
                  &lt;Elements&gt;
                  &lt;Index value=&quot;4&quot; /&gt;
                  &lt;Complex real=&quot;1.0&quot; imaginary=&quot;0.0&quot; /&gt;
                  &lt;Index value=&quot;6&quot; /&gt;
                  &lt;Complex real=&quot;0.0&quot; imaginary=&quot;1.0&quot; /&gt;
                  &lt;/Elements&gt;
                  &lt;/SparseVector&gt;[/code]                
            </javadoc>
            <anonymous_class line="46">
                <method name="newInstance" type="SparseVector" line="50">
                    <params>
                        <param name="cls" type="Class&lt;SparseVector&gt;"/>
                        <param name="xml" type="InputElement"/>
                    </params>
                </method>
                <method name="read" type="void" line="57">
                    <params>
                        <param name="xml" type="InputElement"/>
                        <param name="V" type="SparseVector"/>
                    </params>
                </method>
                <method name="write" type="void" line="65">
                    <params>
                        <param name="V" type="SparseVector"/>
                        <param name="xml" type="OutputElement"/>
                    </params>
                </method>
            </anonymous_class>
            <declaration name="_dimension" type="int" line="72"/>
            <javadoc line="72">
                Holds this vector dimension.                
            </javadoc>
            <declaration name="_zero" type="F" line="77"/>
            <javadoc line="77">
                Holds zero.                
            </javadoc>
            <declaration name="_elements" type="FastMap&amp;lt;Index,F&amp;gt;" line="82"/>
            <javadoc line="82">
                Holds the index to element mapping.                
            </javadoc>
            <javadoc line="87">
                Returns a sparse vector having a single element at the specified index.                
                <param>
                    dimension this vector dimension.                    
                </param>
                <param>
                    zero the element representing zero.                    
                </param>
                <param>
                    i the index value of this vector single element.                    
                </param>
                <param>
                    element the element at the specified index.                    
                </param>
                <return>
                    the corresponding vector.                    
                </return>
            </javadoc>
            <method name="valueOf" type="SparseVector&lt;F&gt;" line="97">
                <params>
                    <param name="dimension" type="int"/>
                    <param name="zero" type="F"/>
                    <param name="i" type="int"/>
                    <param name="element" type="F"/>
                </params>
                <declaration name="V" type="SparseVector&amp;lt;F&amp;gt;" line="98"/>
            </method>
            <javadoc line="103">
                Returns a sparse vector from the specified index to element mapping.                
                <param>
                    dimension this vector dimension.                    
                </param>
                <param>
                    zero the element representing zero.                    
                </param>
                <param>
                    elements the index to element mapping.                    
                </param>
                <return>
                    the corresponding vector.                    
                </return>
            </javadoc>
            <method name="valueOf" type="SparseVector&lt;F&gt;" line="112">
                <params>
                    <param name="dimension" type="int"/>
                    <param name="zero" type="F"/>
                    <param name="elements" type="Map&lt;Index,F&gt;"/>
                </params>
                <declaration name="V" type="SparseVector&amp;lt;F&amp;gt;" line="113"/>
            </method>
            <javadoc line="118">
                Returns a sparse vector equivalent to the specified vector but with 
                  the zero elements removed removed using a default object equality 
                  comparator.                
                <param>
                    that the vector to convert.                    
                </param>
                <param>
                    zero the zero element for the sparse vector to return.                    
                </param>
                <return>
                    &lt;code&gt;SparseVector.valueOf(that, zero, FastComparator.DEFAULT)&lt;/code&gt;                    
                </return>
            </javadoc>
            <method name="valueOf" type="SparseVector&lt;F&gt;" line="128">
                <params>
                    <param name="that" type="Vector&lt;F&gt;"/>
                    <param name="zero" type="F"/>
                </params>
            </method>
            <javadoc line="132">
                Returns a sparse vector equivalent to the specified vector but with 
                  the zero elements removed using the specified object equality comparator.
                  This method can be used to clean up sparse vectors (to remove elements
                  close to zero).                
                <param>
                    that the vector to convert.                    
                </param>
                <param>
                    zero the zero element for the sparse vector to return.                    
                </param>
                <param>
                    comparator the comparator used to determinate zero equality.                    
                </param>
                <return>
                    a sparse vector with zero elements removed.                    
                </return>
            </javadoc>
            <method name="valueOf" type="SparseVector&lt;F&gt;" line="144">
                <params>
                    <param name="that" type="Vector&lt;F&gt;"/>
                    <param name="zero" type="F"/>
                    <param name="comparator" type="FastComparator&lt;? super F&gt;"/>
                </params>
                <declaration name="n" type="int" line="147"/>
                <declaration name="V" type="SparseVector&amp;lt;F&amp;gt;" line="148"/>
                <scope line="149">
                    <declaration name="element" type="F" line="150"/>
                    <scope line="151"/>
                </scope>
            </method>
            <method name="valueOf" type="SparseVector&lt;F&gt;" line="158">
                <params>
                    <param name="that" type="SparseVector&lt;F&gt;"/>
                    <param name="zero" type="F"/>
                    <param name="comparator" type="FastComparator&lt;? super F&gt;"/>
                </params>
                <declaration name="V" type="SparseVector&amp;lt;F&amp;gt;" line="159"/>
                <scope line="161">
                    <scope line="162"/>
                </scope>
            </method>
            <javadoc line="169">
                Returns the value of the non-set elements for this sparse vector.                
                <return>
                    the element corresponding to zero.                    
                </return>
            </javadoc>
            <method name="getZero" type="F" line="174"/>
            <method name="getDimension" type="int" line="179"/>
            <method name="get" type="F" line="184">
                <params>
                    <param name="i" type="int"/>
                </params>
                <declaration name="element" type="F" line="187"/>
            </method>
            <method name="opposite" type="SparseVector&lt;F&gt;" line="192">
                <declaration name="V" type="SparseVector&amp;lt;F&amp;gt;" line="193"/>
                <scope line="195"/>
            </method>
            <method name="plus" type="SparseVector&lt;F&gt;" line="202">
                <params>
                    <param name="that" type="Vector&lt;F&gt;"/>
                </params>
            </method>
            <method name="plus" type="SparseVector&lt;F&gt;" line="208">
                <params>
                    <param name="that" type="SparseVector&lt;F&gt;"/>
                </params>
                <declaration name="V" type="SparseVector&amp;lt;F&amp;gt;" line="210"/>
                <scope line="213">
                    <declaration name="index" type="Index" line="214"/>
                    <declaration name="entry" type="FastMap.Entry&amp;lt;Index,F&amp;gt;" line="215"/>
                    <scope line="216"/>
                    <scope line="218"/>
                </scope>
            </method>
            <method name="times" type="SparseVector&lt;F&gt;" line="226">
                <params>
                    <param name="k" type="F"/>
                </params>
                <declaration name="V" type="SparseVector&amp;lt;F&amp;gt;" line="227"/>
                <scope line="229"/>
            </method>
            <method name="times" type="F" line="236">
                <params>
                    <param name="that" type="Vector&lt;F&gt;"/>
                </params>
                <declaration name="sum" type="F" line="239"/>
                <scope line="241">
                    <declaration name="f" type="F" line="242"/>
                </scope>
            </method>
            <method name="copy" type="SparseVector&lt;F&gt;" line="250">
                <declaration name="V" type="SparseVector&amp;lt;F&amp;gt;" line="251"/>
                <scope line="252"/>
            </method>
            <method name="newInstance" type="SparseVector&lt;F&gt;" line="263">
                <params>
                    <param name="dimension" type="int"/>
                    <param name="zero" type="F"/>
                </params>
                <declaration name="V" type="SparseVector&amp;lt;F&amp;gt;" line="264"/>
            </method>
            <declaration name="FACTORY" type="ObjectFactory&amp;lt;SparseVector&amp;gt;" line="270"/>
            <anonymous_class line="270">
                <method name="create" type="SparseVector" line="272"/>
                <method name="cleanup" type="void" line="277">
                    <params>
                        <param name="vector" type="SparseVector"/>
                    </params>
                </method>
            </anonymous_class>
            <method name="SparseVector" type="constructor" line="282"/>
            <declaration name="serialVersionUID" type="long" line="285"/>
        </class>
    </source>