<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.jscience.physics.model">
        <import package="javax.measure.converter.RationalConverter"/>
        <import package="javax.measure.converter.UnitConverter"/>
        <import package="javax.measure.unit.BaseUnit"/>
        <import package="javax.measure.unit.Dimension"/>
        <import package="javax.measure.unit.SI"/>
        <class name="QuantumModel" line="17">
            <extends class="PhysicalModel"/>
            <comment line="43">
                Implements Dimension.Model                
            </comment>
            <comment line="49">
                Implements Dimension.Model                
            </comment>
            <comment line="55">
                // ENERGY = m²·kg/s² = kg·c²
                        SI.KILOGRAM.setDimension(SI.GIGA(NonSI.ELECTRON_VOLT),
                                new MultiplyConverter(1E-9 * c * c / ePlus));
                
                         H_BAR (SECOND * JOULE = SECOND * (KILOGRAM / C^2 )) = 1
                        SI.SECOND.setDimension(Unit.ONE.divide(SI.GIGA(NonSI.ELECTRON_VOLT)),
                                new MultiplyConverter(1E9 * ePlus / hBar));
                
                         SPEED_OF_LIGHT (METRE / SECOND) = 1
                        SI.METRE.setDimension(Unit.ONE.divide(SI.GIGA(NonSI.ELECTRON_VOLT)),
                                new MultiplyConverter(1E9 * ePlus / (c * hBar)));
                
                         BOLTZMANN (JOULE / KELVIN = (KILOGRAM / C^2 ) / KELVIN) = 1
                        SI.KELVIN.setDimension(SI.GIGA(NonSI.ELECTRON_VOLT),
                                new MultiplyConverter(1E-9 * k / ePlus));
                
                         MAGNETIC CONSTANT (NEWTON / AMPERE^2) = 1
                        SI.AMPERE.setDimension(SI.GIGA(NonSI.ELECTRON_VOLT),
                                new MultiplyConverter(1E-9 * MathLib.sqrt(µ0 * c * hBar) / ePlus));
                
                        SI.MOLE.setDimension(SI.MOLE, Converter.IDENTITY);
                        SI.CANDELA.setDimension(SI.CANDELA, Converter.IDENTITY);                
            </comment>
            <javadoc line="17">
                This class represents the quantum model.                
                <author>
                    &lt;a href=&quot;mailto:jean-marie@dautelle.com&quot;&gt;Jean-Marie Dautelle&lt;/a&gt;                    
                </author>
                <version>
                    3.0, February 13, 2006                    
                </version>
            </javadoc>
            <declaration name="INSTANCE" type="QuantumModel" line="25"/>
            <javadoc line="25">
                Holds the single instance of this class.                
            </javadoc>
            <declaration name="METRE_TO_TIME" type="RationalConverter" line="29"/>
            <javadoc line="29">
                Holds the meter to time transform.                
            </javadoc>
            <javadoc line="35">
                Selects the relativistic model as the current model.                
            </javadoc>
            <method name="select" type="void" line="38"/>
            <method name="getDimension" type="Dimension" line="43">
                <params>
                    <param name="unit" type="BaseUnit&lt;?&gt;"/>
                </params>
            </method>
            <method name="getTransform" type="UnitConverter" line="49">
                <params>
                    <param name="unit" type="BaseUnit&lt;?&gt;"/>
                </params>
            </method>
        </class>
    </source>