<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.jscience.economics.money">
        <import package="javolution.context.LocalContext"/>
        <import package="javolution.util.LocalMap"/>
        <import package="javax.measure.converter.ConversionException"/>
        <import package="javax.measure.converter.UnitConverter"/>
        <import package="javax.measure.unit.DerivedUnit"/>
        <import package="javax.measure.unit.Unit"/>
        <import package="javax.measure.unit.UnitFormat"/>
        <class name="Currency" line="20">
            <extends class="DerivedUnit">
                <type_params>
                    <type_param name="Money"/>
                </type_params>
            </extends>
            <javadoc line="20">
                &lt;p&gt; This class represents a currency {@link javax.measure.unit.Unit Unit}.
                  Currencies are a special form of {@link DerivedUnit}, conversions
                  between currencies is possible if their respective exchange rates 
                  have been set and the conversion factor can be changed dynamically.&lt;/p&gt;
                  &lt;p&gt; Quantities stated in {@link Currency} are usually instances of {@link Money}.&lt;/p&gt;
                  &lt;p&gt; By default, the label associated to a currency is its ISO-4217 code
                  (see the &lt;a href=&quot;http://www.bsi-global.com/iso4217currency&quot;&gt; ISO 4217
                  maintenance agency&lt;/a&gt; for a table of currency codes). An application may
                  change this default using the {@link javax.measure.unit.UnitFormat#labelUnitFormat.label(String)} method.
                  For example:[code]
                  UnitFormat.getStandardInstance().label(Currency.EUR, &quot;€&quot;);
                  UnitFormat.getStandardInstance().label(Currency.GBP, &quot;£&quot;);
                  UnitFormat.getStandardInstance().label(Currency.JPY, &quot;¥&quot;);
                  UnitFormat.getStandardInstance().label(Currency.USD, &quot;$&quot;);
                  [/code]&lt;/p&gt;                
                <author>
                    &lt;a href=&quot;mailto:jean-marie@dautelle.com&quot;&gt;Jean-Marie Dautelle&lt;/a&gt;                    
                </author>
                <version>
                    3.0, February 13, 2006                    
                </version>
                <see>
                    #setExchangeRate                    
                </see>
            </javadoc>
            <declaration name="AUD" type="Currency" line="47"/>
            <javadoc line="47">
                The Australian Dollar currency unit.                
            </javadoc>
            <declaration name="CAD" type="Currency" line="52"/>
            <javadoc line="52">
                The Canadian Dollar currency unit.                
            </javadoc>
            <declaration name="CNY" type="Currency" line="57"/>
            <javadoc line="57">
                The China Yan currency.                
            </javadoc>
            <declaration name="EUR" type="Currency" line="62"/>
            <javadoc line="62">
                The Euro currency.                
            </javadoc>
            <declaration name="GBP" type="Currency" line="67"/>
            <javadoc line="67">
                The British Pound currency.                
            </javadoc>
            <declaration name="JPY" type="Currency" line="72"/>
            <javadoc line="72">
                The Japanese Yen currency.                
            </javadoc>
            <declaration name="KRW" type="Currency" line="77"/>
            <javadoc line="77">
                The Korean Republic Won currency.                
            </javadoc>
            <declaration name="TWD" type="Currency" line="82"/>
            <javadoc line="82">
                The Taiwanese dollar currency.                
            </javadoc>
            <declaration name="USD" type="Currency" line="87"/>
            <javadoc line="87">
                The United State dollar currency.                
            </javadoc>
            <declaration name="REFERENCE" type="LocalContext.Reference&amp;lt;Currency&amp;gt;" line="92"/>
            <javadoc line="92">
                Holds the reference currency.                
            </javadoc>
            <declaration name="TO_REFERENCE" type="LocalMap&amp;lt;String,Double&amp;gt;" line="98"/>
            <javadoc line="98">
                Holds the exchanges rate to the reference currency.                
            </javadoc>
            <declaration name="_toBaseUnit" type="Converter" line="104"/>
            <javadoc line="104">
                Holds the converter to the {@link Money#BASE_UNIT money base unit}.                
            </javadoc>
            <javadoc line="109">
                Creates the currency unit for the given currency code.
                  See the &lt;a href=&quot;http://www.bsi-global.com/iso4217currency&quot;&gt; ISO 4217
                  maintenance agency&lt;/a&gt; for more information, including a table of
                  currency codes.                
                <param>
                    code the ISO-4217 code of the currency (e.g.
                      &lt;code&gt;&quot;EUR&quot;, &quot;USD&quot;, &quot;JPY&quot;&lt;/code&gt;).                    
                </param>
                <throws>
                    IllegalArgumentException if the specified code is not an ISO-4217
                      code.                    
                </throws>
            </javadoc>
            <method name="Currency" type="constructor" line="120">
                <params>
                    <param name="code" type="String"/>
                </params>
            </method>
            <javadoc line="125">
                Returns the currency code for this currency.                
                <return>
                    the ISO-4217 code of the currency 
                      (e.g. &lt;code&gt;&quot;EUR&quot;, &quot;USD&quot;, &quot;JPY&quot;&lt;/code&gt;).                    
                </return>
            </javadoc>
            <method name="getCode" type="String" line="131"/>
            <javadoc line="135">
                Returns the default number of fraction digits used with this currency 
                  unit. For example, the default number of fraction digits for
                  the {@link Currency#EUR} is 2, while for the {@link Currency#JPY} (Yen)
                  it&apos;s 0. This method can be overriden for custom currencies returning 
                  values different from &lt;code&gt;2&lt;/code&gt;.                
                <return>
                    the default number of fraction digits for this currency.                    
                </return>
            </javadoc>
            <method name="getDefaultFractionDigits" type="int" line="144"/>
            <javadoc line="149">
                Sets the reference currency (context-local). Changing the
                  reference currency clears all the exchange rates previously set.                
                <param>
                    currency the new reference currency.                    
                </param>
                <see>
                    javolution.context.LocalContext                    
                </see>
            </javadoc>
            <method name="setReferenceCurrency" type="void" line="156">
                <params>
                    <param name="currency" type="Currency"/>
                </params>
            </method>
            <javadoc line="162">
                Returns the currency used as reference when setting the exchange rate.
                  By default, the reference currency is the currency for the default
                  country locale.                
                <return>
                    the reference currency.                    
                </return>
                <see>
                    #setExchangeRate                    
                </see>
            </javadoc>
            <method name="getReferenceCurrency" type="Currency" line="170"/>
            <javadoc line="174">
                Sets the exchange rate of this {@link Currency} relatively to
                  the reference currency. Setting the exchange rate allows
                  for conversion between {@link Money} stated in different currencies.
                  For example:&lt;pre&gt;
                  Currency.setReferenceCurrency(Currency.USD);
                  Currency.EUR.setExchangeRate(1.17); // 1.0 € = 1.17 $
                  &lt;/pre&gt;                
                <param>
                    refAmount the amount stated in the {@link #getReferenceCurrency}equals to one unit of this {@link Currency}.                    
                </param>
                <see>
                    #getReferenceCurrency                    
                </see>
            </javadoc>
            <method name="setExchangeRate" type="void" line="187">
                <params>
                    <param name="refAmount" type="double"/>
                </params>
            </method>
            <javadoc line="191">
                Returns the exchange rate for this {@link Currency}.                
                <return>
                    the amount stated in the {@link #getReferenceCurrency}equals to one unit of this {@link Currency}.                    
                </return>
                <throws>
                    ConversionException if the exchange rate has not be set for
                      this {@link Currency}.                    
                </throws>
            </javadoc>
            <method name="getExchangeRate" type="double" line="199">
                <declaration name="refAmount" type="Double" line="200"/>
            </method>
            <method name="equals" type="boolean" line="208">
                <params>
                    <param name="obj" type="Object"/>
                </params>
                <declaration name="that" type="Currency" line="212"/>
            </method>
            <method name="hashCode" type="int" line="217"/>
            <method name="getStandardUnit" type="Unit&lt;? super Money&gt;" line="222"/>
            <method name="toStandardUnit" type="UnitConverter" line="227"/>
            <class name="Converter" line="231">
                <extends class="UnitConverter"/>
                <javadoc line="231">
                    This class represents the currency converters.                    
                </javadoc>
                <declaration name="_code" type="String" line="236"/>
                <declaration name="_invert" type="boolean" line="238"/>
                <method name="Converter" type="constructor" line="240">
                    <params>
                        <param name="code" type="String"/>
                        <param name="invert" type="boolean"/>
                    </params>
                </method>
                <method name="inverse" type="UnitConverter" line="246"/>
                <method name="convert" type="double" line="251">
                    <params>
                        <param name="x" type="double"/>
                    </params>
                    <declaration name="refAmount" type="Double" line="252"/>
                </method>
                <method name="isLinear" type="boolean" line="259"/>
                <method name="equals" type="boolean" line="264">
                    <params>
                        <param name="obj" type="Object"/>
                    </params>
                    <declaration name="that" type="Converter" line="268"/>
                </method>
                <method name="hashCode" type="int" line="273"/>
                <declaration name="serialVersionUID" type="long" line="277"/>
            </class>
            <declaration name="serialVersionUID" type="long" line="280"/>
        </class>
    </source>