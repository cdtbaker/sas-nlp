<?xml version="1.0" encoding="UTF-8"?>
    <source package="no.uib.cipr.matrix">
        <import package="java.util.Iterator"/>
        <import package="com.github.fommil.netlib.BLAS"/>
        <import package="com.github.fommil.netlib.LAPACK"/>
        <import package="org.netlib.util.intW"/>
        <class name="AbstractSymmBandMatrix" line="30">
            <extends class="AbstractBandMatrix"/>
            <javadoc line="30">
                Partial implementation of a symmetrical, banded matrix                
            </javadoc>
            <declaration name="uplo" type="UpLo" line="35"/>
            <javadoc line="35">
                Upper or lower part stored?                
            </javadoc>
            <declaration name="kd" type="int" line="40"/>
            <javadoc line="40">
                Diagonals in relevant band                
            </javadoc>
            <javadoc line="45">
                Constructor for AbstractSymmBandMatrix                
            </javadoc>
            <method name="AbstractSymmBandMatrix" type="constructor" line="48">
                <params>
                    <param name="n" type="int"/>
                    <param name="kl" type="int"/>
                    <param name="ku" type="int"/>
                    <param name="uplo" type="UpLo"/>
                </params>
            </method>
            <javadoc line="54">
                Constructor for AbstractSymmBandMatrix                
            </javadoc>
            <method name="AbstractSymmBandMatrix" type="constructor" line="57">
                <params>
                    <param name="A" type="Matrix"/>
                    <param name="kl" type="int"/>
                    <param name="ku" type="int"/>
                    <param name="uplo" type="UpLo"/>
                </params>
            </method>
            <javadoc line="61">
                Constructor for AbstractSymmBandMatrix                
            </javadoc>
            <method name="AbstractSymmBandMatrix" type="constructor" line="64">
                <params>
                    <param name="A" type="Matrix"/>
                    <param name="kl" type="int"/>
                    <param name="ku" type="int"/>
                    <param name="deep" type="boolean"/>
                    <param name="uplo" type="UpLo"/>
                </params>
            </method>
            <method name="multAdd" type="Vector" line="71">
                <params>
                    <param name="alpha" type="double"/>
                    <param name="x" type="Vector"/>
                    <param name="y" type="Vector"/>
                </params>
                <declaration name="xd" type="double[]" line="77"/>
            </method>
            <method name="transMultAdd" type="Vector" line="86">
                <params>
                    <param name="alpha" type="double"/>
                    <param name="x" type="Vector"/>
                    <param name="y" type="Vector"/>
                </params>
            </method>
            <method name="iterator" type="Iterator&lt;MatrixEntry&gt;" line="91"/>
            <method name="solve" type="Matrix" line="96">
                <params>
                    <param name="B" type="Matrix"/>
                    <param name="X" type="Matrix"/>
                </params>
                <comment line="107">
                    Allocate factorization matrix. The factorization matrix will be
                     large enough to accomodate any pivots                    
                </comment>
                <declaration name="Xd" type="double[]" line="102"/>
                <declaration name="Af" type="BandMatrix" line="108"/>
                <declaration name="ipiv" type="int[]" line="109"/>
                <declaration name="info" type="intW" line="111"/>
            </method>
            <method name="solve" type="Vector" line="125">
                <params>
                    <param name="b" type="Vector"/>
                    <param name="x" type="Vector"/>
                </params>
                <declaration name="B" type="DenseMatrix" line="126"/>
            </method>
            <method name="transSolve" type="Matrix" line="132">
                <params>
                    <param name="B" type="Matrix"/>
                    <param name="X" type="Matrix"/>
                </params>
            </method>
            <method name="transSolve" type="Vector" line="137">
                <params>
                    <param name="b" type="Vector"/>
                    <param name="x" type="Vector"/>
                </params>
            </method>
            <method name="SPDsolve" type="Matrix" line="141">
                <params>
                    <param name="B" type="Matrix"/>
                    <param name="X" type="Matrix"/>
                </params>
                <declaration name="Xd" type="double[]" line="147"/>
                <declaration name="info" type="intW" line="151"/>
            </method>
            <method name="transpose" type="Matrix" line="164"/>
        </class>
    </source>