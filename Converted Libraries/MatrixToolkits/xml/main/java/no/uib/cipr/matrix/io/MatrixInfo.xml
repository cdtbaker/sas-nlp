<?xml version="1.0" encoding="UTF-8"?>
    <source package="no.uib.cipr.matrix.io">
        <class name="MatrixInfo" line="23">
            <javadoc line="23">
                Contains information on a matrix in the &lt;a
                  href=&quot;http://math.nist.gov/MatrixMarket&quot;&gt;Matrix Market&lt;/a&gt; exchange format.
                  Supports all valid matrices.                
            </javadoc>
            <declaration name="MatrixField" type="enum" line="30"/>
            <javadoc line="30">
                What kind of numbers are stored                
            </javadoc>
            <scope line="33"/>
            <declaration name="MatrixSymmetry" type="enum" line="56"/>
            <javadoc line="56">
                Symmetry structure of the matrix, if any                
            </javadoc>
            <scope line="59"/>
            <declaration name="sparse" type="boolean" line="82"/>
            <javadoc line="82">
                True if the matrix is sparse, else false                
            </javadoc>
            <declaration name="field" type="MatrixField" line="87"/>
            <javadoc line="87">
                Type of data stored                
            </javadoc>
            <declaration name="symmetry" type="MatrixSymmetry" line="92"/>
            <javadoc line="92">
                Matrix symmetry                
            </javadoc>
            <javadoc line="97">
                Creates a specific type                
                <param>
                    sparseTrue for sparse matrices, else false                    
                </param>
                <param>
                    fieldType of data stored                    
                </param>
                <param>
                    symmetryMatrix symmetry                    
                </param>
            </javadoc>
            <method name="MatrixInfo" type="constructor" line="107">
                <params>
                    <param name="sparse" type="boolean"/>
                    <param name="field" type="MatrixField"/>
                    <param name="symmetry" type="MatrixSymmetry"/>
                </params>
            </method>
            <javadoc line="115">
                Validates the representation                
            </javadoc>
            <method name="validate" type="void" line="118"/>
            <javadoc line="133">
                Returns &lt;code&gt;true&lt;/code&gt; if the matrix is in coordinate format, else
                  &lt;code&gt;false&lt;/code&gt;                
            </javadoc>
            <method name="isSparse" type="boolean" line="137"/>
            <javadoc line="141">
                Returns &lt;code&gt;true&lt;/code&gt; if the matrix is in coordinate format, else
                  &lt;code&gt;false&lt;/code&gt;                
            </javadoc>
            <method name="isCoordinate" type="boolean" line="145"/>
            <javadoc line="149">
                Returns &lt;code&gt;true&lt;/code&gt; if the matrix is in array format, else
                  &lt;code&gt;false&lt;/code&gt;                
            </javadoc>
            <method name="isDense" type="boolean" line="153"/>
            <javadoc line="157">
                Returns &lt;code&gt;true&lt;/code&gt; if the matrix is in array format, else
                  &lt;code&gt;false&lt;/code&gt;                
            </javadoc>
            <method name="isArray" type="boolean" line="161"/>
            <javadoc line="165">
                Returns &lt;code&gt;true&lt;/code&gt; if the matrix stores real numbers, else
                  &lt;code&gt;false&lt;/code&gt;                
            </javadoc>
            <method name="isReal" type="boolean" line="169"/>
            <javadoc line="173">
                Returns &lt;code&gt;true&lt;/code&gt; if the matrix stores integers, else
                  &lt;code&gt;false&lt;/code&gt;                
            </javadoc>
            <method name="isInteger" type="boolean" line="177"/>
            <javadoc line="181">
                Returns &lt;code&gt;true&lt;/code&gt; if the matrix stores complex numbers, else
                  &lt;code&gt;false&lt;/code&gt;                
            </javadoc>
            <method name="isComplex" type="boolean" line="185"/>
            <javadoc line="189">
                Returns &lt;code&gt;true&lt;/code&gt; if the matrix does not store any numbers,
                  else &lt;code&gt;false&lt;/code&gt;                
            </javadoc>
            <method name="isPattern" type="boolean" line="193"/>
            <javadoc line="197">
                Returns &lt;code&gt;true&lt;/code&gt; if the matrix form is general, else
                  &lt;code&gt;false&lt;/code&gt;                
            </javadoc>
            <method name="isGeneral" type="boolean" line="201"/>
            <javadoc line="205">
                Returns &lt;code&gt;true&lt;/code&gt; if the matrix is symmetrical, else
                  &lt;code&gt;false&lt;/code&gt;                
            </javadoc>
            <method name="isSymmetric" type="boolean" line="209"/>
            <javadoc line="213">
                Returns &lt;code&gt;true&lt;/code&gt; if the matrix is skew-symmetrical, else
                  &lt;code&gt;false&lt;/code&gt;                
            </javadoc>
            <method name="isSkewSymmetric" type="boolean" line="217"/>
            <javadoc line="221">
                Returns &lt;code&gt;true&lt;/code&gt; if the matrix is Hermitian, else
                  &lt;code&gt;false&lt;/code&gt;                
            </javadoc>
            <method name="isHermitian" type="boolean" line="225"/>
            <javadoc line="229">
                Returns a string representation of the specifier. Can be used to provide
                  a header for writing to a file. It is a two-line output, which can look
                  like this:
                  &lt;pre&gt;
                  %%MatrixMarket matrix coordinate real general
                  &lt;/pre&gt;                
            </javadoc>
            <method name="toString" type="String" line="239">
                <comment line="259">
                    This should never happen                    
                </comment>
                <comment line="271">
                    This should never happen                    
                </comment>
                <declaration name="buf" type="StringBuilder" line="240"/>
            </method>
        </class>
    </source>