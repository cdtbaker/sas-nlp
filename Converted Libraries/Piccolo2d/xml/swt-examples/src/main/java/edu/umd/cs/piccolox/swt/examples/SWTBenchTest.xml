<?xml version="1.0" encoding="UTF-8"?>
    <source package="edu.umd.cs.piccolox.swt.examples">
        <import package="java.awt.AlphaComposite"/>
        <import package="java.awt.Color"/>
        <import package="java.awt.Graphics2D"/>
        <import package="java.awt.RenderingHints"/>
        <import package="java.awt.geom.AffineTransform"/>
        <import package="java.awt.geom.GeneralPath"/>
        <import package="java.io.FileOutputStream"/>
        <import package="java.io.IOException"/>
        <import package="java.io.InputStream"/>
        <import package="java.io.PrintWriter"/>
        <import package="java.util.Random"/>
        <import package="org.eclipse.swt.SWT"/>
        <import package="org.eclipse.swt.events.PaintEvent"/>
        <import package="org.eclipse.swt.events.PaintListener"/>
        <import package="org.eclipse.swt.graphics.GC"/>
        <import package="org.eclipse.swt.graphics.Image"/>
        <import package="org.eclipse.swt.graphics.ImageData"/>
        <import package="org.eclipse.swt.graphics.Point"/>
        <import package="org.eclipse.swt.graphics.Rectangle"/>
        <import package="org.eclipse.swt.layout.FillLayout"/>
        <import package="org.eclipse.swt.widgets.Canvas"/>
        <import package="org.eclipse.swt.widgets.Composite"/>
        <import package="org.eclipse.swt.widgets.Display"/>
        <import package="org.eclipse.swt.widgets.Shell"/>
        <import package="edu.umd.cs.piccolox.swt.SWTGraphics2D"/>
        <class name="SWTBenchTest" line="59">
            <extends class="Canvas"/>
            <comment line="65">
                Paths                
            </comment>
            <comment line="68">
                Images                
            </comment>
            <comment line="74">
                Transforms                
            </comment>
            <comment line="78">
                Geometry                
            </comment>
            <comment line="81">
                Colors                
            </comment>
            <comment line="84">
                Flags                
            </comment>
            <comment line="88">
                Statistics                
            </comment>
            <comment line="91">
                Constants                
            </comment>
            <comment line="94">
                private static final int CTX_CLIPPED = 1;                
            </comment>
            <comment line="96">
                private static final int CTX_BLENDED = 3;                
            </comment>
            <comment line="99">
                private static String contextNames[] = {
                 &quot;normal&quot;,
                 &quot;clip&quot;,
                 &quot;transform&quot;,
                 &quot;alpha&quot;,
                 };                
            </comment>
            <comment line="108">
                TEST METHODS                
            </comment>
            <comment line="171">
                Basic image                
            </comment>
            <comment line="176">
                Scaled image                
            </comment>
            <comment line="182">
                Bitmask image (unscaled)                
            </comment>
            <comment line="187">
                Translucent image (unscaled)                
            </comment>
            <comment line="192">
                Buffered image (unscaled)                
            </comment>
            <javadoc line="59">
                Piccolo2D SWT benchmarking test suite.                
            </javadoc>
            <declaration name="testShape" type="GeneralPath" line="65"/>
            <declaration name="testImageOpaque" type="Image" line="68"/>
            <declaration name="testImageBitmask" type="Image" line="69"/>
            <declaration name="testImageTranslucent" type="Image" line="70"/>
            <declaration name="testImageARGB" type="Image" line="71"/>
            <declaration name="transform" type="AffineTransform" line="74"/>
            <declaration name="IDENTITY" type="AffineTransform" line="75"/>
            <declaration name="pts" type="double" line="78"/>
            <declaration name="colors" type="Color" line="81"/>
            <declaration name="offscreen" type="boolean" line="84"/>
            <declaration name="antialiased" type="boolean" line="85"/>
            <declaration name="results" type="int" line="88"/>
            <declaration name="CTX_NORMAL" type="int" line="92"/>
            <declaration name="CTX_TRANSFORMED" type="int" line="94"/>
            <declaration name="NUM_CONTEXTS" type="int" line="96"/>
            <declaration name="contextNames" type="String" line="105"/>
            <declaration name="DRAW_LINE" type="int" line="111"/>
            <declaration name="DRAW_RECT" type="int" line="112"/>
            <declaration name="FILL_RECT" type="int" line="113"/>
            <declaration name="DRAW_OVAL" type="int" line="114"/>
            <declaration name="FILL_OVAL" type="int" line="115"/>
            <declaration name="DRAW_POLY" type="int" line="116"/>
            <declaration name="FILL_POLY" type="int" line="117"/>
            <declaration name="DRAW_TEXT" type="int" line="118"/>
            <declaration name="DRAW_IMG1" type="int" line="119"/>
            <declaration name="DRAW_IMG2" type="int" line="120"/>
            <declaration name="DRAW_IMG3" type="int" line="121"/>
            <declaration name="DRAW_IMG4" type="int" line="122"/>
            <declaration name="DRAW_IMG5" type="int" line="123"/>
            <declaration name="NUM_TESTS" type="int" line="124"/>
            <declaration name="testNames" type="String" line="126"/>
            <method name="testDrawLine" type="void" line="129">
                <params>
                    <param name="g" type="SWTGraphics2D"/>
                    <param name="r" type="Random"/>
                </params>
            </method>
            <method name="testDrawRect" type="void" line="133">
                <params>
                    <param name="g" type="SWTGraphics2D"/>
                    <param name="r" type="Random"/>
                </params>
            </method>
            <method name="testFillRect" type="void" line="137">
                <params>
                    <param name="g" type="SWTGraphics2D"/>
                    <param name="r" type="Random"/>
                </params>
            </method>
            <method name="testDrawOval" type="void" line="141">
                <params>
                    <param name="g" type="SWTGraphics2D"/>
                    <param name="r" type="Random"/>
                </params>
            </method>
            <method name="testFillOval" type="void" line="145">
                <params>
                    <param name="g" type="SWTGraphics2D"/>
                    <param name="r" type="Random"/>
                </params>
            </method>
            <method name="genPoly" type="void" line="149">
                <params>
                    <param name="r" type="Random"/>
                </params>
                <scope line="150"/>
            </method>
            <method name="testDrawPoly" type="void" line="156">
                <params>
                    <param name="g" type="SWTGraphics2D"/>
                    <param name="r" type="Random"/>
                </params>
            </method>
            <method name="testFillPoly" type="void" line="161">
                <params>
                    <param name="g" type="SWTGraphics2D"/>
                    <param name="r" type="Random"/>
                </params>
            </method>
            <method name="testDrawText" type="void" line="166">
                <params>
                    <param name="g" type="SWTGraphics2D"/>
                    <param name="r" type="Random"/>
                </params>
            </method>
            <method name="testDrawImg1" type="void" line="171">
                <params>
                    <param name="g" type="SWTGraphics2D"/>
                    <param name="r" type="Random"/>
                </params>
            </method>
            <method name="testDrawImg2" type="void" line="176">
                <params>
                    <param name="g" type="SWTGraphics2D"/>
                    <param name="r" type="Random"/>
                </params>
                <declaration name="rect" type="Rectangle" line="177"/>
            </method>
            <method name="testDrawImg3" type="void" line="182">
                <params>
                    <param name="g" type="SWTGraphics2D"/>
                    <param name="r" type="Random"/>
                </params>
            </method>
            <method name="testDrawImg4" type="void" line="187">
                <params>
                    <param name="g" type="SWTGraphics2D"/>
                    <param name="r" type="Random"/>
                </params>
            </method>
            <method name="testDrawImg5" type="void" line="192">
                <params>
                    <param name="g" type="SWTGraphics2D"/>
                    <param name="r" type="Random"/>
                </params>
            </method>
            <method name="loadImage" type="Image" line="196">
                <params>
                    <param name="display" type="Display"/>
                    <param name="name" type="String"/>
                </params>
                <comment line="204">
                    if (imageData != null) {
                     ImageData mask = imageData.getTransparencyMask();
                     return new Image(display, imageData, mask);
                     }                    
                </comment>
                <declaration name="stream" type="InputStream" line="197"/>
                <scope line="198">
                    <scope line="200">
                        <declaration name="imageData" type="ImageData" line="201"/>
                    </scope>
                </scope>
                <scope line="210"/>
            </method>
            <javadoc line="216">
                Create a new Piccolo2D SWT benchmarking test suite with the specified parent and style.                
                <param>
                    parent parent                    
                </param>
                <param>
                    style style                    
                </param>
            </javadoc>
            <method name="SWTBenchTest" type="constructor" line="222">
                <params>
                    <param name="parent" type="Composite"/>
                    <param name="style" type="int"/>
                </params>
                <declaration name="tmpGC" type="GC" line="230"/>
                <anonymous_class line="234">
                    <method name="paintControl" type="void" line="235">
                        <params>
                            <param name="pe" type="PaintEvent"/>
                        </params>
                    </method>
                </anonymous_class>
            </method>
            <method name="setupTransform" type="void" line="241">
                <params>
                    <param name="g" type="Graphics2D"/>
                    <param name="r" type="Random"/>
                </params>
                <comment line="247">
                    case 0: // UNIFORM SCALE                    
                </comment>
                <comment line="251">
                    case 1: // NON-UNIFORM SCALE
                     transform.scale(5 * r.nextDouble() + 0.1, 5 * r.nextDouble() +
                     0.1);
                     break;
                     case 2:  ROTATION
                     transform.rotate(r.nextDouble() * Math.PI * 2);
                     break;
                     case 3:  TRANSLATION
                     transform.translate(r.nextDouble() * 500, r.nextDouble() * 500);
                     break;
                     case 4:  TRANSLATE + ROTATE + SCALE
                     s = r.nextDouble();
                     transform.translate(r.nextDouble() * 500, r.nextDouble() * 500);
                     transform.rotate(r.nextDouble() * Math.PI * 2);
                     transform.scale(5*s + 0.1, 5*s + 0.1);
                     break;                    
                </comment>
                <declaration name="s" type="double" line="247"/>
            </method>
            <method name="setupClip" type="void" line="271">
                <params>
                    <param name="g" type="Graphics2D"/>
                    <param name="r" type="Random"/>
                </params>
                <comment line="273">
                    g.setClip(rand(r), rand(r), rand(r), rand(r));                    
                </comment>
            </method>
            <method name="setupBlend" type="void" line="275">
                <params>
                    <param name="g" type="Graphics2D"/>
                    <param name="r" type="Random"/>
                </params>
            </method>
            <method name="setup" type="void" line="279">
                <params>
                    <param name="ctx" type="int"/>
                    <param name="g" type="Graphics2D"/>
                    <param name="r" type="Random"/>
                </params>
                <comment line="289">
                    case CTX_CLIPPED:
                     setupClip(g, r);
                     break;
                    
                     case CTX_BLENDED:
                     setupBlend(g, r);
                     break;                    
                </comment>
            </method>
            <method name="test" type="void" line="298">
                <params>
                    <param name="testNum" type="int"/>
                    <param name="g" type="SWTGraphics2D"/>
                    <param name="r" type="Random"/>
                </params>
            </method>
            <method name="runTest" type="void" line="346">
                <params>
                    <param name="g" type="SWTGraphics2D"/>
                    <param name="ctx" type="int"/>
                    <param name="testNum" type="int"/>
                </params>
                <declaration name="r1" type="Random" line="347"/>
                <declaration name="r2" type="Random" line="348"/>
                <declaration name="t1" type="long" line="351"/>
                <declaration name="i" type="int" line="352"/>
                <scope line="353">
                    <scope line="354"/>
                    <declaration name="t2" type="long" line="359"/>
                    <scope line="360"/>
                </scope>
            </method>
            <method name="runAll" type="void" line="368">
                <params>
                    <param name="g" type="SWTGraphics2D"/>
                </params>
                <scope line="371"/>
                <scope line="377">
                    <scope line="379"/>
                </scope>
                <scope line="386"/>
                <declaration name="fileName" type="String" line="390"/>
                <scope line="391"/>
                <scope line="394"/>
            </method>
            <method name="dumpResults" type="void" line="401">
                <params>
                    <param name="fileName" type="String"/>
                </params>
                <scope line="402">
                    <declaration name="fout" type="FileOutputStream" line="403"/>
                    <declaration name="out" type="PrintWriter" line="404"/>
                    <scope line="406"/>
                    <scope line="411">
                        <scope line="413"/>
                    </scope>
                </scope>
                <scope line="422"/>
            </method>
            <method name="computeSize" type="Point" line="427">
                <params>
                    <param name="wHint" type="int"/>
                    <param name="hHint" type="int"/>
                </params>
            </method>
            <method name="computeSize" type="Point" line="431">
                <params>
                    <param name="wHint" type="int"/>
                    <param name="hHint" type="int"/>
                    <param name="changed" type="boolean"/>
                </params>
            </method>
            <method name="abs" type="int" line="435">
                <params>
                    <param name="x" type="int"/>
                </params>
            </method>
            <method name="rand" type="double" line="439">
                <params>
                    <param name="r" type="Random"/>
                </params>
            </method>
            <javadoc line="443">
                Main.                
                <param>
                    args command line arguments, ignored                    
                </param>
            </javadoc>
            <method name="main" type="void" line="448">
                <params>
                    <param name="args" type="String"/>
                </params>
                <comment line="450">
                    Create frame                    
                </comment>
                <comment line="455">
                    Add bench test                    
                </comment>
                <declaration name="display" type="Display" line="450"/>
                <declaration name="shell" type="Shell" line="451"/>
                <declaration name="m" type="SWTBenchTest" line="455"/>
                <scope line="457">
                    <scope line="458"/>
                    <scope line="461"/>
                    <scope line="464"/>
                </scope>
                <scope line="473">
                    <scope line="474"/>
                </scope>
            </method>
        </class>
    </source>