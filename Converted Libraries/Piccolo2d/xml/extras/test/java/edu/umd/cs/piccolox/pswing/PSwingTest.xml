<?xml version="1.0" encoding="UTF-8"?>
    <source package="edu.umd.cs.piccolox.pswing">
        <import package="edu.umd.cs.piccolo.util.PPaintContext"/>
        <import package="junit.framework.TestCase"/>
        <import package="javax.swing.JButton"/>
        <import package="javax.swing.JComponent"/>
        <import package="javax.swing.JLabel"/>
        <import package="javax.swing.JPanel"/>
        <import package="javax.swing.RepaintManager"/>
        <import package="java.awt.Color"/>
        <import package="java.awt.Dimension"/>
        <import package="java.awt.Graphics2D"/>
        <import package="java.awt.geom.AffineTransform"/>
        <import package="java.awt.image.BufferedImage"/>
        <import package="java.io.IOException"/>
        <class name="PSwingTest" line="15">
            <extends class="TestCase"/>
            <method name="setUp" type="void" line="16"/>
            <method name="testConstructorFailsOnNullComponent" type="void" line="19">
                <scope line="20"/>
                <scope line="23"/>
            </method>
            <method name="testPSwingRegistersItselfWithComponent" type="void" line="26">
                <declaration name="panel" type="JPanel" line="27"/>
                <declaration name="pSwing" type="PSwing" line="28"/>
            </method>
            <method name="testGetComponentReturnsValidComponent" type="void" line="31">
                <declaration name="panel" type="JPanel" line="32"/>
                <declaration name="pSwing" type="PSwing" line="33"/>
            </method>
            <method name="testPSwingResizesItselfWhenComponentIsResized" type="void" line="36">
                <declaration name="reshaped" type="boolean[]" line="37"/>
                <declaration name="panel" type="JPanel" line="38"/>
                <anonymous_class line="39">
                    <method name="updateBounds" type="void" line="40"/>
                </anonymous_class>
            </method>
            <method name="testPSwingDelegatesPaintingToItsComponent" type="void" line="49">
                <declaration name="panel" type="JPanel" line="50"/>
                <declaration name="pSwing" type="MockPaintingPSwing" line="51"/>
                <declaration name="image" type="BufferedImage" line="54"/>
                <declaration name="graphics" type="Graphics2D" line="55"/>
                <declaration name="paintContext" type="PPaintContext" line="56"/>
            </method>
            <method name="testPSwingWithBufferedPaintingDelegatesPaintingToItsComponent" type="void" line="60">
                <declaration name="panel" type="JPanel" line="61"/>
                <declaration name="pSwing" type="MockPaintingPSwing" line="62"/>
                <declaration name="image" type="BufferedImage" line="66"/>
                <declaration name="graphics" type="Graphics2D" line="67"/>
                <declaration name="paintContext" type="PPaintContext" line="68"/>
            </method>
            <method name="testHidingPNodeHidesComponent" type="void" line="72">
                <declaration name="panel" type="JPanel" line="73"/>
                <declaration name="pSwing" type="PSwing" line="74"/>
            </method>
            <method name="testAddingSwingComponentToWrappedHierarchyMakesItNotDoubleBuffer" type="void" line="78">
                <declaration name="panel" type="JPanel" line="79"/>
                <declaration name="pSwing" type="PSwing" line="80"/>
                <declaration name="child" type="JComponent" line="81"/>
            </method>
            <method name="assertDelayedSuccess" type="void" line="86">
                <params>
                    <param name="message" type="String"/>
                    <param name="delay" type="int"/>
                    <param name="p" type="Predicate"/>
                </params>
                <declaration name="remainingTries" type="int" line="87"/>
                <scope line="88">
                    <scope line="89"/>
                    <scope line="93"/>
                    <scope line="96"/>
                </scope>
            </method>
            <method name="assertDelayedSuccess" type="void" line="101">
                <params>
                    <param name="delay" type="int"/>
                    <param name="p" type="Predicate"/>
                </params>
            </method>
            <interface name="Predicate">
                <method name="isTrue" type="boolean" line="105"/>
            </interface>
            <method name="testPaintTooSmallPaintsGreek" type="void" line="107">
                <declaration name="panel" type="JPanel" line="108"/>
                <declaration name="pSwing" type="MockPaintingPSwing" line="110"/>
                <declaration name="image" type="BufferedImage" line="111"/>
                <declaration name="graphics" type="Graphics2D" line="112"/>
                <declaration name="paintContext" type="PPaintContext" line="114"/>
            </method>
            <method name="testPaintBigPaintsComponent" type="void" line="119">
                <declaration name="panel" type="JPanel" line="120"/>
                <declaration name="pSwing" type="MockPaintingPSwing" line="122"/>
                <declaration name="image" type="BufferedImage" line="123"/>
                <declaration name="graphics" type="Graphics2D" line="124"/>
                <declaration name="paintContext" type="PPaintContext" line="126"/>
            </method>
            <method name="testGreekThresholdIsHonoured" type="void" line="131">
                <declaration name="panel" type="JPanel" line="132"/>
                <declaration name="pSwing" type="MockPaintingPSwing" line="134"/>
                <declaration name="image" type="BufferedImage" line="136"/>
                <declaration name="graphics" type="Graphics2D" line="137"/>
                <declaration name="paintContext" type="PPaintContext" line="138"/>
            </method>
            <method name="testGreekThresholdIsPersisted" type="void" line="143">
                <declaration name="panel" type="JPanel" line="144"/>
                <declaration name="pSwing" type="MockPaintingPSwing" line="145"/>
            </method>
            <method name="testAssertSettingJLabelWidthTooSmallGrowsIt" type="void" line="151">
                <declaration name="label" type="JLabel" line="152"/>
                <declaration name="canvas" type="PSwingCanvas" line="153"/>
                <declaration name="swing" type="MockPaintingPSwing" line="155"/>
                <anonymous_class line="156">
                    <method name="isTrue" type="boolean" line="157"/>
                </anonymous_class>
                <declaration name="image" type="BufferedImage" line="165"/>
                <declaration name="graphics" type="Graphics2D" line="166"/>
                <declaration name="paintContext" type="PPaintContext" line="167"/>
            </method>
            <method name="testAssertSettingJButtonWidthTooSmallGrowsIt" type="void" line="171">
                <declaration name="label" type="JButton" line="172"/>
                <declaration name="canvas" type="PSwingCanvas" line="173"/>
                <declaration name="swing" type="MockPaintingPSwing" line="175"/>
                <declaration name="image" type="BufferedImage" line="180"/>
                <declaration name="graphics" type="Graphics2D" line="181"/>
                <declaration name="paintContext" type="PPaintContext" line="182"/>
            </method>
            <method name="testPSwingAttachesItselfToItsCanvasWhenAddedToItsSceneGraph" type="void" line="186">
                <declaration name="canvas1" type="PSwingCanvas" line="187"/>
                <declaration name="label" type="PSwing" line="188"/>
            </method>
            <method name="testPSwingRemovesItselfFromItsCanvasWhenRemovedFromScene" type="void" line="193">
                <declaration name="canvas1" type="PSwingCanvas" line="194"/>
                <declaration name="label" type="PSwing" line="195"/>
            </method>
            <method name="testPSwingReattachesItselfWhenMovedFromCanvasToCanvas" type="void" line="201">
                <declaration name="canvas1" type="PSwingCanvas" line="202"/>
                <declaration name="canvas2" type="PSwingCanvas" line="203"/>
                <declaration name="label" type="PSwing" line="204"/>
            </method>
            <method name="testPSwingRegistersWithCanvasThroughoutItsLifeCycle" type="void" line="210">
                <declaration name="canvas" type="PSwingCanvas" line="211"/>
                <declaration name="label" type="PSwing" line="212"/>
            </method>
            <class name="MockPaintingPSwing" line="220">
                <extends class="PSwing"/>
                <declaration name="paintedGreek" type="boolean" line="221"/>
                <declaration name="paintedComponent" type="boolean" line="222"/>
                <method name="MockPaintingPSwing" type="constructor" line="223">
                    <params>
                        <param name="component" type="JComponent"/>
                    </params>
                </method>
                <method name="paint" type="void" line="226">
                    <params>
                        <param name="paintContext" type="Graphics2D"/>
                    </params>
                </method>
                <method name="paintAsGreek" type="void" line="230">
                    <params>
                        <param name="paintContext" type="Graphics2D"/>
                    </params>
                </method>
                <method name="isPaintedGreek" type="boolean" line="234"/>
                <method name="isPaintedComponent" type="boolean" line="237"/>
            </class>
        </class>
    </source>