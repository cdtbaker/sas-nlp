<?xml version="1.0" encoding="UTF-8"?>
    <source package="edu.umd.cs.piccolox.swing">
        <import package="java.awt.Container"/>
        <import package="java.awt.Dimension"/>
        <import package="java.awt.Insets"/>
        <import package="java.awt.Rectangle"/>
        <import package="javax.swing.JScrollPane"/>
        <import package="javax.swing.ScrollPaneLayout"/>
        <import package="javax.swing.border.Border"/>
        <import package="edu.umd.cs.piccolo.util.PBounds"/>
        <class name="PScrollPaneLayout" line="42">
            <extends class="ScrollPaneLayout"/>
            <javadoc line="42">
                A subclass of ScrollPaneLayout that looks at the Viewport for sizing
                  information rather than View. Also queries the Viewport for sizing
                  information after each decision about scrollbar visiblity.                
                <author>
                    Lance Good                    
                </author>
            </javadoc>
            <declaration name="serialVersionUID" type="long" line="50"/>
            <javadoc line="52">
                MODIFIED FROM javax.swing.ScrollPaneLayout.layoutContainer.
                  This is largely the same as ScrollPaneLayout.layoutContainer but obtains
                  the preferred view size from the viewport rather than directly from the
                  view so the viewport can get the preferred size from the PScrollDirector                
                <param>
                    parent the Container to lay out                    
                </param>
            </javadoc>
            <method name="layoutContainer" type="void" line="61">
                <params>
                    <param name="parent" type="Container"/>
                </params>
                <comment line="62">
                    Sync the (now obsolete) policy fields with the JScrollPane.                    
                </comment>
                <comment line="79">
                    Get the scrollPane&apos;s orientation.                    
                </comment>
                <comment line="82">
                    If there&apos;s a visible column header remove the space it needs from the
                     top of availR. The column header is treated as if it were fixed
                     height, arbitrary width.                    
                </comment>
                <comment line="96">
                    If there&apos;s a visible row header remove the space it needs from the
                     left or right of availR. The row header is treated as if it were
                     fixed width, arbitrary height.                    
                </comment>
                <comment line="116">
                    If there&apos;s a JScrollPane.viewportBorder, remove the space it occupies
                     for availR.                    
                </comment>
                <comment line="133">
                    At this point availR is the space available for the viewport and
                     scrollbars. rowHeadR is correct except for its height and y and
                     colHeadR is correct except for its width and x. Once we&apos;re through
                     computing the dimensions of these three parts we can go back and set
                     the dimensions of rowHeadR.height, rowHeadR.y, colHeadR.width,
                     colHeadR.x and the bounds for the corners.
                    
                     We&apos;ll decide about putting up scrollbars by comparing the viewport
                     views preferred size with the viewports extent size (generally just
                     its size). Using the preferredSize is reasonable because layout
                     proceeds top down - so we expect the viewport to be layed out next.
                     And we assume that the viewports layout manager will give the view
                     it&apos;s preferred size.                    
                </comment>
                <comment line="152">
                    LEG: Modification to ask the viewport for the view size rather                    
                </comment>
                <comment line="153">
                    than asking the view directly                    
                </comment>
                <comment line="156">
                    If there&apos;s a vertical scrollbar and we need one, allocate space for
                     it (we&apos;ll make it visible later). A vertical scrollbar is considered
                     to be fixed width, arbitrary height.                    
                </comment>
                <comment line="170">
                    vsbPolicy == VERTICAL_SCROLLBAR_AS_NEEDED                    
                </comment>
                <comment line="179">
                    LEG: Modification because the view&apos;s preferred size needs to                    
                </comment>
                <comment line="180">
                    be recomputed because the extent may have changed                    
                </comment>
                <comment line="185">
                    If there&apos;s a horizontal scrollbar and we need one, allocate space for
                     it (we&apos;ll make it visible later). A horizontal scrollbar is
                     considered to be fixed height, arbitrary width.                    
                </comment>
                <comment line="198">
                    hsbPolicy == HORIZONTAL_SCROLLBAR_AS_NEEDED                    
                </comment>
                <comment line="205">
                    If we added the horizontal scrollbar then we&apos;ve implicitly
                     reduced the vertical space available to the viewport. As a
                     consequence we may have to add the vertical scrollbar, if that
                     hasn&apos;t been done so already. Ofcourse we don&apos;t bother with any of
                     this if the vsbPolicy is NEVER.                    
                </comment>
                <comment line="216">
                    LEG: Modification because the view&apos;s preferred size needs to                    
                </comment>
                <comment line="217">
                    be recomputed because the extent may have changed                    
                </comment>
                <comment line="229">
                    Set the size of the viewport first, and then recheck the Scrollable
                     methods. Some components base their return values for the Scrollable
                     methods on the size of the Viewport, so that if we don&apos;t ask after
                     resetting the bounds we may have gotten the wrong answer.                    
                </comment>
                <comment line="239">
                    We now have the final size of the viewport: availR. Now fixup the
                     header and scrollbar widthsheights.                    
                </comment>
                <comment line="250">
                    Set the bounds of the remaining components. The scrollbars are made
                     invisible if they&apos;re not needed.                    
                </comment>
                <scope line="63"/>
                <declaration name="scrollPane" type="JScrollPane" line="66"/>
                <declaration name="availR" type="Rectangle" line="70"/>
                <declaration name="insets" type="Insets" line="73"/>
                <declaration name="leftToRight" type="boolean" line="80"/>
                <declaration name="colHeadR" type="Rectangle" line="87"/>
                <scope line="89">
                    <declaration name="colHeadHeight" type="int" line="90"/>
                </scope>
                <declaration name="rowHeadR" type="Rectangle" line="101"/>
                <scope line="103">
                    <declaration name="rowHeadWidth" type="int" line="104"/>
                    <scope line="107"/>
                    <scope line="111"/>
                </scope>
                <declaration name="viewportBorder" type="Border" line="120"/>
                <declaration name="vpbInsets" type="Insets" line="121"/>
                <scope line="122"/>
                <scope line="129"/>
                <declaration name="extentSize" type="Dimension" line="148"/>
                <declaration name="cameraBounds" type="PBounds" line="150"/>
                <declaration name="viewPrefSize" type="Dimension" line="154"/>
                <declaration name="vsbR" type="Rectangle" line="161"/>
                <declaration name="vsbNeeded" type="boolean" line="163"/>
                <scope line="164"/>
                <scope line="167"/>
                <scope line="170"/>
                <scope line="175"/>
                <declaration name="hsbR" type="Rectangle" line="190"/>
                <declaration name="hsbNeeded" type="boolean" line="191"/>
                <scope line="192"/>
                <scope line="195"/>
                <scope line="198"/>
                <scope line="202">
                    <scope line="212">
                        <scope line="223"/>
                    </scope>
                </scope>
                <scope line="235"/>
                <scope line="254"/>
                <scope line="258"/>
                <scope line="262">
                    <scope line="263"/>
                    <scope line="267"/>
                </scope>
                <scope line="272">
                    <scope line="273"/>
                    <scope line="277"/>
                </scope>
                <scope line="282">
                    <scope line="283"/>
                    <scope line="286"/>
                </scope>
                <scope line="291">
                    <scope line="292"/>
                    <scope line="295"/>
                </scope>
                <scope line="300">
                    <scope line="301"/>
                    <scope line="304"/>
                </scope>
                <scope line="309">
                    <scope line="310"/>
                    <scope line="313"/>
                </scope>
            </method>
            <javadoc line="319">
                @param cameraBounds                
                <return>
                                        
                </return>
            </javadoc>
            <method name="getViewSize" type="Dimension" line="323">
                <params>
                    <param name="cameraBounds" type="PBounds"/>
                </params>
                <declaration name="viewPrefSize" type="Dimension" line="324"/>
                <scope line="325"/>
                <scope line="328"/>
            </method>
            <javadoc line="334">
                @param availR                
                <return>
                                        
                </return>
            </javadoc>
            <method name="getExtentSize" type="Dimension" line="338">
                <params>
                    <param name="availR" type="Rectangle"/>
                </params>
                <declaration name="extentSize" type="Dimension" line="339"/>
                <scope line="340"/>
                <scope line="343"/>
            </method>
            <javadoc line="349">
                Copied FROM javax.swing.ScrollPaneLayout.adjustForVSB.
                  This method is called from ScrollPaneLayout.layoutContainer and is
                  private in ScrollPaneLayout so it was copied here                
                <param>
                    wantsVSB whether to account for vertical scrollbar                    
                </param>
                <param>
                    available region to adjust                    
                </param>
                <param>
                    vsbR vertical scroll bar region                    
                </param>
                <param>
                    vpbInsets margin of vertical scroll bars                    
                </param>
                <param>
                    leftToRight orientation of the text LTR or RTL                    
                </param>
            </javadoc>
            <method name="adjustForVSB" type="void" line="362">
                <params>
                    <param name="wantsVSB" type="boolean"/>
                    <param name="available" type="Rectangle"/>
                    <param name="vsbR" type="Rectangle"/>
                    <param name="vpbInsets" type="Insets"/>
                    <param name="leftToRight" type="boolean"/>
                </params>
                <declaration name="vsbWidth" type="int" line="363"/>
                <scope line="364">
                    <scope line="368"/>
                    <scope line="371"/>
                </scope>
                <scope line="376"/>
            </method>
            <javadoc line="381">
                Copied FROM javax.swing.ScrollPaneLayout.adjustForHSB.
                  This method is called from ScrollPaneLayout.layoutContainer and is
                  private in ScrollPaneLayout so it was copied here                
                <param>
                    wantsHSB whether to account for horizontal scrollbar                    
                </param>
                <param>
                    available region to adjust                    
                </param>
                <param>
                    hsbR vertical scroll bar region                    
                </param>
                <param>
                    vpbInsets margin of the scroll bars                    
                </param>
            </javadoc>
            <method name="adjustForHSB" type="void" line="393">
                <params>
                    <param name="wantsHSB" type="boolean"/>
                    <param name="available" type="Rectangle"/>
                    <param name="hsbR" type="Rectangle"/>
                    <param name="vpbInsets" type="Insets"/>
                </params>
                <declaration name="hsbHeight" type="int" line="394"/>
                <scope line="395"/>
                <scope line="400"/>
            </method>
            <class name="UIResource" line="405">
                <extends class="PScrollPaneLayout"/>
                <implements interface="javax.swing.plaf.UIResource"/>
                <javadoc line="405">
                    The UI resource version of PScrollPaneLayout. It isn&apos;t clear why Swing
                      does this in ScrollPaneLayout but we&apos;ll do it here too just to be safe.                    
                </javadoc>
                <declaration name="serialVersionUID" type="long" line="411"/>
                <javadoc line="411">
                                        
                </javadoc>
            </class>
        </class>
    </source>