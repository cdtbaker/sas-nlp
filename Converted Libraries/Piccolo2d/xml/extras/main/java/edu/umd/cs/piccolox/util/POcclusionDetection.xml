<?xml version="1.0" encoding="UTF-8"?>
    <source package="edu.umd.cs.piccolox.util">
        <import package="edu.umd.cs.piccolo.PNode"/>
        <import package="edu.umd.cs.piccolo.util.PBounds"/>
        <import package="edu.umd.cs.piccolo.util.PPickPath"/>
        <class name="POcclusionDetection" line="5">
            <javadoc line="5">
                Experimental class for detecting occlusions.                
                <author>
                    Jesse Grosjean                    
                </author>
            </javadoc>
            <javadoc line="10">
                Traverse from the bottom right of the scene graph (top visible node) up
                  the tree determining which parent nodes are occluded by their children
                  nodes. Note that this is only detecting a subset of occlusions (parent,
                  child), others such as overlapping siblings or cousins are not detected.                
                <param>
                    n node from which to detect occlusions                    
                </param>
                <param>
                    parentBounds bounds of parent node                    
                </param>
            </javadoc>
            <method name="detectOccusions" type="void" line="18">
                <params>
                    <param name="n" type="PNode"/>
                    <param name="parentBounds" type="PBounds"/>
                </params>
            </method>
            <javadoc line="21">
                Traverse the pick path determining which parent nodes are occluded by
                  their children nodes. Note that this is only detecting a subset of
                  occlusions (parent, child), others such as overlapping siblings or
                  cousins are not detected.                
                <param>
                    node node from which to detect occlusions                    
                </param>
                <param>
                    pickPath Pick Path to traverse                    
                </param>
            </javadoc>
            <method name="detectOcclusions" type="void" line="29">
                <params>
                    <param name="node" type="PNode"/>
                    <param name="pickPath" type="PPickPath"/>
                </params>
                <scope line="30"/>
                <declaration name="count" type="int" line="34"/>
                <scope line="35">
                    <declaration name="each" type="PNode" line="36"/>
                    <scope line="37"/>
                    <scope line="40"/>
                </scope>
                <scope line="44">
                    <declaration name="parent" type="PNode" line="45"/>
                    <scope line="46"/>
                </scope>
            </method>
            <javadoc line="52">
                Calculate whether node occludes its parents.                
                <param>
                    n node to test                    
                </param>
                <param>
                    pickPath pickpath identifying the parents of the node                    
                </param>
                <return>
                    true if parents are occluded by the node                    
                </return>
            </javadoc>
            <method name="nodeOccludesParents" type="boolean" line="58">
                <params>
                    <param name="n" type="PNode"/>
                    <param name="pickPath" type="PPickPath"/>
                </params>
            </method>
        </class>
    </source>