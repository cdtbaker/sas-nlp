<?xml version="1.0" encoding="UTF-8"?>
    <source package="edu.umd.cs.piccolox.handles">
        <import package="edu.umd.cs.piccolo.PCamera"/>
        <import package="edu.umd.cs.piccolo.PNode"/>
        <import package="edu.umd.cs.piccolo.util.PBounds"/>
        <import package="edu.umd.cs.piccolo.util.PPickPath"/>
        <class name="PStickyHandleManager" line="6">
            <extends class="PNode"/>
            <javadoc line="6">
                This class relays adjustments to its bounds to its target.                
            </javadoc>
            <declaration name="serialVersionUID" type="long" line="10"/>
            <declaration name="target" type="PNode" line="11"/>
            <declaration name="camera" type="PCamera" line="12"/>
            <javadoc line="13">
                Constructs a sticky handle manager responsible for updating the position
                  of its associated node on the camera provided.                
                <param>
                    newCamera camera on which this manager is operating                    
                </param>
                <param>
                    newTarget node to be positioned on the camera                    
                </param>
            </javadoc>
            <method name="PStickyHandleManager" type="constructor" line="19">
                <params>
                    <param name="newCamera" type="PCamera"/>
                    <param name="newTarget" type="PNode"/>
                </params>
            </method>
            <javadoc line="23">
                Changes the node and camera on which this manager is operating.                
                <param>
                    newCamera camera on which this manager is operating                    
                </param>
                <param>
                    newTarget node to be positioned on the camera                    
                </param>
            </javadoc>
            <method name="setCameraTarget" type="void" line="28">
                <params>
                    <param name="newCamera" type="PCamera"/>
                    <param name="newTarget" type="PNode"/>
                </params>
            </method>
            <javadoc line="33">
                By changing this sticky handle&apos;s bounds, it propagates that change to its
                  associated node.                
                <param>
                    x x position of bounds                    
                </param>
                <param>
                    y y position of bounds                    
                </param>
                <param>
                    width width to apply to the bounds                    
                </param>
                <param>
                    height height to apply to the bounds                    
                </param>
                <return>
                    true if bounds were successfully changed                    
                </return>
            </javadoc>
            <method name="setBounds" type="boolean" line="42">
                <params>
                    <param name="x" type="double"/>
                    <param name="y" type="double"/>
                    <param name="width" type="double"/>
                    <param name="height" type="double"/>
                </params>
                <declaration name="b" type="PBounds" line="43"/>
            </method>
            <javadoc line="50">
                Since this node&apos;s bounds are always dependent on its target, it is
                  volatile.                
                <return>
                    true since sticky handle manager's bounds are completely
                      dependent on its children                    
                </return>
            </javadoc>
            <method name="getBoundsVolatile" type="boolean" line="56"/>
            <javadoc line="59">
                The sticky handle manager&apos;s bounds as computed by examining its target
                  through its camera.                
                <return>
                    the sticky handle manager's bounds as computed by examining its
                      target through its camera                    
                </return>
            </javadoc>
            <method name="getBoundsReference" type="PBounds" line="65">
                <declaration name="targetBounds" type="PBounds" line="66"/>
                <declaration name="bounds" type="PBounds" line="69"/>
            </method>
            <javadoc line="73">
                Dispatches this event to its target as well.                
            </javadoc>
            <method name="startResizeBounds" type="void" line="76"/>
            <javadoc line="80">
                Dispatches this event to its target as well.                
            </javadoc>
            <method name="endResizeBounds" type="void" line="83"/>
            <javadoc line="87">
                Since this node is invisible, it doesn&apos;t make sense to have it be
                  pickable.                
                <return>
                    false since it's invisible                    
                </return>
                <param>
                    pickPath path in which we're trying to determine if this node is
                      pickable                    
                </param>
            </javadoc>
            <method name="pickAfterChildren" type="boolean" line="94">
                <params>
                    <param name="pickPath" type="PPickPath"/>
                </params>
            </method>
        </class>
    </source>