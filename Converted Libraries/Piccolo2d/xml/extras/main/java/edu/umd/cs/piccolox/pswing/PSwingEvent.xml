<?xml version="1.0" encoding="UTF-8"?>
    <source package="edu.umd.cs.piccolox.pswing">
        <import package="edu.umd.cs.piccolo.PNode"/>
        <import package="edu.umd.cs.piccolo.util.PPickPath"/>
        <import package="java.awt.event.MouseEvent"/>
        <import package="java.awt.geom.Point2D"/>
        <interface name="PSwingEvent">
            <javadoc line="6">
                Interface allowing PSwing events that originated from swing and are destined
                  for PSwing nodes must conform to.                
            </javadoc>
            <method name="getLocalPoint" type="Point2D" line="11"/>
            <javadoc line="11">
                Returns the x,y position of the event in the local coordinate system of
                  the node the event occurred on.                
                <return>
                    a Point2D object containing the x and y coordinates local to the
                      node.                    
                </return>
            </javadoc>
            <method name="getLocalX" type="double" line="18"/>
            <javadoc line="18">
                Returns the horizontal x position of the event in the local coordinate
                  system of the node the event occurred on.                
                <return>
                    x a double indicating horizontal position local to the node.                    
                </return>
            </javadoc>
            <method name="getLocalY" type="double" line="24"/>
            <javadoc line="24">
                Returns the vertical y position of the event in the local coordinate
                  system of the node the event occurred on.                
                <return>
                    y a double indicating vertical position local to the node.                    
                </return>
            </javadoc>
            <method name="getID" type="int" line="30"/>
            <javadoc line="30">
                Determine the event type.                
                <return>
                    the id                    
                </return>
            </javadoc>
            <method name="getNode" type="PNode" line="35"/>
            <javadoc line="35">
                Determine the node the event originated at. If an event percolates up the
                  tree and is handled by an event listener higher up in the tree than the
                  original node that generated the event, this returns the original node.
                  For mouse drag and release events, this is the node that the original
                  matching press event went to - in other words, the event is &apos;grabbed&apos; by
                  the originating node.                
                <return>
                    the node                    
                </return>
            </javadoc>
            <method name="getPath" type="PPickPath" line="45"/>
            <javadoc line="45">
                Determine the path the event took from the PCanvas down to the visual
                  component.                
                <return>
                    the path                    
                </return>
            </javadoc>
            <method name="getGrabNode" type="PNode" line="51"/>
            <javadoc line="51">
                Determine the node the event originated at. If an event percolates up the
                  tree and is handled by an event listener higher up in the tree than the
                  original node that generated the event, this returns the original node.
                  For mouse drag and release events, this is the node that the original
                  matching press event went to - in other words, the event is &apos;grabbed&apos; by
                  the originating node.                
                <return>
                    the node                    
                </return>
            </javadoc>
            <method name="getGrabPath" type="PPickPath" line="61"/>
            <javadoc line="61">
                Return the path from the PCanvas down to the currently grabbed object.                
                <return>
                    the path                    
                </return>
            </javadoc>
            <method name="getCurrentNode" type="PNode" line="66"/>
            <javadoc line="66">
                Get the current node that is under the cursor. This may return a
                  different result then getGrabNode() when in a MOUSE_RELEASED or
                  MOUSE_DRAGGED event.                
                <return>
                    the current node.                    
                </return>
            </javadoc>
            <method name="getCurrentPath" type="PPickPath" line="73"/>
            <javadoc line="73">
                Get the path from the PCanvas down to the visual component currently
                  under the mouse.This may give a different result then getGrabPath()
                  during a MOUSE_DRAGGED or MOUSE_RELEASED operation.                
                <return>
                    the current path.                    
                </return>
            </javadoc>
            <method name="dispatchTo" type="void" line="80"/>
            <javadoc line="80">
                Calls appropriate method on the listener based on this events ID.                
                <param>
                    listener the MouseListener or MouseMotionListener to dispatch to.                    
                </param>
            </javadoc>
            <method name="setSource" type="void" line="85"/>
            <javadoc line="85">
                Set the source of this event. As the event is fired up the tree the
                  source of the event will keep changing to reflect the scenegraph object
                  that is firing the event.                
                <param>
                    aSource the source of the event                    
                </param>
            </javadoc>
            <method name="asMouseEvent" type="MouseEvent" line="92"/>
            <javadoc line="92">
                Returns this event as a mouse event. This reduces the need to cast
                  instances of this interface when they are known to all extend MouseEvent.                
                <return>
                    this object casted to a MouseEvent                    
                </return>
            </javadoc>
        </interface>
    </source>