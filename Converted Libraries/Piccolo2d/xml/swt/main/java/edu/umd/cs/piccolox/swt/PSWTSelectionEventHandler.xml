<?xml version="1.0" encoding="UTF-8"?>
    <source package="edu.umd.cs.piccolox.swt">
        <import package="java.awt.Color"/>
        <import package="java.awt.geom.Point2D"/>
        <import package="java.awt.geom.Rectangle2D"/>
        <import package="java.util.List"/>
        <import package="org.eclipse.swt.SWT"/>
        <import package="edu.umd.cs.piccolo.PCamera"/>
        <import package="edu.umd.cs.piccolo.PNode"/>
        <import package="edu.umd.cs.piccolo.event.PInputEvent"/>
        <import package="edu.umd.cs.piccolo.util.PBounds"/>
        <import package="edu.umd.cs.piccolo.util.PPaintContext"/>
        <import package="edu.umd.cs.piccolox.event.PSelectionEventHandler"/>
        <class name="PSWTSelectionEventHandler" line="13">
            <extends class="PSelectionEventHandler"/>
            <javadoc line="13">
                Selection event handler modified to use SWT paths instead of normal paths.                
                <version>
                    1.0                    
                </version>
                <author>
                    Lance Good                    
                </author>
            </javadoc>
            <declaration name="marquee" type="PSWTPath" line="19"/>
            <declaration name="marqueeParent" type="PNode" line="20"/>
            <declaration name="pressPt" type="Point2D" line="21"/>
            <declaration name="canvasPressPt" type="Point2D" line="22"/>
            <javadoc line="23">
                Creates a selection event handler.                
                <param>
                    marqueeParent The node to which the event handler dynamically adds
                      a marquee (temporarily) to represent the area being selected.                    
                </param>
                <param>
                    selectableParent The node whose children will be selected by this
                      event handler.                    
                </param>
            </javadoc>
            <method name="PSWTSelectionEventHandler" type="constructor" line="30">
                <params>
                    <param name="marqueeParent" type="PNode"/>
                    <param name="selectableParent" type="PNode"/>
                </params>
            </method>
            <javadoc line="34">
                Creates a selection event handler.                
                <param>
                    marqueeParent The node to which the event handler dynamically adds
                      a marquee (temporarily) to represent the area being selected.                    
                </param>
                <param>
                    selectableParents A list of nodes whose children will be selected
                      by this event handler.                    
                </param>
            </javadoc>
            <method name="PSWTSelectionEventHandler" type="constructor" line="41">
                <params>
                    <param name="marqueeParent" type="PNode"/>
                    <param name="selectableParents" type="List"/>
                </params>
            </method>
            <javadoc line="45">
                Modifies the provided node so that it is displayed as selected.                
                <param>
                    node node to be decorated                    
                </param>
            </javadoc>
            <method name="decorateSelectedNode" type="void" line="49">
                <params>
                    <param name="node" type="PNode"/>
                </params>
            </method>
            <javadoc line="52">
                Undoes any modifications to the provided node so that it is not displayed as selected.                
                <param>
                    node node to be undecorated                    
                </param>
            </javadoc>
            <method name="undecorateSelectedNode" type="void" line="56">
                <params>
                    <param name="node" type="PNode"/>
                </params>
            </method>
            <javadoc line="59">
                {@inheritDoc}                
            </javadoc>
            <method name="initializeSelection" type="void" line="62">
                <params>
                    <param name="pie" type="PInputEvent"/>
                </params>
            </method>
            <javadoc line="67">
                {@inheritDoc}                
            </javadoc>
            <method name="initializeMarquee" type="void" line="70">
                <params>
                    <param name="e" type="PInputEvent"/>
                </params>
                <anonymous_class line="72">
                    <declaration name="serialVersionUID" type="long" line="73"/>
                    <javadoc line="73">
                                                
                    </javadoc>
                    <method name="paint" type="void" line="76">
                        <params>
                            <param name="paintContext" type="PPaintContext"/>
                        </params>
                        <declaration name="s2g" type="SWTGraphics2D" line="77"/>
                    </method>
                </anonymous_class>
            </method>
            <javadoc line="88">
                {@inheritDoc}                
            </javadoc>
            <method name="updateMarquee" type="void" line="91">
                <params>
                    <param name="pie" type="PInputEvent"/>
                </params>
                <declaration name="b" type="PBounds" line="93"/>
                <scope line="94"/>
                <scope line="98"/>
            </method>
            <javadoc line="107">
                {@inheritDoc}                
            </javadoc>
            <method name="getMarqueeBounds" type="PBounds" line="110">
                <scope line="111"/>
            </method>
            <javadoc line="116">
                {@inheritDoc}                
            </javadoc>
            <method name="endMarqueeSelection" type="void" line="119">
                <params>
                    <param name="e" type="PInputEvent"/>
                </params>
            </method>
            <javadoc line="124">
                {@inheritDoc}                
            </javadoc>
            <method name="dragActivityStep" type="void" line="127">
                <params>
                    <param name="aEvent" type="PInputEvent"/>
                </params>
            </method>
        </class>
    </source>