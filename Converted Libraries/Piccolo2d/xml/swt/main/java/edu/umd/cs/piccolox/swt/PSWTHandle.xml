<?xml version="1.0" encoding="UTF-8"?>
    <source package="edu.umd.cs.piccolox.swt">
        <import package="java.awt.Color"/>
        <import package="java.awt.Shape"/>
        <import package="java.awt.event.InputEvent"/>
        <import package="java.awt.geom.Ellipse2D"/>
        <import package="java.awt.geom.Point2D"/>
        <import package="java.beans.PropertyChangeEvent"/>
        <import package="java.beans.PropertyChangeListener"/>
        <import package="java.io.IOException"/>
        <import package="java.io.ObjectInputStream"/>
        <import package="edu.umd.cs.piccolo.PCamera"/>
        <import package="edu.umd.cs.piccolo.PNode"/>
        <import package="edu.umd.cs.piccolo.event.PDragSequenceEventHandler"/>
        <import package="edu.umd.cs.piccolo.event.PInputEvent"/>
        <import package="edu.umd.cs.piccolo.event.PInputEventFilter"/>
        <import package="edu.umd.cs.piccolo.util.PBounds"/>
        <import package="edu.umd.cs.piccolo.util.PDimension"/>
        <import package="edu.umd.cs.piccolox.util.PLocator"/>
        <import package="edu.umd.cs.piccolox.util.PNodeLocator"/>
        <class name="PSWTHandle" line="20">
            <extends class="PSWTPath"/>
            <javadoc line="20">
                &lt;b&gt;PSWTHandle&lt;/b&gt; is used to modify some aspect of Piccolo when it is dragged.
                  Each handle has a PLocator that it uses to automatically position itself. See
                  PSWTBoundsHandle for an example of a handle that resizes the bounds of another
                  node.
                  &lt;P&gt;                
                <version>
                    1.0                    
                </version>
                <author>
                    Jesse Grosjean                    
                </author>
            </javadoc>
            <declaration name="serialVersionUID" type="long" line="30"/>
            <declaration name="DEFAULT_HANDLE_SIZE" type="float" line="31"/>
            <javadoc line="31">
                The Default Size of a handle not including its border.                
            </javadoc>
            <declaration name="DEFAULT_HANDLE_SHAPE" type="Shape" line="35"/>
            <javadoc line="35">
                The default shape to use when drawing handles. Default is an ellipse.                
            </javadoc>
            <declaration name="DEFAULT_COLOR" type="Color" line="39"/>
            <javadoc line="39">
                The default color to use when drawing a handle. (white)                
            </javadoc>
            <declaration name="locator" type="PLocator" line="43"/>
            <declaration name="handleDragger" type="PDragSequenceEventHandler" line="44"/>
            <javadoc line="45">
                Construct a new handle that will use the given locator to locate itself
                  on its parent node.                
                <param>
                    aLocator locator to use when positioning this handle                    
                </param>
            </javadoc>
            <method name="PSWTHandle" type="constructor" line="50">
                <params>
                    <param name="aLocator" type="PLocator"/>
                </params>
            </method>
            <javadoc line="56">
                Installs the handler that will reposition the handle when it is dragged,
                  and invoke appropriate call backs.                
            </javadoc>
            <method name="installHandleEventHandlers" type="void" line="60">
                <anonymous_class line="62">
                    <method name="propertyChange" type="void" line="63">
                        <params>
                            <param name="evt" type="PropertyChangeEvent"/>
                        </params>
                    </method>
                </anonymous_class>
            </method>
            <javadoc line="70">
                Return the event handler that is responsible for the drag handle
                  interaction.                
                <return>
                    handler responsible for responding to drag events                    
                </return>
            </javadoc>
            <method name="getHandleDraggerHandler" type="PDragSequenceEventHandler" line="75"/>
            <javadoc line="78">
                Get the locator that this handle uses to position itself on its parent
                  node.                
                <return>
                    locator used to position this handle                    
                </return>
            </javadoc>
            <method name="getLocator" type="PLocator" line="83"/>
            <javadoc line="86">
                Set the locator that this handle uses to position itself on its parent
                  node.                
                <param>
                    aLocator used to position this handle                    
                </param>
            </javadoc>
            <method name="setLocator" type="void" line="91">
                <params>
                    <param name="aLocator" type="PLocator"/>
                </params>
            </method>
            <javadoc line="96">
                Override this method to get notified when the handle starts to get
                  dragged.                
                <param>
                    aLocalPoint point at which dragging was started relative to the
                      handle's coordinate system                    
                </param>
                <param>
                    aEvent event representing the start of the drag                    
                </param>
            </javadoc>
            <method name="startHandleDrag" type="void" line="103">
                <params>
                    <param name="aLocalPoint" type="Point2D"/>
                    <param name="aEvent" type="PInputEvent"/>
                </params>
            </method>
            <javadoc line="105">
                Override this method to get notified as the handle is dragged.                
                <param>
                    aLocalDimension magnitude of the dragHandle event in the
                      dimensions of the handle's coordinate system.                    
                </param>
                <param>
                    aEvent event representing the drag                    
                </param>
            </javadoc>
            <method name="dragHandle" type="void" line="111">
                <params>
                    <param name="aLocalDimension" type="PDimension"/>
                    <param name="aEvent" type="PInputEvent"/>
                </params>
            </method>
            <javadoc line="113">
                Override this method to get notified when the handle stops getting
                  dragged.                
                <param>
                    aLocalPoint point at which dragging was ended relative to the
                      handle's coordinate system                    
                </param>
                <param>
                    aEvent event representing the end of the drag                    
                </param>
            </javadoc>
            <method name="endHandleDrag" type="void" line="120">
                <params>
                    <param name="aLocalPoint" type="Point2D"/>
                    <param name="aEvent" type="PInputEvent"/>
                </params>
            </method>
            <javadoc line="122">
                {@inheritDoc}                
            </javadoc>
            <method name="setParent" type="void" line="125">
                <params>
                    <param name="newParent" type="PNode"/>
                </params>
            </method>
            <javadoc line="129">
                {@inheritDoc}                
            </javadoc>
            <method name="parentBoundsChanged" type="void" line="132"/>
            <javadoc line="135">
                Force this handle to relocate itself using its locator.                
            </javadoc>
            <method name="relocateHandle" type="void" line="138">
                <scope line="139">
                    <declaration name="b" type="PBounds" line="140"/>
                    <declaration name="aPoint" type="Point2D" line="141"/>
                    <scope line="142">
                        <declaration name="located" type="PNode" line="143"/>
                        <declaration name="parent" type="PNode" line="144"/>
                        <scope line="147"/>
                    </scope>
                    <declaration name="newCenterX" type="double" line="151"/>
                    <declaration name="newCenterY" type="double" line="152"/>
                    <scope line="153"/>
                </scope>
            </method>
            <method name="readObject" type="void" line="158">
                <params>
                    <param name="in" type="ObjectInputStream"/>
                </params>
            </method>
            <class name="HandleDragHandler" line="162">
                <extends class="PDragSequenceEventHandler"/>
                <method name="HandleDragHandler" type="constructor" line="163">
                    <declaration name="filter" type="PInputEventFilter" line="164"/>
                </method>
                <method name="startDrag" type="void" line="171">
                    <params>
                        <param name="event" type="PInputEvent"/>
                    </params>
                </method>
                <method name="drag" type="void" line="175">
                    <params>
                        <param name="event" type="PInputEvent"/>
                    </params>
                    <declaration name="aDelta" type="PDimension" line="177"/>
                    <scope line="178"/>
                </method>
                <method name="endDrag" type="void" line="182">
                    <params>
                        <param name="event" type="PInputEvent"/>
                    </params>
                </method>
            </class>
        </class>
    </source>