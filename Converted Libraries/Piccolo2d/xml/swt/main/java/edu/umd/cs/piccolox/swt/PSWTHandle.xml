<?xml version="1.0" encoding="UTF-8"?>
    <source package="edu.umd.cs.piccolox.swt">
        <import package="java.awt.Color"/>
        <import package="java.awt.Shape"/>
        <import package="java.awt.event.InputEvent"/>
        <import package="java.awt.geom.Ellipse2D"/>
        <import package="java.awt.geom.Point2D"/>
        <import package="java.beans.PropertyChangeEvent"/>
        <import package="java.beans.PropertyChangeListener"/>
        <import package="java.io.IOException"/>
        <import package="java.io.ObjectInputStream"/>
        <import package="edu.umd.cs.piccolo.PCamera"/>
        <import package="edu.umd.cs.piccolo.PNode"/>
        <import package="edu.umd.cs.piccolo.event.PDragSequenceEventHandler"/>
        <import package="edu.umd.cs.piccolo.event.PInputEvent"/>
        <import package="edu.umd.cs.piccolo.event.PInputEventFilter"/>
        <import package="edu.umd.cs.piccolo.util.PBounds"/>
        <import package="edu.umd.cs.piccolo.util.PDimension"/>
        <import package="edu.umd.cs.piccolox.util.PLocator"/>
        <import package="edu.umd.cs.piccolox.util.PNodeLocator"/>
        <class name="PSWTHandle" line="51">
            <extends class="PSWTPath"/>
            <comment line="136">
                ****************************************************************                
            </comment>
            <comment line="137">
                Handle Dragging - These are the methods the subclasses should                
            </comment>
            <comment line="138">
                normally override to give a handle unique behavior.                
            </comment>
            <comment line="139">
                ****************************************************************                
            </comment>
            <comment line="173">
                ****************************************************************                
            </comment>
            <comment line="174">
                Layout - When a handle&apos;s parent&apos;s layout changes the handle                
            </comment>
            <comment line="175">
                invalidates its own layout and then repositions itself on its                
            </comment>
            <comment line="176">
                parents bounds using its locator to determine that new                
            </comment>
            <comment line="177">
                position.                
            </comment>
            <comment line="178">
                ****************************************************************                
            </comment>
            <comment line="220">
                ****************************************************************                
            </comment>
            <comment line="221">
                Serialization                
            </comment>
            <comment line="222">
                ****************************************************************                
            </comment>
            <javadoc line="51">
                &lt;b&gt;PSWTHandle&lt;/b&gt; is used to modify some aspect of Piccolo when it is dragged.
                  Each handle has a PLocator that it uses to automatically position itself. See
                  PSWTBoundsHandle for an example of a handle that resizes the bounds of another
                  node.
                  &lt;P&gt;                
                <version>
                    1.0                    
                </version>
                <author>
                    Jesse Grosjean                    
                </author>
            </javadoc>
            <declaration name="serialVersionUID" type="long" line="62"/>
            <declaration name="DEFAULT_HANDLE_SIZE" type="float" line="63"/>
            <javadoc line="63">
                The Default Size of a handle not including its border.                
            </javadoc>
            <declaration name="DEFAULT_HANDLE_SHAPE" type="Shape" line="65"/>
            <javadoc line="65">
                The default shape to use when drawing handles. Default is an ellipse.                
            </javadoc>
            <declaration name="DEFAULT_COLOR" type="Color" line="67"/>
            <javadoc line="67">
                The default color to use when drawing a handle. (white)                
            </javadoc>
            <declaration name="locator" type="PLocator" line="70"/>
            <declaration name="handleDragger" type="PDragSequenceEventHandler" line="71"/>
            <javadoc line="73">
                Construct a new handle that will use the given locator to locate itself
                  on its parent node.                
                <param>
                    aLocator locator to use when positioning this handle                    
                </param>
            </javadoc>
            <method name="PSWTHandle" type="constructor" line="79">
                <params>
                    <param name="aLocator" type="PLocator"/>
                </params>
            </method>
            <javadoc line="86">
                Installs the handler that will reposition the handle when it is dragged,
                  and invoke appropriate call backs.                
            </javadoc>
            <method name="installHandleEventHandlers" type="void" line="90">
                <comment line="99">
                    so reject them so we don&apos;t consume them                    
                </comment>
                <anonymous_class line="93">
                    <method name="propertyChange" type="void" line="94">
                        <params>
                            <param name="evt" type="PropertyChangeEvent"/>
                        </params>
                    </method>
                </anonymous_class>
            </method>
            <javadoc line="103">
                Return the event handler that is responsible for the drag handle
                  interaction.                
                <return>
                    handler responsible for responding to drag events                    
                </return>
            </javadoc>
            <method name="getHandleDraggerHandler" type="PDragSequenceEventHandler" line="109"/>
            <javadoc line="113">
                Get the locator that this handle uses to position itself on its parent
                  node.                
                <return>
                    locator used to position this handle                    
                </return>
            </javadoc>
            <method name="getLocator" type="PLocator" line="119"/>
            <javadoc line="123">
                Set the locator that this handle uses to position itself on its parent
                  node.                
                <param>
                    aLocator used to position this handle                    
                </param>
            </javadoc>
            <method name="setLocator" type="void" line="129">
                <params>
                    <param name="aLocator" type="PLocator"/>
                </params>
            </method>
            <javadoc line="140">
                Override this method to get notified when the handle starts to get
                  dragged.                
                <param>
                    aLocalPoint point at which dragging was started relative to the
                      handle's coordinate system                    
                </param>
                <param>
                    aEvent event representing the start of the drag                    
                </param>
            </javadoc>
            <method name="startHandleDrag" type="void" line="148">
                <params>
                    <param name="aLocalPoint" type="Point2D"/>
                    <param name="aEvent" type="PInputEvent"/>
                </params>
            </method>
            <javadoc line="151">
                Override this method to get notified as the handle is dragged.                
                <param>
                    aLocalDimension magnitude of the dragHandle event in the
                      dimensions of the handle's coordinate system.                    
                </param>
                <param>
                    aEvent event representing the drag                    
                </param>
            </javadoc>
            <method name="dragHandle" type="void" line="158">
                <params>
                    <param name="aLocalDimension" type="PDimension"/>
                    <param name="aEvent" type="PInputEvent"/>
                </params>
            </method>
            <javadoc line="161">
                Override this method to get notified when the handle stops getting
                  dragged.                
                <param>
                    aLocalPoint point at which dragging was ended relative to the
                      handle's coordinate system                    
                </param>
                <param>
                    aEvent event representing the end of the drag                    
                </param>
            </javadoc>
            <method name="endHandleDrag" type="void" line="169">
                <params>
                    <param name="aLocalPoint" type="Point2D"/>
                    <param name="aEvent" type="PInputEvent"/>
                </params>
            </method>
            <javadoc line="179">
                {@inheritDoc}                
            </javadoc>
            <method name="setParent" type="void" line="180">
                <params>
                    <param name="newParent" type="PNode"/>
                </params>
            </method>
            <javadoc line="185">
                {@inheritDoc}                
            </javadoc>
            <method name="parentBoundsChanged" type="void" line="186"/>
            <javadoc line="190">
                Force this handle to relocate itself using its locator.                
            </javadoc>
            <method name="relocateHandle" type="void" line="193">
                <scope line="194">
                    <declaration name="b" type="PBounds" line="195"/>
                    <declaration name="aPoint" type="Point2D" line="196"/>
                    <scope line="198">
                        <declaration name="located" type="PNode" line="199"/>
                        <declaration name="parent" type="PNode" line="200"/>
                        <scope line="205"/>
                    </scope>
                    <declaration name="newCenterX" type="double" line="210"/>
                    <declaration name="newCenterY" type="double" line="211"/>
                    <scope line="213"/>
                </scope>
            </method>
            <method name="readObject" type="void" line="223">
                <params>
                    <param name="in" type="ObjectInputStream"/>
                </params>
            </method>
            <class name="HandleDragHandler" line="228">
                <extends class="PDragSequenceEventHandler"/>
                <method name="HandleDragHandler" type="constructor" line="229">
                    <declaration name="filter" type="PInputEventFilter" line="230"/>
                </method>
                <method name="startDrag" type="void" line="238">
                    <params>
                        <param name="event" type="PInputEvent"/>
                    </params>
                </method>
                <method name="drag" type="void" line="243">
                    <params>
                        <param name="event" type="PInputEvent"/>
                    </params>
                    <declaration name="aDelta" type="PDimension" line="245"/>
                    <scope line="246"/>
                </method>
                <method name="endDrag" type="void" line="251">
                    <params>
                        <param name="event" type="PInputEvent"/>
                    </params>
                </method>
            </class>
        </class>
    </source>