<?xml version="1.0" encoding="UTF-8"?>
    <source package="edu.umd.cs.piccolo.examples">
        <import package="java.awt.Color"/>
        <import package="java.util.Iterator"/>
        <import package="edu.umd.cs.piccolo.PCanvas"/>
        <import package="edu.umd.cs.piccolo.PNode"/>
        <import package="edu.umd.cs.piccolo.nodes.PPath"/>
        <import package="edu.umd.cs.piccolox.PFrame"/>
        <import package="edu.umd.cs.piccolox.handles.PBoundsHandle"/>
        <class name="LayoutExample" line="9">
            <extends class="PFrame"/>
            <javadoc line="9">
                This example shows how to create a node that will automatically layout its
                  children.                
            </javadoc>
            <declaration name="serialVersionUID" type="long" line="14"/>
            <javadoc line="14">
                                
            </javadoc>
            <method name="LayoutExample" type="constructor" line="17"/>
            <method name="LayoutExample" type="constructor" line="20">
                <params>
                    <param name="aCanvas" type="PCanvas"/>
                </params>
            </method>
            <method name="initialize" type="void" line="23">
                <anonymous_class line="24">
                    <declaration name="serialVersionUID" type="long" line="25"/>
                    <javadoc line="25">
                                                
                    </javadoc>
                    <method name="layoutChildren" type="void" line="28">
                        <declaration name="xOffset" type="double" line="29"/>
                        <declaration name="yOffset" type="double" line="30"/>
                        <declaration name="i" type="Iterator" line="31"/>
                        <scope line="32">
                            <declaration name="each" type="PNode" line="33"/>
                        </scope>
                    </method>
                </anonymous_class>
                <declaration name="layoutNode" type="PNode" line="24"/>
                <scope line="41">
                    <declaration name="each" type="PNode" line="42"/>
                </scope>
            </method>
            <method name="main" type="void" line="48">
                <params>
                    <param name="args" type="String[]"/>
                </params>
            </method>
        </class>
    </source>