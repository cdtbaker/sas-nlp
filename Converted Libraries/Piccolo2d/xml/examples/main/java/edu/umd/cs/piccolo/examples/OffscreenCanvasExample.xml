<?xml version="1.0" encoding="UTF-8"?>
    <source package="edu.umd.cs.piccolo.examples">
        <import package="java.awt.BasicStroke"/>
        <import package="java.awt.Color"/>
        <import package="java.awt.Frame"/>
        <import package="java.awt.Graphics2D"/>
        <import package="java.awt.GraphicsConfiguration"/>
        <import package="java.awt.GraphicsDevice"/>
        <import package="java.awt.GraphicsEnvironment"/>
        <import package="java.awt.geom.Rectangle2D"/>
        <import package="java.awt.image.BufferStrategy"/>
        <import package="edu.umd.cs.piccolo.POffscreenCanvas"/>
        <import package="edu.umd.cs.piccolo.activities.PActivity"/>
        <import package="edu.umd.cs.piccolo.nodes.PPath"/>
        <import package="edu.umd.cs.piccolo.nodes.PText"/>
        <class name="OffscreenCanvasExample" line="46">
            <javadoc line="46">
                Offscreen canvas example.                
            </javadoc>
            <declaration name="frame" type="Frame" line="51"/>
            <javadoc line="51">
                Frame.                
            </javadoc>
            <declaration name="background" type="Color" line="54"/>
            <javadoc line="54">
                Background color.                
            </javadoc>
            <declaration name="canvas" type="POffscreenCanvas" line="57"/>
            <javadoc line="57">
                Offscreen canvas.                
            </javadoc>
            <javadoc line="60">
                Create a new offscreen canvas example with the specified graphics device.                
                <param>
                    device graphics device                    
                </param>
            </javadoc>
            <method name="OffscreenCanvasExample" type="constructor" line="65">
                <params>
                    <param name="device" type="GraphicsDevice"/>
                </params>
                <declaration name="configuration" type="GraphicsConfiguration" line="66"/>
                <declaration name="text" type="PText" line="76"/>
                <declaration name="rect" type="PPath" line="81"/>
                <declaration name="right" type="Rectangle2D" line="90"/>
                <declaration name="left" type="Rectangle2D" line="91"/>
                <declaration name="start" type="Rectangle2D" line="92"/>
                <declaration name="toRight" type="PActivity" line="93"/>
                <declaration name="toLeft" type="PActivity" line="94"/>
                <declaration name="toStart" type="PActivity" line="95"/>
            </method>
            <javadoc line="100">
                Render offscreen graphics into the frame.                
            </javadoc>
            <method name="render" type="void" line="103">
                <comment line="108">
                    canvas is not opaque, so fill with background color                    
                </comment>
                <comment line="111">
                    then let canvas render into graphics                    
                </comment>
                <declaration name="bufferStrategy" type="BufferStrategy" line="104"/>
                <scope line="105">
                    <scope line="106">
                        <declaration name="graphics" type="Graphics2D" line="107"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="119">
                Main.                
                <param>
                    args command line arguments                    
                </param>
            </javadoc>
            <method name="main" type="void" line="124">
                <params>
                    <param name="args" type="String[]"/>
                </params>
                <declaration name="environment" type="GraphicsEnvironment" line="125"/>
                <declaration name="device" type="GraphicsDevice" line="126"/>
                <declaration name="example" type="OffscreenCanvasExample" line="127"/>
                <declaration name="done" type="boolean" line="129"/>
                <scope line="130"/>
            </method>
        </class>
    </source>