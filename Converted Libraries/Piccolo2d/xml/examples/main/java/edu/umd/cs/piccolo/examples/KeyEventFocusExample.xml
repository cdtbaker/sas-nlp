<?xml version="1.0" encoding="UTF-8"?>
    <source package="edu.umd.cs.piccolo.examples">
        <import package="java.awt.Color"/>
        <import package="edu.umd.cs.piccolo.PCanvas"/>
        <import package="edu.umd.cs.piccolo.PNode"/>
        <import package="edu.umd.cs.piccolo.event.PBasicInputEventHandler"/>
        <import package="edu.umd.cs.piccolo.event.PInputEvent"/>
        <import package="edu.umd.cs.piccolo.nodes.PPath"/>
        <import package="edu.umd.cs.piccolox.PFrame"/>
        <class name="KeyEventFocusExample" line="40">
            <extends class="PFrame"/>
            <javadoc line="40">
                This example shows how a node can get the keyboard focus.                
            </javadoc>
            <declaration name="serialVersionUID" type="long" line="45"/>
            <javadoc line="45">
                                
            </javadoc>
            <method name="KeyEventFocusExample" type="constructor" line="50"/>
            <method name="KeyEventFocusExample" type="constructor" line="54">
                <params>
                    <param name="aCanvas" type="PCanvas"/>
                </params>
            </method>
            <method name="initialize" type="void" line="58">
                <comment line="60">
                    Create a green and red node and add them to canvas layer.                    
                </comment>
                <comment line="70">
                    Add an event handler to the green node the prints
                     &quot;green mousepressed&quot;
                     when the mouse is pressed on the green node, and &quot;green keypressed&quot;
                     when
                     the key is pressed and the event listener has keyboard focus.                    
                </comment>
                <comment line="80">
                    Key board focus is managed by the PInputManager, accessible from
                     the root object, or from an incoming PInputEvent. In this case
                     when
                     the mouse is pressed in the green node, then the event handler
                     associated
                     with it will set the keyfocus to itself. Now it will receive key
                     events
                     until someone else gets the focus.                    
                </comment>
                <comment line="102">
                    do the same thing with the red node.                    
                </comment>
                <declaration name="canvas" type="PCanvas" line="60"/>
                <declaration name="nodeGreen" type="PNode" line="61"/>
                <declaration name="nodeRed" type="PNode" line="62"/>
                <anonymous_class line="74">
                    <method name="keyPressed" type="void" line="75">
                        <params>
                            <param name="event" type="PInputEvent"/>
                        </params>
                    </method>
                    <method name="mousePressed" type="void" line="87">
                        <params>
                            <param name="event" type="PInputEvent"/>
                        </params>
                    </method>
                    <method name="keyboardFocusGained" type="void" line="92">
                        <params>
                            <param name="event" type="PInputEvent"/>
                        </params>
                    </method>
                    <method name="keyboardFocusLost" type="void" line="96">
                        <params>
                            <param name="event" type="PInputEvent"/>
                        </params>
                    </method>
                </anonymous_class>
                <anonymous_class line="102">
                    <method name="keyPressed" type="void" line="103">
                        <params>
                            <param name="event" type="PInputEvent"/>
                        </params>
                    </method>
                    <method name="mousePressed" type="void" line="107">
                        <params>
                            <param name="event" type="PInputEvent"/>
                        </params>
                    </method>
                    <method name="keyboardFocusGained" type="void" line="112">
                        <params>
                            <param name="event" type="PInputEvent"/>
                        </params>
                    </method>
                    <method name="keyboardFocusLost" type="void" line="116">
                        <params>
                            <param name="event" type="PInputEvent"/>
                        </params>
                    </method>
                </anonymous_class>
            </method>
            <method name="main" type="void" line="122">
                <params>
                    <param name="args" type="String[]"/>
                </params>
            </method>
        </class>
    </source>