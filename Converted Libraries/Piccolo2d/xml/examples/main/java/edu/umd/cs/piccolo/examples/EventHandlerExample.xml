<?xml version="1.0" encoding="UTF-8"?>
    <source package="edu.umd.cs.piccolo.examples">
        <import package="java.awt.BasicStroke"/>
        <import package="java.awt.event.InputEvent"/>
        <import package="java.awt.geom.Point2D"/>
        <import package="edu.umd.cs.piccolo.PCanvas"/>
        <import package="edu.umd.cs.piccolo.PLayer"/>
        <import package="edu.umd.cs.piccolo.event.PBasicInputEventHandler"/>
        <import package="edu.umd.cs.piccolo.event.PInputEvent"/>
        <import package="edu.umd.cs.piccolo.event.PInputEventFilter"/>
        <import package="edu.umd.cs.piccolo.nodes.PPath"/>
        <import package="edu.umd.cs.piccolo.util.PBounds"/>
        <import package="edu.umd.cs.piccolox.PFrame"/>
        <class name="EventHandlerExample" line="44">
            <extends class="PFrame"/>
            <javadoc line="44">
                This example shows how to create and install a custom event listener that
                  draws rectangles.                
            </javadoc>
            <declaration name="serialVersionUID" type="long" line="50"/>
            <javadoc line="50">
                                
            </javadoc>
            <method name="EventHandlerExample" type="constructor" line="55"/>
            <method name="EventHandlerExample" type="constructor" line="59">
                <params>
                    <param name="aCanvas" type="PCanvas"/>
                </params>
            </method>
            <method name="initialize" type="void" line="63">
                <comment line="67">
                    Create a new event handler the creates new rectangles on
                     mouse pressed, dragged, release.                    
                </comment>
                <comment line="71">
                    Make the event handler only work with BUTTON1 events, so that it does
                     not conflict with the zoom event handler that is installed by
                     default.                    
                </comment>
                <comment line="76">
                    Remove the pan event handler that is installed by default so that it
                     does not conflict with our new rectangle creation event handler.                    
                </comment>
                <comment line="80">
                    Register our new event handler.                    
                </comment>
                <declaration name="rectEventHandler" type="PBasicInputEventHandler" line="68"/>
            </method>
            <method name="createRectangleEventHandler" type="PBasicInputEventHandler" line="83">
                <comment line="86">
                    Create a new subclass of PBasicEventHandler that creates new PPath
                     nodes on mouse pressed, dragged, and released sequences. Not that
                     subclassing PDragSequenceEventHandler would make this class easier to
                     implement, but here you can see how to do it from scratch.                    
                </comment>
                <comment line="92">
                    The rectangle that is currently getting created.                    
                </comment>
                <comment line="95">
                    The mouse press location for the current pressed, drag, release
                     sequence.                    
                </comment>
                <comment line="99">
                    The current drag location.                    
                </comment>
                <comment line="107">
                    Initialize the locations.                    
                </comment>
                <comment line="111">
                    create a new rectangle and add it to the canvas layer so that
                     we can see it.                    
                </comment>
                <comment line="117">
                    update the rectangle shape.                    
                </comment>
                <comment line="123">
                    update the drag point location.                    
                </comment>
                <comment line="126">
                    update the rectangle shape.                    
                </comment>
                <comment line="132">
                    update the rectangle shape.                    
                </comment>
                <comment line="138">
                    create a new bounds that contains both the press and current
                     drag point.                    
                </comment>
                <comment line="144">
                    Set the rectangles bounds.                    
                </comment>
                <anonymous_class line="89">
                    <declaration name="rectangle" type="PPath" line="92"/>
                    <declaration name="pressPoint" type="Point2D" line="96"/>
                    <declaration name="dragPoint" type="Point2D" line="99"/>
                    <method name="mousePressed" type="void" line="101">
                        <params>
                            <param name="e" type="PInputEvent"/>
                        </params>
                        <comment line="107">
                            Initialize the locations.                            
                        </comment>
                        <comment line="111">
                            create a new rectangle and add it to the canvas layer so that
                             we can see it.                            
                        </comment>
                        <comment line="117">
                            update the rectangle shape.                            
                        </comment>
                        <declaration name="layer" type="PLayer" line="104"/>
                    </method>
                    <method name="mouseDragged" type="void" line="120">
                        <params>
                            <param name="e" type="PInputEvent"/>
                        </params>
                        <comment line="123">
                            update the drag point location.                            
                        </comment>
                        <comment line="126">
                            update the rectangle shape.                            
                        </comment>
                    </method>
                    <method name="mouseReleased" type="void" line="129">
                        <params>
                            <param name="e" type="PInputEvent"/>
                        </params>
                        <comment line="132">
                            update the rectangle shape.                            
                        </comment>
                    </method>
                    <method name="updateRectangle" type="void" line="136">
                        <comment line="138">
                            create a new bounds that contains both the press and current
                             drag point.                            
                        </comment>
                        <comment line="144">
                            Set the rectangles bounds.                            
                        </comment>
                        <declaration name="b" type="PBounds" line="139"/>
                    </method>
                </anonymous_class>
            </method>
            <method name="main" type="void" line="149">
                <params>
                    <param name="args" type="String[]"/>
                </params>
            </method>
        </class>
    </source>