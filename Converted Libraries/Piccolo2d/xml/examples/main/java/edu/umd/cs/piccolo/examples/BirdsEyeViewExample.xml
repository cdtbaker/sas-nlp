<?xml version="1.0" encoding="UTF-8"?>
    <source package="edu.umd.cs.piccolo.examples">
        <import package="java.awt.BasicStroke"/>
        <import package="java.awt.Color"/>
        <import package="java.awt.Graphics2D"/>
        <import package="java.awt.geom.Ellipse2D"/>
        <import package="java.awt.geom.Line2D"/>
        <import package="java.awt.geom.Rectangle2D"/>
        <import package="java.beans.PropertyChangeEvent"/>
        <import package="java.beans.PropertyChangeListener"/>
        <import package="javax.swing.JDialog"/>
        <import package="edu.umd.cs.piccolo.PCanvas"/>
        <import package="edu.umd.cs.piccolo.PLayer"/>
        <import package="edu.umd.cs.piccolo.PNode"/>
        <import package="edu.umd.cs.piccolo.event.PBasicInputEventHandler"/>
        <import package="edu.umd.cs.piccolo.event.PDragEventHandler"/>
        <import package="edu.umd.cs.piccolo.event.PDragSequenceEventHandler"/>
        <import package="edu.umd.cs.piccolo.event.PInputEvent"/>
        <import package="edu.umd.cs.piccolo.nodes.PImage"/>
        <import package="edu.umd.cs.piccolo.nodes.PPath"/>
        <import package="edu.umd.cs.piccolo.nodes.PText"/>
        <import package="edu.umd.cs.piccolo.util.PBounds"/>
        <import package="edu.umd.cs.piccolo.util.PDimension"/>
        <import package="edu.umd.cs.piccolo.util.PPaintContext"/>
        <import package="edu.umd.cs.piccolox.PFrame"/>
        <import package="edu.umd.cs.piccolox.nodes.P3DRect"/>
        <class name="BirdsEyeViewExample" line="26">
            <extends class="PFrame"/>
            <javadoc line="26">
                This example, contributed by Rowan Christmas, shows how to create a birds-eye
                  view window.                
            </javadoc>
            <declaration name="serialVersionUID" type="long" line="31"/>
            <javadoc line="31">
                                
            </javadoc>
            <declaration name="fIsPressed" type="boolean" line="34"/>
            <method name="BirdsEyeViewExample" type="constructor" line="35"/>
            <method name="BirdsEyeViewExample" type="constructor" line="38">
                <params>
                    <param name="aCanvas" type="PCanvas"/>
                </params>
            </method>
            <method name="initialize" type="void" line="41">
                <declaration name="bev" type="BirdsEyeView" line="49"/>
                <declaration name="bird" type="JDialog" line="51"/>
            </method>
            <method name="nodeDemo" type="void" line="57">
                <declaration name="layer" type="PLayer" line="58"/>
                <declaration name="aNode" type="PNode" line="59"/>
                <declaration name="aCopy" type="PNode" line="68"/>
            </method>
            <method name="createNodeUsingExistingClasses" type="void" line="76">
                <declaration name="layer" type="PLayer" line="77"/>
            </method>
            <method name="subclassExistingClasses" type="void" line="83">
                <anonymous_class line="84">
                    <declaration name="serialVersionUID" type="long" line="85"/>
                    <javadoc line="85">
                                                
                    </javadoc>
                    <method name="paint" type="void" line="88">
                        <params>
                            <param name="aPaintContext" type="PPaintContext"/>
                        </params>
                        <scope line="89">
                            <declaration name="g2" type="Graphics2D" line="90"/>
                        </scope>
                        <scope line="94"/>
                    </method>
                </anonymous_class>
                <declaration name="n" type="PNode" line="84"/>
                <anonymous_class line="100">
                    <method name="mousePressed" type="void" line="101">
                        <params>
                            <param name="aEvent" type="PInputEvent"/>
                        </params>
                    </method>
                    <method name="mouseReleased" type="void" line="106">
                        <params>
                            <param name="aEvent" type="PInputEvent"/>
                        </params>
                    </method>
                </anonymous_class>
            </method>
            <method name="composeOtherNodes" type="void" line="116">
                <declaration name="myCompositeFace" type="PNode" line="117"/>
                <declaration name="eye1" type="PNode" line="118"/>
                <declaration name="eye2" type="PNode" line="120"/>
                <declaration name="mouth" type="PNode" line="121"/>
                <declaration name="b" type="PBounds" line="129"/>
            </method>
            <method name="createCustomNode" type="void" line="134">
                <anonymous_class line="135">
                    <declaration name="serialVersionUID" type="long" line="136"/>
                    <javadoc line="136">
                                                
                    </javadoc>
                    <method name="paint" type="void" line="139">
                        <params>
                            <param name="aPaintContext" type="PPaintContext"/>
                        </params>
                        <declaration name="bx" type="double" line="140"/>
                        <declaration name="by" type="double" line="141"/>
                        <declaration name="rightBorder" type="double" line="142"/>
                        <declaration name="bottomBorder" type="double" line="143"/>
                        <declaration name="line" type="Line2D" line="144"/>
                        <declaration name="g2" type="Graphics2D" line="145"/>
                        <scope line="148"/>
                        <scope line="152"/>
                    </method>
                </anonymous_class>
                <declaration name="n" type="PNode" line="135"/>
            </method>
            <method name="main" type="void" line="163">
                <params>
                    <param name="args" type="String[]"/>
                </params>
            </method>
            <class name="BirdsEyeView" line="166">
                <extends class="PCanvas"/>
                <implements interface="PropertyChangeListener"/>
                <javadoc line="166">
                    The Birds Eye View Class                    
                </javadoc>
                <declaration name="serialVersionUID" type="long" line="170"/>
                <javadoc line="170">
                                        
                </javadoc>
                <declaration name="areaVisiblePNode" type="PNode" line="173"/>
                <javadoc line="173">
                    This is the node that shows the viewed area.                    
                </javadoc>
                <declaration name="viewedCanvas" type="PCanvas" line="177"/>
                <javadoc line="177">
                    This is the canvas that is being viewed                    
                </javadoc>
                <declaration name="changeListener" type="PropertyChangeListener" line="181"/>
                <javadoc line="181">
                    The change listener to know when to update the birds eye view.                    
                </javadoc>
                <declaration name="layerCount" type="int" line="185"/>
                <javadoc line="186">
                    Creates a new instance of a BirdsEyeView                    
                </javadoc>
                <method name="BirdsEyeView" type="constructor" line="189">
                    <anonymous_class line="190">
                        <method name="propertyChange" type="void" line="191">
                            <params>
                                <param name="evt" type="PropertyChangeEvent"/>
                            </params>
                        </method>
                    </anonymous_class>
                    <anonymous_class line="201">
                        <method name="startDrag" type="void" line="202">
                            <params>
                                <param name="e" type="PInputEvent"/>
                            </params>
                            <scope line="203"/>
                        </method>
                        <method name="drag" type="void" line="207">
                            <params>
                                <param name="e" type="PInputEvent"/>
                            </params>
                            <declaration name="dim" type="PDimension" line="208"/>
                        </method>
                    </anonymous_class>
                </method>
                <method name="connect" type="void" line="217">
                    <params>
                        <param name="canvas" type="PCanvas"/>
                        <param name="viewed_layers" type="PLayer[]"/>
                    </params>
                    <scope line="221"/>
                </method>
                <javadoc line="225">
                    Add a layer to list of viewed layers                    
                </javadoc>
                <method name="addLayer" type="void" line="228">
                    <params>
                        <param name="new_layer" type="PLayer"/>
                    </params>
                </method>
                <javadoc line="232">
                    Remove the layer from the viewed layers                    
                </javadoc>
                <method name="removeLayer" type="void" line="235">
                    <params>
                        <param name="old_layer" type="PLayer"/>
                    </params>
                </method>
                <javadoc line="239">
                    Stop the birds eye view from receiving events from the viewed canvas
                      and remove all layers                    
                </javadoc>
                <method name="disconnect" type="void" line="243">
                    <scope line="245"/>
                </method>
                <javadoc line="249">
                    This method will get called when the viewed canvas changes                    
                </javadoc>
                <method name="propertyChange" type="void" line="252">
                    <params>
                        <param name="event" type="PropertyChangeEvent"/>
                    </params>
                </method>
                <javadoc line="255">
                    This method gets the state of the viewed canvas and updates the
                      BirdsEyeViewer This can be called from outside code                    
                </javadoc>
                <method name="updateFromViewed" type="void" line="259">
                    <declaration name="viewedX" type="double" line="260"/>
                    <declaration name="viewedY" type="double" line="261"/>
                    <declaration name="viewedHeight" type="double" line="262"/>
                    <declaration name="viewedWidth" type="double" line="263"/>
                    <declaration name="ul_camera_x" type="double" line="264"/>
                    <declaration name="ul_camera_y" type="double" line="265"/>
                    <declaration name="lr_camera_x" type="double" line="266"/>
                    <declaration name="lr_camera_y" type="double" line="267"/>
                    <declaration name="drag_bounds" type="Rectangle2D" line="268"/>
                    <declaration name="ul_layer_x" type="double" line="269"/>
                    <declaration name="ul_layer_y" type="double" line="270"/>
                    <declaration name="lr_layer_x" type="double" line="271"/>
                    <declaration name="lr_layer_y" type="double" line="272"/>
                    <scope line="273"/>
                    <scope line="276"/>
                    <scope line="279"/>
                    <scope line="282"/>
                    <scope line="285"/>
                    <scope line="288"/>
                    <scope line="291"/>
                    <scope line="294"/>
                    <declaration name="bounds" type="Rectangle2D" line="297"/>
                </method>
            </class>
        </class>
    </source>