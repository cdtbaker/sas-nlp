<?xml version="1.0" encoding="UTF-8"?>
    <source package="edu.umd.cs.piccolo.examples">
        <import package="java.awt.BasicStroke"/>
        <import package="java.awt.Color"/>
        <import package="java.util.Iterator"/>
        <import package="java.util.Random"/>
        <import package="edu.umd.cs.piccolo.PCanvas"/>
        <import package="edu.umd.cs.piccolo.PLayer"/>
        <import package="edu.umd.cs.piccolo.PNode"/>
        <import package="edu.umd.cs.piccolo.PRoot"/>
        <import package="edu.umd.cs.piccolo.activities.PActivity"/>
        <import package="edu.umd.cs.piccolo.nodes.PPath"/>
        <import package="edu.umd.cs.piccolox.PFrame"/>
        <import package="edu.umd.cs.piccolox.util.PFixedWidthStroke"/>
        <class name="DynamicExample" line="14">
            <extends class="PFrame"/>
            <javadoc line="14">
                1000 nodes rotated continuously. Note that if you zoom to a portion of the
                  screen where you can&apos;t see any nodes the CPU usage goes down to 1%, even
                  though all the objects are still getting rotated continuously (every 20
                  milliseconds). This shows that the cost of repainting and bounds caches is
                  very cheap compared to the cost of drawing.                
            </javadoc>
            <declaration name="serialVersionUID" type="long" line="22"/>
            <javadoc line="22">
                                
            </javadoc>
            <method name="DynamicExample" type="constructor" line="25"/>
            <method name="DynamicExample" type="constructor" line="28">
                <params>
                    <param name="aCanvas" type="PCanvas"/>
                </params>
            </method>
            <method name="initialize" type="void" line="31">
                <declaration name="layer" type="PLayer" line="32"/>
                <declaration name="root" type="PRoot" line="33"/>
                <declaration name="r" type="Random" line="34"/>
                <scope line="35">
                    <declaration name="n" type="PNode" line="36"/>
                </scope>
                <anonymous_class line="42">
                    <method name="activityStep" type="void" line="43">
                        <params>
                            <param name="currentTime" type="long"/>
                        </params>
                    </method>
                </anonymous_class>
                <declaration name="a" type="PActivity" line="42"/>
                <declaration name="p" type="PPath" line="50"/>
                <declaration name="stroke" type="PFixedWidthStroke" line="53"/>
            </method>
            <method name="rotateNodes" type="void" line="57">
                <declaration name="i" type="Iterator" line="58"/>
                <scope line="59">
                    <declaration name="each" type="PNode" line="60"/>
                </scope>
            </method>
            <method name="main" type="void" line="64">
                <params>
                    <param name="args" type="String[]"/>
                </params>
            </method>
        </class>
    </source>