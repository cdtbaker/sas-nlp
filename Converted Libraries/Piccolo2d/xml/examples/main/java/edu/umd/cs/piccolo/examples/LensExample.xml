<?xml version="1.0" encoding="UTF-8"?>
    <source package="edu.umd.cs.piccolo.examples">
        <import package="java.awt.Color"/>
        <import package="java.awt.Graphics2D"/>
        <import package="java.awt.geom.Point2D"/>
        <import package="edu.umd.cs.piccolo.PCamera"/>
        <import package="edu.umd.cs.piccolo.PCanvas"/>
        <import package="edu.umd.cs.piccolo.PLayer"/>
        <import package="edu.umd.cs.piccolo.PNode"/>
        <import package="edu.umd.cs.piccolo.PRoot"/>
        <import package="edu.umd.cs.piccolo.event.PDragSequenceEventHandler"/>
        <import package="edu.umd.cs.piccolo.event.PInputEvent"/>
        <import package="edu.umd.cs.piccolo.nodes.PPath"/>
        <import package="edu.umd.cs.piccolo.nodes.PText"/>
        <import package="edu.umd.cs.piccolo.util.PPaintContext"/>
        <import package="edu.umd.cs.piccolox.PFrame"/>
        <import package="edu.umd.cs.piccolox.handles.PBoundsHandle"/>
        <import package="edu.umd.cs.piccolox.nodes.PLens"/>
        <class name="LensExample" line="18">
            <extends class="PFrame"/>
            <javadoc line="18">
                This example shows one way to create and use lens&apos;s in Piccolo.                
            </javadoc>
            <declaration name="serialVersionUID" type="long" line="22"/>
            <javadoc line="22">
                                
            </javadoc>
            <method name="LensExample" type="constructor" line="25"/>
            <method name="LensExample" type="constructor" line="28">
                <params>
                    <param name="aCanvas" type="PCanvas"/>
                </params>
            </method>
            <method name="initialize" type="void" line="31">
                <declaration name="root" type="PRoot" line="32"/>
                <declaration name="camera" type="PCamera" line="33"/>
                <declaration name="mainLayer" type="PLayer" line="34"/>
                <declaration name="sharedLayer" type="PLayer" line="35"/>
                <declaration name="lensOnlyLayer" type="PLayer" line="36"/>
                <declaration name="lens" type="PLens" line="40"/>
                <anonymous_class line="46">
                    <declaration name="squiggle" type="PPath" line="47"/>
                    <method name="startDrag" type="void" line="48">
                        <params>
                            <param name="e" type="PInputEvent"/>
                        </params>
                        <declaration name="p" type="Point2D" line="50"/>
                    </method>
                    <method name="drag" type="void" line="55">
                        <params>
                            <param name="e" type="PInputEvent"/>
                        </params>
                    </method>
                    <method name="endDrag" type="void" line="59">
                        <params>
                            <param name="e" type="PInputEvent"/>
                        </params>
                    </method>
                    <method name="updateSquiggle" type="void" line="64">
                        <params>
                            <param name="aEvent" type="PInputEvent"/>
                        </params>
                        <declaration name="p" type="Point2D" line="65"/>
                    </method>
                </anonymous_class>
                <declaration name="squiggleEventHandler" type="PDragSequenceEventHandler" line="46"/>
                <anonymous_class line="75">
                    <declaration name="serialVersionUID" type="long" line="76"/>
                    <javadoc line="76">
                                                
                    </javadoc>
                    <method name="paint" type="void" line="79">
                        <params>
                            <param name="paintContext" type="PPaintContext"/>
                        </params>
                        <scope line="80">
                            <declaration name="g2" type="Graphics2D" line="81"/>
                        </scope>
                        <scope line="85"/>
                    </method>
                </anonymous_class>
                <declaration name="sharedNode" type="PNode" line="75"/>
                <declaration name="label" type="PText" line="95"/>
            </method>
            <method name="main" type="void" line="101">
                <params>
                    <param name="args" type="String[]"/>
                </params>
            </method>
        </class>
    </source>