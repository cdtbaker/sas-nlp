<?xml version="1.0" encoding="UTF-8"?>
    <source package="edu.umd.cs.piccolo.examples">
        <import package="java.awt.Color"/>
        <import package="edu.umd.cs.piccolo.PCanvas"/>
        <import package="edu.umd.cs.piccolo.PNode"/>
        <import package="edu.umd.cs.piccolo.event.PDragEventHandler"/>
        <import package="edu.umd.cs.piccolo.nodes.PPath"/>
        <import package="edu.umd.cs.piccolo.nodes.PText"/>
        <import package="edu.umd.cs.piccolox.PFrame"/>
        <import package="edu.umd.cs.piccolox.nodes.PComposite"/>
        <class name="CompositeExample" line="10">
            <extends class="PFrame"/>
            <javadoc line="10">
                This example shows how to create a composite node. A composite node is a
                  group of nodes that behave as a single node when interacted with.                
            </javadoc>
            <declaration name="serialVersionUID" type="long" line="15"/>
            <javadoc line="15">
                                
            </javadoc>
            <method name="CompositeExample" type="constructor" line="18"/>
            <method name="CompositeExample" type="constructor" line="21">
                <params>
                    <param name="aCanvas" type="PCanvas"/>
                </params>
            </method>
            <method name="initialize" type="void" line="24">
                <declaration name="composite" type="PComposite" line="25"/>
                <declaration name="circle" type="PNode" line="26"/>
                <declaration name="rectangle" type="PNode" line="27"/>
                <declaration name="text" type="PNode" line="28"/>
            </method>
            <method name="main" type="void" line="40">
                <params>
                    <param name="args" type="String[]"/>
                </params>
            </method>
        </class>
    </source>