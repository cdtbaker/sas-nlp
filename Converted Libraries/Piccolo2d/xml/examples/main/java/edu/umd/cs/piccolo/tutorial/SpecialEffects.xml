<?xml version="1.0" encoding="UTF-8"?>
    <source package="edu.umd.cs.piccolo.tutorial">
        <import package="java.awt.Color"/>
        <import package="edu.umd.cs.piccolo.PLayer"/>
        <import package="edu.umd.cs.piccolo.PNode"/>
        <import package="edu.umd.cs.piccolo.activities.PActivity"/>
        <import package="edu.umd.cs.piccolo.nodes.PPath"/>
        <import package="edu.umd.cs.piccolox.PFrame"/>
        <class name="SpecialEffects" line="39">
            <extends class="PFrame"/>
            <declaration name="serialVersionUID" type="long" line="40"/>
            <javadoc line="40">
                                
            </javadoc>
            <method name="initialize" type="void" line="45">
                <comment line="47">
                    Create the Target for our Activities.                    
                </comment>
                <comment line="49">
                    Create a new node that we will apply different activities to, and
                     place that node at location 200, 200.                    
                </comment>
                <comment line="56">
                    Extend PActivity.                    
                </comment>
                <comment line="58">
                    Store the current time in milliseconds for use below.                    
                </comment>
                <comment line="61">
                    Create a new custom &quot;flash&quot; activity. This activity will start
                     running in five seconds, and while it runs it will flash aNode&apos;s
                     paint between red and green every half second.                    
                </comment>
                <comment line="70">
                    Toggle the target node&apos;s brush color between red and green
                     each time the activity steps.                    
                </comment>
                <comment line="83">
                    Schedule the activity.                    
                </comment>
                <comment line="86">
                    Create three activities that animate the node&apos;s position. Since our
                     node already descends from the root node the animate methods will
                     automatically schedule these activities for us.                    
                </comment>
                <comment line="93">
                    The animate activities will start immediately (in the next call to
                     PRoot.processInputs) by default. Here we set their start times (in
                     PRoot global time) so that they start when the previous one has
                     finished.                    
                </comment>
                <declaration name="aNode" type="PNode" line="50"/>
                <declaration name="layer" type="PLayer" line="51"/>
                <declaration name="currentTime" type="long" line="58"/>
                <anonymous_class line="63">
                    <declaration name="fRed" type="boolean" line="64"/>
                    <method name="activityStep" type="void" line="66">
                        <params>
                            <param name="elapsedTime" type="long"/>
                        </params>
                        <comment line="70">
                            Toggle the target node&apos;s brush color between red and green
                             each time the activity steps.                            
                        </comment>
                        <scope line="71"/>
                        <scope line="74"/>
                    </method>
                </anonymous_class>
                <declaration name="flash" type="PActivity" line="63"/>
                <declaration name="a1" type="PActivity" line="88"/>
                <declaration name="a2" type="PActivity" line="89"/>
                <declaration name="a3" type="PActivity" line="90"/>
                <anonymous_class line="100">
                    <method name="activityStarted" type="void" line="101">
                        <params>
                            <param name="activity" type="PActivity"/>
                        </params>
                    </method>
                    <method name="activityStepped" type="void" line="105">
                        <params>
                            <param name="activity" type="PActivity"/>
                        </params>
                    </method>
                    <method name="activityFinished" type="void" line="108">
                        <params>
                            <param name="activity" type="PActivity"/>
                        </params>
                    </method>
                </anonymous_class>
            </method>
            <method name="main" type="void" line="114">
                <params>
                    <param name="args" type="String[]"/>
                </params>
            </method>
        </class>
    </source>