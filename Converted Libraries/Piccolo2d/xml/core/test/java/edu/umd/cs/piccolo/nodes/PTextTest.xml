<?xml version="1.0" encoding="UTF-8"?>
    <source package="edu.umd.cs.piccolo.nodes">
        <import package="java.awt.Color"/>
        <import package="java.awt.Component"/>
        <import package="java.awt.Font"/>
        <import package="junit.framework.TestCase"/>
        <import package="edu.umd.cs.piccolo.MockPropertyChangeListener"/>
        <class name="PTextTest" line="7">
            <extends class="TestCase"/>
            <javadoc line="7">
                Unit test for PText.                
            </javadoc>
            <declaration name="textNode" type="PText" line="11"/>
            <declaration name="mockListener" type="MockPropertyChangeListener" line="12"/>
            <method name="PTextTest" type="constructor" line="13">
                <params>
                    <param name="name" type="String"/>
                </params>
            </method>
            <method name="setUp" type="void" line="16"/>
            <method name="testClone" type="void" line="20">
                <declaration name="clonedNode" type="PText" line="23"/>
            </method>
            <method name="testTextIsEmptyByDefault" type="void" line="28">
                <declaration name="textNode" type="PText" line="29"/>
            </method>
            <method name="testTextMayBeAssignedEmptyString" type="void" line="32"/>
            <method name="testTextNullGetsInterpretedAsEmptyString" type="void" line="36"/>
            <method name="testBoundsGrowWithTextByDefault" type="void" line="40">
                <declaration name="text123" type="PText" line="41"/>
                <declaration name="width123" type="double" line="42"/>
                <declaration name="text1234" type="PText" line="43"/>
                <declaration name="width1234" type="double" line="44"/>
            </method>
            <method name="testBoundsOfEmptyString" type="void" line="47"/>
            <method name="testToString" type="void" line="53"/>
            <method name="testJustificationIsLeftByDefault" type="void" line="57"/>
            <method name="testSetJustificationPersists" type="void" line="60"/>
            <method name="testHorizontalAlignmentIsLeftByDefault" type="void" line="64"/>
            <method name="testSetHorizontalAlignmentPersists" type="void" line="67"/>
            <method name="testSetHorizontalAlignmentInvalidValues" type="void" line="71">
                <scope line="72"/>
                <scope line="75"/>
                <scope line="77"/>
                <scope line="80"/>
                <scope line="82"/>
                <scope line="85"/>
                <scope line="87"/>
                <scope line="90"/>
                <scope line="92"/>
                <scope line="95"/>
                <scope line="97"/>
                <scope line="100"/>
            </method>
            <method name="testTextPaintIsBlackByDefault" type="void" line="103"/>
            <method name="testSetTextPaintPersists" type="void" line="106"/>
            <method name="testConstrainWidthToTextTrueByDefault" type="void" line="110"/>
            <method name="testConstrainHeightToTextTrueByDefault" type="void" line="113"/>
            <method name="testConstrainWidthPersists" type="void" line="116"/>
            <method name="testConstrainHeightPersists" type="void" line="120"/>
            <method name="testDefaultGreekThreshold" type="void" line="124"/>
            <method name="testSetGreekThreshold" type="void" line="127"/>
            <method name="testDefaultFont" type="void" line="131"/>
            <method name="testSetFontPersists" type="void" line="134">
                <declaration name="newFont" type="Font" line="135"/>
            </method>
            <method name="testSetFontFiresPropertyChangedEvent" type="void" line="139">
                <declaration name="newFont" type="Font" line="141"/>
            </method>
        </class>
    </source>