<?xml version="1.0" encoding="UTF-8"?>
    <source package="edu.umd.cs.piccolo">
        <import package="java.awt.Color"/>
        <import package="java.awt.Cursor"/>
        <import package="java.awt.Dimension"/>
        <import package="java.awt.Graphics2D"/>
        <import package="java.awt.GraphicsEnvironment"/>
        <import package="java.awt.geom.AffineTransform"/>
        <import package="java.awt.geom.Dimension2D"/>
        <import package="java.awt.geom.Point2D"/>
        <import package="java.awt.image.BufferedImage"/>
        <import package="java.io.IOException"/>
        <import package="java.util.Collection"/>
        <import package="junit.framework.TestCase"/>
        <import package="edu.umd.cs.piccolo.activities.PActivity"/>
        <import package="edu.umd.cs.piccolo.activities.PTransformActivity"/>
        <import package="edu.umd.cs.piccolo.util.PAffineTransform"/>
        <import package="edu.umd.cs.piccolo.util.PBounds"/>
        <import package="edu.umd.cs.piccolo.util.PDebug"/>
        <import package="edu.umd.cs.piccolo.util.PNodeFilter"/>
        <import package="edu.umd.cs.piccolo.util.PPaintContext"/>
        <import package="edu.umd.cs.piccolo.util.PPickPath"/>
        <class name="PCameraTest" line="22">
            <extends class="TestCase"/>
            <javadoc line="22">
                Unit test for PCamera.                
            </javadoc>
            <declaration name="camera" type="PCamera" line="26"/>
            <method name="PCameraTest" type="constructor" line="27">
                <params>
                    <param name="name" type="String"/>
                </params>
            </method>
            <method name="setUp" type="void" line="30"/>
            <method name="testClone" type="void" line="35">
                <declaration name="layer1" type="PLayer" line="36"/>
                <declaration name="layer2" type="PLayer" line="37"/>
                <declaration name="camera1" type="PCamera" line="38"/>
                <declaration name="cameraCopy" type="PCamera" line="41"/>
            </method>
            <method name="testCameraShouldHaveNullComponentUntilAssigned" type="void" line="43">
                <declaration name="component" type="MockPComponent" line="45"/>
            </method>
            <method name="testLayersReferenceIsNotNullByDefault" type="void" line="50"/>
            <method name="testCameraHasNoLayersByDefault" type="void" line="53"/>
            <method name="testIndexOfLayerReturnsMinusOneWhenLayerNotFound" type="void" line="56">
                <declaration name="orphanLayer" type="PLayer" line="57"/>
            </method>
            <method name="testRemoveLayerByReferenceWorks" type="void" line="62">
                <declaration name="layer" type="PLayer" line="63"/>
            </method>
            <method name="testRemoveLayerByReferenceDoesNothingWithStrangeLayerWorks" type="void" line="68">
                <declaration name="strangeLayer" type="PLayer" line="69"/>
            </method>
            <method name="testRemoveLayerRemovesTheCameraFromTheLayer" type="void" line="72">
                <declaration name="layer" type="PLayer" line="73"/>
            </method>
            <method name="testAddingLayerAddCameraToLayer" type="void" line="78">
                <declaration name="layer" type="PLayer" line="79"/>
            </method>
            <method name="testGetFullUnionOfLayerFullBoundsWorks" type="void" line="83">
                <declaration name="layer1" type="PLayer" line="84"/>
                <declaration name="layer2" type="PLayer" line="87"/>
                <declaration name="fullLayerBounds" type="PBounds" line="90"/>
            </method>
            <method name="testPaintPaintsAllLayers" type="void" line="93">
                <declaration name="canvas" type="PCanvas" line="94"/>
                <declaration name="camera" type="PCamera" line="95"/>
                <declaration name="img" type="BufferedImage" line="96"/>
                <declaration name="g2" type="Graphics2D" line="97"/>
                <declaration name="layer1" type="PLayer" line="98"/>
                <declaration name="blueSquare" type="PNode" line="99"/>
                <declaration name="layer2" type="PLayer" line="104"/>
                <declaration name="redSquare" type="PNode" line="107"/>
            </method>
            <method name="testPickPackWorksInSimpleCases" type="void" line="117">
                <declaration name="layer" type="PLayer" line="118"/>
                <declaration name="node1" type="PNode" line="120"/>
                <declaration name="node2" type="PNode" line="123"/>
                <declaration name="path1" type="PPickPath" line="127"/>
                <declaration name="path2" type="PPickPath" line="129"/>
            </method>
            <method name="testDefaultViewScaleIsOne" type="void" line="132"/>
            <method name="testGetViewBoundsTransformsCamerasBounds" type="void" line="135"/>
            <method name="testScaleViewIsCummulative" type="void" line="140"/>
            <method name="testSetViewScalePersists" type="void" line="146"/>
            <method name="testTranslateViewIsCummulative" type="void" line="152"/>
            <method name="testViewTransformedFiresChangeEvent" type="void" line="158">
                <declaration name="mockListener" type="MockPropertyChangeListener" line="159"/>
            </method>
            <method name="testAnimateViewToCenterBoundsIsImmediateWhenDurationIsZero" type="void" line="164">
                <declaration name="targetBounds" type="PBounds" line="166"/>
                <declaration name="activity" type="PActivity" line="167"/>
            </method>
            <method name="testAnimateViewToCenterBoundsCreatesValidActivity" type="void" line="172">
                <declaration name="targetBounds" type="PBounds" line="174"/>
                <declaration name="activity" type="PActivity" line="175"/>
            </method>
            <method name="testAnimateViewToPanToBoundsDoesNotAffectScale" type="void" line="180"/>
            <method name="testAnimateViewToPanToBoundsIsImmediateWhenDurationIsZero" type="void" line="185">
                <declaration name="activity" type="PActivity" line="187"/>
            </method>
            <method name="testAnimateViewToPanToBoundsReturnsAppropriatelyConfiguredActivity" type="void" line="191">
                <declaration name="activity" type="PTransformActivity" line="193"/>
            </method>
            <method name="testPDebugDebugBoundsPaintsBounds" type="void" line="199">
                <declaration name="canvas" type="PCanvas" line="200"/>
                <declaration name="parent" type="PNode" line="201"/>
                <declaration name="child" type="PNode" line="202"/>
                <declaration name="img" type="BufferedImage" line="213"/>
                <declaration name="graphics" type="Graphics2D" line="214"/>
                <declaration name="pc" type="PPaintContext" line="217"/>
            </method>
            <method name="assertPointColor" type="void" line="230">
                <params>
                    <param name="expectedColor" type="Color"/>
                    <param name="img" type="BufferedImage"/>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                </params>
            </method>
            <method name="testSetViewOffsetIsNotCummulative" type="void" line="233"/>
            <method name="testDefaultViewConstraintsIsNone" type="void" line="239"/>
            <method name="testSetViewContraintsPersists" type="void" line="242"/>
            <method name="testSetViewConstraintsThrowsIllegalArgumentException" type="void" line="250">
                <scope line="251"/>
                <scope line="254"/>
            </method>
            <method name="testTooFewLayersCamera" type="void" line="257">
                <declaration name="tooFew" type="PCamera" line="258"/>
                <declaration name="layer0" type="MockPLayer" line="259"/>
                <declaration name="layer1" type="MockPLayer" line="260"/>
                <declaration name="pickPath" type="PPickPath" line="269"/>
                <declaration name="image" type="BufferedImage" line="273"/>
                <declaration name="graphics" type="Graphics2D" line="274"/>
                <declaration name="paintContext" type="PPaintContext" line="275"/>
            </method>
            <method name="testTooManyLayersCamera" type="void" line="289">
                <declaration name="tooMany" type="PCamera" line="290"/>
                <declaration name="layer0" type="MockPLayer" line="291"/>
                <declaration name="layer1" type="MockPLayer" line="292"/>
                <declaration name="pickPath" type="PPickPath" line="301"/>
                <declaration name="image" type="BufferedImage" line="305"/>
                <declaration name="graphics" type="Graphics2D" line="306"/>
                <declaration name="paintContext" type="PPaintContext" line="307"/>
            </method>
            <method name="testRepaintFromNullParent" type="void" line="321">
                <declaration name="canvas" type="PCanvas" line="323"/>
            </method>
            <method name="testRepaintFromNullComponent" type="void" line="327">
                <declaration name="parent" type="PNode" line="328"/>
            </method>
            <method name="testRepaintFromNullParentNullComponent" type="void" line="333"/>
            <method name="testRepaintFromLayer" type="void" line="338">
                <declaration name="layer" type="PLayer" line="339"/>
            </method>
            <method name="testRepaintFromLayerNotViewedByCamera" type="void" line="343">
                <declaration name="layer" type="PLayer" line="344"/>
            </method>
            <method name="testRepaintFromLayerNotALayer" type="void" line="347">
                <scope line="348"/>
                <scope line="352"/>
            </method>
            <method name="testRemoveLayerAtIndex" type="void" line="355">
                <declaration name="layer" type="PLayer" line="356"/>
            </method>
            <method name="testRemoveLayerAtIndexIndexOutOfBounds" type="void" line="364">
                <declaration name="layer" type="PLayer" line="365"/>
                <scope line="367"/>
                <scope line="371"/>
            </method>
            <method name="testPaintDebugInfoDebugFullBounds" type="void" line="374">
                <declaration name="layer" type="PLayer" line="375"/>
                <declaration name="child" type="PNode" line="377"/>
                <declaration name="image" type="BufferedImage" line="380"/>
                <declaration name="graphics" type="Graphics2D" line="381"/>
                <declaration name="paintContext" type="PPaintContext" line="382"/>
            </method>
            <method name="testPaintDebugInfoDebugFullBoundsNoChildNodes" type="void" line="388">
                <declaration name="layer" type="PLayer" line="389"/>
                <declaration name="image" type="BufferedImage" line="391"/>
                <declaration name="graphics" type="Graphics2D" line="392"/>
                <declaration name="paintContext" type="PPaintContext" line="393"/>
            </method>
            <method name="testPickAfterChildrenNotPicked" type="void" line="399">
                <declaration name="pickPath" type="PPickPath" line="400"/>
            </method>
            <method name="testLocalToViewPoint2D" type="void" line="403">
                <declaration name="local" type="Point2D" line="404"/>
            </method>
            <method name="testLocalToViewPoint2DTranslateView" type="void" line="409">
                <declaration name="local" type="Point2D" line="411"/>
            </method>
            <method name="testLocalToViewPoint2DScaleView" type="void" line="416">
                <declaration name="local" type="Point2D" line="418"/>
            </method>
            <method name="testLocalToViewDimension2D" type="void" line="423">
                <declaration name="local" type="Dimension2D" line="424"/>
            </method>
            <method name="testLocalToViewDimension2DTranslateView" type="void" line="429">
                <declaration name="local" type="Dimension2D" line="431"/>
            </method>
            <method name="testLocalToViewDimension2DScaleView" type="void" line="436">
                <declaration name="local" type="Dimension2D" line="438"/>
            </method>
            <method name="testViewToLocalPoint2D" type="void" line="443">
                <declaration name="view" type="Point2D" line="444"/>
            </method>
            <method name="testViewToLocalPoint2DTranslateView" type="void" line="449">
                <declaration name="view" type="Point2D" line="451"/>
            </method>
            <method name="testViewToLocalPoint2DScaleView" type="void" line="456">
                <declaration name="view" type="Point2D" line="458"/>
            </method>
            <method name="testViewToLocalDimension2D" type="void" line="463">
                <declaration name="view" type="Dimension2D" line="464"/>
            </method>
            <method name="testViewToLocalDimension2DTranslateView" type="void" line="469">
                <declaration name="view" type="Dimension2D" line="471"/>
            </method>
            <method name="testViewToLocalDimension2DScaleView" type="void" line="476">
                <declaration name="view" type="Dimension2D" line="478"/>
            </method>
            <method name="testPickWithoutIntersectionStillContainsCamera" type="void" line="483">
                <declaration name="pickPath" type="PPickPath" line="485"/>
            </method>
            <class name="MockPComponent" line="489">
                <implements interface="PComponent"/>
                <method name="paintImmediately" type="void" line="490"/>
                <method name="popCursor" type="void" line="492"/>
                <method name="pushCursor" type="void" line="494">
                    <params>
                        <param name="cursor" type="Cursor"/>
                    </params>
                </method>
                <method name="repaint" type="void" line="496">
                    <params>
                        <param name="bounds" type="PBounds"/>
                    </params>
                </method>
                <method name="setInteracting" type="void" line="498">
                    <params>
                        <param name="interacting" type="boolean"/>
                    </params>
                </method>
            </class>
            <class name="MockPLayer" line="501">
                <extends class="PLayer"/>
                <javadoc line="501">
                    Mock PLayer.  Should consider using mock library in version 2.0.                    
                </javadoc>
                <declaration name="serialVersionUID" type="long" line="505"/>
                <declaration name="fullBoundsReferenceCalled" type="boolean" line="506"/>
                <declaration name="fullPaintCalled" type="boolean" line="507"/>
                <declaration name="getAllNodesCalled" type="boolean" line="508"/>
                <declaration name="fullPickCalled" type="boolean" line="509"/>
                <javadoc line="510">
                    {@inheritDoc}                    
                </javadoc>
                <method name="getFullBoundsReference" type="PBounds" line="513"/>
                <javadoc line="517">
                    {@inheritDoc}                    
                </javadoc>
                <method name="fullPaint" type="void" line="520">
                    <params>
                        <param name="paintContext" type="PPaintContext"/>
                    </params>
                </method>
                <javadoc line="524">
                    {@inheritDoc}                    
                </javadoc>
                <method name="getAllNodes" type="Collection" line="527">
                    <params>
                        <param name="filter" type="PNodeFilter"/>
                        <param name="nodes" type="Collection"/>
                    </params>
                </method>
                <javadoc line="531">
                    {@inheritDoc}                    
                </javadoc>
                <method name="fullPick" type="boolean" line="534">
                    <params>
                        <param name="pickPath" type="PPickPath"/>
                    </params>
                </method>
                <method name="fullBoundsReferenceCalled" type="boolean" line="538"/>
                <method name="fullPaintCalled" type="boolean" line="541"/>
                <method name="getAllNodesCalled" type="boolean" line="544"/>
                <method name="fullPickCalled" type="boolean" line="547"/>
            </class>
            <class name="TooFewLayersCamera" line="551">
                <extends class="PCamera"/>
                <javadoc line="551">
                    Subclass of PCamera that advertises too few layers.                    
                </javadoc>
                <declaration name="serialVersionUID" type="long" line="555"/>
                <javadoc line="556">
                    {@inheritDoc}                    
                </javadoc>
                <method name="getLayerCount" type="int" line="559"/>
            </class>
            <class name="TooManyLayersCamera" line="563">
                <extends class="PCamera"/>
                <javadoc line="563">
                    Subclass of PCamera that advertises too many layers.                    
                </javadoc>
                <declaration name="serialVersionUID" type="long" line="567"/>
                <javadoc line="568">
                    {@inheritDoc}                    
                </javadoc>
                <method name="getLayerCount" type="int" line="571"/>
            </class>
        </class>
    </source>