<?xml version="1.0" encoding="UTF-8"?>
    <source package="edu.umd.cs.piccolo">
        <import package="java.awt.event.ActionEvent"/>
        <import package="java.awt.event.ActionListener"/>
        <import package="javax.swing.Timer"/>
        <import package="junit.framework.TestCase"/>
        <import package="edu.umd.cs.piccolo.activities.PActivity"/>
        <class name="PRootTest" line="7">
            <extends class="TestCase"/>
            <javadoc line="7">
                Unit test for PRoot.                
            </javadoc>
            <declaration name="root" type="PRoot" line="11"/>
            <declaration name="mockListener" type="MockPropertyChangeListener" line="12"/>
            <method name="setUp" type="void" line="13"/>
            <method name="testActivityScheduleIsNotNullByDefault" type="void" line="17"/>
            <method name="testGetRootReturnsItself" type="void" line="20"/>
            <method name="testGetDefaultInputManagerIsNotNullByDefault" type="void" line="23"/>
            <method name="testAddInputSourceFirePropertyChangeEvent" type="void" line="26">
                <anonymous_class line="28">
                    <method name="processInput" type="void" line="29"/>
                </anonymous_class>
                <declaration name="newSource" type="PRoot.InputSource" line="28"/>
            </method>
            <method name="testCreateTimerReturnsATimer" type="void" line="36">
                <anonymous_class line="37">
                    <method name="actionPerformed" type="void" line="38">
                        <params>
                            <param name="arg0" type="ActionEvent"/>
                        </params>
                    </method>
                </anonymous_class>
                <declaration name="timer" type="Timer" line="37"/>
            </method>
            <method name="testCreateTimerReturnsATimerWhenDelayIs0" type="void" line="44">
                <anonymous_class line="45">
                    <method name="actionPerformed" type="void" line="46">
                        <params>
                            <param name="arg0" type="ActionEvent"/>
                        </params>
                    </method>
                </anonymous_class>
                <declaration name="timer" type="Timer" line="45"/>
            </method>
            <method name="testRemoveInputSourceDoesNothingIfStranger" type="void" line="52">
                <anonymous_class line="53">
                    <method name="processInput" type="void" line="54"/>
                </anonymous_class>
                <declaration name="strangeSource" type="PRoot.InputSource" line="53"/>
            </method>
            <method name="testGlobalTimeIsNotZeroBeforeCallToProcessInputs" type="void" line="60"/>
            <method name="testProcessInputDelegatesToInputSources" type="void" line="63">
                <declaration name="newSource" type="MockInputSource" line="64"/>
            </method>
            <method name="testProcessInputProcessesActivities" type="void" line="69">
                <declaration name="activity" type="MockPActivity" line="70"/>
            </method>
            <method name="testSetFullBoundsInvalidPerists" type="void" line="75"/>
            <method name="testSetChildBoundsInvalidPerists" type="void" line="79"/>
            <method name="testSetPaintInvalidPersists" type="void" line="83"/>
            <method name="testSetChildPaintInvalidPersists" type="void" line="87"/>
            <method name="testWaitForActivitiesDoesSo" type="void" line="91">
                <declaration name="activity" type="MockPActivity" line="92"/>
            </method>
            <class name="MockInputSource" line="97">
                <implements interface="PRoot.InputSource"/>
                <declaration name="processInputCalls" type="int" line="98"/>
                <method name="getProcessInputCalls" type="int" line="99"/>
                <method name="processInput" type="void" line="102"/>
            </class>
            <class name="MockPActivity" line="106">
                <extends class="PActivity"/>
                <declaration name="activityStarted" type="boolean" line="107"/>
                <declaration name="activityFinished" type="boolean" line="108"/>
                <method name="MockPActivity" type="constructor" line="109">
                    <params>
                        <param name="aDuration" type="long"/>
                    </params>
                </method>
                <method name="isActivityFished" type="boolean" line="112"/>
                <method name="isActivityStarted" type="boolean" line="115"/>
                <method name="activityStarted" type="void" line="118"/>
                <method name="activityFinished" type="void" line="122"/>
            </class>
        </class>
    </source>