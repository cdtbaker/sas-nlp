<?xml version="1.0" encoding="UTF-8"?>
    <source package="edu.umd.cs.piccolo">
        <import package="java.awt.event.ActionEvent"/>
        <import package="java.awt.event.ActionListener"/>
        <import package="javax.swing.Timer"/>
        <import package="junit.framework.TestCase"/>
        <import package="edu.umd.cs.piccolo.activities.PActivity"/>
        <class name="PRootTest" line="39">
            <extends class="TestCase"/>
            <javadoc line="39">
                Unit test for PRoot.                
            </javadoc>
            <declaration name="root" type="PRoot" line="43"/>
            <declaration name="mockListener" type="MockPropertyChangeListener" line="44"/>
            <method name="setUp" type="void" line="46"/>
            <method name="testActivityScheduleIsNotNullByDefault" type="void" line="51"/>
            <method name="testGetRootReturnsItself" type="void" line="55"/>
            <method name="testGetDefaultInputManagerIsNotNullByDefault" type="void" line="59"/>
            <method name="testAddInputSourceFirePropertyChangeEvent" type="void" line="63">
                <anonymous_class line="66">
                    <method name="processInput" type="void" line="67"/>
                </anonymous_class>
                <declaration name="newSource" type="PRoot.InputSource" line="66"/>
            </method>
            <method name="testCreateTimerReturnsATimer" type="void" line="76">
                <anonymous_class line="77">
                    <method name="actionPerformed" type="void" line="78">
                        <params>
                            <param name="arg0" type="ActionEvent"/>
                        </params>
                    </method>
                </anonymous_class>
                <declaration name="timer" type="Timer" line="77"/>
            </method>
            <method name="testCreateTimerReturnsATimerWhenDelayIs0" type="void" line="84">
                <anonymous_class line="85">
                    <method name="actionPerformed" type="void" line="86">
                        <params>
                            <param name="arg0" type="ActionEvent"/>
                        </params>
                    </method>
                </anonymous_class>
                <declaration name="timer" type="Timer" line="85"/>
            </method>
            <method name="testRemoveInputSourceDoesNothingIfStranger" type="void" line="92">
                <anonymous_class line="93">
                    <method name="processInput" type="void" line="94"/>
                </anonymous_class>
                <declaration name="strangeSource" type="PRoot.InputSource" line="93"/>
            </method>
            <method name="testGlobalTimeIsNotZeroBeforeCallToProcessInputs" type="void" line="102"/>
            <method name="testProcessInputDelegatesToInputSources" type="void" line="106">
                <declaration name="newSource" type="MockInputSource" line="107"/>
            </method>
            <method name="testProcessInputProcessesActivities" type="void" line="113">
                <declaration name="activity" type="MockPActivity" line="114"/>
            </method>
            <method name="testSetFullBoundsInvalidPerists" type="void" line="121"/>
            <method name="testSetChildBoundsInvalidPerists" type="void" line="126"/>
            <method name="testSetPaintInvalidPersists" type="void" line="131"/>
            <method name="testSetChildPaintInvalidPersists" type="void" line="136"/>
            <method name="testWaitForActivitiesDoesSo" type="void" line="141">
                <declaration name="activity" type="MockPActivity" line="142"/>
            </method>
            <class name="MockInputSource" line="148">
                <implements interface="PRoot.InputSource"/>
                <declaration name="processInputCalls" type="int" line="149"/>
                <method name="getProcessInputCalls" type="int" line="151"/>
                <method name="processInput" type="void" line="155"/>
            </class>
            <class name="MockPActivity" line="160">
                <extends class="PActivity"/>
                <declaration name="activityStarted" type="boolean" line="161"/>
                <declaration name="activityFinished" type="boolean" line="162"/>
                <method name="MockPActivity" type="constructor" line="164">
                    <params>
                        <param name="aDuration" type="long"/>
                    </params>
                </method>
                <method name="isActivityFished" type="boolean" line="168"/>
                <method name="isActivityStarted" type="boolean" line="172"/>
                <method name="activityStarted" type="void" line="176"/>
                <method name="activityFinished" type="void" line="181"/>
            </class>
        </class>
    </source>