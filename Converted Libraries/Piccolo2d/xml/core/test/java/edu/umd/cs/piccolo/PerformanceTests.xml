<?xml version="1.0" encoding="UTF-8"?>
    <source package="edu.umd.cs.piccolo">
        <import package="java.awt.Graphics2D"/>
        <import package="java.awt.GraphicsConfiguration"/>
        <import package="java.awt.GraphicsEnvironment"/>
        <import package="java.awt.Transparency"/>
        <import package="java.awt.geom.AffineTransform"/>
        <import package="java.awt.geom.GeneralPath"/>
        <import package="java.awt.geom.NoninvertibleTransformException"/>
        <import package="java.awt.geom.Rectangle2D"/>
        <import package="java.awt.image.BufferedImage"/>
        <import package="java.util.ArrayList"/>
        <import package="java.util.Random"/>
        <import package="junit.framework.TestCase"/>
        <import package="edu.umd.cs.piccolo.nodes.PPath"/>
        <import package="edu.umd.cs.piccolo.util.PAffineTransform"/>
        <import package="edu.umd.cs.piccolo.util.PBounds"/>
        <class name="PerformanceTests" line="48">
            <extends class="TestCase"/>
            <javadoc line="48">
                Performance tests.                
            </javadoc>
            <declaration name="log" type="PerformanceLog" line="53"/>
            <declaration name="NUMBER_NODES" type="int" line="54"/>
            <method name="PerformanceTests" type="constructor" line="56">
                <params>
                    <param name="name" type="String"/>
                </params>
            </method>
            <method name="testRunPerformanceTests" type="void" line="60">
                <comment line="66">
                    three times to warm up JVM                    
                </comment>
                <comment line="74">
                    removeNodes();                    
                </comment>
                <comment line="77">
                    renderSpeed();                    
                </comment>
                <scope line="61"/>
                <scope line="66">
                    <scope line="77"/>
                </scope>
            </method>
            <method name="createNodes" type="void" line="84">
                <declaration name="nodes" type="PNode[]" line="85"/>
                <scope line="88"/>
            </method>
            <method name="createPaths" type="void" line="94">
                <declaration name="nodes" type="PNode[]" line="95"/>
                <scope line="98"/>
                <declaration name="r" type="Random" line="103"/>
                <scope line="104"/>
            </method>
            <method name="addNodes" type="void" line="109">
                <declaration name="parent" type="PNode" line="110"/>
                <declaration name="nodes" type="PNode[]" line="111"/>
                <scope line="113"/>
                <scope line="118"/>
            </method>
            <method name="removeNodes" type="void" line="124">
                <comment line="154">
                    for (int i = NUMBER_NODES - 1; i &gt;= 0; i--) {
                     parent.removeChild(nodes[i]);
                     }                    
                </comment>
                <declaration name="parent" type="PNode" line="125"/>
                <declaration name="nodes" type="PNode[]" line="126"/>
                <declaration name="list" type="ArrayList" line="127"/>
                <scope line="129"/>
                <scope line="133"/>
                <scope line="139"/>
                <scope line="147"/>
            </method>
            <method name="translateNodes" type="void" line="171">
                <comment line="189">
                    nodes[i].translateBy(100.01, 100.2);
                     nodes[i].scaleBy(0.9);                    
                </comment>
                <comment line="195">
                    parent.validateFullBounds(); now protected.                    
                </comment>
                <comment line="196">
                    calls validateFullBounds as a side                    
                </comment>
                <comment line="197">
                    effect.                    
                </comment>
                <declaration name="parent" type="PNode" line="172"/>
                <declaration name="nodes" type="PNode[]" line="173"/>
                <declaration name="b" type="PBounds" line="174"/>
                <declaration name="r" type="Random" line="175"/>
                <scope line="177"/>
                <scope line="185"/>
            </method>
            <method name="fullIntersectsNodes" type="void" line="208">
                <comment line="219">
                    parent.validateFullBounds(); // now protected                    
                </comment>
                <comment line="220">
                    calls validateFullBounds as a side                    
                </comment>
                <comment line="221">
                    effect.                    
                </comment>
                <declaration name="parent" type="PNode" line="209"/>
                <declaration name="nodes" type="PNode[]" line="210"/>
                <declaration name="b" type="PBounds" line="211"/>
                <scope line="213"/>
                <scope line="223"/>
            </method>
            <method name="memorySizeOfNodes" type="void" line="229">
                <declaration name="nodes" type="PNode[]" line="230"/>
                <declaration name="startTotalMemory" type="long" line="232"/>
                <declaration name="startFree" type="long" line="233"/>
                <declaration name="endFree" type="long" line="234"/>
                <declaration name="endTotal" type="long" line="235"/>
                <scope line="237"/>
            </method>
            <method name="copyNodes" type="void" line="250">
                <declaration name="parent" type="PNode" line="251"/>
                <declaration name="nodes" type="PNode[]" line="252"/>
                <scope line="254"/>
            </method>
            <method name="costOfNoBoundsCache" type="void" line="264">
                <declaration name="nodes" type="PNode[]" line="265"/>
                <declaration name="bounds" type="PBounds[]" line="266"/>
                <declaration name="pickRect" type="PBounds" line="267"/>
                <declaration name="r" type="Random" line="268"/>
                <scope line="270"/>
                <scope line="278"/>
                <scope line="284"/>
                <scope line="290"/>
                <declaration name="b" type="PBounds" line="295"/>
                <scope line="297"/>
            </method>
            <method name="renderSpeed" type="void" line="304">
                <comment line="325">
                    transorm1.scale(0.5, 0.5);                    
                </comment>
                <declaration name="r" type="Random" line="305"/>
                <declaration name="at" type="PAffineTransform" line="306"/>
                <scope line="311"/>
                <declaration name="height" type="int" line="316"/>
                <declaration name="width" type="int" line="317"/>
                <declaration name="scale1" type="double" line="319"/>
                <declaration name="scale2" type="double" line="320"/>
                <declaration name="scaleFlip" type="boolean" line="321"/>
                <declaration name="transorm1" type="PAffineTransform" line="323"/>
                <declaration name="transorm2" type="PAffineTransform" line="326"/>
                <declaration name="graphicsConfiguration" type="GraphicsConfiguration" line="330"/>
                <declaration name="result" type="BufferedImage" line="332"/>
                <declaration name="g2" type="Graphics2D" line="334"/>
                <scope line="337">
                    <scope line="338"/>
                    <scope line="342"/>
                </scope>
                <scope line="352"/>
                <scope line="360">
                    <scope line="361"/>
                    <scope line="365"/>
                </scope>
                <declaration name="rect" type="Rectangle2D" line="372"/>
                <declaration name="path" type="GeneralPath" line="373"/>
                <scope line="376"/>
                <scope line="382"/>
                <scope line="388"/>
            </method>
        </class>
    </source>