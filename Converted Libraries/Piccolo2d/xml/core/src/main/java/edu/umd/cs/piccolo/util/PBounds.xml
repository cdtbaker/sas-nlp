<?xml version="1.0" encoding="UTF-8"?>
    <source package="edu.umd.cs.piccolo.util">
        <import package="java.awt.geom.Dimension2D"/>
        <import package="java.awt.geom.Point2D"/>
        <import package="java.awt.geom.Rectangle2D"/>
        <import package="java.io.IOException"/>
        <import package="java.io.ObjectInputStream"/>
        <import package="java.io.ObjectOutputStream"/>
        <import package="java.io.Serializable"/>
        <class name="PBounds" line="39">
            <extends class="Rectangle2D.Double"/>
            <implements interface="Serializable"/>
            <javadoc line="39">
                &lt;b&gt;PBounds&lt;/b&gt; is simply a Rectangle2D.Double with extra methods that more
                  properly deal with the case when the rectangle is &quot;empty&quot;. A PBounds has an
                  extra bit to store emptiness. In this state, adding new geometry replaces the
                  current geometry. A PBounds is emptied with the reset() method. A useful side
                  effect of the reset method is that it only modifies the fIsEmpty variable,
                  the other x, y, with, height variables are left alone. This is used by
                  Piccolo&apos;s layout management system to see if a the full bounds of a node has
                  really changed when it is recomputed. See PNode.validateLayout.
                  &lt;P&gt;                
                <version>
                    1.0                    
                </version>
                <author>
                    Jesse Grosjean                    
                </author>
            </javadoc>
            <declaration name="serialVersionUID" type="long" line="54"/>
            <javadoc line="54">
                Allows for future serialization code to understand versioned binary
                  formats.                
            </javadoc>
            <declaration name="isEmpty" type="boolean" line="60"/>
            <javadoc line="62">
                Creates an empty bounds.                
            </javadoc>
            <method name="PBounds" type="constructor" line="65"/>
            <javadoc line="69">
                Creates a bounds identical to the one provided.                
                <param>
                    aBounds bounds to be copied                    
                </param>
            </javadoc>
            <method name="PBounds" type="constructor" line="74">
                <params>
                    <param name="aBounds" type="PBounds"/>
                </params>
            </method>
            <javadoc line="79">
                Creates a bounds with the same shape as the rectangle provided.                
                <param>
                    aBounds rectangle to be copied                    
                </param>
            </javadoc>
            <method name="PBounds" type="constructor" line="84">
                <params>
                    <param name="aBounds" type="Rectangle2D"/>
                </params>
            </method>
            <javadoc line="89">
                Constructs a PBounds object with the given center point and the specified
                  insets.                
                <param>
                    aCenterPoint resulting center point of the PBounds object                    
                </param>
                <param>
                    insetX distance from left and right the center should be                    
                </param>
                <param>
                    insetY distance from top and bottom the center should be                    
                </param>
            </javadoc>
            <method name="PBounds" type="constructor" line="97">
                <params>
                    <param name="aCenterPoint" type="Point2D"/>
                    <param name="insetX" type="double"/>
                    <param name="insetY" type="double"/>
                </params>
            </method>
            <javadoc line="102">
                Constructs a PBounds object at the given coordinates with the given
                  dimensions.                
                <param>
                    x left of bounds                    
                </param>
                <param>
                    y top of bounds                    
                </param>
                <param>
                    width width of bounds                    
                </param>
                <param>
                    height height of bounds                    
                </param>
            </javadoc>
            <method name="PBounds" type="constructor" line="111">
                <params>
                    <param name="x" type="double"/>
                    <param name="y" type="double"/>
                    <param name="width" type="double"/>
                    <param name="height" type="double"/>
                </params>
            </method>
            <javadoc line="116">
                Returns a clone of this node.                
                <return>
                    cloned copy of this bounds                    
                </return>
            </javadoc>
            <method name="clone" type="Object" line="121"/>
            <javadoc line="125">
                Returns true if this bounds has been flagged as empty. Not necessarily if
                  it is empty.                
                <return>
                    true if bounds marked as empty                    
                </return>
            </javadoc>
            <method name="isEmpty" type="boolean" line="131"/>
            <javadoc line="135">
                Flags this bounds as empty.                
                <return>
                    itself for chaining                    
                </return>
            </javadoc>
            <method name="reset" type="PBounds" line="140"/>
            <javadoc line="145">
                Resets the bounds to (0,0,0,0) and flags it as empty.                
                <return>
                    itself for chaining                    
                </return>
            </javadoc>
            <method name="resetToZero" type="PBounds" line="150"/>
            <javadoc line="159">
                Sets the bounds to the same shape as the rectangle. And flags the bounds
                  as not empty.                
                <param>
                    r rectangle to copy                    
                </param>
            </javadoc>
            <method name="setRect" type="void" line="165">
                <params>
                    <param name="r" type="Rectangle2D"/>
                </params>
            </method>
            <javadoc line="170">
                Sets the bounds to the same shape as the bounds provided. And flags the
                  bounds as not empty.                
                <param>
                    b bounds to copy                    
                </param>
            </javadoc>
            <method name="setRect" type="void" line="176">
                <params>
                    <param name="b" type="PBounds"/>
                </params>
            </method>
            <javadoc line="184">
                Sets the shape of the bounds to the position and dimension provided.                
                <param>
                    x new left of bounds                    
                </param>
                <param>
                    y new top of bounds                    
                </param>
                <param>
                    width new width of bounds                    
                </param>
                <param>
                    height new height of bounds                    
                </param>
            </javadoc>
            <method name="setRect" type="void" line="192">
                <params>
                    <param name="x" type="double"/>
                    <param name="y" type="double"/>
                    <param name="width" type="double"/>
                    <param name="height" type="double"/>
                </params>
            </method>
            <javadoc line="200">
                Grows the bounds to contain the coordinate provided.                
                <param>
                    newx x component of point                    
                </param>
                <param>
                    newy y component of point                    
                </param>
            </javadoc>
            <method name="add" type="void" line="206">
                <params>
                    <param name="newx" type="double"/>
                    <param name="newy" type="double"/>
                </params>
                <scope line="207"/>
                <scope line="211"/>
            </method>
            <javadoc line="216">
                Grows bounds to contain the rectangle if needed.                
                <param>
                    r rectangle being added                    
                </param>
            </javadoc>
            <method name="add" type="void" line="221">
                <params>
                    <param name="r" type="Rectangle2D"/>
                </params>
                <scope line="222"/>
                <scope line="225"/>
            </method>
            <javadoc line="230">
                Changes this bounds to contain the provided bounds.                
                <param>
                    bounds bounds being added                    
                </param>
            </javadoc>
            <method name="add" type="void" line="235">
                <params>
                    <param name="bounds" type="PBounds"/>
                </params>
                <scope line="236"/>
                <scope line="239"/>
                <scope line="246">
                    <declaration name="x1" type="double" line="247"/>
                    <declaration name="y1" type="double" line="248"/>
                    <declaration name="x2" type="double" line="249"/>
                    <declaration name="y2" type="double" line="250"/>
                </scope>
            </method>
            <javadoc line="260">
                Returns the x,y coordinate of the bounds.                
                <return>
                    coordinate of the bounds                    
                </return>
            </javadoc>
            <method name="getOrigin" type="Point2D" line="265"/>
            <javadoc line="269">
                Changes the origin of these bounds. And flags it as non-empty.                
                <param>
                    x new x component of bounds                    
                </param>
                <param>
                    y new y component of the bounds                    
                </param>
                <return>
                    the modified PBounds with its new origin                    
                </return>
            </javadoc>
            <method name="setOrigin" type="PBounds" line="276">
                <params>
                    <param name="x" type="double"/>
                    <param name="y" type="double"/>
                </params>
            </method>
            <javadoc line="283">
                Returns the size of the bounds.                
                <return>
                    size of the bounds                    
                </return>
            </javadoc>
            <method name="getSize" type="Dimension2D" line="288"/>
            <javadoc line="292">
                Changes the size of the bounds, but retains the origin.                
                <param>
                    width new width of the bounds                    
                </param>
                <param>
                    height new height of the bounds                    
                </param>
            </javadoc>
            <method name="setSize" type="void" line="298">
                <params>
                    <param name="width" type="double"/>
                    <param name="height" type="double"/>
                </params>
            </method>
            <javadoc line="302">
                Returns the midpoint of the bounds.                
                <return>
                    midpoint of the bounds                    
                </return>
            </javadoc>
            <method name="getCenter2D" type="Point2D" line="307"/>
            <javadoc line="311">
                Translates the bounds by the given deltas.                
                <param>
                    dx amount to move x                    
                </param>
                <param>
                    dy amount to move y                    
                </param>
                <return>
                    itself for chaining                    
                </return>
            </javadoc>
            <method name="moveBy" type="PBounds" line="318">
                <params>
                    <param name="dx" type="double"/>
                    <param name="dy" type="double"/>
                </params>
            </method>
            <javadoc line="323">
                Rounds the rectangle to the next largest bounds who&apos;s measurements are
                  integers. Note: this is not the same as rounding its measurements.                
            </javadoc>
            <method name="expandNearestIntegerDimensions" type="void" line="327"/>
            <javadoc line="334">
                Adjust the measurements of this bounds so that they are the amounts given
                  &quot;in&quot; from their previous border.                
                <param>
                    dx amount to move in from border along horizontal axis                    
                </param>
                <param>
                    dy amount to move in from border along vertical axis                    
                </param>
                <return>
                    itself for chaining                    
                </return>
            </javadoc>
            <method name="inset" type="PBounds" line="342">
                <params>
                    <param name="dx" type="double"/>
                    <param name="dy" type="double"/>
                </params>
            </method>
            <javadoc line="347">
                Returns the required translation in order for this bounds origin to sit
                  on the center of the provided rectangle.                
                <param>
                    targetBounds rectangle to measure the center of                    
                </param>
                <return>
                    the delta required to move to center of the targetBounds                    
                </return>
            </javadoc>
            <method name="deltaRequiredToCenter" type="PDimension" line="354">
                <params>
                    <param name="targetBounds" type="Rectangle2D"/>
                </params>
                <declaration name="result" type="PDimension" line="355"/>
                <declaration name="xDelta" type="double" line="356"/>
                <declaration name="yDelta" type="double" line="357"/>
            </method>
            <javadoc line="362">
                Returns the required translation in order for these to contain the bounds
                  provided.                
                <param>
                    targetBounds rectangle to measure the center of                    
                </param>
                <return>
                    the delta required in order for the bounds to overlap completely
                      the targetBounds                    
                </return>
            </javadoc>
            <method name="deltaRequiredToContain" type="PDimension" line="370">
                <params>
                    <param name="targetBounds" type="Rectangle2D"/>
                </params>
                <declaration name="result" type="PDimension" line="371"/>
                <scope line="373"/>
                <declaration name="targetMaxX" type="double" line="377"/>
                <declaration name="targetMinX" type="double" line="378"/>
                <declaration name="targetMaxY" type="double" line="379"/>
                <declaration name="targetMinY" type="double" line="380"/>
                <declaration name="maxX" type="double" line="381"/>
                <declaration name="minX" type="double" line="382"/>
                <declaration name="maxY" type="double" line="383"/>
                <declaration name="minY" type="double" line="384"/>
                <scope line="386">
                    <declaration name="difMaxX" type="double" line="387"/>
                    <declaration name="difMinX" type="double" line="388"/>
                    <scope line="389"/>
                    <scope line="392"/>
                </scope>
                <scope line="397">
                    <declaration name="difMaxY" type="double" line="398"/>
                    <declaration name="difMinY" type="double" line="399"/>
                    <scope line="400"/>
                    <scope line="403"/>
                </scope>
            </method>
            <method name="writeObject" type="void" line="411">
                <params>
                    <param name="out" type="ObjectOutputStream"/>
                </params>
            </method>
            <method name="readObject" type="void" line="419">
                <params>
                    <param name="in" type="ObjectInputStream"/>
                </params>
            </method>
            <javadoc line="427">
                Returns a string representation of this PBounds for debugging purposes.                
                <return>
                    string representation of this PBounds                    
                </return>
            </javadoc>
            <method name="toString" type="String" line="432">
                <declaration name="result" type="StringBuffer" line="433"/>
                <scope line="438"/>
                <scope line="441"/>
            </method>
        </class>
    </source>