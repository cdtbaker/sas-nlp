<?xml version="1.0" encoding="UTF-8"?>
    <source package="edu.umd.cs.piccolo.event">
        <import package="java.awt.event.FocusEvent"/>
        <import package="java.awt.event.InputEvent"/>
        <import package="java.awt.event.KeyEvent"/>
        <import package="java.awt.event.MouseEvent"/>
        <import package="java.awt.event.MouseWheelEvent"/>
        <class name="PInputEventFilter" line="7">
            <javadoc line="7">
                &lt;b&gt;PInputEventFilter&lt;/b&gt; is a class that filters input events based on the
                  events modifiers and type. Any PBasicInputEventHandler that is associated
                  with an event filter will only receive events that pass through the filter.
                  &lt;P&gt;
                  To be accepted events must contain all the modifiers listed in the andMask,
                  at least one of the modifiers listed in the orMask, and none of the modifiers
                  listed in the notMask. The event filter also lets you specify specific event
                  types (mousePressed, released, ...) to accept or reject.
                  &lt;P&gt;
                  If the event filter is set to consume, then it will call consume on any event
                  that it successfully accepts.
                  &lt;P&gt;                
                <version>
                    1.0                    
                </version>
                <author>
                    Jesse Grosjean                    
                </author>
            </javadoc>
            <declaration name="ALL_MODIFIERS_MASK" type="int" line="24"/>
            <javadoc line="24">
                Mask representing all possible modifiers.                
            </javadoc>
            <declaration name="andMask" type="int" line="28"/>
            <javadoc line="28">
                If event modifiers don&apos;t match this exactly, event it filtered.                
            </javadoc>
            <declaration name="orMask" type="int" line="32"/>
            <javadoc line="32">
                If event modifiers have no bits from orMask enabled, event is filtered.                
            </javadoc>
            <declaration name="notMask" type="int" line="36"/>
            <javadoc line="36">
                If event modifier has any of the notMask bits on, it is not accepted.                
            </javadoc>
            <declaration name="clickCount" type="short" line="40"/>
            <javadoc line="40">
                Number of clicks that an incoming event must have to be accepted.                
            </javadoc>
            <declaration name="marksAcceptedEventsAsHandled" type="boolean" line="44"/>
            <javadoc line="44">
                Whether accepted events should be marked as handled.                
            </javadoc>
            <declaration name="acceptsAlreadyHandledEvents" type="boolean" line="48"/>
            <javadoc line="48">
                Whether handled events should be immediately filtered.                
            </javadoc>
            <declaration name="acceptsKeyPressed" type="boolean" line="52"/>
            <javadoc line="52">
                Whether key pressed events are accepted.                
            </javadoc>
            <declaration name="acceptsKeyReleased" type="boolean" line="56"/>
            <javadoc line="56">
                Whether key released events are accepted.                
            </javadoc>
            <declaration name="acceptsKeyTyped" type="boolean" line="60"/>
            <javadoc line="60">
                Whether key typed events are accepted.                
            </javadoc>
            <declaration name="acceptsMouseClicked" type="boolean" line="64"/>
            <javadoc line="64">
                Whether mouse clicked events are accepted.                
            </javadoc>
            <declaration name="acceptsMouseDragged" type="boolean" line="68"/>
            <javadoc line="68">
                Whether mouse dragged events are accepted.                
            </javadoc>
            <declaration name="acceptsMouseEntered" type="boolean" line="72"/>
            <javadoc line="72">
                Whether mouse entered events are accepted.                
            </javadoc>
            <declaration name="acceptsMouseExited" type="boolean" line="76"/>
            <javadoc line="76">
                Whether mouse exited events are accepted.                
            </javadoc>
            <declaration name="acceptsMouseMoved" type="boolean" line="80"/>
            <javadoc line="80">
                Whether mouse moved events are accepted.                
            </javadoc>
            <declaration name="acceptsMousePressed" type="boolean" line="84"/>
            <javadoc line="84">
                Whether mouse pressed events are accepted.                
            </javadoc>
            <declaration name="acceptsMouseReleased" type="boolean" line="88"/>
            <javadoc line="88">
                Whether mouse released events are accepted.                
            </javadoc>
            <declaration name="acceptsMouseWheelRotated" type="boolean" line="92"/>
            <javadoc line="92">
                Whether mouse wheel rotated events are accepted.                
            </javadoc>
            <declaration name="acceptsFocusEvents" type="boolean" line="96"/>
            <javadoc line="96">
                Whether focus events are accepted.                
            </javadoc>
            <javadoc line="100">
                Creates a PInputEventFilter that accepts everything.                
            </javadoc>
            <method name="PInputEventFilter" type="constructor" line="103"/>
            <javadoc line="106">
                Creates a PInputEventFilter that will accept events if they have the
                  given andMask.                
                <param>
                    andMask exact pattern event modifiers must be to get accepted                    
                </param>
            </javadoc>
            <method name="PInputEventFilter" type="constructor" line="111">
                <params>
                    <param name="andMask" type="int"/>
                </params>
            </method>
            <javadoc line="115">
                Creates a PInputEventFilter that will accept events if they have the
                  given andMask and do not contain any of the bits in the notMask.                
                <param>
                    andMask exact pattern event modifiers must be to get accepted                    
                </param>
                <param>
                    notMask if any or these bits are on event is not accepted                    
                </param>
            </javadoc>
            <method name="PInputEventFilter" type="constructor" line="121">
                <params>
                    <param name="andMask" type="int"/>
                    <param name="notMask" type="int"/>
                </params>
            </method>
            <javadoc line="125">
                Returns true if the passed event is one that is accepted.                
                <param>
                    event Event under consideration                    
                </param>
                <param>
                    type The type of event encoded as the PInputEvent                    
                </param>
                <return>
                    true if event is accepted                    
                </return>
            </javadoc>
            <method name="acceptsEvent" type="boolean" line="131">
                <params>
                    <param name="event" type="PInputEvent"/>
                    <param name="type" type="int"/>
                </params>
                <declaration name="aResult" type="boolean" line="132"/>
                <declaration name="modifiers" type="int" line="133"/>
                <scope line="134"/>
                <scope line="137"/>
                <scope line="140">
                    <scope line="141"/>
                    <scope line="144"/>
                </scope>
                <scope line="148"/>
                <scope line="193"/>
            </method>
            <javadoc line="198">
                Makes this filter accept all mouse click combinations.                
            </javadoc>
            <method name="acceptAllClickCounts" type="void" line="201"/>
            <javadoc line="204">
                Makes the filter accept all event types.                
            </javadoc>
            <method name="acceptAllEventTypes" type="void" line="207"/>
            <javadoc line="221">
                Makes this filter accept absolutely everything.                
            </javadoc>
            <method name="acceptEverything" type="void" line="224"/>
            <javadoc line="231">
                Returns whether this filter accepts key pressed events.                
                <return>
                    true if filter accepts key pressed events                    
                </return>
            </javadoc>
            <method name="getAcceptsKeyPressed" type="boolean" line="235"/>
            <javadoc line="238">
                Returns whether this filter accepts key released events.                
                <return>
                    true if filter accepts key released events                    
                </return>
            </javadoc>
            <method name="getAcceptsKeyReleased" type="boolean" line="242"/>
            <javadoc line="245">
                Returns whether this filter accepts key typed events.                
                <return>
                    true if filter accepts key typed events                    
                </return>
            </javadoc>
            <method name="getAcceptsKeyTyped" type="boolean" line="249"/>
            <javadoc line="252">
                Returns whether this filter accepts mouse clicked events.                
                <return>
                    true if filter accepts mouse clicked events                    
                </return>
            </javadoc>
            <method name="getAcceptsMouseClicked" type="boolean" line="256"/>
            <javadoc line="259">
                Returns whether this filter accepts mouse dragged events.                
                <return>
                    true if filter accepts mouse dragged events                    
                </return>
            </javadoc>
            <method name="getAcceptsMouseDragged" type="boolean" line="263"/>
            <javadoc line="266">
                Returns whether this filter accepts mouse entered events.                
                <return>
                    true if filter accepts mouse entered events                    
                </return>
            </javadoc>
            <method name="getAcceptsMouseEntered" type="boolean" line="270"/>
            <javadoc line="273">
                Returns whether this filter accepts mouse exited events.                
                <return>
                    true if filter accepts mouse exited events                    
                </return>
            </javadoc>
            <method name="getAcceptsMouseExited" type="boolean" line="277"/>
            <javadoc line="280">
                Returns whether this filter accepts mouse moved events.                
                <return>
                    true if filter accepts mouse moved events                    
                </return>
            </javadoc>
            <method name="getAcceptsMouseMoved" type="boolean" line="284"/>
            <javadoc line="287">
                Returns whether this filter accepts mouse pressed events.                
                <return>
                    true if filter accepts mouse pressed events                    
                </return>
            </javadoc>
            <method name="getAcceptsMousePressed" type="boolean" line="291"/>
            <javadoc line="294">
                Returns whether this filter accepts mouse released events.                
                <return>
                    true if filter accepts mouse released events                    
                </return>
            </javadoc>
            <method name="getAcceptsMouseReleased" type="boolean" line="298"/>
            <javadoc line="301">
                Returns whether this filter accepts mouse wheel rotated events.                
                <return>
                    true if filter accepts mouse wheel rotated events                    
                </return>
            </javadoc>
            <method name="getAcceptsMouseWheelRotated" type="boolean" line="305"/>
            <javadoc line="308">
                Returns whether this filter accepts focus events.                
                <return>
                    true if filter accepts focus events                    
                </return>
            </javadoc>
            <method name="getAcceptsFocusEvents" type="boolean" line="312"/>
            <javadoc line="315">
                Returns whether this filter accepts events that have already been flagged
                  as handled.                
                <return>
                    true if filter accepts events that have already been flagged as
                      handled                    
                </return>
            </javadoc>
            <method name="getAcceptsAlreadyHandledEvents" type="boolean" line="321"/>
            <javadoc line="324">
                Returns whether this filter marks events as handled if they are accepted.                
                <return>
                    true if filter will mark events as filtered if they are accepted                    
                </return>
            </javadoc>
            <method name="getMarksAcceptedEventsAsHandled" type="boolean" line="328"/>
            <javadoc line="331">
                Flags all mouse click events as disallowed, regardless of button
                  configuration.                
            </javadoc>
            <method name="rejectAllClickCounts" type="void" line="335"/>
            <javadoc line="338">
                Configures filter so that no events will ever get accepted. By itself not
                  terribly useful, but it&apos;s a more restrictive starting point than
                  acceptAllEvents();                
            </javadoc>
            <method name="rejectAllEventTypes" type="void" line="343"/>
            <javadoc line="357">
                Sets the number of clicks that an incoming event must have to be accepted.                
                <param>
                    aClickCount number clicks that an incoming event must have to be accepted                    
                </param>
            </javadoc>
            <method name="setAcceptClickCount" type="void" line="361">
                <params>
                    <param name="aClickCount" type="short"/>
                </params>
            </method>
            <javadoc line="364">
                Sets whether this filter accepts key pressed events.                
                <param>
                    aBoolean whether filter should accept key pressed events                    
                </param>
            </javadoc>
            <method name="setAcceptsKeyPressed" type="void" line="368">
                <params>
                    <param name="aBoolean" type="boolean"/>
                </params>
            </method>
            <javadoc line="371">
                Sets whether this filter accepts key released events.                
                <param>
                    aBoolean whether filter should accept key released events                    
                </param>
            </javadoc>
            <method name="setAcceptsKeyReleased" type="void" line="375">
                <params>
                    <param name="aBoolean" type="boolean"/>
                </params>
            </method>
            <javadoc line="378">
                Sets whether this filter accepts key typed events.                
                <param>
                    aBoolean whether filter should accept key typed events                    
                </param>
            </javadoc>
            <method name="setAcceptsKeyTyped" type="void" line="382">
                <params>
                    <param name="aBoolean" type="boolean"/>
                </params>
            </method>
            <javadoc line="385">
                Sets whether this filter accepts mouse clicked events.                
                <param>
                    aBoolean whether filter should accept mouse clicked events                    
                </param>
            </javadoc>
            <method name="setAcceptsMouseClicked" type="void" line="389">
                <params>
                    <param name="aBoolean" type="boolean"/>
                </params>
            </method>
            <javadoc line="392">
                Sets whether this filter accepts mouse dragged events.                
                <param>
                    aBoolean whether filter should accept mouse dragged events                    
                </param>
            </javadoc>
            <method name="setAcceptsMouseDragged" type="void" line="396">
                <params>
                    <param name="aBoolean" type="boolean"/>
                </params>
            </method>
            <javadoc line="399">
                Sets whether this filter accepts mouse entered events.                
                <param>
                    aBoolean whether filter should accept mouse entered events                    
                </param>
            </javadoc>
            <method name="setAcceptsMouseEntered" type="void" line="403">
                <params>
                    <param name="aBoolean" type="boolean"/>
                </params>
            </method>
            <javadoc line="406">
                Sets whether this filter accepts mouse exited events.                
                <param>
                    aBoolean whether filter should accept mouse exited events                    
                </param>
            </javadoc>
            <method name="setAcceptsMouseExited" type="void" line="410">
                <params>
                    <param name="aBoolean" type="boolean"/>
                </params>
            </method>
            <javadoc line="413">
                Sets whether this filter accepts mouse moved events.                
                <param>
                    aBoolean whether filter should accept mouse moved events                    
                </param>
            </javadoc>
            <method name="setAcceptsMouseMoved" type="void" line="417">
                <params>
                    <param name="aBoolean" type="boolean"/>
                </params>
            </method>
            <javadoc line="420">
                Sets whether this filter accepts mouse pressed events.                
                <param>
                    aBoolean whether filter should accept mouse pressed events                    
                </param>
            </javadoc>
            <method name="setAcceptsMousePressed" type="void" line="424">
                <params>
                    <param name="aBoolean" type="boolean"/>
                </params>
            </method>
            <javadoc line="427">
                Sets whether this filter accepts mouse released events.                
                <param>
                    aBoolean whether filter should accept mouse released events                    
                </param>
            </javadoc>
            <method name="setAcceptsMouseReleased" type="void" line="431">
                <params>
                    <param name="aBoolean" type="boolean"/>
                </params>
            </method>
            <javadoc line="434">
                Sets whether this filter accepts mouse wheel rotation events.                
                <param>
                    aBoolean whether filter should accept mouse wheel rotated events                    
                </param>
            </javadoc>
            <method name="setAcceptsMouseWheelRotated" type="void" line="438">
                <params>
                    <param name="aBoolean" type="boolean"/>
                </params>
            </method>
            <javadoc line="441">
                Sets whether this filter accepts focus events.                
                <param>
                    aBoolean whether filter should accept focus events                    
                </param>
            </javadoc>
            <method name="setAcceptsFocusEvents" type="void" line="445">
                <params>
                    <param name="aBoolean" type="boolean"/>
                </params>
            </method>
            <javadoc line="448">
                Sets and mask used to filter events. All bits of the andMask must be 1s
                  for the event to be accepted.                
                <param>
                    aAndMask the and mask to use for filtering events                    
                </param>
            </javadoc>
            <method name="setAndMask" type="void" line="453">
                <params>
                    <param name="aAndMask" type="int"/>
                </params>
            </method>
            <javadoc line="456">
                Sets whether already handled events should be accepted.                
                <param>
                    aBoolean whether already handled events should be accepted                    
                </param>
            </javadoc>
            <method name="setAcceptsAlreadyHandledEvents" type="void" line="460">
                <params>
                    <param name="aBoolean" type="boolean"/>
                </params>
            </method>
            <javadoc line="463">
                Sets whether events will be marked as dirty once accepted.                
                <param>
                    aBoolean whether events will be marked as dirty once accepted                    
                </param>
            </javadoc>
            <method name="setMarksAcceptedEventsAsHandled" type="void" line="467">
                <params>
                    <param name="aBoolean" type="boolean"/>
                </params>
            </method>
            <javadoc line="470">
                Sets not mask used to filter events. If any of the not bits are enabled,
                  then the event is not accepted.                
                <param>
                    aNotMask the not mask to use for filtering events                    
                </param>
            </javadoc>
            <method name="setNotMask" type="void" line="475">
                <params>
                    <param name="aNotMask" type="int"/>
                </params>
            </method>
            <javadoc line="478">
                Sets or mask used to filter events. If any of the or bits are enabled,
                  then the event is accepted.                
                <param>
                    aOrMask the or mask to use for filtering events                    
                </param>
            </javadoc>
            <method name="setOrMask" type="void" line="483">
                <params>
                    <param name="aOrMask" type="int"/>
                </params>
            </method>
        </class>
    </source>