<?xml version="1.0" encoding="UTF-8"?>
    <source package="edu.umd.cs.piccolo">
        <import package="java.awt.Cursor"/>
        <import package="edu.umd.cs.piccolo.util.PBounds"/>
        <interface name="PComponent">
            <javadoc line="4">
                Interface that a component needs to implement if it wants to act as a Piccolo
                  canvas.                
                <version>
                    1.0                    
                </version>
                <author>
                    Lance Good                    
                </author>
            </javadoc>
            <method name="repaint" type="void" line="11"/>
            <javadoc line="11">
                Called to notify PComponent that given bounds need repainting.                
                <param>
                    bounds bounds needing repaint                    
                </param>
            </javadoc>
            <method name="paintImmediately" type="void" line="16"/>
            <javadoc line="16">
                Sends a repaint notification the repaint manager if PComponent is not
                  already painting immediately.                
            </javadoc>
            <method name="pushCursor" type="void" line="21"/>
            <javadoc line="21">
                Pushes the given cursor onto the cursor stack and sets the current cursor
                  to the one provided.                
                <param>
                    cursor The cursor to set as the current one and push                    
                </param>
            </javadoc>
            <method name="popCursor" type="void" line="27"/>
            <javadoc line="27">
                Pops the topmost cursor from the stack and sets it as the current one.                
            </javadoc>
            <method name="setInteracting" type="void" line="31"/>
            <javadoc line="31">
                Sets whether the component is currently being interacted with.                
                <param>
                    interacting whether the component is currently being interacted
                      with                    
                </param>
            </javadoc>
        </interface>
    </source>