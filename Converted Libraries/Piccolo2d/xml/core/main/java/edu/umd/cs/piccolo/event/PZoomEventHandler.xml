<?xml version="1.0" encoding="UTF-8"?>
    <source package="edu.umd.cs.piccolo.event">
        <import package="java.awt.event.InputEvent"/>
        <import package="java.awt.geom.Point2D"/>
        <import package="edu.umd.cs.piccolo.PCamera"/>
        <class name="PZoomEventHandler" line="36">
            <extends class="PDragSequenceEventHandler"/>
            <comment line="80">
                ****************************************************************
                 Zooming
                 ****************************************************************                
            </comment>
            <javadoc line="36">
                &lt;b&gt;ZoomEventhandler&lt;/b&gt; provides event handlers for basic zooming of the
                  canvas view with the right (third) button. The interaction is that the
                  initial mouse press defines the zoom anchor point, and then moving the mouse
                  to the right zooms with a speed proportional to the amount the mouse is moved
                  to the right of the anchor point. Similarly, if the mouse is moved to the
                  left, the the view is zoomed out.
                  &lt;P&gt;
                  On a Mac with its single mouse button one may wish to change the standard
                  right mouse button zooming behavior. This can be easily done with the
                  PInputEventFilter. For example to zoom with button one and shift you would do
                  this:
                  &lt;P&gt;
                  &lt;code&gt;
                  &lt;pre&gt;
                  zoomEventHandler.getEventFilter().setAndMask(InputEvent.BUTTON1_MASK | 
                  InputEvent.SHIFT_MASK);
                  &lt;/pre&gt;
                  &lt;/code&gt;
                  &lt;P&gt;                
                <version>
                    1.0                    
                </version>
                <author>
                    Jesse Grosjean                    
                </author>
            </javadoc>
            <declaration name="ZOOM_SENSITIVITY" type="double" line="62"/>
            <javadoc line="62">
                A constant used to adjust how sensitive the zooming will be to mouse
                  movement. The larger the number, the more each delta pixel will affect zooming.                
            </javadoc>
            <declaration name="minScale" type="double" line="67"/>
            <declaration name="maxScale" type="double" line="68"/>
            <declaration name="viewZoomPoint" type="Point2D" line="69"/>
            <javadoc line="71">
                Creates a new zoom handler.                
            </javadoc>
            <method name="PZoomEventHandler" type="constructor" line="74"/>
            <javadoc line="83">
                Returns the minimum view magnification factor that this event handler is
                  bound by. The default is 0.                
                <return>
                    the minimum camera view scale                    
                </return>
            </javadoc>
            <method name="getMinScale" type="double" line="89"/>
            <javadoc line="93">
                Sets the minimum view magnification factor that this event handler is
                  bound by. The camera is left at its current scale even if
                  &lt;code&gt;minScale&lt;/code&gt; is larger than the current scale.                
                <param>
                    minScale the minimum scale, must not be negative.                    
                </param>
            </javadoc>
            <method name="setMinScale" type="void" line="100">
                <params>
                    <param name="minScale" type="double"/>
                </params>
            </method>
            <javadoc line="104">
                Returns the maximum view magnification factor that this event handler is
                  bound by. The default is Double.MAX_VALUE.                
                <return>
                    the maximum camera view scale                    
                </return>
            </javadoc>
            <method name="getMaxScale" type="double" line="110"/>
            <javadoc line="114">
                Sets the maximum view magnification factor that this event handler is
                  bound by. The camera is left at its current scale even if
                  &lt;code&gt;maxScale&lt;/code&gt; is smaller than the current scale. Use
                  Double.MAX_VALUE to specify the largest possible scale.                
                <param>
                    maxScale the maximum scale, must not be negative.                    
                </param>
            </javadoc>
            <method name="setMaxScale" type="void" line="122">
                <params>
                    <param name="maxScale" type="double"/>
                </params>
            </method>
            <javadoc line="126">
                Records the start point of the zoom. Used when calculating the delta for
                  zoom speed.                
                <param>
                    event event responsible for starting the zoom interaction                    
                </param>
            </javadoc>
            <method name="dragActivityFirstStep" type="void" line="132">
                <params>
                    <param name="event" type="PInputEvent"/>
                </params>
            </method>
            <javadoc line="137">
                Updates the current zoom periodically, regardless of whether the mouse
                  has moved recently.                
                <param>
                    event contains information about the current state of the mouse                    
                </param>
            </javadoc>
            <method name="dragActivityStep" type="void" line="143">
                <params>
                    <param name="event" type="PInputEvent"/>
                </params>
                <declaration name="camera" type="PCamera" line="144"/>
                <declaration name="dx" type="double" line="145"/>
                <declaration name="scaleDelta" type="double" line="146"/>
                <declaration name="currentScale" type="double" line="148"/>
                <declaration name="newScale" type="double" line="149"/>
                <scope line="151"/>
                <scope line="154"/>
            </method>
        </class>
    </source>