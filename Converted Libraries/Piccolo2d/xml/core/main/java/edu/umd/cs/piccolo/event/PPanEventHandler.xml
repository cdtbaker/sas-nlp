<?xml version="1.0" encoding="UTF-8"?>
    <source package="edu.umd.cs.piccolo.event">
        <import package="java.awt.event.InputEvent"/>
        <import package="java.awt.geom.Point2D"/>
        <import package="java.awt.geom.Rectangle2D"/>
        <import package="edu.umd.cs.piccolo.PCamera"/>
        <import package="edu.umd.cs.piccolo.util.PBounds"/>
        <import package="edu.umd.cs.piccolo.util.PDimension"/>
        <class name="PPanEventHandler" line="39">
            <extends class="PDragSequenceEventHandler"/>
            <comment line="93">
                ****************************************************************                
            </comment>
            <comment line="94">
                Auto Pan                
            </comment>
            <comment line="95">
                ****************************************************************                
            </comment>
            <javadoc line="39">
                &lt;b&gt;PPanEventHandler&lt;/b&gt; provides event handlers for basic panning of the
                  canvas view with the left mouse. The interaction is that clicking and
                  dragging the mouse translates the view so that the point on the surface stays
                  under the mouse.
                  &lt;P&gt;                
                <version>
                    1.0                    
                </version>
                <author>
                    Jesse Grosjean                    
                </author>
            </javadoc>
            <declaration name="DEFAULT_MAX_AUTOPAN_SPEED" type="int" line="51"/>
            <declaration name="DEFAULT_MIN_AUTOPAN_SPEED" type="int" line="52"/>
            <declaration name="autopan" type="boolean" line="54"/>
            <declaration name="minAutopanSpeed" type="double" line="55"/>
            <declaration name="maxAutopanSpeed" type="double" line="56"/>
            <javadoc line="58">
                Constructs a Pan Event Handler that will by default perform auto-panning.                
            </javadoc>
            <method name="PPanEventHandler" type="constructor" line="61"/>
            <javadoc line="67">
                Updates the view in response to a user initiated drag event.                
                <param>
                    event event responsible for the drag                    
                </param>
            </javadoc>
            <method name="drag" type="void" line="72">
                <params>
                    <param name="event" type="PInputEvent"/>
                </params>
            </method>
            <javadoc line="77">
                Pans the camera in response to the pan event provided.                
                <param>
                    event contains details about the drag used to translate the view                    
                </param>
            </javadoc>
            <method name="pan" type="void" line="82">
                <params>
                    <param name="event" type="PInputEvent"/>
                </params>
                <declaration name="c" type="PCamera" line="83"/>
                <declaration name="l" type="Point2D" line="84"/>
                <scope line="86">
                    <declaration name="d" type="PDimension" line="87"/>
                </scope>
            </method>
            <javadoc line="96">
                Determines if auto-panning will occur or not.                
                <param>
                    autopan true if auto-panning functionality will be active                    
                </param>
            </javadoc>
            <method name="setAutopan" type="void" line="101">
                <params>
                    <param name="autopan" type="boolean"/>
                </params>
            </method>
            <javadoc line="105">
                Returns whether the auto-panning functoinality is enabled.                
                <return>
                    true if auto-panning is enabled                    
                </return>
            </javadoc>
            <method name="getAutopan" type="boolean" line="110"/>
            <javadoc line="114">
                Set the minAutoPan speed in pixels per second.                
                <param>
                    minAutopanSpeed number of pixels to assign as the minimum the
                      autopan feature can pan the view                    
                </param>
            </javadoc>
            <method name="setMinAutopanSpeed" type="void" line="120">
                <params>
                    <param name="minAutopanSpeed" type="double"/>
                </params>
            </method>
            <javadoc line="124">
                Set the maxAutoPan speed in pixels per second.                
                <param>
                    maxAutopanSpeed number of pixels to assign as the maximum the
                      autopan feature can pan the view                    
                </param>
            </javadoc>
            <method name="setMaxAutopanSpeed" type="void" line="130">
                <params>
                    <param name="maxAutopanSpeed" type="double"/>
                </params>
            </method>
            <javadoc line="134">
                Returns the minAutoPan speed in pixels per second.                
                <since>
                    1.3                    
                </since>
                <return>
                    minimum distance the autopan feature can pan the view                    
                </return>
            </javadoc>
            <method name="getMinAutoPanSpeed" type="double" line="140"/>
            <javadoc line="144">
                Returns the maxAutoPan speed in pixels per second.                
                <since>
                    1.3                    
                </since>
                <return>
                    max distance the autopan feature can pan the view by                    
                </return>
            </javadoc>
            <method name="getMaxAutoPanSpeed" type="double" line="150"/>
            <javadoc line="154">
                Performs auto-panning if enabled, even when the mouse is not moving.                
                <param>
                    event current drag relevant details about the drag activity                    
                </param>
            </javadoc>
            <method name="dragActivityStep" type="void" line="159">
                <params>
                    <param name="event" type="PInputEvent"/>
                </params>
                <scope line="160"/>
                <declaration name="c" type="PCamera" line="164"/>
                <declaration name="b" type="PBounds" line="165"/>
                <declaration name="l" type="Point2D" line="166"/>
                <declaration name="outcode" type="int" line="167"/>
                <declaration name="delta" type="PDimension" line="168"/>
                <scope line="170"/>
                <scope line="173"/>
                <scope line="177"/>
                <scope line="180"/>
                <scope line="186"/>
            </method>
            <javadoc line="191">
                Clips the panning speed to the minimum and maximum auto-pan speeds
                  assigned. If delta is below the threshold, it will be increased. If
                  above, it will be decreased.                
                <param>
                    delta auto-pan delta to be clipped                    
                </param>
                <return>
                    clipped delta value.                    
                </return>
            </javadoc>
            <method name="validatePanningSpeed" type="double" line="199">
                <params>
                    <param name="delta" type="double"/>
                </params>
                <declaration name="stepsPerSecond" type="double" line="200"/>
                <declaration name="minDelta" type="double" line="201"/>
                <declaration name="maxDelta" type="double" line="202"/>
                <declaration name="absDelta" type="double" line="204"/>
                <declaration name="clippedDelta" type="double" line="206"/>
                <scope line="207"/>
                <scope line="210"/>
                <scope line="213"/>
                <scope line="217"/>
                <scope line="220"/>
            </method>
        </class>
    </source>