<?xml version="1.0" encoding="UTF-8"?>
    <source package="edu.umd.cs.piccolo.util">
        <import package="java.awt.geom.Dimension2D"/>
        <import package="java.awt.geom.Point2D"/>
        <import package="java.awt.geom.Rectangle2D"/>
        <import package="java.io.IOException"/>
        <import package="java.io.ObjectInputStream"/>
        <import package="java.io.ObjectOutputStream"/>
        <import package="java.io.Serializable"/>
        <class name="PBounds" line="9">
            <extends class="Rectangle2D.Double"/>
            <implements interface="Serializable"/>
            <javadoc line="9">
                &lt;b&gt;PBounds&lt;/b&gt; is simply a Rectangle2D.Double with extra methods that more
                  properly deal with the case when the rectangle is &quot;empty&quot;. A PBounds has an
                  extra bit to store emptiness. In this state, adding new geometry replaces the
                  current geometry. A PBounds is emptied with the reset() method. A useful side
                  effect of the reset method is that it only modifies the fIsEmpty variable,
                  the other x, y, with, height variables are left alone. This is used by
                  Piccolo&apos;s layout management system to see if a the full bounds of a node has
                  really changed when it is recomputed. See PNode.validateLayout.
                  &lt;P&gt;                
                <version>
                    1.0                    
                </version>
                <author>
                    Jesse Grosjean                    
                </author>
            </javadoc>
            <declaration name="serialVersionUID" type="long" line="23"/>
            <javadoc line="23">
                Allows for future serialization code to understand versioned binary
                  formats.                
            </javadoc>
            <declaration name="isEmpty" type="boolean" line="28"/>
            <javadoc line="29">
                Creates an empty bounds.                
            </javadoc>
            <method name="PBounds" type="constructor" line="32"/>
            <javadoc line="35">
                Creates a bounds identical to the one provided.                
                <param>
                    aBounds bounds to be copied                    
                </param>
            </javadoc>
            <method name="PBounds" type="constructor" line="39">
                <params>
                    <param name="aBounds" type="PBounds"/>
                </params>
            </method>
            <javadoc line="43">
                Creates a bounds with the same shape as the rectangle provided.                
                <param>
                    aBounds rectangle to be copied                    
                </param>
            </javadoc>
            <method name="PBounds" type="constructor" line="47">
                <params>
                    <param name="aBounds" type="Rectangle2D"/>
                </params>
            </method>
            <javadoc line="51">
                Constructs a PBounds object with the given center point and the specified
                  insets.                
                <param>
                    aCenterPoint resulting center point of the PBounds object                    
                </param>
                <param>
                    insetX distance from left and right the center should be                    
                </param>
                <param>
                    insetY distance from top and bottom the center should be                    
                </param>
            </javadoc>
            <method name="PBounds" type="constructor" line="58">
                <params>
                    <param name="aCenterPoint" type="Point2D"/>
                    <param name="insetX" type="double"/>
                    <param name="insetY" type="double"/>
                </params>
            </method>
            <javadoc line="62">
                Constructs a PBounds object at the given coordinates with the given
                  dimensions.                
                <param>
                    x left of bounds                    
                </param>
                <param>
                    y top of bounds                    
                </param>
                <param>
                    width width of bounds                    
                </param>
                <param>
                    height height of bounds                    
                </param>
            </javadoc>
            <method name="PBounds" type="constructor" line="70">
                <params>
                    <param name="x" type="double"/>
                    <param name="y" type="double"/>
                    <param name="width" type="double"/>
                    <param name="height" type="double"/>
                </params>
            </method>
            <javadoc line="74">
                Returns a clone of this node.                
                <return>
                    cloned copy of this bounds                    
                </return>
            </javadoc>
            <method name="clone" type="Object" line="78"/>
            <javadoc line="81">
                Returns true if this bounds has been flagged as empty. Not necessarily if
                  it is empty.                
                <return>
                    true if bounds marked as empty                    
                </return>
            </javadoc>
            <method name="isEmpty" type="boolean" line="86"/>
            <javadoc line="89">
                Flags this bounds as empty.                
                <return>
                    itself for chaining                    
                </return>
            </javadoc>
            <method name="reset" type="PBounds" line="93"/>
            <javadoc line="97">
                Resets the bounds to (0,0,0,0) and flags it as empty.                
                <return>
                    itself for chaining                    
                </return>
            </javadoc>
            <method name="resetToZero" type="PBounds" line="101"/>
            <javadoc line="109">
                Sets the bounds to the same shape as the rectangle. And flags the bounds
                  as not empty.                
                <param>
                    r rectangle to copy                    
                </param>
            </javadoc>
            <method name="setRect" type="void" line="114">
                <params>
                    <param name="r" type="Rectangle2D"/>
                </params>
            </method>
            <javadoc line="118">
                Sets the bounds to the same shape as the bounds provided. And flags the
                  bounds as not empty.                
                <param>
                    b bounds to copy                    
                </param>
            </javadoc>
            <method name="setRect" type="void" line="123">
                <params>
                    <param name="b" type="PBounds"/>
                </params>
            </method>
            <javadoc line="130">
                Sets the shape of the bounds to the position and dimension provided.                
                <param>
                    x new left of bounds                    
                </param>
                <param>
                    y new top of bounds                    
                </param>
                <param>
                    width new width of bounds                    
                </param>
                <param>
                    height new height of bounds                    
                </param>
            </javadoc>
            <method name="setRect" type="void" line="137">
                <params>
                    <param name="x" type="double"/>
                    <param name="y" type="double"/>
                    <param name="width" type="double"/>
                    <param name="height" type="double"/>
                </params>
            </method>
            <javadoc line="144">
                Grows the bounds to contain the coordinate provided.                
                <param>
                    newx x component of point                    
                </param>
                <param>
                    newy y component of point                    
                </param>
            </javadoc>
            <method name="add" type="void" line="149">
                <params>
                    <param name="newx" type="double"/>
                    <param name="newy" type="double"/>
                </params>
                <scope line="150"/>
                <scope line="154"/>
            </method>
            <javadoc line="158">
                Grows bounds to contain the rectangle if needed.                
                <param>
                    r rectangle being added                    
                </param>
            </javadoc>
            <method name="add" type="void" line="162">
                <params>
                    <param name="r" type="Rectangle2D"/>
                </params>
                <scope line="163"/>
                <scope line="166"/>
            </method>
            <javadoc line="170">
                Changes this bounds to contain the provided bounds.                
                <param>
                    bounds bounds being added                    
                </param>
            </javadoc>
            <method name="add" type="void" line="174">
                <params>
                    <param name="bounds" type="PBounds"/>
                </params>
                <scope line="175"/>
                <scope line="178"/>
                <scope line="185">
                    <declaration name="x1" type="double" line="186"/>
                    <declaration name="y1" type="double" line="187"/>
                    <declaration name="x2" type="double" line="188"/>
                    <declaration name="y2" type="double" line="189"/>
                </scope>
            </method>
            <javadoc line="197">
                Returns the x,y coordinate of the bounds.                
                <return>
                    coordinate of the bounds                    
                </return>
            </javadoc>
            <method name="getOrigin" type="Point2D" line="201"/>
            <javadoc line="204">
                Changes the origin of these bounds. And flags it as non-empty.                
                <param>
                    x new x component of bounds                    
                </param>
                <param>
                    y new y component of the bounds                    
                </param>
                <return>
                    the modified PBounds with its new origin                    
                </return>
            </javadoc>
            <method name="setOrigin" type="PBounds" line="210">
                <params>
                    <param name="x" type="double"/>
                    <param name="y" type="double"/>
                </params>
            </method>
            <javadoc line="216">
                Returns the size of the bounds.                
                <return>
                    size of the bounds                    
                </return>
            </javadoc>
            <method name="getSize" type="Dimension2D" line="220"/>
            <javadoc line="223">
                Changes the size of the bounds, but retains the origin.                
                <param>
                    width new width of the bounds                    
                </param>
                <param>
                    height new height of the bounds                    
                </param>
            </javadoc>
            <method name="setSize" type="void" line="228">
                <params>
                    <param name="width" type="double"/>
                    <param name="height" type="double"/>
                </params>
            </method>
            <javadoc line="231">
                Returns the midpoint of the bounds.                
                <return>
                    midpoint of the bounds                    
                </return>
            </javadoc>
            <method name="getCenter2D" type="Point2D" line="235"/>
            <javadoc line="238">
                Translates the bounds by the given deltas.                
                <param>
                    dx amount to move x                    
                </param>
                <param>
                    dy amount to move y                    
                </param>
                <return>
                    itself for chaining                    
                </return>
            </javadoc>
            <method name="moveBy" type="PBounds" line="244">
                <params>
                    <param name="dx" type="double"/>
                    <param name="dy" type="double"/>
                </params>
            </method>
            <javadoc line="248">
                Rounds the rectangle to the next largest bounds who&apos;s measurements are
                  integers. Note: this is not the same as rounding its measurements.                
            </javadoc>
            <method name="expandNearestIntegerDimensions" type="void" line="252"/>
            <javadoc line="258">
                Adjust the measurements of this bounds so that they are the amounts given
                  &quot;in&quot; from their previous border.                
                <param>
                    dx amount to move in from border along horizontal axis                    
                </param>
                <param>
                    dy amount to move in from border along vertical axis                    
                </param>
                <return>
                    itself for chaining                    
                </return>
            </javadoc>
            <method name="inset" type="PBounds" line="265">
                <params>
                    <param name="dx" type="double"/>
                    <param name="dy" type="double"/>
                </params>
            </method>
            <javadoc line="269">
                Returns the required translation in order for this bounds origin to sit
                  on the center of the provided rectangle.                
                <param>
                    targetBounds rectangle to measure the center of                    
                </param>
                <return>
                    the delta required to move to center of the targetBounds                    
                </return>
            </javadoc>
            <method name="deltaRequiredToCenter" type="PDimension" line="275">
                <params>
                    <param name="targetBounds" type="Rectangle2D"/>
                </params>
                <declaration name="result" type="PDimension" line="276"/>
                <declaration name="xDelta" type="double" line="277"/>
                <declaration name="yDelta" type="double" line="278"/>
            </method>
            <javadoc line="282">
                Returns the required translation in order for these to contain the bounds
                  provided.                
                <param>
                    targetBounds rectangle to measure the center of                    
                </param>
                <return>
                    the delta required in order for the bounds to overlap completely
                      the targetBounds                    
                </return>
            </javadoc>
            <method name="deltaRequiredToContain" type="PDimension" line="289">
                <params>
                    <param name="targetBounds" type="Rectangle2D"/>
                </params>
                <declaration name="result" type="PDimension" line="290"/>
                <scope line="291"/>
                <declaration name="targetMaxX" type="double" line="294"/>
                <declaration name="targetMinX" type="double" line="295"/>
                <declaration name="targetMaxY" type="double" line="296"/>
                <declaration name="targetMinY" type="double" line="297"/>
                <declaration name="maxX" type="double" line="298"/>
                <declaration name="minX" type="double" line="299"/>
                <declaration name="maxY" type="double" line="300"/>
                <declaration name="minY" type="double" line="301"/>
                <scope line="302">
                    <declaration name="difMaxX" type="double" line="303"/>
                    <declaration name="difMinX" type="double" line="304"/>
                    <scope line="305"/>
                    <scope line="308"/>
                </scope>
                <scope line="312">
                    <declaration name="difMaxY" type="double" line="313"/>
                    <declaration name="difMinY" type="double" line="314"/>
                    <scope line="315"/>
                    <scope line="318"/>
                </scope>
            </method>
            <method name="writeObject" type="void" line="324">
                <params>
                    <param name="out" type="ObjectOutputStream"/>
                </params>
            </method>
            <method name="readObject" type="void" line="331">
                <params>
                    <param name="in" type="ObjectInputStream"/>
                </params>
            </method>
            <javadoc line="338">
                Returns a string representation of this PBounds for debugging purposes.                
                <return>
                    string representation of this PBounds                    
                </return>
            </javadoc>
            <method name="toString" type="String" line="342">
                <declaration name="result" type="StringBuffer" line="343"/>
                <scope line="346"/>
                <scope line="349"/>
            </method>
        </class>
    </source>