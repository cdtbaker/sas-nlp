<?xml version="1.0" encoding="UTF-8"?>
<source package="edu.umd.cs.piccolo.examples">
  <import name="java.awt.BasicStroke" />
  <import name="java.awt.Color" />
  <import name="java.awt.Graphics2D" />
  <import name="java.awt.Stroke" />
  <import name="java.awt.geom.GeneralPath" />
  <import name="java.awt.geom.Point2D" />
  <import name="java.awt.geom.Rectangle2D" />
  <import name="edu.umd.cs.piccolo.PCanvas" />
  <import name="edu.umd.cs.piccolo.PLayer" />
  <import name="edu.umd.cs.piccolo.PNode" />
  <import name="edu.umd.cs.piccolo.event.PInputEvent" />
  <import name="edu.umd.cs.piccolo.util.PDimension" />
  <import name="edu.umd.cs.piccolo.util.PPaintContext" />
  <import name="edu.umd.cs.piccolox.PFrame" />
  <import name="edu.umd.cs.piccolox.handles.PHandle" />
  <import name="edu.umd.cs.piccolox.util.PLocator" />
  <class name="AngleNodeExample" extends="PFrame" startLine="49">
    <javadoc>
      <text>* This shows how to create a simple node that has two handles and can be used
 * for specifying angles. The nodes UI desing isn't very exciting, but the
 * example shows one way to create a custom node with custom handles.</text>
    </javadoc>
    <javadoc />
    <declaration type="long" name="serialVersionUID" />
    <method type="constructor" name="AngleNodeExample" startLine="61" endLine="63" />
    <method type="constructor" name="AngleNodeExample" startLine="65" endLine="67" />
    <method type="void" name="initialize" startLine="69" endLine="73">
      <declaration type="PCanvas" name="c" />
      <declaration type="PLayer" name="l" />
    </method>
    <method type="void" name="main" startLine="75" endLine="77" />
    <class name="AngleNode" extends="PNode" startLine="80">
      <javadoc />
      <declaration type="long" name="serialVersionUID" />
      <declaration type="Point2D.Double" name="pointOne" />
      <declaration type="Point2D.Double" name="pointTwo" />
      <declaration type="Stroke" name="stroke" />
      <method type="constructor" name="AngleNode" startLine="89" endLine="96" />
      <method type="void" name="addHandles" startLine="98" endLine="160">
        <declaration type="PLocator" name="l" />
        <javadoc />
        <declaration type="long" name="serialVersionUID" />
        <method type="double" name="locateX" startLine="106" endLine="108" />
        <method type="double" name="locateY" startLine="110" endLine="112" />
        <declaration type="PHandle" name="h" />
        <javadoc />
        <declaration type="long" name="serialVersionUID" />
        <method type="void" name="dragHandle" startLine="120" endLine="126" />
        <javadoc />
        <declaration type="long" name="serialVersionUID" />
        <method type="double" name="locateX" startLine="137" endLine="139" />
        <method type="double" name="locateY" startLine="141" endLine="143" />
        <javadoc />
        <declaration type="long" name="serialVersionUID" />
        <method type="void" name="dragHandle" startLine="151" endLine="157" />
        <comment>point one</comment>
        <comment>point two</comment>
      </method>
      <method type="void" name="paint" startLine="162" endLine="167">
        <declaration type="Graphics2D" name="g2" />
      </method>
      <method type="void" name="updateBounds" startLine="169" endLine="173">
        <declaration type="GeneralPath" name="p" />
        <declaration type="Rectangle2D" name="b" />
      </method>
      <method type="GeneralPath" name="getAnglePath" startLine="175" endLine="181">
        <declaration type="GeneralPath" name="p" />
      </method>
      <method type="boolean" name="setBounds" startLine="183" endLine="185">
        <comment>bounds can be set externally</comment>
      </method>
    </class>
    <comment>the angle node class</comment>
  </class>
</source>
