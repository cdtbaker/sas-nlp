<?xml version="1.0" encoding="UTF-8"?>
<source package="edu.umd.cs.piccolo.event">
  <import name="java.awt.event.InputEvent" />
  <import name="java.awt.geom.Point2D" />
  <import name="edu.umd.cs.piccolo.PCamera" />
  <class name="PZoomEventHandler" extends="PDragSequenceEventHandler" startLine="36">
    <javadoc>
      <text>* <b>ZoomEventhandler</b> provides event handlers for basic zooming of the
 * canvas view with the right (third) button. The interaction is that the
 * initial mouse press defines the zoom anchor point, and then moving the mouse
 * to the right zooms with a speed proportional to the amount the mouse is moved
 * to the right of the anchor point. Similarly, if the mouse is moved to the
 * left, the the view is zoomed out.
 * <P>
 * On a Mac with its single mouse button one may wish to change the standard
 * right mouse button zooming behavior. This can be easily done with the
 * PInputEventFilter. For example to zoom with button one and shift you would do
 * this:
 * <P>
 * <code>
 * <pre>
 * zoomEventHandler.getEventFilter().setAndMask(InputEvent.BUTTON1_MASK | 
 * InputEvent.SHIFT_MASK);
 * </pre>
 * </code>
 * <P></text>
      <version>1.0</version>
      <author>Jesse Grosjean</author>
    </javadoc>
    <javadoc>
      <text>* A constant used to adjust how sensitive the zooming will be to mouse
 * movement. The larger the number, the more each delta pixel will affect zooming.</text>
    </javadoc>
    <declaration type="double" name="ZOOM_SENSITIVITY" />
    <declaration type="double" name="minScale" />
    <declaration type="double" name="maxScale" />
    <declaration type="Point2D" name="viewZoomPoint" />
    <javadoc>
      <text>* Creates a new zoom handler.</text>
    </javadoc>
    <method type="constructor" name="PZoomEventHandler" startLine="74" endLine="77" />
    <javadoc>
      <text>* Returns the minimum view magnification factor that this event handler is
 * bound by. The default is 0.</text>
      <return>the minimum camera view scale</return>
    </javadoc>
    <method type="double" name="getMinScale" startLine="89" endLine="91" />
    <javadoc>
      <text>* Sets the minimum view magnification factor that this event handler is
 * bound by. The camera is left at its current scale even if
 * <code>minScale</code> is larger than the current scale.</text>
      <param>minScale the minimum scale, must not be negative.</param>
    </javadoc>
    <method type="void" name="setMinScale" startLine="100" endLine="102" />
    <javadoc>
      <text>* Returns the maximum view magnification factor that this event handler is
 * bound by. The default is Double.MAX_VALUE.</text>
      <return>the maximum camera view scale</return>
    </javadoc>
    <method type="double" name="getMaxScale" startLine="110" endLine="112" />
    <javadoc>
      <text>* Sets the maximum view magnification factor that this event handler is
 * bound by. The camera is left at its current scale even if
 * <code>maxScale</code> is smaller than the current scale. Use
 * Double.MAX_VALUE to specify the largest possible scale.</text>
      <param>maxScale the maximum scale, must not be negative.</param>
    </javadoc>
    <method type="void" name="setMaxScale" startLine="122" endLine="124" />
    <javadoc>
      <text>* Records the start point of the zoom. Used when calculating the delta for
 * zoom speed.</text>
      <param>event event responsible for starting the zoom interaction</param>
    </javadoc>
    <method type="void" name="dragActivityFirstStep" startLine="132" endLine="135" />
    <javadoc>
      <text>* Updates the current zoom periodically, regardless of whether the mouse
 * has moved recently.</text>
      <param>event contains information about the current state of the mouse</param>
    </javadoc>
    <method type="void" name="dragActivityStep" startLine="143" endLine="159">
      <declaration type="PCamera" name="camera" />
      <declaration type="double" name="dx" />
      <declaration type="double" name="scaleDelta" />
      <declaration type="double" name="currentScale" />
      <declaration type="double" name="newScale" />
      <scope startLine="151" endLine="153" />
      <scope startLine="154" endLine="156" />
    </method>
    <comment>****************************************************************</comment>
    <comment>Zooming</comment>
    <comment>****************************************************************</comment>
  </class>
</source>
