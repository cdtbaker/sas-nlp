<?xml version="1.0" encoding="UTF-8"?>
<source package="edu.umd.cs.piccolox.swt">
  <import name="java.awt.Color" />
  <import name="java.awt.Shape" />
  <import name="java.awt.event.InputEvent" />
  <import name="java.awt.geom.Ellipse2D" />
  <import name="java.awt.geom.Point2D" />
  <import name="java.beans.PropertyChangeEvent" />
  <import name="java.beans.PropertyChangeListener" />
  <import name="java.io.IOException" />
  <import name="java.io.ObjectInputStream" />
  <import name="edu.umd.cs.piccolo.PCamera" />
  <import name="edu.umd.cs.piccolo.PNode" />
  <import name="edu.umd.cs.piccolo.event.PDragSequenceEventHandler" />
  <import name="edu.umd.cs.piccolo.event.PInputEvent" />
  <import name="edu.umd.cs.piccolo.event.PInputEventFilter" />
  <import name="edu.umd.cs.piccolo.util.PBounds" />
  <import name="edu.umd.cs.piccolo.util.PDimension" />
  <import name="edu.umd.cs.piccolox.util.PLocator" />
  <import name="edu.umd.cs.piccolox.util.PNodeLocator" />
  <class name="PSWTHandle" extends="PSWTPath" startLine="51">
    <javadoc>
      <text>* <b>PSWTHandle</b> is used to modify some aspect of Piccolo when it is dragged.
 * Each handle has a PLocator that it uses to automatically position itself. See
 * PSWTBoundsHandle for an example of a handle that resizes the bounds of another
 * node.
 * <P></text>
      <version>1.0</version>
      <author>Jesse Grosjean</author>
    </javadoc>
    <declaration type="long" name="serialVersionUID" />
    <javadoc>
      <text>* The Default Size of a handle not including its border.</text>
    </javadoc>
    <declaration type="float" name="DEFAULT_HANDLE_SIZE" />
    <javadoc>
      <text>* The default shape to use when drawing handles. Default is an ellipse.</text>
    </javadoc>
    <declaration type="Shape" name="DEFAULT_HANDLE_SHAPE" />
    <javadoc>
      <text>* The default color to use when drawing a handle. (white)</text>
    </javadoc>
    <declaration type="Color" name="DEFAULT_COLOR" />
    <declaration type="PLocator" name="locator" />
    <declaration type="PDragSequenceEventHandler" name="handleDragger" />
    <javadoc>
      <text>* Construct a new handle that will use the given locator to locate itself
 * on its parent node.</text>
      <param>aLocator locator to use when positioning this handle</param>
    </javadoc>
    <method type="constructor" name="PSWTHandle" startLine="79" endLine="84" />
    <javadoc>
      <text>* Installs the handler that will reposition the handle when it is dragged,
 * and invoke appropriate call backs.</text>
    </javadoc>
    <method type="void" name="installHandleEventHandlers" startLine="90" endLine="101">
      <method type="void" name="propertyChange" startLine="94" endLine="96" />
      <comment>so reject them so we don't consume them</comment>
    </method>
    <javadoc>
      <text>* Return the event handler that is responsible for the drag handle
 * interaction.</text>
      <return>handler responsible for responding to drag events</return>
    </javadoc>
    <method type="PDragSequenceEventHandler" name="getHandleDraggerHandler" startLine="109" endLine="111" />
    <javadoc>
      <text>* Get the locator that this handle uses to position itself on its parent
 * node.</text>
      <return>locator used to position this handle</return>
    </javadoc>
    <method type="PLocator" name="getLocator" startLine="119" endLine="121" />
    <javadoc>
      <text>* Set the locator that this handle uses to position itself on its parent
 * node.</text>
      <param>aLocator used to position this handle</param>
    </javadoc>
    <method type="void" name="setLocator" startLine="129" endLine="133" />
    <javadoc>
      <text>* Override this method to get notified when the handle starts to get
 * dragged.</text>
      <param>aLocalPoint point at which dragging was started relative to the
 * handle's coordinate system</param>
      <param>aEvent event representing the start of the drag</param>
    </javadoc>
    <method type="void" name="startHandleDrag" startLine="148" endLine="149" />
    <javadoc>
      <text>* Override this method to get notified as the handle is dragged.</text>
      <param>aLocalDimension magnitude of the dragHandle event in the
 * dimensions of the handle's coordinate system.</param>
      <param>aEvent event representing the drag</param>
    </javadoc>
    <method type="void" name="dragHandle" startLine="158" endLine="159" />
    <javadoc>
      <text>* Override this method to get notified when the handle stops getting
 * dragged.</text>
      <param>aLocalPoint point at which dragging was ended relative to the
 * handle's coordinate system</param>
      <param>aEvent event representing the end of the drag</param>
    </javadoc>
    <method type="void" name="endHandleDrag" startLine="169" endLine="170" />
    <javadoc>
      <text>* {@inheritDoc}</text>
    </javadoc>
    <method type="void" name="setParent" startLine="180" endLine="183" />
    <javadoc>
      <text>* {@inheritDoc}</text>
    </javadoc>
    <method type="void" name="parentBoundsChanged" startLine="186" endLine="188" />
    <javadoc>
      <text>* Force this handle to relocate itself using its locator.</text>
    </javadoc>
    <method type="void" name="relocateHandle" startLine="193" endLine="217">
      <scope startLine="194" endLine="216">
        <declaration type="PBounds" name="b" />
        <declaration type="Point2D" name="aPoint" />
        <scope startLine="198" endLine="208">
          <declaration type="PNode" name="located" />
          <declaration type="PNode" name="parent" />
          <scope startLine="205" endLine="207" />
        </scope>
        <declaration type="double" name="newCenterX" />
        <declaration type="double" name="newCenterY" />
        <scope startLine="213" endLine="215" />
      </scope>
    </method>
    <method type="void" name="readObject" startLine="223" endLine="226" />
    <class name="HandleDragHandler" extends="PDragSequenceEventHandler" startLine="228">
      <method type="constructor" name="HandleDragHandler" startLine="229" endLine="236">
        <declaration type="PInputEventFilter" name="filter" />
      </method>
      <method type="void" name="startDrag" startLine="238" endLine="241" />
      <method type="void" name="drag" startLine="243" endLine="249">
        <declaration type="PDimension" name="aDelta" />
        <scope startLine="246" endLine="248" />
      </method>
      <method type="void" name="endDrag" startLine="251" endLine="254" />
    </class>
    <comment>****************************************************************</comment>
    <comment>Handle Dragging - These are the methods the subclasses should</comment>
    <comment>normally override to give a handle unique behavior.</comment>
    <comment>****************************************************************</comment>
    <comment>****************************************************************</comment>
    <comment>Layout - When a handle's parent's layout changes the handle</comment>
    <comment>invalidates its own layout and then repositions itself on its</comment>
    <comment>parents bounds using its locator to determine that new</comment>
    <comment>position.</comment>
    <comment>****************************************************************</comment>
    <comment>****************************************************************</comment>
    <comment>Serialization</comment>
    <comment>****************************************************************</comment>
  </class>
</source>
