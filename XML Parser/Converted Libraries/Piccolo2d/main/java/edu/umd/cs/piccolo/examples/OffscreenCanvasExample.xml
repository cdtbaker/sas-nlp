<?xml version="1.0" encoding="UTF-8"?>
<source package="edu.umd.cs.piccolo.examples">
  <import name="java.awt.BasicStroke" />
  <import name="java.awt.Color" />
  <import name="java.awt.Frame" />
  <import name="java.awt.Graphics2D" />
  <import name="java.awt.GraphicsConfiguration" />
  <import name="java.awt.GraphicsDevice" />
  <import name="java.awt.GraphicsEnvironment" />
  <import name="java.awt.geom.Rectangle2D" />
  <import name="java.awt.image.BufferStrategy" />
  <import name="edu.umd.cs.piccolo.POffscreenCanvas" />
  <import name="edu.umd.cs.piccolo.activities.PActivity" />
  <import name="edu.umd.cs.piccolo.nodes.PPath" />
  <import name="edu.umd.cs.piccolo.nodes.PText" />
  <class name="OffscreenCanvasExample" startLine="46">
    <javadoc>
      <text>* Offscreen canvas example.</text>
    </javadoc>
    <javadoc>
      <text>* Frame.</text>
    </javadoc>
    <declaration type="Frame" name="frame" />
    <javadoc>
      <text>* Background color.</text>
    </javadoc>
    <declaration type="Color" name="background" />
    <javadoc>
      <text>* Offscreen canvas.</text>
    </javadoc>
    <declaration type="POffscreenCanvas" name="canvas" />
    <javadoc>
      <text>* Create a new offscreen canvas example with the specified graphics device.</text>
      <param>device graphics device</param>
    </javadoc>
    <method type="constructor" name="OffscreenCanvasExample" startLine="65" endLine="98">
      <declaration type="GraphicsConfiguration" name="configuration" />
      <declaration type="PText" name="text" />
      <declaration type="PPath" name="rect" />
      <declaration type="Rectangle2D" name="right" />
      <declaration type="Rectangle2D" name="left" />
      <declaration type="Rectangle2D" name="start" />
      <declaration type="PActivity" name="toRight" />
      <declaration type="PActivity" name="toLeft" />
      <declaration type="PActivity" name="toStart" />
    </method>
    <javadoc>
      <text>* Render offscreen graphics into the frame.</text>
    </javadoc>
    <method type="void" name="render" startLine="103" endLine="117">
      <declaration type="BufferStrategy" name="bufferStrategy" />
      <scope startLine="105" endLine="116">
        <scope startLine="106" endLine="114">
          <declaration type="Graphics2D" name="graphics" />
        </scope>
        <comment>canvas is not opaque, so fill with background color</comment>
        <comment>then let canvas render into graphics</comment>
      </scope>
    </method>
    <javadoc>
      <text>* Main.</text>
      <param>args command line arguments</param>
    </javadoc>
    <method type="void" name="main" startLine="124" endLine="133">
      <declaration type="GraphicsEnvironment" name="environment" />
      <declaration type="GraphicsDevice" name="device" />
      <declaration type="OffscreenCanvasExample" name="example" />
      <declaration type="boolean" name="done" />
      <scope startLine="130" endLine="132" />
    </method>
  </class>
</source>
