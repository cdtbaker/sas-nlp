<?xml version="1.0" encoding="UTF-8"?>
<source package="edu.umd.cs.piccolox.swt">
  <import name="java.awt.Component" />
  <import name="java.awt.event.InputEvent" />
  <import name="java.awt.event.KeyEvent" />
  <import name="org.eclipse.swt.SWT" />
  <import name="org.eclipse.swt.widgets.Display" />
  <import name="org.eclipse.swt.widgets.Widget" />
  <class name="PSWTKeyEvent" extends="KeyEvent" startLine="39">
    <javadoc>
      <text>* Key event overridden to wrap an SWT KeyEvent as a swing KeyEvent.</text>
      <author>Lance Good</author>
    </javadoc>
    <declaration type="long" name="serialVersionUID" />
    <declaration type="Component" name="fakeSrc" />
    <declaration type="org.eclipse.swt.events.KeyEvent" name="swtEvent" />
    <javadoc>
      <text>* Creates an object that wraps a SWT Key event. Making it queriable from
 * Piccolo2d as though it were a Swing one.</text>
      <param>ke key event object</param>
      <param>eventType type of key event</param>
    </javadoc>
    <method type="constructor" name="PSWTKeyEvent" startLine="59" endLine="63" />
    <javadoc>
      <text>* {@inheritDoc}</text>
    </javadoc>
    <method type="Object" name="getSource" startLine="66" endLine="68" />
    <javadoc>
      <text>* {@inheritDoc}</text>
    </javadoc>
    <method type="boolean" name="isShiftDown" startLine="71" endLine="73" />
    <javadoc>
      <text>* {@inheritDoc}</text>
    </javadoc>
    <method type="boolean" name="isControlDown" startLine="76" endLine="78" />
    <javadoc>
      <text>* {@inheritDoc}</text>
    </javadoc>
    <method type="boolean" name="isAltDown" startLine="81" endLine="83" />
    <javadoc>
      <text>* {@inheritDoc}</text>
    </javadoc>
    <method type="int" name="getModifiers" startLine="86" endLine="102">
      <declaration type="int" name="modifiers" />
      <scope startLine="89" endLine="99">
        <scope startLine="90" endLine="92" />
        <scope startLine="93" endLine="95" />
        <scope startLine="96" endLine="98" />
      </scope>
    </method>
    <javadoc>
      <text>* {@inheritDoc}</text>
    </javadoc>
    <method type="int" name="getModifiersEx" startLine="105" endLine="121">
      <declaration type="int" name="modifiers" />
      <scope startLine="108" endLine="118">
        <scope startLine="109" endLine="111" />
        <scope startLine="112" endLine="114" />
        <scope startLine="115" endLine="117" />
      </scope>
    </method>
    <javadoc>
      <text>* {@inheritDoc}</text>
    </javadoc>
    <method type="boolean" name="isActionKey" startLine="124" endLine="126" />
    <javadoc>
      <text>* Returns the widget from which the event was emitted.</text>
      <return>source widget</return>
    </javadoc>
    <method type="Widget" name="getWidget" startLine="133" endLine="135" />
    <javadoc>
      <text>* Return the display on which the interaction occurred.</text>
      <return>display on which the interaction occurred</return>
    </javadoc>
    <method type="Display" name="getDisplay" startLine="142" endLine="144" />
    <javadoc>
      <text>* Return the associated SWT data for the event.</text>
      <return>data associated to the SWT event</return>
    </javadoc>
    <method type="Object" name="getData" startLine="151" endLine="153" />
  </class>
</source>
