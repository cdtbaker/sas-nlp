<?xml version="1.0" encoding="UTF-8"?>
<source package="edu.umd.cs.piccolox.util">
  <import name="edu.umd.cs.piccolo.PNode" />
  <import name="edu.umd.cs.piccolo.util.PBounds" />
  <import name="edu.umd.cs.piccolo.util.PPickPath" />
  <class name="POcclusionDetection" startLine="35">
    <javadoc>
      <text>* Experimental class for detecting occlusions.</text>
      <author>Jesse Grosjean</author>
    </javadoc>
    <javadoc>
      <text>* Traverse from the bottom right of the scene graph (top visible node) up
 * the tree determining which parent nodes are occluded by their children
 * nodes. Note that this is only detecting a subset of occlusions (parent,
 * child), others such as overlapping siblings or cousins are not detected.</text>
      <param>n node from which to detect occlusions</param>
      <param>parentBounds bounds of parent node</param>
    </javadoc>
    <method type="void" name="detectOccusions" startLine="51" endLine="53" />
    <javadoc>
      <text>* Traverse the pick path determining which parent nodes are occluded by
 * their children nodes. Note that this is only detecting a subset of
 * occlusions (parent, child), others such as overlapping siblings or
 * cousins are not detected.</text>
      <param>node node from which to detect occlusions</param>
      <param>pickPath Pick Path to traverse</param>
    </javadoc>
    <method type="void" name="detectOcclusions" startLine="64" endLine="93">
      <scope startLine="65" endLine="67" />
      <declaration type="int" name="count" />
      <scope startLine="72" endLine="83">
        <declaration type="PNode" name="each" />
        <scope startLine="74" endLine="78" />
        <scope startLine="79" endLine="82" />
        <comment>if n has been occluded by a previous descendant then</comment>
        <comment>this child must also be occluded</comment>
        <comment>see if child each occludes n</comment>
      </scope>
      <scope startLine="85" endLine="90">
        <declaration type="PNode" name="parent" />
        <scope startLine="87" endLine="89" />
      </scope>
    </method>
    <javadoc>
      <text>* Calculate whether node occludes its parents.</text>
      <param>n node to test</param>
      <param>pickPath pickpath identifying the parents of the node</param>
      <return>true if parents are occluded by the node</return>
    </javadoc>
    <method type="boolean" name="nodeOccludesParents" startLine="102" endLine="104" />
  </class>
</source>
