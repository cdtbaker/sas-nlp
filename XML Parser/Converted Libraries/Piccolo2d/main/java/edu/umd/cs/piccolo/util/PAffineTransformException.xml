<?xml version="1.0" encoding="UTF-8"?>
<source package="edu.umd.cs.piccolo.util">
  <class name="PAffineTransformException" extends="RuntimeException" startLine="31">
    <javadoc>
      <text>* This class is used to encapsulate exceptions that may occur while performing transform operations.</text>
      <since>1.3</since>
    </javadoc>
    <javadoc>
      <text>* Allows for future serialization code to understand versioned binary
 * formats.</text>
    </javadoc>
    <declaration type="long" name="serialVersionUID" />
    <declaration type="PAffineTransform" name="errantTransform" />
    <javadoc>
      <text>* Constructs an Exception that represents an error with the
 * errantTransform.</text>
      <param>errantTransform transform that caused the error</param>
    </javadoc>
    <method type="constructor" name="PAffineTransformException" startLine="51" endLine="53" />
    <javadoc>
      <text>* Constructs an Exception that represents an error with the
 * errantTransform.</text>
      <param>message Text message provided by the programmer about the context
 * of the error</param>
      <param>errantTransform transform that caused the error</param>
    </javadoc>
    <method type="constructor" name="PAffineTransformException" startLine="63" endLine="66" />
    <javadoc>
      <text>* Constructs an Exception that wraps another and records the errant
 * transform.</text>
      <param>throwable the root cause of the exception</param>
      <param>errantTransform transform that's related to the error</param>
    </javadoc>
    <method type="constructor" name="PAffineTransformException" startLine="75" endLine="78" />
    <javadoc>
      <text>* Constructs an Exception that wraps another and records the errant
 * transform and provides a human readable message about the exception's
 * context.</text>
      <param>message Text message provided by the programmer about the context
 * of the error</param>
      <param>throwable the root cause of the exception</param>
      <param>errantTransform transform that's related to the error</param>
    </javadoc>
    <method type="constructor" name="PAffineTransformException" startLine="91" endLine="94" />
    <javadoc>
      <text>* Used to access the transform related to this exception.</text>
      <return>transform related to the exception</return>
    </javadoc>
    <method type="PAffineTransform" name="getErrantTransform" startLine="101" endLine="103" />
  </class>
</source>
