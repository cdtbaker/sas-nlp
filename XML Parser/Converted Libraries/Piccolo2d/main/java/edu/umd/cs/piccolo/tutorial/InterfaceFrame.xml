<?xml version="1.0" encoding="UTF-8"?>
<source package="edu.umd.cs.piccolo.tutorial">
  <import name="java.awt.Color" />
  <import name="java.awt.Graphics2D" />
  <import name="edu.umd.cs.piccolo.PLayer" />
  <import name="edu.umd.cs.piccolo.PNode" />
  <import name="edu.umd.cs.piccolo.event.PBasicInputEventHandler" />
  <import name="edu.umd.cs.piccolo.event.PDragEventHandler" />
  <import name="edu.umd.cs.piccolo.event.PInputEvent" />
  <import name="edu.umd.cs.piccolo.nodes.PImage" />
  <import name="edu.umd.cs.piccolo.nodes.PPath" />
  <import name="edu.umd.cs.piccolo.nodes.PText" />
  <import name="edu.umd.cs.piccolo.util.PBounds" />
  <import name="edu.umd.cs.piccolo.util.PPaintContext" />
  <import name="edu.umd.cs.piccolox.PFrame" />
  <class name="InterfaceFrame" extends="PFrame" startLine="46">
    <javadoc />
    <declaration type="long" name="serialVersionUID" />
    <method type="void" name="initialize" startLine="53" endLine="136">
      <declaration type="PNode" name="aNode" />
      <declaration type="PLayer" name="layer" />
      <declaration type="PNode" name="anotherNode" />
      <declaration type="PImage" name="image" />
      <declaration type="PNode" name="myCompositeFace" />
      <declaration type="PNode" name="eye1" />
      <declaration type="PNode" name="eye2" />
      <declaration type="PNode" name="mouth" />
      <declaration type="PBounds" name="b" />
      <declaration type="ToggleShape" name="ts" />
      <comment>Remove the Default pan event handler and add a drag event handler</comment>
      <comment>so that we can drag the nodes around individually.</comment>
      <comment>Add Some Default Nodes</comment>
      <comment>Create a node.</comment>
      <comment>A node will not be visible until its bounds and paint are set.</comment>
      <comment>A node needs to be a descendant of the root to be displayed.</comment>
      <comment>A node can have child nodes added to it.</comment>
      <comment>The base bounds of a node are easy to change. Changing the bounds</comment>
      <comment>of a node will not affect its children.</comment>
      <comment>Each node has a transform that can be used to modify the position,</comment>
      <comment>scale or rotation of a node. Changing a node's transform, will</comment>
      <comment>transform all of its children as well.</comment>
      <comment>Add a couple of PPath nodes and a PText node.</comment>
      <comment>Here we create a PImage node that displays a thumbnail image</comment>
      <comment>of the root node. Then we add the new PImage to the main layer.</comment>
      <comment>Create a New Node using Composition</comment>
      <comment>Create parts for the face.</comment>
      <comment>Add the face parts.</comment>
      <comment>Don't want anyone grabbing out our eyes.</comment>
      <comment>Position the face parts.</comment>
      <comment>Set the face bounds so that it neatly contains the face parts.</comment>
      <comment>Opps it's too small, so scale it up.</comment>
      <comment>Create a New Node using Inheritance.</comment>
    </method>
    <class name="ToggleShape" extends="PPath" startLine="138">
      <declaration type="long" name="serialVersionUID" />
      <declaration type="boolean" name="isPressed" />
      <method type="constructor" name="ToggleShape" startLine="143" endLine="159">
        <method type="void" name="mousePressed" startLine="147" endLine="151" />
        <method type="void" name="mouseReleased" startLine="153" endLine="157" />
      </method>
      <method type="void" name="paint" startLine="161" endLine="170">
        <scope startLine="162" endLine="166">
          <declaration type="Graphics2D" name="g2" />
        </scope>
        <scope startLine="167" endLine="169" />
      </method>
      <method type="void" name="main" startLine="173" endLine="175" />
    </class>
  </class>
</source>
