<?xml version="1.0" encoding="UTF-8"?>
<source package="edu.umd.cs.piccolox.swt">
  <import name="java.awt.Color" />
  <import name="java.awt.geom.Point2D" />
  <import name="java.awt.geom.Rectangle2D" />
  <import name="java.util.List" />
  <import name="org.eclipse.swt.SWT" />
  <import name="edu.umd.cs.piccolo.PCamera" />
  <import name="edu.umd.cs.piccolo.PNode" />
  <import name="edu.umd.cs.piccolo.event.PInputEvent" />
  <import name="edu.umd.cs.piccolo.util.PBounds" />
  <import name="edu.umd.cs.piccolo.util.PPaintContext" />
  <import name="edu.umd.cs.piccolox.event.PSelectionEventHandler" />
  <class name="PSWTSelectionEventHandler" extends="PSelectionEventHandler" startLine="45">
    <javadoc>
      <text>* Selection event handler modified to use SWT paths instead of normal paths.</text>
      <version>1.0</version>
      <author>Lance Good</author>
    </javadoc>
    <declaration type="PSWTPath" name="marquee" />
    <declaration type="PNode" name="marqueeParent" />
    <declaration type="Point2D" name="pressPt" />
    <declaration type="Point2D" name="canvasPressPt" />
    <javadoc>
      <text>* Creates a selection event handler.</text>
      <param>marqueeParent The node to which the event handler dynamically adds
 * a marquee (temporarily) to represent the area being selected.</param>
      <param>selectableParent The node whose children will be selected by this
 * event handler.</param>
    </javadoc>
    <method type="constructor" name="PSWTSelectionEventHandler" startLine="66" endLine="69" />
    <javadoc>
      <text>* Creates a selection event handler.</text>
      <param>marqueeParent The node to which the event handler dynamically adds
 * a marquee (temporarily) to represent the area being selected.</param>
      <param>selectableParents A list of nodes whose children will be selected
 * by this event handler.</param>
    </javadoc>
    <method type="constructor" name="PSWTSelectionEventHandler" startLine="79" endLine="82" />
    <javadoc>
      <text>* Modifies the provided node so that it is displayed as selected.</text>
      <param>node node to be decorated</param>
    </javadoc>
    <method type="void" name="decorateSelectedNode" startLine="89" endLine="91" />
    <javadoc>
      <text>* Undoes any modifications to the provided node so that it is not displayed as selected.</text>
      <param>node node to be undecorated</param>
    </javadoc>
    <method type="void" name="undecorateSelectedNode" startLine="98" endLine="100" />
    <javadoc>
      <text>* {@inheritDoc}</text>
    </javadoc>
    <method type="void" name="initializeSelection" startLine="103" endLine="107" />
    <javadoc>
      <text>* {@inheritDoc}</text>
    </javadoc>
    <method type="void" name="initializeMarquee" startLine="110" endLine="129">
      <javadoc />
      <declaration type="long" name="serialVersionUID" />
      <method type="void" name="paint" startLine="119" endLine="124">
        <declaration type="SWTGraphics2D" name="s2g" />
      </method>
    </method>
    <javadoc>
      <text>* {@inheritDoc}</text>
    </javadoc>
    <method type="void" name="updateMarquee" startLine="132" endLine="150">
      <declaration type="PBounds" name="b" />
      <scope startLine="137" endLine="140" />
      <scope startLine="141" endLine="144" />
    </method>
    <javadoc>
      <text>* {@inheritDoc}</text>
    </javadoc>
    <method type="PBounds" name="getMarqueeBounds" startLine="153" endLine="158">
      <scope startLine="154" endLine="156" />
    </method>
    <javadoc>
      <text>* {@inheritDoc}</text>
    </javadoc>
    <method type="void" name="endMarqueeSelection" startLine="161" endLine="166" />
    <javadoc>
      <text>* {@inheritDoc}</text>
    </javadoc>
    <method type="void" name="dragActivityStep" startLine="169" endLine="170" />
  </class>
</source>
