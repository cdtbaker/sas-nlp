<?xml version="1.0" encoding="UTF-8"?>
<source package="edu.umd.cs.piccolox.nodes">
  <import name="java.awt.BasicStroke" />
  <import name="java.awt.Color" />
  <import name="java.awt.Graphics2D" />
  <import name="java.awt.Paint" />
  <import name="java.awt.Stroke" />
  <import name="java.awt.geom.GeneralPath" />
  <import name="java.awt.geom.Rectangle2D" />
  <import name="edu.umd.cs.piccolo.PNode" />
  <import name="edu.umd.cs.piccolo.util.PBounds" />
  <import name="edu.umd.cs.piccolo.util.PPaintContext" />
  <class name="P3DRect" extends="PNode" startLine="43">
    <javadoc>
      <text>* This is a simple node that draws a "3D" rectangle within the bounds of the
 * node. Drawing a 3D rectangle in a zooming environment is a little tricky
 * because if you just use the regular (Java2D) 3D rectangle, the 3D borders get
 * scaled, and that is ugly. This version always draws the 3D border at fixed 2
 * pixel width.</text>
      <author>Ben Bederson</author>
    </javadoc>
    <declaration type="long" name="serialVersionUID" />
    <declaration type="Color" name="topLeftOuterColor" />
    <declaration type="Color" name="topLeftInnerColor" />
    <declaration type="Color" name="bottomRightInnerColor" />
    <declaration type="Color" name="bottomRightOuterColor" />
    <declaration type="GeneralPath" name="path" />
    <declaration type="Stroke" name="stroke" />
    <declaration type="boolean" name="raised" />
    <javadoc>
      <text>* Constructs a simple P3DRect with empty bounds and a black stroke.</text>
    </javadoc>
    <method type="constructor" name="P3DRect" startLine="65" endLine="67" />
    <javadoc>
      <text>* Constructs a P3DRect with the provided bounds.</text>
      <param>bounds bounds to assigned to the P3DRect</param>
    </javadoc>
    <method type="constructor" name="P3DRect" startLine="74" endLine="76" />
    <javadoc>
      <text>* Constructs a P3DRect with the bounds provided.</text>
      <param>x left of bounds</param>
      <param>y top of bounds</param>
      <param>width width of bounds</param>
      <param>height height of bounds</param>
    </javadoc>
    <method type="constructor" name="P3DRect" startLine="86" endLine="89" />
    <javadoc>
      <text>* Sets whether this rectangle is raised off the canvas. If set to false,
 * this rectangle will appear recessed into the canvas.</text>
      <param>raised whether the rectangle should be painted as raised or
 * recessed</param>
    </javadoc>
    <method type="void" name="setRaised" startLine="98" endLine="101" />
    <javadoc>
      <text>* Returns whether this P3DRect is drawn as raised.</text>
      <return>true if raised</return>
    </javadoc>
    <method type="boolean" name="getRaised" startLine="108" endLine="110" />
    <javadoc>
      <text>* Paints this rectangle with shaded edges. Making it appear to stand out of
 * the page as normal 3D buttons do.</text>
      <param>paintContext context in which the paiting should occur</param>
    </javadoc>
    <method type="void" name="paint" startLine="118" endLine="170">
      <scope startLine="120" endLine="122" />
      <scope startLine="123" endLine="125" />
      <declaration type="Graphics2D" name="g2" />
      <declaration type="double" name="x" />
      <declaration type="double" name="y" />
      <declaration type="double" name="width" />
      <declaration type="double" name="height" />
      <declaration type="double" name="scaleX" />
      <declaration type="double" name="scaleY" />
      <declaration type="double" name="dx" />
      <declaration type="double" name="dy" />
      <declaration type="PBounds" name="bounds" />
      <comment>lazy init:</comment>
    </method>
    <javadoc>
      <text>* Changes the paint that will be used to draw this rectangle. This paint is
 * used to shade the edges of the rectangle.</text>
      <param>newPaint the color to use for painting this rectangle</param>
    </javadoc>
    <method type="void" name="setPaint" startLine="178" endLine="193">
      <scope startLine="181" endLine="189">
        <declaration type="Color" name="color" />
        <scope startLine="183" endLine="185" />
        <scope startLine="186" endLine="188" />
      </scope>
      <scope startLine="190" endLine="192" />
    </method>
    <method type="void" name="setRaisedEdges" startLine="195" endLine="200" />
    <method type="void" name="setNoEdges" startLine="202" endLine="207" />
    <method type="void" name="setRecessedEdges" startLine="209" endLine="214" />
    <javadoc>
      <text>* TODO can we remove this?</text>
      <deprecated>since it has been moved to P3DRectExample.</deprecated>
      <param>args Command line arguments</param>
    </javadoc>
    <method type="void" name="main" startLine="223" endLine="224" />
  </class>
</source>
