<?xml version="1.0" encoding="UTF-8"?>
<source package="edu.umd.cs.piccolo.event">
  <import name="java.awt.event.InputEvent" />
  <import name="edu.umd.cs.piccolo.PNode" />
  <import name="edu.umd.cs.piccolo.util.PDimension" />
  <class name="PDragEventHandler" extends="PDragSequenceEventHandler" startLine="36">
    <javadoc>
      <text>* PDragEventHandler is a simple event handler for dragging a node on the
 * canvas.</text>
      <version>1.0</version>
      <author>Jesse Grosjean</author>
    </javadoc>
    <declaration type="PNode" name="draggedNode" />
    <declaration type="boolean" name="moveToFrontOnPress" />
    <javadoc>
      <text>* Constructs a drag event handler which defaults to not moving the node to
 * the front on drag.</text>
    </javadoc>
    <method type="constructor" name="PDragEventHandler" startLine="52" endLine="57" />
    <javadoc>
      <text>* Returns the node that is currently being dragged, or null if none.</text>
      <return>node being dragged or null</return>
    </javadoc>
    <method type="PNode" name="getDraggedNode" startLine="64" endLine="66" />
    <javadoc>
      <text>* Set's the node that is currently being dragged.</text>
      <param>draggedNode node to be flagged as this handler's current drag node</param>
    </javadoc>
    <method type="void" name="setDraggedNode" startLine="73" endLine="75" />
    <javadoc>
      <text>* Returns whether the given event should be start a drag interaction.</text>
      <param>event the event being tested</param>
      <return>true if event is a valid start drag event</return>
    </javadoc>
    <method type="boolean" name="shouldStartDragInteraction" startLine="84" endLine="86" />
    <javadoc>
      <text>* Starts a drag event and moves the dragged node to the front if this
 * handler has been directed to do so with a call to setMoveToFrontOnDrag.</text>
      <param>event The Event responsible for the start of the drag</param>
    </javadoc>
    <method type="void" name="startDrag" startLine="94" endLine="100">
      <scope startLine="97" endLine="99" />
    </method>
    <javadoc>
      <text>* Moves the dragged node in proportion to the drag distance.</text>
      <param>event event representing the drag</param>
    </javadoc>
    <method type="void" name="drag" startLine="107" endLine="112">
      <declaration type="PDimension" name="d" />
    </method>
    <javadoc>
      <text>* Clears the current drag node.</text>
      <param>event Event reponsible for the end of the drag. Usually a
 * "Mouse Up" event.</param>
    </javadoc>
    <method type="void" name="endDrag" startLine="120" endLine="123" />
    <javadoc>
      <text>* Returns whether this drag event handler has been informed to move nodes
 * to the front of all other on drag.</text>
      <return>true if dragging a node will move it to the front</return>
    </javadoc>
    <method type="boolean" name="getMoveToFrontOnPress" startLine="131" endLine="133" />
    <javadoc>
      <text>* Informs this drag event handler whether it should move nodes to the front
 * when they are dragged. Default is false.</text>
      <param>moveToFrontOnPress true if dragging a node should move it to the
 * front</param>
    </javadoc>
    <method type="void" name="setMoveToFrontOnPress" startLine="142" endLine="144" />
  </class>
</source>
