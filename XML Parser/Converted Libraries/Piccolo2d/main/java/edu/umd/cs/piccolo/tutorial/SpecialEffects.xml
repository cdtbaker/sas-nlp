<?xml version="1.0" encoding="UTF-8"?>
<source package="edu.umd.cs.piccolo.tutorial">
  <import name="java.awt.Color" />
  <import name="edu.umd.cs.piccolo.PLayer" />
  <import name="edu.umd.cs.piccolo.PNode" />
  <import name="edu.umd.cs.piccolo.activities.PActivity" />
  <import name="edu.umd.cs.piccolo.nodes.PPath" />
  <import name="edu.umd.cs.piccolox.PFrame" />
  <class name="SpecialEffects" extends="PFrame" startLine="39">
    <javadoc />
    <declaration type="long" name="serialVersionUID" />
    <method type="void" name="initialize" startLine="45" endLine="112">
      <declaration type="PNode" name="aNode" />
      <declaration type="PLayer" name="layer" />
      <declaration type="long" name="currentTime" />
      <declaration type="PActivity" name="flash" />
      <declaration type="boolean" name="fRed" />
      <method type="void" name="activityStep" startLine="66" endLine="79">
        <scope startLine="71" endLine="73" />
        <scope startLine="74" endLine="76" />
      </method>
      <declaration type="PActivity" name="a1" />
      <declaration type="PActivity" name="a2" />
      <declaration type="PActivity" name="a3" />
      <method type="void" name="activityStarted" startLine="101" endLine="103" />
      <method type="void" name="activityStepped" startLine="105" endLine="106" />
      <method type="void" name="activityFinished" startLine="108" endLine="110" />
      <comment>Create the Target for our Activities.</comment>
      <comment>Create a new node that we will apply different activities to, and</comment>
      <comment>place that node at location 200, 200.</comment>
      <comment>Extend PActivity.</comment>
      <comment>Store the current time in milliseconds for use below.</comment>
      <comment>Create a new custom "flash" activity. This activity will start</comment>
      <comment>running in five seconds, and while it runs it will flash aNode's</comment>
      <comment>paint between red and green every half second.</comment>
      <comment>Toggle the target node's brush color between red and green</comment>
      <comment>each time the activity steps.</comment>
      <comment>Schedule the activity.</comment>
      <comment>Create three activities that animate the node's position. Since our</comment>
      <comment>node already descends from the root node the animate methods will</comment>
      <comment>automatically schedule these activities for us.</comment>
      <comment>The animate activities will start immediately (in the next call to</comment>
      <comment>PRoot.processInputs) by default. Here we set their start times (in</comment>
      <comment>PRoot global time) so that they start when the previous one has</comment>
      <comment>finished.</comment>
    </method>
    <method type="void" name="main" startLine="114" endLine="116" />
  </class>
</source>
