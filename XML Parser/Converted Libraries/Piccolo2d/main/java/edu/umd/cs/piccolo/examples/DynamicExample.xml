<?xml version="1.0" encoding="UTF-8"?>
<source package="edu.umd.cs.piccolo.examples">
  <import name="java.awt.BasicStroke" />
  <import name="java.awt.Color" />
  <import name="java.util.Iterator" />
  <import name="java.util.Random" />
  <import name="edu.umd.cs.piccolo.PCanvas" />
  <import name="edu.umd.cs.piccolo.PLayer" />
  <import name="edu.umd.cs.piccolo.PNode" />
  <import name="edu.umd.cs.piccolo.PRoot" />
  <import name="edu.umd.cs.piccolo.activities.PActivity" />
  <import name="edu.umd.cs.piccolo.nodes.PPath" />
  <import name="edu.umd.cs.piccolox.PFrame" />
  <import name="edu.umd.cs.piccolox.util.PFixedWidthStroke" />
  <class name="DynamicExample" extends="PFrame" startLine="45">
    <javadoc>
      <text>* 1000 nodes rotated continuously. Note that if you zoom to a portion of the
 * screen where you can't see any nodes the CPU usage goes down to 1%, even
 * though all the objects are still getting rotated continuously (every 20
 * milliseconds). This shows that the cost of repainting and bounds caches is
 * very cheap compared to the cost of drawing.</text>
    </javadoc>
    <javadoc />
    <declaration type="long" name="serialVersionUID" />
    <method type="constructor" name="DynamicExample" startLine="59" endLine="61" />
    <method type="constructor" name="DynamicExample" startLine="63" endLine="65" />
    <method type="void" name="initialize" startLine="67" endLine="93">
      <declaration type="PLayer" name="layer" />
      <declaration type="PRoot" name="root" />
      <declaration type="Random" name="r" />
      <scope startLine="71" endLine="76">
        <declaration type="PNode" name="n" />
      </scope>
      <declaration type="PActivity" name="a" />
      <method type="void" name="activityStep" startLine="79" endLine="82" />
      <declaration type="PPath" name="p" />
      <declaration type="PFixedWidthStroke[]" name="stroke" />
    </method>
    <method type="void" name="rotateNodes" startLine="95" endLine="101">
      <declaration type="Iterator" name="i" />
      <scope startLine="97" endLine="100">
        <declaration type="PNode" name="each" />
      </scope>
    </method>
    <method type="void" name="main" startLine="103" endLine="105" />
  </class>
</source>
