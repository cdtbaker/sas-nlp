<?xml version="1.0" encoding="UTF-8"?>
<source package="edu.umd.cs.piccolox.activities">
  <import name="java.awt.geom.GeneralPath" />
  <import name="java.awt.geom.PathIterator" />
  <import name="java.awt.geom.Point2D" />
  <import name="java.util.ArrayList" />
  <import name="edu.umd.cs.piccolo.activities.PInterpolatingActivity" />
  <class name="PPositionPathActivity" extends="PPathActivity" startLine="38">
    <javadoc>
      <text>* <b>PPositionPathActivity</b> animates through a sequence of points.</text>
      <version>1.0</version>
      <author>Jesse Grosjean</author>
    </javadoc>
    <javadoc>
      <text>* Points that define the animation's path.</text>
    </javadoc>
    <declaration type="Point2D[]" name="positions" />
    <javadoc>
      <text>* An abstract representation of the thing being positioned.</text>
    </javadoc>
    <declaration type="Target" name="target" />
    <interface name="Target" startLine="51">
      <javadoc>
        <text>* Interface that objects must conform to in order to have their position
 * animated.</text>
      </javadoc>
      <method name="setPosition" type="void" startLine="56" endLine="62" />
      <javadoc>
        <text>* Set's the target's position to the coordinate provided.</text>
        <param>x the x component of the new position</param>
        <param>y the y component of the new position</param>
      </javadoc>
      <javadoc>
        <text>* Constructs a position activity that acts on the given target for the
 * duration provided and will update it's position at the given stepRate.</text>
        <param>duration milliseconds of animation</param>
        <param>stepRate milliseconds between successive position updates</param>
        <param>target abstract representation of thing being animated</param>
      </javadoc>
      <method type="constructor" name="PPositionPathActivity" startLine="73" endLine="75" />
      <javadoc>
        <text>* Constructs a position activity that acts on the given target for the
 * duration provided and will update it's position at the given stepRate. It
 * will follow the path defined by the knots and positions arguments.</text>
        <param>duration milliseconds of animation</param>
        <param>stepRate milliseconds between successive position updates</param>
        <param>target abstract representation of thing being animated</param>
        <param>knots timing to use when animating</param>
        <param>positions points along the path</param>
      </javadoc>
      <method type="constructor" name="PPositionPathActivity" startLine="89" endLine="91" />
      <javadoc>
        <text>* Constructs a position activity that will repeat the number of times
 * specified. It will act on the given target for the duration provided and
 * will update it's position at the given stepRate. It will follow the path
 * defined by the knots and positions arguments.</text>
        <param>duration milliseconds of animation</param>
        <param>stepRate milliseconds between successive position updates</param>
        <param>loopCount number of times this activity should repeat</param>
        <param>mode how easing is handled on this activity</param>
        <param>target abstract representation of thing being animated</param>
        <param>knots timing to use when animating</param>
        <param>positions points along the path</param>
      </javadoc>
      <method type="constructor" name="PPositionPathActivity" startLine="108" endLine="112" />
      <javadoc>
        <text>* Returns true since this activity modifies the view and so cause a
 * repaint.</text>
        <return>always true</return>
      </javadoc>
      <method type="boolean" name="isAnimation" startLine="120" endLine="122" />
      <javadoc>
        <text>* Returns a copy of the path's points.</text>
        <return>array of points on the path</return>
      </javadoc>
      <method type="Point2D[]" name="getPositions" startLine="129" endLine="131" />
      <javadoc>
        <text>* Returns the point at the given index.</text>
        <param>index desired position index</param>
        <return>point at the given index</return>
      </javadoc>
      <method type="Point2D" name="getPosition" startLine="139" endLine="141" />
      <javadoc>
        <text>* Changes all positions that define where along the target is being
 * positioned during the animation.</text>
        <param>positions new animation positions</param>
      </javadoc>
      <method type="void" name="setPositions" startLine="149" endLine="151" />
      <javadoc>
        <text>* Sets the position of the point at the given index.</text>
        <param>index index of the point to change</param>
        <param>position point defining the new position</param>
      </javadoc>
      <method type="void" name="setPosition" startLine="159" endLine="161" />
      <javadoc>
        <text>* Extracts positions from a GeneralPath and uses them to define this
 * activity's animation points.</text>
        <param>path source of points</param>
      </javadoc>
      <method type="void" name="setPositions" startLine="169" endLine="225">
        <declaration type="PathIterator" name="pi" />
        <declaration type="ArrayList" name="points" />
        <declaration type="float[]" name="point" />
        <declaration type="float" name="distanceSum" />
        <declaration type="float" name="lastMoveToX" />
        <declaration type="float" name="lastMoveToY" />
        <scope startLine="177" endLine="209">
          <declaration type="int" name="type" />
          <scope startLine="202" endLine="206">
            <declaration type="Point2D" name="last" />
            <declaration type="Point2D" name="current" />
          </scope>
          <comment>ok to do nothing it'll just be skipped</comment>
        </scope>
        <declaration type="int" name="size" />
        <declaration type="Point2D[]" name="newPositions" />
        <declaration type="float[]" name="newKnots" />
        <scope startLine="215" endLine="221">
          <scope startLine="217" endLine="220">
            <declaration type="float" name="dist" />
          </scope>
        </scope>
      </method>
      <javadoc>
        <text>* Overridden to interpret position at correct point along animation.
 * TODO: improve these comments</text>
        <param>zeroToOne how far along the activity we are</param>
        <param>startKnot the index of the startKnot</param>
        <param>endKnot the index of the endKnot</param>
      </javadoc>
      <method type="void" name="setRelativeTargetValue" startLine="236" endLine="241">
        <declaration type="Point2D" name="start" />
        <declaration type="Point2D" name="end" />
      </method>
    </interface>
  </class>
</source>
