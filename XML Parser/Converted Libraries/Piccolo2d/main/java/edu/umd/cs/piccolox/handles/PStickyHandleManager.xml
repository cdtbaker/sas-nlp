<?xml version="1.0" encoding="UTF-8"?>
<source package="edu.umd.cs.piccolox.handles">
  <import name="edu.umd.cs.piccolo.PCamera" />
  <import name="edu.umd.cs.piccolo.PNode" />
  <import name="edu.umd.cs.piccolo.util.PBounds" />
  <import name="edu.umd.cs.piccolo.util.PPickPath" />
  <class name="PStickyHandleManager" extends="PNode" startLine="36">
    <javadoc>
      <text>* This class relays adjustments to its bounds to its target.</text>
    </javadoc>
    <declaration type="long" name="serialVersionUID" />
    <declaration type="PNode" name="target" />
    <declaration type="PCamera" name="camera" />
    <javadoc>
      <text>* Constructs a sticky handle manager responsible for updating the position
 * of its associated node on the camera provided.</text>
      <param>newCamera camera on which this manager is operating</param>
      <param>newTarget node to be positioned on the camera</param>
    </javadoc>
    <method type="constructor" name="PStickyHandleManager" startLine="51" endLine="54" />
    <javadoc>
      <text>* Changes the node and camera on which this manager is operating.</text>
      <param>newCamera camera on which this manager is operating</param>
      <param>newTarget node to be positioned on the camera</param>
    </javadoc>
    <method type="void" name="setCameraTarget" startLine="62" endLine="66" />
    <javadoc>
      <text>* By changing this sticky handle's bounds, it propagates that change to its
 * associated node.</text>
      <param>x x position of bounds</param>
      <param>y y position of bounds</param>
      <param>width width to apply to the bounds</param>
      <param>height height to apply to the bounds</param>
      <return>true if bounds were successfully changed</return>
    </javadoc>
    <method type="boolean" name="setBounds" startLine="79" endLine="86">
      <declaration type="PBounds" name="b" />
    </method>
    <javadoc>
      <text>* Since this node's bounds are always dependent on its target, it is
 * volatile.</text>
      <return>true since sticky handle manager's bounds are completely
 * dependent on its children</return>
    </javadoc>
    <method type="boolean" name="getBoundsVolatile" startLine="95" endLine="97" />
    <javadoc>
      <text>* The sticky handle manager's bounds as computed by examining its target
 * through its camera.</text>
      <return>the sticky handle manager's bounds as computed by examining its
 * target through its camera</return>
    </javadoc>
    <method type="PBounds" name="getBoundsReference" startLine="106" endLine="113">
      <declaration type="PBounds" name="targetBounds" />
      <declaration type="PBounds" name="bounds" />
    </method>
    <javadoc>
      <text>* Dispatches this event to its target as well.</text>
    </javadoc>
    <method type="void" name="startResizeBounds" startLine="118" endLine="121" />
    <javadoc>
      <text>* Dispatches this event to its target as well.</text>
    </javadoc>
    <method type="void" name="endResizeBounds" startLine="126" endLine="129" />
    <javadoc>
      <text>* Since this node is invisible, it doesn't make sense to have it be
 * pickable.</text>
      <return>false since it's invisible</return>
      <param>pickPath path in which we're trying to determine if this node is
 * pickable</param>
    </javadoc>
    <method type="boolean" name="pickAfterChildren" startLine="139" endLine="141" />
  </class>
</source>
