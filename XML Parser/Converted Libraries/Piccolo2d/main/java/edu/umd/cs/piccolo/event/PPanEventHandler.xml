<?xml version="1.0" encoding="UTF-8"?>
<source package="edu.umd.cs.piccolo.event">
  <import name="java.awt.event.InputEvent" />
  <import name="java.awt.geom.Point2D" />
  <import name="java.awt.geom.Rectangle2D" />
  <import name="edu.umd.cs.piccolo.PCamera" />
  <import name="edu.umd.cs.piccolo.util.PBounds" />
  <import name="edu.umd.cs.piccolo.util.PDimension" />
  <class name="PPanEventHandler" extends="PDragSequenceEventHandler" startLine="39">
    <javadoc>
      <text>* <b>PPanEventHandler</b> provides event handlers for basic panning of the
 * canvas view with the left mouse. The interaction is that clicking and
 * dragging the mouse translates the view so that the point on the surface stays
 * under the mouse.
 * <P></text>
      <version>1.0</version>
      <author>Jesse Grosjean</author>
    </javadoc>
    <declaration type="int" name="DEFAULT_MAX_AUTOPAN_SPEED" />
    <declaration type="int" name="DEFAULT_MIN_AUTOPAN_SPEED" />
    <declaration type="boolean" name="autopan" />
    <declaration type="double" name="minAutopanSpeed" />
    <declaration type="double" name="maxAutopanSpeed" />
    <javadoc>
      <text>* Constructs a Pan Event Handler that will by default perform auto-panning.</text>
    </javadoc>
    <method type="constructor" name="PPanEventHandler" startLine="61" endLine="65" />
    <javadoc>
      <text>* Updates the view in response to a user initiated drag event.</text>
      <param>event event responsible for the drag</param>
    </javadoc>
    <method type="void" name="drag" startLine="72" endLine="75" />
    <javadoc>
      <text>* Pans the camera in response to the pan event provided.</text>
      <param>event contains details about the drag used to translate the view</param>
    </javadoc>
    <method type="void" name="pan" startLine="82" endLine="90">
      <declaration type="PCamera" name="c" />
      <declaration type="Point2D" name="l" />
      <scope startLine="86" endLine="89">
        <declaration type="PDimension" name="d" />
      </scope>
    </method>
    <javadoc>
      <text>* Determines if auto-panning will occur or not.</text>
      <param>autopan true if auto-panning functionality will be active</param>
    </javadoc>
    <method type="void" name="setAutopan" startLine="101" endLine="103" />
    <javadoc>
      <text>* Returns whether the auto-panning functoinality is enabled.</text>
      <return>true if auto-panning is enabled</return>
    </javadoc>
    <method type="boolean" name="getAutopan" startLine="110" endLine="112" />
    <javadoc>
      <text>* Set the minAutoPan speed in pixels per second.</text>
      <param>minAutopanSpeed number of pixels to assign as the minimum the
 * autopan feature can pan the view</param>
    </javadoc>
    <method type="void" name="setMinAutopanSpeed" startLine="120" endLine="122" />
    <javadoc>
      <text>* Set the maxAutoPan speed in pixels per second.</text>
      <param>maxAutopanSpeed number of pixels to assign as the maximum the
 * autopan feature can pan the view</param>
    </javadoc>
    <method type="void" name="setMaxAutopanSpeed" startLine="130" endLine="132" />
    <javadoc>
      <text>* Returns the minAutoPan speed in pixels per second.</text>
      <since>1.3</since>
      <return>minimum distance the autopan feature can pan the view</return>
    </javadoc>
    <method type="double" name="getMinAutoPanSpeed" startLine="140" endLine="142" />
    <javadoc>
      <text>* Returns the maxAutoPan speed in pixels per second.</text>
      <since>1.3</since>
      <return>max distance the autopan feature can pan the view by</return>
    </javadoc>
    <method type="double" name="getMaxAutoPanSpeed" startLine="150" endLine="152" />
    <javadoc>
      <text>* Performs auto-panning if enabled, even when the mouse is not moving.</text>
      <param>event current drag relevant details about the drag activity</param>
    </javadoc>
    <method type="void" name="dragActivityStep" startLine="159" endLine="189">
      <scope startLine="160" endLine="162" />
      <declaration type="PCamera" name="c" />
      <declaration type="PBounds" name="b" />
      <declaration type="Point2D" name="l" />
      <declaration type="int" name="outcode" />
      <declaration type="PDimension" name="delta" />
      <scope startLine="170" endLine="172" />
      <scope startLine="173" endLine="175" />
      <scope startLine="177" endLine="179" />
      <scope startLine="180" endLine="182" />
      <scope startLine="186" endLine="188" />
    </method>
    <javadoc>
      <text>* Clips the panning speed to the minimum and maximum auto-pan speeds
 * assigned. If delta is below the threshold, it will be increased. If
 * above, it will be decreased.</text>
      <param>delta auto-pan delta to be clipped</param>
      <return>clipped delta value.</return>
    </javadoc>
    <method type="double" name="validatePanningSpeed" startLine="199" endLine="223">
      <declaration type="double" name="stepsPerSecond" />
      <declaration type="double" name="minDelta" />
      <declaration type="double" name="maxDelta" />
      <declaration type="double" name="absDelta" />
      <declaration type="double" name="clippedDelta" />
      <scope startLine="207" endLine="209" />
      <scope startLine="210" endLine="212" />
      <scope startLine="213" endLine="215" />
      <scope startLine="217" endLine="219" />
      <scope startLine="220" endLine="222" />
    </method>
    <comment>****************************************************************</comment>
    <comment>Auto Pan</comment>
    <comment>****************************************************************</comment>
  </class>
</source>
