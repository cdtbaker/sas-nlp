<?xml version="1.0" encoding="UTF-8"?>
<source package="edu.umd.cs.piccolox.event">
  <import name="java.util.Map" />
  <class name="PNotification" startLine="40">
    <javadoc>
      <text>* <b>PNotification</b> objects encapsulate information so that it can be
 * broadcast to other objects by a PNotificationCenter. A PNotification contains
 * a name, an object, and an optional properties map. The name is a tag
 * identifying the notification. The object is any object that the poster of the
 * notification wants to send to observers of that notification (typically, it
 * is the object that posted the notification). The properties map stores other
 * related objects, if any.
 * <p>
 * You don't usually create your own notifications directly. The
 * PNotificationCenter method postNotification() allow you to conveniently post
 * a notification without creating it first.
 * </p></text>
      <author>Jesse Grosjean</author>
    </javadoc>
    <javadoc>
      <text>* Name of the notification.</text>
    </javadoc>
    <declaration type="String" name="name" />
    <javadoc>
      <text>* The Object associated with this notification.</text>
    </javadoc>
    <declaration type="Object" name="source" />
    <javadoc>
      <text>* A free form map of properties to attach to this notification.</text>
    </javadoc>
    <declaration type="Map" name="properties" />
    <javadoc>
      <text>* Creates a notification.</text>
      <param>name Arbitrary name of the notification</param>
      <param>source object associated with this notification</param>
      <param>properties free form map of information about the notification</param>
    </javadoc>
    <method type="constructor" name="PNotification" startLine="71" endLine="75" />
    <javadoc>
      <text>* Return the name of the notification. This is the same as the name used to
 * register with the notification center.</text>
      <return>name of notification</return>
    </javadoc>
    <method type="String" name="getName" startLine="83" endLine="85" />
    <javadoc>
      <text>* Return the object associated with this notification. This is most often
 * the same object that posted the notification. It may be null.</text>
      <return>object associated with this notification</return>
    </javadoc>
    <method type="Object" name="getObject" startLine="93" endLine="95" />
    <javadoc>
      <text>* Return a property associated with the notification, or null if not found.</text>
      <param>key key used for looking up the property</param>
      <return>value associated with the key or null if not found</return>
    </javadoc>
    <method type="Object" name="getProperty" startLine="103" endLine="108">
      <scope startLine="104" endLine="106" />
    </method>
  </class>
</source>
