<?xml version="1.0" encoding="UTF-8"?>
    <source package="edu.umd.cs.piccolox.swing">
        <import package="java.awt.Component"/>
        <import package="java.awt.Dimension"/>
        <import package="java.awt.Point"/>
        <import package="java.awt.Rectangle"/>
        <import package="java.awt.event.ActionEvent"/>
        <import package="java.awt.event.AdjustmentEvent"/>
        <import package="java.awt.event.AdjustmentListener"/>
        <import package="javax.swing.AbstractAction"/>
        <import package="javax.swing.ActionMap"/>
        <import package="javax.swing.JScrollBar"/>
        <import package="javax.swing.JScrollPane"/>
        <import package="javax.swing.JViewport"/>
        <import package="javax.swing.Scrollable"/>
        <import package="javax.swing.SwingConstants"/>
        <import package="javax.swing.plaf.ScrollPaneUI"/>
        <import package="edu.umd.cs.piccolo.PCanvas"/>
        <class name="PScrollPane" extends="JScrollPane" line="50">
            <javadoc line="50">
                A simple extension to a standard scroll pane that uses the jazz version of
                 * the viewport by default. Also uses the jazz version of ScrollPaneLayout                
                <@author>
                    r Lance Good                    
                </@author>
            </javadoc>
            <declaration name="serialVersionUID" type="long" line="58"/>
            <declaration name="nullAction" type="PNullAction" line="60"/>
            <javadoc line="60">
                A reusable null action.                
            </javadoc>
            <declaration name="disableKeyActions" type="boolean" line="63"/>
            <javadoc line="63">
                Controls whether key actions are disabled on this component.                
            </javadoc>
            <declaration name="scrollAdjustmentListener" type="AdjustmentListener" line="66"/>
            <anonymous_class line="66">
                <declaration name="lastAdjustingState" type="boolean" line="67"/>
                <method name="adjustmentValueChanged" type="void" line="69">
                    <scope line="70">
                        <declaration name="scrollBar" type="JScrollBar" line="71"/>
                    </scope>
                </method>
                <javadoc line="77">
                    Updates the underlying PCanvas&apos; interacting flag depending on whether
                     * scroll bar adjustments are still taking place.                    
                    <@param>
                        m isAdjusting true if the scroll bar is still being interacted
                         * with                        
                    </@param>
                </javadoc>
                <method name="setAdjusting" type="void" line="84">
                    <scope line="85">
                        <declaration name="c" type="Component" line="86"/>
                        <scope line="87"/>
                    </scope>
                </method>
            </anonymous_class>
            <javadoc line="95">
                Constructs a scollpane for the provided component with the specified
                 * scrollbar policies.                
                <@param>
                    m view component being viewed through the scrollpane                    
                </@param>
                <@param>
                    m vsbPolicy vertical scroll bar policy                    
                </@param>
                <@param>
                    m hsbPolicy horizontal scroll bar policy                    
                </@param>
            </javadoc>
            <method name="PScrollPane" type="constructor" line="103">
                <comment line="104">
                    Set the layout and sync it with the scroll pane                    
                </comment>
                <declaration name="layout" type="PScrollPaneLayout" line="107"/>
            </method>
            <javadoc line="115">
                Intercepts the vertical scroll bar setter to ensure that the adjustment
                 * listener is installed appropriately.                
                <@param>
                    m newVerticalScrollBar the new vertical scroll bar to use with this PScrollPane                    
                </@param>
            </javadoc>
            <method name="setVerticalScrollBar" type="void" line="121">
                <scope line="122"/>
            </method>
            <javadoc line="130">
                Intercepts the horizontal scroll bar setter to ensure that the adjustment
                 * listener is installed appropriately.                
                <@param>
                    m newHorizontalScrollBar the new horizontal scroll bar to use with this PScrollPane                    
                </@param>
            </javadoc>
            <method name="setHorizontalScrollBar" type="void" line="136">
                <scope line="137"/>
            </method>
            <javadoc line="145">
                Constructs a scroll pane for the provided component.                
                <@param>
                    m view component being viewed through the scroll pane                    
                </@param>
            </javadoc>
            <method name="PScrollPane" type="constructor" line="150"/>
            <javadoc line="154">
                Constructs a scroll pane not attached to any component with the specified
                 * scroll bar policies.                
                <@param>
                    m vsbPolicy vertical scroll bar policy                    
                </@param>
                <@param>
                    m hsbPolicy horizontal scroll bar policy                    
                </@param>
            </javadoc>
            <method name="PScrollPane" type="constructor" line="161"/>
            <javadoc line="165">
                Constructs a scroll pane not attached to any component.                
            </javadoc>
            <method name="PScrollPane" type="constructor" line="168"/>
            <javadoc line="172">
                Disable or enable key actions on this PScrollPane.                
                <@param>
                    m disable true disables key actions, false enables key actions                    
                </@param>
            </javadoc>
            <method name="setKeyActionsDisabled" type="void" line="177">
                <scope line="178"/>
                <scope line="182"/>
            </method>
            <javadoc line="188">
                Sets the UI.                
                <@param>
                    m ui the scroll pane UI to associate with this PScollPane                    
                </@param>
            </javadoc>
            <method name="setUI" type="void" line="193">
                <scope line="196"/>
                <scope line="199"/>
            </method>
            <javadoc line="204">
                Install custom key actions (in place of the Swing defaults) to correctly
                 * scroll the view.                
            </javadoc>
            <method name="installCustomKeyActions" type="void" line="208">
                <declaration name="map" type="ActionMap" line="209"/>
            </method>
            <javadoc line="225">
                Disables key actions on this PScrollPane.                
            </javadoc>
            <method name="disableKeyActions" type="void" line="228">
                <declaration name="map" type="ActionMap" line="229"/>
                <scope line="231"/>
            </method>
            <javadoc line="247">
                Overridden to create the Piccolo2D viewport.                
                <@return>
                    n the Piccolo2D version of the viewport                    
                </@return>
            </javadoc>
            <method name="createViewport" type="JViewport" line="252"/>
            <class name="PScrollAction" extends="AbstractAction" line="256">
                <javadoc line="256">
                    Action to scroll left/right/up/down. Modified from
                     * javax.swing.plaf.basic.BasicScrollPaneUI.ScrollAction.
                     * Gets the view parameters (position and size) from the Viewport rather
                     * than directly from the view - also only performs its actions when the
                     * relevant scrollbar is visible.                    
                </javadoc>
                <declaration name="MINIMUM_SCROLL_SIZE" type="int" line="265"/>
                <declaration name="serialVersionUID" type="long" line="266"/>
                <declaration name="orientation" type="int" line="267"/>
                <javadoc line="267">
                    Direction to scroll.                    
                </javadoc>
                <declaration name="direction" type="int" line="269"/>
                <javadoc line="269">
                    1 indicates scroll down, -1 up.                    
                </javadoc>
                <declaration name="block" type="boolean" line="271"/>
                <javadoc line="271">
                    True indicates a block scroll, otherwise a unit scroll.                    
                </javadoc>
                <javadoc line="274">
                    Constructs a scroll action with the given name in the given
                     * orientiation stated and in the direction provided.                    
                    <@param>
                        m name arbitrary name of action                        
                    </@param>
                    <@param>
                        m orientation horizontal or vertical                        
                    </@param>
                    <@param>
                        m direction 1 indicates scroll down, -1 up                        
                    </@param>
                    <@param>
                        m block true if block scroll as opposed to unit                        
                    </@param>
                </javadoc>
                <method name="PScrollAction" type="constructor" line="283"/>
                <javadoc line="290">
                    Performs the scroll action if the action was performed on visible
                     * scrollbars and if the viewport is valid.                    
                    <@param>
                        m event the event responsible for this action being performed                        
                    </@param>
                </javadoc>
                <method name="actionPerformed" type="void" line="296">
                    <comment line="297">
                        LEG: Modification to query the viewport for the                        
                    </comment>
                    <comment line="297">
                        view size rather than going directly to the view                        
                    </comment>
                    <declaration name="scrollpane" type="JScrollPane" line="297"/>
                    <scope line="298"/>
                    <declaration name="vp" type="JViewport" line="302"/>
                    <scope line="303"/>
                    <declaration name="view" type="Component" line="307"/>
                    <scope line="308"/>
                    <declaration name="visRect" type="Rectangle" line="312"/>
                    <declaration name="vSize" type="Dimension" line="315"/>
                    <declaration name="amount" type="int" line="316"/>
                    <scope line="318">
                        <scope line="319"/>
                        <scope line="322"/>
                    </scope>
                    <scope line="326">
                        <scope line="327">
                            <scope line="328"/>
                            <scope line="331"/>
                        </scope>
                        <scope line="335"/>
                    </scope>
                    <scope line="340">
                        <scope line="342"/>
                        <scope line="345"/>
                    </scope>
                    <scope line="349">
                        <scope line="351"/>
                        <scope line="354"/>
                    </scope>
                </method>
                <method name="isScrollEventOnVisibleScrollbars" type="boolean" line="361"/>
            </class>
            <class name="PScrollHomeAction" extends="AbstractAction" line="367">
                <javadoc line="367">
                    Action to scroll to x,y location of 0,0. Modified from
                     * javax.swing.plaf.basic.BasicScrollPaneUI.ScrollEndAction.
                     * Only performs the event if a scrollbar is visible.                    
                </javadoc>
                <declaration name="serialVersionUID" type="long" line="374"/>
                <method name="PScrollHomeAction" type="constructor" line="376"/>
                <method name="actionPerformed" type="void" line="380">
                    <comment line="381">
                        LEG: Modification to only perform these actions if one of the                        
                    </comment>
                    <comment line="381">
                        scrollbars is actually showing                        
                    </comment>
                    <declaration name="scrollpane" type="JScrollPane" line="381"/>
                    <scope line="384">
                        <declaration name="vp" type="JViewport" line="385"/>
                        <scope line="386"/>
                    </scope>
                </method>
            </class>
            <class name="PScrollEndAction" extends="AbstractAction" line="393">
                <javadoc line="393">
                    Action to scroll to last visible location. Modified from
                     * javax.swing.plaf.basic.BasicScrollPaneUI.ScrollEndAction.
                     * Gets the view size from the viewport rather than directly from the view -
                     * also only performs the event if a scrollbar is visible.                    
                </javadoc>
                <declaration name="serialVersionUID" type="long" line="401"/>
                <javadoc line="403">
                    Constructs a scroll to end action with the given name.                    
                    <@param>
                        m name name to assign to this action                        
                    </@param>
                </javadoc>
                <method name="PScrollEndAction" type="constructor" line="408"/>
                <javadoc line="412">
                    Scrolls to the end of the viewport if there are visible scrollbars.                    
                    <@param>
                        m event event responsible for the scroll event                        
                    </@param>
                </javadoc>
                <method name="actionPerformed" type="void" line="417">
                    <comment line="418">
                        LEG: Modification to only perform these actions if one of the                        
                    </comment>
                    <comment line="418">
                        scrollbars is actually showing                        
                    </comment>
                    <declaration name="scrollpane" type="JScrollPane" line="418"/>
                    <scope line="421">
                        <declaration name="vp" type="JViewport" line="423"/>
                        <scope line="424">
                            <declaration name="visRect" type="Rectangle" line="426"/>
                            <declaration name="size" type="Dimension" line="429"/>
                        </scope>
                    </scope>
                </method>
            </class>
            <class name="PNullAction" extends="AbstractAction" line="436">
                <javadoc line="436">
                    An action to do nothing - put into an action map to keep it from looking
                     * to its parent.                    
                </javadoc>
                <declaration name="serialVersionUID" type="long" line="441"/>
                <javadoc line="443">
                    Does nothing.                    
                    <@param>
                        m e Event responsible for this action                        
                    </@param>
                </javadoc>
                <method name="actionPerformed" type="void" line="448"/>
            </class>
        </class>
    </source>