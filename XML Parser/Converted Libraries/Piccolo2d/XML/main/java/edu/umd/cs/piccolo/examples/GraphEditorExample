<?xml version="1.0" encoding="UTF-8"?>
    <source package="edu.umd.cs.piccolo.examples">
        <import package="java.awt.Color"/>
        <import package="java.awt.geom.Point2D"/>
        <import package="java.util.ArrayList"/>
        <import package="java.util.Random"/>
        <import package="edu.umd.cs.piccolo.PCanvas"/>
        <import package="edu.umd.cs.piccolo.PLayer"/>
        <import package="edu.umd.cs.piccolo.PNode"/>
        <import package="edu.umd.cs.piccolo.event.PDragSequenceEventHandler"/>
        <import package="edu.umd.cs.piccolo.event.PInputEvent"/>
        <import package="edu.umd.cs.piccolo.nodes.PPath"/>
        <import package="edu.umd.cs.piccolox.PFrame"/>
        <class name="GraphEditorExample" line="44">
            <extends class="PFrame"/>
            <comment line="45">
                TODO eclipse formatter made this ugly                
            </comment>
            <comment line="45">
                / &lt;summary&gt;                
            </comment>
            <comment line="45">
                / Simple event handler which applies the following actions to every node                
            </comment>
            <comment line="45">
                it is called on:                
            </comment>
            <comment line="45">
                / * Turn node red when the mouse goes over the node                
            </comment>
            <comment line="45">
                / * Turn node white when the mouse exits the node                
            </comment>
            <comment line="45">
                / * Drag the node, and associated edges on mousedrag                
            </comment>
            <comment line="45">
                / It assumes that the node&apos;s Tag references an ArrayList with a list of                
            </comment>
            <comment line="45">
                associated                
            </comment>
            <comment line="45">
                / edges where each edge is a PPath which each have a Tag that references                
            </comment>
            <comment line="45">
                an ArrayList                
            </comment>
            <comment line="45">
                / with a list of associated nodes.                
            </comment>
            <comment line="45">
                / &lt;/summary&gt;                
            </comment>
            <javadoc line="44">
                Create a simple graph with some random nodes and connected edges. An event
                  handler allows users to drag nodes around, keeping the edges connected.
                  ported from .NET GraphEditorExample by Sun Hongmei.                
            </javadoc>
            <declaration name="serialVersionUID" type="long" line="52"/>
            <javadoc line="52">
                                
            </javadoc>
            <method name="GraphEditorExample" type="constructor" line="57"/>
            <method name="GraphEditorExample" type="constructor" line="61">
                <params>
                    <param name="aCanvas" type="PCanvas"/>
                </params>
            </method>
            <method name="initialize" type="void" line="65">
                <comment line="66">
                    Initialize, and create a layer for the edges (always underneath the                    
                </comment>
                <comment line="66">
                    nodes)                    
                </comment>
                <comment line="66">
                    Create some random edges                    
                </comment>
                <comment line="66">
                    Each edge&apos;s Tag has an ArrayList used to store associated nodes                    
                </comment>
                <comment line="66">
                    Create event handler to move nodes and update edges                    
                </comment>
                <declaration name="numNodes" type="int" line="66"/>
                <declaration name="numEdges" type="int" line="67"/>
                <declaration name="nodeLayer" type="PLayer" line="71"/>
                <declaration name="edgeLayer" type="PLayer" line="72"/>
                <declaration name="rnd" type="Random" line="74"/>
                <declaration name="tmp" type="ArrayList" line="75"/>
                <scope line="76">
                    <declaration name="x" type="float" line="77"/>
                    <declaration name="y" type="float" line="78"/>
                    <declaration name="path" type="PPath" line="79"/>
                </scope>
                <scope line="87">
                    <declaration name="n1" type="int" line="88"/>
                    <declaration name="n2" type="int" line="89"/>
                    <declaration name="node1" type="PNode" line="90"/>
                    <declaration name="node2" type="PNode" line="91"/>
                    <declaration name="bound1" type="Point2D.Double" line="93"/>
                    <declaration name="bound2" type="Point2D.Double" line="94"/>
                    <declaration name="edge" type="PPath" line="96"/>
                </scope>
            </method>
            <method name="main" type="void" line="117">
                <params>
                    <param name="args" type="String[]"/>
                </params>
            </method>
            <class name="NodeDragHandler" line="134">
                <extends class="PDragSequenceEventHandler"/>
                <method name="NodeDragHandler" type="constructor" line="135"/>
                <method name="mouseEntered" type="void" line="139">
                    <params>
                        <param name="e" type="PInputEvent"/>
                    </params>
                    <scope line="140"/>
                </method>
                <method name="mouseExited" type="void" line="145">
                    <params>
                        <param name="e" type="PInputEvent"/>
                    </params>
                    <scope line="146"/>
                </method>
                <method name="drag" type="void" line="151">
                    <params>
                        <param name="e" type="PInputEvent"/>
                    </params>
                    <declaration name="node" type="PNode" line="152"/>
                    <declaration name="edges" type="ArrayList" line="155"/>
                    <declaration name="i" type="int" line="157"/>
                    <scope line="158">
                        <declaration name="edge" type="PPath" line="159"/>
                        <declaration name="nodes" type="ArrayList" line="160"/>
                        <declaration name="node1" type="PNode" line="161"/>
                        <declaration name="node2" type="PNode" line="162"/>
                        <declaration name="bound1" type="Point2D.Double" line="169"/>
                        <declaration name="bound2" type="Point2D.Double" line="170"/>
                    </scope>
                </method>
            </class>
        </class>
    </source>