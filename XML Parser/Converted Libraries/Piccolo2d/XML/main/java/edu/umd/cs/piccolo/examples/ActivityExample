<?xml version="1.0" encoding="UTF-8"?>
    <source package="edu.umd.cs.piccolo.examples">
        <import package="java.awt.Color"/>
        <import package="edu.umd.cs.piccolo.PCanvas"/>
        <import package="edu.umd.cs.piccolo.PLayer"/>
        <import package="edu.umd.cs.piccolo.PNode"/>
        <import package="edu.umd.cs.piccolo.activities.PActivity"/>
        <import package="edu.umd.cs.piccolo.nodes.PPath"/>
        <import package="edu.umd.cs.piccolox.PFrame"/>
        <class name="ActivityExample" extends="PFrame" line="40">
            <javadoc line="40">
                This example shows how create and schedule activities.                
            </javadoc>
            <declaration name="serialVersionUID" type="long" line="44"/>
            <method name="ActivityExample" type="constructor" line="46"/>
            <method name="ActivityExample" type="constructor" line="50"/>
            <method name="initialize" type="void" line="54">
                <comment line="55">
                    Create a new node that we will apply different activities to, and                    
                </comment>
                <comment line="55">
                    place that node at location 200, 200.                    
                </comment>
                <comment line="55">
                    Create a new custom &quot;flash&quot; activity. This activity will start                    
                </comment>
                <comment line="55">
                    running in five seconds, and while it runs it will flash aNode&apos;s                    
                </comment>
                <comment line="55">
                    paint between red and green every half second.                    
                </comment>
                <comment line="55">
                    An activity will not run unless it is scheduled with the root. Once                    
                </comment>
                <comment line="55">
                    it has been scheduled it will be given a chance to run during the                    
                </comment>
                <comment line="55">
                    next PRoot.processInputs() call.                    
                </comment>
                <comment line="55">
                    Use the PNode animate methods to create three activities that animate                    
                </comment>
                <comment line="55">
                    the node&apos;s position. Since our node already descends from the root                    
                </comment>
                <comment line="55">
                    node the animate methods will automatically schedule these activities                    
                </comment>
                <comment line="55">
                    for us.                    
                </comment>
                <comment line="55">
                    the animate activities will start immediately (in the next call to                    
                </comment>
                <comment line="55">
                    PRoot.processInputs) by default. Here we set their start times (in                    
                </comment>
                <comment line="55">
                    PRoot global time) so that they start when the previous one has                    
                </comment>
                <comment line="55">
                    finished.                    
                </comment>
                <comment line="55">
                    or the previous three lines could be replaced with these lines for                    
                </comment>
                <comment line="55">
                    the same effect.                    
                </comment>
                <comment line="55">
                    a2.setStartTime(currentTime + 5000);                    
                </comment>
                <comment line="55">
                    a3.setStartTime(currentTime + 10000);                    
                </comment>
                <comment line="55">
                    a4.setStartTime(currentTime + 15000);                    
                </comment>
                <declaration name="currentTime" type="long" line="55"/>
                <declaration name="aNode" type="PNode" line="59"/>
                <declaration name="layer" type="PLayer" line="60"/>
                <anonymous_class line="67">
                    <declaration name="fRed" type="boolean" line="68"/>
                    <method name="activityStep" type="void" line="70">
                        <scope line="73"/>
                        <scope line="76"/>
                    </method>
                </anonymous_class>
                <declaration name="flash" type="PActivity" line="67"/>
                <declaration name="a1" type="PActivity" line="93"/>
                <declaration name="a2" type="PActivity" line="94"/>
                <declaration name="a3" type="PActivity" line="95"/>
                <declaration name="a4" type="PActivity" line="96"/>
            </method>
            <method name="main" type="void" line="115"/>
        </class>
    </source>