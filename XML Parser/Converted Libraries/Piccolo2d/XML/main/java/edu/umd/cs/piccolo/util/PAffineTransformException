<?xml version="1.0" encoding="UTF-8"?>
    <source package="edu.umd.cs.piccolo.util">
        <class name="PAffineTransformException" extends="RuntimeException" line="31">
            <javadoc line="31">
                This class is used to encapsulate exceptions that may occur while performing transform operations.                
                <@since>
                    e 1.3                    
                </@since>
            </javadoc>
            <declaration name="serialVersionUID" type="long" line="37"/>
            <javadoc line="37">
                Allows for future serialization code to understand versioned binary
                 * formats.                
            </javadoc>
            <declaration name="errantTransform" type="PAffineTransform" line="43"/>
            <javadoc line="45">
                Constructs an Exception that represents an error with the
                 * errantTransform.                
                <@param>
                    m errantTransform transform that caused the error                    
                </@param>
            </javadoc>
            <method name="PAffineTransformException" type="constructor" line="51"/>
            <javadoc line="55">
                Constructs an Exception that represents an error with the
                 * errantTransform.                
                <@param>
                    m message Text message provided by the programmer about the context
                     * of the error                    
                </@param>
                <@param>
                    m errantTransform transform that caused the error                    
                </@param>
            </javadoc>
            <method name="PAffineTransformException" type="constructor" line="63"/>
            <javadoc line="68">
                Constructs an Exception that wraps another and records the errant
                 * transform.                
                <@param>
                    m throwable the root cause of the exception                    
                </@param>
                <@param>
                    m errantTransform transform that's related to the error                    
                </@param>
            </javadoc>
            <method name="PAffineTransformException" type="constructor" line="75"/>
            <javadoc line="80">
                Constructs an Exception that wraps another and records the errant
                 * transform and provides a human readable message about the exception&apos;s
                 * context.                
                <@param>
                    m message Text message provided by the programmer about the context
                     * of the error                    
                </@param>
                <@param>
                    m throwable the root cause of the exception                    
                </@param>
                <@param>
                    m errantTransform transform that's related to the error                    
                </@param>
            </javadoc>
            <method name="PAffineTransformException" type="constructor" line="91"/>
            <javadoc line="96">
                Used to access the transform related to this exception.                
                <@return>
                    n transform related to the exception                    
                </@return>
            </javadoc>
            <method name="getErrantTransform" type="PAffineTransform" line="101"/>
        </class>
    </source>