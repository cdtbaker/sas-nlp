<?xml version="1.0" encoding="UTF-8"?>
    <source package="edu.umd.cs.piccolox.event">
        <import package="java.util.Map"/>
        <class name="PNotification" line="40">
            <javadoc line="40">
                &lt;b&gt;PNotification&lt;/b&gt; objects encapsulate information so that it can be
                  broadcast to other objects by a PNotificationCenter. A PNotification contains
                  a name, an object, and an optional properties map. The name is a tag
                  identifying the notification. The object is any object that the poster of the
                  notification wants to send to observers of that notification (typically, it
                  is the object that posted the notification). The properties map stores other
                  related objects, if any.
                  &lt;p&gt;
                  You don&apos;t usually create your own notifications directly. The
                  PNotificationCenter method postNotification() allow you to conveniently post
                  a notification without creating it first.
                  &lt;/p&gt;                
                <@author>
                    r Jesse Grosjean                    
                </@author>
            </javadoc>
            <declaration name="name" type="String" line="57"/>
            <javadoc line="57">
                Name of the notification.                
            </javadoc>
            <declaration name="source" type="Object" line="59"/>
            <javadoc line="59">
                The Object associated with this notification.                
            </javadoc>
            <declaration name="properties" type="Map" line="61"/>
            <javadoc line="61">
                A free form map of properties to attach to this notification.                
            </javadoc>
            <javadoc line="64">
                Creates a notification.                
                <@param>
                    m name Arbitrary name of the notification                    
                </@param>
                <@param>
                    m source object associated with this notification                    
                </@param>
                <@param>
                    m properties free form map of information about the notification                    
                </@param>
            </javadoc>
            <method name="PNotification" type="constructor" line="71">
                <params>
                    <param name="name" type="String"/>
                    <param name="source" type="Object"/>
                    <param name="properties" type="Map"/>
                </params>
            </method>
            <javadoc line="77">
                Return the name of the notification. This is the same as the name used to
                  register with the notification center.                
                <@return>
                    n name of notification                    
                </@return>
            </javadoc>
            <method name="getName" type="String" line="83"/>
            <javadoc line="87">
                Return the object associated with this notification. This is most often
                  the same object that posted the notification. It may be null.                
                <@return>
                    n object associated with this notification                    
                </@return>
            </javadoc>
            <method name="getObject" type="Object" line="93"/>
            <javadoc line="97">
                Return a property associated with the notification, or null if not found.                
                <@param>
                    m key key used for looking up the property                    
                </@param>
                <@return>
                    n value associated with the key or null if not found                    
                </@return>
            </javadoc>
            <method name="getProperty" type="Object" line="103">
                <params>
                    <param name="key" type="Object"/>
                </params>
                <scope line="104"/>
            </method>
        </class>
    </source>