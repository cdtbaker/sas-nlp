<?xml version="1.0" encoding="UTF-8"?>
    <source package="edu.umd.cs.piccolo.activities">
        <import package="java.awt.Color"/>
        <class name="PColorActivity" line="33">
            <extends class="PInterpolatingActivity"/>
            <javadoc line="33">
                &lt;b&gt;PColorActivity&lt;/b&gt; interpolates between two colors for its target over the
                  duration of the animation. The source color is retrieved from the target just
                  before the activity is scheduled to start.
                  &lt;P&gt;                
                <@version>
                    n 1.0                    
                </@version>
                <@author>
                    r Jesse Grosjean                    
                </@author>
            </javadoc>
            <declaration name="source" type="Color" line="44"/>
            <declaration name="destination" type="Color" line="45"/>
            <declaration name="target" type="Target" line="46"/>
            <interface name="Target">
                <javadoc line="48">
                    &lt;b&gt;Target&lt;/b&gt; Objects that want their color to be set by the color
                      activity must implement this interface.                    
                </javadoc>
                <method name="setColor" type="void" line="54"/>
                <javadoc line="54">
                    This will be called by the color activity for each new interpolated
                      color that it computes while it is stepping.                    
                    <@param>
                        m color the color to assign to the target                        
                    </@param>
                </javadoc>
                <method name="getColor" type="Color" line="62"/>
                <javadoc line="62">
                    This method is called right before the color activity starts. That
                      way an object&apos;s color is always animated from its current color.                    
                    <@return>
                        n the target's current color.                        
                    </@return>
                </javadoc>
            </interface>
            <javadoc line="71">
                Constructs a color activity for the given target that will animate for
                  the duration provided at an interval of stepRate.
                  Destination color must be assigned later.                
                <@param>
                    m duration duration in milliseconds that the animation should last                    
                </@param>
                <@param>
                    m stepRate the time between interpolations                    
                </@param>
                <@param>
                    m aTarget the target onto which the animation is being performed                    
                </@param>
            </javadoc>
            <method name="PColorActivity" type="constructor" line="81">
                <params>
                    <param name="duration" type="long"/>
                    <param name="stepRate" type="long"/>
                    <param name="aTarget" type="Target"/>
                </params>
            </method>
            <javadoc line="85">
                Constructs a color activity for the given target that will animate for
                  the duration provided at an interval of stepRate from the target&apos;s
                  starting color to the destination color.                
                <@param>
                    m duration duration in milliseconds that the animation should last                    
                </@param>
                <@param>
                    m stepRate the time between interpolations                    
                </@param>
                <@param>
                    m aTarget the target onto which the animation is being performed                    
                </@param>
                <@param>
                    m aDestination the color to which the animation is aiming at                    
                </@param>
            </javadoc>
            <method name="PColorActivity" type="constructor" line="95">
                <params>
                    <param name="duration" type="long"/>
                    <param name="stepRate" type="long"/>
                    <param name="aTarget" type="Target"/>
                    <param name="aDestination" type="Color"/>
                </params>
            </method>
            <javadoc line="99">
                Create a new PColorActivity.                
                <@param>
                    m duration the length of one loop of the activity                    
                </@param>
                <@param>
                    m stepRate the amount of time between steps of the activity                    
                </@param>
                <@param>
                    m loopCount number of times the activity should reschedule itself                    
                </@param>
                <@param>
                    m mode defines how the activity interpolates between states                    
                </@param>
                <@param>
                    m aTarget the object that the activity will be applied to and where
                      the source state will be taken from.                    
                </@param>
                <@param>
                    m aDestination the destination color state                    
                </@param>
            </javadoc>
            <method name="PColorActivity" type="constructor" line="111">
                <params>
                    <param name="duration" type="long"/>
                    <param name="stepRate" type="long"/>
                    <param name="loopCount" type="int"/>
                    <param name="mode" type="int"/>
                    <param name="aTarget" type="Target"/>
                    <param name="aDestination" type="Color"/>
                </params>
            </method>
            <javadoc line="117">
                Returns true since all PColorActivities animate the scene.                
                <@return>
                    n always returns true                    
                </@return>
            </javadoc>
            <method name="isAnimation" type="boolean" line="122"/>
            <javadoc line="126">
                Return the final color that will be set on the color activities target
                  when the activity stops stepping.                
                <@return>
                    n the final color for this color activity                    
                </@return>
            </javadoc>
            <method name="getDestinationColor" type="Color" line="132"/>
            <javadoc line="136">
                Set the final color that will be set on the color activities target when
                  the activity stops stepping.                
                <@param>
                    m newDestination to animate towards                    
                </@param>
            </javadoc>
            <method name="setDestinationColor" type="void" line="142">
                <params>
                    <param name="newDestination" type="Color"/>
                </params>
            </method>
            <javadoc line="146">
                Overrides it&apos;s parent to ensure that the source color is the color of the
                  node being animated.                
            </javadoc>
            <method name="activityStarted" type="void" line="150">
                <scope line="151"/>
            </method>
            <javadoc line="157">
                Interpolates the target node&apos;s color by mixing the source color and the
                  destination color.                
                <@param>
                    m zeroToOne 0 = all source color, 1 = all destination color                    
                </@param>
            </javadoc>
            <method name="setRelativeTargetValue" type="void" line="163">
                <params>
                    <param name="zeroToOne" type="float"/>
                </params>
                <declaration name="red" type="float" line="165"/>
                <declaration name="green" type="float" line="166"/>
                <declaration name="blue" type="float" line="167"/>
                <declaration name="alpha" type="float" line="168"/>
            </method>
        </class>
    </source>