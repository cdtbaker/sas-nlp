<?xml version="1.0" encoding="UTF-8"?>
    <source package="edu.umd.cs.piccolox.activities">
        <import package="java.awt.geom.GeneralPath"/>
        <import package="java.awt.geom.PathIterator"/>
        <import package="java.awt.geom.Point2D"/>
        <import package="java.util.ArrayList"/>
        <import package="edu.umd.cs.piccolo.activities.PInterpolatingActivity"/>
        <class name="PPositionPathActivity" extends="PPathActivity" line="38">
            <javadoc line="38">
                &lt;b&gt;PPositionPathActivity&lt;/b&gt; animates through a sequence of points.                
                <@version>
                    n 1.0                    
                </@version>
                <@author>
                    r Jesse Grosjean                    
                </@author>
            </javadoc>
            <declaration name="positions" type="Point2D[]" line="45"/>
            <javadoc line="45">
                Points that define the animation&apos;s path.                
            </javadoc>
            <declaration name="target" type="Target" line="48"/>
            <javadoc line="48">
                An abstract representation of the thing being positioned.                
            </javadoc>
            <interface name="Target">
                <javadoc line="51">
                    Interface that objects must conform to in order to have their position
                     * animated.                    
                </javadoc>
                <method name="setPosition" type="void" line="56"/>
                <javadoc line="56">
                    Set&apos;s the target&apos;s position to the coordinate provided.                    
                    <@param>
                        m x the x component of the new position                        
                    </@param>
                    <@param>
                        m y the y component of the new position                        
                    </@param>
                </javadoc>
            </interface>
            <javadoc line="65">
                Constructs a position activity that acts on the given target for the
                 * duration provided and will update it&apos;s position at the given stepRate.                
                <@param>
                    m duration milliseconds of animation                    
                </@param>
                <@param>
                    m stepRate milliseconds between successive position updates                    
                </@param>
                <@param>
                    m target abstract representation of thing being animated                    
                </@param>
            </javadoc>
            <method name="PPositionPathActivity" type="constructor" line="73"/>
            <javadoc line="77">
                Constructs a position activity that acts on the given target for the
                 * duration provided and will update it&apos;s position at the given stepRate. It
                 * will follow the path defined by the knots and positions arguments.                
                <@param>
                    m duration milliseconds of animation                    
                </@param>
                <@param>
                    m stepRate milliseconds between successive position updates                    
                </@param>
                <@param>
                    m target abstract representation of thing being animated                    
                </@param>
                <@param>
                    m knots timing to use when animating                    
                </@param>
                <@param>
                    m positions points along the path                    
                </@param>
            </javadoc>
            <method name="PPositionPathActivity" type="constructor" line="89"/>
            <javadoc line="93">
                Constructs a position activity that will repeat the number of times
                 * specified. It will act on the given target for the duration provided and
                 * will update it&apos;s position at the given stepRate. It will follow the path
                 * defined by the knots and positions arguments.                
                <@param>
                    m duration milliseconds of animation                    
                </@param>
                <@param>
                    m stepRate milliseconds between successive position updates                    
                </@param>
                <@param>
                    m loopCount number of times this activity should repeat                    
                </@param>
                <@param>
                    m mode how easing is handled on this activity                    
                </@param>
                <@param>
                    m target abstract representation of thing being animated                    
                </@param>
                <@param>
                    m knots timing to use when animating                    
                </@param>
                <@param>
                    m positions points along the path                    
                </@param>
            </javadoc>
            <method name="PPositionPathActivity" type="constructor" line="108"/>
            <javadoc line="114">
                Returns true since this activity modifies the view and so cause a
                 * repaint.                
                <@return>
                    n always true                    
                </@return>
            </javadoc>
            <method name="isAnimation" type="boolean" line="120"/>
            <javadoc line="124">
                Returns a copy of the path&apos;s points.                
                <@return>
                    n array of points on the path                    
                </@return>
            </javadoc>
            <method name="getPositions" type="Point2D[]" line="129"/>
            <javadoc line="133">
                Returns the point at the given index.                
                <@param>
                    m index desired position index                    
                </@param>
                <@return>
                    n point at the given index                    
                </@return>
            </javadoc>
            <method name="getPosition" type="Point2D" line="139"/>
            <javadoc line="143">
                Changes all positions that define where along the target is being
                 * positioned during the animation.                
                <@param>
                    m positions new animation positions                    
                </@param>
            </javadoc>
            <method name="setPositions" type="void" line="149"/>
            <javadoc line="153">
                Sets the position of the point at the given index.                
                <@param>
                    m index index of the point to change                    
                </@param>
                <@param>
                    m position point defining the new position                    
                </@param>
            </javadoc>
            <method name="setPosition" type="void" line="159"/>
            <javadoc line="163">
                Extracts positions from a GeneralPath and uses them to define this
                 * activity&apos;s animation points.                
                <@param>
                    m path source of points                    
                </@param>
            </javadoc>
            <method name="setPositions" type="void" line="169">
                <declaration name="pi" type="PathIterator" line="170"/>
                <declaration name="points" type="ArrayList" line="171"/>
                <declaration name="point" type="float[]" line="172"/>
                <declaration name="distanceSum" type="float" line="173"/>
                <declaration name="lastMoveToX" type="float" line="174"/>
                <declaration name="lastMoveToY" type="float" line="175"/>
                <scope line="177">
                    <declaration name="type" type="int" line="178"/>
                    <scope line="202">
                        <declaration name="last" type="Point2D" line="203"/>
                        <declaration name="current" type="Point2D" line="204"/>
                    </scope>
                </scope>
                <declaration name="size" type="int" line="211"/>
                <declaration name="newPositions" type="Point2D[]" line="212"/>
                <declaration name="newKnots" type="float[]" line="213"/>
                <scope line="215">
                    <scope line="217">
                        <declaration name="dist" type="float" line="218"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="227">
                Overridden to interpret position at correct point along animation.
                 * TODO: improve these comments                
                <@param>
                    m zeroToOne how far along the activity we are                    
                </@param>
                <@param>
                    m startKnot the index of the startKnot                    
                </@param>
                <@param>
                    m endKnot the index of the endKnot                    
                </@param>
            </javadoc>
            <method name="setRelativeTargetValue" type="void" line="236">
                <declaration name="start" type="Point2D" line="237"/>
                <declaration name="end" type="Point2D" line="238"/>
            </method>
        </class>
    </source>