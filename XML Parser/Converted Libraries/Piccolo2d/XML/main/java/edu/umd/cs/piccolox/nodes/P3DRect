<?xml version="1.0" encoding="UTF-8"?>
    <source package="edu.umd.cs.piccolox.nodes">
        <import package="java.awt.BasicStroke"/>
        <import package="java.awt.Color"/>
        <import package="java.awt.Graphics2D"/>
        <import package="java.awt.Paint"/>
        <import package="java.awt.Stroke"/>
        <import package="java.awt.geom.GeneralPath"/>
        <import package="java.awt.geom.Rectangle2D"/>
        <import package="edu.umd.cs.piccolo.PNode"/>
        <import package="edu.umd.cs.piccolo.util.PBounds"/>
        <import package="edu.umd.cs.piccolo.util.PPaintContext"/>
        <class name="P3DRect" line="43">
            <extends class="PNode"/>
            <javadoc line="43">
                This is a simple node that draws a &quot;3D&quot; rectangle within the bounds of the
                  node. Drawing a 3D rectangle in a zooming environment is a little tricky
                  because if you just use the regular (Java2D) 3D rectangle, the 3D borders get
                  scaled, and that is ugly. This version always draws the 3D border at fixed 2
                  pixel width.                
                <@author>
                    r Ben Bederson                    
                </@author>
            </javadoc>
            <declaration name="serialVersionUID" type="long" line="53"/>
            <declaration name="topLeftOuterColor" type="Color" line="54"/>
            <declaration name="topLeftInnerColor" type="Color" line="55"/>
            <declaration name="bottomRightInnerColor" type="Color" line="56"/>
            <declaration name="bottomRightOuterColor" type="Color" line="57"/>
            <declaration name="path" type="GeneralPath" line="58"/>
            <declaration name="stroke" type="Stroke" line="59"/>
            <declaration name="raised" type="boolean" line="60"/>
            <javadoc line="62">
                Constructs a simple P3DRect with empty bounds and a black stroke.                
            </javadoc>
            <method name="P3DRect" type="constructor" line="65"/>
            <javadoc line="69">
                Constructs a P3DRect with the provided bounds.                
                <@param>
                    m bounds bounds to assigned to the P3DRect                    
                </@param>
            </javadoc>
            <method name="P3DRect" type="constructor" line="74">
                <params>
                    <param name="bounds" type="Rectangle2D"/>
                </params>
            </method>
            <javadoc line="78">
                Constructs a P3DRect with the bounds provided.                
                <@param>
                    m x left of bounds                    
                </@param>
                <@param>
                    m y top of bounds                    
                </@param>
                <@param>
                    m width width of bounds                    
                </@param>
                <@param>
                    m height height of bounds                    
                </@param>
            </javadoc>
            <method name="P3DRect" type="constructor" line="86">
                <params>
                    <param name="x" type="double"/>
                    <param name="y" type="double"/>
                    <param name="width" type="double"/>
                    <param name="height" type="double"/>
                </params>
            </method>
            <javadoc line="91">
                Sets whether this rectangle is raised off the canvas. If set to false,
                  this rectangle will appear recessed into the canvas.                
                <@param>
                    m raised whether the rectangle should be painted as raised or
                      recessed                    
                </@param>
            </javadoc>
            <method name="setRaised" type="void" line="98">
                <params>
                    <param name="raised" type="boolean"/>
                </params>
            </method>
            <javadoc line="103">
                Returns whether this P3DRect is drawn as raised.                
                <@return>
                    n true if raised                    
                </@return>
            </javadoc>
            <method name="getRaised" type="boolean" line="108"/>
            <javadoc line="112">
                Paints this rectangle with shaded edges. Making it appear to stand out of
                  the page as normal 3D buttons do.                
                <@param>
                    m paintContext context in which the paiting should occur                    
                </@param>
            </javadoc>
            <method name="paint" type="void" line="118">
                <params>
                    <param name="paintContext" type="PPaintContext"/>
                </params>
                <comment line="119">
                    lazy init:                    
                </comment>
                <scope line="120"/>
                <scope line="123"/>
                <declaration name="g2" type="Graphics2D" line="127"/>
                <declaration name="x" type="double" line="129"/>
                <declaration name="y" type="double" line="130"/>
                <declaration name="width" type="double" line="131"/>
                <declaration name="height" type="double" line="132"/>
                <declaration name="scaleX" type="double" line="133"/>
                <declaration name="scaleY" type="double" line="134"/>
                <declaration name="dx" type="double" line="135"/>
                <declaration name="dy" type="double" line="136"/>
                <declaration name="bounds" type="PBounds" line="137"/>
            </method>
            <javadoc line="172">
                Changes the paint that will be used to draw this rectangle. This paint is
                  used to shade the edges of the rectangle.                
                <@param>
                    m newPaint the color to use for painting this rectangle                    
                </@param>
            </javadoc>
            <method name="setPaint" type="void" line="178">
                <params>
                    <param name="newPaint" type="Paint"/>
                </params>
                <scope line="181">
                    <declaration name="color" type="Color" line="182"/>
                    <scope line="183"/>
                    <scope line="186"/>
                </scope>
                <scope line="190"/>
            </method>
            <method name="setRaisedEdges" type="void" line="195">
                <params>
                    <param name="color" type="Color"/>
                </params>
            </method>
            <method name="setNoEdges" type="void" line="202"/>
            <method name="setRecessedEdges" type="void" line="209">
                <params>
                    <param name="color" type="Color"/>
                </params>
            </method>
            <javadoc line="216">
                TODO can we remove this?                
                <@deprecated>
                    d since it has been moved to P3DRectExample.                    
                </@deprecated>
                <@param>
                    m args Command line arguments                    
                </@param>
            </javadoc>
            <method name="main" type="void" line="223">
                <params>
                    <param name="args" type="String[]"/>
                </params>
            </method>
        </class>
    </source>