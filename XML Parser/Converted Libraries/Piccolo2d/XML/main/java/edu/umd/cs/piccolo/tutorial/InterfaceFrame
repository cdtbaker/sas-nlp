<?xml version="1.0" encoding="UTF-8"?>
    <source package="edu.umd.cs.piccolo.tutorial">
        <import package="java.awt.Color"/>
        <import package="java.awt.Graphics2D"/>
        <import package="edu.umd.cs.piccolo.PLayer"/>
        <import package="edu.umd.cs.piccolo.PNode"/>
        <import package="edu.umd.cs.piccolo.event.PBasicInputEventHandler"/>
        <import package="edu.umd.cs.piccolo.event.PDragEventHandler"/>
        <import package="edu.umd.cs.piccolo.event.PInputEvent"/>
        <import package="edu.umd.cs.piccolo.nodes.PImage"/>
        <import package="edu.umd.cs.piccolo.nodes.PPath"/>
        <import package="edu.umd.cs.piccolo.nodes.PText"/>
        <import package="edu.umd.cs.piccolo.util.PBounds"/>
        <import package="edu.umd.cs.piccolo.util.PPaintContext"/>
        <import package="edu.umd.cs.piccolox.PFrame"/>
        <class name="InterfaceFrame" extends="PFrame" line="46">
            <declaration name="serialVersionUID" type="long" line="48"/>
            <javadoc line="48">
                                
            </javadoc>
            <method name="initialize" type="void" line="53">
                <comment line="54">
                    Remove the Default pan event handler and add a drag event handler                    
                </comment>
                <comment line="54">
                    so that we can drag the nodes around individually.                    
                </comment>
                <comment line="54">
                    Add Some Default Nodes                    
                </comment>
                <comment line="54">
                    Create a node.                    
                </comment>
                <comment line="54">
                    A node will not be visible until its bounds and paint are set.                    
                </comment>
                <comment line="54">
                    A node needs to be a descendant of the root to be displayed.                    
                </comment>
                <comment line="54">
                    A node can have child nodes added to it.                    
                </comment>
                <comment line="54">
                    The base bounds of a node are easy to change. Changing the bounds                    
                </comment>
                <comment line="54">
                    of a node will not affect its children.                    
                </comment>
                <comment line="54">
                    Each node has a transform that can be used to modify the position,                    
                </comment>
                <comment line="54">
                    scale or rotation of a node. Changing a node&apos;s transform, will                    
                </comment>
                <comment line="54">
                    transform all of its children as well.                    
                </comment>
                <comment line="54">
                    Add a couple of PPath nodes and a PText node.                    
                </comment>
                <comment line="54">
                    Here we create a PImage node that displays a thumbnail image                    
                </comment>
                <comment line="54">
                    of the root node. Then we add the new PImage to the main layer.                    
                </comment>
                <comment line="54">
                    Create a New Node using Composition                    
                </comment>
                <comment line="54">
                    Create parts for the face.                    
                </comment>
                <comment line="54">
                    Add the face parts.                    
                </comment>
                <comment line="54">
                    Don&apos;t want anyone grabbing out our eyes.                    
                </comment>
                <comment line="54">
                    Position the face parts.                    
                </comment>
                <comment line="54">
                    Set the face bounds so that it neatly contains the face parts.                    
                </comment>
                <comment line="54">
                    Opps it&apos;s too small, so scale it up.                    
                </comment>
                <comment line="54">
                    Create a New Node using Inheritance.                    
                </comment>
                <declaration name="aNode" type="PNode" line="62"/>
                <declaration name="layer" type="PLayer" line="69"/>
                <declaration name="anotherNode" type="PNode" line="73"/>
                <declaration name="image" type="PImage" line="96"/>
                <declaration name="myCompositeFace" type="PNode" line="101"/>
                <declaration name="eye1" type="PNode" line="104"/>
                <declaration name="eye2" type="PNode" line="106"/>
                <declaration name="mouth" type="PNode" line="107"/>
                <declaration name="b" type="PBounds" line="123"/>
                <declaration name="ts" type="ToggleShape" line="133"/>
            </method>
            <class name="ToggleShape" extends="PPath" line="138">
                <declaration name="serialVersionUID" type="long" line="140"/>
                <declaration name="isPressed" type="boolean" line="141"/>
                <method name="ToggleShape" type="constructor" line="143">
                    <anonymous_class line="146">
                        <method name="mousePressed" type="void" line="147"/>
                        <method name="mouseReleased" type="void" line="153"/>
                    </anonymous_class>
                </method>
                <method name="paint" type="void" line="161">
                    <scope line="162">
                        <declaration name="g2" type="Graphics2D" line="163"/>
                    </scope>
                    <scope line="167"/>
                </method>
            </class>
            <method name="main" type="void" line="173"/>
        </class>
    </source>