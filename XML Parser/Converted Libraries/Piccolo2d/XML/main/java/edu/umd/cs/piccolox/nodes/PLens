<?xml version="1.0" encoding="UTF-8"?>
    <source package="edu.umd.cs.piccolox.nodes">
        <import package="java.awt.Color"/>
        <import package="java.awt.Paint"/>
        <import package="java.beans.PropertyChangeEvent"/>
        <import package="java.beans.PropertyChangeListener"/>
        <import package="edu.umd.cs.piccolo.PCamera"/>
        <import package="edu.umd.cs.piccolo.PLayer"/>
        <import package="edu.umd.cs.piccolo.PNode"/>
        <import package="edu.umd.cs.piccolo.event.PDragEventHandler"/>
        <import package="edu.umd.cs.piccolo.nodes.PPath"/>
        <class name="PLens" line="42">
            <extends class="PNode"/>
            <javadoc line="42">
                &lt;b&gt;PLens&lt;/b&gt; is a simple default lens implementation for Piccolo2D. See
                  piccolo2d/examples LensExample for one possible use of this lens. Lens&apos;s are
                  often application specific, it may be easiest to study this code, and then
                  implement your own custom lens using the general principles illustrated here.
                  &lt;p&gt;
                  The basic design here is to add a PCamera as the child of a PNode (the lens
                  node). The camera is the viewing part of the lens, and the node is the title
                  bar that can be used to move the lens around. Users of this lens will
                  probably want to set up some lens specific event handler and attach it to the
                  camera.
                  &lt;/p&gt;
                  &lt;p&gt;
                  A lens also needs a layer that it will look at (it should not be the same as
                  the layer that it&apos;s added to because then it will draw itself in a recursive
                  loop. Last of all the PLens will need to be added to the PCanvas layer (so
                  that it can be seen by the main camera).
                  &lt;/p&gt;                
                <@version>
                    n 1.0                    
                </@version>
                <@author>
                    r Jesse Grosjean                    
                </@author>
            </javadoc>
            <declaration name="serialVersionUID" type="long" line="66"/>
            <declaration name="dragBar" type="PPath" line="67"/>
            <declaration name="camera" type="PCamera" line="68"/>
            <declaration name="lensDragger" type="PDragEventHandler" line="69"/>
            <declaration name="LENS_DRAGBAR_HEIGHT" type="double" line="71"/>
            <javadoc line="71">
                The height of the drag bar.                
            </javadoc>
            <declaration name="DEFAULT_DRAGBAR_PAINT" type="Paint" line="74"/>
            <javadoc line="74">
                Default paint to use for the drag bar.                
            </javadoc>
            <declaration name="DEFAULT_LENS_PAINT" type="Paint" line="77"/>
            <javadoc line="77">
                Default paint to use when drawing the background of the lens.                
            </javadoc>
            <javadoc line="80">
                Constructs the default PLens.                
            </javadoc>
            <method name="PLens" type="constructor" line="83">
                <comment line="84">
                    Drag bar gets resized to fit the available space, so any rectangle                    
                </comment>
                <comment line="84">
                    will do here                    
                </comment>
                <comment line="84">
                    This forces drag events to percolate up to PLens object                    
                </comment>
                <comment line="84">
                    create an event handler to drag the lens around. Note that this event                    
                </comment>
                <comment line="84">
                    handler consumes events in case another conflicting event handler has                    
                </comment>
                <comment line="84">
                    been installed higher up in the heirarchy.                    
                </comment>
                <comment line="84">
                    When this PLens is dragged around adjust the cameras view transform.                    
                </comment>
                <anonymous_class line="104">
                    <method name="propertyChange" type="void" line="105">
                        <params>
                            <param name="evt" type="PropertyChangeEvent"/>
                        </params>
                    </method>
                </anonymous_class>
            </method>
            <javadoc line="111">
                Creates the default PLens and attaches the given layer to it.                
                <@param>
                    m layer layer to attach to this PLens                    
                </@param>
            </javadoc>
            <method name="PLens" type="constructor" line="116">
                <params>
                    <param name="layer" type="PLayer"/>
                </params>
            </method>
            <javadoc line="121">
                Returns the camera on which this lens is appearing.                
                <@return>
                    n camera on which lens is appearing                    
                </@return>
            </javadoc>
            <method name="getCamera" type="PCamera" line="126"/>
            <javadoc line="130">
                Returns the drag bar for this lens.                
                <@return>
                    n this lens' drag bar                    
                </@return>
            </javadoc>
            <method name="getDragBar" type="PPath" line="135"/>
            <javadoc line="139">
                Returns the event handler that this lens uses for its drag bar.                
                <@return>
                    n drag bar's drag event handler                    
                </@return>
            </javadoc>
            <method name="getLensDraggerHandler" type="PDragEventHandler" line="144"/>
            <javadoc line="148">
                Adds the layer to the camera.                
                <@param>
                    m index index at which to add the layer to the camera                    
                </@param>
                <@param>
                    m layer layer to add to the camera                    
                </@param>
            </javadoc>
            <method name="addLayer" type="void" line="154">
                <params>
                    <param name="index" type="int"/>
                    <param name="layer" type="PLayer"/>
                </params>
            </method>
            <javadoc line="158">
                Removes the provided layer from the camera.                
                <@param>
                    m layer layer to be removed                    
                </@param>
            </javadoc>
            <method name="removeLayer" type="void" line="163">
                <params>
                    <param name="layer" type="PLayer"/>
                </params>
            </method>
            <javadoc line="167">
                When the lens is resized this method gives us a chance to layout the
                  lenses camera child appropriately.                
            </javadoc>
            <method name="layoutChildren" type="void" line="171"/>
        </class>
    </source>