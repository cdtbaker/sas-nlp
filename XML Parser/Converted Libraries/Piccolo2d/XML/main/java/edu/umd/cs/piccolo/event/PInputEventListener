<?xml version="1.0" encoding="UTF-8"?>
    <source package="edu.umd.cs.piccolo.event">
        <import package="java.util.EventListener"/>
        <interface name="PInputEventListener">
            <implements interface="EventListener"/>
            <javadoc line="33">
                &lt;b&gt;PInputEventListener&lt;/b&gt; defines the most basic interface for objects that
                 * want to listen to PNodes for input events. This interface is very simple so
                 * that others may extend Piccolo&apos;s input management system. If you are just
                 * using Piccolo&apos;s default input management system then you will most often use
                 * PBasicInputEventHandler to register with a node for input events.
                 * &lt;P&gt;                
                <@see>
                    e PBasicInputEventHandler                    
                </@see>
                <@version>
                    n 1.0                    
                </@version>
                <@author>
                    r Jesse Grosjean                    
                </@author>
            </javadoc>
            <method name="processEvent" type="void" line="46"/>
            <javadoc line="46">
                Called whenever an event is emitted. Used to notify listeners that an
                 * event is available for proecessing.                
                <@param>
                    m event event that was emitted                    
                </@param>
                <@param>
                    m type type of event                    
                </@param>
            </javadoc>
        </interface>
    </source>