<?xml version="1.0" encoding="UTF-8"?>
    <source package="edu.umd.cs.piccolo.tutorial">
        <import package="java.awt.BasicStroke"/>
        <import package="java.awt.Color"/>
        <import package="java.awt.event.InputEvent"/>
        <import package="java.awt.event.KeyEvent"/>
        <import package="java.awt.geom.Point2D"/>
        <import package="edu.umd.cs.piccolo.PCanvas"/>
        <import package="edu.umd.cs.piccolo.PNode"/>
        <import package="edu.umd.cs.piccolo.event.PBasicInputEventHandler"/>
        <import package="edu.umd.cs.piccolo.event.PDragSequenceEventHandler"/>
        <import package="edu.umd.cs.piccolo.event.PInputEvent"/>
        <import package="edu.umd.cs.piccolo.event.PInputEventFilter"/>
        <import package="edu.umd.cs.piccolo.nodes.PPath"/>
        <import package="edu.umd.cs.piccolo.util.PDimension"/>
        <import package="edu.umd.cs.piccolox.PFrame"/>
        <class name="UserInteraction" extends="PFrame" line="47">
            <declaration name="serialVersionUID" type="long" line="49"/>
            <javadoc line="49">
                                
            </javadoc>
            <method name="UserInteraction" type="constructor" line="54"/>
            <method name="initialize" type="void" line="58">
                <comment line="59">
                    Create a Camera Event Listener.                    
                </comment>
                <comment line="59">
                    Remove the pan event handler that is installed by default so that it                    
                </comment>
                <comment line="59">
                    does not conflict with our new squiggle handler.                    
                </comment>
                <comment line="59">
                    Create a squiggle handler and register it with the Canvas.                    
                </comment>
                <comment line="59">
                    Create a Node Event Listener.                    
                </comment>
                <comment line="59">
                    Create a green rectangle node.                    
                </comment>
                <comment line="59">
                    Attach event handler directly to the node.                    
                </comment>
                <declaration name="squiggleHandler" type="PBasicInputEventHandler" line="66"/>
                <declaration name="nodeGreen" type="PNode" line="72"/>
                <anonymous_class line="77">
                    <method name="mousePressed" type="void" line="78"/>
                    <method name="mouseDragged" type="void" line="84">
                        <declaration name="aNode" type="PNode" line="85"/>
                        <declaration name="delta" type="PDimension" line="86"/>
                    </method>
                    <method name="mouseReleased" type="void" line="91"/>
                    <method name="keyPressed" type="void" line="96">
                        <declaration name="node" type="PNode" line="97"/>
                    </method>
                </anonymous_class>
            </method>
            <class name="SquiggleHandler" extends="PDragSequenceEventHandler" line="116">
                <comment line="117">
                    The squiggle that is currently getting created.                    
                </comment>
                <declaration name="canvas" type="PCanvas" line="117"/>
                <declaration name="squiggle" type="PPath" line="120"/>
                <method name="SquiggleHandler" type="constructor" line="122"/>
                <method name="startDrag" type="void" line="127">
                    <comment line="128">
                        Create a new squiggle and add it to the canvas.                        
                    </comment>
                    <comment line="128">
                        Reset the keydboard focus.                        
                    </comment>
                    <declaration name="p" type="Point2D" line="130"/>
                </method>
                <method name="drag" type="void" line="142">
                    <comment line="143">
                        Update the squiggle while dragging.                        
                    </comment>
                </method>
                <method name="endDrag" type="void" line="148">
                    <comment line="149">
                        Update the squiggle one last time.                        
                    </comment>
                </method>
                <method name="updateSquiggle" type="void" line="155">
                    <comment line="156">
                        Add a new segment to the squiggle from the last mouse position                        
                    </comment>
                    <comment line="156">
                        to the current mouse position.                        
                    </comment>
                    <declaration name="p" type="Point2D" line="158"/>
                </method>
            </class>
            <method name="main" type="void" line="163"/>
        </class>
    </source>