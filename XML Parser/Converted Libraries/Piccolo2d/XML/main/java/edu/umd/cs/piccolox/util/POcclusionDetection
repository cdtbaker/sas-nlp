<?xml version="1.0" encoding="UTF-8"?>
    <source package="edu.umd.cs.piccolox.util">
        <import package="edu.umd.cs.piccolo.PNode"/>
        <import package="edu.umd.cs.piccolo.util.PBounds"/>
        <import package="edu.umd.cs.piccolo.util.PPickPath"/>
        <class name="POcclusionDetection" line="35">
            <javadoc line="35">
                Experimental class for detecting occlusions.                
                <@author>
                    r Jesse Grosjean                    
                </@author>
            </javadoc>
            <javadoc line="42">
                Traverse from the bottom right of the scene graph (top visible node) up
                 * the tree determining which parent nodes are occluded by their children
                 * nodes. Note that this is only detecting a subset of occlusions (parent,
                 * child), others such as overlapping siblings or cousins are not detected.                
                <@param>
                    m n node from which to detect occlusions                    
                </@param>
                <@param>
                    m parentBounds bounds of parent node                    
                </@param>
            </javadoc>
            <method name="detectOccusions" type="void" line="51"/>
            <javadoc line="55">
                Traverse the pick path determining which parent nodes are occluded by
                 * their children nodes. Note that this is only detecting a subset of
                 * occlusions (parent, child), others such as overlapping siblings or
                 * cousins are not detected.                
                <@param>
                    m node node from which to detect occlusions                    
                </@param>
                <@param>
                    m pickPath Pick Path to traverse                    
                </@param>
            </javadoc>
            <method name="detectOcclusions" type="void" line="64">
                <scope line="65"/>
                <declaration name="count" type="int" line="71"/>
                <scope line="72">
                    <declaration name="each" type="PNode" line="73"/>
                    <scope line="74"/>
                    <scope line="79"/>
                </scope>
                <scope line="85">
                    <declaration name="parent" type="PNode" line="86"/>
                    <scope line="87"/>
                </scope>
            </method>
            <javadoc line="95">
                Calculate whether node occludes its parents.                
                <@param>
                    m n node to test                    
                </@param>
                <@param>
                    m pickPath pickpath identifying the parents of the node                    
                </@param>
                <@return>
                    n true if parents are occluded by the node                    
                </@return>
            </javadoc>
            <method name="nodeOccludesParents" type="boolean" line="102"/>
        </class>
    </source>