<?xml version="1.0" encoding="UTF-8"?>
    <source package="edu.umd.cs.piccolo">
        <import package="java.awt.Color"/>
        <import package="java.awt.Cursor"/>
        <import package="java.awt.Dimension"/>
        <import package="java.awt.Graphics2D"/>
        <import package="java.awt.GraphicsEnvironment"/>
        <import package="java.awt.geom.AffineTransform"/>
        <import package="java.awt.geom.Dimension2D"/>
        <import package="java.awt.geom.Point2D"/>
        <import package="java.awt.image.BufferedImage"/>
        <import package="java.io.IOException"/>
        <import package="java.util.Collection"/>
        <import package="junit.framework.TestCase"/>
        <import package="edu.umd.cs.piccolo.activities.PActivity"/>
        <import package="edu.umd.cs.piccolo.activities.PTransformActivity"/>
        <import package="edu.umd.cs.piccolo.util.PAffineTransform"/>
        <import package="edu.umd.cs.piccolo.util.PBounds"/>
        <import package="edu.umd.cs.piccolo.util.PDebug"/>
        <import package="edu.umd.cs.piccolo.util.PNodeFilter"/>
        <import package="edu.umd.cs.piccolo.util.PPaintContext"/>
        <import package="edu.umd.cs.piccolo.util.PPickPath"/>
        <class name="PCameraTest" line="53">
            <extends class="TestCase"/>
            <comment line="54">
                public void testAnimateViewToTransformIdentity() {
                PRoot root = new PRoot();
                PLayer layer = new PLayer();
                root.addChild(camera);
                root.addChild(layer);
                camera.addChild(layer);
                
                AffineTransform identity = new AffineTransform();
                camera.animateViewToTransform(identity, System.currentTimeMillis());
                 todo:  throws NPE at PActivityScheduler.processActivities(PActivityScheduler.java:176)
                root.waitForActivities();                
            </comment>
            <javadoc line="53">
                Unit test for PCamera.                
            </javadoc>
            <declaration name="camera" type="PCamera" line="58"/>
            <method name="PCameraTest" type="constructor" line="60">
                <params>
                    <param name="name" type="String"/>
                </params>
            </method>
            <method name="setUp" type="void" line="64"/>
            <method name="testClone" type="void" line="70">
                <comment line="71">
                    TODO: assertEquals(2, cameraCopy.getLayerCount());                    
                </comment>
                <declaration name="layer1" type="PLayer" line="71"/>
                <declaration name="layer2" type="PLayer" line="72"/>
                <declaration name="camera1" type="PCamera" line="74"/>
                <declaration name="cameraCopy" type="PCamera" line="79"/>
            </method>
            <method name="testCameraShouldHaveNullComponentUntilAssigned" type="void" line="83">
                <declaration name="component" type="MockPComponent" line="86"/>
            </method>
            <method name="testLayersReferenceIsNotNullByDefault" type="void" line="93"/>
            <method name="testCameraHasNoLayersByDefault" type="void" line="97"/>
            <method name="testIndexOfLayerReturnsMinusOneWhenLayerNotFound" type="void" line="101">
                <declaration name="orphanLayer" type="PLayer" line="102"/>
            </method>
            <method name="testRemoveLayerByReferenceWorks" type="void" line="109">
                <declaration name="layer" type="PLayer" line="110"/>
            </method>
            <method name="testRemoveLayerByReferenceDoesNothingWithStrangeLayerWorks" type="void" line="116">
                <declaration name="strangeLayer" type="PLayer" line="117"/>
            </method>
            <method name="testRemoveLayerRemovesTheCameraFromTheLayer" type="void" line="121">
                <declaration name="layer" type="PLayer" line="122"/>
            </method>
            <method name="testAddingLayerAddCameraToLayer" type="void" line="128">
                <declaration name="layer" type="PLayer" line="129"/>
            </method>
            <method name="testGetFullUnionOfLayerFullBoundsWorks" type="void" line="134">
                <declaration name="layer1" type="PLayer" line="135"/>
                <declaration name="layer2" type="PLayer" line="139"/>
                <declaration name="fullLayerBounds" type="PBounds" line="143"/>
            </method>
            <method name="testPaintPaintsAllLayers" type="void" line="147">
                <declaration name="canvas" type="PCanvas" line="148"/>
                <declaration name="camera" type="PCamera" line="149"/>
                <declaration name="img" type="BufferedImage" line="151"/>
                <declaration name="g2" type="Graphics2D" line="152"/>
                <declaration name="layer1" type="PLayer" line="154"/>
                <declaration name="blueSquare" type="PNode" line="155"/>
                <declaration name="layer2" type="PLayer" line="161"/>
                <declaration name="redSquare" type="PNode" line="164"/>
            </method>
            <method name="testPickPackWorksInSimpleCases" type="void" line="177">
                <declaration name="layer" type="PLayer" line="178"/>
                <declaration name="node1" type="PNode" line="181"/>
                <declaration name="node2" type="PNode" line="185"/>
                <declaration name="path1" type="PPickPath" line="190"/>
                <declaration name="path2" type="PPickPath" line="193"/>
            </method>
            <method name="testDefaultViewScaleIsOne" type="void" line="197"/>
            <method name="testGetViewBoundsTransformsCamerasBounds" type="void" line="201"/>
            <method name="testScaleViewIsCummulative" type="void" line="207"/>
            <method name="testSetViewScalePersists" type="void" line="214"/>
            <method name="testTranslateViewIsCummulative" type="void" line="221"/>
            <method name="testViewTransformedFiresChangeEvent" type="void" line="228">
                <declaration name="mockListener" type="MockPropertyChangeListener" line="229"/>
            </method>
            <method name="testAnimateViewToCenterBoundsIsImmediateWhenDurationIsZero" type="void" line="235">
                <declaration name="targetBounds" type="PBounds" line="237"/>
                <declaration name="activity" type="PActivity" line="238"/>
            </method>
            <method name="testAnimateViewToCenterBoundsCreatesValidActivity" type="void" line="245">
                <declaration name="targetBounds" type="PBounds" line="247"/>
                <declaration name="activity" type="PActivity" line="248"/>
            </method>
            <method name="testAnimateViewToPanToBoundsDoesNotAffectScale" type="void" line="255"/>
            <method name="testAnimateViewToPanToBoundsIsImmediateWhenDurationIsZero" type="void" line="262">
                <declaration name="activity" type="PActivity" line="264"/>
            </method>
            <method name="testAnimateViewToPanToBoundsReturnsAppropriatelyConfiguredActivity" type="void" line="270">
                <declaration name="activity" type="PTransformActivity" line="272"/>
            </method>
            <method name="testPDebugDebugBoundsPaintsBounds" type="void" line="281">
                <comment line="282">
                    First Square&apos;s Bounds                    
                </comment>
                <comment line="282">
                    Second Square&apos;s Bounds                    
                </comment>
                <comment line="282">
                    Ensure point between the squares on the full bounds is not drawn                    
                </comment>
                <declaration name="canvas" type="PCanvas" line="282"/>
                <declaration name="parent" type="PNode" line="284"/>
                <declaration name="child" type="PNode" line="285"/>
                <declaration name="img" type="BufferedImage" line="300"/>
                <declaration name="graphics" type="Graphics2D" line="301"/>
                <declaration name="pc" type="PPaintContext" line="304"/>
            </method>
            <method name="assertPointColor" type="void" line="324">
                <params>
                    <param name="expectedColor" type="Color"/>
                    <param name="img" type="BufferedImage"/>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                </params>
            </method>
            <method name="testSetViewOffsetIsNotCummulative" type="void" line="328"/>
            <method name="testDefaultViewConstraintsIsNone" type="void" line="336"/>
            <method name="testSetViewContraintsPersists" type="void" line="340"/>
            <method name="testSetViewConstraintsThrowsIllegalArgumentException" type="void" line="349">
                <scope line="350"/>
                <scope line="353"/>
            </method>
            <method name="testTooFewLayersCamera" type="void" line="358">
                <comment line="359">
                    pickCameraView                    
                </comment>
                <comment line="359">
                    paintCameraView                    
                </comment>
                <comment line="359">
                    getUnionOfLayerFullBounds                    
                </comment>
                <comment line="359">
                    paintDebugInfo                    
                </comment>
                <declaration name="tooFew" type="PCamera" line="359"/>
                <declaration name="layer0" type="MockPLayer" line="360"/>
                <declaration name="layer1" type="MockPLayer" line="361"/>
                <declaration name="pickPath" type="PPickPath" line="372"/>
                <declaration name="image" type="BufferedImage" line="378"/>
                <declaration name="graphics" type="Graphics2D" line="379"/>
                <declaration name="paintContext" type="PPaintContext" line="380"/>
            </method>
            <method name="testTooManyLayersCamera" type="void" line="400">
                <comment line="401">
                    pickCameraView                    
                </comment>
                <comment line="401">
                    paintCameraView                    
                </comment>
                <comment line="401">
                    getUnionOfLayerFullBounds                    
                </comment>
                <comment line="401">
                    paintDebugInfo                    
                </comment>
                <declaration name="tooMany" type="PCamera" line="401"/>
                <declaration name="layer0" type="MockPLayer" line="402"/>
                <declaration name="layer1" type="MockPLayer" line="403"/>
                <declaration name="pickPath" type="PPickPath" line="414"/>
                <declaration name="image" type="BufferedImage" line="420"/>
                <declaration name="graphics" type="Graphics2D" line="421"/>
                <declaration name="paintContext" type="PPaintContext" line="422"/>
            </method>
            <method name="testRepaintFromNullParent" type="void" line="442">
                <declaration name="canvas" type="PCanvas" line="444"/>
            </method>
            <method name="testRepaintFromNullComponent" type="void" line="449">
                <declaration name="parent" type="PNode" line="450"/>
            </method>
            <method name="testRepaintFromNullParentNullComponent" type="void" line="456"/>
            <method name="testRepaintFromLayer" type="void" line="462">
                <declaration name="layer" type="PLayer" line="463"/>
            </method>
            <method name="testRepaintFromLayerNotViewedByCamera" type="void" line="468">
                <comment line="469">
                    todo:  layer is not contained in list of layers viewed by camera, should complain                    
                </comment>
                <declaration name="layer" type="PLayer" line="469"/>
            </method>
            <method name="testRepaintFromLayerNotALayer" type="void" line="474">
                <scope line="475"/>
                <scope line="479"/>
            </method>
            <method name="testRemoveLayerAtIndex" type="void" line="484">
                <declaration name="layer" type="PLayer" line="485"/>
            </method>
            <method name="testRemoveLayerAtIndexIndexOutOfBounds" type="void" line="494">
                <declaration name="layer" type="PLayer" line="495"/>
                <scope line="497"/>
                <scope line="501"/>
            </method>
            <method name="testPaintDebugInfoDebugFullBounds" type="void" line="506">
                <declaration name="layer" type="PLayer" line="507"/>
                <declaration name="child" type="PNode" line="509"/>
                <declaration name="image" type="BufferedImage" line="512"/>
                <declaration name="graphics" type="Graphics2D" line="513"/>
                <declaration name="paintContext" type="PPaintContext" line="514"/>
            </method>
            <method name="testPaintDebugInfoDebugFullBoundsNoChildNodes" type="void" line="521">
                <declaration name="layer" type="PLayer" line="522"/>
                <declaration name="image" type="BufferedImage" line="524"/>
                <declaration name="graphics" type="Graphics2D" line="525"/>
                <declaration name="paintContext" type="PPaintContext" line="526"/>
            </method>
            <method name="testPickAfterChildrenNotPicked" type="void" line="533">
                <declaration name="pickPath" type="PPickPath" line="534"/>
            </method>
            <method name="testLocalToViewPoint2D" type="void" line="538">
                <declaration name="local" type="Point2D" line="539"/>
            </method>
            <method name="testLocalToViewPoint2DTranslateView" type="void" line="545">
                <declaration name="local" type="Point2D" line="547"/>
            </method>
            <method name="testLocalToViewPoint2DScaleView" type="void" line="553">
                <declaration name="local" type="Point2D" line="555"/>
            </method>
            <method name="testLocalToViewDimension2D" type="void" line="561">
                <declaration name="local" type="Dimension2D" line="562"/>
            </method>
            <method name="testLocalToViewDimension2DTranslateView" type="void" line="568">
                <declaration name="local" type="Dimension2D" line="570"/>
            </method>
            <method name="testLocalToViewDimension2DScaleView" type="void" line="576">
                <declaration name="local" type="Dimension2D" line="578"/>
            </method>
            <method name="testViewToLocalPoint2D" type="void" line="584">
                <declaration name="view" type="Point2D" line="585"/>
            </method>
            <method name="testViewToLocalPoint2DTranslateView" type="void" line="591">
                <declaration name="view" type="Point2D" line="593"/>
            </method>
            <method name="testViewToLocalPoint2DScaleView" type="void" line="599">
                <declaration name="view" type="Point2D" line="601"/>
            </method>
            <method name="testViewToLocalDimension2D" type="void" line="607">
                <declaration name="view" type="Dimension2D" line="608"/>
            </method>
            <method name="testViewToLocalDimension2DTranslateView" type="void" line="614">
                <declaration name="view" type="Dimension2D" line="616"/>
            </method>
            <method name="testViewToLocalDimension2DScaleView" type="void" line="622">
                <declaration name="view" type="Dimension2D" line="624"/>
            </method>
            <method name="testPickWithoutIntersectionStillContainsCamera" type="void" line="630">
                <comment line="631">
                    todo:  don&apos;t understand why this should be the case                    
                </comment>
                <declaration name="pickPath" type="PPickPath" line="632"/>
            </method>
            <class name="MockPComponent" line="656">
                <implements interface="PComponent"/>
                <method name="paintImmediately" type="void" line="658"/>
                <method name="popCursor" type="void" line="661"/>
                <method name="pushCursor" type="void" line="664">
                    <params>
                        <param name="cursor" type="Cursor"/>
                    </params>
                </method>
                <method name="repaint" type="void" line="667">
                    <params>
                        <param name="bounds" type="PBounds"/>
                    </params>
                </method>
                <method name="setInteracting" type="void" line="670">
                    <params>
                        <param name="interacting" type="boolean"/>
                    </params>
                </method>
            </class>
            <class name="MockPLayer" line="674">
                <extends class="PLayer"/>
                <javadoc line="674">
                    Mock PLayer.  Should consider using mock library in version 2.0.                    
                </javadoc>
                <declaration name="serialVersionUID" type="long" line="678"/>
                <declaration name="fullBoundsReferenceCalled" type="boolean" line="679"/>
                <declaration name="fullPaintCalled" type="boolean" line="680"/>
                <declaration name="getAllNodesCalled" type="boolean" line="681"/>
                <declaration name="fullPickCalled" type="boolean" line="682"/>
                <javadoc line="684">
                    {@inheritDoc}                    
                </javadoc>
                <method name="getFullBoundsReference" type="PBounds" line="685"/>
                <javadoc line="690">
                    {@inheritDoc}                    
                </javadoc>
                <method name="fullPaint" type="void" line="691">
                    <params>
                        <param name="paintContext" type="PPaintContext"/>
                    </params>
                </method>
                <javadoc line="696">
                    {@inheritDoc}                    
                </javadoc>
                <method name="getAllNodes" type="Collection" line="697">
                    <params>
                        <param name="filter" type="PNodeFilter"/>
                        <param name="nodes" type="Collection"/>
                    </params>
                </method>
                <javadoc line="702">
                    {@inheritDoc}                    
                </javadoc>
                <method name="fullPick" type="boolean" line="703">
                    <params>
                        <param name="pickPath" type="PPickPath"/>
                    </params>
                </method>
                <method name="fullBoundsReferenceCalled" type="boolean" line="708"/>
                <method name="fullPaintCalled" type="boolean" line="712"/>
                <method name="getAllNodesCalled" type="boolean" line="716"/>
                <method name="fullPickCalled" type="boolean" line="720"/>
            </class>
            <class name="TooFewLayersCamera" line="725">
                <extends class="PCamera"/>
                <javadoc line="725">
                    Subclass of PCamera that advertises too few layers.                    
                </javadoc>
                <declaration name="serialVersionUID" type="long" line="729"/>
                <javadoc line="731">
                    {@inheritDoc}                    
                </javadoc>
                <method name="getLayerCount" type="int" line="732"/>
            </class>
            <class name="TooManyLayersCamera" line="737">
                <extends class="PCamera"/>
                <javadoc line="737">
                    Subclass of PCamera that advertises too many layers.                    
                </javadoc>
                <declaration name="serialVersionUID" type="long" line="741"/>
                <javadoc line="743">
                    {@inheritDoc}                    
                </javadoc>
                <method name="getLayerCount" type="int" line="744"/>
            </class>
        </class>
    </source>