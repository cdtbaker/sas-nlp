<?xml version="1.0" encoding="UTF-8"?>
    <source package="edu.umd.cs.piccolo.nodes">
        <import package="java.awt.Color"/>
        <import package="java.awt.Component"/>
        <import package="java.awt.Font"/>
        <import package="junit.framework.TestCase"/>
        <import package="edu.umd.cs.piccolo.MockPropertyChangeListener"/>
        <class name="PTextTest" extends="TestCase" line="38">
            <javadoc line="38">
                Unit test for PText.                
            </javadoc>
            <declaration name="textNode" type="PText" line="43"/>
            <declaration name="mockListener" type="MockPropertyChangeListener" line="44"/>
            <method name="PTextTest" type="constructor" line="46"/>
            <method name="setUp" type="void" line="50"/>
            <method name="testClone" type="void" line="55">
                <declaration name="clonedNode" type="PText" line="58"/>
            </method>
            <method name="testTextIsEmptyByDefault" type="void" line="64">
                <declaration name="textNode" type="PText" line="65"/>
            </method>
            <method name="testTextMayBeAssignedEmptyString" type="void" line="69"/>
            <method name="testTextNullGetsInterpretedAsEmptyString" type="void" line="74"/>
            <method name="testBoundsGrowWithTextByDefault" type="void" line="79">
                <declaration name="text123" type="PText" line="80"/>
                <declaration name="width123" type="double" line="81"/>
                <declaration name="text1234" type="PText" line="83"/>
                <declaration name="width1234" type="double" line="85"/>
            </method>
            <method name="testBoundsOfEmptyString" type="void" line="90"/>
            <method name="testToString" type="void" line="97"/>
            <method name="testJustificationIsLeftByDefault" type="void" line="102"/>
            <method name="testSetJustificationPersists" type="void" line="106"/>
            <method name="testHorizontalAlignmentIsLeftByDefault" type="void" line="111"/>
            <method name="testSetHorizontalAlignmentPersists" type="void" line="115"/>
            <method name="testSetHorizontalAlignmentInvalidValues" type="void" line="120">
                <scope line="121"/>
                <scope line="124"/>
                <scope line="127"/>
                <scope line="130"/>
                <scope line="133"/>
                <scope line="136"/>
                <scope line="139"/>
                <scope line="142"/>
                <scope line="145"/>
                <scope line="148"/>
                <scope line="151"/>
                <scope line="154"/>
            </method>
            <method name="testTextPaintIsBlackByDefault" type="void" line="159"/>
            <method name="testSetTextPaintPersists" type="void" line="163"/>
            <method name="testConstrainWidthToTextTrueByDefault" type="void" line="168"/>
            <method name="testConstrainHeightToTextTrueByDefault" type="void" line="172"/>
            <method name="testConstrainWidthPersists" type="void" line="176"/>
            <method name="testConstrainHeightPersists" type="void" line="181"/>
            <method name="testDefaultGreekThreshold" type="void" line="186"/>
            <method name="testSetGreekThreshold" type="void" line="190"/>
            <method name="testDefaultFont" type="void" line="195"/>
            <method name="testSetFontPersists" type="void" line="199">
                <declaration name="newFont" type="Font" line="200"/>
            </method>
            <method name="testSetFontFiresPropertyChangedEvent" type="void" line="205">
                <declaration name="newFont" type="Font" line="207"/>
            </method>
        </class>
    </source>