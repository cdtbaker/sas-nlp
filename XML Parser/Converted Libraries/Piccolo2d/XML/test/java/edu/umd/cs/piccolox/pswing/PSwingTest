<?xml version="1.0" encoding="UTF-8"?>
    <source package="edu.umd.cs.piccolox.pswing">
        <import package="edu.umd.cs.piccolo.util.PPaintContext"/>
        <import package="junit.framework.TestCase"/>
        <import package="javax.swing.JButton"/>
        <import package="javax.swing.JComponent"/>
        <import package="javax.swing.JLabel"/>
        <import package="javax.swing.JPanel"/>
        <import package="javax.swing.RepaintManager"/>
        <import package="java.awt.Color"/>
        <import package="java.awt.Dimension"/>
        <import package="java.awt.Graphics2D"/>
        <import package="java.awt.geom.AffineTransform"/>
        <import package="java.awt.image.BufferedImage"/>
        <import package="java.io.IOException"/>
        <class name="PSwingTest" extends="TestCase" line="46">
            <method name="setUp" type="void" line="47"/>
            <method name="testConstructorFailsOnNullComponent" type="void" line="51">
                <scope line="52"/>
                <scope line="54"/>
            </method>
            <method name="testPSwingRegistersItselfWithComponent" type="void" line="59">
                <declaration name="panel" type="JPanel" line="60"/>
                <declaration name="pSwing" type="PSwing" line="61"/>
            </method>
            <method name="testGetComponentReturnsValidComponent" type="void" line="66">
                <declaration name="panel" type="JPanel" line="67"/>
                <declaration name="pSwing" type="PSwing" line="68"/>
            </method>
            <method name="testPSwingResizesItselfWhenComponentIsResized" type="void" line="72">
                <declaration name="reshaped" type="boolean[]" line="73"/>
                <declaration name="panel" type="JPanel" line="74"/>
                <anonymous_class line="76">
                    <method name="updateBounds" type="void" line="77"/>
                </anonymous_class>
            </method>
            <method name="testPSwingDelegatesPaintingToItsComponent" type="void" line="87">
                <declaration name="panel" type="JPanel" line="88"/>
                <declaration name="pSwing" type="MockPaintingPSwing" line="89"/>
                <declaration name="image" type="BufferedImage" line="93"/>
                <declaration name="graphics" type="Graphics2D" line="95"/>
                <declaration name="paintContext" type="PPaintContext" line="96"/>
            </method>
            <method name="testPSwingWithBufferedPaintingDelegatesPaintingToItsComponent" type="void" line="101">
                <declaration name="panel" type="JPanel" line="102"/>
                <declaration name="pSwing" type="MockPaintingPSwing" line="103"/>
                <declaration name="image" type="BufferedImage" line="108"/>
                <declaration name="graphics" type="Graphics2D" line="110"/>
                <declaration name="paintContext" type="PPaintContext" line="111"/>
            </method>
            <method name="testHidingPNodeHidesComponent" type="void" line="116">
                <declaration name="panel" type="JPanel" line="117"/>
                <declaration name="pSwing" type="PSwing" line="118"/>
            </method>
            <method name="testAddingSwingComponentToWrappedHierarchyMakesItNotDoubleBuffer" type="void" line="123">
                <declaration name="panel" type="JPanel" line="124"/>
                <declaration name="pSwing" type="PSwing" line="125"/>
                <declaration name="child" type="JComponent" line="126"/>
            </method>
            <method name="assertDelayedSuccess" type="void" line="132">
                <declaration name="remainingTries" type="int" line="133"/>
                <scope line="134">
                    <scope line="135"/>
                    <scope line="139"/>
                    <scope line="141"/>
                </scope>
            </method>
            <method name="assertDelayedSuccess" type="void" line="148"/>
            <interface name="Predicate">
                <method name="isTrue" type="boolean" line="153"/>
            </interface>
            <method name="testPaintTooSmallPaintsGreek" type="void" line="156">
                <declaration name="panel" type="JPanel" line="157"/>
                <declaration name="pSwing" type="MockPaintingPSwing" line="159"/>
                <declaration name="image" type="BufferedImage" line="161"/>
                <declaration name="graphics" type="Graphics2D" line="163"/>
                <declaration name="paintContext" type="PPaintContext" line="165"/>
            </method>
            <method name="testPaintBigPaintsComponent" type="void" line="173">
                <declaration name="panel" type="JPanel" line="174"/>
                <declaration name="pSwing" type="MockPaintingPSwing" line="176"/>
                <declaration name="image" type="BufferedImage" line="178"/>
                <declaration name="graphics" type="Graphics2D" line="180"/>
                <declaration name="paintContext" type="PPaintContext" line="182"/>
            </method>
            <method name="testGreekThresholdIsHonoured" type="void" line="189">
                <declaration name="panel" type="JPanel" line="190"/>
                <declaration name="pSwing" type="MockPaintingPSwing" line="192"/>
                <declaration name="image" type="BufferedImage" line="194"/>
                <declaration name="graphics" type="Graphics2D" line="196"/>
                <declaration name="paintContext" type="PPaintContext" line="197"/>
            </method>
            <method name="testGreekThresholdIsPersisted" type="void" line="204">
                <declaration name="panel" type="JPanel" line="205"/>
                <declaration name="pSwing" type="MockPaintingPSwing" line="206"/>
            </method>
            <method name="testAssertSettingJLabelWidthTooSmallGrowsIt" type="void" line="213">
                <comment line="214">
                    While paint, it uses the graphics element to determine the font&apos;s                    
                </comment>
                <comment line="214">
                    display size and hence determine minimum size of JLabel.                    
                </comment>
                <declaration name="label" type="JLabel" line="214"/>
                <declaration name="canvas" type="PSwingCanvas" line="215"/>
                <declaration name="swing" type="MockPaintingPSwing" line="217"/>
                <anonymous_class line="218">
                    <method name="isTrue" type="boolean" line="220"/>
                </anonymous_class>
                <declaration name="image" type="BufferedImage" line="229"/>
                <declaration name="graphics" type="Graphics2D" line="231"/>
                <declaration name="paintContext" type="PPaintContext" line="232"/>
            </method>
            <method name="testAssertSettingJButtonWidthTooSmallGrowsIt" type="void" line="238">
                <comment line="239">
                    While paint, it uses the graphics element to determine the font&apos;s                    
                </comment>
                <comment line="239">
                    display size and hence determine minimum size of JLabel.                    
                </comment>
                <declaration name="label" type="JButton" line="239"/>
                <declaration name="canvas" type="PSwingCanvas" line="240"/>
                <declaration name="swing" type="MockPaintingPSwing" line="242"/>
                <declaration name="image" type="BufferedImage" line="249"/>
                <declaration name="graphics" type="Graphics2D" line="251"/>
                <declaration name="paintContext" type="PPaintContext" line="252"/>
            </method>
            <method name="testPSwingAttachesItselfToItsCanvasWhenAddedToItsSceneGraph" type="void" line="257">
                <declaration name="canvas1" type="PSwingCanvas" line="258"/>
                <declaration name="label" type="PSwing" line="259"/>
            </method>
            <method name="testPSwingRemovesItselfFromItsCanvasWhenRemovedFromScene" type="void" line="265">
                <declaration name="canvas1" type="PSwingCanvas" line="266"/>
                <declaration name="label" type="PSwing" line="267"/>
            </method>
            <method name="testPSwingReattachesItselfWhenMovedFromCanvasToCanvas" type="void" line="274">
                <declaration name="canvas1" type="PSwingCanvas" line="275"/>
                <declaration name="canvas2" type="PSwingCanvas" line="276"/>
                <declaration name="label" type="PSwing" line="277"/>
            </method>
            <method name="testPSwingRegistersWithCanvasThroughoutItsLifeCycle" type="void" line="284">
                <declaration name="canvas" type="PSwingCanvas" line="285"/>
                <declaration name="label" type="PSwing" line="286"/>
            </method>
            <class name="MockPaintingPSwing" extends="PSwing" line="298">
                <declaration name="paintedGreek" type="boolean" line="299"/>
                <declaration name="paintedComponent" type="boolean" line="300"/>
                <method name="MockPaintingPSwing" type="constructor" line="302"/>
                <method name="paint" type="void" line="306"/>
                <method name="paintAsGreek" type="void" line="311"/>
                <method name="isPaintedGreek" type="boolean" line="316"/>
                <method name="isPaintedComponent" type="boolean" line="320"/>
            </class>
        </class>
    </source>