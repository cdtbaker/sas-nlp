<?xml version="1.0" encoding="UTF-8"?>
<source package="edu.umd.cs.piccolo">
  <import name="java.awt.Graphics2D" />
  <import name="java.awt.GraphicsConfiguration" />
  <import name="java.awt.GraphicsEnvironment" />
  <import name="java.awt.Transparency" />
  <import name="java.awt.geom.AffineTransform" />
  <import name="java.awt.geom.GeneralPath" />
  <import name="java.awt.geom.NoninvertibleTransformException" />
  <import name="java.awt.geom.Rectangle2D" />
  <import name="java.awt.image.BufferedImage" />
  <import name="java.util.ArrayList" />
  <import name="java.util.Random" />
  <import name="junit.framework.TestCase" />
  <import name="edu.umd.cs.piccolo.nodes.PPath" />
  <import name="edu.umd.cs.piccolo.util.PAffineTransform" />
  <import name="edu.umd.cs.piccolo.util.PBounds" />
  <class name="PerformanceTests" extends="TestCase" startLine="48">
    <javadoc>
      <text>* Performance tests.</text>
    </javadoc>
    <declaration type="PerformanceLog" name="log" />
    <declaration type="int" name="NUMBER_NODES" />
    <method type="constructor" name="PerformanceTests" startLine="56" endLine="58" />
    <method type="void" name="testRunPerformanceTests" startLine="60" endLine="82">
      <scope startLine="61" endLine="63" />
      <scope startLine="66" endLine="80">
        <scope startLine="77" endLine="79" />
        <comment>removeNodes();</comment>
        <comment>renderSpeed();</comment>
      </scope>
      <comment>three times to warm up JVM</comment>
    </method>
    <method type="void" name="createNodes" startLine="84" endLine="92">
      <declaration type="PNode[]" name="nodes" />
      <scope startLine="88" endLine="90" />
    </method>
    <method type="void" name="createPaths" startLine="94" endLine="107">
      <declaration type="PNode[]" name="nodes" />
      <scope startLine="98" endLine="100" />
      <declaration type="Random" name="r" />
      <scope startLine="104" endLine="106" />
    </method>
    <method type="void" name="addNodes" startLine="109" endLine="122">
      <declaration type="PNode" name="parent" />
      <declaration type="PNode[]" name="nodes" />
      <scope startLine="113" endLine="115" />
      <scope startLine="118" endLine="120" />
    </method>
    <method type="void" name="removeNodes" startLine="124" endLine="169">
      <declaration type="PNode" name="parent" />
      <declaration type="PNode[]" name="nodes" />
      <declaration type="ArrayList" name="list" />
      <scope startLine="129" endLine="131" />
      <scope startLine="133" endLine="136" />
      <scope startLine="139" endLine="141" />
      <scope startLine="147" endLine="149" />
      <comment>for (int i = NUMBER_NODES - 1; i >= 0; i--) {</comment>
      <comment>parent.removeChild(nodes[i]);</comment>
      <comment>}</comment>
    </method>
    <method type="void" name="translateNodes" startLine="171" endLine="206">
      <declaration type="PNode" name="parent" />
      <declaration type="PNode[]" name="nodes" />
      <declaration type="PBounds" name="b" />
      <declaration type="Random" name="r" />
      <scope startLine="177" endLine="182" />
      <scope startLine="185" endLine="190">
        <comment>nodes[i].translateBy(100.01, 100.2);</comment>
        <comment>nodes[i].scaleBy(0.9);</comment>
      </scope>
      <comment>parent.validateFullBounds(); now protected.</comment>
      <comment>calls validateFullBounds as a side</comment>
      <comment>effect.</comment>
    </method>
    <method type="void" name="fullIntersectsNodes" startLine="208" endLine="227">
      <declaration type="PNode" name="parent" />
      <declaration type="PNode[]" name="nodes" />
      <declaration type="PBounds" name="b" />
      <scope startLine="213" endLine="216" />
      <scope startLine="223" endLine="225" />
      <comment>parent.validateFullBounds();  now protected</comment>
      <comment>calls validateFullBounds as a side</comment>
      <comment>effect.</comment>
    </method>
    <method type="void" name="memorySizeOfNodes" startLine="229" endLine="248">
      <declaration type="PNode[]" name="nodes" />
      <declaration type="long" name="startTotalMemory" />
      <declaration type="long" name="startFree" />
      <declaration type="long" name="endFree" />
      <declaration type="long" name="endTotal" />
      <scope startLine="237" endLine="239" />
    </method>
    <method type="void" name="copyNodes" startLine="250" endLine="262">
      <declaration type="PNode" name="parent" />
      <declaration type="PNode[]" name="nodes" />
      <scope startLine="254" endLine="257" />
    </method>
    <method type="void" name="costOfNoBoundsCache" startLine="264" endLine="302">
      <declaration type="PNode[]" name="nodes" />
      <declaration type="PBounds[]" name="bounds" />
      <declaration type="PBounds" name="pickRect" />
      <declaration type="Random" name="r" />
      <scope startLine="270" endLine="275" />
      <scope startLine="278" endLine="280" />
      <scope startLine="284" endLine="286" />
      <scope startLine="290" endLine="292" />
      <declaration type="PBounds" name="b" />
      <scope startLine="297" endLine="299" />
    </method>
    <method type="void" name="renderSpeed" startLine="304" endLine="392">
      <declaration type="Random" name="r" />
      <declaration type="PAffineTransform" name="at" />
      <scope startLine="311" endLine="313" />
      <declaration type="int" name="height" />
      <declaration type="int" name="width" />
      <declaration type="double" name="scale1" />
      <declaration type="double" name="scale2" />
      <declaration type="boolean" name="scaleFlip" />
      <declaration type="PAffineTransform" name="transorm1" />
      <declaration type="PAffineTransform" name="transorm2" />
      <declaration type="GraphicsConfiguration" name="graphicsConfiguration" />
      <declaration type="BufferedImage" name="result" />
      <declaration type="Graphics2D" name="g2" />
      <scope startLine="337" endLine="346">
        <scope startLine="338" endLine="341" />
        <scope startLine="342" endLine="345" />
      </scope>
      <scope startLine="352" endLine="354" />
      <scope startLine="360" endLine="369">
        <scope startLine="361" endLine="364" />
        <scope startLine="365" endLine="368" />
      </scope>
      <declaration type="Rectangle2D" name="rect" />
      <declaration type="GeneralPath" name="path" />
      <scope startLine="376" endLine="378" />
      <scope startLine="382" endLine="384" />
      <scope startLine="388" endLine="390" />
      <comment>transorm1.scale(0.5, 0.5);</comment>
    </method>
  </class>
</source>
