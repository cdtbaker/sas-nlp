<?xml version="1.0" encoding="UTF-8"?>
<source package="edu.umd.cs.piccolo.nodes">
  <import name="java.awt.image.BufferedImage" />
  <import name="java.io.File" />
  <import name="java.io.IOException" />
  <import name="javax.imageio.ImageIO" />
  <import name="junit.framework.TestCase" />
  <import name="edu.umd.cs.piccolo.util.PPaintContext" />
  <class name="PImageTest" extends="TestCase" startLine="40">
    <javadoc>
      <text>* Unit test for PImage.</text>
    </javadoc>
    <method type="void" name="testClone" startLine="45" endLine="54">
      <declaration type="PImage" name="srcNode" />
      <declaration type="PImage" name="clonedNode" />
    </method>
    <method type="void" name="testToString" startLine="56" endLine="59">
      <declaration type="PImage" name="aNode" />
    </method>
    <method type="void" name="testToBufferedImageReturnsCopyIfToldTo" startLine="61" endLine="65">
      <declaration type="BufferedImage" name="img" />
      <declaration type="BufferedImage" name="copy" />
    </method>
    <method type="void" name="testCanBeCreatedFromFile" startLine="67" endLine="76">
      <declaration type="BufferedImage" name="img" />
      <declaration type="File" name="imgFile" />
      <declaration type="PImage" name="imageNode" />
    </method>
    <method type="void" name="testCanBeCreatedFromUrl" startLine="78" endLine="87">
      <declaration type="BufferedImage" name="img" />
      <declaration type="File" name="imgFile" />
      <declaration type="PImage" name="imageNode" />
    </method>
    <method type="void" name="testImageCanBeSetFromFile" startLine="89" endLine="99">
      <declaration type="BufferedImage" name="img" />
      <declaration type="File" name="imgFile" />
      <declaration type="PImage" name="imageNode" />
    </method>
    <method type="void" name="testPaintAnEmptyImageNodeDoesNothing" startLine="101" endLine="108">
      <declaration type="PImage" name="imageNode" />
      <declaration type="BufferedImage" name="img" />
      <declaration type="PPaintContext" name="paintContext" />
    </method>
  </class>
</source>
