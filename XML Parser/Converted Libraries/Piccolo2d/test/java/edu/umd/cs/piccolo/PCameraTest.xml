<?xml version="1.0" encoding="UTF-8"?>
<source package="edu.umd.cs.piccolo">
  <import name="java.awt.Color" />
  <import name="java.awt.Cursor" />
  <import name="java.awt.Dimension" />
  <import name="java.awt.Graphics2D" />
  <import name="java.awt.GraphicsEnvironment" />
  <import name="java.awt.geom.AffineTransform" />
  <import name="java.awt.geom.Dimension2D" />
  <import name="java.awt.geom.Point2D" />
  <import name="java.awt.image.BufferedImage" />
  <import name="java.io.IOException" />
  <import name="java.util.Collection" />
  <import name="junit.framework.TestCase" />
  <import name="edu.umd.cs.piccolo.activities.PActivity" />
  <import name="edu.umd.cs.piccolo.activities.PTransformActivity" />
  <import name="edu.umd.cs.piccolo.util.PAffineTransform" />
  <import name="edu.umd.cs.piccolo.util.PBounds" />
  <import name="edu.umd.cs.piccolo.util.PDebug" />
  <import name="edu.umd.cs.piccolo.util.PNodeFilter" />
  <import name="edu.umd.cs.piccolo.util.PPaintContext" />
  <import name="edu.umd.cs.piccolo.util.PPickPath" />
  <class name="PCameraTest" extends="TestCase" startLine="53">
    <javadoc>
      <text>* Unit test for PCamera.</text>
    </javadoc>
    <declaration type="PCamera" name="camera" />
    <method type="constructor" name="PCameraTest" startLine="60" endLine="62" />
    <method type="void" name="setUp" startLine="64" endLine="68" />
    <method type="void" name="testClone" startLine="70" endLine="81">
      <declaration type="PLayer" name="layer1" />
      <declaration type="PLayer" name="layer2" />
      <declaration type="PCamera" name="camera1" />
      <declaration type="PCamera" name="cameraCopy" />
      <comment>TODO: assertEquals(2, cameraCopy.getLayerCount());</comment>
    </method>
    <method type="void" name="testCameraShouldHaveNullComponentUntilAssigned" startLine="83" endLine="91">
      <declaration type="MockPComponent" name="component" />
    </method>
    <method type="void" name="testLayersReferenceIsNotNullByDefault" startLine="93" endLine="95" />
    <method type="void" name="testCameraHasNoLayersByDefault" startLine="97" endLine="99" />
    <method type="void" name="testIndexOfLayerReturnsMinusOneWhenLayerNotFound" startLine="101" endLine="107">
      <declaration type="PLayer" name="orphanLayer" />
    </method>
    <method type="void" name="testRemoveLayerByReferenceWorks" startLine="109" endLine="114">
      <declaration type="PLayer" name="layer" />
    </method>
    <method type="void" name="testRemoveLayerByReferenceDoesNothingWithStrangeLayerWorks" startLine="116" endLine="119">
      <declaration type="PLayer" name="strangeLayer" />
    </method>
    <method type="void" name="testRemoveLayerRemovesTheCameraFromTheLayer" startLine="121" endLine="126">
      <declaration type="PLayer" name="layer" />
    </method>
    <method type="void" name="testAddingLayerAddCameraToLayer" startLine="128" endLine="132">
      <declaration type="PLayer" name="layer" />
    </method>
    <method type="void" name="testGetFullUnionOfLayerFullBoundsWorks" startLine="134" endLine="145">
      <declaration type="PLayer" name="layer1" />
      <declaration type="PLayer" name="layer2" />
      <declaration type="PBounds" name="fullLayerBounds" />
    </method>
    <method type="void" name="testPaintPaintsAllLayers" startLine="147" endLine="175">
      <declaration type="PCanvas" name="canvas" />
      <declaration type="PCamera" name="camera" />
      <declaration type="BufferedImage" name="img" />
      <declaration type="Graphics2D" name="g2" />
      <declaration type="PLayer" name="layer1" />
      <declaration type="PNode" name="blueSquare" />
      <declaration type="PLayer" name="layer2" />
      <declaration type="PNode" name="redSquare" />
    </method>
    <method type="void" name="testPickPackWorksInSimpleCases" startLine="177" endLine="195">
      <declaration type="PLayer" name="layer" />
      <declaration type="PNode" name="node1" />
      <declaration type="PNode" name="node2" />
      <declaration type="PPickPath" name="path1" />
      <declaration type="PPickPath" name="path2" />
    </method>
    <method type="void" name="testDefaultViewScaleIsOne" startLine="197" endLine="199" />
    <method type="void" name="testGetViewBoundsTransformsCamerasBounds" startLine="201" endLine="205" />
    <method type="void" name="testScaleViewIsCummulative" startLine="207" endLine="212" />
    <method type="void" name="testSetViewScalePersists" startLine="214" endLine="219" />
    <method type="void" name="testTranslateViewIsCummulative" startLine="221" endLine="226" />
    <method type="void" name="testViewTransformedFiresChangeEvent" startLine="228" endLine="233">
      <declaration type="MockPropertyChangeListener" name="mockListener" />
    </method>
    <method type="void" name="testAnimateViewToCenterBoundsIsImmediateWhenDurationIsZero" startLine="235" endLine="243">
      <declaration type="PBounds" name="targetBounds" />
      <declaration type="PActivity" name="activity" />
    </method>
    <method type="void" name="testAnimateViewToCenterBoundsCreatesValidActivity" startLine="245" endLine="253">
      <declaration type="PBounds" name="targetBounds" />
      <declaration type="PActivity" name="activity" />
    </method>
    <method type="void" name="testAnimateViewToPanToBoundsDoesNotAffectScale" startLine="255" endLine="260" />
    <method type="void" name="testAnimateViewToPanToBoundsIsImmediateWhenDurationIsZero" startLine="262" endLine="268">
      <declaration type="PActivity" name="activity" />
    </method>
    <method type="void" name="testAnimateViewToPanToBoundsReturnsAppropriatelyConfiguredActivity" startLine="270" endLine="279">
      <declaration type="PTransformActivity" name="activity" />
    </method>
    <method type="void" name="testPDebugDebugBoundsPaintsBounds" startLine="281" endLine="322">
      <declaration type="PCanvas" name="canvas" />
      <declaration type="PNode" name="parent" />
      <declaration type="PNode" name="child" />
      <declaration type="BufferedImage" name="img" />
      <declaration type="Graphics2D" name="graphics" />
      <declaration type="PPaintContext" name="pc" />
      <comment>First Square's Bounds</comment>
      <comment>Second Square's Bounds</comment>
      <comment>Ensure point between the squares on the full bounds is not drawn</comment>
    </method>
    <method type="void" name="assertPointColor" startLine="324" endLine="326" />
    <method type="void" name="testSetViewOffsetIsNotCummulative" startLine="328" endLine="334" />
    <method type="void" name="testDefaultViewConstraintsIsNone" startLine="336" endLine="338" />
    <method type="void" name="testSetViewContraintsPersists" startLine="340" endLine="347" />
    <method type="void" name="testSetViewConstraintsThrowsIllegalArgumentException" startLine="349" endLine="356">
      <scope startLine="350" endLine="352" />
      <scope startLine="353" endLine="355">
        <comment>expected</comment>
      </scope>
    </method>
    <method type="void" name="testTooFewLayersCamera" startLine="358" endLine="398">
      <declaration type="PCamera" name="tooFew" />
      <declaration type="MockPLayer" name="layer0" />
      <declaration type="MockPLayer" name="layer1" />
      <declaration type="PPickPath" name="pickPath" />
      <declaration type="BufferedImage" name="image" />
      <declaration type="Graphics2D" name="graphics" />
      <declaration type="PPaintContext" name="paintContext" />
      <comment>pickCameraView</comment>
      <comment>paintCameraView</comment>
      <comment>getUnionOfLayerFullBounds</comment>
      <comment>paintDebugInfo</comment>
    </method>
    <method type="void" name="testTooManyLayersCamera" startLine="400" endLine="440">
      <declaration type="PCamera" name="tooMany" />
      <declaration type="MockPLayer" name="layer0" />
      <declaration type="MockPLayer" name="layer1" />
      <declaration type="PPickPath" name="pickPath" />
      <declaration type="BufferedImage" name="image" />
      <declaration type="Graphics2D" name="graphics" />
      <declaration type="PPaintContext" name="paintContext" />
      <comment>pickCameraView</comment>
      <comment>paintCameraView</comment>
      <comment>getUnionOfLayerFullBounds</comment>
      <comment>paintDebugInfo</comment>
    </method>
    <method type="void" name="testRepaintFromNullParent" startLine="442" endLine="447">
      <declaration type="PCanvas" name="canvas" />
    </method>
    <method type="void" name="testRepaintFromNullComponent" startLine="449" endLine="454">
      <declaration type="PNode" name="parent" />
    </method>
    <method type="void" name="testRepaintFromNullParentNullComponent" startLine="456" endLine="460" />
    <method type="void" name="testRepaintFromLayer" startLine="462" endLine="466">
      <declaration type="PLayer" name="layer" />
    </method>
    <method type="void" name="testRepaintFromLayerNotViewedByCamera" startLine="468" endLine="472">
      <declaration type="PLayer" name="layer" />
      <comment>todo:  layer is not contained in list of layers viewed by camera, should complain</comment>
    </method>
    <method type="void" name="testRepaintFromLayerNotALayer" startLine="474" endLine="482">
      <scope startLine="475" endLine="478" />
      <scope startLine="479" endLine="481">
        <comment>expected</comment>
      </scope>
    </method>
    <method type="void" name="testRemoveLayerAtIndex" startLine="484" endLine="492">
      <declaration type="PLayer" name="layer" />
    </method>
    <method type="void" name="testRemoveLayerAtIndexIndexOutOfBounds" startLine="494" endLine="504">
      <declaration type="PLayer" name="layer" />
      <scope startLine="497" endLine="500" />
      <scope startLine="501" endLine="503">
        <comment>expected</comment>
      </scope>
    </method>
    <method type="void" name="testPaintDebugInfoDebugFullBounds" startLine="506" endLine="519">
      <declaration type="PLayer" name="layer" />
      <declaration type="PNode" name="child" />
      <declaration type="BufferedImage" name="image" />
      <declaration type="Graphics2D" name="graphics" />
      <declaration type="PPaintContext" name="paintContext" />
    </method>
    <method type="void" name="testPaintDebugInfoDebugFullBoundsNoChildNodes" startLine="521" endLine="531">
      <declaration type="PLayer" name="layer" />
      <declaration type="BufferedImage" name="image" />
      <declaration type="Graphics2D" name="graphics" />
      <declaration type="PPaintContext" name="paintContext" />
    </method>
    <method type="void" name="testPickAfterChildrenNotPicked" startLine="533" endLine="536">
      <declaration type="PPickPath" name="pickPath" />
    </method>
    <method type="void" name="testLocalToViewPoint2D" startLine="538" endLine="543">
      <declaration type="Point2D" name="local" />
    </method>
    <method type="void" name="testLocalToViewPoint2DTranslateView" startLine="545" endLine="551">
      <declaration type="Point2D" name="local" />
    </method>
    <method type="void" name="testLocalToViewPoint2DScaleView" startLine="553" endLine="559">
      <declaration type="Point2D" name="local" />
    </method>
    <method type="void" name="testLocalToViewDimension2D" startLine="561" endLine="566">
      <declaration type="Dimension2D" name="local" />
    </method>
    <method type="void" name="testLocalToViewDimension2DTranslateView" startLine="568" endLine="574">
      <declaration type="Dimension2D" name="local" />
    </method>
    <method type="void" name="testLocalToViewDimension2DScaleView" startLine="576" endLine="582">
      <declaration type="Dimension2D" name="local" />
    </method>
    <method type="void" name="testViewToLocalPoint2D" startLine="584" endLine="589">
      <declaration type="Point2D" name="view" />
    </method>
    <method type="void" name="testViewToLocalPoint2DTranslateView" startLine="591" endLine="597">
      <declaration type="Point2D" name="view" />
    </method>
    <method type="void" name="testViewToLocalPoint2DScaleView" startLine="599" endLine="605">
      <declaration type="Point2D" name="view" />
    </method>
    <method type="void" name="testViewToLocalDimension2D" startLine="607" endLine="612">
      <declaration type="Dimension2D" name="view" />
    </method>
    <method type="void" name="testViewToLocalDimension2DTranslateView" startLine="614" endLine="620">
      <declaration type="Dimension2D" name="view" />
    </method>
    <method type="void" name="testViewToLocalDimension2DScaleView" startLine="622" endLine="628">
      <declaration type="Dimension2D" name="view" />
    </method>
    <method type="void" name="testPickWithoutIntersectionStillContainsCamera" startLine="630" endLine="636">
      <declaration type="PPickPath" name="pickPath" />
      <comment>todo:  don't understand why this should be the case</comment>
    </method>
    <class name="MockPComponent" startLine="656">
      <implements name="PComponent" />
      <method type="void" name="paintImmediately" startLine="658" endLine="659" />
      <method type="void" name="popCursor" startLine="661" endLine="662" />
      <method type="void" name="pushCursor" startLine="664" endLine="665" />
      <method type="void" name="repaint" startLine="667" endLine="668" />
      <method type="void" name="setInteracting" startLine="670" endLine="671" />
      <class name="MockPLayer" extends="PLayer" startLine="674">
        <javadoc>
          <text>* Mock PLayer.  Should consider using mock library in version 2.0.</text>
        </javadoc>
        <declaration type="long" name="serialVersionUID" />
        <declaration type="boolean" name="fullBoundsReferenceCalled" />
        <declaration type="boolean" name="fullPaintCalled" />
        <declaration type="boolean" name="getAllNodesCalled" />
        <declaration type="boolean" name="fullPickCalled" />
        <javadoc>
          <text>* {@inheritDoc}</text>
        </javadoc>
        <method type="PBounds" name="getFullBoundsReference" startLine="685" endLine="688" />
        <javadoc>
          <text>* {@inheritDoc}</text>
        </javadoc>
        <method type="void" name="fullPaint" startLine="691" endLine="694" />
        <javadoc>
          <text>* {@inheritDoc}</text>
        </javadoc>
        <method type="Collection" name="getAllNodes" startLine="697" endLine="700" />
        <javadoc>
          <text>* {@inheritDoc}</text>
        </javadoc>
        <method type="boolean" name="fullPick" startLine="703" endLine="706" />
        <method type="boolean" name="fullBoundsReferenceCalled" startLine="708" endLine="710" />
        <method type="boolean" name="fullPaintCalled" startLine="712" endLine="714" />
        <method type="boolean" name="getAllNodesCalled" startLine="716" endLine="718" />
        <method type="boolean" name="fullPickCalled" startLine="720" endLine="722" />
        <class name="TooFewLayersCamera" extends="PCamera" startLine="725">
          <javadoc>
            <text>* Subclass of PCamera that advertises too few layers.</text>
          </javadoc>
          <declaration type="long" name="serialVersionUID" />
          <javadoc>
            <text>* {@inheritDoc}</text>
          </javadoc>
          <method type="int" name="getLayerCount" startLine="732" endLine="734" />
          <class name="TooManyLayersCamera" extends="PCamera" startLine="737">
            <javadoc>
              <text>* Subclass of PCamera that advertises too many layers.</text>
            </javadoc>
            <declaration type="long" name="serialVersionUID" />
            <javadoc>
              <text>* {@inheritDoc}</text>
            </javadoc>
            <method type="int" name="getLayerCount" startLine="744" endLine="746" />
          </class>
        </class>
      </class>
    </class>
    <comment>public void testAnimateViewToTransformIdentity() {
PRoot root = new PRoot();
PLayer layer = new PLayer();
root.addChild(camera);
root.addChild(layer);
camera.addChild(layer);

AffineTransform identity = new AffineTransform();
camera.animateViewToTransform(identity, System.currentTimeMillis());
 todo:  throws NPE at PActivityScheduler.processActivities(PActivityScheduler.java:176)
root.waitForActivities();

assertSame(identity, camera.getViewTransformReference());
}</comment>
  </class>
</source>
