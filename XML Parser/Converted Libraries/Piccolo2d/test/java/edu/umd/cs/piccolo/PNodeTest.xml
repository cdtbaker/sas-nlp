<?xml version="1.0" encoding="UTF-8"?>
<source package="edu.umd.cs.piccolo">
  <import name="java.awt.Color" />
  <import name="java.awt.Dimension" />
  <import name="java.awt.Graphics" />
  <import name="java.awt.GraphicsEnvironment" />
  <import name="java.awt.geom.AffineTransform" />
  <import name="java.awt.geom.Point2D" />
  <import name="java.awt.geom.Rectangle2D" />
  <import name="java.awt.image.BufferedImage" />
  <import name="java.beans.PropertyChangeEvent" />
  <import name="java.io.IOException" />
  <import name="java.util.ArrayList" />
  <import name="java.util.Collection" />
  <import name="java.util.Enumeration" />
  <import name="java.util.Iterator" />
  <import name="java.util.ListIterator" />
  <import name="javax.swing.text.MutableAttributeSet" />
  <import name="junit.framework.TestCase" />
  <import name="edu.umd.cs.piccolo.activities.PActivity" />
  <import name="edu.umd.cs.piccolo.activities.PColorActivity" />
  <import name="edu.umd.cs.piccolo.activities.PInterpolatingActivity" />
  <import name="edu.umd.cs.piccolo.activities.PTransformActivity" />
  <import name="edu.umd.cs.piccolo.activities.PColorActivity.Target" />
  <import name="edu.umd.cs.piccolo.event.PBasicInputEventHandler" />
  <import name="edu.umd.cs.piccolo.util.PAffineTransform" />
  <import name="edu.umd.cs.piccolo.util.PAffineTransformException" />
  <import name="edu.umd.cs.piccolo.util.PBounds" />
  <import name="edu.umd.cs.piccolo.util.PDimension" />
  <import name="edu.umd.cs.piccolo.util.PNodeFilter" />
  <import name="edu.umd.cs.piccolo.util.PPaintContext" />
  <import name="edu.umd.cs.piccolo.util.PPickPath" />
  <import name="edu.umd.cs.piccolo.util.PUtil" />
  <class name="PNodeTest" extends="TestCase" startLine="65">
    <javadoc>
      <text>* Unit test for PNode.</text>
    </javadoc>
    <declaration type="MockPropertyChangeListener" name="mockListener" />
    <declaration type="PNode" name="node" />
    <method type="constructor" name="PNodeTest" startLine="73" endLine="75" />
    <method type="void" name="setUp" startLine="77" endLine="80" />
    <method type="void" name="testCenterBaseBoundsOnPoint" startLine="82" endLine="87" />
    <method type="void" name="testClientProperties" startLine="89" endLine="98">
      <declaration type="PNode" name="n" />
    </method>
    <method type="void" name="testFullScale" startLine="100" endLine="116">
      <declaration type="PNode" name="aParent" />
      <declaration type="PNode" name="aNode" />
    </method>
    <method type="void" name="testReparent" startLine="118" endLine="136">
      <declaration type="PNode" name="aParent" />
      <declaration type="PNode" name="aNode" />
    </method>
    <method type="void" name="testFindIntersectingNodes" startLine="138" endLine="160">
      <declaration type="PNode" name="n" />
      <declaration type="PNode" name="c" />
      <declaration type="ArrayList" name="found" />
      <declaration type="Rectangle2D" name="rect2d" />
      <declaration type="PBounds" name="bounds" />
    </method>
    <method type="void" name="testRemoveNonexistantListener" startLine="162" endLine="165">
      <declaration type="PNode" name="n" />
    </method>
    <method type="void" name="testAddChildHandleDuplicates" startLine="167" endLine="173">
      <declaration type="PNode" name="parent" />
    </method>
    <method type="void" name="testAddChildCanSpecifyAnIndexAndDoesntReplace" startLine="175" endLine="181">
      <declaration type="PNode" name="parent" />
    </method>
    <method type="void" name="testAddChildWithIndexMovesChildAround" startLine="183" endLine="198">
      <declaration type="PNode" name="parent" />
    </method>
    <method type="void" name="testCloneCopiesAllProperties" startLine="200" endLine="223">
      <declaration type="PNode" name="clonedNode" />
    </method>
    <method type="void" name="testCloneCopiesTransforms" startLine="225" endLine="236">
      <declaration type="PNode" name="clonedNode" />
    </method>
    <method type="void" name="testCloneDoesNotCopyEventListeners" startLine="238" endLine="244">
      <declaration type="PNode" name="clonedNode" />
    </method>
    <method type="void" name="testCloneClonesChildrenAswell" startLine="246" endLine="254">
      <declaration type="PNode" name="child" />
      <declaration type="PNode" name="clonedNode" />
    </method>
    <method type="void" name="testCloneDoesNotCopyParent" startLine="256" endLine="263">
      <declaration type="PNode" name="child" />
      <declaration type="PNode" name="clonedChild" />
    </method>
    <method type="void" name="testLocalToGlobal" startLine="265" endLine="300">
      <declaration type="PNode" name="aParent" />
      <declaration type="PNode" name="aChild" />
      <declaration type="PBounds" name="bnds" />
      <declaration type="PDimension" name="dim" />
      <comment>bounds</comment>
      <comment>dimensions</comment>
    </method>
    <method type="void" name="testToString" startLine="302" endLine="320">
      <declaration type="PNode" name="a" />
      <declaration type="PNode" name="b" />
      <declaration type="PNode" name="c" />
      <declaration type="PNode" name="d" />
      <declaration type="PNode" name="e" />
      <declaration type="PNode" name="f" />
    </method>
    <method type="void" name="testRecursiveLayout" startLine="322" endLine="359">
      <declaration type="PNode" name="layoutNode1" />
      <javadoc />
      <declaration type="long" name="serialVersionUID" />
      <method type="void" name="layoutChildren" startLine="329" endLine="333">
        <scope startLine="330" endLine="332" />
      </method>
      <declaration type="PNode" name="layoutNode2" />
      <javadoc />
      <declaration type="long" name="serialVersionUID" />
      <method type="void" name="layoutChildren" startLine="342" endLine="346">
        <scope startLine="343" endLine="345" />
      </method>
      <declaration type="PNode" name="n" />
    </method>
    <method type="void" name="testAnimateToBoundsWithDuration0IsImmediate" startLine="361" endLine="372">
      <declaration type="PActivity" name="activity" />
      <declaration type="PBounds" name="resultBounds" />
    </method>
    <method type="void" name="testAnimateToBoundsHasProperSetup" startLine="374" endLine="382">
      <declaration type="PInterpolatingActivity" name="activity" />
    </method>
    <method type="void" name="testAnimateTransformToBoundsWithDuration0IsImmediate" startLine="384" endLine="392">
      <declaration type="PActivity" name="activity" />
      <declaration type="PAffineTransform" name="transform" />
    </method>
    <method type="void" name="testAnimateTransformToBoundsHasProperSetup" startLine="394" endLine="411">
      <declaration type="PTransformActivity" name="activity" />
      <declaration type="double[]" name="resultTransform" />
    </method>
    <method type="void" name="testAnimateToPositionScaleRotationWithDuration0IsImmediate" startLine="413" endLine="427">
      <declaration type="PActivity" name="activity" />
      <declaration type="PAffineTransform" name="resultTransform" />
      <declaration type="PAffineTransform" name="expected" />
    </method>
    <method type="void" name="testAnimateToPositionScaleRotationHasProperSetup" startLine="429" endLine="451">
      <declaration type="PTransformActivity" name="activity" />
      <declaration type="double[]" name="resultTransform" />
      <declaration type="PAffineTransform" name="expected" />
    </method>
    <method type="void" name="testAnimateToColorWithDuration0IsImmediate" startLine="453" endLine="461">
      <declaration type="PActivity" name="activity" />
    </method>
    <method type="void" name="testAnimateToColorHasProperSetup" startLine="463" endLine="473">
      <declaration type="PInterpolatingActivity" name="activity" />
      <comment>assertEquals(Color.BLACK, activity.getDestinationColor());</comment>
    </method>
    <method type="void" name="testAddActivityAddsActivityToScheduler" startLine="475" endLine="485">
      <declaration type="PCanvas" name="canvas" />
      <declaration type="PColorActivity" name="activity" />
    </method>
    <method type="PColorActivity" name="buildTestActivity" startLine="487" endLine="501">
      <declaration type="Target" name="testTarget" />
      <method type="Color" name="getColor" startLine="490" endLine="492" />
      <method type="void" name="setColor" startLine="494" endLine="496" />
      <declaration type="PColorActivity" name="activity" />
    </method>
    <method type="void" name="testAnimateToTransparencyWithDuration0IsImmediate" startLine="503" endLine="511">
      <declaration type="PActivity" name="activity" />
    </method>
    <method type="void" name="testAnimateToTransparencyHasProperSetup" startLine="513" endLine="522">
      <declaration type="PInterpolatingActivity" name="activity" />
    </method>
    <method type="void" name="testGetClientPropertiesShouldReturnSetEvenIfNonePresent" startLine="524" endLine="528">
      <declaration type="MutableAttributeSet" name="properties" />
    </method>
    <method type="void" name="testGetClientPropertiesShouldReturnSameCollectionAlways" startLine="530" endLine="534">
      <declaration type="MutableAttributeSet" name="properties1" />
      <declaration type="MutableAttributeSet" name="properties2" />
    </method>
    <method type="void" name="testGetClientPropertyKeysEnumerationShouldReturnEnumarationOnNewNode" startLine="536" endLine="540">
      <declaration type="Enumeration" name="enumeration" />
    </method>
    <method type="void" name="testGetClientPropertyKeysEnumerationShouldReturnCorrectEnumWhenPropertiesExist" startLine="542" endLine="549">
      <declaration type="Enumeration" name="enumeration" />
    </method>
    <method type="void" name="testGetAttributeReturnsNullWhenMissing" startLine="551" endLine="553" />
    <method type="void" name="testGetAttributeReturnsValueWhenPresent" startLine="555" endLine="558" />
    <method type="void" name="testGetAttributeReturnsDefaultWhenProvided" startLine="560" endLine="562" />
    <method type="void" name="testGetAttributeReturnsValueIfFoundWhenDefaultProvided" startLine="564" endLine="567" />
    <method type="void" name="testGetBooleanAttributeReturnsDefaultWhenProvided" startLine="569" endLine="571" />
    <method type="void" name="testGetBooleanAttributeReturnsValueIfFoundWhenDefaultProvided" startLine="573" endLine="576" />
    <method type="void" name="testGetIntegerAttributeReturnsDefaultWhenProvided" startLine="578" endLine="580" />
    <method type="void" name="testGetIntegerAttributeReturnsValueIfFoundWhenDefaultProvided" startLine="582" endLine="585" />
    <method type="void" name="testGetDoubleAttributeReturnsDefaultWhenProvided" startLine="587" endLine="589" />
    <method type="void" name="testGetDoubleAttributeReturnsValueIfFoundWhenDefaultProvided" startLine="591" endLine="594" />
    <method type="void" name="testGetAddClienProperty" startLine="596" endLine="600" />
    <method type="void" name="testGetClientPropertyKeysIteratorIsNotNullOnEmptyClientProperties" startLine="602" endLine="606">
      <declaration type="Iterator" name="iterator" />
    </method>
    <method type="void" name="testGetClientPropertyKeysIteratorReturnsValidIteraotOnPropertiesExist" startLine="608" endLine="618">
      <declaration type="Iterator" name="iterator" />
    </method>
    <method type="void" name="testLocalToParentModifiesGivenPoint" startLine="620" endLine="630">
      <declaration type="PNode" name="parent" />
      <declaration type="Point2D" name="point" />
    </method>
    <method type="void" name="testLocalToParentDoesWorkWithOrphanChildWhenTransformed" startLine="632" endLine="639">
      <declaration type="Point2D" name="point" />
    </method>
    <method type="void" name="testLocalToParentDoesNothingWithOrphanChildWhenNotTransformed" startLine="641" endLine="646">
      <declaration type="Point2D" name="point" />
    </method>
    <method type="void" name="testParentToLocalModifiesGivenPoint" startLine="648" endLine="658">
      <declaration type="PNode" name="parent" />
      <declaration type="Point2D" name="point" />
    </method>
    <method type="void" name="testParentToLocalTransformsOrphanChildWhenTransformed" startLine="660" endLine="668">
      <declaration type="PNode" name="aChild" />
      <declaration type="Point2D" name="point" />
    </method>
    <method type="void" name="testGlobalToLocalWorksUnTransformedNodes" startLine="670" endLine="678">
      <declaration type="PNode" name="parent" />
      <declaration type="Point2D" name="point" />
    </method>
    <method type="void" name="testRemoveEventListener" startLine="680" endLine="687">
      <declaration type="PBasicInputEventHandler" name="eventListener" />
    </method>
    <method type="void" name="testAddPropertyChangeListener" startLine="689" endLine="693" />
    <method type="void" name="testAddPropertyChangeListenerForPropertyName" startLine="695" endLine="699" />
    <method type="void" name="testRemovePropertyChangeListener" startLine="701" endLine="706" />
    <method type="void" name="testRemovePropertyChangeListenerForPropertyName" startLine="708" endLine="713" />
    <method type="void" name="testPropertyChangesCascadeToParent" startLine="715" endLine="728">
      <declaration type="PNode" name="aParent" />
      <declaration type="PNode" name="aChild" />
      <declaration type="PropertyChangeEvent" name="propEvent" />
    </method>
    <method type="void" name="testStartEndResizeBoundsCanBeCalledWithoutResizes" startLine="730" endLine="733" />
    <method type="void" name="testSetXModifiesBounds" startLine="735" endLine="738" />
    <method type="void" name="testSetYModifiesBounds" startLine="740" endLine="743" />
    <method type="void" name="testSetHeightModifiesBounds" startLine="745" endLine="748" />
    <method type="void" name="testSetWidthModifiesBounds" startLine="750" endLine="753" />
    <method type="void" name="testResetBoundsDoesSo" startLine="755" endLine="761">
      <declaration type="PBounds" name="zeroBounds" />
    </method>
    <method type="void" name="testCenterBoundsOnPointWorksAsExpected" startLine="763" endLine="769">
      <declaration type="PBounds" name="expected" />
    </method>
    <method type="void" name="testCenterFullBoundsOnPointWorksAsExpected" startLine="771" endLine="778">
      <declaration type="PNode" name="aParent" />
      <declaration type="PBounds" name="expected" />
    </method>
    <method type="PNode" name="buildComplexSquareNode" startLine="780" endLine="793">
      <declaration type="PNode" name="aParent" />
      <declaration type="PNode" name="child1" />
      <declaration type="PNode" name="child2" />
    </method>
    <method type="void" name="testGetUnionOfChildrenBoundsAcceptsNull" startLine="795" endLine="802">
      <declaration type="PNode" name="node" />
      <declaration type="PBounds" name="union" />
    </method>
    <method type="void" name="testGetGlobalFullBoundsIsSameWhenNoTransforms" startLine="804" endLine="817">
      <declaration type="PNode" name="parent" />
      <declaration type="PNode" name="child" />
      <declaration type="PNode" name="grandChild" />
      <declaration type="PBounds" name="globalFullBounds" />
    </method>
    <method type="void" name="testChildBoundsStayVolatile" startLine="819" endLine="822" />
    <method type="void" name="testRotatingChangesRotation" startLine="824" endLine="827" />
    <method type="void" name="testSetRotationIsNotCummulative" startLine="829" endLine="833" />
    <method type="void" name="testRotateAboutPointDoesNotAffectBounds" startLine="835" endLine="839">
      <comment>It's top center point</comment>
    </method>
    <method type="void" name="testRotateAboutPointVersion1AffectsTransformAsItShould" startLine="841" endLine="850">
      <declaration type="PAffineTransform" name="expectedTransform" />
      <comment>It's top center point</comment>
    </method>
    <method type="void" name="testRotateAboutPointVersion2AffectsTransformAsItShould" startLine="852" endLine="863">
      <declaration type="PAffineTransform" name="expectedTransform" />
      <comment>It's top</comment>
      <comment>center</comment>
      <comment>point</comment>
    </method>
    <method type="void" name="testScaleAboutPointWorksAsExpected" startLine="865" endLine="873">
      <declaration type="PAffineTransform" name="expectedTransform" />
    </method>
    <method type="void" name="testRotateInPlaneLeavesFullBoundsUntouched" startLine="875" endLine="881">
      <declaration type="PBounds" name="boundsBefore" />
    </method>
    <method type="void" name="testSetGlobalScaleTakesParentsScaleIntoAccount" startLine="883" endLine="893">
      <declaration type="PNode" name="aParent" />
      <declaration type="PNode" name="aChild" />
    </method>
    <method type="void" name="testOffsetDoesNotTakeBoundsIntoAccount" startLine="895" endLine="900" />
    <method type="void" name="testTransformByIsCummulative" startLine="902" endLine="907" />
    <method type="void" name="testLerp" startLine="909" endLine="913" />
    <method type="void" name="testAnimateToRelativePositionResultsInProperTransform" startLine="915" endLine="933">
      <declaration type="PCanvas" name="canvas" />
      <declaration type="PNode" name="A" />
      <declaration type="PNode" name="B" />
      <declaration type="Point2D" name="srcPt" />
      <declaration type="Point2D" name="destPt" />
      <declaration type="PAffineTransform" name="expectedTransform" />
    </method>
    <method type="void" name="testGetInverseTransformWorks" startLine="935" endLine="943">
      <declaration type="PAffineTransform" name="expectedTransform" />
    </method>
    <method type="void" name="testGetInverseTransformThrowsExceptionWhenTransformIsNotInvertible" startLine="945" endLine="955">
      <scope startLine="948" endLine="951" />
      <scope startLine="952" endLine="954">
        <comment>expected</comment>
      </scope>
    </method>
    <method type="void" name="testSetVisibleIsRespectedOnPaint" startLine="957" endLine="991">
      <declaration type="int[]" name="paintCounts" />
      <declaration type="PNode" name="node" />
      <javadoc />
      <declaration type="long" name="serialVersionUID" />
      <method type="void" name="paint" startLine="966" endLine="968" />
      <declaration type="PCanvas" name="canvas" />
      <declaration type="BufferedImage" name="img" />
      <declaration type="Graphics" name="g" />
    </method>
    <method type="void" name="testSetTransparency1MeansInvisible" startLine="993" endLine="1012">
      <declaration type="PNode" name="node" />
      <declaration type="PCanvas" name="canvas" />
      <declaration type="BufferedImage" name="img" />
      <declaration type="Graphics" name="g" />
    </method>
    <method type="PCanvas" name="buildCanvasContainingNode" startLine="1014" endLine="1019">
      <declaration type="PCanvas" name="canvas" />
    </method>
    <method type="void" name="testPaintColourIsRespectedOnPaint" startLine="1021" endLine="1032">
      <declaration type="BufferedImage" name="img" />
      <declaration type="Graphics" name="g" />
      <declaration type="PCanvas" name="canvas" />
    </method>
    <method type="void" name="testToImageReturnsValidImage" startLine="1034" endLine="1048">
      <declaration type="BufferedImage" name="img" />
      <comment>Really don't like casting here, but... without changing the</comment>
      <comment>interface, I don't see a choice</comment>
    </method>
    <method type="void" name="testToImageUsesFullBoundsWhenConvertingImage" startLine="1050" endLine="1070">
      <declaration type="PNode" name="child1" />
      <declaration type="PNode" name="child2" />
      <declaration type="BufferedImage" name="image" />
      <comment>This line fails if PNode.toImage uses getWidth() rather than getFullBounds().getWidth()</comment>
    </method>
    <method type="void" name="testToImageWillAcceptBackgroundPaint" startLine="1072" endLine="1077">
      <declaration type="BufferedImage" name="img" />
    </method>
    <method type="void" name="testToImageResultsInDesiredSizeImage" startLine="1079" endLine="1085">
      <declaration type="BufferedImage" name="img" />
    </method>
    <method type="void" name="testToImageWithBackgroundColorGivenReturnsValidImage" startLine="1087" endLine="1094">
      <declaration type="BufferedImage" name="img" />
    </method>
    <method type="void" name="testToImageScalesNodeAsBigAsCanBe" startLine="1096" endLine="1108">
      <declaration type="BufferedImage" name="img" />
    </method>
    <method type="void" name="testToImageScalesAccordingToExactFitStrategy" startLine="1110" endLine="1122">
      <declaration type="BufferedImage" name="img" />
    </method>
    <method type="void" name="testToImageScalesAccordingToAspectCoverStrategy" startLine="1124" endLine="1155">
      <declaration type="PNode" name="blueSquare" />
      <declaration type="PNode" name="greenSquare" />
      <declaration type="BufferedImage" name="img" />
    </method>
    <method type="void" name="testGetPickableShouldDefaultToTrue" startLine="1157" endLine="1159" />
    <method type="void" name="testSetPickableFiresPropertyChange" startLine="1161" endLine="1165" />
    <method type="void" name="testChildrenShouldBePickableByDefault" startLine="1167" endLine="1169" />
    <method type="void" name="testSetChildrenPickableFiresPropertyChange" startLine="1171" endLine="1175" />
    <method type="void" name="testByDefaultNodesShouldNotPickThemselvesBeforeTheirChildren" startLine="1177" endLine="1181">
      <declaration type="PCanvas" name="canvas" />
      <declaration type="PPickPath" name="pickPath" />
    </method>
    <method type="void" name="testfullPickReturnsTrueWhenOverlapsWithChildNode" startLine="1183" endLine="1194">
      <declaration type="PCanvas" name="canvas" />
      <declaration type="PNode" name="child" />
      <declaration type="PPickPath" name="pickPath" />
    </method>
    <method type="void" name="testfullPickReturnsFalseWhenNotOverlappingWithChildNode" startLine="1196" endLine="1207">
      <declaration type="PCanvas" name="canvas" />
      <declaration type="PNode" name="child" />
      <declaration type="PPickPath" name="pickPath" />
    </method>
    <method type="void" name="testAddChildrenAddsAllChildren" startLine="1209" endLine="1218">
      <declaration type="Collection" name="newChildren" />
    </method>
    <method type="void" name="testRemoveChildrenWorks" startLine="1220" endLine="1230">
      <declaration type="Collection" name="newChildren" />
    </method>
    <method type="void" name="testGetAllNodesUnrollsTheNodeGraph" startLine="1232" endLine="1241">
      <declaration type="Collection" name="newChildren" />
    </method>
    <method type="void" name="testRemoveAllChildrenDoesntCrashWhenNoChidlren" startLine="1243" endLine="1250">
      <comment>And now for the case when there once was a child</comment>
    </method>
    <method type="void" name="testRemoveFromParentDoesSo" startLine="1252" endLine="1259">
      <declaration type="PNode" name="parent" />
    </method>
    <method type="void" name="testReplaceWithSwapsParents" startLine="1261" endLine="1270">
      <declaration type="PNode" name="parent" />
      <declaration type="PNode" name="newNode" />
    </method>
    <method type="void" name="testGetChildrenIteratorReturnsIteratorEvenWithNoChildren" startLine="1272" endLine="1276">
      <declaration type="ListIterator" name="iterator" />
    </method>
    <method type="void" name="testGetChildrenIteratorReturnsValidIteratorWhenHasChildren" startLine="1278" endLine="1287">
      <declaration type="PNode" name="child" />
      <declaration type="ListIterator" name="iterator" />
    </method>
    <method type="void" name="testGetAllNodesDoesntIgnoreFilter" startLine="1289" endLine="1307">
      <declaration type="PNodeFilter" name="nullFilter" />
      <method type="boolean" name="accept" startLine="1292" endLine="1294" />
      <method type="boolean" name="acceptChildrenOf" startLine="1296" endLine="1298" />
      <declaration type="Collection" name="nodes" />
    </method>
    <method type="void" name="testAncestryMethods" startLine="1309" endLine="1325">
      <declaration type="PNode" name="child" />
      <declaration type="PNode" name="grandChild" />
      <declaration type="PNode" name="unrelated" />
    </method>
    <method type="void" name="testMoveToBackMovesNodeToBeFirstChild" startLine="1327" endLine="1334">
      <declaration type="PNode" name="parent" />
    </method>
    <method type="void" name="testMoveToFrontMovesNodeToBeLastChild" startLine="1336" endLine="1343">
      <declaration type="PNode" name="parent" />
    </method>
    <method type="void" name="testMoveInBackOfMovesNodeToBeforeSibling" startLine="1345" endLine="1356">
      <declaration type="PNode" name="parent" />
      <declaration type="PNode" name="sibling" />
    </method>
    <method type="void" name="testMoveInFrontOfMovesNodeToAfterSibling" startLine="1358" endLine="1369">
      <declaration type="PNode" name="parent" />
      <declaration type="PNode" name="sibling" />
    </method>
    <method type="void" name="testMoveInFrontOfDoesNothingIfNotSibling" startLine="1371" endLine="1381">
      <declaration type="PNode" name="parent" />
      <declaration type="PNode" name="stranger" />
    </method>
    <method type="void" name="testMoveInBackOfDoesNothingIfNotSibling" startLine="1383" endLine="1393">
      <declaration type="PNode" name="parent" />
      <declaration type="PNode" name="stranger" />
    </method>
    <method type="void" name="testIsDescendentOfRootHandlesOrphans" startLine="1395" endLine="1401">
      <declaration type="PNode" name="orphan" />
    </method>
    <method type="void" name="testIsDescendentOfRootHandlesDescendentsOfRoot" startLine="1403" endLine="1408">
      <declaration type="PCanvas" name="canvas" />
    </method>
    <method type="void" name="testGetGlobalRationTakesParentsIntoAccount" startLine="1410" endLine="1418">
      <declaration type="PNode" name="parent" />
    </method>
    <method type="void" name="testSetGlobalRationTakesParentsIntoAccount" startLine="1420" endLine="1428">
      <declaration type="PNode" name="parent" />
    </method>
    <method type="void" name="testSetGlobalRationWorksWhenNoParent" startLine="1430" endLine="1434" />
    <method type="void" name="testSetOccludedPersistes" startLine="1436" endLine="1439" />
    <method type="void" name="testHiddenNodesAreNotPickable" startLine="1441" endLine="1460">
      <declaration type="PCanvas" name="canvas" />
      <declaration type="PNode" name="node1" />
      <declaration type="PNode" name="node2" />
      <declaration type="PLayer" name="layer2" />
      <declaration type="PPickPath" name="path" />
    </method>
  </class>
</source>
