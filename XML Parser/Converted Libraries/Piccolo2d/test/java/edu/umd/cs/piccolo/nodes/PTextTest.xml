<?xml version="1.0" encoding="UTF-8"?>
<source package="edu.umd.cs.piccolo.nodes">
  <import name="java.awt.Color" />
  <import name="java.awt.Component" />
  <import name="java.awt.Font" />
  <import name="junit.framework.TestCase" />
  <import name="edu.umd.cs.piccolo.MockPropertyChangeListener" />
  <class name="PTextTest" extends="TestCase" startLine="38">
    <javadoc>
      <text>* Unit test for PText.</text>
    </javadoc>
    <declaration type="PText" name="textNode" />
    <declaration type="MockPropertyChangeListener" name="mockListener" />
    <method type="constructor" name="PTextTest" startLine="46" endLine="48" />
    <method type="void" name="setUp" startLine="50" endLine="53" />
    <method type="void" name="testClone" startLine="55" endLine="62">
      <declaration type="PText" name="clonedNode" />
    </method>
    <method type="void" name="testTextIsEmptyByDefault" startLine="64" endLine="67">
      <declaration type="PText" name="textNode" />
    </method>
    <method type="void" name="testTextMayBeAssignedEmptyString" startLine="69" endLine="72" />
    <method type="void" name="testTextNullGetsInterpretedAsEmptyString" startLine="74" endLine="77" />
    <method type="void" name="testBoundsGrowWithTextByDefault" startLine="79" endLine="88">
      <declaration type="PText" name="text123" />
      <declaration type="double" name="width123" />
      <declaration type="PText" name="text1234" />
      <declaration type="double" name="width1234" />
    </method>
    <method type="void" name="testBoundsOfEmptyString" startLine="90" endLine="95" />
    <method type="void" name="testToString" startLine="97" endLine="100" />
    <method type="void" name="testJustificationIsLeftByDefault" startLine="102" endLine="104" />
    <method type="void" name="testSetJustificationPersists" startLine="106" endLine="109" />
    <method type="void" name="testHorizontalAlignmentIsLeftByDefault" startLine="111" endLine="113" />
    <method type="void" name="testSetHorizontalAlignmentPersists" startLine="115" endLine="118" />
    <method type="void" name="testSetHorizontalAlignmentInvalidValues" startLine="120" endLine="157">
      <scope startLine="121" endLine="123" />
      <scope startLine="124" endLine="126">
        <comment>expected</comment>
      </scope>
      <scope startLine="127" endLine="129" />
      <scope startLine="130" endLine="132">
        <comment>expected</comment>
      </scope>
      <scope startLine="133" endLine="135" />
      <scope startLine="136" endLine="138">
        <comment>expected</comment>
      </scope>
      <scope startLine="139" endLine="141" />
      <scope startLine="142" endLine="144">
        <comment>expected</comment>
      </scope>
      <scope startLine="145" endLine="147" />
      <scope startLine="148" endLine="150">
        <comment>expected</comment>
      </scope>
      <scope startLine="151" endLine="153" />
      <scope startLine="154" endLine="156">
        <comment>expected</comment>
      </scope>
    </method>
    <method type="void" name="testTextPaintIsBlackByDefault" startLine="159" endLine="161" />
    <method type="void" name="testSetTextPaintPersists" startLine="163" endLine="166" />
    <method type="void" name="testConstrainWidthToTextTrueByDefault" startLine="168" endLine="170" />
    <method type="void" name="testConstrainHeightToTextTrueByDefault" startLine="172" endLine="174" />
    <method type="void" name="testConstrainWidthPersists" startLine="176" endLine="179" />
    <method type="void" name="testConstrainHeightPersists" startLine="181" endLine="184" />
    <method type="void" name="testDefaultGreekThreshold" startLine="186" endLine="188" />
    <method type="void" name="testSetGreekThreshold" startLine="190" endLine="193" />
    <method type="void" name="testDefaultFont" startLine="195" endLine="197" />
    <method type="void" name="testSetFontPersists" startLine="199" endLine="203">
      <declaration type="Font" name="newFont" />
    </method>
    <method type="void" name="testSetFontFiresPropertyChangedEvent" startLine="205" endLine="212">
      <declaration type="Font" name="newFont" />
    </method>
  </class>
</source>
