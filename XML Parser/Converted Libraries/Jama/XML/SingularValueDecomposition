<?xml version="1.0" encoding="UTF-8"?>
    <source package="Jama">
        <import package="Jama.util"/>
        <class name="SingularValueDecomposition" line="4">
            <comment line="5">
                ------------------------
                Class variables
                 ------------------------                
            </comment>
            <comment line="5">
                ------------------------
                Constructor
                 ------------------------                
            </comment>
            <comment line="5">
                ------------------------
                Public Methods
                 ------------------------                
            </comment>
            <implements interface="java.io.Serializable"/>
            <javadoc line="4">
                Singular Value Decomposition.
                 * &lt;P&gt;
                 * For an m-by-n matrix A with m &gt;= n, the singular value decomposition is
                 * an m-by-n orthogonal matrix U, an n-by-n diagonal matrix S, and
                 * an n-by-n orthogonal matrix V so that A = U*S*V&apos;.
                 * &lt;P&gt;
                 * The singular values, sigma[k] = S[k][k], are ordered so that
                 * sigma[0] &gt;= sigma[1] &gt;= ... &gt;= sigma[n-1].
                 * &lt;P&gt;
                 * The singular value decompostion always exists, so the constructor will
                 * never fail.  The matrix condition number and the effective numerical
                 * rank can be computed from this decomposition.                
            </javadoc>
            <declaration name="U" type="double[][]" line="24"/>
            <javadoc line="24">
                Arrays for internal storage of U and V.                
                <@serial>
                    l internal storage of U.                    
                </@serial>
                <@serial>
                    l internal storage of V.                    
                </@serial>
            </javadoc>
            <declaration name="s" type="double[]" line="30"/>
            <javadoc line="30">
                Array for internal storage of singular values.                
                <@serial>
                    l internal storage of singular values.                    
                </@serial>
            </javadoc>
            <declaration name="m" type="int" line="35"/>
            <javadoc line="35">
                Row and column dimensions.                
                <@serial>
                    l row dimension.                    
                </@serial>
                <@serial>
                    l column dimension.                    
                </@serial>
            </javadoc>
            <javadoc line="45">
                Construct the singular value decomposition
                 * Structure to access U, S and V.                
                <@param>
                    m Arg    Rectangular matrix                    
                </@param>
            </javadoc>
            <method name="SingularValueDecomposition" type="constructor" line="50">
                <comment line="51">
                    Derived from LINPACK code.                    
                </comment>
                <comment line="51">
                    Initialize.                    
                </comment>
                <comment line="51">
                    Apparently the failing cases are only a proper subset of (m&lt;n),
                    so let&apos;s not throw error.  Correct fix to come later?
                    if (m&lt;n) {
                    throw new IllegalArgumentException(&quot;Jama SVD only works for m &gt;= n&quot;); }
                    
                    int nu = Math.min(m,n);
                    s = new double [Math.min(m+1,n)];                    
                </comment>
                <comment line="51">
                    Reduce A to bidiagonal form, storing the diagonal elements                    
                </comment>
                <comment line="51">
                    in s and the super-diagonal elements in e.                    
                </comment>
                <comment line="51">
                    Set up the final bidiagonal matrix or order p.                    
                </comment>
                <comment line="51">
                    If required, generate U.                    
                </comment>
                <comment line="51">
                    If required, generate V.                    
                </comment>
                <comment line="51">
                    Main iteration loop for the singular values.                    
                </comment>
                <declaration name="A" type="double[][]" line="54"/>
                <declaration name="nu" type="int" line="63"/>
                <declaration name="e" type="double[]" line="67"/>
                <declaration name="work" type="double[]" line="68"/>
                <declaration name="wantu" type="boolean" line="69"/>
                <declaration name="wantv" type="boolean" line="70"/>
                <declaration name="nct" type="int" line="75"/>
                <declaration name="nrt" type="int" line="76"/>
                <scope line="77">
                    <scope line="78">
                        <scope line="84"/>
                        <scope line="87">
                            <scope line="88"/>
                            <scope line="91"/>
                        </scope>
                    </scope>
                    <scope line="98">
                        <scope line="99">
                            <declaration name="t" type="double" line="103"/>
                            <scope line="104"/>
                            <scope line="108"/>
                        </scope>
                    </scope>
                    <scope line="118">
                        <scope line="123"/>
                    </scope>
                    <scope line="127">
                        <scope line="133"/>
                        <scope line="136">
                            <scope line="137"/>
                            <scope line="140"/>
                        </scope>
                        <scope line="146">
                            <scope line="150"/>
                            <scope line="153">
                                <scope line="154"/>
                            </scope>
                            <scope line="158">
                                <declaration name="t" type="double" line="159"/>
                                <scope line="160"/>
                            </scope>
                        </scope>
                        <scope line="165">
                            <scope line="170"/>
                        </scope>
                    </scope>
                </scope>
                <declaration name="p" type="int" line="179"/>
                <scope line="180"/>
                <scope line="183"/>
                <scope line="186"/>
                <scope line="193">
                    <scope line="194">
                        <scope line="195"/>
                    </scope>
                    <scope line="200">
                        <scope line="201">
                            <scope line="202">
                                <declaration name="t" type="double" line="203"/>
                                <scope line="204"/>
                                <scope line="208"/>
                            </scope>
                            <scope line="212"/>
                            <scope line="216"/>
                        </scope>
                        <scope line="219">
                            <scope line="220"/>
                        </scope>
                    </scope>
                </scope>
                <scope line="230">
                    <scope line="231">
                        <scope line="232">
                            <scope line="233">
                                <declaration name="t" type="double" line="234"/>
                                <scope line="235"/>
                                <scope line="239"/>
                            </scope>
                        </scope>
                        <scope line="244"/>
                    </scope>
                </scope>
                <declaration name="pp" type="int" line="253"/>
                <declaration name="iter" type="int" line="254"/>
                <declaration name="eps" type="double" line="255"/>
                <declaration name="tiny" type="double" line="256"/>
                <scope line="257">
                    <declaration name="k" type="int" line="258"/>
                    <scope line="272">
                        <scope line="273"/>
                        <scope line="277"/>
                    </scope>
                    <scope line="282"/>
                    <scope line="284">
                        <declaration name="ks" type="int" line="285"/>
                        <scope line="286">
                            <scope line="287"/>
                            <declaration name="t" type="double" line="290"/>
                            <scope line="292"/>
                        </scope>
                        <scope line="297"/>
                        <scope line="299"/>
                        <scope line="301"/>
                    </scope>
                    <scope line="314">
                        <declaration name="f" type="double" line="315"/>
                        <scope line="317">
                            <declaration name="t" type="double" line="318"/>
                            <declaration name="cs" type="double" line="319"/>
                            <declaration name="sn" type="double" line="320"/>
                            <scope line="322"/>
                            <scope line="326">
                                <scope line="327"/>
                            </scope>
                        </scope>
                    </scope>
                    <scope line="339">
                        <declaration name="f" type="double" line="340"/>
                        <scope line="342">
                            <declaration name="t" type="double" line="343"/>
                            <declaration name="cs" type="double" line="344"/>
                            <declaration name="sn" type="double" line="345"/>
                            <scope line="349">
                                <scope line="350"/>
                            </scope>
                        </scope>
                    </scope>
                    <scope line="362">
                        <declaration name="scale" type="double" line="366"/>
                        <declaration name="sp" type="double" line="369"/>
                        <declaration name="spm1" type="double" line="370"/>
                        <declaration name="epm1" type="double" line="371"/>
                        <declaration name="sk" type="double" line="372"/>
                        <declaration name="ek" type="double" line="373"/>
                        <declaration name="b" type="double" line="374"/>
                        <declaration name="c" type="double" line="375"/>
                        <declaration name="shift" type="double" line="376"/>
                        <scope line="377">
                            <scope line="379"/>
                        </scope>
                        <declaration name="f" type="double" line="384"/>
                        <declaration name="g" type="double" line="385"/>
                        <scope line="389">
                            <declaration name="t" type="double" line="390"/>
                            <declaration name="cs" type="double" line="391"/>
                            <declaration name="sn" type="double" line="392"/>
                            <scope line="393"/>
                            <scope line="400">
                                <scope line="401"/>
                            </scope>
                            <scope line="415">
                                <scope line="416"/>
                            </scope>
                        </scope>
                    </scope>
                    <scope line="430">
                        <scope line="434">
                            <scope line="436">
                                <scope line="437"/>
                            </scope>
                        </scope>
                        <scope line="445">
                            <scope line="446"/>
                            <declaration name="t" type="double" line="449"/>
                            <scope line="452">
                                <scope line="453"/>
                            </scope>
                            <scope line="457">
                                <scope line="458"/>
                            </scope>
                        </scope>
                    </scope>
                </scope>
            </method>
            <javadoc line="476">
                Return the left singular vectors                
                <@return>
                    n     U                    
                </@return>
            </javadoc>
            <method name="getU" type="Matrix" line="480"/>
            <javadoc line="484">
                Return the right singular vectors                
                <@return>
                    n     V                    
                </@return>
            </javadoc>
            <method name="getV" type="Matrix" line="488"/>
            <javadoc line="492">
                Return the one-dimensional array of singular values                
                <@return>
                    n     diagonal of S.                    
                </@return>
            </javadoc>
            <method name="getSingularValues" type="double[]" line="496"/>
            <javadoc line="500">
                Return the diagonal matrix of singular values                
                <@return>
                    n     S                    
                </@return>
            </javadoc>
            <method name="getS" type="Matrix" line="504">
                <declaration name="X" type="Matrix" line="505"/>
                <declaration name="S" type="double[][]" line="506"/>
                <scope line="507">
                    <scope line="508"/>
                </scope>
            </method>
            <javadoc line="516">
                Two norm                
                <@return>
                    n     max(S)                    
                </@return>
            </javadoc>
            <method name="norm2" type="double" line="520"/>
            <javadoc line="524">
                Two norm condition number                
                <@return>
                    n     max(S)/min(S)                    
                </@return>
            </javadoc>
            <method name="cond" type="double" line="528"/>
            <javadoc line="532">
                Effective numerical matrix rank                
                <@return>
                    n     Number of nonnegligible singular values.                    
                </@return>
            </javadoc>
            <method name="rank" type="int" line="536">
                <declaration name="eps" type="double" line="537"/>
                <declaration name="tol" type="double" line="538"/>
                <declaration name="r" type="int" line="539"/>
                <scope line="540">
                    <scope line="541"/>
                </scope>
            </method>
            <declaration name="serialVersionUID" type="long" line="547"/>
        </class>
    </source>