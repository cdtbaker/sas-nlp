<?xml version="1.0" encoding="UTF-8"?>
<source package="Jama">
  <import name="Jama.util.*" />
  <class name="QRDecomposition" startLine="4">
    <implements name="java.io.Serializable" />
    <javadoc>
      <text>* QR Decomposition.
 * <P>
 * For an m-by-n matrix A with m >= n, the QR decomposition is an m-by-n
 * orthogonal matrix Q and an n-by-n upper triangular matrix R so that
 * A = Q*R.
 * <P>
 * The QR decompostion always exists, even if the matrix does not have
 * full rank, so the constructor will never fail.  The primary use of the
 * QR decomposition is in the least squares solution of nonsquare systems
 * of simultaneous linear equations.  This will fail if isFullRank()
 * returns false.</text>
    </javadoc>
    <javadoc>
      <text>* Array for internal storage of decomposition.</text>
      <serial>internal array storage.</serial>
    </javadoc>
    <declaration type="double[][]" name="QR" />
    <javadoc>
      <text>* Row and column dimensions.</text>
      <serial>column dimension.</serial>
      <serial>row dimension.</serial>
    </javadoc>
    <declaration type="int" name="m" />
    <javadoc>
      <text>* Array for internal storage of diagonal of R.</text>
      <serial>diagonal of R.</serial>
    </javadoc>
    <declaration type="double[]" name="Rdiag" />
    <javadoc>
      <text>* QR Decomposition, computed by Householder reflections.
 * Structure to access R and the Householder vectors and compute Q.</text>
      <param>A    Rectangular matrix</param>
    </javadoc>
    <method type="constructor" name="QRDecomposition" startLine="48" endLine="87">
      <scope startLine="56" endLine="86">
        <declaration type="double" name="nrm" />
        <scope startLine="59" endLine="61" />
        <scope startLine="63" endLine="84">
          <scope startLine="65" endLine="67" />
          <scope startLine="68" endLine="70" />
          <scope startLine="74" endLine="83">
            <declaration type="double" name="s" />
            <scope startLine="76" endLine="78" />
            <scope startLine="80" endLine="82" />
          </scope>
        </scope>
        <comment>Compute 2-norm of k-th column without under/overflow.</comment>
        <comment>Form k-th Householder vector.</comment>
        <comment>Apply transformation to remaining columns.</comment>
      </scope>
      <comment>Initialize.</comment>
      <comment>Main loop.</comment>
    </method>
    <javadoc>
      <text>* Is the matrix full rank?</text>
      <return>true if R, and hence A, has full rank.</return>
    </javadoc>
    <method type="boolean" name="isFullRank" startLine="97" endLine="103">
      <scope startLine="98" endLine="101" />
    </method>
    <javadoc>
      <text>* Return the Householder vectors</text>
      <return>Lower trapezoidal matrix whose columns define the reflections</return>
    </javadoc>
    <method type="Matrix" name="getH" startLine="109" endLine="122">
      <declaration type="Matrix" name="X" />
      <declaration type="double[][]" name="H" />
      <scope startLine="112" endLine="120">
        <scope startLine="113" endLine="119">
          <scope startLine="114" endLine="116" />
          <scope startLine="116" endLine="118" />
        </scope>
      </scope>
    </method>
    <javadoc>
      <text>* Return the upper triangular factor</text>
      <return>R</return>
    </javadoc>
    <method type="Matrix" name="getR" startLine="128" endLine="143">
      <declaration type="Matrix" name="X" />
      <declaration type="double[][]" name="R" />
      <scope startLine="131" endLine="141">
        <scope startLine="132" endLine="140">
          <scope startLine="133" endLine="135" />
          <scope startLine="135" endLine="137" />
          <scope startLine="137" endLine="139" />
        </scope>
      </scope>
    </method>
    <javadoc>
      <text>* Generate and return the (economy-sized) orthogonal factor</text>
      <return>Q</return>
    </javadoc>
    <method type="Matrix" name="getQ" startLine="149" endLine="171">
      <declaration type="Matrix" name="X" />
      <declaration type="double[][]" name="Q" />
      <scope startLine="152" endLine="169">
        <scope startLine="153" endLine="155" />
        <scope startLine="157" endLine="168">
          <scope startLine="158" endLine="167">
            <declaration type="double" name="s" />
            <scope startLine="160" endLine="162" />
            <scope startLine="164" endLine="166" />
          </scope>
        </scope>
      </scope>
    </method>
    <javadoc>
      <text>* Least squares solution of A*X = B</text>
      <param>B    A Matrix with as many rows as A and any number of columns.</param>
      <return>X that minimizes the two norm of Q*R*X-B.</return>
      <exception>IllegalArgumentException  Matrix row dimensions must agree.</exception>
      <exception>RuntimeException  Matrix is rank deficient.</exception>
    </javadoc>
    <method type="Matrix" name="solve" startLine="180" endLine="217">
      <scope startLine="181" endLine="183" />
      <scope startLine="184" endLine="186" />
      <declaration type="int" name="nx" />
      <declaration type="double[][]" name="X" />
      <scope startLine="193" endLine="204">
        <scope startLine="194" endLine="203">
          <declaration type="double" name="s" />
          <scope startLine="196" endLine="198" />
          <scope startLine="200" endLine="202" />
        </scope>
      </scope>
      <scope startLine="206" endLine="215">
        <scope startLine="207" endLine="209" />
        <scope startLine="210" endLine="214">
          <scope startLine="211" endLine="213" />
        </scope>
      </scope>
      <comment>Copy right hand side</comment>
      <comment>Compute Y = transpose(Q)*B</comment>
      <comment>Solve R*X = Y;</comment>
    </method>
    <declaration type="long" name="serialVersionUID" />
    <comment>------------------------
Class variables
 ------------------------</comment>
    <comment>------------------------
Constructor
 ------------------------</comment>
    <comment>------------------------
Public Methods
 ------------------------</comment>
  </class>
</source>
