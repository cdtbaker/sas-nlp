<?xml version="1.0" encoding="UTF-8"?>
<source package="Jama.test">
  <import name="Jama.*" />
  <import name="java.io.*" />
  <import name="java.util.zip.GZIPInputStream" />
  <import name="java.text.DecimalFormat" />
  <import name="java.text.DecimalFormatSymbols" />
  <import name="java.util.Locale" />
  <class name="TestMatrix" startLine="9">
    <javadoc>
      <text>* TestMatrix tests the functionality of the Jama Matrix class and associated decompositions.
 * <P>
 * Run the test from the command line using
 * <BLOCKQUOTE><PRE><CODE>
 * java Jama.test.TestMatrix 
 * </CODE></PRE></BLOCKQUOTE>
 * Detailed output is provided indicating the functionality being tested
 * and whether the functionality is correctly implemented.   Exception handling
 * is also tested.  
 * <P>
 * The test is designed to run to completion and give a summary of any implementation errors
 * encountered. The final output should be:
 * <BLOCKQUOTE><PRE><CODE>
 * TestMatrix completed.
 * Total errors reported: n1
 * Total warning reported: n2
 * </CODE></PRE></BLOCKQUOTE>
 * If the test does not run to completion, this indicates that there is a 
 * substantial problem within the implementation that was not anticipated in the test design.  
 * The stopping point should give an indication of where the problem exists.</text>
    </javadoc>
    <method type="void" name="main" startLine="31" endLine="874">
      <declaration type="Matrix" name="A" />
      <declaration type="int" name="errorCount" />
      <declaration type="int" name="warningCount" />
      <declaration type="double" name="tmp" />
      <declaration type="double[]" name="columnwise" />
      <declaration type="double[]" name="rowwise" />
      <declaration type="double[][]" name="avals" />
      <declaration type="double[][]" name="rankdef" />
      <declaration type="double[][]" name="tvals" />
      <declaration type="double[][]" name="subavals" />
      <declaration type="double[][]" name="rvals" />
      <declaration type="double[][]" name="pvals" />
      <declaration type="double[][]" name="ivals" />
      <declaration type="double[][]" name="evals" />
      <declaration type="double[][]" name="square" />
      <declaration type="double[][]" name="sqSolution" />
      <declaration type="double[][]" name="condmat" />
      <declaration type="double[][]" name="badeigs" />
      <declaration type="int" name="rows" />
      <declaration type="int" name="invalidld" />
      <declaration type="int" name="raggedr" />
      <declaration type="int" name="raggedc" />
      <declaration type="int" name="validld" />
      <declaration type="int" name="nonconformld" />
      <declaration type="int" name="ib" />
      <declaration type="int[]" name="rowindexset" />
      <declaration type="int[]" name="badrowindexset" />
      <declaration type="int[]" name="columnindexset" />
      <declaration type="int[]" name="badcolumnindexset" />
      <declaration type="double" name="columnsummax" />
      <declaration type="double" name="rowsummax" />
      <declaration type="double" name="sumofdiagonals" />
      <declaration type="double" name="sumofsquares" />
      <scope startLine="83" endLine="88">
        <javadoc>
          <text>* check that exception is thrown in packed constructor with invalid length</text>
        </javadoc>
      </scope>
      <scope startLine="88" endLine="91" />
      <scope startLine="92" endLine="97">
        <javadoc>
          <text>* check that exception is thrown in default constructor
 * if input array is 'ragged'</text>
        </javadoc>
      </scope>
      <scope startLine="97" endLine="100" />
      <scope startLine="100" endLine="103" />
      <scope startLine="104" endLine="109">
        <javadoc>
          <text>* check that exception is thrown in constructWithCopy
 * if input array is 'ragged'</text>
        </javadoc>
      </scope>
      <scope startLine="109" endLine="111" />
      <scope startLine="111" endLine="113" />
      <scope startLine="124" endLine="127">
        <javadoc>
          <text>* check that constructWithCopy behaves properly</text>
        </javadoc>
      </scope>
      <scope startLine="127" endLine="129" />
      <scope startLine="132" endLine="135" />
      <scope startLine="135" endLine="137" />
      <scope startLine="166" endLine="168" />
      <scope startLine="168" endLine="170" />
      <scope startLine="171" endLine="173" />
      <scope startLine="173" endLine="175" />
      <declaration type="double[][]" name="barray" />
      <scope startLine="178" endLine="180" />
      <scope startLine="180" endLine="182" />
      <scope startLine="184" endLine="186" />
      <scope startLine="187" endLine="190" />
      <scope startLine="190" endLine="192" />
      <declaration type="double[]" name="bpacked" />
      <scope startLine="194" endLine="197" />
      <scope startLine="197" endLine="199" />
      <scope startLine="201" endLine="204" />
      <scope startLine="204" endLine="206" />
      <scope startLine="207" endLine="210" />
      <scope startLine="210" endLine="217">
        <scope startLine="211" endLine="214" />
        <scope startLine="214" endLine="216" />
      </scope>
      <scope startLine="217" endLine="219" />
      <scope startLine="220" endLine="227">
        <scope startLine="222" endLine="224" />
        <scope startLine="224" endLine="226" />
      </scope>
      <scope startLine="227" endLine="229" />
      <scope startLine="231" endLine="234" />
      <scope startLine="234" endLine="241">
        <scope startLine="235" endLine="238" />
        <scope startLine="238" endLine="240" />
      </scope>
      <scope startLine="241" endLine="243" />
      <scope startLine="244" endLine="252">
        <scope startLine="246" endLine="249" />
        <scope startLine="249" endLine="251" />
      </scope>
      <scope startLine="252" endLine="254" />
      <scope startLine="256" endLine="259" />
      <scope startLine="259" endLine="266">
        <scope startLine="260" endLine="263" />
        <scope startLine="263" endLine="265" />
      </scope>
      <scope startLine="266" endLine="268" />
      <scope startLine="269" endLine="277">
        <scope startLine="271" endLine="274" />
        <scope startLine="274" endLine="276" />
      </scope>
      <scope startLine="277" endLine="279" />
      <scope startLine="280" endLine="283" />
      <scope startLine="283" endLine="290">
        <scope startLine="284" endLine="287" />
        <scope startLine="287" endLine="289" />
      </scope>
      <scope startLine="290" endLine="292" />
      <scope startLine="293" endLine="301">
        <scope startLine="295" endLine="298" />
        <scope startLine="298" endLine="300" />
      </scope>
      <scope startLine="301" endLine="303" />
      <scope startLine="304" endLine="307" />
      <scope startLine="307" endLine="314">
        <scope startLine="308" endLine="311" />
        <scope startLine="311" endLine="313" />
      </scope>
      <scope startLine="314" endLine="316" />
      <scope startLine="317" endLine="325">
        <scope startLine="319" endLine="322" />
        <scope startLine="322" endLine="324" />
      </scope>
      <scope startLine="325" endLine="327" />
      <scope startLine="333" endLine="336" />
      <scope startLine="336" endLine="343">
        <scope startLine="337" endLine="340" />
        <scope startLine="340" endLine="342" />
      </scope>
      <scope startLine="343" endLine="345" />
      <scope startLine="346" endLine="355">
        <scope startLine="349" endLine="352" />
        <scope startLine="352" endLine="354" />
      </scope>
      <scope startLine="355" endLine="357" />
      <scope startLine="359" endLine="362" />
      <scope startLine="362" endLine="369">
        <scope startLine="363" endLine="366" />
        <scope startLine="366" endLine="368" />
      </scope>
      <scope startLine="369" endLine="371" />
      <scope startLine="372" endLine="381">
        <scope startLine="374" endLine="377" />
        <scope startLine="377" endLine="379" />
      </scope>
      <scope startLine="381" endLine="383" />
      <scope startLine="384" endLine="387" />
      <scope startLine="387" endLine="394">
        <scope startLine="388" endLine="391" />
        <scope startLine="391" endLine="393" />
      </scope>
      <scope startLine="394" endLine="396" />
      <scope startLine="397" endLine="406">
        <scope startLine="399" endLine="402" />
        <scope startLine="402" endLine="404" />
      </scope>
      <scope startLine="406" endLine="408" />
      <scope startLine="409" endLine="412" />
      <scope startLine="412" endLine="419">
        <scope startLine="413" endLine="416" />
        <scope startLine="416" endLine="418" />
      </scope>
      <scope startLine="419" endLine="421" />
      <scope startLine="422" endLine="431">
        <scope startLine="424" endLine="427" />
        <scope startLine="427" endLine="429" />
      </scope>
      <scope startLine="431" endLine="433" />
      <scope startLine="434" endLine="437" />
      <scope startLine="437" endLine="444">
        <scope startLine="438" endLine="441" />
        <scope startLine="441" endLine="443" />
      </scope>
      <scope startLine="444" endLine="446" />
      <scope startLine="447" endLine="455">
        <scope startLine="449" endLine="452" />
        <scope startLine="452" endLine="454" />
      </scope>
      <scope startLine="455" endLine="457" />
      <scope startLine="478" endLine="481" />
      <scope startLine="481" endLine="483" />
      <scope startLine="484" endLine="486" />
      <scope startLine="486" endLine="488" />
      <scope startLine="492" endLine="495" />
      <scope startLine="495" endLine="497" />
      <scope startLine="498" endLine="500" />
      <scope startLine="500" endLine="502" />
      <scope startLine="507" endLine="510" />
      <scope startLine="510" endLine="512" />
      <scope startLine="513" endLine="516" />
      <scope startLine="516" endLine="518" />
      <scope startLine="521" endLine="524" />
      <scope startLine="524" endLine="526" />
      <scope startLine="527" endLine="530" />
      <scope startLine="530" endLine="532" />
      <scope startLine="534" endLine="537" />
      <scope startLine="537" endLine="539" />
      <scope startLine="543" endLine="546" />
      <scope startLine="546" endLine="548" />
      <scope startLine="549" endLine="552" />
      <scope startLine="552" endLine="554" />
      <scope startLine="555" endLine="558" />
      <scope startLine="558" endLine="560" />
      <scope startLine="562" endLine="565" />
      <scope startLine="565" endLine="567" />
      <scope startLine="569" endLine="572" />
      <scope startLine="572" endLine="574" />
      <scope startLine="576" endLine="579" />
      <scope startLine="579" endLine="581" />
      <scope startLine="582" endLine="585" />
      <scope startLine="585" endLine="587" />
      <scope startLine="589" endLine="592" />
      <scope startLine="592" endLine="594" />
      <scope startLine="597" endLine="600" />
      <scope startLine="600" endLine="602" />
      <scope startLine="604" endLine="607" />
      <scope startLine="607" endLine="609" />
      <scope startLine="610" endLine="613" />
      <scope startLine="613" endLine="615" />
      <scope startLine="617" endLine="620" />
      <scope startLine="620" endLine="622" />
      <scope startLine="633" endLine="646">
        <declaration type="DecimalFormat" name="fmt" />
        <declaration type="PrintWriter" name="FILE" />
        <scope startLine="641" endLine="643" />
        <scope startLine="643" endLine="645" />
      </scope>
      <scope startLine="646" endLine="648" />
      <scope startLine="648" endLine="665">
        <scope startLine="649" endLine="662">
          <declaration type="DecimalFormat" name="fmt" />
          <declaration type="PrintWriter" name="FILE" />
          <scope startLine="657" endLine="659" />
          <scope startLine="659" endLine="661" />
        </scope>
        <scope startLine="662" endLine="664" />
      </scope>
      <declaration type="String" name="tmpname" />
      <scope startLine="669" endLine="681">
        <declaration type="ObjectOutputStream" name="out" />
        <declaration type="ObjectInputStream" name="sin" />
        <scope startLine="675" endLine="678" />
        <scope startLine="678" endLine="680" />
      </scope>
      <scope startLine="681" endLine="683" />
      <scope startLine="683" endLine="685" />
      <scope startLine="713" endLine="716" />
      <scope startLine="716" endLine="718" />
      <scope startLine="720" endLine="723" />
      <scope startLine="723" endLine="725" />
      <scope startLine="726" endLine="729" />
      <scope startLine="729" endLine="731" />
      <scope startLine="732" endLine="735" />
      <scope startLine="735" endLine="737" />
      <scope startLine="738" endLine="741" />
      <scope startLine="741" endLine="743" />
      <scope startLine="744" endLine="747" />
      <scope startLine="747" endLine="749" />
      <scope startLine="751" endLine="754" />
      <scope startLine="754" endLine="756" />
      <scope startLine="757" endLine="760" />
      <scope startLine="760" endLine="762" />
      <declaration type="QRDecomposition" name="QR" />
      <scope startLine="767" endLine="770" />
      <scope startLine="770" endLine="772" />
      <declaration type="SingularValueDecomposition" name="SVD" />
      <scope startLine="774" endLine="777" />
      <scope startLine="777" endLine="779" />
      <scope startLine="781" endLine="784" />
      <scope startLine="784" endLine="786" />
      <declaration type="double[]" name="singularvalues" />
      <scope startLine="790" endLine="793" />
      <scope startLine="793" endLine="795" />
      <declaration type="int" name="n" />
      <declaration type="LUDecomposition" name="LU" />
      <scope startLine="800" endLine="803" />
      <scope startLine="803" endLine="805" />
      <scope startLine="807" endLine="810" />
      <scope startLine="810" endLine="812" />
      <scope startLine="816" endLine="819" />
      <scope startLine="819" endLine="821" />
      <scope startLine="821" endLine="823" />
      <declaration type="CholeskyDecomposition" name="Chol" />
      <declaration type="Matrix" name="L" />
      <scope startLine="827" endLine="830" />
      <scope startLine="830" endLine="832" />
      <scope startLine="834" endLine="837" />
      <scope startLine="837" endLine="839" />
      <declaration type="EigenvalueDecomposition" name="Eig" />
      <declaration type="Matrix" name="D" />
      <declaration type="Matrix" name="V" />
      <scope startLine="843" endLine="846" />
      <scope startLine="846" endLine="848" />
      <scope startLine="853" endLine="856" />
      <scope startLine="856" endLine="858" />
      <scope startLine="860" endLine="865">
        <declaration type="Matrix" name="bA" />
        <declaration type="EigenvalueDecomposition" name="bEig" />
      </scope>
      <scope startLine="865" endLine="868" />
      <comment>Uncomment this to test IO in a different locale.</comment>
      <comment>Locale.setDefault(Locale.GERMAN);</comment>
      <comment>int invalidld=5; should trigger bad shape for construction with val</comment>
      <comment>int raggedr=0;  (raggedr,raggedc) should be out of bounds in ragged array</comment>
      <comment>int validld=3;  leading dimension of intended test Matrices</comment>
      <comment>int nonconformld=4;  leading dimension which is valid, but nonconforming</comment>
      <comment>int ib=1,ie=2,jb=1,je=3;  index ranges for sub Matrix</comment>
      <javadoc>
        <text>* Constructors and constructor-like methods:
 * double[], int
 * double[][]  
 * int, int
 * int, int, double
 * int, int, double[][]
 * constructWithCopy(double[][])
 * random(int,int)
 * identity(int)</text>
      </javadoc>
      <javadoc>
        <text>* Access Methods:
 * getColumnDimension()
 * getRowDimension()
 * getArray()
 * getArrayCopy()
 * getColumnPackedCopy()
 * getRowPackedCopy()
 * get(int,int)
 * getMatrix(int,int,int,int)
 * getMatrix(int,int,int[])
 * getMatrix(int[],int,int)
 * getMatrix(int[],int[])
 * set(int,int,double)
 * setMatrix(int,int,int,int,Matrix)
 * setMatrix(int,int,int[],Matrix)
 * setMatrix(int[],int,int,Matrix)
 * setMatrix(int[],int[],Matrix)</text>
      </javadoc>
      <javadoc>
        <text>* Various get methods:</text>
      </javadoc>
      <javadoc>
        <text>* Various set methods:</text>
      </javadoc>
      <javadoc>
        <text>* Array-like methods:
 * minus
 * minusEquals
 * plus
 * plusEquals
 * arrayLeftDivide
 * arrayLeftDivideEquals
 * arrayRightDivide
 * arrayRightDivideEquals
 * arrayTimes
 * arrayTimesEquals
 * uminus</text>
      </javadoc>
      <javadoc>
        <text>* I/O methods:
 * read
 * print
 * serializable:
 * writeObject
 * readObject</text>
      </javadoc>
      <javadoc>
        <text>* LA methods:
 * transpose
 * times
 * cond
 * rank
 * det
 * trace
 * norm1
 * norm2
 * normF
 * normInf
 * solve
 * solveTranspose
 * inverse
 * chol
 * eig
 * lu
 * qr
 * svd</text>
      </javadoc>
    </method>
    <javadoc>
      <text>* Check magnitude of difference of scalars.</text>
    </javadoc>
    <method type="void" name="check" startLine="880" endLine="887">
      <declaration type="double" name="eps" />
      <scope startLine="884" endLine="886" />
    </method>
    <javadoc>
      <text>* Check norm of difference of "vectors".</text>
    </javadoc>
    <method type="void" name="check" startLine="891" endLine="899">
      <scope startLine="892" endLine="896">
        <scope startLine="893" endLine="895" />
      </scope>
      <scope startLine="896" endLine="898" />
    </method>
    <javadoc>
      <text>* Check norm of difference of arrays.</text>
    </javadoc>
    <method type="void" name="check" startLine="903" endLine="907">
      <declaration type="Matrix" name="A" />
      <declaration type="Matrix" name="B" />
    </method>
    <javadoc>
      <text>* Check norm of difference of Matrices.</text>
    </javadoc>
    <method type="void" name="check" startLine="911" endLine="918">
      <declaration type="double" name="eps" />
      <scope startLine="915" endLine="917" />
    </method>
    <javadoc>
      <text>* Shorten spelling of print.</text>
    </javadoc>
    <method type="void" name="print" startLine="922" endLine="924" />
    <javadoc>
      <text>* Print appropriate messages for successful outcome try</text>
    </javadoc>
    <method type="void" name="try_success" startLine="928" endLine="933">
      <scope startLine="930" endLine="932" />
    </method>
    <javadoc>
      <text>* Print appropriate messages for unsuccessful outcome try</text>
    </javadoc>
    <method type="int" name="try_failure" startLine="936" endLine="939" />
    <javadoc>
      <text>* Print appropriate messages for unsuccessful outcome try</text>
    </javadoc>
    <method type="int" name="try_warning" startLine="943" endLine="946" />
    <javadoc>
      <text>* Print a row vector.</text>
    </javadoc>
    <method type="void" name="print" startLine="950" endLine="955">
      <comment>Use format Fw.d for all elements.</comment>
    </method>
    <javadoc>
      <text>* private utility routines</text>
    </javadoc>
  </class>
</source>
