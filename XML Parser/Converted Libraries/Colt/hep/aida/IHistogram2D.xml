<?xml version="1.0" encoding="UTF-8"?>
<source package="hep.aida">
  <interface name="IHistogram2D" startLine="3">
    <implements name="IHistogram" />
    <javadoc>
      <text>* A Java interface corresponding to the AIDA 2D Histogram.
 * <p> 
 * <b>Note</b> All methods that accept a bin number as an argument will
 * also accept the constants OVERFLOW or UNDERFLOW as the argument, and 
 * as a result give the contents of the resulting OVERFLOW or UNDERFLOW
 * bin.</text>
      <see><a href="http://wwwinfo.cern.ch/asd/lhc++/AIDA/">AIDA</a></see>
      <author>Pavel Binko, Dino Ferrero Merlino, Wolfgang Hoschek, Tony Johnson, Andreas Pfeiffer, and others.</author>
      <version>1.0, 23/03/2000</version>
    </javadoc>
    <method name="binEntries" type="int" startLine="16" endLine="21" />
    <javadoc>
      <text>* The number of entries (ie the number of times fill was called for this bin).</text>
      <param>indexX the x bin number (0...Nx-1) or OVERFLOW or UNDERFLOW.</param>
      <param>indexY the y bin number (0...Ny-1) or OVERFLOW or UNDERFLOW.</param>
    </javadoc>
    <method name="binEntriesX" type="int" startLine="22" endLine="25" />
    <javadoc>
      <text>* Equivalent to <tt>projectionX().binEntries(indexX)</tt>.</text>
    </javadoc>
    <method name="binEntriesY" type="int" startLine="26" endLine="29" />
    <javadoc>
      <text>* Equivalent to <tt>projectionY().binEntries(indexY)</tt>.</text>
    </javadoc>
    <method name="binError" type="double" startLine="30" endLine="35" />
    <javadoc>
      <text>* The error on this bin.</text>
      <param>indexX the x bin number (0...Nx-1) or OVERFLOW or UNDERFLOW.</param>
      <param>indexY the y bin number (0...Ny-1) or OVERFLOW or UNDERFLOW.</param>
    </javadoc>
    <method name="binHeight" type="double" startLine="36" endLine="41" />
    <javadoc>
      <text>* Total height of the corresponding bin (ie the sum of the weights in this bin).</text>
      <param>indexX the x bin number (0...Nx-1) or OVERFLOW or UNDERFLOW.</param>
      <param>indexY the y bin number (0...Ny-1) or OVERFLOW or UNDERFLOW.</param>
    </javadoc>
    <method name="binHeightX" type="double" startLine="42" endLine="45" />
    <javadoc>
      <text>* Equivalent to <tt>projectionX().binHeight(indexX)</tt>.</text>
    </javadoc>
    <method name="binHeightY" type="double" startLine="46" endLine="49" />
    <javadoc>
      <text>* Equivalent to <tt>projectionY().binHeight(indexY)</tt>.</text>
    </javadoc>
    <method name="fill" type="void" startLine="50" endLine="53" />
    <javadoc>
      <text>* Fill the histogram with weight 1.</text>
    </javadoc>
    <method name="fill" type="void" startLine="54" endLine="57" />
    <javadoc>
      <text>* Fill the histogram with specified weight.</text>
    </javadoc>
    <method name="meanX" type="double" startLine="58" endLine="61" />
    <javadoc>
      <text>* Returns the mean of the histogram, as calculated on filling-time projected on the X axis.</text>
    </javadoc>
    <method name="meanY" type="double" startLine="62" endLine="65" />
    <javadoc>
      <text>* Returns the mean of the histogram, as calculated on filling-time projected on the Y axis.</text>
    </javadoc>
    <method name="minMaxBins" type="int[]" startLine="66" endLine="70" />
    <javadoc>
      <text>* Indexes of the in-range bins containing the smallest and largest binHeight(), respectively.</text>
      <return><tt>{minBinX,minBinY, maxBinX,maxBinY}</tt>.</return>
    </javadoc>
    <method name="projectionX" type="IHistogram1D" startLine="71" endLine="75" />
    <javadoc>
      <text>* Create a projection parallel to the X axis.
 * Equivalent to <tt>sliceX(UNDERFLOW,OVERFLOW)</tt>.</text>
    </javadoc>
    <method name="projectionY" type="IHistogram1D" startLine="76" endLine="80" />
    <javadoc>
      <text>* Create a projection parallel to the Y axis.
 * Equivalent to <tt>sliceY(UNDERFLOW,OVERFLOW)</tt>.</text>
    </javadoc>
    <method name="rmsX" type="double" startLine="81" endLine="84" />
    <javadoc>
      <text>* Returns the rms of the histogram as calculated on filling-time projected on the X axis.</text>
    </javadoc>
    <method name="rmsY" type="double" startLine="85" endLine="88" />
    <javadoc>
      <text>* Returns the rms of the histogram as calculated on filling-time projected on the Y axis.</text>
    </javadoc>
    <method name="sliceX" type="IHistogram1D" startLine="89" endLine="93" />
    <javadoc>
      <text>* Slice parallel to the Y axis at bin indexY and one bin wide.
 * Equivalent to <tt>sliceX(indexY,indexY)</tt>.</text>
    </javadoc>
    <method name="sliceX" type="IHistogram1D" startLine="94" endLine="99" />
    <javadoc>
      <text>* Create a slice parallel to the axis X axis, between "indexY1" and "indexY2" (inclusive).
 * The returned IHistogram1D represents an instantaneous snapshot of the
 * histogram at the time the slice was created.</text>
    </javadoc>
    <method name="sliceY" type="IHistogram1D" startLine="100" endLine="104" />
    <javadoc>
      <text>* Slice parallel to the X axis at bin indexX and one bin wide.
 * Equivalent to <tt>sliceY(indexX,indexX)</tt>.</text>
    </javadoc>
    <method name="sliceY" type="IHistogram1D" startLine="105" endLine="110" />
    <javadoc>
      <text>* Create a slice parallel to the axis Y axis, between "indexX1" and "indexX2" (inclusive)
 * The returned IHistogram1D represents an instantaneous snapshot of the
 * histogram at the time the slice was created.</text>
    </javadoc>
    <method name="xAxis" type="IAxis" startLine="111" endLine="114" />
    <javadoc>
      <text>* Return the X axis.</text>
    </javadoc>
    <method name="yAxis" type="IAxis" startLine="115" endLine="118" />
    <javadoc>
      <text>* Return the Y axis.</text>
    </javadoc>
  </interface>
</source>
