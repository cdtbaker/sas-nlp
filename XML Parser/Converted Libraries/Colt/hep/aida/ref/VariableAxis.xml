<?xml version="1.0" encoding="UTF-8"?>
<source package="hep.aida.ref">
  <import name="hep.aida.IAxis" />
  <import name="hep.aida.IHistogram" />
  <class name="VariableAxis" startLine="5">
    <implements name="IAxis" />
    <javadoc>
      <text>* Variable-width axis; A reference implementation of hep.aida.IAxis.</text>
      <author>Wolfgang Hoschek, Tony Johnson, and others.</author>
      <version>1.0, 23/03/2000</version>
    </javadoc>
    <declaration type="double" name="min" />
    <declaration type="int" name="bins" />
    <declaration type="double[]" name="edges" />
    <javadoc>
      <text>* Constructs and returns an axis with the given bin edges.
 * Example: <tt>edges = (0.2, 1.0, 5.0)</tt> yields an axis with 2 in-range bins <tt>[0.2,1.0), [1.0,5.0)</tt> and 2 extra bins <tt>[-inf,0.2), [5.0,inf]</tt>.</text>
      <param>edges the bin boundaries the partition shall have;
 * must be sorted ascending and must not contain multiple identical elements.</param>
      <throws>IllegalArgumentException if <tt>edges.length < 1</tt>.</throws>
    </javadoc>
    <method type="constructor" name="VariableAxis" startLine="24" endLine="37">
      <scope startLine="28" endLine="32">
        <scope startLine="29" endLine="31" />
      </scope>
      <comment>check if really sorted and has no multiple identical elements</comment>
    </method>
    <method type="double" name="binCentre" startLine="39" endLine="41" />
    <method type="double" name="binLowerEdge" startLine="43" endLine="47" />
    <method type="int" name="bins" startLine="49" endLine="51" />
    <method type="double" name="binUpperEdge" startLine="53" endLine="57" />
    <method type="double" name="binWidth" startLine="59" endLine="61" />
    <method type="int" name="coordToIndex" startLine="63" endLine="74">
      <declaration type="int" name="index" />
      <comment>int index = new DoubleArrayList(this.edges).binarySearch(coord);  just for debugging</comment>
      <comment>not found</comment>
      <comment>else index++;  found</comment>
    </method>
    <method type="double" name="lowerEdge" startLine="76" endLine="78" />
    <javadoc>
      <text>* Returns a string representation of the specified array.  The string
 * representation consists of a list of the arrays's elements, enclosed in square brackets
 * (<tt>"[]"</tt>).  Adjacent elements are separated by the characters
 * <tt>", "</tt> (comma and space).</text>
      <return>a string representation of the specified array.</return>
    </javadoc>
    <method type="String" name="toString" startLine="86" endLine="97">
      <declaration type="StringBuffer" name="buf" />
      <declaration type="int" name="maxIndex" />
      <scope startLine="90" endLine="94" />
    </method>
    <method type="double" name="upperEdge" startLine="99" endLine="101" />
  </class>
</source>
