<?xml version="1.0" encoding="UTF-8"?>
<source package="hep.aida.ref">
  <import name="hep.aida.IAxis" />
  <import name="hep.aida.IHistogram" />
  <import name="hep.aida.IHistogram1D" />
  <import name="hep.aida.IHistogram2D" />
  <class name="AbstractHistogram2D" extends="Histogram" startLine="7">
    <implements name="IHistogram2D" />
    <javadoc>
      <text>* Abstract base class extracting and implementing most of the redundancy of the interface.</text>
      <author>Wolfgang Hoschek, Tony Johnson, and others.</author>
      <version>1.0, 23/03/2000</version>
    </javadoc>
    <declaration type="IAxis" name="xAxis" />
    <method type="constructor" name="AbstractHistogram2D" startLine="17" endLine="19" />
    <method type="int" name="allEntries" startLine="21" endLine="29">
      <declaration type="int" name="n" />
      <scope startLine="25" endLine="27" />
    </method>
    <method type="int" name="binEntriesX" startLine="31" endLine="33" />
    <method type="int" name="binEntriesY" startLine="35" endLine="37" />
    <method type="double" name="binHeightX" startLine="39" endLine="41" />
    <method type="double" name="binHeightY" startLine="43" endLine="45" />
    <method type="int" name="dimensions" startLine="47" endLine="49" />
    <method type="int" name="entries" startLine="51" endLine="59">
      <declaration type="int" name="n" />
      <scope startLine="55" endLine="57" />
    </method>
    <method type="int" name="extraEntries" startLine="61" endLine="63" />
    <method type="void" name="fill" startLine="65" endLine="67" />
    <method name="internalSliceX" type="IHistogram1D" startLine="68" endLine="78" />
    <javadoc>
      <text>* The precise meaning of the arguments to the public slice
 * methods is somewhat ambiguous, so we define this internal
 * slice method and clearly specify its arguments.
 * <p>
 * <b>Note 0</b>indexY1 and indexY2 use our INTERNAL bin numbering scheme
 * <b>Note 1</b>The slice is done between indexY1 and indexY2 INCLUSIVE
 * <b>Note 2</b>indexY1 and indexY2 may include the use of under and over flow bins
 * <b>Note 3</b>There is no note 3 (yet)</text>
    </javadoc>
    <method name="internalSliceY" type="IHistogram1D" startLine="79" endLine="89" />
    <javadoc>
      <text>* The precise meaning of the arguments to the public slice
 * methods is somewhat ambiguous, so we define this internal
 * slice method and clearly specify its arguments.
 * <p>
 * <b>Note 0</b>indexX1 and indexX2 use our INTERNAL bin numbering scheme
 * <b>Note 1</b>The slice is done between indexX1 and indexX2 INCLUSIVE
 * <b>Note 2</b>indexX1 and indexX2 may include the use of under and over flow bins
 * <b>Note 3</b>There is no note 3 (yet)</text>
    </javadoc>
    <javadoc>
      <text>* Package private method to map from the external representation of bin
 * number to our internal representation of bin number</text>
    </javadoc>
    <method type="int" name="mapX" startLine="95" endLine="102">
      <declaration type="int" name="bins" />
    </method>
    <javadoc>
      <text>* Package private method to map from the external representation of bin
 * number to our internal representation of bin number</text>
    </javadoc>
    <method type="int" name="mapY" startLine="108" endLine="115">
      <declaration type="int" name="bins" />
    </method>
    <method type="int[]" name="minMaxBins" startLine="117" endLine="141">
      <declaration type="double" name="minValue" />
      <declaration type="double" name="maxValue" />
      <declaration type="int" name="minBinX" />
      <declaration type="int" name="minBinY" />
      <declaration type="int" name="maxBinX" />
      <declaration type="int" name="maxBinY" />
      <scope startLine="124" endLine="138">
        <scope startLine="125" endLine="137">
          <declaration type="double" name="value" />
          <scope startLine="127" endLine="131" />
          <scope startLine="132" endLine="136" />
        </scope>
      </scope>
      <declaration type="int[]" name="result" />
    </method>
    <method type="IHistogram1D" name="projectionX" startLine="143" endLine="147">
      <declaration type="String" name="newTitle" />
      <comment>return internalSliceX(newTitle,yAxis.under,yAxis.over);</comment>
    </method>
    <method type="IHistogram1D" name="projectionY" startLine="149" endLine="153">
      <declaration type="String" name="newTitle" />
      <comment>return internalSliceY(newTitle,xAxis.under,xAxis.over);</comment>
    </method>
    <method type="IHistogram1D" name="sliceX" startLine="155" endLine="160">
      <declaration type="int" name="start" />
      <declaration type="String" name="newTitle" />
      <comment>int start = yAxis.map(indexY);</comment>
    </method>
    <method type="IHistogram1D" name="sliceX" startLine="162" endLine="169">
      <declaration type="int" name="start" />
      <declaration type="int" name="stop" />
      <declaration type="String" name="newTitle" />
      <comment>int start = yAxis.map(indexY1);</comment>
      <comment>int stop = yAxis.map(indexY2);</comment>
    </method>
    <method type="IHistogram1D" name="sliceY" startLine="171" endLine="176">
      <declaration type="int" name="start" />
      <declaration type="String" name="newTitle" />
      <comment>int start = xAxis.map(indexX);</comment>
    </method>
    <method type="IHistogram1D" name="sliceY" startLine="178" endLine="185">
      <declaration type="int" name="start" />
      <declaration type="int" name="stop" />
      <declaration type="String" name="newTitle" />
      <comment>int start = xAxis.map(indexX1);</comment>
      <comment>int stop = xAxis.map(indexX2);</comment>
    </method>
    <method type="double" name="sumAllBinHeights" startLine="187" endLine="195">
      <declaration type="double" name="n" />
      <scope startLine="191" endLine="193" />
    </method>
    <method type="double" name="sumBinHeights" startLine="197" endLine="205">
      <declaration type="double" name="n" />
      <scope startLine="201" endLine="203" />
    </method>
    <method type="double" name="sumExtraBinHeights" startLine="207" endLine="209" />
    <method type="IAxis" name="xAxis" startLine="211" endLine="213" />
    <method type="IAxis" name="yAxis" startLine="215" endLine="217" />
  </class>
</source>
