<?xml version="1.0" encoding="UTF-8"?>
<source package="hep.aida.ref">
  <import name="hep.aida.IAxis" />
  <import name="hep.aida.IHistogram1D" />
  <class name="Histogram1D" extends="AbstractHistogram1D" startLine="5">
    <implements name="IHistogram1D" />
    <javadoc>
      <text>* A reference implementation of hep.aida.IHistogram1D.
 * The goal is to provide a clear implementation rather than the most efficient implementation.
 * However, performance seems fine - filling 1.2 * 10^6 points/sec, both using FixedAxis or VariableAxis.</text>
      <author>Wolfgang Hoschek, Tony Johnson, and others.</author>
      <version>1.0, 23/03/2000</version>
    </javadoc>
    <declaration type="double[]" name="errors" />
    <declaration type="double[]" name="heights" />
    <declaration type="int[]" name="entries" />
    <declaration type="int" name="nEntry" />
    <declaration type="double" name="sumWeight" />
    <declaration type="double" name="sumWeightSquared" />
    <declaration type="double" name="mean" />
    <javadoc>
      <text>* Creates a variable-width histogram.
 * Example: <tt>edges = (0.2, 1.0, 5.0)</tt> yields an axis with 2 in-range bins <tt>[0.2,1.0), [1.0,5.0)</tt> and 2 extra bins <tt>[-inf,0.2), [5.0,inf]</tt>.</text>
      <param>title The histogram title.</param>
      <param>edges the bin boundaries the axis shall have;
 * must be sorted ascending and must not contain multiple identical elements.</param>
      <throws>IllegalArgumentException if <tt>edges.length < 1</tt>.</throws>
    </javadoc>
    <method type="constructor" name="Histogram1D" startLine="31" endLine="33" />
    <javadoc>
      <text>* Creates a fixed-width histogram.</text>
      <param>title The histogram title.</param>
      <param>bins The number of bins.</param>
      <param>min The minimum value on the X axis.</param>
      <param>max The maximum value on the X axis.</param>
    </javadoc>
    <method type="constructor" name="Histogram1D" startLine="43" endLine="45" />
    <javadoc>
      <text>* Creates a histogram with the given axis binning.</text>
      <param>title The histogram title.</param>
      <param>axis The axis description to be used for binning.</param>
    </javadoc>
    <method type="constructor" name="Histogram1D" startLine="53" endLine="60">
      <declaration type="int" name="bins" />
    </method>
    <method type="int" name="allEntries" startLine="62" endLine="64" />
    <method type="int" name="binEntries" startLine="66" endLine="69">
      <comment>return entries[xAxis.map(index)];</comment>
    </method>
    <method type="double" name="binError" startLine="71" endLine="74">
      <comment>return Math.sqrt(errors[xAxis.map(index)]);</comment>
    </method>
    <method type="double" name="binHeight" startLine="76" endLine="79">
      <comment>return heights[xAxis.map(index)];</comment>
    </method>
    <method type="double" name="equivalentBinEntries" startLine="81" endLine="83" />
    <method type="void" name="fill" startLine="85" endLine="96">
      <declaration type="int" name="bin" />
      <comment>int bin = xAxis.getBin(x);</comment>
    </method>
    <method type="void" name="fill" startLine="98" endLine="109">
      <declaration type="int" name="bin" />
      <comment>int bin = xAxis.getBin(x);</comment>
    </method>
    <method type="double" name="mean" startLine="111" endLine="113" />
    <method type="void" name="reset" startLine="115" endLine="127">
      <scope startLine="117" endLine="121" />
    </method>
    <method type="double" name="rms" startLine="129" endLine="131" />
    <javadoc>
      <text>* Used internally for creating slices and projections</text>
    </javadoc>
    <method type="void" name="setContents" startLine="136" endLine="150">
      <scope startLine="142" endLine="145" />
      <comment>TODO: Can we do anything sensible/useful with the other statistics?</comment>
    </method>
    <comment>total number of times fill called</comment>
    <comment>Sum of all weights</comment>
    <comment>Sum of the squares of the weights</comment>
    <comment>perhaps to be deleted (default impl. in superclass sufficient)</comment>
  </class>
</source>
