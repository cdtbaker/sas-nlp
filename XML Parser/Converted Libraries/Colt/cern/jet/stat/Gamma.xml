<?xml version="1.0" encoding="UTF-8"?>
<source package="cern.jet.stat">
  <import name="cern.jet.math.Polynomial" />
  <class name="Gamma" extends="cern.jet.math.Constants" startLine="12">
    <javadoc>
      <text>* Gamma and Beta functions.
 * <p>
 * <b>Implementation:</b>
 * <dt>
 * Some code taken and adapted from the <A HREF="http://www.sci.usq.edu.au/staff/leighb/graph/Top.html">Java 2D Graph Package 2.4</A>,
 * which in turn is a port from the <A HREF="http://people.ne.mediaone.net/moshier/index.html#Cephes">Cephes 2.2</A> Math Library (C).
 * Most Cephes code (missing from the 2D Graph Package) directly ported.</text>
      <author>wolfgang.hoschek@cern.ch</author>
      <version>0.9, 22-Jun-99</version>
    </javadoc>
    <javadoc>
      <text>* Makes this class non instantiable, but still let's others inherit from it.</text>
    </javadoc>
    <method type="constructor" name="Gamma" startLine="28" endLine="28" />
    <javadoc>
      <text>* Returns the beta function of the arguments.
 * <pre>
 * -     -
 * | (a) | (b)
 * beta( a, b )  =  -----------.
 * -
 * | (a+b)
 * </pre></text>
    </javadoc>
    <method type="double" name="beta" startLine="39" endLine="56">
      <declaration type="double" name="y" />
      <scope startLine="46" endLine="49" />
      <scope startLine="50" endLine="53" />
    </method>
    <javadoc>
      <text>* Returns the Gamma function of the argument.</text>
    </javadoc>
    <method type="double" name="gamma" startLine="60" endLine="145">
      <declaration type="double[]" name="P" />
      <declaration type="double[]" name="Q" />
      <declaration type="double" name="p" />
      <declaration type="int" name="i" />
      <declaration type="double" name="q" />
      <scope startLine="89" endLine="108">
        <scope startLine="90" endLine="105">
          <scope startLine="95" endLine="98" />
        </scope>
        <scope startLine="105" endLine="107" />
      </scope>
      <scope startLine="111" endLine="114" />
      <scope startLine="116" endLine="125">
        <scope startLine="117" endLine="119" />
        <scope startLine="120" endLine="122" />
      </scope>
      <scope startLine="127" endLine="136">
        <scope startLine="128" endLine="130" />
        <scope startLine="131" endLine="133" />
      </scope>
      <comment>double MAXGAM = 171.624376956302725;</comment>
      <comment>double LOGPI  = 1.14472988584940017414;</comment>
    </method>
    <javadoc>
      <text>* Returns the Incomplete Beta Function evaluated from zero to <tt>xx</tt>; formerly named <tt>ibeta</tt>.</text>
      <param>aa the alpha parameter of the beta distribution.</param>
      <param>bb the beta parameter of the beta distribution.</param>
      <param>xx the integration end point.</param>
    </javadoc>
    <method type="double" name="incompleteBeta" startLine="153" endLine="233">
      <declaration type="double" name="a" />
      <declaration type="boolean" name="flag" />
      <scope startLine="160" endLine="164" />
      <scope startLine="167" endLine="170" />
      <scope startLine="175" endLine="181" />
      <scope startLine="181" endLine="186" />
      <scope startLine="188" endLine="193" />
      <scope startLine="208" endLine="219">
        <scope startLine="214" endLine="217" />
      </scope>
      <scope startLine="228" endLine="231" />
      <comment>Reverse a and b if x is greater than the mean.</comment>
      <comment>Choose expansion for better convergence.</comment>
      <comment>Multiply w by the factor
a      b   _             _     _
x  (1-x)   | (a+b)  ( a | (a) | (b) ) .</comment>
      <comment>Resort to logarithms.</comment>
    </method>
    <javadoc>
      <text>* Continued fraction expansion #1 for incomplete beta integral; formerly named <tt>incbcf</tt>.</text>
    </javadoc>
    <method type="double" name="incompleteBetaFraction1" startLine="237" endLine="310">
      <declaration type="double" name="xk" />
      <declaration type="double" name="k1" />
      <declaration type="double" name="r" />
      <declaration type="int" name="n" />
      <scope startLine="260" endLine="307">
        <scope startLine="278" endLine="281" />
        <scope startLine="295" endLine="300" />
        <scope startLine="301" endLine="306" />
      </scope>
    </method>
    <javadoc>
      <text>* Continued fraction expansion #2 for incomplete beta integral; formerly named <tt>incbd</tt>.</text>
    </javadoc>
    <method type="double" name="incompleteBetaFraction2" startLine="314" endLine="388">
      <declaration type="double" name="xk" />
      <declaration type="double" name="k1" />
      <declaration type="double" name="r" />
      <declaration type="int" name="n" />
      <scope startLine="338" endLine="385">
        <scope startLine="356" endLine="359" />
        <scope startLine="373" endLine="378" />
        <scope startLine="379" endLine="384" />
      </scope>
    </method>
    <javadoc>
      <text>* Returns the Incomplete Gamma function; formerly named <tt>igamma</tt>.</text>
      <param>a the parameter of the gamma distribution.</param>
      <param>x the integration end point.</param>
    </javadoc>
    <method type="double" name="incompleteGamma" startLine="395" endLine="424">
      <declaration type="double" name="ans" />
      <scope startLine="415" endLine="419" />
      <comment>Compute  xa  exp(-x)  gamma(a)</comment>
      <comment>power series</comment>
    </method>
    <javadoc>
      <text>* Returns the Complemented Incomplete Gamma function; formerly named <tt>igamc</tt>.</text>
      <param>a the parameter of the gamma distribution.</param>
      <param>x the integration start point.</param>
    </javadoc>
    <method type="double" name="incompleteGammaComplement" startLine="430" endLine="480">
      <declaration type="double" name="ans" />
      <declaration type="double" name="pk" />
      <scope startLine="453" endLine="477">
        <scope startLine="460" endLine="464" />
        <scope startLine="471" endLine="476" />
      </scope>
      <comment>continued fraction</comment>
    </method>
    <javadoc>
      <text>* Returns the natural logarithm of the gamma function; formerly named <tt>lgamma</tt>.</text>
    </javadoc>
    <method type="double" name="logGamma" startLine="484" endLine="563">
      <declaration type="double" name="p" />
      <declaration type="double[]" name="A" />
      <declaration type="double[]" name="B" />
      <declaration type="double[]" name="C" />
      <scope startLine="512" endLine="527">
        <scope startLine="518" endLine="521" />
      </scope>
      <scope startLine="529" endLine="546">
        <scope startLine="531" endLine="534" />
        <scope startLine="535" endLine="540" />
      </scope>
      <comment>1.00000000000000000000E0,</comment>
      <comment>if( x > 1.0e8 ) return( q );</comment>
    </method>
    <javadoc>
      <text>* Power series for incomplete beta integral; formerly named <tt>pseries</tt>.
 * Use when b*x is small and x not too close to 1.</text>
    </javadoc>
    <method type="double" name="powerSeries" startLine="568" endLine="599">
      <declaration type="double" name="s" />
      <scope startLine="579" endLine="585" />
      <scope startLine="590" endLine="593" />
      <scope startLine="593" endLine="597" />
    </method>
    <javadoc>
      <text>* Returns the Gamma function computed by Stirling's formula; formerly named <tt>stirf</tt>.
 * The polynomial STIR is valid for 33 <= x <= 172.</text>
    </javadoc>
    <method type="double" name="stirlingFormula" startLine="604" endLine="628">
      <declaration type="double[]" name="STIR" />
      <declaration type="double" name="MAXSTIR" />
      <declaration type="double" name="w" />
      <declaration type="double" name="y" />
      <scope startLine="619" endLine="623">
        <declaration type="double" name="v" />
        <comment>Avoid overflow in Math.pow()</comment>
      </scope>
      <scope startLine="623" endLine="625" />
    </method>
  </class>
</source>
