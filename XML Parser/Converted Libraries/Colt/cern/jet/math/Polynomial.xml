<?xml version="1.0" encoding="UTF-8"?>
<source package="cern.jet.math">
  <class name="Polynomial" extends="Constants" startLine="11">
    <javadoc>
      <text>* Polynomial functions.</text>
    </javadoc>
    <javadoc>
      <text>* Makes this class non instantiable, but still let's others inherit from it.</text>
    </javadoc>
    <method type="constructor" name="Polynomial" startLine="18" endLine="18" />
    <javadoc>
      <text>* Evaluates the given polynomial of degree <tt>N</tt> at <tt>x</tt>, assuming coefficient of N is 1.0.
 * Otherwise same as <tt>polevl()</tt>.
 * <pre>
 * 2          N
 * y  =  C  + C x + C x  +...+ C x
 * 0    1     2          N
 * where C  = 1 and hence is omitted from the array.
 * N
 * Coefficients are stored in reverse order:
 * coef[0] = C  , ..., coef[N-1] = C  .
 * N-1                   0
 * Calling arguments are otherwise the same as polevl().
 * </pre>
 * In the interest of speed, there are no checks for out of bounds arithmetic.</text>
      <param>x argument to the polynomial.</param>
      <param>coef the coefficients of the polynomial.</param>
      <param>N the degree of the polynomial.</param>
    </javadoc>
    <method type="double" name="p1evl" startLine="43" endLine="51">
      <declaration type="double" name="ans" />
      <scope startLine="48" endLine="48" />
    </method>
    <javadoc>
      <text>* Evaluates the given polynomial of degree <tt>N</tt> at <tt>x</tt>.
 * <pre>
 * 2          N
 * y  =  C  + C x + C x  +...+ C x
 * 0    1     2          N
 * Coefficients are stored in reverse order:
 * coef[0] = C  , ..., coef[N] = C  .
 * N                   0
 * </pre>
 * In the interest of speed, there are no checks for out of bounds arithmetic.</text>
      <param>x argument to the polynomial.</param>
      <param>coef the coefficients of the polynomial.</param>
      <param>N the degree of the polynomial.</param>
    </javadoc>
    <method type="double" name="polevl" startLine="70" endLine="77">
      <declaration type="double" name="ans" />
    </method>
  </class>
</source>
