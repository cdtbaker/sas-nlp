<?xml version="1.0" encoding="UTF-8"?>
<source package="cern.jet.random">
  <import name="cern.jet.random.engine.RandomEngine" />
  <class name="Hyperbolic" extends="AbstractContinousDistribution" startLine="12">
    <javadoc>
      <text>* Hyperbolic distribution. 
 * <p>
 * Valid parameter ranges: <tt>alpha &gt; 0</tt> and <tt>beta &gt; 0</tt>.            
 * <p>
 * Instance methods operate on a user supplied uniform random number generator; they are unsynchronized.
 * <dt>
 * Static methods operate on a default uniform random number generator; they are synchronized.
 * <p>
 * <b>Implementation:</b>
 * <dt>Method: Non-Universal Rejection.
 * High performance implementation.
 * <dt>This is a port of <tt>hyplc.c</tt> from the <A HREF="http://www.cis.tu-graz.ac.at/stat/stadl/random.html">C-RAND / WIN-RAND</A> library.
 * C-RAND's implementation, in turn, is based upon
 * <p>
 * L. Devroye (1986): Non-Uniform Random Variate Generation, Springer Verlag, New York.</text>
      <author>wolfgang.hoschek@cern.ch</author>
      <version>1.0, 09/24/99</version>
    </javadoc>
    <declaration type="double" name="alpha" />
    <declaration type="double" name="beta" />
    <declaration type="double" name="a_setup" />
    <declaration type="double" name="x" />
    <declaration type="double" name="hr" />
    <declaration type="Hyperbolic" name="shared" />
    <javadoc>
      <text>* Constructs a Beta distribution.</text>
    </javadoc>
    <method type="constructor" name="Hyperbolic" startLine="47" endLine="50" />
    <javadoc>
      <text>* Returns a random number from the distribution.</text>
    </javadoc>
    <method type="double" name="nextDouble" startLine="54" endLine="56" />
    <javadoc>
      <text>* Returns a hyperbolic distributed random number; bypasses the internal state.</text>
    </javadoc>
    <method type="double" name="nextDouble" startLine="60" endLine="137">
      <declaration type="double" name="a" />
      <declaration type="double" name="b" />
      <scope startLine="81" endLine="109">
        <declaration type="double" name="mpa" />
        <declaration type="double" name="amb" />
        <declaration type="double" name="a_" />
        <declaration type="double" name="help_1" />
        <comment>SET-UP</comment>
        <comment>a^2 - b^2</comment>
        <comment>-log(f(mode))</comment>
        <comment>mode</comment>
        <comment>fr^-1(exp(-sqrt(a^2 - b^2) - 1.0))</comment>
        <comment>fl^-1(exp(-sqrt(a^2 - b^2) - 1.0))</comment>
        <comment>lower border</comment>
        <comment>upper border</comment>
      </scope>
      <scope startLine="112" endLine="134">
        <scope startLine="115" endLine="119" />
        <scope startLine="120" endLine="133">
          <scope startLine="121" endLine="126" />
          <scope startLine="127" endLine="132" />
        </scope>
        <comment>Rejection with a uniform majorizing function</comment>
        <comment>over the body of the distribution</comment>
        <comment>Rejection with an exponential envelope on the</comment>
        <comment>right side of the mode</comment>
        <comment>Rejection with an exponential envelope on the</comment>
        <comment>left side of the mode</comment>
      </scope>
      <javadoc>
        <text>* *
 * Hyperbolic Distribution - Non-Universal Rejection       
 * *
 * *
 * FUNCTION   : - hyplc.c samples a random number from the        
 * hyperbolic distribution with shape parameter a  
 * and b valid for a>0 and |b|<a using the         
 * non-universal rejection method for log-concave  
 * densities.                                      
 * REFERENCE :  - L. Devroye (1986): Non-Uniform Random Variate   
 * Generation, Springer Verlag, New York.          
 * SUBPROGRAM : - drand(seed) ... (0,1)-Uniform generator with    
 * unsigned long integer *seed.                    
 * *</text>
      </javadoc>
      <comment>GENERATOR</comment>
    </method>
    <javadoc>
      <text>* Sets the parameters.</text>
    </javadoc>
    <method type="void" name="setState" startLine="141" endLine="144" />
    <javadoc>
      <text>* Returns a random number from the distribution.</text>
    </javadoc>
    <method type="double" name="staticNextDouble" startLine="148" endLine="152">
      <scope startLine="149" endLine="151" />
    </method>
    <javadoc>
      <text>* Returns a String representation of the receiver.</text>
    </javadoc>
    <method type="String" name="toString" startLine="156" endLine="158" />
    <javadoc>
      <text>* Sets the uniform random number generated shared by all <b>static</b> methods.</text>
      <param>randomGenerator the new uniform random number generator to be shared.</param>
    </javadoc>
    <method type="void" name="xstaticSetRandomGenerator" startLine="163" endLine="167">
      <scope startLine="164" endLine="166" />
    </method>
    <comment>cached values shared for generateHyperbolic(...)</comment>
    <comment>The uniform random number generated shared by all <b>static</b> methods.</comment>
  </class>
</source>
