<?xml version="1.0" encoding="UTF-8"?>
<source package="cern.jet.random">
  <import name="cern.jet.random.engine.RandomEngine" />
  <class name="VonMises" extends="AbstractContinousDistribution" startLine="12">
    <javadoc>
      <text>* Von Mises distribution.
 * <p>
 * Valid parameter ranges: <tt>k &gt; 0</tt>.
 * <p>
 * Instance methods operate on a user supplied uniform random number generator; they are unsynchronized.
 * <dt>
 * Static methods operate on a default uniform random number generator; they are synchronized.
 * <p>
 * <b>Implementation:</b> 
 * <dt>
 * Method: Acceptance Rejection.
 * <dt>
 * This is a port of <tt>mwc.c</tt> from the <A HREF="http://www.cis.tu-graz.ac.at/stat/stadl/random.html">C-RAND / WIN-RAND</A> library.
 * C-RAND's implementation, in turn, is based upon
 * <p>
 * D.J. Best, N.I. Fisher (1979): Efficient simulation of the von Mises distribution, Appl. Statist. 28, 152-157.</text>
      <author>wolfgang.hoschek@cern.ch</author>
      <version>1.0, 09/24/99</version>
    </javadoc>
    <declaration type="double" name="my_k" />
    <declaration type="double" name="k_set" />
    <declaration type="double" name="tau" />
    <declaration type="VonMises" name="shared" />
    <javadoc>
      <text>* Constructs a Von Mises distribution.
 * Example: k=1.0.</text>
      <throws>IllegalArgumentException if <tt>k &lt;= 0.0</tt>.</throws>
    </javadoc>
    <method type="constructor" name="VonMises" startLine="47" endLine="50" />
    <javadoc>
      <text>* Returns a random number from the distribution.</text>
    </javadoc>
    <method type="double" name="nextDouble" startLine="54" endLine="56" />
    <javadoc>
      <text>* Returns a random number from the distribution; bypasses the internal state.</text>
      <throws>IllegalArgumentException if <tt>k &lt;= 0.0</tt>.</throws>
    </javadoc>
    <method type="double" name="nextDouble" startLine="61" endLine="102">
      <declaration type="double" name="u" />
      <scope startLine="84" endLine="89">
        <comment>SET-UP</comment>
      </scope>
      <scope startLine="92" endLine="98">
        <comment>U(0/1)</comment>
        <comment>U(0/1)</comment>
        <comment>Acceptance/Rejection</comment>
      </scope>
      <javadoc>
        <text>* *
 * Von Mises Distribution - Acceptance Rejection          
 * *
 * *
 * FUNCTION :  - mwc samples a random number from the von Mises   
 * distribution ( -Pi <= x <= Pi) with parameter    
 * k > 0  via  rejection from the wrapped Cauchy    
 * distibution.                                     
 * REFERENCE:  - D.J. Best, N.I. Fisher (1979): Efficient         
 * simulation of the von Mises distribution,        
 * Appl. Statist. 28, 152-157.                      
 * SUBPROGRAM: - drand(seed) ... (0,1)-Uniform generator with     
 * unsigned long integer *seed.                     
 * *
 * Implemented by F. Niederl, August 1992</text>
      </javadoc>
      <comment>GENERATOR</comment>
      <comment>Random sign</comment>
      <comment>0 <= x <= Pi : -Pi <= x <= 0</comment>
    </method>
    <javadoc>
      <text>* Sets the distribution parameter.</text>
      <throws>IllegalArgumentException if <tt>k &lt;= 0.0</tt>.</throws>
    </javadoc>
    <method type="void" name="setState" startLine="107" endLine="110" />
    <javadoc>
      <text>* Returns a random number from the distribution.</text>
      <throws>IllegalArgumentException if <tt>k &lt;= 0.0</tt>.</throws>
    </javadoc>
    <method type="double" name="staticNextDouble" startLine="115" endLine="119">
      <scope startLine="116" endLine="118" />
    </method>
    <javadoc>
      <text>* Returns a String representation of the receiver.</text>
    </javadoc>
    <method type="String" name="toString" startLine="123" endLine="125" />
    <javadoc>
      <text>* Sets the uniform random number generated shared by all <b>static</b> methods.</text>
      <param>randomGenerator the new uniform random number generator to be shared.</param>
    </javadoc>
    <method type="void" name="xstaticSetRandomGenerator" startLine="130" endLine="134">
      <scope startLine="131" endLine="133" />
    </method>
    <comment>cached vars for method nextDouble(a) (for performance only)</comment>
    <comment>The uniform random number generated shared by all <b>static</b> methods.</comment>
  </class>
</source>
