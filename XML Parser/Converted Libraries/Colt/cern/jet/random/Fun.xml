<?xml version="1.0" encoding="UTF-8"?>
<source package="cern.jet.random">
  <class name="Fun" startLine="11">
    <javadoc>
      <text>* Contains various mathematical helper methods.
 * <b>Implementation:</b> High performance implementation.
 * <dt>This is a port of <tt>gen_fun.cpp</tt> from the <A HREF="http://www.cis.tu-graz.ac.at/stat/stadl/random.html">C-RAND / WIN-RAND</A> library.</text>
      <author>wolfgang.hoschek@cern.ch</author>
      <version>1.0, 09/24/99</version>
    </javadoc>
    <javadoc>
      <text>* Makes this class non instantiable, but still let's others inherit from it.</text>
    </javadoc>
    <method type="constructor" name="Fun" startLine="24" endLine="26" />
    <method type="double" name="_fkt_value" startLine="27" endLine="32">
      <declaration type="double" name="y_value" />
    </method>
    <method type="double" name="bessel2_fkt" startLine="33" endLine="231">
      <declaration type="double" name="pi" />
      <declaration type="double" name="sum" />
      <declaration type="double" name="epsilon" />
      <declaration type="double" name="y" />
      <declaration type="double" name="period" />
      <declaration type="double" name="my" />
      <declaration type="int" name="i" />
      <declaration type="double[]" name="b0" />
      <declaration type="double[]" name="b05" />
      <declaration type="double[]" name="b1" />
      <declaration type="double[]" name="b2" />
      <declaration type="double[]" name="b3" />
      <declaration type="double[]" name="b5" />
      <declaration type="double[]" name="b8" />
      <scope startLine="64" endLine="72" />
      <scope startLine="74" endLine="82" />
      <scope startLine="84" endLine="92" />
      <scope startLine="94" endLine="102" />
      <scope startLine="104" endLine="112" />
      <scope startLine="114" endLine="122" />
      <scope startLine="124" endLine="132" />
      <scope startLine="135" endLine="156">
        <scope startLine="142" endLine="153">
          <scope startLine="146" endLine="150" />
        </scope>
        <comment>while (!NULL) {</comment>
      </scope>
      <scope startLine="158" endLine="167">
        <scope startLine="159" endLine="162" />
        <scope startLine="163" endLine="166" />
      </scope>
      <scope startLine="174" endLine="194">
        <scope startLine="177" endLine="180" />
        <scope startLine="185" endLine="191" />
        <comment>while (!NULL) {</comment>
        <comment>while (!NULL) {</comment>
      </scope>
      <scope startLine="195" endLine="230">
        <scope startLine="204" endLine="211">
          <scope startLine="205" endLine="210" />
        </scope>
        <scope startLine="212" endLine="217" />
        <scope startLine="219" endLine="224" />
      </scope>
      <comment>otherwise numerical integration of the function defined above</comment>
    </method>
    <javadoc>
      <text>* Modified Bessel Functions of First Kind - Order 0.</text>
    </javadoc>
    <method type="double" name="bessi0" startLine="235" endLine="253">
      <declaration type="double" name="ax" />
      <declaration type="double" name="y" />
      <scope startLine="239" endLine="244" />
      <scope startLine="245" endLine="251" />
    </method>
    <javadoc>
      <text>* Modified Bessel Functions of First Kind - Order 1.</text>
    </javadoc>
    <method type="double" name="bessi1" startLine="257" endLine="276">
      <declaration type="double" name="ax" />
      <declaration type="double" name="y" />
      <scope startLine="261" endLine="266" />
      <scope startLine="267" endLine="274" />
    </method>
    <javadoc>
      <text>* Returns <tt>n!</tt>.</text>
    </javadoc>
    <method type="long" name="factorial" startLine="280" endLine="291">
      <comment>long i,prod;

prod = 1;
if (n != 0) {
for (i = 2; i <= n; i++) prod = i;
}
return prod;</comment>
    </method>
    <method type="double" name="fkt2_value" startLine="292" endLine="297">
      <declaration type="double" name="y_value" />
    </method>
    <method type="double" name="cosh" startLine="298" endLine="300" />
    <javadoc>
      <text>* Returns the gamma function <tt>gamma(x)</tt>.</text>
    </javadoc>
    <method type="double" name="gamma" startLine="306" endLine="310">
      <comment>if (x > Math.log(Double.MAX_VALUE)) return Double.MAX_VALUE;</comment>
    </method>
    <javadoc>
      <text>* Returns a quick approximation of <tt>log(gamma(x))</tt>.</text>
    </javadoc>
    <method type="double" name="logGamma" startLine="314" endLine="330">
      <declaration type="double" name="c0" />
      <declaration type="double" name="g" />
      <comment>if (x <= 0.0  || x > 1.3e19  ) return -999;</comment>
    </method>
  </class>
</source>
