<?xml version="1.0" encoding="UTF-8"?>
<source package="cern.jet.random.engine">
  <class name="RandomSeedGenerator" extends="cern.colt.PersistentObject" startLine="11">
    <javadoc>
      <text>* Deterministic seed generator for pseudo-random number generators.
 * The sole purpose of this class is to decorrelate seeds and uniform random number generators.
 * (If a generator would be used to generate seeds for itself, the result could be correlations.)
 * <p>
 * This class has entirelly deterministic behaviour:
 * Constructing two instances with the same parameters at any two distinct points in time will produce identical seed sequences.
 * However, it does not (at all) generate uniformly distributed numbers. Do not use it as a uniformly distributed random number generator! 
 * <p>
 * Each generated sequence of seeds has a period of 10<sup>9</sup> numbers.
 * Internally uses {@link RandomSeedTable}.</text>
      <author>wolfgang.hoschek@cern.ch</author>
      <version>1.0, 09/24/99</version>
    </javadoc>
    <declaration type="int" name="row" />
    <declaration type="int" name="column" />
    <javadoc>
      <text>* Constructs and returns a new seed generator.</text>
    </javadoc>
    <method type="constructor" name="RandomSeedGenerator" startLine="32" endLine="34" />
    <javadoc>
      <text>* Constructs and returns a new seed generator; you normally won't need to use this method.
 * <p>
 * The position <tt>[row,column]</tt> indicates the iteration starting point within a (virtual) seed matrix.
 * The seed matrix is a n*m matrix with <tt>1 + Integer.MAX_VALUE</tt> (virtual) rows and <tt>RandomSeedTable.COLUMNS</tt> columns.
 * Successive calls to method <tt>nextSeed()</tt> will cycle over the given column, in ascending order:
 * <tt>nextSeed()</tt> returns the seed <tt>s[row,column], s[row+1,column], ... s[Integer.MAX_VALUE,column], s[0,column], s[1,column], ...</tt></text>
      <param>row should be in <tt>[0,Integer.MAX_VALUE]</tt>.</param>
      <param>column should be in <tt>[0,RandomSeedTable.COLUMNS - 1]</tt>.</param>
    </javadoc>
    <method type="constructor" name="RandomSeedGenerator" startLine="46" endLine="49" />
    <javadoc>
      <text>* Prints the generated seeds for the given input parameters.</text>
    </javadoc>
    <method type="void" name="main" startLine="53" endLine="58">
      <declaration type="int" name="row" />
      <declaration type="int" name="column" />
      <declaration type="int" name="size" />
    </method>
    <javadoc>
      <text>* Returns the next seed.</text>
    </javadoc>
    <method type="int" name="nextSeed" startLine="62" endLine="64" />
    <javadoc>
      <text>* Prints the next <tt>size</tt> generated seeds.</text>
    </javadoc>
    <method type="void" name="print" startLine="68" endLine="77">
      <declaration type="RandomSeedGenerator" name="copy" />
      <scope startLine="71" endLine="74">
        <declaration type="int" name="seed" />
      </scope>
    </method>
  </class>
</source>
