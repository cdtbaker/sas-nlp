<?xml version="1.0" encoding="UTF-8"?>
<source package="cern.jet.random">
  <import name="cern.jet.random.engine.RandomEngine" />
  <import name="cern.jet.stat.Probability" />
  <class name="Gamma" extends="AbstractContinousDistribution" startLine="13">
    <javadoc>
      <text>* Gamma distribution; <A HREF="http://wwwinfo.cern.ch/asdoc/shortwrupsdir/g106/top.html"> math definition</A>,
 * <A HREF="http://www.cern.ch/RD11/rkb/AN16pp/node96.html#SECTION000960000000000000000"> definition of gamma function</A>
 * and <A HREF="http://www.statsoft.com/textbook/glosf.html#Gamma Distribution"> animated definition</A>. 
 * <p>
 * <tt>p(x) = k * x^(alpha-1) * e^(-x/beta)</tt> with <tt>k = 1/(g(alpha) * b^a))</tt> and <tt>g(a)</tt> being the gamma function.
 * <p>
 * Valid parameter ranges: <tt>alpha &gt; 0</tt>.
 * <p>
 * Note: For a Gamma distribution to have the mean <tt>mean</tt> and variance <tt>variance</tt>, set the parameters as follows:
 * <pre>
 * alpha = mean*mean / variance; lambda = 1 / (variance / mean); 
 * </pre>
 * <p>
 * Instance methods operate on a user supplied uniform random number generator; they are unsynchronized.
 * <dt>
 * Static methods operate on a default uniform random number generator; they are synchronized.
 * <p>
 * <b>Implementation:</b> 
 * <dt>
 * Method: Acceptance Rejection combined with Acceptance Complement.
 * <dt>
 * High performance implementation. This is a port of <A HREF="http://wwwinfo.cern.ch/asd/lhc++/clhep/manual/RefGuide/Random/RandGamma.html">RandGamma</A> used in <A HREF="http://wwwinfo.cern.ch/asd/lhc++/clhep">CLHEP 1.4.0</A> (C++).
 * CLHEP's implementation, in turn, is based on <tt>gds.c</tt> from the <A HREF="http://www.cis.tu-graz.ac.at/stat/stadl/random.html">C-RAND / WIN-RAND</A> library.
 * C-RAND's implementation, in turn, is based upon
 * <p>
 * J.H. Ahrens, U. Dieter (1974): Computer methods for sampling from gamma, beta, Poisson and binomial distributions, 
 * Computing 12, 223-246.
 * <p>
 * and
 * <p>
 * J.H. Ahrens, U. Dieter (1982): Generating gamma variates by a modified rejection technique,
 * Communications of the ACM 25, 47-54.</text>
      <author>wolfgang.hoschek@cern.ch</author>
      <version>1.0, 09/24/99</version>
    </javadoc>
    <declaration type="double" name="alpha" />
    <declaration type="double" name="lambda" />
    <declaration type="Gamma" name="shared" />
    <javadoc>
      <text>* Constructs a Gamma distribution.
 * Example: alpha=1.0, lambda=1.0.</text>
      <throws>IllegalArgumentException if <tt>alpha &lt;= 0.0 || lambda &lt;= 0.0</tt>.</throws>
    </javadoc>
    <method type="constructor" name="Gamma" startLine="61" endLine="64" />
    <javadoc>
      <text>* Returns the cumulative distribution function.</text>
    </javadoc>
    <method type="double" name="cdf" startLine="68" endLine="70" />
    <javadoc>
      <text>* Returns a random number from the distribution.</text>
    </javadoc>
    <method type="double" name="nextDouble" startLine="74" endLine="76" />
    <javadoc>
      <text>* Returns a random number from the distribution; bypasses the internal state.</text>
    </javadoc>
    <method type="double" name="nextDouble" startLine="80" endLine="225">
      <declaration type="double" name="a" />
      <declaration type="double" name="aa" />
      <declaration type="double" name="gds" />
      <declaration type="double" name="v1" />
      <scope startLine="124" endLine="137">
        <scope startLine="126" endLine="136">
          <scope startLine="128" endLine="131" />
          <scope startLine="132" endLine="135" />
        </scope>
        <comment>CASE A: Acceptance rejection algorithm gs</comment>
        <comment>Step 1</comment>
        <comment>Step 2. Case gds <= 1</comment>
        <comment>Step 3. Case gds > 1</comment>
      </scope>
      <scope startLine="139" endLine="224">
        <scope startLine="140" endLine="145" />
        <scope startLine="147" endLine="151" />
        <scope startLine="160" endLine="182">
          <scope startLine="165" endLine="176">
            <scope startLine="166" endLine="170" />
            <scope startLine="171" endLine="175" />
          </scope>
          <scope startLine="177" endLine="181" />
        </scope>
        <scope startLine="183" endLine="193">
          <scope startLine="185" endLine="187" />
          <scope startLine="188" endLine="191" />
        </scope>
        <scope startLine="195" endLine="223">
          <scope startLine="196" endLine="202" />
          <scope startLine="204" endLine="206" />
          <scope startLine="207" endLine="210" />
          <scope startLine="212" endLine="214" />
          <scope startLine="215" endLine="218" />
          <scope startLine="219" endLine="222" />
        </scope>
        <comment>CASE B: Acceptance complement algorithm gd (gaussian distribution, box muller transformation)</comment>
        <comment>Step 1. Preparations</comment>
        <comment>Step 2. Normal deviate</comment>
        <comment>Immediate acceptance</comment>
        <comment>Step 3. Uniform random number</comment>
        <comment>Squeeze acceptance</comment>
        <comment>Step 4. Set-up for hat case</comment>
        <comment>Step 5. Calculation of q</comment>
        <comment>Step 6.</comment>
        <comment>Step 7. Quotient acceptance</comment>
        <comment>Step 8. Double exponential deviate t</comment>
        <comment>Step 9. Rejection of t</comment>
        <comment>Step 10. New q(t)</comment>
        <comment>Step 11.</comment>
        <comment>Step 12. Hat acceptance</comment>
      </scope>
      <javadoc>
        <text>* *
 * Gamma Distribution - Acceptance Rejection combined with     
 * Acceptance Complement                  
 * *
 * *
 * FUNCTION:    - gds samples a random number from the standard   
 * gamma distribution with parameter  a > 0.       
 * Acceptance Rejection  gs  for  a < 1 ,          
 * Acceptance Complement gd  for  a >= 1 .         
 * REFERENCES:  - J.H. Ahrens, U. Dieter (1974): Computer methods 
 * for sampling from gamma, beta, Poisson and      
 * binomial distributions, Computing 12, 223-246.  
 * - J.H. Ahrens, U. Dieter (1982): Generating gamma 
 * variates by a modified rejection technique,     
 * Communications of the ACM 25, 47-54.            
 * SUBPROGRAMS: - drand(seed) ... (0,1)-Uniform generator with    
 * unsigned long integer *seed                     
 * - NORMAL(seed) ... Normal generator N(0,1).       
 * *</text>
      </javadoc>
      <comment>Check for invalid input values</comment>
    </method>
    <javadoc>
      <text>* Returns the probability distribution function.</text>
    </javadoc>
    <method type="double" name="pdf" startLine="229" endLine="238">
      <scope startLine="231" endLine="234" />
    </method>
    <javadoc>
      <text>* Sets the mean and variance.</text>
      <throws>IllegalArgumentException if <tt>alpha &lt;= 0.0 || lambda &lt;= 0.0</tt>.</throws>
    </javadoc>
    <method type="void" name="setState" startLine="243" endLine="248" />
    <javadoc>
      <text>* Returns a random number from the distribution.</text>
      <throws>IllegalArgumentException if <tt>alpha &lt;= 0.0 || lambda &lt;= 0.0</tt>.</throws>
    </javadoc>
    <method type="double" name="staticNextDouble" startLine="253" endLine="257">
      <scope startLine="254" endLine="256" />
    </method>
    <javadoc>
      <text>* Returns a String representation of the receiver.</text>
    </javadoc>
    <method type="String" name="toString" startLine="261" endLine="263" />
    <javadoc>
      <text>* Sets the uniform random number generated shared by all <b>static</b> methods.</text>
      <param>randomGenerator the new uniform random number generator to be shared.</param>
    </javadoc>
    <method type="void" name="xstaticSetRandomGenerator" startLine="268" endLine="272">
      <scope startLine="269" endLine="271" />
    </method>
    <comment>The uniform random number generated shared by all <b>static</b> methods.</comment>
  </class>
</source>
