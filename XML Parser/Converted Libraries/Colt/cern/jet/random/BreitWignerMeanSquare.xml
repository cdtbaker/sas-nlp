<?xml version="1.0" encoding="UTF-8"?>
<source package="cern.jet.random">
  <import name="cern.jet.random.engine.RandomEngine" />
  <class name="BreitWignerMeanSquare" extends="BreitWigner" startLine="12">
    <javadoc>
      <text>* Mean-square BreitWigner distribution; See the <A HREF="http://www.cern.ch/RD11/rkb/AN16pp/node23.html#SECTION000230000000000000000"> math definition</A>.
 * <p>
 * Instance methods operate on a user supplied uniform random number generator; they are unsynchronized.
 * <dt>
 * Static methods operate on a default uniform random number generator; they are synchronized. 
 * <p>
 * <b>Implementation:</b> This is a port of <A HREF="http://wwwinfo.cern.ch/asd/lhc++/clhep/manual/RefGuide/Random/RandBreitWigner.html">RandBreitWigner</A> used in <A HREF="http://wwwinfo.cern.ch/asd/lhc++/clhep">CLHEP 1.4.0</A> (C++).</text>
      <author>wolfgang.hoschek@cern.ch</author>
      <version>1.0, 09/24/99</version>
    </javadoc>
    <declaration type="Uniform" name="uniform" />
    <declaration type="BreitWigner" name="shared" />
    <javadoc>
      <text>* Constructs a mean-squared BreitWigner distribution.</text>
      <param>cut </tt>cut==Double.NEGATIVE_INFINITY</tt> indicates "don't cut".</param>
    </javadoc>
    <method type="constructor" name="BreitWignerMeanSquare" startLine="33" endLine="36" />
    <javadoc>
      <text>* Returns a deep copy of the receiver; the copy will produce identical sequences.
 * After this call has returned, the copy and the receiver have equal but separate state.</text>
      <return>a copy of the receiver.</return>
    </javadoc>
    <method type="Object" name="clone" startLine="43" endLine="47">
      <declaration type="BreitWignerMeanSquare" name="copy" />
    </method>
    <javadoc>
      <text>* Returns a mean-squared random number from the distribution; bypasses the internal state.</text>
      <param>cut </tt>cut==Double.NEGATIVE_INFINITY</tt> indicates "don't cut".</param>
    </javadoc>
    <method type="double" name="nextDouble" startLine="52" endLine="69">
      <scope startLine="54" endLine="59">
        <declaration type="double" name="val" />
        <declaration type="double" name="rval" />
        <declaration type="double" name="displ" />
        <comment>don't cut</comment>
      </scope>
      <scope startLine="60" endLine="68">
        <declaration type="double" name="tmp" />
        <declaration type="double" name="lower" />
        <declaration type="double" name="upper" />
        <declaration type="double" name="rval" />
        <declaration type="double" name="displ" />
      </scope>
    </method>
    <javadoc>
      <text>* Returns a random number from the distribution.</text>
      <param>cut </tt>cut==Double.NEGATIVE_INFINITY</tt> indicates "don't cut".</param>
    </javadoc>
    <method type="double" name="staticNextDouble" startLine="74" endLine="78">
      <scope startLine="75" endLine="77" />
    </method>
    <javadoc>
      <text>* Sets the uniform random number generated shared by all <b>static</b> methods.</text>
      <param>randomGenerator the new uniform random number generator to be shared.</param>
    </javadoc>
    <method type="void" name="xstaticSetRandomGenerator" startLine="83" endLine="87">
      <scope startLine="84" endLine="86" />
    </method>
    <comment>helper</comment>
    <comment>The uniform random number generated shared by all <b>static</b> methods.</comment>
  </class>
</source>
