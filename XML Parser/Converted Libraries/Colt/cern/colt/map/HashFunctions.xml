<?xml version="1.0" encoding="UTF-8"?>
<source package="cern.colt.map">
  <class name="HashFunctions" extends="Object" startLine="11">
    <javadoc>
      <text>* Provides various hash functions.</text>
      <author>wolfgang.hoschek@cern.ch</author>
      <version>1.0, 09/24/99</version>
    </javadoc>
    <javadoc>
      <text>* Makes this class non instantiable, but still let's others inherit from it.</text>
    </javadoc>
    <method type="constructor" name="HashFunctions" startLine="21" endLine="21" />
    <javadoc>
      <text>* Returns a hashcode for the specified value.</text>
      <return>a hash code value for the specified value.</return>
    </javadoc>
    <method type="int" name="hash" startLine="27" endLine="29" />
    <javadoc>
      <text>* Returns a hashcode for the specified value.</text>
      <return>a hash code value for the specified value.</return>
    </javadoc>
    <method type="int" name="hash" startLine="35" endLine="41">
      <declaration type="long" name="bits" />
      <comment>return (int) Double.doubleToLongBits(value*663608941.737);</comment>
      <comment>this avoids excessive hashCollisions in the case values are of the form (1.0, 2.0, 3.0, ...)</comment>
    </method>
    <javadoc>
      <text>* Returns a hashcode for the specified value.</text>
      <return>a hash code value for the specified value.</return>
    </javadoc>
    <method type="int" name="hash" startLine="47" endLine="50">
      <comment>this avoids excessive hashCollisions in the case values are of the form (1.0, 2.0, 3.0, ...)</comment>
    </method>
    <javadoc>
      <text>* Returns a hashcode for the specified value.</text>
      <return>a hash code value for the specified value.</return>
    </javadoc>
    <method type="int" name="hash" startLine="56" endLine="69">
      <comment>return value * 0x278DDE6D;  see cern.jet.random.engine.DRand</comment>
      <comment>value &= 0x7FFFFFFF;  make it >=0
int hashCode = 0;
do hashCode = 31hashCode + value%10;
while ((value = 10) > 0);

return 28629151hashCode;  spread even further; h31^5</comment>
    </method>
    <javadoc>
      <text>* Returns a hashcode for the specified value.</text>
      <return>a hash code value for the specified value.</return>
    </javadoc>
    <method type="int" name="hash" startLine="75" endLine="85">
      <comment>value &= 0x7FFFFFFFFFFFFFFFL;  make it >=0 (0x7FFFFFFFFFFFFFFFL==Long.MAX_VALUE)
int hashCode = 0;
do hashCode = 31hashCode + (int) (value%10);
while ((value = 10) > 0);

return 28629151hashCode;  spread even further; h31^5</comment>
    </method>
    <javadoc>
      <text>* Returns a hashcode for the specified object.</text>
      <return>a hash code value for the specified object.</return>
    </javadoc>
    <method type="int" name="hash" startLine="91" endLine="93" />
    <javadoc>
      <text>* Returns a hashcode for the specified value.</text>
      <return>a hash code value for the specified value.</return>
    </javadoc>
    <method type="int" name="hash" startLine="99" endLine="101" />
    <javadoc>
      <text>* Returns a hashcode for the specified value.</text>
      <return>a hash code value for the specified value.</return>
    </javadoc>
    <method type="int" name="hash" startLine="107" endLine="109" />
  </class>
</source>
