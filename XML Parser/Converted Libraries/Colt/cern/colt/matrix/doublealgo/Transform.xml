<?xml version="1.0" encoding="UTF-8"?>
<source package="cern.colt.matrix.doublealgo">
  <import name="cern.colt.matrix.DoubleMatrix1D" />
  <import name="cern.colt.matrix.DoubleMatrix2D" />
  <class name="Transform" extends="cern.colt.PersistentObject" startLine="13">
    <javadoc>
      <text>* Deprecated; Basic element-by-element transformations on {@link cern.colt.matrix.DoubleMatrix1D} and {@link cern.colt.matrix.DoubleMatrix2D}.
 * All transformations modify the first argument matrix to hold the result of the transformation.
 * Use idioms like <tt>result = mult(matrix.copy(),5)</tt> to leave source matrices unaffected.
 * <p>
 * If your favourite transformation is not provided by this class, consider using method <tt>assign</tt> in combination with prefabricated function objects of {@link cern.jet.math.Functions},
 * using idioms like 
 * <table>
 * <td class="PRE"> 
 * <pre>
 * cern.jet.math.Functions F = cern.jet.math.Functions.functions; // alias
 * matrix.assign(F.square);
 * matrix.assign(F.sqrt);
 * matrix.assign(F.sin);
 * matrix.assign(F.log);
 * matrix.assign(F.log(b));
 * matrix.assign(otherMatrix, F.min);
 * matrix.assign(otherMatrix, F.max);
 * </pre>
 * </td>
 * </table>
 * Here are some <a href="../doc-files/functionObjects.html">other examples</a>.
 * <p>
 * Implementation: Performance optimized for medium to very large matrices.
 * In fact, there is now nomore a performance advantage in using this class; The assign (transform) methods directly defined on matrices are now just as fast.
 * Thus, this class will soon be removed altogether.</text>
      <deprecated />
      <author>wolfgang.hoschek@cern.ch</author>
      <version>1.0, 09/24/99</version>
    </javadoc>
    <javadoc>
      <text>* Little trick to allow for "aliasing", that is, renaming this class.
 * Normally you would write
 * <pre>
 * Transform.mult(myMatrix,2);
 * Transform.plus(myMatrix,5);
 * </pre>
 * Since this class has only static methods, but no instance methods
 * you can also shorten the name "DoubleTransform" to a name that better suits you, for example "Trans".
 * <pre>
 * Transform T = Transform.transform; // kind of "alias"
 * T.mult(myMatrix,2);
 * T.plus(myMatrix,5);
 * </pre></text>
    </javadoc>
    <declaration type="Transform" name="transform" />
    <declaration type="cern.jet.math.Functions" name="F" />
    <javadoc>
      <text>* Makes this class non instantiable, but still let's others inherit from it.</text>
    </javadoc>
    <method type="constructor" name="Transform" startLine="67" endLine="67" />
    <javadoc>
      <text>* <tt>A[i] = Math.abs(A[i])</tt>.</text>
      <param>A the matrix to modify.</param>
      <return><tt>A</tt> (for convenience only).</return>
    </javadoc>
    <method type="DoubleMatrix1D" name="abs" startLine="73" endLine="75" />
    <javadoc>
      <text>* <tt>A[row,col] = Math.abs(A[row,col])</tt>.</text>
      <param>A the matrix to modify.</param>
      <return><tt>A</tt> (for convenience only).</return>
    </javadoc>
    <method type="DoubleMatrix2D" name="abs" startLine="81" endLine="83" />
    <javadoc>
      <text>* <tt>A = A / s <=> A[i] = A[i] / s</tt>.</text>
      <param>A the matrix to modify.</param>
      <param>s the scalar; can have any value.</param>
      <return><tt>A</tt> (for convenience only).</return>
    </javadoc>
    <method type="DoubleMatrix1D" name="div" startLine="90" endLine="92" />
    <javadoc>
      <text>* <tt>A = A / B <=> A[i] = A[i] / B[i]</tt>.</text>
      <param>A the matrix to modify.</param>
      <param>B the matrix to stay unaffected.</param>
      <return><tt>A</tt> (for convenience only).</return>
    </javadoc>
    <method type="DoubleMatrix1D" name="div" startLine="99" endLine="101" />
    <javadoc>
      <text>* <tt>A = A / s <=> A[row,col] = A[row,col] / s</tt>.</text>
      <param>A the matrix to modify.</param>
      <param>s the scalar; can have any value.</param>
      <return><tt>A</tt> (for convenience only).</return>
    </javadoc>
    <method type="DoubleMatrix2D" name="div" startLine="108" endLine="110" />
    <javadoc>
      <text>* <tt>A = A / B <=> A[row,col] = A[row,col] / B[row,col]</tt>.</text>
      <param>A the matrix to modify.</param>
      <param>B the matrix to stay unaffected.</param>
      <return><tt>A</tt> (for convenience only).</return>
    </javadoc>
    <method type="DoubleMatrix2D" name="div" startLine="117" endLine="119" />
    <javadoc>
      <text>* <tt>A[row,col] = A[row,col] == s ? 1 : 0</tt>; ignores tolerance.</text>
      <param>A the matrix to modify.</param>
      <param>s the scalar; can have any value.</param>
      <return><tt>A</tt> (for convenience only).</return>
    </javadoc>
    <method type="DoubleMatrix2D" name="equals" startLine="126" endLine="128" />
    <javadoc>
      <text>* <tt>A[row,col] = A[row,col] == B[row,col] ? 1 : 0</tt>; ignores tolerance.</text>
      <param>A the matrix to modify.</param>
      <param>B the matrix to stay unaffected.</param>
      <return><tt>A</tt> (for convenience only).</return>
    </javadoc>
    <method type="DoubleMatrix2D" name="equals" startLine="135" endLine="137" />
    <javadoc>
      <text>* <tt>A[row,col] = A[row,col] > s ? 1 : 0</tt>.</text>
      <param>A the matrix to modify.</param>
      <param>s the scalar; can have any value.</param>
      <return><tt>A</tt> (for convenience only).</return>
    </javadoc>
    <method type="DoubleMatrix2D" name="greater" startLine="144" endLine="146" />
    <javadoc>
      <text>* <tt>A[row,col] = A[row,col] > B[row,col] ? 1 : 0</tt>.</text>
      <param>A the matrix to modify.</param>
      <param>B the matrix to stay unaffected.</param>
      <return><tt>A</tt> (for convenience only).</return>
    </javadoc>
    <method type="DoubleMatrix2D" name="greater" startLine="153" endLine="155" />
    <javadoc>
      <text>* <tt>A[row,col] = A[row,col] < s ? 1 : 0</tt>.</text>
      <param>A the matrix to modify.</param>
      <param>s the scalar; can have any value.</param>
      <return><tt>A</tt> (for convenience only).</return>
    </javadoc>
    <method type="DoubleMatrix2D" name="less" startLine="162" endLine="164" />
    <javadoc>
      <text>* <tt>A[row,col] = A[row,col] < B[row,col] ? 1 : 0</tt>.</text>
      <param>A the matrix to modify.</param>
      <param>B the matrix to stay unaffected.</param>
      <return><tt>A</tt> (for convenience only).</return>
    </javadoc>
    <method type="DoubleMatrix2D" name="less" startLine="171" endLine="173" />
    <javadoc>
      <text>* <tt>A = A - s <=> A[i] = A[i] - s</tt>.</text>
      <param>A the matrix to modify.</param>
      <param>s the scalar; can have any value.</param>
      <return><tt>A</tt> (for convenience only).</return>
    </javadoc>
    <method type="DoubleMatrix1D" name="minus" startLine="180" endLine="182" />
    <javadoc>
      <text>* <tt>A = A - B <=> A[i] = A[i] - B[i]</tt>.</text>
      <param>A the matrix to modify.</param>
      <param>B the matrix to stay unaffected.</param>
      <return><tt>A</tt> (for convenience only).</return>
    </javadoc>
    <method type="DoubleMatrix1D" name="minus" startLine="189" endLine="191" />
    <javadoc>
      <text>* <tt>A = A - s <=> A[row,col] = A[row,col] - s</tt>.</text>
      <param>A the matrix to modify.</param>
      <param>s the scalar; can have any value.</param>
      <return><tt>A</tt> (for convenience only).</return>
    </javadoc>
    <method type="DoubleMatrix2D" name="minus" startLine="198" endLine="200" />
    <javadoc>
      <text>* <tt>A = A - B <=> A[row,col] = A[row,col] - B[row,col]</tt>.</text>
      <param>A the matrix to modify.</param>
      <param>B the matrix to stay unaffected.</param>
      <return><tt>A</tt> (for convenience only).</return>
    </javadoc>
    <method type="DoubleMatrix2D" name="minus" startLine="207" endLine="209" />
    <javadoc>
      <text>* <tt>A = A - B*s <=> A[i] = A[i] - B[i]*s</tt>.</text>
      <param>A the matrix to modify.</param>
      <param>B the matrix to stay unaffected.</param>
      <param>s the scalar; can have any value.</param>
      <return><tt>A</tt> (for convenience only).</return>
    </javadoc>
    <method type="DoubleMatrix1D" name="minusMult" startLine="217" endLine="219" />
    <javadoc>
      <text>* <tt>A = A - B*s <=> A[row,col] = A[row,col] - B[row,col]*s</tt>.</text>
      <param>A the matrix to modify.</param>
      <param>B the matrix to stay unaffected.</param>
      <param>s the scalar; can have any value.</param>
      <return><tt>A</tt> (for convenience only).</return>
    </javadoc>
    <method type="DoubleMatrix2D" name="minusMult" startLine="227" endLine="229" />
    <javadoc>
      <text>* <tt>A = A * s <=> A[i] = A[i] * s</tt>.</text>
      <param>A the matrix to modify.</param>
      <param>s the scalar; can have any value.</param>
      <return><tt>A</tt> (for convenience only).</return>
    </javadoc>
    <method type="DoubleMatrix1D" name="mult" startLine="236" endLine="238" />
    <javadoc>
      <text>* <tt>A = A * B <=> A[i] = A[i] * B[i]</tt>.</text>
      <param>A the matrix to modify.</param>
      <param>B the matrix to stay unaffected.</param>
      <return><tt>A</tt> (for convenience only).</return>
    </javadoc>
    <method type="DoubleMatrix1D" name="mult" startLine="245" endLine="247" />
    <javadoc>
      <text>* <tt>A = A * s <=> A[row,col] = A[row,col] * s</tt>.</text>
      <param>A the matrix to modify.</param>
      <param>s the scalar; can have any value.</param>
      <return><tt>A</tt> (for convenience only).</return>
    </javadoc>
    <method type="DoubleMatrix2D" name="mult" startLine="254" endLine="256" />
    <javadoc>
      <text>* <tt>A = A * B <=> A[row,col] = A[row,col] * B[row,col]</tt>.</text>
      <param>A the matrix to modify.</param>
      <param>B the matrix to stay unaffected.</param>
      <return><tt>A</tt> (for convenience only).</return>
    </javadoc>
    <method type="DoubleMatrix2D" name="mult" startLine="263" endLine="265" />
    <javadoc>
      <text>* <tt>A = -A <=> A[i] = -A[i]</tt> for all cells.</text>
      <return><tt>A</tt> (for convenience only).</return>
    </javadoc>
    <method type="DoubleMatrix1D" name="negate" startLine="270" endLine="272" />
    <javadoc>
      <text>* <tt>A = -A <=> A[row,col] = -A[row,col]</tt>.</text>
      <return><tt>A</tt> (for convenience only).</return>
    </javadoc>
    <method type="DoubleMatrix2D" name="negate" startLine="277" endLine="279" />
    <javadoc>
      <text>* <tt>A = A + s <=> A[i] = A[i] + s</tt>.</text>
      <param>A the matrix to modify.</param>
      <param>s the scalar; can have any value.</param>
      <return><tt>A</tt> (for convenience only).</return>
    </javadoc>
    <method type="DoubleMatrix1D" name="plus" startLine="286" endLine="288" />
    <javadoc>
      <text>* <tt>A = A + B <=> A[i] = A[i] + B[i]</tt>.</text>
      <param>A the matrix to modify.</param>
      <param>B the matrix to stay unaffected.</param>
      <return><tt>A</tt> (for convenience only).</return>
    </javadoc>
    <method type="DoubleMatrix1D" name="plus" startLine="295" endLine="297" />
    <javadoc>
      <text>* <tt>A = A + s <=> A[row,col] = A[row,col] + s</tt>.</text>
      <param>A the matrix to modify.</param>
      <param>s the scalar; can have any value.</param>
      <return><tt>A</tt> (for convenience only).</return>
    </javadoc>
    <method type="DoubleMatrix2D" name="plus" startLine="304" endLine="306" />
    <javadoc>
      <text>* <tt>A = A + B <=> A[row,col] = A[row,col] + B[row,col]</tt>.</text>
      <param>A the matrix to modify.</param>
      <param>B the matrix to stay unaffected.</param>
      <return><tt>A</tt> (for convenience only).</return>
    </javadoc>
    <method type="DoubleMatrix2D" name="plus" startLine="313" endLine="315" />
    <javadoc>
      <text>* <tt>A = A + B*s<=> A[i] = A[i] + B[i]*s</tt>.</text>
      <param>A the matrix to modify.</param>
      <param>B the matrix to stay unaffected.</param>
      <param>s the scalar; can have any value.</param>
      <return><tt>A</tt> (for convenience only).</return>
    </javadoc>
    <method type="DoubleMatrix1D" name="plusMult" startLine="323" endLine="325" />
    <javadoc>
      <text>* <tt>A = A + B*s <=> A[row,col] = A[row,col] + B[row,col]*s</tt>.</text>
      <param>A the matrix to modify.</param>
      <param>B the matrix to stay unaffected.</param>
      <param>s the scalar; can have any value.</param>
      <return><tt>A</tt> (for convenience only).</return>
    </javadoc>
    <method type="DoubleMatrix2D" name="plusMult" startLine="333" endLine="335" />
    <javadoc>
      <text>* <tt>A = A<sup>s</sup> <=> A[i] = Math.pow(A[i], s)</tt>.</text>
      <param>A the matrix to modify.</param>
      <param>s the scalar; can have any value.</param>
      <return><tt>A</tt> (for convenience only).</return>
    </javadoc>
    <method type="DoubleMatrix1D" name="pow" startLine="342" endLine="344" />
    <javadoc>
      <text>* <tt>A = A<sup>B</sup> <=> A[i] = Math.pow(A[i], B[i])</tt>.</text>
      <param>A the matrix to modify.</param>
      <param>B the matrix to stay unaffected.</param>
      <return><tt>A</tt> (for convenience only).</return>
    </javadoc>
    <method type="DoubleMatrix1D" name="pow" startLine="351" endLine="353" />
    <javadoc>
      <text>* <tt>A = A<sup>s</sup> <=> A[row,col] = Math.pow(A[row,col], s)</tt>.</text>
      <param>A the matrix to modify.</param>
      <param>s the scalar; can have any value.</param>
      <return><tt>A</tt> (for convenience only).</return>
    </javadoc>
    <method type="DoubleMatrix2D" name="pow" startLine="360" endLine="362" />
    <javadoc>
      <text>* <tt>A = A<sup>B</sup> <=> A[row,col] = Math.pow(A[row,col], B[row,col])</tt>.</text>
      <param>A the matrix to modify.</param>
      <param>B the matrix to stay unaffected.</param>
      <return><tt>A</tt> (for convenience only).</return>
    </javadoc>
    <method type="DoubleMatrix2D" name="pow" startLine="369" endLine="371" />
    <comment>alias</comment>
  </class>
</source>
