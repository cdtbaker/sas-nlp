<?xml version="1.0" encoding="UTF-8"?>
<source package="cern.colt">
  <class name="PersistentObject" extends="Object" startLine="11">
    <implements name="java.io.Serializable" />
    <implements name="Cloneable" />
    <javadoc>
      <text>* This empty class is the common root for all persistent capable classes.
 * If this class inherits from <tt>java.lang.Object</tt> then all subclasses are serializable with the standard Java serialization mechanism.
 * If this class inherits from <tt>com.objy.db.app.ooObj</tt> then all subclasses are <i>additionally</i> serializable with the Objectivity ODBMS persistance mechanism.
 * Thus, by modifying the inheritance of this class the entire tree of subclasses can be switched to Objectivity compatibility (and back) with minimum effort.</text>
    </javadoc>
    <declaration type="long" name="serialVersionUID" />
    <javadoc>
      <text>* Not yet commented.</text>
    </javadoc>
    <method type="constructor" name="PersistentObject" startLine="22" endLine="23" />
    <javadoc>
      <text>* Returns a copy of the receiver.
 * This default implementation does not nothing except making the otherwise <tt>protected</tt> clone method <tt>public</tt>.</text>
      <return>a copy of the receiver.</return>
    </javadoc>
    <method type="Object" name="clone" startLine="30" endLine="36">
      <scope startLine="31" endLine="33" />
      <scope startLine="33" endLine="35">
        <comment>should never happen since we are cloneable</comment>
      </scope>
    </method>
  </class>
</source>
