<?xml version="1.0" encoding="UTF-8"?>
    <source package="hep.aida.ref">
        <import package="hep.aida.IAxis"/>
        <import package="hep.aida.IHistogram"/>
        <import package="hep.aida.IHistogram1D"/>
        <class name="AbstractHistogram1D" line="6">
            <extends class="Histogram"/>
            <implements interface="IHistogram1D"/>
            <javadoc line="6">
                Abstract base class extracting and implementing most of the redundancy of the interface.                
                <@author>
                    r Wolfgang Hoschek, Tony Johnson, and others.                    
                </@author>
                <@version>
                    n 1.0, 23/03/2000                    
                </@version>
            </javadoc>
            <declaration name="xAxis" type="IAxis" line="14"/>
            <method name="AbstractHistogram1D" type="constructor" line="16">
                <params>
                    <param name="title" type="String"/>
                </params>
            </method>
            <method name="allEntries" type="int" line="20"/>
            <method name="dimensions" type="int" line="24"/>
            <method name="entries" type="int" line="28">
                <declaration name="entries" type="int" line="29"/>
            </method>
            <method name="extraEntries" type="int" line="34">
                <comment line="35">
                    return entries[xAxis.under] + entries[xAxis.over];                    
                </comment>
            </method>
            <javadoc line="38">
                Package private method to map from the external representation of bin
                  number to our internal representation of bin number                
            </javadoc>
            <method name="map" type="int" line="43">
                <params>
                    <param name="index" type="int"/>
                </params>
                <declaration name="bins" type="int" line="44"/>
            </method>
            <method name="minMaxBins" type="int[]" line="52">
                <declaration name="minValue" type="double" line="53"/>
                <declaration name="maxValue" type="double" line="54"/>
                <declaration name="minBinX" type="int" line="55"/>
                <declaration name="maxBinX" type="int" line="56"/>
                <scope line="57">
                    <declaration name="value" type="double" line="58"/>
                    <scope line="59"/>
                    <scope line="63"/>
                </scope>
                <declaration name="result" type="int[]" line="68"/>
            </method>
            <method name="sumAllBinHeights" type="double" line="72"/>
            <method name="sumBinHeights" type="double" line="76">
                <declaration name="sum" type="double" line="77"/>
            </method>
            <method name="sumExtraBinHeights" type="double" line="82">
                <comment line="83">
                    return heights[xAxis.under] + heights[xAxis.over];                    
                </comment>
            </method>
            <method name="xAxis" type="IAxis" line="87"/>
        </class>
    </source>