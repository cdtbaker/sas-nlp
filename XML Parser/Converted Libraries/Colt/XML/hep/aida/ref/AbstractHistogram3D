<?xml version="1.0" encoding="UTF-8"?>
    <source package="hep.aida.ref">
        <import package="hep.aida.IAxis"/>
        <import package="hep.aida.IHistogram"/>
        <import package="hep.aida.IHistogram2D"/>
        <import package="hep.aida.IHistogram3D"/>
        <class name="AbstractHistogram3D" line="7">
            <extends class="Histogram"/>
            <implements interface="IHistogram3D"/>
            <javadoc line="7">
                Abstract base class extracting and implementing most of the redundancy of the interface.                
                <@author>
                    r Wolfgang Hoschek, Tony Johnson, and others.                    
                </@author>
                <@version>
                    n 1.0, 23/03/2000                    
                </@version>
            </javadoc>
            <declaration name="xAxis" type="IAxis" line="15"/>
            <method name="AbstractHistogram3D" type="constructor" line="17">
                <params>
                    <param name="title" type="String"/>
                </params>
            </method>
            <method name="allEntries" type="int" line="21">
                <declaration name="n" type="int" line="22"/>
                <scope line="26"/>
            </method>
            <method name="dimensions" type="int" line="32"/>
            <method name="entries" type="int" line="36">
                <declaration name="n" type="int" line="37"/>
                <scope line="41"/>
            </method>
            <method name="extraEntries" type="int" line="47"/>
            <method name="fill" type="void" line="51">
                <params>
                    <param name="x" type="double"/>
                    <param name="y" type="double"/>
                    <param name="z" type="double"/>
                </params>
            </method>
            <method name="internalSliceXY" type="IHistogram2D" line="54"/>
            <javadoc line="54">
                The precise meaning of the arguments to the public slice
                  methods is somewhat ambiguous, so we define this internal
                  slice method and clearly specify its arguments.
                  &lt;p&gt;
                  &lt;b&gt;Note 0&lt;/b&gt;indexX1 and indexX2 use our INTERNAL bin numbering scheme
                  &lt;b&gt;Note 1&lt;/b&gt;The slice is done between indexX1 and indexX2 INCLUSIVE
                  &lt;b&gt;Note 2&lt;/b&gt;indexX1 and indexX2 may include the use of under and over flow bins
                  &lt;b&gt;Note 3&lt;/b&gt;There is no note 3 (yet)                
            </javadoc>
            <method name="internalSliceXZ" type="IHistogram2D" line="65"/>
            <javadoc line="65">
                The precise meaning of the arguments to the public slice
                  methods is somewhat ambiguous, so we define this internal
                  slice method and clearly specify its arguments.
                  &lt;p&gt;
                  &lt;b&gt;Note 0&lt;/b&gt;indexY1 and indexY2 use our INTERNAL bin numbering scheme
                  &lt;b&gt;Note 1&lt;/b&gt;The slice is done between indexY1 and indexY2 INCLUSIVE
                  &lt;b&gt;Note 2&lt;/b&gt;indexY1 and indexY2 may include the use of under and over flow bins
                  &lt;b&gt;Note 3&lt;/b&gt;There is no note 3 (yet)                
            </javadoc>
            <method name="internalSliceYZ" type="IHistogram2D" line="76"/>
            <javadoc line="76">
                The precise meaning of the arguments to the public slice
                  methods is somewhat ambiguous, so we define this internal
                  slice method and clearly specify its arguments.
                  &lt;p&gt;
                  &lt;b&gt;Note 0&lt;/b&gt;indexX1 and indexX2 use our INTERNAL bin numbering scheme
                  &lt;b&gt;Note 1&lt;/b&gt;The slice is done between indexX1 and indexX2 INCLUSIVE
                  &lt;b&gt;Note 2&lt;/b&gt;indexX1 and indexX2 may include the use of under and over flow bins
                  &lt;b&gt;Note 3&lt;/b&gt;There is no note 3 (yet)                
            </javadoc>
            <javadoc line="87">
                Package private method to map from the external representation of bin
                  number to our internal representation of bin number                
            </javadoc>
            <method name="mapX" type="int" line="92">
                <params>
                    <param name="index" type="int"/>
                </params>
                <declaration name="bins" type="int" line="93"/>
            </method>
            <javadoc line="100">
                Package private method to map from the external representation of bin
                  number to our internal representation of bin number                
            </javadoc>
            <method name="mapY" type="int" line="105">
                <params>
                    <param name="index" type="int"/>
                </params>
                <declaration name="bins" type="int" line="106"/>
            </method>
            <javadoc line="113">
                Package private method to map from the external representation of bin
                  number to our internal representation of bin number                
            </javadoc>
            <method name="mapZ" type="int" line="118">
                <params>
                    <param name="index" type="int"/>
                </params>
                <declaration name="bins" type="int" line="119"/>
            </method>
            <method name="minMaxBins" type="int[]" line="127">
                <declaration name="minValue" type="double" line="128"/>
                <declaration name="maxValue" type="double" line="129"/>
                <declaration name="minBinX" type="int" line="130"/>
                <declaration name="minBinY" type="int" line="131"/>
                <declaration name="minBinZ" type="int" line="132"/>
                <declaration name="maxBinX" type="int" line="133"/>
                <declaration name="maxBinY" type="int" line="134"/>
                <declaration name="maxBinZ" type="int" line="135"/>
                <scope line="136">
                    <scope line="137">
                        <scope line="138">
                            <declaration name="value" type="double" line="139"/>
                            <scope line="140"/>
                            <scope line="146"/>
                        </scope>
                    </scope>
                </scope>
                <declaration name="result" type="int[]" line="155"/>
            </method>
            <method name="projectionXY" type="IHistogram2D" line="159">
                <declaration name="newTitle" type="String" line="160"/>
            </method>
            <method name="projectionXZ" type="IHistogram2D" line="164">
                <declaration name="newTitle" type="String" line="165"/>
            </method>
            <method name="projectionYZ" type="IHistogram2D" line="169">
                <declaration name="newTitle" type="String" line="170"/>
            </method>
            <method name="sliceXY" type="IHistogram2D" line="174">
                <params>
                    <param name="indexZ" type="int"/>
                </params>
            </method>
            <method name="sliceXY" type="IHistogram2D" line="178">
                <params>
                    <param name="indexZ1" type="int"/>
                    <param name="indexZ2" type="int"/>
                </params>
                <declaration name="start" type="int" line="179"/>
                <declaration name="stop" type="int" line="180"/>
                <declaration name="newTitle" type="String" line="181"/>
            </method>
            <method name="sliceXZ" type="IHistogram2D" line="185">
                <params>
                    <param name="indexY" type="int"/>
                </params>
            </method>
            <method name="sliceXZ" type="IHistogram2D" line="189">
                <params>
                    <param name="indexY1" type="int"/>
                    <param name="indexY2" type="int"/>
                </params>
                <declaration name="start" type="int" line="190"/>
                <declaration name="stop" type="int" line="191"/>
                <declaration name="newTitle" type="String" line="192"/>
            </method>
            <method name="sliceYZ" type="IHistogram2D" line="196">
                <params>
                    <param name="indexX" type="int"/>
                </params>
            </method>
            <method name="sliceYZ" type="IHistogram2D" line="200">
                <params>
                    <param name="indexX1" type="int"/>
                    <param name="indexX2" type="int"/>
                </params>
                <declaration name="start" type="int" line="201"/>
                <declaration name="stop" type="int" line="202"/>
                <declaration name="newTitle" type="String" line="203"/>
            </method>
            <method name="sumAllBinHeights" type="double" line="207">
                <declaration name="n" type="double" line="208"/>
                <scope line="212"/>
            </method>
            <method name="sumBinHeights" type="double" line="218">
                <declaration name="n" type="double" line="219"/>
                <scope line="223"/>
            </method>
            <method name="sumExtraBinHeights" type="double" line="229"/>
            <method name="xAxis" type="IAxis" line="233"/>
            <method name="yAxis" type="IAxis" line="237"/>
            <method name="zAxis" type="IAxis" line="241"/>
        </class>
    </source>