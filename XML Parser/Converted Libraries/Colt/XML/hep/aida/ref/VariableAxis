<?xml version="1.0" encoding="UTF-8"?>
    <source package="hep.aida.ref">
        <import package="hep.aida.IAxis"/>
        <import package="hep.aida.IHistogram"/>
        <class name="VariableAxis" line="5">
            <implements interface="IAxis"/>
            <javadoc line="5">
                Variable-width axis; A reference implementation of hep.aida.IAxis.                
                <@author>
                    r Wolfgang Hoschek, Tony Johnson, and others.                    
                </@author>
                <@version>
                    n 1.0, 23/03/2000                    
                </@version>
            </javadoc>
            <declaration name="min" type="double" line="13"/>
            <declaration name="bins" type="int" line="14"/>
            <declaration name="edges" type="double[]" line="15"/>
            <javadoc line="16">
                Constructs and returns an axis with the given bin edges.
                  Example: &lt;tt&gt;edges = (0.2, 1.0, 5.0)&lt;/tt&gt; yields an axis with 2 in-range bins &lt;tt&gt;[0.2,1.0), [1.0,5.0)&lt;/tt&gt; and 2 extra bins &lt;tt&gt;[-inf,0.2), [5.0,inf]&lt;/tt&gt;.                
                <@param>
                    m edges the bin boundaries the partition shall have;
                      must be sorted ascending and must not contain multiple identical elements.                    
                </@param>
                <@throws>
                    s IllegalArgumentException if <tt>edges.length < 1</tt>.                    
                </@throws>
            </javadoc>
            <method name="VariableAxis" type="constructor" line="24">
                <params>
                    <param name="edges" type="double[]"/>
                </params>
                <comment line="25">
                    check if really sorted and has no multiple identical elements                    
                </comment>
                <scope line="28">
                    <scope line="29"/>
                </scope>
            </method>
            <method name="binCentre" type="double" line="39">
                <params>
                    <param name="index" type="int"/>
                </params>
            </method>
            <method name="binLowerEdge" type="double" line="43">
                <params>
                    <param name="index" type="int"/>
                </params>
            </method>
            <method name="bins" type="int" line="49"/>
            <method name="binUpperEdge" type="double" line="53">
                <params>
                    <param name="index" type="int"/>
                </params>
            </method>
            <method name="binWidth" type="double" line="59">
                <params>
                    <param name="index" type="int"/>
                </params>
            </method>
            <method name="coordToIndex" type="int" line="63">
                <params>
                    <param name="coord" type="double"/>
                </params>
                <comment line="64">
                    int index = new DoubleArrayList(this.edges).binarySearch(coord); // just for debugging                    
                </comment>
                <comment line="64">
                    (index &lt; 0) index = -index -1-1; // not found                    
                </comment>
                <comment line="64">
                    else index++; // found                    
                </comment>
                <declaration name="index" type="int" line="66"/>
            </method>
            <method name="lowerEdge" type="double" line="76"/>
            <javadoc line="79">
                Returns a string representation of the specified array.  The string
                  representation consists of a list of the arrays&apos;s elements, enclosed in square brackets
                  (&lt;tt&gt;&quot;[]&quot;&lt;/tt&gt;).  Adjacent elements are separated by the characters
                  &lt;tt&gt;&quot;, &quot;&lt;/tt&gt; (comma and space).                
                <@return>
                    n a string representation of the specified array.                    
                </@return>
            </javadoc>
            <method name="toString" type="String" line="86">
                <params>
                    <param name="array" type="double[]"/>
                </params>
                <declaration name="buf" type="StringBuffer" line="87"/>
                <declaration name="maxIndex" type="int" line="89"/>
                <scope line="90"/>
            </method>
            <method name="upperEdge" type="double" line="99"/>
        </class>
    </source>