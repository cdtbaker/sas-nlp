<?xml version="1.0" encoding="UTF-8"?>
    <source package="hep.aida.bin">
        <class name="BinFunctions1D" extends="Object" line="3">
            <javadoc line="3">
                Function objects computing dynamic bin aggregations; to be passed to generic methods.                
                <@see>
                    e cern.colt.matrix.doublealgo.Formatter                    
                </@see>
                <@see>
                    e cern.colt.matrix.doublealgo.Statistic                    
                </@see>
                <@author>
                    r wolfgang.hoschek@cern.ch                    
                </@author>
                <@version>
                    n 1.0, 09/24/99                    
                </@version>
            </javadoc>
            <declaration name="functions" type="BinFunctions1D" line="11"/>
            <javadoc line="11">
                Little trick to allow for &quot;aliasing&quot;, that is, renaming this class.
                 * Using the aliasing you can instead write
                 * &lt;p&gt;
                 * &lt;tt&gt;BinFunctions F = BinFunctions.functions; &lt;br&gt;
                 * someAlgo(F.max);&lt;/tt&gt;                
            </javadoc>
            <declaration name="max" type="BinFunction1D" line="20"/>
            <javadoc line="20">
                Function that returns &lt;tt&gt;bin.max()&lt;/tt&gt;.                
            </javadoc>
            <anonymous_class line="23">
                <method name="apply" type="double" line="24"/>
                <method name="name" type="String" line="25"/>
            </anonymous_class>
            <declaration name="mean" type="BinFunction1D" line="28"/>
            <javadoc line="28">
                Function that returns &lt;tt&gt;bin.mean()&lt;/tt&gt;.                
            </javadoc>
            <anonymous_class line="31">
                <method name="apply" type="double" line="32"/>
                <method name="name" type="String" line="33"/>
            </anonymous_class>
            <declaration name="median" type="BinFunction1D" line="36"/>
            <javadoc line="36">
                Function that returns &lt;tt&gt;bin.median()&lt;/tt&gt;.                
            </javadoc>
            <anonymous_class line="39">
                <method name="apply" type="double" line="40"/>
                <method name="name" type="String" line="41"/>
            </anonymous_class>
            <declaration name="min" type="BinFunction1D" line="44"/>
            <javadoc line="44">
                Function that returns &lt;tt&gt;bin.min()&lt;/tt&gt;.                
            </javadoc>
            <anonymous_class line="47">
                <method name="apply" type="double" line="48"/>
                <method name="name" type="String" line="49"/>
            </anonymous_class>
            <declaration name="rms" type="BinFunction1D" line="52"/>
            <javadoc line="52">
                Function that returns &lt;tt&gt;bin.rms()&lt;/tt&gt;.                
            </javadoc>
            <anonymous_class line="55">
                <method name="apply" type="double" line="56"/>
                <method name="name" type="String" line="57"/>
            </anonymous_class>
            <declaration name="size" type="BinFunction1D" line="60"/>
            <javadoc line="60">
                Function that returns &lt;tt&gt;bin.size()&lt;/tt&gt;.                
            </javadoc>
            <anonymous_class line="63">
                <method name="apply" type="double" line="64"/>
                <method name="name" type="String" line="65"/>
            </anonymous_class>
            <declaration name="stdDev" type="BinFunction1D" line="68"/>
            <javadoc line="68">
                Function that returns &lt;tt&gt;bin.standardDeviation()&lt;/tt&gt;.                
            </javadoc>
            <anonymous_class line="71">
                <method name="apply" type="double" line="72"/>
                <method name="name" type="String" line="73"/>
            </anonymous_class>
            <declaration name="sum" type="BinFunction1D" line="76"/>
            <javadoc line="76">
                Function that returns &lt;tt&gt;bin.sum()&lt;/tt&gt;.                
            </javadoc>
            <anonymous_class line="79">
                <method name="apply" type="double" line="80"/>
                <method name="name" type="String" line="81"/>
            </anonymous_class>
            <declaration name="sumLog" type="BinFunction1D" line="83"/>
            <javadoc line="83">
                Function that returns &lt;tt&gt;bin.sumOfLogarithms()&lt;/tt&gt;.                
            </javadoc>
            <anonymous_class line="86">
                <method name="apply" type="double" line="87"/>
                <method name="name" type="String" line="88"/>
            </anonymous_class>
            <declaration name="geometricMean" type="BinFunction1D" line="90"/>
            <javadoc line="90">
                Function that returns &lt;tt&gt;bin.geometricMean()&lt;/tt&gt;.                
            </javadoc>
            <anonymous_class line="93">
                <method name="apply" type="double" line="94"/>
                <method name="name" type="String" line="95"/>
            </anonymous_class>
            <javadoc line="99">
                Makes this class non instantiable, but still let&apos;s others inherit from it.                
            </javadoc>
            <method name="BinFunctions1D" type="constructor" line="102"/>
            <javadoc line="103">
                Function that returns &lt;tt&gt;bin.quantile(percentage)&lt;/tt&gt;.                
                <@param>
                    m the percentage of the quantile (<tt>0 <= percentage <= 1</tt>).                    
                </@param>
            </javadoc>
            <method name="quantile" type="BinFunction1D" line="107">
                <anonymous_class line="108">
                    <method name="apply" type="double" line="109"/>
                    <method name="name" type="String" line="110"/>
                </anonymous_class>
            </method>
        </class>
    </source>