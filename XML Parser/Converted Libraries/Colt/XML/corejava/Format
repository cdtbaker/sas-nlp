<?xml version="1.0" encoding="UTF-8"?>
    <source package="corejava">
        <import package="java.io"/>
        <class name="Format" line="24">
            <comment line="25">
                ivate char fmt; // one of cdeEfgGiosxXos                
            </comment>
            <javadoc line="24">
                A class for formatting numbers that follows &lt;tt&gt;printf&lt;/tt&gt; conventions.
                  Also implements C-like &lt;tt&gt;atoi&lt;/tt&gt; and &lt;tt&gt;atof&lt;/tt&gt; functions                
                <@version>
                    n 1.22 2002-11-16                    
                </@version>
                <@author>
                    r Cay Horstmann
                      1998-09-14: Fixed a number of bugs.
                      1.Formatting the most extreme negative number (-9223372036854775808L) printed with 2 leading minus signs.
                      2.Printing 0 with a %e or %g format did not work.
                      3.Printing numbers that were closer to 1 than the number of requested decimal places rounded down rather than up, e.g. formatting 1.999 with %.2f printed 1.00. (This one is pretty serious, of course.)
                      4.Printing with precision 0 (e.g %10.0f) didn't work.
                      5.Printing a string with a precision that exceeded the string length (e.g. print "Hello" with %20.10s) caused a StringIndexOutOfBounds error.
                      1998-10-21: Changed method names from print to printf
                      2000-06-09: Moved to package com.horstmann; no longer part of
                      Core Java
                      2000-06-09: Fixed a number of bugs.
                      1.Printing 100.0 with %e printed 10.0e1, not 1.0e2
                      2.Printing Inf and NaN didn't work.
                      2000-06-09: Coding guideline cleanup
                      2002-11-16: Move to package com.horstmann.format; licensed under LGPL                    
                </@author>
            </javadoc>
            <javadoc line="49">
                Formats the number following &lt;tt&gt;printf&lt;/tt&gt; conventions.
                  Main limitation: Can only handle one format parameter at a time
                  Use multiple Format objects to format more than one number                
                <@param>
                    m s the format string following printf conventions
                      The string has a prefix, a format code and a suffix. The prefix and suffix
                      become part of the formatted output. The format code directs the
                      formatting of the (single) parameter to be formatted. The code has the
                      following structure
                      <ul>
                      <li> a % (required)
                      <li> a modifier (optional)
                      <dl>
                      <dt> + <dd> forces display of + for positive numbers
                      <dt> 0 <dd> show leading zeroes
                      <dt> - <dd> align left in the field
                      <dt> space <dd> prepend a space in front of positive numbers
                      <dt> # <dd> use "alternate" format. Add 0 or 0x for octal or hexadecimal numbers. Don't suppress trailing zeroes in general floating point format.
                      </dl>
                      <li> an integer denoting field width (optional)
                      <li> a period followed by an integer denoting precision (optional)
                      <li> a format descriptor (required)
                      <dl>
                      <dt>f <dd> floating point number in fixed format
                      <dt>e, E <dd> floating point number in exponential notation (scientific format). The E format results in an uppercase E for the exponent (1.14130E+003), the e format in a lowercase e.
                      <dt>g, G <dd> floating point number in general format (fixed format for small numbers, exponential format for large numbers). Trailing zeroes are suppressed. The G format results in an uppercase E for the exponent (if any), the g format in a lowercase e.
                      <dt>d, i <dd> integer in decimal
                      <dt>x <dd> integer in hexadecimal
                      <dt>o <dd> integer in octal
                      <dt>s <dd> string
                      <dt>c <dd> character
                      </dl>
                      </ul>                    
                </@param>
                <@exception>
                    n IllegalArgumentException if bad format                    
                </@exception>
            </javadoc>
            <method name="Format" type="constructor" line="85">
                <params>
                    <param name="s" type="String"/>
                </params>
                <comment line="86">
                    0 = prefix, 1 = flags, 2 = width, 3 = precision,                    
                </comment>
                <comment line="86">
                    4 = format, 5 = end                    
                </comment>
                <declaration name="state" type="int" line="97"/>
                <declaration name="length" type="int" line="98"/>
                <declaration name="parseState" type="int" line="99"/>
                <declaration name="i" type="int" line="102"/>
                <scope line="105">
                    <scope line="108">
                        <scope line="110">
                            <scope line="112"/>
                        </scope>
                    </scope>
                </scope>
                <scope line="126">
                    <scope line="133"/>
                </scope>
                <scope line="137">
                    <scope line="140"/>
                    <scope line="145"/>
                </scope>
                <scope line="154">
                    <scope line="157"/>
                </scope>
                <scope line="165"/>
            </method>
            <javadoc line="174">
                prints a formatted number following printf conventions                
                <@param>
                    m fmt the format string                    
                </@param>
                <@param>
                    m x the double to print                    
                </@param>
            </javadoc>
            <method name="printf" type="void" line="180">
                <params>
                    <param name="fmt" type="String"/>
                    <param name="x" type="double"/>
                </params>
            </method>
            <javadoc line="184">
                prints a formatted number following printf conventions                
                <@param>
                    m fmt the format string                    
                </@param>
                <@param>
                    m x the int to print                    
                </@param>
            </javadoc>
            <method name="printf" type="void" line="190">
                <params>
                    <param name="fmt" type="String"/>
                    <param name="x" type="int"/>
                </params>
            </method>
            <javadoc line="194">
                prints a formatted number following printf conventions                
                <@param>
                    m fmt the format string                    
                </@param>
                <@param>
                    m x the long to print                    
                </@param>
            </javadoc>
            <method name="printf" type="void" line="200">
                <params>
                    <param name="fmt" type="String"/>
                    <param name="x" type="long"/>
                </params>
            </method>
            <javadoc line="204">
                prints a formatted number following printf conventions                
                <@param>
                    m fmt the format string                    
                </@param>
                <@param>
                    m x the character to print                    
                </@param>
            </javadoc>
            <method name="printf" type="void" line="210">
                <params>
                    <param name="fmt" type="String"/>
                    <param name="x" type="char"/>
                </params>
            </method>
            <javadoc line="214">
                prints a formatted number following printf conventions                
                <@param>
                    m fmt the format string                    
                </@param>
                <@param>
                    m x a string to print                    
                </@param>
            </javadoc>
            <method name="printf" type="void" line="220">
                <params>
                    <param name="fmt" type="String"/>
                    <param name="x" type="String"/>
                </params>
            </method>
            <javadoc line="224">
                Converts a string of digits (decimal, octal or hex) to an integer                
                <@param>
                    m s a string                    
                </@param>
                <@return>
                    n the numeric value of the prefix of s representing a base 10 integer                    
                </@return>
            </javadoc>
            <method name="atoi" type="int" line="230">
                <params>
                    <param name="s" type="String"/>
                </params>
            </method>
            <javadoc line="234">
                Converts a string of digits (decimal, octal or hex) to a long integer                
                <@param>
                    m s a string                    
                </@param>
                <@return>
                    n the numeric value of the prefix of s representing a base 10 integer                    
                </@return>
            </javadoc>
            <method name="atol" type="long" line="240">
                <params>
                    <param name="s" type="String"/>
                </params>
                <declaration name="i" type="int" line="241"/>
                <scope line="245"/>
            </method>
            <method name="parseLong" type="long" line="254">
                <params>
                    <param name="s" type="String"/>
                    <param name="base" type="int"/>
                </params>
                <declaration name="i" type="int" line="255"/>
                <declaration name="sign" type="int" line="256"/>
                <declaration name="r" type="long" line="257"/>
                <scope line="260"/>
                <scope line="261"/>
                <scope line="263">
                    <declaration name="ch" type="char" line="264"/>
                </scope>
            </method>
            <javadoc line="278">
                Converts a string of digits to a &lt;tt&gt;double&lt;/tt&gt;                
                <@param>
                    m s a string                    
                </@param>
            </javadoc>
            <method name="atof" type="double" line="283">
                <params>
                    <param name="s" type="String"/>
                </params>
                <comment line="284">
                    uble r = 0; // integer part                    
                </comment>
                <comment line="284">
                    uble f = 0; // fractional part                    
                </comment>
                <comment line="284">
                    uble p = 1; // exponent of fractional part                    
                </comment>
                <comment line="284">
                    t state = 0; // 0 = int part, 1 = frac part                    
                </comment>
                <declaration name="i" type="int" line="284"/>
                <declaration name="sign" type="int" line="285"/>
                <declaration name="r" type="double" line="286"/>
                <declaration name="f" type="double" line="287"/>
                <declaration name="p" type="double" line="288"/>
                <declaration name="state" type="int" line="289"/>
                <scope line="292"/>
                <scope line="293"/>
                <scope line="295">
                    <declaration name="ch" type="char" line="296"/>
                    <scope line="298">
                        <scope line="302"/>
                    </scope>
                    <scope line="308"/>
                    <scope line="313">
                        <declaration name="e" type="long" line="314"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="323">
                Formats a &lt;tt&gt;double&lt;/tt&gt; into a string (like sprintf in C)                
                <@param>
                    m x the number to format                    
                </@param>
                <@return>
                    n the formatted string                    
                </@return>
                <@exception>
                    n IllegalArgumentException if bad argument                    
                </@exception>
            </javadoc>
            <method name="format" type="String" line="330">
                <params>
                    <param name="x" type="double"/>
                </params>
                <declaration name="r" type="String" line="331"/>
                <declaration name="s" type="int" line="333"/>
                <scope line="334"/>
            </method>
            <javadoc line="346">
                Formats an integer into a string (like sprintf in C)                
                <@param>
                    m x the number to format                    
                </@param>
                <@return>
                    n the formatted string                    
                </@return>
            </javadoc>
            <method name="format" type="String" line="352">
                <params>
                    <param name="x" type="int"/>
                </params>
                <declaration name="lx" type="long" line="353"/>
            </method>
            <javadoc line="359">
                Formats a long integer into a string (like sprintf in C)                
                <@param>
                    m x the number to format                    
                </@param>
                <@return>
                    n the formatted string                    
                </@return>
            </javadoc>
            <method name="format" type="String" line="365">
                <params>
                    <param name="x" type="long"/>
                </params>
                <declaration name="r" type="String" line="366"/>
                <declaration name="s" type="int" line="367"/>
                <scope line="369">
                    <scope line="371"/>
                    <scope line="376"/>
                </scope>
            </method>
            <javadoc line="392">
                Formats a character into a string (like sprintf in C)                
                <@param>
                    m x the value to format                    
                </@param>
                <@return>
                    n the formatted string                    
                </@return>
            </javadoc>
            <method name="format" type="String" line="398">
                <params>
                    <param name="c" type="char"/>
                </params>
                <declaration name="r" type="String" line="402"/>
            </method>
            <javadoc line="406">
                Formats a string into a larger string (like sprintf in C)                
                <@param>
                    m x the value to format                    
                </@param>
                <@return>
                    n the formatted string                    
                </@return>
            </javadoc>
            <method name="format" type="String" line="412">
                <params>
                    <param name="s" type="String"/>
                </params>
            </method>
            <javadoc line="421">
                a test stub for the format class                
            </javadoc>
            <method name="main" type="void" line="425">
                <params>
                    <param name="a" type="String[]"/>
                </params>
                <comment line="426">
                    regression test to confirm fix of reported bugs                    
                </comment>
                <comment line="426">
                    rmat.printf(&quot;100 = |%e|\n&quot;, 100.0); // 2000-06-09                    
                </comment>
                <declaration name="x" type="double" line="426"/>
                <declaration name="y" type="double" line="427"/>
                <declaration name="z" type="double" line="428"/>
                <declaration name="w" type="double" line="429"/>
                <declaration name="u" type="double" line="430"/>
                <declaration name="v" type="double" line="431"/>
                <declaration name="d" type="int" line="432"/>
            </method>
            <method name="repeat" type="String" line="508">
                <params>
                    <param name="c" type="char"/>
                    <param name="n" type="int"/>
                </params>
                <declaration name="s" type="StringBuffer" line="510"/>
            </method>
            <method name="convert" type="String" line="516">
                <params>
                    <param name="x" type="long"/>
                    <param name="n" type="int"/>
                    <param name="m" type="int"/>
                    <param name="d" type="String"/>
                </params>
                <declaration name="r" type="String" line="518"/>
                <scope line="520"/>
            </method>
            <method name="pad" type="String" line="528">
                <params>
                    <param name="r" type="String"/>
                </params>
                <declaration name="p" type="String" line="529"/>
            </method>
            <method name="sign" type="String" line="535">
                <params>
                    <param name="s" type="int"/>
                    <param name="r" type="String"/>
                </params>
                <declaration name="p" type="String" line="536"/>
                <scope line="539"/>
                <scope line="544"/>
                <declaration name="w" type="int" line="549"/>
            </method>
            <method name="fixedFormat" type="String" line="559">
                <params>
                    <param name="d" type="double"/>
                </params>
                <comment line="560">
                    remove trailing zeroes and decimal point                    
                </comment>
                <comment line="560">
                    uble fr = d - whole; // fractional part                    
                </comment>
                <comment line="560">
                    (l &gt;= factor) { l = 0; whole++; } // CSH 10-25-97                    
                </comment>
                <declaration name="removeTrailing" type="boolean" line="560"/>
                <declaration name="whole" type="long" line="568"/>
                <declaration name="fr" type="double" line="569"/>
                <declaration name="factor" type="double" line="572"/>
                <declaration name="leadingZeroes" type="String" line="573"/>
                <scope line="575"/>
                <declaration name="l" type="long" line="579"/>
                <scope line="580"/>
                <declaration name="z" type="String" line="582"/>
                <scope line="586">
                    <declaration name="t" type="int" line="587"/>
                </scope>
            </method>
            <method name="expFormat" type="String" line="597">
                <params>
                    <param name="d" type="double"/>
                </params>
                <declaration name="f" type="String" line="598"/>
                <declaration name="e" type="int" line="599"/>
                <declaration name="dd" type="double" line="600"/>
                <declaration name="factor" type="double" line="601"/>
                <scope line="603">
                    <scope line="604"/>
                    <scope line="605"/>
                </scope>
                <declaration name="p" type="String" line="618"/>
                <scope line="620"/>
                <scope line="625"/>
            </method>
            <declaration name="width" type="int" line="633"/>
            <declaration name="precision" type="int" line="634"/>
            <declaration name="pre" type="String" line="635"/>
            <declaration name="post" type="String" line="636"/>
            <declaration name="leadingZeroes" type="boolean" line="637"/>
            <declaration name="showPlus" type="boolean" line="638"/>
            <declaration name="alternate" type="boolean" line="639"/>
            <declaration name="showSpace" type="boolean" line="640"/>
            <declaration name="leftAlign" type="boolean" line="641"/>
            <declaration name="fmt" type="char" line="642"/>
        </class>
    </source>