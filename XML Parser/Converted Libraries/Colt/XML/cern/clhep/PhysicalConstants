<?xml version="1.0" encoding="UTF-8"?>
    <source package="cern.clhep">
        <class name="PhysicalConstants" extends="Object" line="11">
            <comment line="12">
                                
            </comment>
            <comment line="12">
                                
            </comment>
            <comment line="12">
                                
            </comment>
            <comment line="12">
                blic static final double     pi  = Math.PI; //3.14159265358979323846;                
            </comment>
            <comment line="12">
                                
            </comment>
            <comment line="12">
                                
            </comment>
            <comment line="12">
                                
            </comment>
            <comment line="12">
                                
            </comment>
            <comment line="12">
                c   = 299.792458 mm/ns                
            </comment>
            <comment line="12">
                c^2 = 898.7404 (mm/ns)^2                
            </comment>
            <comment line="12">
                                
            </comment>
            <comment line="12">
                                
            </comment>
            <comment line="12">
                h     = 4.13566e-12 MeV*ns                
            </comment>
            <comment line="12">
                hbar  = 6.58212e-13 MeV*ns                
            </comment>
            <comment line="12">
                hbarc = 197.32705e-12 MeV*mm                
            </comment>
            <comment line="12">
                                
            </comment>
            <comment line="12">
                                
            </comment>
            <comment line="12">
                                
            </comment>
            <comment line="12">
                                
            </comment>
            <comment line="12">
                blic static final double electron_charge = - Units.eplus; // see SystemOfUnits.h                
            </comment>
            <comment line="12">
                                
            </comment>
            <comment line="12">
                amu_c2 - atomic equivalent mass unit                
            </comment>
            <comment line="12">
                amu    - atomic mass unit                
            </comment>
            <comment line="12">
                                
            </comment>
            <comment line="12">
                                
            </comment>
            <comment line="12">
                permeability of free space mu0    = 2.01334e-16 Mev*(ns*eplus)^2/mm                
            </comment>
            <comment line="12">
                permittivity of free space epsil0 = 5.52636e+10 eplus^2/(MeV*mm)                
            </comment>
            <comment line="12">
                                
            </comment>
            <comment line="12">
                                
            </comment>
            <comment line="12">
                electromagnetic coupling = 1.43996e-12 MeV*mm/(eplus^2)                
            </comment>
            <comment line="12">
                                
            </comment>
            <comment line="12">
                                
            </comment>
            <comment line="12">
                                
            </comment>
            <comment line="12">
                                
            </comment>
            <comment line="12">
                                
            </comment>
            <comment line="12">
                                
            </comment>
            <comment line="12">
                                
            </comment>
            <comment line="12">
                                
            </comment>
            <comment line="12">
                                
            </comment>
            <comment line="12">
                                
            </comment>
            <javadoc line="11">
                High Energy Physics coherent Physical Constants.
                 * This class is a Java port of the &lt;a href=&quot;http://wwwinfo.cern.ch/asd/lhc++/clhep/manual/RefGuide/Units/PhysicalConstants_h.html&quot;&gt;C++ version&lt;/a&gt; found in &lt;a href=&quot;http://wwwinfo.cern.ch/asd/lhc++/clhep&quot;&gt;CLHEP 1.4.0&lt;/a&gt;, which in turn has been provided by Geant4 (a simulation toolkit for HEP).
                 * &lt;p&gt;
                 * For aliasing see {@link #physicalConstants}.                
                <@author>
                    r wolfgang.hoschek@cern.ch                    
                </@author>
                <@version>
                    n 1.0, 09/24/99                    
                </@version>
            </javadoc>
            <declaration name="physicalConstants" type="PhysicalConstants" line="21"/>
            <javadoc line="21">
                Little trick to allow for &quot;aliasing&quot;, that is, renaming this class.
                 * Normally you would write
                 * &lt;pre&gt;
                 * PhysicalConstants.twopi;
                 * PhysicalConstants.c_light;
                 * PhysicalConstants.h_Planck;
                 * &lt;/pre&gt;
                 * Since this class has only static methods, but no instance methods
                 * you can also shorten the name &quot;PhysicalConstants&quot; to a name that better suits you, for example &quot;P&quot;.
                 * &lt;pre&gt;
                 * PhysicalConstants P = PhysicalConstants.physicalConstants; // kind of &quot;alias&quot;
                 * P.twopi;
                 * P.c_light;
                 * P.h_Planck;
                 * &lt;/pre&gt;                
            </javadoc>
            <declaration name="pi" type="double" line="43"/>
            <declaration name="twopi" type="double" line="44"/>
            <declaration name="halfpi" type="double" line="45"/>
            <declaration name="pi2" type="double" line="46"/>
            <declaration name="Avogadro" type="double" line="51"/>
            <declaration name="c_light" type="double" line="57"/>
            <declaration name="c_squared" type="double" line="58"/>
            <declaration name="h_Planck" type="double" line="65"/>
            <declaration name="hbar_Planck" type="double" line="66"/>
            <declaration name="hbarc" type="double" line="67"/>
            <declaration name="hbarc_squared" type="double" line="68"/>
            <declaration name="electron_charge" type="double" line="73"/>
            <declaration name="e_squared" type="double" line="74"/>
            <declaration name="electron_mass_c2" type="double" line="80"/>
            <declaration name="proton_mass_c2" type="double" line="81"/>
            <declaration name="neutron_mass_c2" type="double" line="82"/>
            <declaration name="amu_c2" type="double" line="83"/>
            <declaration name="amu" type="double" line="84"/>
            <declaration name="mu0" type="double" line="90"/>
            <declaration name="epsilon0" type="double" line="91"/>
            <declaration name="elm_coupling" type="double" line="96"/>
            <declaration name="fine_structure_const" type="double" line="97"/>
            <declaration name="classic_electr_radius" type="double" line="98"/>
            <declaration name="electron_Compton_length" type="double" line="99"/>
            <declaration name="Bohr_radius" type="double" line="100"/>
            <declaration name="alpha_rcl2" type="double" line="102"/>
            <declaration name="twopi_mc2_rcl2" type="double" line="106"/>
            <declaration name="k_Boltzmann" type="double" line="112"/>
            <declaration name="STP_Temperature" type="double" line="117"/>
            <declaration name="STP_Pressure" type="double" line="118"/>
            <declaration name="kGasThreshold" type="double" line="119"/>
            <declaration name="universe_mean_density" type="double" line="124"/>
            <javadoc line="125">
                Makes this class non instantiable, but still let&apos;s others inherit from it.                
            </javadoc>
            <method name="PhysicalConstants" type="constructor" line="128"/>
        </class>
    </source>