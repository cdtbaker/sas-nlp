<?xml version="1.0" encoding="UTF-8"?>
    <source package="cern.jet.math">
        <import package="cern.colt.function.IntFunction"/>
        <import package="cern.colt.function.IntIntFunction"/>
        <import package="cern.colt.function.IntIntProcedure"/>
        <import package="cern.colt.function.IntProcedure"/>
        <class name="IntFunctions" line="15">
            <extends class="Object"/>
            <comment line="16">
                &lt;H3&gt;Unary functions&lt;H3&gt;                
            </comment>
            <comment line="16">
                &lt;H3&gt;Binary functions&lt;H3&gt;                
            </comment>
            <javadoc line="15">
                Integer Function objects to be passed to generic methods.
                  Same as {@link Functions} except operating on integers.
                  &lt;p&gt;
                  For aliasing see {@link #intFunctions}.                
                <@author>
                    r wolfgang.hoschek@cern.ch                    
                </@author>
                <@version>
                    n 1.0, 09/24/99                    
                </@version>
            </javadoc>
            <declaration name="intFunctions" type="IntFunctions" line="25"/>
            <javadoc line="25">
                Little trick to allow for &quot;aliasing&quot;, that is, renaming this class.
                  Writing code like
                  &lt;p&gt;
                  &lt;tt&gt;IntFunctions.chain(IntFunctions.plus,IntFunctions.mult(3),IntFunctions.chain(IntFunctions.square,IntFunctions.div(2)));&lt;/tt&gt;
                  &lt;p&gt;
                  is a bit awkward, to say the least.
                  Using the aliasing you can instead write
                  &lt;p&gt;
                  &lt;tt&gt;IntFunctions F = IntFunctions.intFunctions; &lt;br&gt;
                  F.chain(F.plus,F.mult(3),F.chain(F.square,F.div(2)));&lt;/tt&gt;
                  &lt;p&gt;                
            </javadoc>
            <declaration name="abs" type="IntFunction" line="43"/>
            <javadoc line="43">
                Function that returns &lt;tt&gt;Math.abs(a) == (a &lt; 0) ? -a : a&lt;/tt&gt;.                
            </javadoc>
            <anonymous_class line="46">
                <method name="apply" type="int" line="47">
                    <params>
                        <param name="a" type="int"/>
                    </params>
                </method>
            </anonymous_class>
            <declaration name="dec" type="IntFunction" line="50"/>
            <javadoc line="50">
                Function that returns &lt;tt&gt;a--&lt;/tt&gt;.                
            </javadoc>
            <anonymous_class line="53">
                <method name="apply" type="int" line="54">
                    <params>
                        <param name="a" type="int"/>
                    </params>
                </method>
            </anonymous_class>
            <declaration name="factorial" type="IntFunction" line="57"/>
            <javadoc line="57">
                Function that returns &lt;tt&gt;(int) Arithmetic.factorial(a)&lt;/tt&gt;.                
            </javadoc>
            <anonymous_class line="60">
                <method name="apply" type="int" line="61">
                    <params>
                        <param name="a" type="int"/>
                    </params>
                </method>
            </anonymous_class>
            <declaration name="identity" type="IntFunction" line="64"/>
            <javadoc line="64">
                Function that returns its argument.                
            </javadoc>
            <anonymous_class line="67">
                <method name="apply" type="int" line="68">
                    <params>
                        <param name="a" type="int"/>
                    </params>
                </method>
            </anonymous_class>
            <declaration name="inc" type="IntFunction" line="71"/>
            <javadoc line="71">
                Function that returns &lt;tt&gt;a++&lt;/tt&gt;.                
            </javadoc>
            <anonymous_class line="74">
                <method name="apply" type="int" line="75">
                    <params>
                        <param name="a" type="int"/>
                    </params>
                </method>
            </anonymous_class>
            <declaration name="neg" type="IntFunction" line="78"/>
            <javadoc line="78">
                Function that returns &lt;tt&gt;-a&lt;/tt&gt;.                
            </javadoc>
            <anonymous_class line="81">
                <method name="apply" type="int" line="82">
                    <params>
                        <param name="a" type="int"/>
                    </params>
                </method>
            </anonymous_class>
            <declaration name="not" type="IntFunction" line="85"/>
            <javadoc line="85">
                Function that returns &lt;tt&gt;~a&lt;/tt&gt;.                
            </javadoc>
            <anonymous_class line="88">
                <method name="apply" type="int" line="89">
                    <params>
                        <param name="a" type="int"/>
                    </params>
                </method>
            </anonymous_class>
            <declaration name="sign" type="IntFunction" line="92"/>
            <javadoc line="92">
                Function that returns &lt;tt&gt;a &lt; 0 ? -1 : a &gt; 0 ? 1 : 0&lt;/tt&gt;.                
            </javadoc>
            <anonymous_class line="95">
                <method name="apply" type="int" line="96">
                    <params>
                        <param name="a" type="int"/>
                    </params>
                </method>
            </anonymous_class>
            <declaration name="square" type="IntFunction" line="99"/>
            <javadoc line="99">
                Function that returns &lt;tt&gt;a  a&lt;/tt&gt;.                
            </javadoc>
            <anonymous_class line="102">
                <method name="apply" type="int" line="103">
                    <params>
                        <param name="a" type="int"/>
                    </params>
                </method>
            </anonymous_class>
            <declaration name="and" type="IntIntFunction" line="115"/>
            <javadoc line="115">
                Function that returns &lt;tt&gt;a &amp; b&lt;/tt&gt;.                
            </javadoc>
            <anonymous_class line="118">
                <method name="apply" type="int" line="119">
                    <params>
                        <param name="a" type="int"/>
                        <param name="b" type="int"/>
                    </params>
                </method>
            </anonymous_class>
            <declaration name="compare" type="IntIntFunction" line="122"/>
            <javadoc line="122">
                Function that returns &lt;tt&gt;a &lt; b ? -1 : a &gt; b ? 1 : 0&lt;/tt&gt;.                
            </javadoc>
            <anonymous_class line="125">
                <method name="apply" type="int" line="126">
                    <params>
                        <param name="a" type="int"/>
                        <param name="b" type="int"/>
                    </params>
                </method>
            </anonymous_class>
            <declaration name="div" type="IntIntFunction" line="129"/>
            <javadoc line="129">
                Function that returns &lt;tt&gt;a / b&lt;/tt&gt;.                
            </javadoc>
            <anonymous_class line="132">
                <method name="apply" type="int" line="133">
                    <params>
                        <param name="a" type="int"/>
                        <param name="b" type="int"/>
                    </params>
                </method>
            </anonymous_class>
            <declaration name="equals" type="IntIntFunction" line="136"/>
            <javadoc line="136">
                Function that returns &lt;tt&gt;a == b ? 1 : 0&lt;/tt&gt;.                
            </javadoc>
            <anonymous_class line="139">
                <method name="apply" type="int" line="140">
                    <params>
                        <param name="a" type="int"/>
                        <param name="b" type="int"/>
                    </params>
                </method>
            </anonymous_class>
            <declaration name="isEqual" type="IntIntProcedure" line="143"/>
            <javadoc line="143">
                Function that returns &lt;tt&gt;a == b&lt;/tt&gt;.                
            </javadoc>
            <anonymous_class line="146">
                <method name="apply" type="boolean" line="147">
                    <params>
                        <param name="a" type="int"/>
                        <param name="b" type="int"/>
                    </params>
                </method>
            </anonymous_class>
            <declaration name="isLess" type="IntIntProcedure" line="150"/>
            <javadoc line="150">
                Function that returns &lt;tt&gt;a &lt; b&lt;/tt&gt;.                
            </javadoc>
            <anonymous_class line="153">
                <method name="apply" type="boolean" line="154">
                    <params>
                        <param name="a" type="int"/>
                        <param name="b" type="int"/>
                    </params>
                </method>
            </anonymous_class>
            <declaration name="isGreater" type="IntIntProcedure" line="157"/>
            <javadoc line="157">
                Function that returns &lt;tt&gt;a &gt; b&lt;/tt&gt;.                
            </javadoc>
            <anonymous_class line="160">
                <method name="apply" type="boolean" line="161">
                    <params>
                        <param name="a" type="int"/>
                        <param name="b" type="int"/>
                    </params>
                </method>
            </anonymous_class>
            <declaration name="max" type="IntIntFunction" line="164"/>
            <javadoc line="164">
                Function that returns &lt;tt&gt;Math.max(a,b)&lt;/tt&gt;.                
            </javadoc>
            <anonymous_class line="167">
                <method name="apply" type="int" line="168">
                    <params>
                        <param name="a" type="int"/>
                        <param name="b" type="int"/>
                    </params>
                </method>
            </anonymous_class>
            <declaration name="min" type="IntIntFunction" line="171"/>
            <javadoc line="171">
                Function that returns &lt;tt&gt;Math.min(a,b)&lt;/tt&gt;.                
            </javadoc>
            <anonymous_class line="174">
                <method name="apply" type="int" line="175">
                    <params>
                        <param name="a" type="int"/>
                        <param name="b" type="int"/>
                    </params>
                </method>
            </anonymous_class>
            <declaration name="minus" type="IntIntFunction" line="178"/>
            <javadoc line="178">
                Function that returns &lt;tt&gt;a - b&lt;/tt&gt;.                
            </javadoc>
            <anonymous_class line="181">
                <method name="apply" type="int" line="182">
                    <params>
                        <param name="a" type="int"/>
                        <param name="b" type="int"/>
                    </params>
                </method>
            </anonymous_class>
            <declaration name="mod" type="IntIntFunction" line="185"/>
            <javadoc line="185">
                Function that returns &lt;tt&gt;a % b&lt;/tt&gt;.                
            </javadoc>
            <anonymous_class line="188">
                <method name="apply" type="int" line="189">
                    <params>
                        <param name="a" type="int"/>
                        <param name="b" type="int"/>
                    </params>
                </method>
            </anonymous_class>
            <declaration name="mult" type="IntIntFunction" line="192"/>
            <javadoc line="192">
                Function that returns &lt;tt&gt;a  b&lt;/tt&gt;.                
            </javadoc>
            <anonymous_class line="195">
                <method name="apply" type="int" line="196">
                    <params>
                        <param name="a" type="int"/>
                        <param name="b" type="int"/>
                    </params>
                </method>
            </anonymous_class>
            <declaration name="or" type="IntIntFunction" line="199"/>
            <javadoc line="199">
                Function that returns &lt;tt&gt;a | b&lt;/tt&gt;.                
            </javadoc>
            <anonymous_class line="202">
                <method name="apply" type="int" line="203">
                    <params>
                        <param name="a" type="int"/>
                        <param name="b" type="int"/>
                    </params>
                </method>
            </anonymous_class>
            <declaration name="plus" type="IntIntFunction" line="206"/>
            <javadoc line="206">
                Function that returns &lt;tt&gt;a + b&lt;/tt&gt;.                
            </javadoc>
            <anonymous_class line="209">
                <method name="apply" type="int" line="210">
                    <params>
                        <param name="a" type="int"/>
                        <param name="b" type="int"/>
                    </params>
                </method>
            </anonymous_class>
            <declaration name="pow" type="IntIntFunction" line="213"/>
            <javadoc line="213">
                Function that returns &lt;tt&gt;(int) Math.pow(a,b)&lt;/tt&gt;.                
            </javadoc>
            <anonymous_class line="216">
                <method name="apply" type="int" line="217">
                    <params>
                        <param name="a" type="int"/>
                        <param name="b" type="int"/>
                    </params>
                </method>
            </anonymous_class>
            <declaration name="shiftLeft" type="IntIntFunction" line="220"/>
            <javadoc line="220">
                Function that returns &lt;tt&gt;a &lt;&lt; b&lt;/tt&gt;.                
            </javadoc>
            <anonymous_class line="223">
                <method name="apply" type="int" line="224">
                    <params>
                        <param name="a" type="int"/>
                        <param name="b" type="int"/>
                    </params>
                </method>
            </anonymous_class>
            <declaration name="shiftRightSigned" type="IntIntFunction" line="228"/>
            <javadoc line="228">
                Function that returns &lt;tt&gt;a &gt;&gt; b&lt;/tt&gt;.                
            </javadoc>
            <anonymous_class line="231">
                <method name="apply" type="int" line="232">
                    <params>
                        <param name="a" type="int"/>
                        <param name="b" type="int"/>
                    </params>
                </method>
            </anonymous_class>
            <declaration name="shiftRightUnsigned" type="IntIntFunction" line="235"/>
            <javadoc line="235">
                Function that returns &lt;tt&gt;a &gt;&gt;&gt; b&lt;/tt&gt;.                
            </javadoc>
            <anonymous_class line="238">
                <method name="apply" type="int" line="239">
                    <params>
                        <param name="a" type="int"/>
                        <param name="b" type="int"/>
                    </params>
                </method>
            </anonymous_class>
            <declaration name="xor" type="IntIntFunction" line="242"/>
            <javadoc line="242">
                Function that returns &lt;tt&gt;a ^ b&lt;/tt&gt;.                
            </javadoc>
            <anonymous_class line="245">
                <method name="apply" type="int" line="246">
                    <params>
                        <param name="a" type="int"/>
                        <param name="b" type="int"/>
                    </params>
                </method>
            </anonymous_class>
            <javadoc line="249">
                Makes this class non instantiable, but still let&apos;s others inherit from it.                
            </javadoc>
            <method name="IntFunctions" type="constructor" line="252"/>
            <javadoc line="253">
                Constructs a function that returns &lt;tt&gt;a &amp; b&lt;/tt&gt;.
                  &lt;tt&gt;a&lt;/tt&gt; is a variable, &lt;tt&gt;b&lt;/tt&gt; is fixed.                
            </javadoc>
            <method name="and" type="IntFunction" line="257">
                <params>
                    <param name="b" type="int"/>
                </params>
                <anonymous_class line="258">
                    <method name="apply" type="int" line="259">
                        <params>
                            <param name="a" type="int"/>
                        </params>
                    </method>
                </anonymous_class>
            </method>
            <javadoc line="262">
                Constructs a function that returns &lt;tt&gt;(from&lt;=a &amp;&amp; a&lt;=to) ? 1 : 0&lt;/tt&gt;.
                  &lt;tt&gt;a&lt;/tt&gt; is a variable, &lt;tt&gt;from&lt;/tt&gt; and &lt;tt&gt;to&lt;/tt&gt; are fixed.                
            </javadoc>
            <method name="between" type="IntFunction" line="266">
                <params>
                    <param name="from" type="int"/>
                    <param name="to" type="int"/>
                </params>
                <anonymous_class line="267">
                    <method name="apply" type="int" line="268">
                        <params>
                            <param name="a" type="int"/>
                        </params>
                    </method>
                </anonymous_class>
            </method>
            <javadoc line="271">
                Constructs a unary function from a binary function with the first operand (argument) fixed to the given constant &lt;tt&gt;c&lt;/tt&gt;.
                  The second operand is variable (free).                
                <@param>
                    m function a binary function taking operands in the form <tt>function.apply(c,var)</tt>.                    
                </@param>
                <@return>
                    n the unary function <tt>function(c,var)</tt>.                    
                </@return>
            </javadoc>
            <method name="bindArg1" type="IntFunction" line="278">
                <params>
                    <param name="function" type="IntIntFunction"/>
                    <param name="c" type="int"/>
                </params>
                <anonymous_class line="279">
                    <method name="apply" type="int" line="280">
                        <params>
                            <param name="var" type="int"/>
                        </params>
                    </method>
                </anonymous_class>
            </method>
            <javadoc line="283">
                Constructs a unary function from a binary function with the second operand (argument) fixed to the given constant &lt;tt&gt;c&lt;/tt&gt;.
                  The first operand is variable (free).                
                <@param>
                    m function a binary function taking operands in the form <tt>function.apply(var,c)</tt>.                    
                </@param>
                <@return>
                    n the unary function <tt>function(var,c)</tt>.                    
                </@return>
            </javadoc>
            <method name="bindArg2" type="IntFunction" line="290">
                <params>
                    <param name="function" type="IntIntFunction"/>
                    <param name="c" type="int"/>
                </params>
                <anonymous_class line="291">
                    <method name="apply" type="int" line="292">
                        <params>
                            <param name="var" type="int"/>
                        </params>
                    </method>
                </anonymous_class>
            </method>
            <javadoc line="295">
                Constructs the function &lt;tt&gt;g( h(a) )&lt;/tt&gt;.                
                <@param>
                    m g a unary function.                    
                </@param>
                <@param>
                    m h a unary function.                    
                </@param>
                <@return>
                    n the unary function <tt>g( h(a) )</tt>.                    
                </@return>
            </javadoc>
            <method name="chain" type="IntFunction" line="302">
                <params>
                    <param name="g" type="IntFunction"/>
                    <param name="h" type="IntFunction"/>
                </params>
                <anonymous_class line="303">
                    <method name="apply" type="int" line="304">
                        <params>
                            <param name="a" type="int"/>
                        </params>
                    </method>
                </anonymous_class>
            </method>
            <javadoc line="307">
                Constructs the function &lt;tt&gt;g( h(a,b) )&lt;/tt&gt;.                
                <@param>
                    m g a unary function.                    
                </@param>
                <@param>
                    m h a binary function.                    
                </@param>
                <@return>
                    n the unary function <tt>g( h(a,b) )</tt>.                    
                </@return>
            </javadoc>
            <method name="chain" type="IntIntFunction" line="314">
                <params>
                    <param name="g" type="IntFunction"/>
                    <param name="h" type="IntIntFunction"/>
                </params>
                <anonymous_class line="315">
                    <method name="apply" type="int" line="316">
                        <params>
                            <param name="a" type="int"/>
                            <param name="b" type="int"/>
                        </params>
                    </method>
                </anonymous_class>
            </method>
            <javadoc line="319">
                Constructs the function &lt;tt&gt;f( g(a), h(b) )&lt;/tt&gt;.                
                <@param>
                    m f a binary function.                    
                </@param>
                <@param>
                    m g a unary function.                    
                </@param>
                <@param>
                    m h a unary function.                    
                </@param>
                <@return>
                    n the binary function <tt>f( g(a), h(b) )</tt>.                    
                </@return>
            </javadoc>
            <method name="chain" type="IntIntFunction" line="327">
                <params>
                    <param name="f" type="IntIntFunction"/>
                    <param name="g" type="IntFunction"/>
                    <param name="h" type="IntFunction"/>
                </params>
                <anonymous_class line="328">
                    <method name="apply" type="int" line="329">
                        <params>
                            <param name="a" type="int"/>
                            <param name="b" type="int"/>
                        </params>
                    </method>
                </anonymous_class>
            </method>
            <javadoc line="332">
                Constructs a function that returns &lt;tt&gt;a &lt; b ? -1 : a &gt; b ? 1 : 0&lt;/tt&gt;.
                  &lt;tt&gt;a&lt;/tt&gt; is a variable, &lt;tt&gt;b&lt;/tt&gt; is fixed.                
            </javadoc>
            <method name="compare" type="IntFunction" line="336">
                <params>
                    <param name="b" type="int"/>
                </params>
                <anonymous_class line="337">
                    <method name="apply" type="int" line="338">
                        <params>
                            <param name="a" type="int"/>
                        </params>
                    </method>
                </anonymous_class>
            </method>
            <javadoc line="341">
                Constructs a function that returns the constant &lt;tt&gt;c&lt;/tt&gt;.                
            </javadoc>
            <method name="constant" type="IntFunction" line="344">
                <params>
                    <param name="c" type="int"/>
                </params>
                <anonymous_class line="345">
                    <method name="apply" type="int" line="346">
                        <params>
                            <param name="a" type="int"/>
                        </params>
                    </method>
                </anonymous_class>
            </method>
            <javadoc line="349">
                Constructs a function that returns &lt;tt&gt;a / b&lt;/tt&gt;.
                  &lt;tt&gt;a&lt;/tt&gt; is a variable, &lt;tt&gt;b&lt;/tt&gt; is fixed.                
            </javadoc>
            <method name="div" type="IntFunction" line="353">
                <params>
                    <param name="b" type="int"/>
                </params>
                <anonymous_class line="354">
                    <method name="apply" type="int" line="355">
                        <params>
                            <param name="a" type="int"/>
                        </params>
                    </method>
                </anonymous_class>
            </method>
            <javadoc line="358">
                Constructs a function that returns &lt;tt&gt;a == b ? 1 : 0&lt;/tt&gt;.
                  &lt;tt&gt;a&lt;/tt&gt; is a variable, &lt;tt&gt;b&lt;/tt&gt; is fixed.                
            </javadoc>
            <method name="equals" type="IntFunction" line="362">
                <params>
                    <param name="b" type="int"/>
                </params>
                <anonymous_class line="363">
                    <method name="apply" type="int" line="364">
                        <params>
                            <param name="a" type="int"/>
                        </params>
                    </method>
                </anonymous_class>
            </method>
            <javadoc line="367">
                Constructs a function that returns &lt;tt&gt;from&lt;=a &amp;&amp; a&lt;=to&lt;/tt&gt;.
                  &lt;tt&gt;a&lt;/tt&gt; is a variable, &lt;tt&gt;from&lt;/tt&gt; and &lt;tt&gt;to&lt;/tt&gt; are fixed.                
            </javadoc>
            <method name="isBetween" type="IntProcedure" line="371">
                <params>
                    <param name="from" type="int"/>
                    <param name="to" type="int"/>
                </params>
                <anonymous_class line="372">
                    <method name="apply" type="boolean" line="373">
                        <params>
                            <param name="a" type="int"/>
                        </params>
                    </method>
                </anonymous_class>
            </method>
            <javadoc line="376">
                Constructs a function that returns &lt;tt&gt;a == b&lt;/tt&gt;.
                  &lt;tt&gt;a&lt;/tt&gt; is a variable, &lt;tt&gt;b&lt;/tt&gt; is fixed.                
            </javadoc>
            <method name="isEqual" type="IntProcedure" line="380">
                <params>
                    <param name="b" type="int"/>
                </params>
                <anonymous_class line="381">
                    <method name="apply" type="boolean" line="382">
                        <params>
                            <param name="a" type="int"/>
                        </params>
                    </method>
                </anonymous_class>
            </method>
            <javadoc line="385">
                Constructs a function that returns &lt;tt&gt;a &gt; b&lt;/tt&gt;.
                  &lt;tt&gt;a&lt;/tt&gt; is a variable, &lt;tt&gt;b&lt;/tt&gt; is fixed.                
            </javadoc>
            <method name="isGreater" type="IntProcedure" line="389">
                <params>
                    <param name="b" type="int"/>
                </params>
                <anonymous_class line="390">
                    <method name="apply" type="boolean" line="391">
                        <params>
                            <param name="a" type="int"/>
                        </params>
                    </method>
                </anonymous_class>
            </method>
            <javadoc line="394">
                Constructs a function that returns &lt;tt&gt;a &lt; b&lt;/tt&gt;.
                  &lt;tt&gt;a&lt;/tt&gt; is a variable, &lt;tt&gt;b&lt;/tt&gt; is fixed.                
            </javadoc>
            <method name="isLess" type="IntProcedure" line="398">
                <params>
                    <param name="b" type="int"/>
                </params>
                <anonymous_class line="399">
                    <method name="apply" type="boolean" line="400">
                        <params>
                            <param name="a" type="int"/>
                        </params>
                    </method>
                </anonymous_class>
            </method>
            <javadoc line="403">
                Constructs a function that returns &lt;tt&gt;Math.max(a,b)&lt;/tt&gt;.
                  &lt;tt&gt;a&lt;/tt&gt; is a variable, &lt;tt&gt;b&lt;/tt&gt; is fixed.                
            </javadoc>
            <method name="max" type="IntFunction" line="407">
                <params>
                    <param name="b" type="int"/>
                </params>
                <anonymous_class line="408">
                    <method name="apply" type="int" line="409">
                        <params>
                            <param name="a" type="int"/>
                        </params>
                    </method>
                </anonymous_class>
            </method>
            <javadoc line="412">
                Constructs a function that returns &lt;tt&gt;Math.min(a,b)&lt;/tt&gt;.
                  &lt;tt&gt;a&lt;/tt&gt; is a variable, &lt;tt&gt;b&lt;/tt&gt; is fixed.                
            </javadoc>
            <method name="min" type="IntFunction" line="416">
                <params>
                    <param name="b" type="int"/>
                </params>
                <anonymous_class line="417">
                    <method name="apply" type="int" line="418">
                        <params>
                            <param name="a" type="int"/>
                        </params>
                    </method>
                </anonymous_class>
            </method>
            <javadoc line="421">
                Constructs a function that returns &lt;tt&gt;a - b&lt;/tt&gt;.
                  &lt;tt&gt;a&lt;/tt&gt; is a variable, &lt;tt&gt;b&lt;/tt&gt; is fixed.                
            </javadoc>
            <method name="minus" type="IntFunction" line="425">
                <params>
                    <param name="b" type="int"/>
                </params>
                <anonymous_class line="426">
                    <method name="apply" type="int" line="427">
                        <params>
                            <param name="a" type="int"/>
                        </params>
                    </method>
                </anonymous_class>
            </method>
            <javadoc line="430">
                Constructs a function that returns &lt;tt&gt;a % b&lt;/tt&gt;.
                  &lt;tt&gt;a&lt;/tt&gt; is a variable, &lt;tt&gt;b&lt;/tt&gt; is fixed.                
            </javadoc>
            <method name="mod" type="IntFunction" line="434">
                <params>
                    <param name="b" type="int"/>
                </params>
                <anonymous_class line="435">
                    <method name="apply" type="int" line="436">
                        <params>
                            <param name="a" type="int"/>
                        </params>
                    </method>
                </anonymous_class>
            </method>
            <javadoc line="439">
                Constructs a function that returns &lt;tt&gt;a  b&lt;/tt&gt;.
                  &lt;tt&gt;a&lt;/tt&gt; is a variable, &lt;tt&gt;b&lt;/tt&gt; is fixed.                
            </javadoc>
            <method name="mult" type="IntFunction" line="443">
                <params>
                    <param name="b" type="int"/>
                </params>
                <anonymous_class line="444">
                    <method name="apply" type="int" line="445">
                        <params>
                            <param name="a" type="int"/>
                        </params>
                    </method>
                </anonymous_class>
            </method>
            <javadoc line="448">
                Constructs a function that returns &lt;tt&gt;a | b&lt;/tt&gt;.
                  &lt;tt&gt;a&lt;/tt&gt; is a variable, &lt;tt&gt;b&lt;/tt&gt; is fixed.                
            </javadoc>
            <method name="or" type="IntFunction" line="452">
                <params>
                    <param name="b" type="int"/>
                </params>
                <anonymous_class line="453">
                    <method name="apply" type="int" line="454">
                        <params>
                            <param name="a" type="int"/>
                        </params>
                    </method>
                </anonymous_class>
            </method>
            <javadoc line="457">
                Constructs a function that returns &lt;tt&gt;a + b&lt;/tt&gt;.
                  &lt;tt&gt;a&lt;/tt&gt; is a variable, &lt;tt&gt;b&lt;/tt&gt; is fixed.                
            </javadoc>
            <method name="plus" type="IntFunction" line="461">
                <params>
                    <param name="b" type="int"/>
                </params>
                <anonymous_class line="462">
                    <method name="apply" type="int" line="463">
                        <params>
                            <param name="a" type="int"/>
                        </params>
                    </method>
                </anonymous_class>
            </method>
            <javadoc line="466">
                Constructs a function that returns &lt;tt&gt;(int) Math.pow(a,b)&lt;/tt&gt;.
                  &lt;tt&gt;a&lt;/tt&gt; is a variable, &lt;tt&gt;b&lt;/tt&gt; is fixed.                
            </javadoc>
            <method name="pow" type="IntFunction" line="470">
                <params>
                    <param name="b" type="int"/>
                </params>
                <anonymous_class line="471">
                    <method name="apply" type="int" line="472">
                        <params>
                            <param name="a" type="int"/>
                        </params>
                    </method>
                </anonymous_class>
            </method>
            <javadoc line="475">
                Constructs a function that returns a 32 bit uniformly distributed random number in the closed interval &lt;tt&gt;[Integer.MIN_VALUE,Integer.MAX_VALUE]&lt;/tt&gt; (including &lt;tt&gt;Integer.MIN_VALUE&lt;/tt&gt; and &lt;tt&gt;Integer.MAX_VALUE&lt;/tt&gt;).
                  Currently the engine is {@link cern.jet.random.engine.MersenneTwister}and is seeded with the current time.
                  &lt;p&gt;
                  Note that any random engine derived from {@link cern.jet.random.engine.RandomEngine} and any random distribution derived from {@link cern.jet.random.AbstractDistribution} are function objects, because they implement the proper interfaces.
                  Thus, if you are not happy with the default, just pass your favourite random generator to function evaluating methods.                
            </javadoc>
            <method name="random" type="IntFunction" line="483"/>
            <javadoc line="486">
                Constructs a function that returns &lt;tt&gt;a &lt;&lt; b&lt;/tt&gt;.
                  &lt;tt&gt;a&lt;/tt&gt; is a variable, &lt;tt&gt;b&lt;/tt&gt; is fixed.                
            </javadoc>
            <method name="shiftLeft" type="IntFunction" line="490">
                <params>
                    <param name="b" type="int"/>
                </params>
                <anonymous_class line="491">
                    <method name="apply" type="int" line="492">
                        <params>
                            <param name="a" type="int"/>
                        </params>
                    </method>
                </anonymous_class>
            </method>
            <javadoc line="495">
                Constructs a function that returns &lt;tt&gt;a &gt;&gt; b&lt;/tt&gt;.
                  &lt;tt&gt;a&lt;/tt&gt; is a variable, &lt;tt&gt;b&lt;/tt&gt; is fixed.                
            </javadoc>
            <method name="shiftRightSigned" type="IntFunction" line="499">
                <params>
                    <param name="b" type="int"/>
                </params>
                <anonymous_class line="500">
                    <method name="apply" type="int" line="501">
                        <params>
                            <param name="a" type="int"/>
                        </params>
                    </method>
                </anonymous_class>
            </method>
            <javadoc line="504">
                Constructs a function that returns &lt;tt&gt;a &gt;&gt;&gt; b&lt;/tt&gt;.
                  &lt;tt&gt;a&lt;/tt&gt; is a variable, &lt;tt&gt;b&lt;/tt&gt; is fixed.                
            </javadoc>
            <method name="shiftRightUnsigned" type="IntFunction" line="508">
                <params>
                    <param name="b" type="int"/>
                </params>
                <anonymous_class line="509">
                    <method name="apply" type="int" line="510">
                        <params>
                            <param name="a" type="int"/>
                        </params>
                    </method>
                </anonymous_class>
            </method>
            <javadoc line="513">
                Constructs a function that returns &lt;tt&gt;function.apply(b,a)&lt;/tt&gt;, i.e. applies the function with the first operand as second operand and the second operand as first operand.                
                <@param>
                    m function a function taking operands in the form <tt>function.apply(a,b)</tt>.                    
                </@param>
                <@return>
                    n the binary function <tt>function(b,a)</tt>.                    
                </@return>
            </javadoc>
            <method name="swapArgs" type="IntIntFunction" line="519">
                <params>
                    <param name="function" type="IntIntFunction"/>
                </params>
                <anonymous_class line="520">
                    <method name="apply" type="int" line="521">
                        <params>
                            <param name="a" type="int"/>
                            <param name="b" type="int"/>
                        </params>
                    </method>
                </anonymous_class>
            </method>
            <javadoc line="524">
                Constructs a function that returns &lt;tt&gt;a | b&lt;/tt&gt;.
                  &lt;tt&gt;a&lt;/tt&gt; is a variable, &lt;tt&gt;b&lt;/tt&gt; is fixed.                
            </javadoc>
            <method name="xor" type="IntFunction" line="528">
                <params>
                    <param name="b" type="int"/>
                </params>
                <anonymous_class line="529">
                    <method name="apply" type="int" line="530">
                        <params>
                            <param name="a" type="int"/>
                        </params>
                    </method>
                </anonymous_class>
            </method>
        </class>
    </source>