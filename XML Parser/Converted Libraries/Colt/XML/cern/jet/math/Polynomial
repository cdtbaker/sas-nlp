<?xml version="1.0" encoding="UTF-8"?>
    <source package="cern.jet.math">
        <class name="Polynomial" extends="Constants" line="11">
            <javadoc line="11">
                Polynomial functions.                
            </javadoc>
            <javadoc line="15">
                Makes this class non instantiable, but still let&apos;s others inherit from it.                
            </javadoc>
            <method name="Polynomial" type="constructor" line="18"/>
            <javadoc line="19">
                Evaluates the given polynomial of degree &lt;tt&gt;N&lt;/tt&gt; at &lt;tt&gt;x&lt;/tt&gt;, assuming coefficient of N is 1.0.
                 * Otherwise same as &lt;tt&gt;polevl()&lt;/tt&gt;.
                 * &lt;pre&gt;
                 * 2          N
                 * y  =  C  + C x + C x  +...+ C x
                 * 0    1     2          N
                 * where C  = 1 and hence is omitted from the array.
                 * N
                 * Coefficients are stored in reverse order:
                 * coef[0] = C  , ..., coef[N-1] = C  .
                 * N-1                   0
                 * Calling arguments are otherwise the same as polevl().
                 * &lt;/pre&gt;
                 * In the interest of speed, there are no checks for out of bounds arithmetic.                
                <@param>
                    m x argument to the polynomial.                    
                </@param>
                <@param>
                    m coef the coefficients of the polynomial.                    
                </@param>
                <@param>
                    m N the degree of the polynomial.                    
                </@param>
            </javadoc>
            <method name="p1evl" type="double" line="43">
                <declaration name="ans" type="double" line="44"/>
                <scope line="48"/>
            </method>
            <javadoc line="52">
                Evaluates the given polynomial of degree &lt;tt&gt;N&lt;/tt&gt; at &lt;tt&gt;x&lt;/tt&gt;.
                 * &lt;pre&gt;
                 * 2          N
                 * y  =  C  + C x + C x  +...+ C x
                 * 0    1     2          N
                 * Coefficients are stored in reverse order:
                 * coef[0] = C  , ..., coef[N] = C  .
                 * N                   0
                 * &lt;/pre&gt;
                 * In the interest of speed, there are no checks for out of bounds arithmetic.                
                <@param>
                    m x argument to the polynomial.                    
                </@param>
                <@param>
                    m coef the coefficients of the polynomial.                    
                </@param>
                <@param>
                    m N the degree of the polynomial.                    
                </@param>
            </javadoc>
            <method name="polevl" type="double" line="70">
                <declaration name="ans" type="double" line="71"/>
            </method>
        </class>
    </source>