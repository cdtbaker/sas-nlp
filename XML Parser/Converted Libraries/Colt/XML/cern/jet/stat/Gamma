<?xml version="1.0" encoding="UTF-8"?>
    <source package="cern.jet.stat">
        <import package="cern.jet.math.Polynomial"/>
        <class name="Gamma" extends="cern.jet.math.Constants" line="12">
            <javadoc line="12">
                Gamma and Beta functions.
                 * &lt;p&gt;
                 * &lt;b&gt;Implementation:&lt;/b&gt;
                 * &lt;dt&gt;
                 * Some code taken and adapted from the &lt;A HREF=&quot;http://www.sci.usq.edu.au/staff/leighb/graph/Top.html&quot;&gt;Java 2D Graph Package 2.4&lt;/A&gt;,
                 * which in turn is a port from the &lt;A HREF=&quot;http://people.ne.mediaone.net/moshier/index.html#Cephes&quot;&gt;Cephes 2.2&lt;/A&gt; Math Library (C).
                 * Most Cephes code (missing from the 2D Graph Package) directly ported.                
                <@author>
                    r wolfgang.hoschek@cern.ch                    
                </@author>
                <@version>
                    n 0.9, 22-Jun-99                    
                </@version>
            </javadoc>
            <javadoc line="25">
                Makes this class non instantiable, but still let&apos;s others inherit from it.                
            </javadoc>
            <method name="Gamma" type="constructor" line="28"/>
            <javadoc line="29">
                Returns the beta function of the arguments.
                 * &lt;pre&gt;
                 * -     -
                 * | (a) | (b)
                 * beta( a, b )  =  -----------.
                 * -
                 * | (a+b)
                 * &lt;/pre&gt;                
            </javadoc>
            <method name="beta" type="double" line="39">
                <declaration name="y" type="double" line="40"/>
                <scope line="46"/>
                <scope line="50"/>
            </method>
            <javadoc line="57">
                Returns the Gamma function of the argument.                
            </javadoc>
            <method name="gamma" type="double" line="60">
                <comment line="61">
                    double MAXGAM = 171.624376956302725;                    
                </comment>
                <comment line="61">
                    double LOGPI  = 1.14472988584940017414;                    
                </comment>
                <declaration name="P" type="double" line="62"/>
                <declaration name="Q" type="double" line="71"/>
                <declaration name="p" type="double" line="84"/>
                <declaration name="i" type="int" line="85"/>
                <declaration name="q" type="double" line="87"/>
                <scope line="89">
                    <scope line="90">
                        <scope line="95"/>
                    </scope>
                    <scope line="105"/>
                </scope>
                <scope line="111"/>
                <scope line="116">
                    <scope line="117"/>
                    <scope line="120"/>
                </scope>
                <scope line="127">
                    <scope line="128"/>
                    <scope line="131"/>
                </scope>
            </method>
            <javadoc line="146">
                Returns the Incomplete Beta Function evaluated from zero to &lt;tt&gt;xx&lt;/tt&gt;; formerly named &lt;tt&gt;ibeta&lt;/tt&gt;.                
                <@param>
                    m aa the alpha parameter of the beta distribution.                    
                </@param>
                <@param>
                    m bb the beta parameter of the beta distribution.                    
                </@param>
                <@param>
                    m xx the integration end point.                    
                </@param>
            </javadoc>
            <method name="incompleteBeta" type="double" line="153">
                <comment line="154">
                    Reverse a and b if x is greater than the mean.                    
                </comment>
                <comment line="154">
                    Choose expansion for better convergence.                    
                </comment>
                <comment line="154">
                    Multiply w by the factor
                    a      b   _             _     _                    
                </comment>
                <comment line="154">
                    Resort to logarithms.                    
                </comment>
                <declaration name="a" type="double" line="154"/>
                <declaration name="flag" type="boolean" line="155"/>
                <scope line="160"/>
                <scope line="167"/>
                <scope line="175"/>
                <scope line="181"/>
                <scope line="188"/>
                <scope line="208">
                    <scope line="214"/>
                </scope>
                <scope line="228"/>
            </method>
            <javadoc line="234">
                Continued fraction expansion #1 for incomplete beta integral; formerly named &lt;tt&gt;incbcf&lt;/tt&gt;.                
            </javadoc>
            <method name="incompleteBetaFraction1" type="double" line="237">
                <declaration name="xk" type="double" line="238"/>
                <declaration name="k1" type="double" line="239"/>
                <declaration name="r" type="double" line="240"/>
                <declaration name="n" type="int" line="241"/>
                <scope line="260">
                    <scope line="278"/>
                    <scope line="295"/>
                    <scope line="301"/>
                </scope>
            </method>
            <javadoc line="311">
                Continued fraction expansion #2 for incomplete beta integral; formerly named &lt;tt&gt;incbd&lt;/tt&gt;.                
            </javadoc>
            <method name="incompleteBetaFraction2" type="double" line="314">
                <declaration name="xk" type="double" line="315"/>
                <declaration name="k1" type="double" line="316"/>
                <declaration name="r" type="double" line="317"/>
                <declaration name="n" type="int" line="318"/>
                <scope line="338">
                    <scope line="356"/>
                    <scope line="373"/>
                    <scope line="379"/>
                </scope>
            </method>
            <javadoc line="389">
                Returns the Incomplete Gamma function; formerly named &lt;tt&gt;igamma&lt;/tt&gt;.                
                <@param>
                    m a the parameter of the gamma distribution.                    
                </@param>
                <@param>
                    m x the integration end point.                    
                </@param>
            </javadoc>
            <method name="incompleteGamma" type="double" line="395">
                <comment line="396">
                    Compute  xa  exp(-x)  gamma(a)                    
                </comment>
                <comment line="396">
                    power series                    
                </comment>
                <declaration name="ans" type="double" line="398"/>
                <scope line="415"/>
            </method>
            <javadoc line="425">
                Returns the Complemented Incomplete Gamma function; formerly named &lt;tt&gt;igamc&lt;/tt&gt;.                
                <@param>
                    m a the parameter of the gamma distribution.                    
                </@param>
                <@param>
                    m x the integration start point.                    
                </@param>
            </javadoc>
            <method name="incompleteGammaComplement" type="double" line="430">
                <comment line="431">
                    continued fraction                    
                </comment>
                <declaration name="ans" type="double" line="431"/>
                <declaration name="pk" type="double" line="432"/>
                <scope line="453">
                    <scope line="460"/>
                    <scope line="471"/>
                </scope>
            </method>
            <javadoc line="481">
                Returns the natural logarithm of the gamma function; formerly named &lt;tt&gt;lgamma&lt;/tt&gt;.                
            </javadoc>
            <method name="logGamma" type="double" line="484">
                <comment line="485">
                    if( x &gt; 1.0e8 ) return( q );                    
                </comment>
                <declaration name="p" type="double" line="485"/>
                <declaration name="A" type="double" line="487"/>
                <declaration name="B" type="double" line="494"/>
                <declaration name="C" type="double" line="502"/>
                <scope line="512">
                    <scope line="518"/>
                </scope>
                <scope line="529">
                    <scope line="531"/>
                    <scope line="535"/>
                </scope>
            </method>
            <javadoc line="564">
                Power series for incomplete beta integral; formerly named &lt;tt&gt;pseries&lt;/tt&gt;.
                 * Use when b*x is small and x not too close to 1.                
            </javadoc>
            <method name="powerSeries" type="double" line="568">
                <declaration name="s" type="double" line="569"/>
                <scope line="579"/>
                <scope line="590"/>
                <scope line="593"/>
            </method>
            <javadoc line="600">
                Returns the Gamma function computed by Stirling&apos;s formula; formerly named &lt;tt&gt;stirf&lt;/tt&gt;.
                 * The polynomial STIR is valid for 33 &lt;= x &lt;= 172.                
            </javadoc>
            <method name="stirlingFormula" type="double" line="604">
                <declaration name="STIR" type="double" line="605"/>
                <declaration name="MAXSTIR" type="double" line="612"/>
                <declaration name="w" type="double" line="614"/>
                <declaration name="y" type="double" line="615"/>
                <scope line="619">
                    <declaration name="v" type="double" line="621"/>
                </scope>
                <scope line="623"/>
            </method>
        </class>
    </source>