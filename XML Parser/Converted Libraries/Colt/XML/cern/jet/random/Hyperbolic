<?xml version="1.0" encoding="UTF-8"?>
    <source package="cern.jet.random">
        <import package="cern.jet.random.engine.RandomEngine"/>
        <class name="Hyperbolic" line="12">
            <extends class="AbstractContinousDistribution"/>
            <comment line="13">
                cached values shared for generateHyperbolic(...)                
            </comment>
            <comment line="13">
                The uniform random number generated shared by all &lt;b&gt;static&lt;/b&gt; methods.                
            </comment>
            <javadoc line="12">
                Hyperbolic distribution. 
                  &lt;p&gt;
                  Valid parameter ranges: &lt;tt&gt;alpha &amp;gt; 0&lt;/tt&gt; and &lt;tt&gt;beta &amp;gt; 0&lt;/tt&gt;.            
                  &lt;p&gt;
                  Instance methods operate on a user supplied uniform random number generator; they are unsynchronized.
                  &lt;dt&gt;
                  Static methods operate on a default uniform random number generator; they are synchronized.
                  &lt;p&gt;
                  &lt;b&gt;Implementation:&lt;/b&gt;
                  &lt;dt&gt;Method: Non-Universal Rejection.
                  High performance implementation.
                  &lt;dt&gt;This is a port of &lt;tt&gt;hyplc.c&lt;/tt&gt; from the &lt;A HREF=&quot;http://www.cis.tu-graz.ac.at/stat/stadl/random.html&quot;&gt;C-RAND / WIN-RAND&lt;/A&gt; library.
                  C-RAND&apos;s implementation, in turn, is based upon
                  &lt;p&gt;
                  L. Devroye (1986): Non-Uniform Random Variate Generation, Springer Verlag, New York.                
                <@author>
                    r wolfgang.hoschek@cern.ch                    
                </@author>
                <@version>
                    n 1.0, 09/24/99                    
                </@version>
            </javadoc>
            <declaration name="alpha" type="double" line="33"/>
            <declaration name="beta" type="double" line="34"/>
            <declaration name="a_setup" type="double" line="37"/>
            <declaration name="x" type="double" line="38"/>
            <declaration name="hr" type="double" line="39"/>
            <declaration name="shared" type="Hyperbolic" line="43"/>
            <javadoc line="44">
                Constructs a Beta distribution.                
            </javadoc>
            <method name="Hyperbolic" type="constructor" line="47">
                <params>
                    <param name="alpha" type="double"/>
                    <param name="beta" type="double"/>
                    <param name="randomGenerator" type="RandomEngine"/>
                </params>
            </method>
            <javadoc line="51">
                Returns a random number from the distribution.                
            </javadoc>
            <method name="nextDouble" type="double" line="54"/>
            <javadoc line="57">
                Returns a hyperbolic distributed random number; bypasses the internal state.                
            </javadoc>
            <method name="nextDouble" type="double" line="60">
                <params>
                    <param name="alpha" type="double"/>
                    <param name="beta" type="double"/>
                </params>
                <comment line="61">
                    Hyperbolic Distribution - Non-Universal Rejection       
                                                                                    
                    
                                                                                    
                     FUNCTION   : - hyplc.c samples a random number from the        
                                    hyperbolic distribution with shape parameter a  
                                    and b valid for a&gt;0 and |b|&lt;a using the         
                                    non-universal rejection method for log-concave  
                                    densities.                                      
                     REFERENCE :  - L. Devroye (1986): Non-Uniform Random Variate   
                                    Generation, Springer Verlag, New York.          
                     SUBPROGRAM : - drand(seed) ... (0,1)-Uniform generator with    
                                    unsigned long integer seed.                    
                                                                                    
                    
                    double a = alpha;
                    double b = beta;
                    
                    if ((a_setup != a) || (b_setup != b)) {  SET-UP
                    double mpa, mmb, mode;
                    double amb;                    
                </comment>
                <comment line="61">
                    GENERATOR                    
                </comment>
                <declaration name="a" type="double" line="78"/>
                <declaration name="b" type="double" line="79"/>
                <scope line="81">
                    <declaration name="mpa" type="double" line="82"/>
                    <declaration name="amb" type="double" line="83"/>
                    <declaration name="a_" type="double" line="84"/>
                    <declaration name="help_1" type="double" line="85"/>
                </scope>
                <scope line="112">
                    <scope line="115"/>
                    <scope line="120">
                        <scope line="121"/>
                        <scope line="127"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="138">
                Sets the parameters.                
            </javadoc>
            <method name="setState" type="void" line="141">
                <params>
                    <param name="alpha" type="double"/>
                    <param name="beta" type="double"/>
                </params>
            </method>
            <javadoc line="145">
                Returns a random number from the distribution.                
            </javadoc>
            <method name="staticNextDouble" type="double" line="148">
                <params>
                    <param name="alpha" type="double"/>
                    <param name="beta" type="double"/>
                </params>
                <scope line="149"/>
            </method>
            <javadoc line="153">
                Returns a String representation of the receiver.                
            </javadoc>
            <method name="toString" type="String" line="156"/>
            <javadoc line="159">
                Sets the uniform random number generated shared by all &lt;b&gt;static&lt;/b&gt; methods.                
                <@param>
                    m randomGenerator the new uniform random number generator to be shared.                    
                </@param>
            </javadoc>
            <method name="xstaticSetRandomGenerator" type="void" line="163">
                <params>
                    <param name="randomGenerator" type="RandomEngine"/>
                </params>
                <scope line="164"/>
            </method>
        </class>
    </source>