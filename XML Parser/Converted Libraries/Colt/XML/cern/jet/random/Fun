<?xml version="1.0" encoding="UTF-8"?>
    <source package="cern.jet.random">
        <class name="Fun" line="11">
            <javadoc line="11">
                Contains various mathematical helper methods.
                  &lt;b&gt;Implementation:&lt;/b&gt; High performance implementation.
                  &lt;dt&gt;This is a port of &lt;tt&gt;gen_fun.cpp&lt;/tt&gt; from the &lt;A HREF=&quot;http://www.cis.tu-graz.ac.at/stat/stadl/random.html&quot;&gt;C-RAND / WIN-RAND&lt;/A&gt; library.                
                <@author>
                    r wolfgang.hoschek@cern.ch                    
                </@author>
                <@version>
                    n 1.0, 09/24/99                    
                </@version>
            </javadoc>
            <javadoc line="21">
                Makes this class non instantiable, but still let&apos;s others inherit from it.                
            </javadoc>
            <method name="Fun" type="constructor" line="24"/>
            <method name="_fkt_value" type="double" line="27">
                <params>
                    <param name="lambda" type="double"/>
                    <param name="z1" type="double"/>
                    <param name="z2" type="double"/>
                    <param name="x_value" type="double"/>
                </params>
                <declaration name="y_value" type="double" line="28"/>
            </method>
            <method name="bessel2_fkt" type="double" line="33">
                <params>
                    <param name="lambda" type="double"/>
                    <param name="beta" type="double"/>
                </params>
                <comment line="34">
                    otherwise numerical integration of the function defined above                    
                </comment>
                <declaration name="pi" type="double" line="34"/>
                <declaration name="sum" type="double" line="35"/>
                <declaration name="epsilon" type="double" line="36"/>
                <declaration name="y" type="double" line="37"/>
                <declaration name="period" type="double" line="38"/>
                <declaration name="my" type="double" line="39"/>
                <declaration name="i" type="int" line="40"/>
                <declaration name="b0" type="double" line="42"/>
                <declaration name="b05" type="double" line="45"/>
                <declaration name="b1" type="double" line="48"/>
                <declaration name="b2" type="double" line="51"/>
                <declaration name="b3" type="double" line="54"/>
                <declaration name="b5" type="double" line="57"/>
                <declaration name="b8" type="double" line="60"/>
                <scope line="64"/>
                <scope line="74"/>
                <scope line="84"/>
                <scope line="94"/>
                <scope line="104"/>
                <scope line="114"/>
                <scope line="124"/>
                <scope line="135">
                    <scope line="142">
                        <scope line="146"/>
                    </scope>
                </scope>
                <scope line="158">
                    <scope line="159"/>
                    <scope line="163"/>
                </scope>
                <scope line="174">
                    <scope line="177"/>
                    <scope line="185"/>
                </scope>
                <scope line="195">
                    <scope line="204">
                        <scope line="205"/>
                    </scope>
                    <scope line="212"/>
                    <scope line="219"/>
                </scope>
            </method>
            <javadoc line="232">
                Modified Bessel Functions of First Kind - Order 0.                
            </javadoc>
            <method name="bessi0" type="double" line="235">
                <params>
                    <param name="x" type="double"/>
                </params>
                <declaration name="ax" type="double" line="236"/>
                <declaration name="y" type="double" line="237"/>
                <scope line="239"/>
                <scope line="245"/>
            </method>
            <javadoc line="254">
                Modified Bessel Functions of First Kind - Order 1.                
            </javadoc>
            <method name="bessi1" type="double" line="257">
                <params>
                    <param name="x" type="double"/>
                </params>
                <declaration name="ax" type="double" line="258"/>
                <declaration name="y" type="double" line="259"/>
                <scope line="261"/>
                <scope line="267"/>
            </method>
            <javadoc line="277">
                Returns &lt;tt&gt;n!&lt;/tt&gt;.                
            </javadoc>
            <method name="factorial" type="long" line="280">
                <params>
                    <param name="n" type="int"/>
                </params>
                <comment line="281">
                    long i,prod;                    
                </comment>
            </method>
            <method name="fkt2_value" type="double" line="292">
                <params>
                    <param name="lambda" type="double"/>
                    <param name="beta" type="double"/>
                    <param name="x_value" type="double"/>
                </params>
                <declaration name="y_value" type="double" line="293"/>
            </method>
            <method name="cosh" type="double" line="298">
                <params>
                    <param name="x" type="double"/>
                </params>
            </method>
            <javadoc line="303">
                Returns the gamma function &lt;tt&gt;gamma(x)&lt;/tt&gt;.                
            </javadoc>
            <method name="gamma" type="double" line="306">
                <params>
                    <param name="x" type="double"/>
                </params>
                <comment line="307">
                    if (x &gt; Math.log(Double.MAX_VALUE)) return Double.MAX_VALUE;                    
                </comment>
            </method>
            <javadoc line="311">
                Returns a quick approximation of &lt;tt&gt;log(gamma(x))&lt;/tt&gt;.                
            </javadoc>
            <method name="logGamma" type="double" line="314">
                <params>
                    <param name="x" type="double"/>
                </params>
                <declaration name="c0" type="double" line="315"/>
                <declaration name="g" type="double" line="319"/>
            </method>
        </class>
    </source>