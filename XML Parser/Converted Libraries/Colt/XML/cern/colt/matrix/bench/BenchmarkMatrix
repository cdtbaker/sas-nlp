<?xml version="1.0" encoding="UTF-8"?>
    <source package="cern.colt.matrix.bench">
        <import package="cern.colt.matrix.DoubleFactory2D"/>
        <import package="cern.colt.matrix.DoubleFactory3D"/>
        <import package="cern.colt.matrix.DoubleMatrix2D"/>
        <import package="cern.colt.matrix.DoubleMatrix3D"/>
        <class name="BenchmarkMatrix" line="15">
            <javadoc line="15">
                Configurable matrix benchmark.
                  Runs the operations defined in main(args) or in the file specified by args.
                  To get &lt;a href=&quot;doc-files/usage.txt&quot;&gt;this overall help&lt;/a&gt; on usage type &lt;tt&gt;java cern.colt.matrix.bench.BenchmarkMatrix -help&lt;/tt&gt;.
                  To get help on usage of a given command, type &lt;tt&gt;java cern.colt.matrix.bench.BenchmarkMatrix -help &amp;lt;command&amp;gt;&lt;/tt&gt;.
                  Here is the &lt;a href=&quot;doc-files/usage_dgemm.txt&quot;&gt;help ouput for the dgemm&lt;/a&gt; command.
                  &lt;a href=&quot;../doc-files/dgemmColt1.0.1ibm1.3LxPIII_2.txt&quot;&gt;Here&lt;/a&gt; is a sample result.
                  For more results see the &lt;a href=&quot;../doc-files/performanceLog.html&quot;&gt;performance log&lt;/a&gt;.                
                <@author>
                    r wolfgang.hoschek@cern.ch                    
                </@author>
                <@version>
                    n 0.5, 10-May-2000                    
                </@version>
            </javadoc>
            <javadoc line="28">
                Benchmark constructor comment.                
            </javadoc>
            <method name="BenchmarkMatrix" type="constructor" line="31"/>
            <javadoc line="32">
                Not yet documented.                
            </javadoc>
            <method name="bench_dgemm" type="void" line="35">
                <params>
                    <param name="args" type="String[]"/>
                </params>
                <declaration name="types" type="String[]" line="36"/>
                <declaration name="cpus" type="int" line="37"/>
                <declaration name="minSecs" type="double" line="38"/>
                <declaration name="transposeA" type="boolean" line="39"/>
                <declaration name="transposeB" type="boolean" line="40"/>
                <declaration name="densities" type="double[]" line="41"/>
                <declaration name="sizes" type="int[]" line="42"/>
                <scope line="44">
                    <declaration name="k" type="int" line="45"/>
                </scope>
                <scope line="56"/>
                <declaration name="fun" type="Double2DProcedure" line="63"/>
                <declaration name="title" type="String" line="64"/>
                <declaration name="params" type="String" line="65"/>
            </method>
            <javadoc line="69">
                Not yet documented.                
            </javadoc>
            <method name="bench_dgemv" type="void" line="72">
                <params>
                    <param name="args" type="String[]"/>
                </params>
                <declaration name="types" type="String[]" line="73"/>
                <declaration name="cpus" type="int" line="74"/>
                <declaration name="minSecs" type="double" line="75"/>
                <declaration name="transposeA" type="boolean" line="76"/>
                <declaration name="densities" type="double[]" line="77"/>
                <declaration name="sizes" type="int[]" line="78"/>
                <scope line="80">
                    <declaration name="k" type="int" line="81"/>
                </scope>
                <scope line="91"/>
                <declaration name="fun" type="Double2DProcedure" line="98"/>
                <declaration name="title" type="String" line="99"/>
                <declaration name="params" type="String" line="100"/>
            </method>
            <javadoc line="104">
                Not yet documented.                
            </javadoc>
            <method name="bench_pow" type="void" line="107">
                <params>
                    <param name="args" type="String[]"/>
                </params>
                <declaration name="types" type="String[]" line="108"/>
                <declaration name="cpus" type="int" line="109"/>
                <declaration name="minSecs" type="double" line="110"/>
                <declaration name="densities" type="double[]" line="111"/>
                <declaration name="exponent" type="int" line="112"/>
                <declaration name="sizes" type="int[]" line="113"/>
                <scope line="115">
                    <declaration name="k" type="int" line="116"/>
                </scope>
                <scope line="126"/>
                <declaration name="fun" type="Double2DProcedure" line="133"/>
                <declaration name="title" type="String" line="134"/>
                <declaration name="params" type="String" line="135"/>
            </method>
            <javadoc line="139">
                Not yet documented.                
            </javadoc>
            <method name="benchGeneric" type="void" line="142">
                <params>
                    <param name="fun" type="Double2DProcedure"/>
                    <param name="args" type="String[]"/>
                </params>
                <declaration name="types" type="String[]" line="143"/>
                <declaration name="cpus" type="int" line="144"/>
                <declaration name="minSecs" type="double" line="145"/>
                <declaration name="densities" type="double[]" line="146"/>
                <declaration name="sizes" type="int[]" line="147"/>
                <scope line="149">
                    <declaration name="k" type="int" line="150"/>
                </scope>
                <scope line="159"/>
                <declaration name="title" type="String" line="166"/>
            </method>
            <javadoc line="169">
                                
            </javadoc>
            <method name="commands" type="String" line="172"/>
            <javadoc line="175">
                Linear algebrax matrix-matrix multiply.                
            </javadoc>
            <method name="fun_dgemm" type="Double2DProcedure" line="178">
                <params>
                    <param name="transposeA" type="boolean"/>
                    <param name="transposeB" type="boolean"/>
                </params>
                <anonymous_class line="179">
                    <method name="toString" type="String" line="180"/>
                    <method name="setParameters" type="void" line="181">
                        <params>
                            <param name="G" type="DoubleMatrix2D"/>
                            <param name="H" type="DoubleMatrix2D"/>
                        </params>
                    </method>
                    <method name="init" type="void" line="187"/>
                    <method name="apply" type="void" line="188">
                        <params>
                            <param name="timer" type="cern.colt.Timer"/>
                        </params>
                    </method>
                    <method name="operations" type="double" line="191">
                        <comment line="192">
                            blic double operations() { // Mflops                            
                        </comment>
                        <comment line="478">
                            blic double operations() { // Mflops                            
                        </comment>
                        <declaration name="m" type="double" line="192"/>
                        <declaration name="n" type="double" line="193"/>
                        <declaration name="p" type="double" line="194"/>
                    </method>
                </anonymous_class>
            </method>
            <javadoc line="199">
                Linear algebrax matrix-matrix multiply.                
            </javadoc>
            <method name="fun_dgemv" type="Double2DProcedure" line="202">
                <params>
                    <param name="transposeA" type="boolean"/>
                </params>
                <anonymous_class line="203">
                    <method name="toString" type="String" line="204"/>
                    <method name="setParameters" type="void" line="205">
                        <params>
                            <param name="G" type="DoubleMatrix2D"/>
                            <param name="H" type="DoubleMatrix2D"/>
                        </params>
                    </method>
                    <method name="init" type="void" line="211"/>
                    <method name="apply" type="void" line="212">
                        <params>
                            <param name="timer" type="cern.colt.Timer"/>
                        </params>
                    </method>
                    <method name="operations" type="double" line="215">
                        <comment line="216">
                            blic double operations() { // Mflops                            
                        </comment>
                        <comment line="216">
                            double p = B.columns();                            
                        </comment>
                        <comment line="500">
                            blic double operations() { // Mflops                            
                        </comment>
                        <comment line="500">
                            double p = B.columns();                            
                        </comment>
                        <declaration name="m" type="double" line="216"/>
                        <declaration name="n" type="double" line="217"/>
                    </method>
                </anonymous_class>
            </method>
            <javadoc line="223">
                2D assign with get,set                
            </javadoc>
            <method name="fun_pow" type="Double2DProcedure" line="226">
                <params>
                    <param name="k" type="int"/>
                </params>
                <anonymous_class line="227">
                    <declaration name="dummy" type="double" line="228"/>
                    <method name="toString" type="String" line="229"/>
                    <method name="setParameters" type="void" line="230">
                        <params>
                            <param name="A" type="DoubleMatrix2D"/>
                            <param name="B" type="DoubleMatrix2D"/>
                        </params>
                        <scope line="231">
                            <scope line="233"/>
                        </scope>
                    </method>
                    <method name="init" type="void" line="240"/>
                    <method name="apply" type="void" line="241">
                        <params>
                            <param name="timer" type="cern.colt.Timer"/>
                        </params>
                    </method>
                    <method name="operations" type="double" line="244">
                        <comment line="245">
                            blic double operations() { // Mflops                            
                        </comment>
                        <comment line="245">
                            (k==0) return m; // identity                            
                        </comment>
                        <comment line="245">
                            mult                            
                        </comment>
                        <declaration name="m" type="double" line="245"/>
                        <declaration name="mflops" type="double" line="247"/>
                        <scope line="248">
                            <declaration name="N" type="double" line="250"/>
                            <declaration name="n" type="double" line="254"/>
                            <declaration name="nx" type="double" line="255"/>
                        </scope>
                    </method>
                </anonymous_class>
            </method>
            <javadoc line="264">
                2D assign with A.assign(B)                
            </javadoc>
            <method name="funAssign" type="Double2DProcedure" line="267">
                <anonymous_class line="268">
                    <method name="toString" type="String" line="269"/>
                    <method name="init" type="void" line="270"/>
                    <method name="apply" type="void" line="271">
                        <params>
                            <param name="timer" type="cern.colt.Timer"/>
                        </params>
                    </method>
                </anonymous_class>
            </method>
            <javadoc line="276">
                2D assign with get,set                
            </javadoc>
            <method name="funAssignGetSet" type="Double2DProcedure" line="279">
                <anonymous_class line="280">
                    <method name="toString" type="String" line="281"/>
                    <method name="init" type="void" line="282"/>
                    <method name="apply" type="void" line="283">
                        <params>
                            <param name="timer" type="cern.colt.Timer"/>
                        </params>
                        <comment line="284">
                            for (int row=rows; --row &gt;= 0; ) {                            
                        </comment>
                        <declaration name="rows" type="int" line="284"/>
                        <declaration name="columns" type="int" line="285"/>
                        <scope line="293">
                            <scope line="294"/>
                        </scope>
                    </method>
                </anonymous_class>
            </method>
            <javadoc line="301">
                2D assign with getQuick,setQuick                
            </javadoc>
            <method name="funAssignGetSetQuick" type="Double2DProcedure" line="304">
                <anonymous_class line="305">
                    <method name="toString" type="String" line="306"/>
                    <method name="init" type="void" line="307"/>
                    <method name="apply" type="void" line="308">
                        <params>
                            <param name="timer" type="cern.colt.Timer"/>
                        </params>
                        <comment line="309">
                            for (int row=rows; --row &gt;= 0; ) {                            
                        </comment>
                        <comment line="309">
                            for (int column=columns; --column &gt;= 0; ) {                            
                        </comment>
                        <declaration name="rows" type="int" line="309"/>
                        <declaration name="columns" type="int" line="310"/>
                        <scope line="313">
                            <scope line="314"/>
                        </scope>
                    </method>
                </anonymous_class>
            </method>
            <javadoc line="321">
                2D assign with A.assign(B)                
            </javadoc>
            <method name="funAssignLog" type="Double2DProcedure" line="324">
                <anonymous_class line="325">
                    <method name="toString" type="String" line="326"/>
                    <method name="init" type="void" line="327"/>
                    <method name="apply" type="void" line="328">
                        <params>
                            <param name="timer" type="cern.colt.Timer"/>
                        </params>
                    </method>
                </anonymous_class>
            </method>
            <javadoc line="333">
                2D assign with A.assign(B)                
            </javadoc>
            <method name="funAssignPlusMult" type="Double2DProcedure" line="336">
                <anonymous_class line="337">
                    <method name="toString" type="String" line="338"/>
                    <method name="init" type="void" line="339"/>
                    <method name="apply" type="void" line="340">
                        <params>
                            <param name="timer" type="cern.colt.Timer"/>
                        </params>
                    </method>
                    <method name="operations" type="double" line="343">
                        <comment line="344">
                            blic double operations() { // Mflops                            
                        </comment>
                        <declaration name="m" type="double" line="344"/>
                        <declaration name="n" type="double" line="345"/>
                    </method>
                </anonymous_class>
            </method>
            <javadoc line="350">
                Linear algebrax matrix-matrix multiply.                
            </javadoc>
            <method name="funCorrelation" type="Double2DProcedure" line="353">
                <anonymous_class line="354">
                    <method name="toString" type="String" line="355"/>
                    <method name="init" type="void" line="356"/>
                    <method name="setParameters" type="void" line="357">
                        <params>
                            <param name="A" type="DoubleMatrix2D"/>
                            <param name="B" type="DoubleMatrix2D"/>
                        </params>
                        <comment line="358">
                            per.setParameters(A.viewDice(),B); // transposed --&gt; faster (memory aware) iteration in correlation algo                            
                        </comment>
                    </method>
                    <method name="apply" type="void" line="360">
                        <params>
                            <param name="timer" type="cern.colt.Timer"/>
                        </params>
                    </method>
                    <method name="operations" type="double" line="364">
                        <comment line="365">
                            blic double operations() { // Mflops                            
                        </comment>
                        <declaration name="m" type="double" line="365"/>
                        <declaration name="n" type="double" line="366"/>
                    </method>
                </anonymous_class>
            </method>
            <javadoc line="371">
                Element-by-element matrix-matrix multiply.                
            </javadoc>
            <method name="funElementwiseMult" type="Double2DProcedure" line="374">
                <anonymous_class line="375">
                    <method name="toString" type="String" line="376"/>
                    <method name="init" type="void" line="377"/>
                    <method name="apply" type="void" line="378">
                        <params>
                            <param name="timer" type="cern.colt.Timer"/>
                        </params>
                    </method>
                </anonymous_class>
            </method>
            <javadoc line="383">
                Element-by-element matrix-matrix multiply.                
            </javadoc>
            <method name="funElementwiseMultB" type="Double2DProcedure" line="386">
                <anonymous_class line="387">
                    <method name="toString" type="String" line="388"/>
                    <method name="init" type="void" line="389"/>
                    <method name="apply" type="void" line="390">
                        <params>
                            <param name="timer" type="cern.colt.Timer"/>
                        </params>
                    </method>
                </anonymous_class>
            </method>
            <javadoc line="395">
                2D assign with get,set                
            </javadoc>
            <method name="funGetQuick" type="Double2DProcedure" line="398">
                <anonymous_class line="399">
                    <declaration name="dummy" type="double" line="400"/>
                    <method name="toString" type="String" line="401"/>
                    <method name="init" type="void" line="402"/>
                    <method name="apply" type="void" line="403">
                        <params>
                            <param name="timer" type="cern.colt.Timer"/>
                        </params>
                        <comment line="404">
                            for (int row=rows; --row &gt;= 0; ) {                            
                        </comment>
                        <comment line="404">
                            for (int column=columns; --column &gt;= 0; ) {                            
                        </comment>
                        <declaration name="rows" type="int" line="404"/>
                        <declaration name="columns" type="int" line="405"/>
                        <declaration name="sum" type="double" line="406"/>
                        <scope line="409">
                            <scope line="410"/>
                        </scope>
                    </method>
                </anonymous_class>
            </method>
            <javadoc line="418">
                2D assign with getQuick,setQuick                
            </javadoc>
            <method name="funLUDecompose" type="Double2DProcedure" line="421">
                <anonymous_class line="422">
                    <declaration name="lu" type="cern.colt.matrix.linalg.LUDecompositionQuick" line="423"/>
                    <method name="toString" type="String" line="424"/>
                    <method name="init" type="void" line="425"/>
                    <method name="apply" type="void" line="426">
                        <params>
                            <param name="timer" type="cern.colt.Timer"/>
                        </params>
                    </method>
                    <method name="operations" type="double" line="429">
                        <comment line="430">
                            blic double operations() { // Mflops                            
                        </comment>
                        <declaration name="N" type="double" line="430"/>
                    </method>
                </anonymous_class>
            </method>
            <javadoc line="435">
                2D assign with getQuick,setQuick                
            </javadoc>
            <method name="funLUSolve" type="Double2DProcedure" line="438">
                <anonymous_class line="439">
                    <declaration name="lu" type="cern.colt.matrix.linalg.LUDecompositionQuick" line="440"/>
                    <method name="toString" type="String" line="441"/>
                    <method name="setParameters" type="void" line="442">
                        <params>
                            <param name="A" type="DoubleMatrix2D"/>
                            <param name="B" type="DoubleMatrix2D"/>
                        </params>
                        <scope line="445"/>
                    </method>
                    <method name="init" type="void" line="452"/>
                    <method name="apply" type="void" line="453">
                        <params>
                            <param name="timer" type="cern.colt.Timer"/>
                        </params>
                    </method>
                    <method name="operations" type="double" line="456">
                        <comment line="457">
                            blic double operations() { // Mflops                            
                        </comment>
                        <declaration name="n" type="double" line="457"/>
                        <declaration name="nx" type="double" line="458"/>
                    </method>
                </anonymous_class>
            </method>
            <javadoc line="463">
                Linear algebrax matrix-matrix multiply.                
            </javadoc>
            <method name="funMatMultLarge" type="Double2DProcedure" line="466">
                <anonymous_class line="467">
                    <method name="toString" type="String" line="468"/>
                    <method name="setParameters" type="void" line="469">
                        <params>
                            <param name="A" type="DoubleMatrix2D"/>
                            <param name="B" type="DoubleMatrix2D"/>
                        </params>
                        <comment line="470">
                            do not allocate mem for &quot;D&quot; --&gt; safe some mem                            
                        </comment>
                    </method>
                    <method name="init" type="void" line="475"/>
                    <method name="apply" type="void" line="476">
                        <params>
                            <param name="timer" type="cern.colt.Timer"/>
                        </params>
                    </method>
                    <method name="operations" type="double" line="477">
                        <comment line="192">
                            blic double operations() { // Mflops                            
                        </comment>
                        <comment line="478">
                            blic double operations() { // Mflops                            
                        </comment>
                        <declaration name="m" type="double" line="478"/>
                        <declaration name="n" type="double" line="479"/>
                        <declaration name="p" type="double" line="480"/>
                    </method>
                </anonymous_class>
            </method>
            <javadoc line="485">
                Linear algebrax matrix-vector multiply.                
            </javadoc>
            <method name="funMatVectorMult" type="Double2DProcedure" line="488">
                <anonymous_class line="489">
                    <method name="toString" type="String" line="490"/>
                    <method name="setParameters" type="void" line="491">
                        <params>
                            <param name="G" type="DoubleMatrix2D"/>
                            <param name="H" type="DoubleMatrix2D"/>
                        </params>
                    </method>
                    <method name="init" type="void" line="497"/>
                    <method name="apply" type="void" line="498">
                        <params>
                            <param name="timer" type="cern.colt.Timer"/>
                        </params>
                    </method>
                    <method name="operations" type="double" line="499">
                        <comment line="216">
                            blic double operations() { // Mflops                            
                        </comment>
                        <comment line="216">
                            double p = B.columns();                            
                        </comment>
                        <comment line="500">
                            blic double operations() { // Mflops                            
                        </comment>
                        <comment line="500">
                            double p = B.columns();                            
                        </comment>
                        <declaration name="m" type="double" line="500"/>
                        <declaration name="n" type="double" line="501"/>
                    </method>
                </anonymous_class>
            </method>
            <javadoc line="507">
                2D assign with get,set                
            </javadoc>
            <method name="funSetQuick" type="Double2DProcedure" line="510">
                <anonymous_class line="511">
                    <declaration name="current" type="int" line="512"/>
                    <declaration name="density" type="double" line="513"/>
                    <method name="toString" type="String" line="514"/>
                    <method name="init" type="void" line="515">
                        <declaration name="seed" type="int" line="517"/>
                    </method>
                    <method name="apply" type="void" line="521">
                        <params>
                            <param name="timer" type="cern.colt.Timer"/>
                        </params>
                        <comment line="522">
                            for (int row=rows; --row &gt;= 0; ) {                            
                        </comment>
                        <comment line="522">
                            for (int column=columns; --column &gt;= 0; ) {                            
                        </comment>
                        <declaration name="rows" type="int" line="522"/>
                        <declaration name="columns" type="int" line="523"/>
                        <scope line="526">
                            <scope line="527">
                                <declaration name="random" type="double" line="530"/>
                            </scope>
                        </scope>
                    </method>
                </anonymous_class>
            </method>
            <javadoc line="541">
                                
            </javadoc>
            <method name="funSOR5" type="Double2DProcedure" line="544">
                <anonymous_class line="545">
                    <declaration name="value" type="double" line="546"/>
                    <declaration name="omega" type="double" line="547"/>
                    <declaration name="alpha" type="double" line="548"/>
                    <declaration name="beta" type="double" line="549"/>
                    <declaration name="function" type="cern.colt.function.Double9Function" line="550"/>
                    <anonymous_class line="550">
                        <method name="apply" type="double" line="554">
                            <params>
                                <param name="a00" type="double"/>
                                <param name="a01" type="double"/>
                                <param name="a02" type="double"/>
                                <param name="a10" type="double"/>
                                <param name="a11" type="double"/>
                                <param name="a12" type="double"/>
                                <param name="a20" type="double"/>
                                <param name="a21" type="double"/>
                                <param name="a22" type="double"/>
                            </params>
                        </method>
                    </anonymous_class>
                    <method name="toString" type="String" line="558"/>
                    <method name="init" type="void" line="559"/>
                    <method name="apply" type="void" line="560">
                        <params>
                            <param name="timer" type="cern.colt.Timer"/>
                        </params>
                    </method>
                    <method name="operations" type="double" line="561">
                        <comment line="562">
                            blic double operations() { // Mflops                            
                        </comment>
                        <declaration name="n" type="double" line="562"/>
                        <declaration name="m" type="double" line="563"/>
                    </method>
                </anonymous_class>
            </method>
            <javadoc line="568">
                                
            </javadoc>
            <method name="funSOR8" type="Double2DProcedure" line="571">
                <anonymous_class line="572">
                    <declaration name="value" type="double" line="573"/>
                    <declaration name="omega" type="double" line="574"/>
                    <declaration name="alpha" type="double" line="575"/>
                    <declaration name="beta" type="double" line="576"/>
                    <declaration name="function" type="cern.colt.function.Double9Function" line="577"/>
                    <anonymous_class line="577">
                        <method name="apply" type="double" line="581">
                            <params>
                                <param name="a00" type="double"/>
                                <param name="a01" type="double"/>
                                <param name="a02" type="double"/>
                                <param name="a10" type="double"/>
                                <param name="a11" type="double"/>
                                <param name="a12" type="double"/>
                                <param name="a20" type="double"/>
                                <param name="a21" type="double"/>
                                <param name="a22" type="double"/>
                            </params>
                        </method>
                    </anonymous_class>
                    <method name="toString" type="String" line="585"/>
                    <method name="init" type="void" line="586"/>
                    <method name="apply" type="void" line="587">
                        <params>
                            <param name="timer" type="cern.colt.Timer"/>
                        </params>
                    </method>
                    <method name="operations" type="double" line="588">
                        <comment line="589">
                            blic double operations() { // Mflops                            
                        </comment>
                        <declaration name="n" type="double" line="589"/>
                        <declaration name="m" type="double" line="590"/>
                    </method>
                </anonymous_class>
            </method>
            <javadoc line="595">
                                
            </javadoc>
            <method name="funSort" type="Double2DProcedure" line="598">
                <anonymous_class line="599">
                    <method name="toString" type="String" line="600"/>
                    <method name="init" type="void" line="601"/>
                    <method name="apply" type="void" line="602">
                        <params>
                            <param name="timer" type="cern.colt.Timer"/>
                        </params>
                    </method>
                </anonymous_class>
            </method>
            <javadoc line="605">
                Not yet documented.                
            </javadoc>
            <method name="getFactory" type="DoubleFactory2D" line="608">
                <params>
                    <param name="type" type="String"/>
                </params>
                <declaration name="factory" type="DoubleFactory2D" line="609"/>
                <declaration name="s" type="String" line="613"/>
            </method>
            <javadoc line="616">
                Not yet documented.                
            </javadoc>
            <method name="getGenericFunction" type="Double2DProcedure" line="619">
                <params>
                    <param name="cmd" type="String"/>
                </params>
                <comment line="620">
                                        
                </comment>
            </method>
            <javadoc line="640">
                Executes a command                
            </javadoc>
            <method name="handle" type="boolean" line="643">
                <params>
                    <param name="params" type="String[]"/>
                </params>
                <declaration name="success" type="boolean" line="644"/>
                <declaration name="cmd" type="String" line="645"/>
                <scope line="649">
                    <declaration name="fun" type="Double2DProcedure" line="650"/>
                    <scope line="651"/>
                    <scope line="654">
                        <declaration name="s" type="String" line="656"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="662">
                Runs the matrix benchmark operations defined in args or in the file specified by args0.
                  To get detailed help on usage type java cern.colt.matrix.bench.BenchmarkMatrix -help                
            </javadoc>
            <method name="main" type="void" line="666">
                <params>
                    <param name="args" type="String[]"/>
                </params>
                <declaration name="n" type="int" line="667"/>
                <scope line="668"/>
                <scope line="672">
                    <scope line="673"/>
                    <scope line="676"/>
                </scope>
                <declaration name="timer" type="cern.colt.Timer" line="687"/>
                <scope line="688"/>
                <scope line="692">
                    <declaration name="reader" type="java.io.BufferedReader" line="701"/>
                    <scope line="702"/>
                    <scope line="704"/>
                    <declaration name="stream" type="java.io.StreamTokenizer" line="706"/>
                    <scope line="710">
                        <declaration name="words" type="cern.colt.list.ObjectArrayList" line="711"/>
                        <declaration name="token" type="int" line="712"/>
                        <scope line="713">
                            <scope line="714">
                                <scope line="716">
                                    <declaration name="params" type="String[]" line="717"/>
                                </scope>
                            </scope>
                            <scope line="726">
                                <declaration name="word" type="String" line="727"/>
                                <declaration name="formatter" type="cern.colt.matrix.impl.Former" line="728"/>
                            </scope>
                        </scope>
                        <scope line="740"/>
                        <scope line="742"/>
                        <declaration name="line" type="String" line="748"/>
                        <scope line="749"/>
                    </scope>
                    <scope line="754"/>
                </scope>
            </method>
            <javadoc line="760">
                Executes procedure repeatadly until more than minSeconds have elapsed.                
            </javadoc>
            <method name="run" type="void" line="763">
                <params>
                    <param name="minSeconds" type="double"/>
                    <param name="title" type="String"/>
                    <param name="function" type="Double2DProcedure"/>
                    <param name="types" type="String[]"/>
                    <param name="sizes" type="int[]"/>
                    <param name="densities" type="double[]"/>
                </params>
                <comment line="764">
                    int[] sizes = {33,500,1000};                    
                </comment>
                <comment line="764">
                    double[] densities = {0.001,0.01,0.99};                    
                </comment>
                <comment line="764">
                    int[] sizes = {3,5,7,9,30,45,60,61,100,200,300,500,800,1000};                    
                </comment>
                <comment line="764">
                    double[] densities = {0.001,0.01,0.1,0.999};                    
                </comment>
                <comment line="764">
                    int[] sizes = {3};                    
                </comment>
                <comment line="764">
                    double[] densities = {0.1};                    
                </comment>
                <comment line="764">
                    ring colAxisName = &quot;d&quot;; //&quot;density&quot;;                    
                </comment>
                <comment line="764">
                    String[] sliceNames = {&quot;dense&quot;, &quot;sparse&quot;};                    
                </comment>
                <comment line="764">
                    String[] sliceNames = {&quot;dense&quot;, &quot;sparse&quot;, &quot;rowCompressed&quot;};                    
                </comment>
                <comment line="764">
                    p.aida.bin.BinFunction1D[] aggr = null; //{F.mean, F.median, F.sum};                    
                </comment>
                <comment line="764">
                    show transposed                    
                </comment>
                <comment line="764">
                    title = &quot;Speedup of dense over sparse&quot;;
                    DoubleMatrix2D speedup = cern.colt.matrix.doublealgo.Transform.div(timings.viewSlice(0).copy(),timings.viewSlice(1));
                    System.out.println(&quot;\n&quot;+new cern.colt.matrix.doublealgo.Formatter(&quot;%1.3G&quot;).toTitleString(speedup,rowNames,colNames,rowAxisName,colAxisName,title,aggr));                    
                </comment>
                <declaration name="timings" type="DoubleMatrix3D" line="773"/>
                <declaration name="runTime" type="cern.colt.Timer" line="774"/>
                <scope line="775">
                    <declaration name="factory" type="DoubleFactory2D" line="778"/>
                    <scope line="781">
                        <declaration name="size" type="int" line="782"/>
                        <scope line="786">
                            <declaration name="density" type="double" line="787"/>
                            <declaration name="opsPerSec" type="float" line="790"/>
                            <scope line="794">
                                <declaration name="val" type="double" line="795"/>
                                <declaration name="A" type="DoubleMatrix2D" line="797"/>
                                <declaration name="B" type="DoubleMatrix2D" line="798"/>
                                <declaration name="ops" type="double" line="801"/>
                                <declaration name="secs" type="double" line="802"/>
                            </scope>
                            <scope line="805"/>
                        </scope>
                    </scope>
                </scope>
                <declaration name="sliceAxisName" type="String" line="816"/>
                <declaration name="rowAxisName" type="String" line="817"/>
                <declaration name="colAxisName" type="String" line="818"/>
                <declaration name="sliceNames" type="String[]" line="821"/>
                <declaration name="F" type="hep.aida.bin.BinFunctions1D" line="822"/>
                <declaration name="aggr" type="hep.aida.bin.BinFunction1D[]" line="823"/>
                <declaration name="rowNames" type="String[]" line="824"/>
                <declaration name="colNames" type="String[]" line="825"/>
                <declaration name="tmp" type="String" line="830"/>
                <declaration name="tmp2" type="String[]" line="831"/>
            </method>
            <javadoc line="841">
                Executes procedure repeatadly until more than minSeconds have elapsed.                
            </javadoc>
            <method name="runSpecial" type="void" line="844">
                <params>
                    <param name="minSeconds" type="double"/>
                    <param name="title" type="String"/>
                    <param name="function" type="Double2DProcedure"/>
                </params>
                <comment line="845">
                    p.aida.bin.BinFunction1D[] aggr = null; //{F.mean, F.median, F.sum};                    
                </comment>
                <declaration name="sizes" type="int[]" line="845"/>
                <declaration name="densities" type="double[]" line="846"/>
                <declaration name="sparses" type="boolean[]" line="847"/>
                <declaration name="timings" type="DoubleMatrix2D" line="849"/>
                <declaration name="runTime" type="cern.colt.Timer" line="850"/>
                <scope line="851">
                    <declaration name="size" type="int" line="852"/>
                    <declaration name="density" type="double" line="853"/>
                    <declaration name="sparse" type="boolean" line="854"/>
                    <declaration name="factory" type="DoubleFactory2D" line="855"/>
                    <declaration name="val" type="double" line="859"/>
                    <declaration name="A" type="DoubleMatrix2D" line="861"/>
                    <declaration name="B" type="DoubleMatrix2D" line="862"/>
                    <declaration name="secs" type="float" line="865"/>
                    <declaration name="ops" type="double" line="866"/>
                    <declaration name="opsPerSec" type="float" line="867"/>
                </scope>
                <declaration name="F" type="hep.aida.bin.BinFunctions1D" line="877"/>
                <declaration name="aggr" type="hep.aida.bin.BinFunction1D[]" line="878"/>
                <declaration name="rowNames" type="String[]" line="879"/>
                <declaration name="colNames" type="String[]" line="880"/>
                <declaration name="rowAxisName" type="String" line="881"/>
                <declaration name="colAxisName" type="String" line="882"/>
            </method>
            <javadoc line="888">
                Overall usage.                
            </javadoc>
            <method name="usage" type="String" line="891">
                <declaration name="usage" type="String" line="892"/>
            </method>
            <javadoc line="913">
                Usage of a specific command.                
            </javadoc>
            <method name="usage" type="String" line="916">
                <params>
                    <param name="cmd" type="String"/>
                </params>
                <declaration name="usage" type="String" line="917"/>
            </method>
        </class>
    </source>