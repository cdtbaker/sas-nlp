<?xml version="1.0" encoding="UTF-8"?>
    <source package="cern.colt.matrix.linalg">
        <import package="cern.colt.matrix.DoubleMatrix1D"/>
        <import package="cern.colt.matrix.DoubleMatrix2D"/>
        <class name="SeqBlas" line="13">
            <implements interface="Blas"/>
            <javadoc line="13">
                Sequential implementation of the Basic Linear Algebra System.                
                <@author>
                    r wolfgang.hoschek@cern.ch                    
                </@author>
                <@version>
                    n 0.9, 16/04/2000                    
                </@version>
            </javadoc>
            <declaration name="seqBlas" type="Blas" line="20"/>
            <javadoc line="20">
                Little trick to allow for &quot;aliasing&quot;, that is, renaming this class.
                 * Time and again writing code like
                 * &lt;p&gt;
                 * &lt;tt&gt;SeqBlas.blas.dgemm(...);&lt;/tt&gt;
                 * &lt;p&gt;
                 * is a bit awkward. Using the aliasing you can instead write
                 * &lt;p&gt;
                 * &lt;tt&gt;Blas B = SeqBlas.blas; &lt;br&gt;
                 * B.dgemm(...);&lt;/tt&gt;                
            </javadoc>
            <declaration name="F" type="cern.jet.math.Functions" line="33"/>
            <javadoc line="34">
                Makes this class non instantiable, but still let&apos;s others inherit from it.                
            </javadoc>
            <method name="SeqBlas" type="constructor" line="37"/>
            <method name="assign" type="void" line="38"/>
            <method name="assign" type="void" line="41"/>
            <method name="dasum" type="double" line="44"/>
            <method name="daxpy" type="void" line="47"/>
            <method name="daxpy" type="void" line="50"/>
            <method name="dcopy" type="void" line="53"/>
            <method name="dcopy" type="void" line="56"/>
            <method name="ddot" type="double" line="59"/>
            <method name="dgemm" type="void" line="62"/>
            <method name="dgemv" type="void" line="65"/>
            <method name="dger" type="void" line="68">
                <declaration name="fun" type="cern.jet.math.PlusMult" line="69"/>
                <scope line="70"/>
            </method>
            <method name="dnrm2" type="double" line="76"/>
            <method name="drot" type="void" line="79">
                <declaration name="tmp" type="DoubleMatrix1D" line="81"/>
            </method>
            <method name="drotg" type="void" line="89">
                <declaration name="c" type="double" line="90"/>
                <scope line="98"/>
                <scope line="110"/>
            </method>
            <method name="dscal" type="void" line="128"/>
            <method name="dscal" type="void" line="132"/>
            <method name="dswap" type="void" line="136"/>
            <method name="dswap" type="void" line="139">
                <comment line="140">
                    B.swap(A); not yet implemented                    
                </comment>
            </method>
            <method name="dsymv" type="void" line="144">
                <declaration name="size" type="int" line="147"/>
                <scope line="148"/>
                <declaration name="tmp" type="DoubleMatrix1D" line="151"/>
                <scope line="152">
                    <declaration name="sum" type="double" line="153"/>
                    <scope line="154"/>
                    <scope line="157"/>
                </scope>
            </method>
            <method name="dtrmv" type="void" line="164">
                <scope line="165"/>
                <declaration name="size" type="int" line="171"/>
                <scope line="172"/>
                <declaration name="b" type="DoubleMatrix1D" line="176"/>
                <declaration name="y" type="DoubleMatrix1D" line="177"/>
                <scope line="178"/>
                <scope line="181">
                    <scope line="182"/>
                </scope>
                <scope line="187">
                    <declaration name="sum" type="double" line="188"/>
                    <scope line="189">
                        <scope line="190"/>
                    </scope>
                    <scope line="195">
                        <scope line="197"/>
                    </scope>
                </scope>
            </method>
            <method name="idamax" type="int" line="204">
                <declaration name="maxIndex" type="int" line="205"/>
                <declaration name="maxValue" type="double" line="206"/>
                <scope line="207">
                    <declaration name="v" type="double" line="208"/>
                    <scope line="209"/>
                </scope>
            </method>
            <javadoc line="216">
                Implements the FORTRAN sign (not sin) function.
                 * See the code for details.                
                <@param>
                    m a   a                    
                </@param>
                <@param>
                    m b   b                    
                </@param>
            </javadoc>
            <method name="sign" type="double" line="222">
                <scope line="223"/>
                <scope line="225"/>
            </method>
        </class>
    </source>