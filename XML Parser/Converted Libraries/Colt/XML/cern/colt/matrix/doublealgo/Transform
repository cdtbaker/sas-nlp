<?xml version="1.0" encoding="UTF-8"?>
    <source package="cern.colt.matrix.doublealgo">
        <import package="cern.colt.matrix.DoubleMatrix1D"/>
        <import package="cern.colt.matrix.DoubleMatrix2D"/>
        <class name="Transform" line="13">
            <extends class="cern.colt.PersistentObject"/>
            <comment line="14">
                ivate static final cern.jet.math.Functions F = cern.jet.math.Functions.functions; // alias                
            </comment>
            <javadoc line="13">
                Deprecated; Basic element-by-element transformations on {@link cern.colt.matrix.DoubleMatrix1D} and {@link cern.colt.matrix.DoubleMatrix2D}.
                  All transformations modify the first argument matrix to hold the result of the transformation.
                  Use idioms like &lt;tt&gt;result = mult(matrix.copy(),5)&lt;/tt&gt; to leave source matrices unaffected.
                  &lt;p&gt;
                  If your favourite transformation is not provided by this class, consider using method &lt;tt&gt;assign&lt;/tt&gt; in combination with prefabricated function objects of {@link cern.jet.math.Functions},
                  using idioms like 
                  &lt;table&gt;
                  &lt;td class=&quot;PRE&quot;&gt; 
                  &lt;pre&gt;
                  cern.jet.math.Functions F = cern.jet.math.Functions.functions; // alias
                  matrix.assign(F.square);
                  matrix.assign(F.sqrt);
                  matrix.assign(F.sin);
                  matrix.assign(F.log);
                  matrix.assign(F.log(b));
                  matrix.assign(otherMatrix, F.min);
                  matrix.assign(otherMatrix, F.max);
                  &lt;/pre&gt;
                  &lt;/td&gt;
                  &lt;/table&gt;
                  Here are some &lt;a href=&quot;../doc-files/functionObjects.html&quot;&gt;other examples&lt;/a&gt;.
                  &lt;p&gt;
                  Implementation: Performance optimized for medium to very large matrices.
                  In fact, there is now nomore a performance advantage in using this class; The assign (transform) methods directly defined on matrices are now just as fast.
                  Thus, this class will soon be removed altogether.                
                <@deprecated>
                    d                    
                </@deprecated>
                <@author>
                    r wolfgang.hoschek@cern.ch                    
                </@author>
                <@version>
                    n 1.0, 09/24/99                    
                </@version>
            </javadoc>
            <declaration name="transform" type="Transform" line="45"/>
            <javadoc line="45">
                Little trick to allow for &quot;aliasing&quot;, that is, renaming this class.
                  Normally you would write
                  &lt;pre&gt;
                  Transform.mult(myMatrix,2);
                  Transform.plus(myMatrix,5);
                  &lt;/pre&gt;
                  Since this class has only static methods, but no instance methods
                  you can also shorten the name &quot;DoubleTransform&quot; to a name that better suits you, for example &quot;Trans&quot;.
                  &lt;pre&gt;
                  Transform T = Transform.transform; // kind of &quot;alias&quot;
                  T.mult(myMatrix,2);
                  T.plus(myMatrix,5);
                  &lt;/pre&gt;                
            </javadoc>
            <declaration name="F" type="cern.jet.math.Functions" line="62"/>
            <javadoc line="64">
                Makes this class non instantiable, but still let&apos;s others inherit from it.                
            </javadoc>
            <method name="Transform" type="constructor" line="67"/>
            <javadoc line="68">
                &lt;tt&gt;A[i] = Math.abs(A[i])&lt;/tt&gt;.                
                <@param>
                    m A the matrix to modify.                    
                </@param>
                <@return>
                    n <tt>A</tt> (for convenience only).                    
                </@return>
            </javadoc>
            <method name="abs" type="DoubleMatrix1D" line="73">
                <params>
                    <param name="A" type="DoubleMatrix1D"/>
                </params>
            </method>
            <javadoc line="76">
                &lt;tt&gt;A[row,col] = Math.abs(A[row,col])&lt;/tt&gt;.                
                <@param>
                    m A the matrix to modify.                    
                </@param>
                <@return>
                    n <tt>A</tt> (for convenience only).                    
                </@return>
            </javadoc>
            <method name="abs" type="DoubleMatrix2D" line="81">
                <params>
                    <param name="A" type="DoubleMatrix2D"/>
                </params>
            </method>
            <javadoc line="84">
                &lt;tt&gt;A = A / s &lt;=&gt; A[i] = A[i] / s&lt;/tt&gt;.                
                <@param>
                    m A the matrix to modify.                    
                </@param>
                <@param>
                    m s the scalar; can have any value.                    
                </@param>
                <@return>
                    n <tt>A</tt> (for convenience only).                    
                </@return>
            </javadoc>
            <method name="div" type="DoubleMatrix1D" line="90">
                <params>
                    <param name="A" type="DoubleMatrix1D"/>
                    <param name="s" type="double"/>
                </params>
            </method>
            <javadoc line="93">
                &lt;tt&gt;A = A / B &lt;=&gt; A[i] = A[i] / B[i]&lt;/tt&gt;.                
                <@param>
                    m A the matrix to modify.                    
                </@param>
                <@param>
                    m B the matrix to stay unaffected.                    
                </@param>
                <@return>
                    n <tt>A</tt> (for convenience only).                    
                </@return>
            </javadoc>
            <method name="div" type="DoubleMatrix1D" line="99">
                <params>
                    <param name="A" type="DoubleMatrix1D"/>
                    <param name="B" type="DoubleMatrix1D"/>
                </params>
            </method>
            <javadoc line="102">
                &lt;tt&gt;A = A / s &lt;=&gt; A[row,col] = A[row,col] / s&lt;/tt&gt;.                
                <@param>
                    m A the matrix to modify.                    
                </@param>
                <@param>
                    m s the scalar; can have any value.                    
                </@param>
                <@return>
                    n <tt>A</tt> (for convenience only).                    
                </@return>
            </javadoc>
            <method name="div" type="DoubleMatrix2D" line="108">
                <params>
                    <param name="A" type="DoubleMatrix2D"/>
                    <param name="s" type="double"/>
                </params>
            </method>
            <javadoc line="111">
                &lt;tt&gt;A = A / B &lt;=&gt; A[row,col] = A[row,col] / B[row,col]&lt;/tt&gt;.                
                <@param>
                    m A the matrix to modify.                    
                </@param>
                <@param>
                    m B the matrix to stay unaffected.                    
                </@param>
                <@return>
                    n <tt>A</tt> (for convenience only).                    
                </@return>
            </javadoc>
            <method name="div" type="DoubleMatrix2D" line="117">
                <params>
                    <param name="A" type="DoubleMatrix2D"/>
                    <param name="B" type="DoubleMatrix2D"/>
                </params>
            </method>
            <javadoc line="120">
                &lt;tt&gt;A[row,col] = A[row,col] == s ? 1 : 0&lt;/tt&gt;; ignores tolerance.                
                <@param>
                    m A the matrix to modify.                    
                </@param>
                <@param>
                    m s the scalar; can have any value.                    
                </@param>
                <@return>
                    n <tt>A</tt> (for convenience only).                    
                </@return>
            </javadoc>
            <method name="equals" type="DoubleMatrix2D" line="126">
                <params>
                    <param name="A" type="DoubleMatrix2D"/>
                    <param name="s" type="double"/>
                </params>
            </method>
            <javadoc line="129">
                &lt;tt&gt;A[row,col] = A[row,col] == B[row,col] ? 1 : 0&lt;/tt&gt;; ignores tolerance.                
                <@param>
                    m A the matrix to modify.                    
                </@param>
                <@param>
                    m B the matrix to stay unaffected.                    
                </@param>
                <@return>
                    n <tt>A</tt> (for convenience only).                    
                </@return>
            </javadoc>
            <method name="equals" type="DoubleMatrix2D" line="135">
                <params>
                    <param name="A" type="DoubleMatrix2D"/>
                    <param name="B" type="DoubleMatrix2D"/>
                </params>
            </method>
            <javadoc line="138">
                &lt;tt&gt;A[row,col] = A[row,col] &gt; s ? 1 : 0&lt;/tt&gt;.                
                <@param>
                    m A the matrix to modify.                    
                </@param>
                <@param>
                    m s the scalar; can have any value.                    
                </@param>
                <@return>
                    n <tt>A</tt> (for convenience only).                    
                </@return>
            </javadoc>
            <method name="greater" type="DoubleMatrix2D" line="144">
                <params>
                    <param name="A" type="DoubleMatrix2D"/>
                    <param name="s" type="double"/>
                </params>
            </method>
            <javadoc line="147">
                &lt;tt&gt;A[row,col] = A[row,col] &gt; B[row,col] ? 1 : 0&lt;/tt&gt;.                
                <@param>
                    m A the matrix to modify.                    
                </@param>
                <@param>
                    m B the matrix to stay unaffected.                    
                </@param>
                <@return>
                    n <tt>A</tt> (for convenience only).                    
                </@return>
            </javadoc>
            <method name="greater" type="DoubleMatrix2D" line="153">
                <params>
                    <param name="A" type="DoubleMatrix2D"/>
                    <param name="B" type="DoubleMatrix2D"/>
                </params>
            </method>
            <javadoc line="156">
                &lt;tt&gt;A[row,col] = A[row,col] &lt; s ? 1 : 0&lt;/tt&gt;.                
                <@param>
                    m A the matrix to modify.                    
                </@param>
                <@param>
                    m s the scalar; can have any value.                    
                </@param>
                <@return>
                    n <tt>A</tt> (for convenience only).                    
                </@return>
            </javadoc>
            <method name="less" type="DoubleMatrix2D" line="162">
                <params>
                    <param name="A" type="DoubleMatrix2D"/>
                    <param name="s" type="double"/>
                </params>
            </method>
            <javadoc line="165">
                &lt;tt&gt;A[row,col] = A[row,col] &lt; B[row,col] ? 1 : 0&lt;/tt&gt;.                
                <@param>
                    m A the matrix to modify.                    
                </@param>
                <@param>
                    m B the matrix to stay unaffected.                    
                </@param>
                <@return>
                    n <tt>A</tt> (for convenience only).                    
                </@return>
            </javadoc>
            <method name="less" type="DoubleMatrix2D" line="171">
                <params>
                    <param name="A" type="DoubleMatrix2D"/>
                    <param name="B" type="DoubleMatrix2D"/>
                </params>
            </method>
            <javadoc line="174">
                &lt;tt&gt;A = A - s &lt;=&gt; A[i] = A[i] - s&lt;/tt&gt;.                
                <@param>
                    m A the matrix to modify.                    
                </@param>
                <@param>
                    m s the scalar; can have any value.                    
                </@param>
                <@return>
                    n <tt>A</tt> (for convenience only).                    
                </@return>
            </javadoc>
            <method name="minus" type="DoubleMatrix1D" line="180">
                <params>
                    <param name="A" type="DoubleMatrix1D"/>
                    <param name="s" type="double"/>
                </params>
            </method>
            <javadoc line="183">
                &lt;tt&gt;A = A - B &lt;=&gt; A[i] = A[i] - B[i]&lt;/tt&gt;.                
                <@param>
                    m A the matrix to modify.                    
                </@param>
                <@param>
                    m B the matrix to stay unaffected.                    
                </@param>
                <@return>
                    n <tt>A</tt> (for convenience only).                    
                </@return>
            </javadoc>
            <method name="minus" type="DoubleMatrix1D" line="189">
                <params>
                    <param name="A" type="DoubleMatrix1D"/>
                    <param name="B" type="DoubleMatrix1D"/>
                </params>
            </method>
            <javadoc line="192">
                &lt;tt&gt;A = A - s &lt;=&gt; A[row,col] = A[row,col] - s&lt;/tt&gt;.                
                <@param>
                    m A the matrix to modify.                    
                </@param>
                <@param>
                    m s the scalar; can have any value.                    
                </@param>
                <@return>
                    n <tt>A</tt> (for convenience only).                    
                </@return>
            </javadoc>
            <method name="minus" type="DoubleMatrix2D" line="198">
                <params>
                    <param name="A" type="DoubleMatrix2D"/>
                    <param name="s" type="double"/>
                </params>
            </method>
            <javadoc line="201">
                &lt;tt&gt;A = A - B &lt;=&gt; A[row,col] = A[row,col] - B[row,col]&lt;/tt&gt;.                
                <@param>
                    m A the matrix to modify.                    
                </@param>
                <@param>
                    m B the matrix to stay unaffected.                    
                </@param>
                <@return>
                    n <tt>A</tt> (for convenience only).                    
                </@return>
            </javadoc>
            <method name="minus" type="DoubleMatrix2D" line="207">
                <params>
                    <param name="A" type="DoubleMatrix2D"/>
                    <param name="B" type="DoubleMatrix2D"/>
                </params>
            </method>
            <javadoc line="210">
                &lt;tt&gt;A = A - Bs &lt;=&gt; A[i] = A[i] - B[i]s&lt;/tt&gt;.                
                <@param>
                    m A the matrix to modify.                    
                </@param>
                <@param>
                    m B the matrix to stay unaffected.                    
                </@param>
                <@param>
                    m s the scalar; can have any value.                    
                </@param>
                <@return>
                    n <tt>A</tt> (for convenience only).                    
                </@return>
            </javadoc>
            <method name="minusMult" type="DoubleMatrix1D" line="217">
                <params>
                    <param name="A" type="DoubleMatrix1D"/>
                    <param name="B" type="DoubleMatrix1D"/>
                    <param name="s" type="double"/>
                </params>
            </method>
            <javadoc line="220">
                &lt;tt&gt;A = A - Bs &lt;=&gt; A[row,col] = A[row,col] - B[row,col]s&lt;/tt&gt;.                
                <@param>
                    m A the matrix to modify.                    
                </@param>
                <@param>
                    m B the matrix to stay unaffected.                    
                </@param>
                <@param>
                    m s the scalar; can have any value.                    
                </@param>
                <@return>
                    n <tt>A</tt> (for convenience only).                    
                </@return>
            </javadoc>
            <method name="minusMult" type="DoubleMatrix2D" line="227">
                <params>
                    <param name="A" type="DoubleMatrix2D"/>
                    <param name="B" type="DoubleMatrix2D"/>
                    <param name="s" type="double"/>
                </params>
            </method>
            <javadoc line="230">
                &lt;tt&gt;A = A  s &lt;=&gt; A[i] = A[i]  s&lt;/tt&gt;.                
                <@param>
                    m A the matrix to modify.                    
                </@param>
                <@param>
                    m s the scalar; can have any value.                    
                </@param>
                <@return>
                    n <tt>A</tt> (for convenience only).                    
                </@return>
            </javadoc>
            <method name="mult" type="DoubleMatrix1D" line="236">
                <params>
                    <param name="A" type="DoubleMatrix1D"/>
                    <param name="s" type="double"/>
                </params>
            </method>
            <javadoc line="239">
                &lt;tt&gt;A = A  B &lt;=&gt; A[i] = A[i]  B[i]&lt;/tt&gt;.                
                <@param>
                    m A the matrix to modify.                    
                </@param>
                <@param>
                    m B the matrix to stay unaffected.                    
                </@param>
                <@return>
                    n <tt>A</tt> (for convenience only).                    
                </@return>
            </javadoc>
            <method name="mult" type="DoubleMatrix1D" line="245">
                <params>
                    <param name="A" type="DoubleMatrix1D"/>
                    <param name="B" type="DoubleMatrix1D"/>
                </params>
            </method>
            <javadoc line="248">
                &lt;tt&gt;A = A  s &lt;=&gt; A[row,col] = A[row,col]  s&lt;/tt&gt;.                
                <@param>
                    m A the matrix to modify.                    
                </@param>
                <@param>
                    m s the scalar; can have any value.                    
                </@param>
                <@return>
                    n <tt>A</tt> (for convenience only).                    
                </@return>
            </javadoc>
            <method name="mult" type="DoubleMatrix2D" line="254">
                <params>
                    <param name="A" type="DoubleMatrix2D"/>
                    <param name="s" type="double"/>
                </params>
            </method>
            <javadoc line="257">
                &lt;tt&gt;A = A  B &lt;=&gt; A[row,col] = A[row,col]  B[row,col]&lt;/tt&gt;.                
                <@param>
                    m A the matrix to modify.                    
                </@param>
                <@param>
                    m B the matrix to stay unaffected.                    
                </@param>
                <@return>
                    n <tt>A</tt> (for convenience only).                    
                </@return>
            </javadoc>
            <method name="mult" type="DoubleMatrix2D" line="263">
                <params>
                    <param name="A" type="DoubleMatrix2D"/>
                    <param name="B" type="DoubleMatrix2D"/>
                </params>
            </method>
            <javadoc line="266">
                &lt;tt&gt;A = -A &lt;=&gt; A[i] = -A[i]&lt;/tt&gt; for all cells.                
                <@return>
                    n <tt>A</tt> (for convenience only).                    
                </@return>
            </javadoc>
            <method name="negate" type="DoubleMatrix1D" line="270">
                <params>
                    <param name="A" type="DoubleMatrix1D"/>
                </params>
            </method>
            <javadoc line="273">
                &lt;tt&gt;A = -A &lt;=&gt; A[row,col] = -A[row,col]&lt;/tt&gt;.                
                <@return>
                    n <tt>A</tt> (for convenience only).                    
                </@return>
            </javadoc>
            <method name="negate" type="DoubleMatrix2D" line="277">
                <params>
                    <param name="A" type="DoubleMatrix2D"/>
                </params>
            </method>
            <javadoc line="280">
                &lt;tt&gt;A = A + s &lt;=&gt; A[i] = A[i] + s&lt;/tt&gt;.                
                <@param>
                    m A the matrix to modify.                    
                </@param>
                <@param>
                    m s the scalar; can have any value.                    
                </@param>
                <@return>
                    n <tt>A</tt> (for convenience only).                    
                </@return>
            </javadoc>
            <method name="plus" type="DoubleMatrix1D" line="286">
                <params>
                    <param name="A" type="DoubleMatrix1D"/>
                    <param name="s" type="double"/>
                </params>
            </method>
            <javadoc line="289">
                &lt;tt&gt;A = A + B &lt;=&gt; A[i] = A[i] + B[i]&lt;/tt&gt;.                
                <@param>
                    m A the matrix to modify.                    
                </@param>
                <@param>
                    m B the matrix to stay unaffected.                    
                </@param>
                <@return>
                    n <tt>A</tt> (for convenience only).                    
                </@return>
            </javadoc>
            <method name="plus" type="DoubleMatrix1D" line="295">
                <params>
                    <param name="A" type="DoubleMatrix1D"/>
                    <param name="B" type="DoubleMatrix1D"/>
                </params>
            </method>
            <javadoc line="298">
                &lt;tt&gt;A = A + s &lt;=&gt; A[row,col] = A[row,col] + s&lt;/tt&gt;.                
                <@param>
                    m A the matrix to modify.                    
                </@param>
                <@param>
                    m s the scalar; can have any value.                    
                </@param>
                <@return>
                    n <tt>A</tt> (for convenience only).                    
                </@return>
            </javadoc>
            <method name="plus" type="DoubleMatrix2D" line="304">
                <params>
                    <param name="A" type="DoubleMatrix2D"/>
                    <param name="s" type="double"/>
                </params>
            </method>
            <javadoc line="307">
                &lt;tt&gt;A = A + B &lt;=&gt; A[row,col] = A[row,col] + B[row,col]&lt;/tt&gt;.                
                <@param>
                    m A the matrix to modify.                    
                </@param>
                <@param>
                    m B the matrix to stay unaffected.                    
                </@param>
                <@return>
                    n <tt>A</tt> (for convenience only).                    
                </@return>
            </javadoc>
            <method name="plus" type="DoubleMatrix2D" line="313">
                <params>
                    <param name="A" type="DoubleMatrix2D"/>
                    <param name="B" type="DoubleMatrix2D"/>
                </params>
            </method>
            <javadoc line="316">
                &lt;tt&gt;A = A + Bs&lt;=&gt; A[i] = A[i] + B[i]s&lt;/tt&gt;.                
                <@param>
                    m A the matrix to modify.                    
                </@param>
                <@param>
                    m B the matrix to stay unaffected.                    
                </@param>
                <@param>
                    m s the scalar; can have any value.                    
                </@param>
                <@return>
                    n <tt>A</tt> (for convenience only).                    
                </@return>
            </javadoc>
            <method name="plusMult" type="DoubleMatrix1D" line="323">
                <params>
                    <param name="A" type="DoubleMatrix1D"/>
                    <param name="B" type="DoubleMatrix1D"/>
                    <param name="s" type="double"/>
                </params>
            </method>
            <javadoc line="326">
                &lt;tt&gt;A = A + Bs &lt;=&gt; A[row,col] = A[row,col] + B[row,col]s&lt;/tt&gt;.                
                <@param>
                    m A the matrix to modify.                    
                </@param>
                <@param>
                    m B the matrix to stay unaffected.                    
                </@param>
                <@param>
                    m s the scalar; can have any value.                    
                </@param>
                <@return>
                    n <tt>A</tt> (for convenience only).                    
                </@return>
            </javadoc>
            <method name="plusMult" type="DoubleMatrix2D" line="333">
                <params>
                    <param name="A" type="DoubleMatrix2D"/>
                    <param name="B" type="DoubleMatrix2D"/>
                    <param name="s" type="double"/>
                </params>
            </method>
            <javadoc line="336">
                &lt;tt&gt;A = A&lt;sup&gt;s&lt;/sup&gt; &lt;=&gt; A[i] = Math.pow(A[i], s)&lt;/tt&gt;.                
                <@param>
                    m A the matrix to modify.                    
                </@param>
                <@param>
                    m s the scalar; can have any value.                    
                </@param>
                <@return>
                    n <tt>A</tt> (for convenience only).                    
                </@return>
            </javadoc>
            <method name="pow" type="DoubleMatrix1D" line="342">
                <params>
                    <param name="A" type="DoubleMatrix1D"/>
                    <param name="s" type="double"/>
                </params>
            </method>
            <javadoc line="345">
                &lt;tt&gt;A = A&lt;sup&gt;B&lt;/sup&gt; &lt;=&gt; A[i] = Math.pow(A[i], B[i])&lt;/tt&gt;.                
                <@param>
                    m A the matrix to modify.                    
                </@param>
                <@param>
                    m B the matrix to stay unaffected.                    
                </@param>
                <@return>
                    n <tt>A</tt> (for convenience only).                    
                </@return>
            </javadoc>
            <method name="pow" type="DoubleMatrix1D" line="351">
                <params>
                    <param name="A" type="DoubleMatrix1D"/>
                    <param name="B" type="DoubleMatrix1D"/>
                </params>
            </method>
            <javadoc line="354">
                &lt;tt&gt;A = A&lt;sup&gt;s&lt;/sup&gt; &lt;=&gt; A[row,col] = Math.pow(A[row,col], s)&lt;/tt&gt;.                
                <@param>
                    m A the matrix to modify.                    
                </@param>
                <@param>
                    m s the scalar; can have any value.                    
                </@param>
                <@return>
                    n <tt>A</tt> (for convenience only).                    
                </@return>
            </javadoc>
            <method name="pow" type="DoubleMatrix2D" line="360">
                <params>
                    <param name="A" type="DoubleMatrix2D"/>
                    <param name="s" type="double"/>
                </params>
            </method>
            <javadoc line="363">
                &lt;tt&gt;A = A&lt;sup&gt;B&lt;/sup&gt; &lt;=&gt; A[row,col] = Math.pow(A[row,col], B[row,col])&lt;/tt&gt;.                
                <@param>
                    m A the matrix to modify.                    
                </@param>
                <@param>
                    m B the matrix to stay unaffected.                    
                </@param>
                <@return>
                    n <tt>A</tt> (for convenience only).                    
                </@return>
            </javadoc>
            <method name="pow" type="DoubleMatrix2D" line="369">
                <params>
                    <param name="A" type="DoubleMatrix2D"/>
                    <param name="B" type="DoubleMatrix2D"/>
                </params>
            </method>
        </class>
    </source>