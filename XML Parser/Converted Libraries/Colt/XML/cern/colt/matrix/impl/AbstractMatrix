<?xml version="1.0" encoding="UTF-8"?>
    <source package="cern.colt.matrix.impl">
        <class name="AbstractMatrix" extends="cern.colt.PersistentObject" line="11">
            <comment line="12">
                public static boolean debug = true;                
            </comment>
            <javadoc line="11">
                Abstract base class for arbitrary-dimensional matrices holding objects or primitive data types such as &lt;code&gt;int&lt;/code&gt;, &lt;code&gt;float&lt;/code&gt;, etc.
                 * First see the &lt;a href=&quot;package-summary.html&quot;&gt;package summary&lt;/a&gt; and javadoc &lt;a href=&quot;package-tree.html&quot;&gt;tree view&lt;/a&gt; to get the broad picture.
                 * &lt;p&gt;
                 * &lt;b&gt;Note that this implementation is not synchronized.&lt;/b&gt;                
                <@author>
                    r wolfgang.hoschek@cern.ch                    
                </@author>
                <@version>
                    n 1.0, 09/24/99                    
                </@version>
            </javadoc>
            <declaration name="isNoView" type="boolean" line="21"/>
            <javadoc line="23">
                Makes this class non instantiable, but still let&apos;s others inherit from it.                
            </javadoc>
            <method name="AbstractMatrix" type="constructor" line="26"/>
            <javadoc line="27">
                Ensures that the receiver can hold at least the specified number of non-zero (non-null) cells without needing to allocate new internal memory.
                 * If necessary, allocates new internal memory and increases the capacity of the receiver.
                 * &lt;p&gt;
                 * This default implementation does nothing. Override this method if necessary.                
                <@param>
                    m minNonZeros   the desired minimum number of non-zero (non-null) cells.                    
                </@param>
            </javadoc>
            <method name="ensureCapacity" type="void" line="35"/>
            <javadoc line="36">
                Returns whether the receiver is a view or not.                
            </javadoc>
            <method name="isView" type="boolean" line="39"/>
            <method name="size" type="int" line="42"/>
            <javadoc line="42">
                Returns the number of cells.                
            </javadoc>
            <javadoc line="46">
                Releases any superfluous internal memory. An application can use this operation to minimize the 
                 * storage of the receiver.
                 * &lt;p&gt;
                 * This default implementation does nothing. Override this method if necessary.                
            </javadoc>
            <method name="trimToSize" type="void" line="52"/>
        </class>
    </source>