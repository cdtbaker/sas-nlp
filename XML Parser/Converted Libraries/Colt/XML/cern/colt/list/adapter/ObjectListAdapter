<?xml version="1.0" encoding="UTF-8"?>
    <source package="cern.colt.list.adapter">
        <import package="cern.colt.list.ObjectArrayList"/>
        <class name="ObjectListAdapter" line="12">
            <extends class="java.util.AbstractList"/>
            <implements interface="java.util.List"/>
            <javadoc line="12">
                Adapter that permits an {@link cern.colt.list.ObjectArrayList} to be viewed and treated as a JDK 1.2 {@link java.util.AbstractList}.
                  Makes the contained list compatible with the JDK 1.2 Collections Framework.                
            </javadoc>
            <declaration name="content" type="ObjectArrayList" line="17"/>
            <javadoc line="18">
                Constructs a list backed by the specified content list.                
            </javadoc>
            <method name="ObjectListAdapter" type="constructor" line="21">
                <params>
                    <param name="content" type="ObjectArrayList"/>
                </params>
            </method>
            <javadoc line="24">
                Inserts the specified element at the specified position in this list
                  (optional operation).  Shifts the element currently at that position
                  (if any) and any subsequent elements to the right (adds one to their
                  indices).&lt;p&gt;                
                <@param>
                    m index index at which the specified element is to be inserted.                    
                </@param>
                <@param>
                    m element element to be inserted.                    
                </@param>
                <@throws>
                    s ClassCastException if the class of the specified element
                      prevents it from being added to this list.                    
                </@throws>
                <@throws>
                    s IllegalArgumentException if some aspect of the specified
                      element prevents it from being added to this list.                    
                </@throws>
                <@throws>
                    s IndexOutOfBoundsException index is out of range (<tt>index &lt;
                      0 || index &gt; size()</tt>).                    
                </@throws>
            </javadoc>
            <method name="add" type="void" line="40">
                <params>
                    <param name="index" type="int"/>
                    <param name="element" type="Object"/>
                </params>
            </method>
            <javadoc line="44">
                Returns the element at the specified position in this list.                
                <@param>
                    m index index of element to return.                    
                </@param>
                <@return>
                    n the element at the specified position in this list.                    
                </@return>
                <@throws>
                    s IndexOutOfBoundsException if the given index is out of range
                      (<tt>index &lt; 0 || index &gt;= size()</tt>).                    
                </@throws>
            </javadoc>
            <method name="get" type="Object" line="53">
                <params>
                    <param name="index" type="int"/>
                </params>
            </method>
            <javadoc line="56">
                Removes the element at the specified position in this list (optional
                  operation).  Shifts any subsequent elements to the left (subtracts one
                  from their indices).  Returns the element that was removed from the
                  list.&lt;p&gt;                
                <@param>
                    m index the index of the element to remove.                    
                </@param>
                <@return>
                    n the element previously at the specified position.                    
                </@return>
                <@throws>
                    s IndexOutOfBoundsException if the specified index is out of
                      range (<tt>index &lt; 0 || index &gt;= size()</tt>).                    
                </@throws>
            </javadoc>
            <method name="remove" type="Object" line="68">
                <params>
                    <param name="index" type="int"/>
                </params>
                <declaration name="old" type="Object" line="69"/>
            </method>
            <javadoc line="74">
                Replaces the element at the specified position in this list with the
                  specified element (optional operation). &lt;p&gt;                
                <@param>
                    m index index of element to replace.                    
                </@param>
                <@param>
                    m element element to be stored at the specified position.                    
                </@param>
                <@return>
                    n the element previously at the specified position.                    
                </@return>
                <@throws>
                    s ClassCastException if the class of the specified element
                      prevents it from being added to this list.                    
                </@throws>
                <@throws>
                    s IllegalArgumentException if some aspect of the specified
                      element prevents it from being added to this list.                    
                </@throws>
                <@throws>
                    s IndexOutOfBoundsException if the specified index is out of
                      range (<tt>index &lt; 0 || index &gt;= size()</tt>).                    
                </@throws>
            </javadoc>
            <method name="set" type="Object" line="91">
                <params>
                    <param name="index" type="int"/>
                    <param name="element" type="Object"/>
                </params>
                <declaration name="old" type="Object" line="92"/>
            </method>
            <javadoc line="96">
                Returns the number of elements in this list.                
                <@return>
                    n  the number of elements in this list.                    
                </@return>
            </javadoc>
            <method name="size" type="int" line="101"/>
        </class>
    </source>