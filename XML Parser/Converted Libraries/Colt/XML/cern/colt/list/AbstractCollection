<?xml version="1.0" encoding="UTF-8"?>
    <source package="cern.colt.list">
        <class name="AbstractCollection" line="11">
            <extends class="cern.colt.PersistentObject"/>
            <comment line="12">
                public abstract class AbstractCollection extends Object implements Cloneable, java.io.Serializable {                
            </comment>
            <javadoc line="11">
                Abstract base class for resizable collections holding objects or primitive data types such as &lt;code&gt;int&lt;/code&gt;, &lt;code&gt;float&lt;/code&gt;, etc.
                  First see the &lt;a href=&quot;package-summary.html&quot;&gt;package summary&lt;/a&gt; and javadoc &lt;a href=&quot;package-tree.html&quot;&gt;tree view&lt;/a&gt; to get the broad picture.
                  &lt;p&gt;
                  &lt;b&gt;Note that this implementation is not synchronized.&lt;/b&gt;                
                <@author>
                    r wolfgang.hoschek@cern.ch                    
                </@author>
                <@version>
                    n 1.0, 09/24/99                    
                </@version>
                <@see>
                    e java.util.ArrayList                    
                </@see>
                <@see>
                    e java.util.Vector                    
                </@see>
                <@see>
                    e java.util.Arrays                    
                </@see>
            </javadoc>
            <javadoc line="25">
                Makes this class non instantiable, but still let&apos;s others inherit from it.                
            </javadoc>
            <method name="AbstractCollection" type="constructor" line="28"/>
            <method name="clear" type="void" line="29"/>
            <javadoc line="29">
                Removes all elements from the receiver.  The receiver will
                  be empty after this call returns.                
            </javadoc>
            <javadoc line="34">
                Tests if the receiver has no elements.                
                <@return>
                    n  <code>true</code> if the receiver has no elements;
                      <code>false</code> otherwise.                    
                </@return>
            </javadoc>
            <method name="isEmpty" type="boolean" line="40"/>
            <method name="size" type="int" line="43"/>
            <javadoc line="43">
                Returns the number of elements contained in the receiver.                
                <@returns>
                    s  the number of elements contained in the receiver.                    
                </@returns>
            </javadoc>
            <method name="toList" type="java.util.ArrayList" line="49"/>
            <javadoc line="49">
                Returns a &lt;code&gt;java.util.ArrayList&lt;/code&gt; containing all the elements in the receiver.                
            </javadoc>
            <javadoc line="53">
                Returns a string representation of the receiver, containing
                  the String representation of each element.                
            </javadoc>
            <method name="toString" type="String" line="57"/>
        </class>
    </source>