<?xml version="1.0" encoding="UTF-8"?>
    <source package="cern.colt.map">
        <class name="HashFunctions" extends="Object" line="11">
            <javadoc line="11">
                Provides various hash functions.                
                <@author>
                    r wolfgang.hoschek@cern.ch                    
                </@author>
                <@version>
                    n 1.0, 09/24/99                    
                </@version>
            </javadoc>
            <javadoc line="18">
                Makes this class non instantiable, but still let&apos;s others inherit from it.                
            </javadoc>
            <method name="HashFunctions" type="constructor" line="21"/>
            <javadoc line="22">
                Returns a hashcode for the specified value.                
                <@return>
                    n  a hash code value for the specified value.                    
                </@return>
            </javadoc>
            <method name="hash" type="int" line="27"/>
            <javadoc line="30">
                Returns a hashcode for the specified value.                
                <@return>
                    n  a hash code value for the specified value.                    
                </@return>
            </javadoc>
            <method name="hash" type="int" line="35">
                <comment line="36">
                    return (int) Double.doubleToLongBits(value*663608941.737);                    
                </comment>
                <comment line="36">
                    this avoids excessive hashCollisions in the case values are of the form (1.0, 2.0, 3.0, ...)                    
                </comment>
                <declaration name="bits" type="long" line="36"/>
            </method>
            <javadoc line="42">
                Returns a hashcode for the specified value.                
                <@return>
                    n  a hash code value for the specified value.                    
                </@return>
            </javadoc>
            <method name="hash" type="int" line="47">
                <comment line="48">
                    this avoids excessive hashCollisions in the case values are of the form (1.0, 2.0, 3.0, ...)                    
                </comment>
            </method>
            <javadoc line="51">
                Returns a hashcode for the specified value.                
                <@return>
                    n  a hash code value for the specified value.                    
                </@return>
            </javadoc>
            <method name="hash" type="int" line="56">
                <comment line="57">
                    return value * 0x278DDE6D; // see cern.jet.random.engine.DRand                    
                </comment>
                <comment line="57">
                    value &amp;= 0x7FFFFFFF;  make it &gt;=0
                    int hashCode = 0;                    
                </comment>
            </method>
            <javadoc line="70">
                Returns a hashcode for the specified value.                
                <@return>
                    n  a hash code value for the specified value.                    
                </@return>
            </javadoc>
            <method name="hash" type="int" line="75">
                <comment line="76">
                    value &amp;= 0x7FFFFFFFFFFFFFFFL;  make it &gt;=0 (0x7FFFFFFFFFFFFFFFL==Long.MAX_VALUE)
                    int hashCode = 0;                    
                </comment>
            </method>
            <javadoc line="86">
                Returns a hashcode for the specified object.                
                <@return>
                    n  a hash code value for the specified object.                    
                </@return>
            </javadoc>
            <method name="hash" type="int" line="91"/>
            <javadoc line="94">
                Returns a hashcode for the specified value.                
                <@return>
                    n  a hash code value for the specified value.                    
                </@return>
            </javadoc>
            <method name="hash" type="int" line="99"/>
            <javadoc line="102">
                Returns a hashcode for the specified value.                
                <@return>
                    n  a hash code value for the specified value.                    
                </@return>
            </javadoc>
            <method name="hash" type="int" line="107"/>
        </class>
    </source>