<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.optim.nonlinear.scalar.noderiv">
        <import package="org.apache.commons.math3.exception.TooManyEvaluationsException"/>
        <import package="org.apache.commons.math3.exception.MathUnsupportedOperationException"/>
        <import package="org.apache.commons.math3.analysis.MultivariateFunction"/>
        <import package="org.apache.commons.math3.analysis.MultivariateVectorFunction"/>
        <import package="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
        <import package="org.apache.commons.math3.linear.RealMatrix"/>
        <import package="org.apache.commons.math3.optim.InitialGuess"/>
        <import package="org.apache.commons.math3.optim.MaxEval"/>
        <import package="org.apache.commons.math3.optim.SimpleBounds"/>
        <import package="org.apache.commons.math3.optim.PointValuePair"/>
        <import package="org.apache.commons.math3.optim.nonlinear.scalar.GoalType"/>
        <import package="org.apache.commons.math3.optim.nonlinear.scalar.ObjectiveFunction"/>
        <import package="org.apache.commons.math3.optim.nonlinear.scalar.LeastSquaresConverter"/>
        <import package="org.apache.commons.math3.util.FastMath"/>
        <import package="org.junit.Assert"/>
        <import package="org.junit.Test"/>
        <class name="SimplexOptimizerNelderMeadTest" line="38">
            <method name="testBoundsUnsupported" type="void" line="40">
                <declaration name="optimizer" type="SimplexOptimizer" line="41"/>
                <declaration name="fourExtrema" type="FourExtrema" line="42"/>
            </method>
            <method name="testMinimize1" type="void" line="54">
                <comment line="55">
                    Check that the number of iterations is updated (MATH-949).                    
                </comment>
                <declaration name="optimizer" type="SimplexOptimizer" line="55"/>
                <declaration name="fourExtrema" type="FourExtrema" line="56"/>
                <declaration name="optimum" type="PointValuePair" line="58"/>
            </method>
            <method name="testMinimize2" type="void" line="75">
                <comment line="76">
                    Check that the number of iterations is updated (MATH-949).                    
                </comment>
                <declaration name="optimizer" type="SimplexOptimizer" line="76"/>
                <declaration name="fourExtrema" type="FourExtrema" line="77"/>
                <declaration name="optimum" type="PointValuePair" line="79"/>
            </method>
            <method name="testMaximize1" type="void" line="96">
                <comment line="97">
                    Check that the number of iterations is updated (MATH-949).                    
                </comment>
                <declaration name="optimizer" type="SimplexOptimizer" line="97"/>
                <declaration name="fourExtrema" type="FourExtrema" line="98"/>
                <declaration name="optimum" type="PointValuePair" line="100"/>
            </method>
            <method name="testMaximize2" type="void" line="117">
                <comment line="118">
                    Check that the number of iterations is updated (MATH-949).                    
                </comment>
                <declaration name="optimizer" type="SimplexOptimizer" line="118"/>
                <declaration name="fourExtrema" type="FourExtrema" line="119"/>
                <declaration name="optimum" type="PointValuePair" line="121"/>
            </method>
            <method name="testRosenbrock" type="void" line="138">
                <declaration name="rosenbrock" type="Rosenbrock" line="140"/>
                <declaration name="optimizer" type="SimplexOptimizer" line="141"/>
                <declaration name="optimum" type="PointValuePair" line="142"/>
            </method>
            <method name="testPowell" type="void" line="159">
                <declaration name="powell" type="Powell" line="160"/>
                <declaration name="optimizer" type="SimplexOptimizer" line="161"/>
                <declaration name="optimum" type="PointValuePair" line="162"/>
            </method>
            <method name="testLeastSquares1" type="void" line="175">
                <declaration name="factors" type="RealMatrix" line="176"/>
                <anonymous_class line="181">
                    <method name="value" type="double[]" line="182"/>
                </anonymous_class>
                <declaration name="ls" type="LeastSquaresConverter" line="181"/>
                <declaration name="optimizer" type="SimplexOptimizer" line="186"/>
                <declaration name="optimum" type="PointValuePair" line="187"/>
            </method>
            <method name="testLeastSquares2" type="void" line="201">
                <declaration name="factors" type="RealMatrix" line="202"/>
                <anonymous_class line="207">
                    <method name="value" type="double[]" line="208"/>
                </anonymous_class>
                <declaration name="ls" type="LeastSquaresConverter" line="207"/>
                <declaration name="optimizer" type="SimplexOptimizer" line="212"/>
                <declaration name="optimum" type="PointValuePair" line="213"/>
            </method>
            <method name="testLeastSquares3" type="void" line="227">
                <declaration name="factors" type="RealMatrix" line="228"/>
                <anonymous_class line="233">
                    <method name="value" type="double[]" line="234"/>
                </anonymous_class>
                <declaration name="ls" type="LeastSquaresConverter" line="233"/>
                <declaration name="optimizer" type="SimplexOptimizer" line="240"/>
                <declaration name="optimum" type="PointValuePair" line="241"/>
            </method>
            <method name="testMaxIterations" type="void" line="255">
                <declaration name="powell" type="Powell" line="256"/>
                <declaration name="optimizer" type="SimplexOptimizer" line="257"/>
            </method>
            <class name="FourExtrema" line="265">
                <comment line="266">
                    The following function has 4 local extrema.                    
                </comment>
                <comment line="266">
                    nal double valueXmYm = 0.2373295333134216789769; // Local maximum.                    
                </comment>
                <comment line="266">
                    nal double valueXmYp = -valueXmYm; // Local minimum.                    
                </comment>
                <comment line="266">
                    nal double valueXpYm = -0.7290400707055187115322; // Global minimum.                    
                </comment>
                <comment line="266">
                    nal double valueXpYp = -valueXpYm; // Global maximum.                    
                </comment>
                <implements interface="MultivariateFunction"/>
                <declaration name="xM" type="double" line="267"/>
                <declaration name="yM" type="double" line="268"/>
                <declaration name="xP" type="double" line="269"/>
                <declaration name="yP" type="double" line="270"/>
                <declaration name="valueXmYm" type="double" line="271"/>
                <declaration name="valueXmYp" type="double" line="272"/>
                <declaration name="valueXpYm" type="double" line="273"/>
                <declaration name="valueXpYp" type="double" line="274"/>
                <method name="value" type="double" line="276">
                    <declaration name="x" type="double" line="277"/>
                    <declaration name="y" type="double" line="278"/>
                </method>
            </class>
            <class name="Rosenbrock" line="284">
                <comment line="266">
                    The following function has 4 local extrema.                    
                </comment>
                <comment line="266">
                    nal double valueXmYm = 0.2373295333134216789769; // Local maximum.                    
                </comment>
                <comment line="266">
                    nal double valueXmYp = -valueXmYm; // Local minimum.                    
                </comment>
                <comment line="266">
                    nal double valueXpYm = -0.7290400707055187115322; // Global minimum.                    
                </comment>
                <comment line="266">
                    nal double valueXpYp = -valueXpYm; // Global maximum.                    
                </comment>
                <implements interface="MultivariateFunction"/>
                <declaration name="count" type="int" line="285"/>
                <method name="Rosenbrock" type="constructor" line="287"/>
                <method name="value" type="double" line="291">
                    <declaration name="a" type="double" line="293"/>
                    <declaration name="b" type="double" line="294"/>
                </method>
                <method name="getCount" type="int" line="298"/>
            </class>
            <class name="Powell" line="303">
                <comment line="266">
                    The following function has 4 local extrema.                    
                </comment>
                <comment line="266">
                    nal double valueXmYm = 0.2373295333134216789769; // Local maximum.                    
                </comment>
                <comment line="266">
                    nal double valueXmYp = -valueXmYm; // Local minimum.                    
                </comment>
                <comment line="266">
                    nal double valueXpYm = -0.7290400707055187115322; // Global minimum.                    
                </comment>
                <comment line="266">
                    nal double valueXpYp = -valueXpYm; // Global maximum.                    
                </comment>
                <implements interface="MultivariateFunction"/>
                <declaration name="count" type="int" line="304"/>
                <method name="Powell" type="constructor" line="306"/>
                <method name="value" type="double" line="310">
                    <declaration name="a" type="double" line="312"/>
                    <declaration name="b" type="double" line="313"/>
                    <declaration name="c" type="double" line="314"/>
                    <declaration name="d" type="double" line="315"/>
                </method>
                <method name="getCount" type="int" line="319"/>
            </class>
        </class>
    </source>