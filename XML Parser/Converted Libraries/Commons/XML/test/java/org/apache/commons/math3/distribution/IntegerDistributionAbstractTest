<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.distribution">
        <import package="org.apache.commons.math3.TestUtils"/>
        <import package="org.apache.commons.math3.exception.MathIllegalArgumentException"/>
        <import package="org.junit.After"/>
        <import package="org.junit.Assert"/>
        <import package="org.junit.Before"/>
        <import package="org.junit.Test"/>
        <class name="IntegerDistributionAbstractTest" line="26">
            <comment line="27">
                -------------------- Private test instance data -------------------------                
            </comment>
            <comment line="27">
                -------------------- Abstract methods -----------------------------------                
            </comment>
            <comment line="27">
                -------------------- Setup / tear down ----------------------------------                
            </comment>
            <comment line="27">
                -------------------- Verification methods -------------------------------                
            </comment>
            <comment line="27">
                ------------------------ Default test cases -----------------------------                
            </comment>
            <comment line="27">
                ------------------ Getters / Setters for test instance data -----------                
            </comment>
            <javadoc line="26">
                Abstract base class for {@link IntegerDistribution} tests.
                 * &lt;p&gt;
                 * To create a concrete test class for an integer distribution implementation,
                 * implement makeDistribution() to return a distribution instance to use in
                 * tests and each of the test data generation methods below.  In each case, the
                 * test points and test values arrays returned represent parallel arrays of
                 * inputs and expected values for the distribution returned by makeDistribution().
                 * &lt;p&gt;
                 * makeDensityTestPoints() -- arguments used to test probability density calculation
                 * makeDensityTestValues() -- expected probability densities
                 * makeCumulativeTestPoints() -- arguments used to test cumulative probabilities
                 * makeCumulativeTestValues() -- expected cumulative probabilites
                 * makeInverseCumulativeTestPoints() -- arguments used to test inverse cdf evaluation
                 * makeInverseCumulativeTestValues() -- expected inverse cdf values
                 * &lt;p&gt;
                 * To implement additional test cases with different distribution instances and test data,
                 * use the setXxx methods for the instance data in test cases and call the verifyXxx methods
                 * to verify results.                
                <@version>
                    n $Id: IntegerDistributionAbstractTest.java 1364028 2012-07-21 00:42:49Z erans $                    
                </@version>
            </javadoc>
            <declaration name="distribution" type="IntegerDistribution" line="51"/>
            <javadoc line="51">
                Discrete distribution instance used to perform tests                
            </javadoc>
            <declaration name="tolerance" type="double" line="54"/>
            <javadoc line="54">
                Tolerance used in comparing expected and returned values                
            </javadoc>
            <declaration name="densityTestPoints" type="int[]" line="57"/>
            <javadoc line="57">
                Arguments used to test probability density calculations                
            </javadoc>
            <declaration name="densityTestValues" type="double[]" line="60"/>
            <javadoc line="60">
                Values used to test probability density calculations                
            </javadoc>
            <declaration name="cumulativeTestPoints" type="int[]" line="63"/>
            <javadoc line="63">
                Arguments used to test cumulative probability density calculations                
            </javadoc>
            <declaration name="cumulativeTestValues" type="double[]" line="66"/>
            <javadoc line="66">
                Values used to test cumulative probability density calculations                
            </javadoc>
            <declaration name="inverseCumulativeTestPoints" type="double[]" line="69"/>
            <javadoc line="69">
                Arguments used to test inverse cumulative probability density calculations                
            </javadoc>
            <declaration name="inverseCumulativeTestValues" type="int[]" line="72"/>
            <javadoc line="72">
                Values used to test inverse cumulative probability density calculations                
            </javadoc>
            <method name="makeDistribution" type="IntegerDistribution" line="77"/>
            <javadoc line="77">
                Creates the default discrete distribution instance to use in tests.                
            </javadoc>
            <method name="makeDensityTestPoints" type="int[]" line="80"/>
            <javadoc line="80">
                Creates the default probability density test input values                
            </javadoc>
            <method name="makeDensityTestValues" type="double[]" line="83"/>
            <javadoc line="83">
                Creates the default probability density test expected values                
            </javadoc>
            <method name="makeCumulativeTestPoints" type="int[]" line="86"/>
            <javadoc line="86">
                Creates the default cumulative probability density test input values                
            </javadoc>
            <method name="makeCumulativeTestValues" type="double[]" line="89"/>
            <javadoc line="89">
                Creates the default cumulative probability density test expected values                
            </javadoc>
            <method name="makeInverseCumulativeTestPoints" type="double[]" line="92"/>
            <javadoc line="92">
                Creates the default inverse cumulative probability test input values                
            </javadoc>
            <method name="makeInverseCumulativeTestValues" type="int[]" line="95"/>
            <javadoc line="95">
                Creates the default inverse cumulative probability density test expected values                
            </javadoc>
            <javadoc line="100">
                Setup sets all test instance data to default values                
            </javadoc>
            <method name="setUp" type="void" line="104"/>
            <javadoc line="114">
                Cleans up test instance data                
            </javadoc>
            <method name="tearDown" type="void" line="118"/>
            <javadoc line="130">
                Verifies that probability density calculations match expected values
                 * using current test instance data                
            </javadoc>
            <method name="verifyDensities" type="void" line="134">
                <scope line="135"/>
            </method>
            <javadoc line="142">
                Verifies that cumulative probability density calculations match expected values
                 * using current test instance data                
            </javadoc>
            <method name="verifyCumulativeProbabilities" type="void" line="146">
                <scope line="147"/>
            </method>
            <javadoc line="155">
                Verifies that inverse cumulative probability density calculations match expected values
                 * using current test instance data                
            </javadoc>
            <method name="verifyInverseCumulativeProbabilities" type="void" line="159">
                <scope line="160"/>
            </method>
            <javadoc line="169">
                Verifies that probability density calculations match expected values
                 * using default test instance data                
            </javadoc>
            <method name="testDensities" type="void" line="174"/>
            <javadoc line="178">
                Verifies that cumulative probability density calculations match expected values
                 * using default test instance data                
            </javadoc>
            <method name="testCumulativeProbabilities" type="void" line="183"/>
            <javadoc line="187">
                Verifies that inverse cumulative probability density calculations match expected values
                 * using default test instance data                
            </javadoc>
            <method name="testInverseCumulativeProbabilities" type="void" line="192"/>
            <method name="testConsistencyAtSupportBounds" type="void" line="197">
                <declaration name="lower" type="int" line="198"/>
                <declaration name="upper" type="int" line="206"/>
            </method>
            <javadoc line="214">
                Verifies that illegal arguments are correctly handled                
            </javadoc>
            <method name="testIllegalArguments" type="void" line="218">
                <scope line="219"/>
                <scope line="222"/>
                <scope line="225"/>
                <scope line="228"/>
                <scope line="231"/>
                <scope line="234"/>
            </method>
            <javadoc line="239">
                Test sampling                
            </javadoc>
            <method name="testSampling" type="void" line="243">
                <comment line="244">
                    stribution.reseedRandomGenerator(1000); // Use fixed seed                    
                </comment>
                <declaration name="densityPoints" type="int[]" line="244"/>
                <declaration name="densityValues" type="double[]" line="245"/>
                <declaration name="sampleSize" type="int" line="246"/>
                <declaration name="length" type="int" line="247"/>
                <declaration name="distribution" type="AbstractIntegerDistribution" line="248"/>
                <declaration name="expectedCounts" type="double[]" line="249"/>
                <declaration name="observedCounts" type="long[]" line="250"/>
                <scope line="251"/>
                <declaration name="sample" type="int[]" line="255"/>
                <scope line="256">
                    <scope line="257">
                        <scope line="258"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="267">
                @return Returns the cumulativeTestPoints.                
            </javadoc>
            <method name="getCumulativeTestPoints" type="int[]" line="270"/>
            <javadoc line="274">
                @param cumulativeTestPoints The cumulativeTestPoints to set.                
            </javadoc>
            <method name="setCumulativeTestPoints" type="void" line="277"/>
            <javadoc line="281">
                @return Returns the cumulativeTestValues.                
            </javadoc>
            <method name="getCumulativeTestValues" type="double[]" line="284"/>
            <javadoc line="288">
                @param cumulativeTestValues The cumulativeTestValues to set.                
            </javadoc>
            <method name="setCumulativeTestValues" type="void" line="291"/>
            <javadoc line="295">
                @return Returns the densityTestPoints.                
            </javadoc>
            <method name="getDensityTestPoints" type="int[]" line="298"/>
            <javadoc line="302">
                @param densityTestPoints The densityTestPoints to set.                
            </javadoc>
            <method name="setDensityTestPoints" type="void" line="305"/>
            <javadoc line="309">
                @return Returns the densityTestValues.                
            </javadoc>
            <method name="getDensityTestValues" type="double[]" line="312"/>
            <javadoc line="316">
                @param densityTestValues The densityTestValues to set.                
            </javadoc>
            <method name="setDensityTestValues" type="void" line="319"/>
            <javadoc line="323">
                @return Returns the distribution.                
            </javadoc>
            <method name="getDistribution" type="IntegerDistribution" line="326"/>
            <javadoc line="330">
                @param distribution The distribution to set.                
            </javadoc>
            <method name="setDistribution" type="void" line="333"/>
            <javadoc line="337">
                @return Returns the inverseCumulativeTestPoints.                
            </javadoc>
            <method name="getInverseCumulativeTestPoints" type="double[]" line="340"/>
            <javadoc line="344">
                @param inverseCumulativeTestPoints The inverseCumulativeTestPoints to set.                
            </javadoc>
            <method name="setInverseCumulativeTestPoints" type="void" line="347"/>
            <javadoc line="351">
                @return Returns the inverseCumulativeTestValues.                
            </javadoc>
            <method name="getInverseCumulativeTestValues" type="int[]" line="354"/>
            <javadoc line="358">
                @param inverseCumulativeTestValues The inverseCumulativeTestValues to set.                
            </javadoc>
            <method name="setInverseCumulativeTestValues" type="void" line="361"/>
            <javadoc line="365">
                @return Returns the tolerance.                
            </javadoc>
            <method name="getTolerance" type="double" line="368"/>
            <javadoc line="372">
                @param tolerance The tolerance to set.                
            </javadoc>
            <method name="setTolerance" type="void" line="375"/>
        </class>
    </source>