<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.optimization.general">
        <import package="java.util.ArrayList"/>
        <import package="org.apache.commons.math3.analysis.differentiation.DerivativeStructure"/>
        <import package="org.apache.commons.math3.analysis.differentiation.MultivariateDifferentiableVectorFunction"/>
        <import package="org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiableFunction"/>
        <import package="org.apache.commons.math3.stat.regression.SimpleRegression"/>
        <class name="StraightLineProblem" line="27">
            <implements interface="MultivariateDifferentiableVectorFunction"/>
            <javadoc line="27">
                Class that models a straight line defined as {@code y = a x + b}.
                 * The parameters of problem are:
                 * &lt;ul&gt;
                 * &lt;li&gt;{@code a}&lt;/li&gt;
                 * &lt;li&gt;{@code b}&lt;/li&gt;
                 * &lt;/ul&gt;
                 * The model functions are:
                 * &lt;ul&gt;
                 * &lt;li&gt;for each pair (a, b), the y-coordinate of the line.&lt;/li&gt;
                 * &lt;/ul&gt;                
            </javadoc>
            <declaration name="points" type="ArrayList&lt;double[]&gt;" line="40"/>
            <javadoc line="40">
                Cloud of points assumed to be fitted by a straight line.                
            </javadoc>
            <declaration name="sigma" type="double" line="42"/>
            <javadoc line="42">
                Error (on the y-coordinate of the points).                
            </javadoc>
            <javadoc line="45">
                @param error Assumed error for the y-coordinate.                
            </javadoc>
            <method name="StraightLineProblem" type="constructor" line="48"/>
            <method name="addPoint" type="void" line="53"/>
            <javadoc line="57">
                @return the list of x-coordinates.                
            </javadoc>
            <method name="x" type="double[]" line="60">
                <declaration name="v" type="double[]" line="61"/>
                <scope line="62">
                    <declaration name="p" type="double[]" line="63"/>
                </scope>
            </method>
            <javadoc line="70">
                @return the list of y-coordinates.                
            </javadoc>
            <method name="y" type="double[]" line="73">
                <declaration name="v" type="double[]" line="74"/>
                <scope line="75">
                    <declaration name="p" type="double[]" line="76"/>
                </scope>
            </method>
            <method name="target" type="double[]" line="83"/>
            <method name="weight" type="double[]" line="87">
                <declaration name="weight" type="double" line="88"/>
                <declaration name="w" type="double[]" line="89"/>
                <scope line="90"/>
            </method>
            <method name="value" type="double[]" line="97">
                <declaration name="line" type="Model" line="98"/>
                <declaration name="model" type="double[]" line="101"/>
                <scope line="102">
                    <declaration name="p" type="double[]" line="103"/>
                </scope>
            </method>
            <method name="value" type="DerivativeStructure[]" line="110">
                <declaration name="line" type="Model" line="111"/>
                <declaration name="model" type="DerivativeStructure[]" line="113"/>
                <scope line="114">
                    <declaration name="p0" type="DerivativeStructure" line="115"/>
                </scope>
            </method>
            <javadoc line="122">
                Directly solve the linear problem, using the {@link SimpleRegression}class.                
            </javadoc>
            <method name="solve" type="double[]" line="126">
                <declaration name="regress" type="SimpleRegression" line="127"/>
                <scope line="128"/>
                <declaration name="result" type="double[]" line="132"/>
            </method>
            <class name="Model" line="136">
                <implements interface="UnivariateDifferentiableFunction"/>
                <javadoc line="136">
                    Linear function.                    
                </javadoc>
                <declaration name="a" type="DerivativeStructure" line="140"/>
                <declaration name="b" type="DerivativeStructure" line="141"/>
                <method name="Model" type="constructor" line="144"/>
                <method name="value" type="double" line="149"/>
                <method name="value" type="DerivativeStructure" line="153"/>
            </class>
        </class>
    </source>