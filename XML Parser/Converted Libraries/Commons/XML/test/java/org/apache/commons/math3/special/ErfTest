<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.special">
        <import package="org.apache.commons.math3.TestUtils"/>
        <import package="org.apache.commons.math3.util.FastMath"/>
        <import package="org.junit.Test"/>
        <import package="org.junit.Assert"/>
        <class name="ErfTest" line="26">
            <javadoc line="26">
                @version $Id: ErfTest.java 1456905 2013-03-15 11:37:35Z luc $                
            </javadoc>
            <method name="testErf0" type="void" line="31">
                <declaration name="actual" type="double" line="32"/>
                <declaration name="expected" type="double" line="33"/>
            </method>
            <method name="testErf1960" type="void" line="39">
                <declaration name="x" type="double" line="40"/>
                <declaration name="actual" type="double" line="41"/>
                <declaration name="expected" type="double" line="42"/>
            </method>
            <method name="testErf2576" type="void" line="53">
                <declaration name="x" type="double" line="54"/>
                <declaration name="actual" type="double" line="55"/>
                <declaration name="expected" type="double" line="56"/>
            </method>
            <method name="testErf2807" type="void" line="67">
                <declaration name="x" type="double" line="68"/>
                <declaration name="actual" type="double" line="69"/>
                <declaration name="expected" type="double" line="70"/>
            </method>
            <method name="testErf3291" type="void" line="81">
                <declaration name="x" type="double" line="82"/>
                <declaration name="actual" type="double" line="83"/>
                <declaration name="expected" type="double" line="84"/>
            </method>
            <javadoc line="94">
                MATH-301, MATH-456                
            </javadoc>
            <method name="testLargeValues" type="void" line="98">
                <scope line="99">
                    <declaration name="result" type="double" line="100"/>
                </scope>
            </method>
            <javadoc line="119">
                Compare Erf.erf against reference values computed using GCC 4.2.1 (Apple OSX packaged version)
                 * erfl (extended precision erf).                
            </javadoc>
            <method name="testErfGnu" type="void" line="124">
                <declaration name="tol" type="double" line="125"/>
                <declaration name="gnuValues" type="double[]" line="126"/>
                <declaration name="x" type="double" line="136"/>
                <scope line="137"/>
            </method>
            <javadoc line="143">
                Compare Erf.erfc against reference values computed using GCC 4.2.1 (Apple OSX packaged version)
                 * erfcl (extended precision erfc).                
            </javadoc>
            <method name="testErfcGnu" type="void" line="148">
                <declaration name="tol" type="double" line="149"/>
                <declaration name="gnuValues" type="double[]" line="150"/>
                <declaration name="x" type="double" line="160"/>
                <scope line="161"/>
            </method>
            <javadoc line="167">
                Tests erfc against reference data computed using Maple reported in Marsaglia, G,, 
                 * &quot;Evaluating the Normal Distribution,&quot; Journal of Statistical Software, July, 2004.
                 * http//www.jstatsoft.org/v11/a05/paper                
            </javadoc>
            <method name="testErfcMaple" type="void" line="173">
                <declaration name="ref" type="double[][]" line="174"/>
                <scope line="192">
                    <declaration name="result" type="double" line="193"/>
                </scope>
            </method>
            <javadoc line="199">
                Test the implementation of Erf.erf(double, double) for consistency with results
                 * obtained from Erf.erf(double) and Erf.erfc(double).                
            </javadoc>
            <method name="testTwoArgumentErf" type="void" line="204">
                <declaration name="xi" type="double[]" line="205"/>
                <scope line="206">
                    <scope line="207">
                        <declaration name="a" type="double" line="208"/>
                        <declaration name="b" type="double" line="209"/>
                        <declaration name="c" type="double" line="210"/>
                    </scope>
                </scope>
            </method>
            <method name="testErfInvNaN" type="void" line="218"/>
            <method name="testErfInvInfinite" type="void" line="224"/>
            <method name="testErfInv" type="void" line="232">
                <scope line="233">
                    <declaration name="y" type="double" line="234"/>
                    <declaration name="dydx" type="double" line="235"/>
                </scope>
            </method>
            <method name="testErfcInvNaN" type="void" line="241"/>
            <method name="testErfcInvInfinite" type="void" line="247"/>
            <method name="testErfcInv" type="void" line="255">
                <scope line="256">
                    <declaration name="y" type="double" line="257"/>
                    <declaration name="dydxAbs" type="double" line="258"/>
                </scope>
            </method>
        </class>
    </source>