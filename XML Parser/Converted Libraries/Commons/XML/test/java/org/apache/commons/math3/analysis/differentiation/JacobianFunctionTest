<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.analysis.differentiation">
        <import package="org.junit.Assert"/>
        <import package="org.apache.commons.math3.TestUtils"/>
        <import package="org.apache.commons.math3.util.FastMath"/>
        <import package="org.junit.Test"/>
        <class name="JacobianFunctionTest" line="27">
            <comment line="28">
                Maps (latitude, longitude) to (x, y, z)                
            </comment>
            <javadoc line="27">
                Test for class {@link JacobianFunction}.                
            </javadoc>
            <method name="testSphere" type="void" line="33">
                <declaration name="f" type="SphereMapping" line="34"/>
                <declaration name="j" type="JacobianFunction" line="35"/>
                <scope line="36">
                    <scope line="37">
                        <declaration name="point" type="double[]" line="38"/>
                        <declaration name="referenceJacobian" type="double[][]" line="39"/>
                        <declaration name="testJacobian" type="double[][]" line="40"/>
                        <scope line="42"/>
                    </scope>
                </scope>
            </method>
            <class name="SphereMapping" line="50">
                <implements interface="MultivariateDifferentiableVectorFunction"/>
                <declaration name="radius" type="double" line="52"/>
                <method name="SphereMapping" type="constructor" line="54"/>
                <method name="value" type="double[]" line="58">
                    <declaration name="cLat" type="double" line="59"/>
                    <declaration name="sLat" type="double" line="60"/>
                    <declaration name="cLon" type="double" line="61"/>
                    <declaration name="sLon" type="double" line="62"/>
                </method>
                <method name="value" type="DerivativeStructure[]" line="70">
                    <declaration name="cLat" type="DerivativeStructure" line="71"/>
                    <declaration name="sLat" type="DerivativeStructure" line="72"/>
                    <declaration name="cLon" type="DerivativeStructure" line="73"/>
                    <declaration name="sLon" type="DerivativeStructure" line="74"/>
                </method>
                <method name="jacobian" type="double[][]" line="82">
                    <declaration name="cLat" type="double" line="83"/>
                    <declaration name="sLat" type="double" line="84"/>
                    <declaration name="cLon" type="double" line="85"/>
                    <declaration name="sLon" type="double" line="86"/>
                </method>
            </class>
        </class>
    </source>