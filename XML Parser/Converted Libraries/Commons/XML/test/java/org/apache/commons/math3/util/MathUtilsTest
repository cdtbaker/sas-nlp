<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.util">
        <import package="org.apache.commons.math3.distribution.RealDistribution"/>
        <import package="org.apache.commons.math3.distribution.UniformRealDistribution"/>
        <import package="org.apache.commons.math3.exception.MathArithmeticException"/>
        <import package="org.apache.commons.math3.exception.NotFiniteNumberException"/>
        <import package="org.apache.commons.math3.exception.NullArgumentException"/>
        <import package="org.apache.commons.math3.exception.util.LocalizedFormats"/>
        <import package="org.apache.commons.math3.random.RandomDataImpl"/>
        <import package="org.junit.Assert"/>
        <import package="org.junit.Test"/>
        <class name="MathUtilsTest" line="26">
            <javadoc line="26">
                Test cases for the MathUtils class.                
                <@version>
                    n $Id: MathUtilsTest.java 1449529 2013-02-24 19:13:17Z luc $
                     * 2007) $                    
                </@version>
            </javadoc>
            <method name="testHash" type="void" line="33">
                <declaration name="testArray" type="double[]" line="34"/>
                <scope line="44">
                    <scope line="45">
                        <scope line="46"/>
                        <scope line="49"/>
                    </scope>
                </scope>
            </method>
            <method name="testArrayHash" type="void" line="58"/>
            <javadoc line="74">
                Make sure that permuted arrays do not hash to the same value.                
            </javadoc>
            <method name="testPermutedArrayHash" type="void" line="78">
                <comment line="79">
                    Generate 10 distinct random values                    
                </comment>
                <comment line="79">
                    Generate a random permutation, making sure it is not the identity                    
                </comment>
                <comment line="79">
                    Verify that permuted array has different hash                    
                </comment>
                <declaration name="original" type="double[]" line="79"/>
                <declaration name="permuted" type="double[]" line="80"/>
                <declaration name="random" type="RandomDataImpl" line="81"/>
                <scope line="84">
                    <declaration name="u" type="RealDistribution" line="85"/>
                </scope>
                <declaration name="isIdentity" type="boolean" line="90"/>
                <scope line="91">
                    <declaration name="permutation" type="int[]" line="92"/>
                    <scope line="93">
                        <scope line="94"/>
                    </scope>
                </scope>
            </method>
            <method name="testIndicatorByte" type="void" line="106"/>
            <method name="testIndicatorInt" type="void" line="113"/>
            <method name="testIndicatorLong" type="void" line="120"/>
            <method name="testIndicatorShort" type="void" line="127"/>
            <method name="testNormalizeAngle" type="void" line="134">
                <scope line="135">
                    <scope line="136">
                        <declaration name="c" type="double" line="137"/>
                        <declaration name="twoK" type="double" line="140"/>
                    </scope>
                </scope>
            </method>
            <method name="testReduce" type="void" line="147">
                <declaration name="period" type="double" line="148"/>
                <declaration name="offset" type="double" line="149"/>
                <declaration name="delta" type="double" line="151"/>
                <declaration name="orig" type="double" line="153"/>
                <declaration name="expected" type="double" line="154"/>
            </method>
            <method name="testReduceComparedWithNormalizeAngle" type="void" line="200">
                <declaration name="tol" type="double" line="201"/>
                <declaration name="period" type="double" line="202"/>
                <scope line="203">
                    <scope line="204">
                        <declaration name="nA" type="double" line="205"/>
                        <declaration name="offset" type="double" line="206"/>
                        <declaration name="r" type="double" line="207"/>
                    </scope>
                </scope>
            </method>
            <method name="testSignByte" type="void" line="214">
                <declaration name="one" type="byte" line="215"/>
            </method>
            <method name="testSignInt" type="void" line="221">
                <declaration name="one" type="int" line="222"/>
            </method>
            <method name="testSignLong" type="void" line="228">
                <declaration name="one" type="long" line="229"/>
            </method>
            <method name="testSignShort" type="void" line="235">
                <declaration name="one" type="short" line="236"/>
            </method>
            <method name="testCheckFinite" type="void" line="242">
                <scope line="243"/>
                <scope line="246"/>
                <scope line="249"/>
                <scope line="252"/>
                <scope line="255"/>
                <scope line="258"/>
                <scope line="262"/>
                <scope line="265"/>
                <scope line="268"/>
                <scope line="271"/>
                <scope line="274"/>
                <scope line="277"/>
            </method>
            <method name="testCheckNotNull1" type="void" line="283">
                <scope line="284">
                    <declaration name="obj" type="Object" line="285"/>
                </scope>
                <scope line="287"/>
            </method>
            <method name="testCheckNotNull2" type="void" line="293">
                <scope line="294">
                    <declaration name="array" type="double[]" line="295"/>
                </scope>
                <scope line="297"/>
            </method>
            <method name="testCopySignByte" type="void" line="303">
                <declaration name="a" type="byte" line="304"/>
                <declaration name="minValuePlusOne" type="byte" line="307"/>
                <declaration name="one" type="byte" line="314"/>
                <declaration name="val" type="byte" line="315"/>
                <declaration name="minusOne" type="byte" line="319"/>
            </method>
            <method name="testCopySignByte2" type="void" line="334"/>
        </class>
    </source>