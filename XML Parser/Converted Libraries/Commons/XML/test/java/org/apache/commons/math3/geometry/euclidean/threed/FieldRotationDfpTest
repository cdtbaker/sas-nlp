<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.geometry.euclidean.threed">
        <import package="org.apache.commons.math3.dfp.Dfp"/>
        <import package="org.apache.commons.math3.dfp.DfpField"/>
        <import package="org.apache.commons.math3.exception.MathArithmeticException"/>
        <import package="org.apache.commons.math3.exception.MathIllegalArgumentException"/>
        <import package="org.apache.commons.math3.random.UnitSphereRandomVectorGenerator"/>
        <import package="org.apache.commons.math3.random.Well1024a"/>
        <import package="org.apache.commons.math3.util.FastMath"/>
        <import package="org.apache.commons.math3.util.MathUtils"/>
        <import package="org.junit.Assert"/>
        <import package="org.junit.Test"/>
        <class name="FieldRotationDfpTest" line="32">
            <method name="testIdentity" type="void" line="35">
                <declaration name="r" type="FieldRotation&lt;Dfp&gt;" line="37"/>
            </method>
            <method name="testAxisAngle" type="void" line="58">
                <declaration name="r" type="FieldRotation&lt;Dfp&gt;" line="60"/>
                <declaration name="s" type="double" line="64"/>
                <scope line="68"/>
                <scope line="71"/>
            </method>
            <method name="testRevert" type="void" line="87">
                <declaration name="a" type="double" line="88"/>
                <declaration name="b" type="double" line="89"/>
                <declaration name="c" type="double" line="90"/>
                <declaration name="d" type="double" line="91"/>
                <declaration name="r" type="FieldRotation&lt;Dfp&gt;" line="92"/>
                <declaration name="reverted" type="FieldRotation&lt;Dfp&gt;" line="93"/>
                <declaration name="rrT" type="FieldRotation&lt;Dfp&gt;" line="94"/>
                <declaration name="rTr" type="FieldRotation&lt;Dfp&gt;" line="96"/>
            </method>
            <method name="testVectorOnePair" type="void" line="103">
                <declaration name="u" type="FieldVector3D&lt;Dfp&gt;" line="105"/>
                <declaration name="v" type="FieldVector3D&lt;Dfp&gt;" line="106"/>
                <declaration name="r" type="FieldRotation&lt;Dfp&gt;" line="107"/>
                <scope line="112"/>
                <scope line="115"/>
            </method>
            <method name="testVectorTwoPairs" type="void" line="122">
                <declaration name="u1" type="FieldVector3D&lt;Dfp&gt;" line="124"/>
                <declaration name="u2" type="FieldVector3D&lt;Dfp&gt;" line="125"/>
                <declaration name="v1" type="FieldVector3D&lt;Dfp&gt;" line="126"/>
                <declaration name="v2" type="FieldVector3D&lt;Dfp&gt;" line="127"/>
                <declaration name="r" type="FieldRotation&lt;Dfp&gt;" line="128"/>
                <declaration name="axis" type="FieldVector3D&lt;Dfp&gt;" line="133"/>
                <scope line="134"/>
                <scope line="136"/>
                <declaration name="sqrt" type="double" line="141"/>
                <scope line="152"/>
                <scope line="155"/>
            </method>
            <method name="testMatrix" type="void" line="163">
                <scope line="165"/>
                <scope line="171"/>
                <scope line="175"/>
                <scope line="182"/>
                <scope line="186"/>
                <scope line="193"/>
                <declaration name="m1" type="double[][]" line="225"/>
                <declaration name="r" type="FieldRotation&lt;Dfp&gt;" line="228"/>
                <declaration name="m2" type="double[][]" line="233"/>
                <declaration name="m3" type="Dfp[][]" line="238"/>
                <declaration name="d00" type="double" line="239"/>
                <declaration name="d01" type="double" line="240"/>
                <declaration name="d02" type="double" line="241"/>
                <declaration name="d10" type="double" line="242"/>
                <declaration name="d11" type="double" line="243"/>
                <declaration name="d12" type="double" line="244"/>
                <declaration name="d20" type="double" line="245"/>
                <declaration name="d21" type="double" line="246"/>
                <declaration name="d22" type="double" line="247"/>
                <scope line="269">
                    <scope line="270">
                        <declaration name="m3tm3" type="double" line="271"/>
                        <scope line="274"/>
                        <scope line="276"/>
                    </scope>
                </scope>
                <declaration name="m4" type="double[][]" line="289"/>
                <scope line="295">
                    <declaration name="m5" type="double[][]" line="296"/>
                </scope>
                <scope line="301"/>
            </method>
            <method name="testAngles" type="void" line="309">
                <declaration name="field" type="DfpField" line="311"/>
                <declaration name="CardanOrders" type="RotationOrder[]" line="313"/>
                <scope line="318">
                    <scope line="319">
                        <scope line="320">
                            <scope line="321">
                                <declaration name="r" type="FieldRotation&lt;Dfp&gt;" line="322"/>
                                <declaration name="angles" type="Dfp[]" line="326"/>
                            </scope>
                        </scope>
                    </scope>
                </scope>
                <declaration name="EulerOrders" type="RotationOrder[]" line="335"/>
                <scope line="340">
                    <scope line="341">
                        <scope line="342">
                            <scope line="343">
                                <declaration name="r" type="FieldRotation&lt;Dfp&gt;" line="344"/>
                                <declaration name="angles" type="Dfp[]" line="348"/>
                            </scope>
                        </scope>
                    </scope>
                </scope>
            </method>
            <method name="testSingularities" type="void" line="360">
                <declaration name="field" type="DfpField" line="362"/>
                <declaration name="CardanOrders" type="RotationOrder[]" line="363"/>
                <declaration name="singularCardanAngle" type="double[]" line="368"/>
                <scope line="369">
                    <scope line="370">
                        <declaration name="r" type="FieldRotation&lt;Dfp&gt;" line="371"/>
                        <scope line="375"/>
                        <scope line="378"/>
                    </scope>
                </scope>
                <declaration name="EulerOrders" type="RotationOrder[]" line="384"/>
                <declaration name="singularEulerAngle" type="double[]" line="389"/>
                <scope line="390">
                    <scope line="391">
                        <declaration name="r" type="FieldRotation&lt;Dfp&gt;" line="392"/>
                        <scope line="396"/>
                        <scope line="399"/>
                    </scope>
                </scope>
            </method>
            <method name="testQuaternion" type="void" line="409">
                <declaration name="r1" type="FieldRotation&lt;Dfp&gt;" line="411"/>
                <declaration name="n" type="double" line="412"/>
                <declaration name="r2" type="FieldRotation&lt;Dfp&gt;" line="413"/>
                <scope line="416">
                    <scope line="417">
                        <scope line="418">
                            <declaration name="u" type="FieldVector3D&lt;Dfp&gt;" line="419"/>
                        </scope>
                    </scope>
                </scope>
            </method>
            <method name="testCompose" type="void" line="433">
                <declaration name="r1" type="FieldRotation&lt;Dfp&gt;" line="435"/>
                <declaration name="r2" type="FieldRotation&lt;Dfp&gt;" line="436"/>
                <declaration name="r3" type="FieldRotation&lt;Dfp&gt;" line="437"/>
                <declaration name="r3Double" type="FieldRotation&lt;Dfp&gt;" line="438"/>
                <scope line="444">
                    <scope line="445">
                        <scope line="446">
                            <declaration name="u" type="FieldVector3D&lt;Dfp&gt;" line="447"/>
                        </scope>
                    </scope>
                </scope>
            </method>
            <method name="testComposeInverse" type="void" line="457">
                <declaration name="r1" type="FieldRotation&lt;Dfp&gt;" line="459"/>
                <declaration name="r2" type="FieldRotation&lt;Dfp&gt;" line="460"/>
                <declaration name="r3" type="FieldRotation&lt;Dfp&gt;" line="461"/>
                <declaration name="r3Double" type="FieldRotation&lt;Dfp&gt;" line="462"/>
                <scope line="468">
                    <scope line="469">
                        <scope line="470">
                            <declaration name="u" type="FieldVector3D&lt;Dfp&gt;" line="471"/>
                        </scope>
                    </scope>
                </scope>
            </method>
            <method name="testDoubleVectors" type="void" line="481">
                <declaration name="random" type="Well1024a" line="483"/>
                <declaration name="g" type="UnitSphereRandomVectorGenerator" line="484"/>
                <scope line="485">
                    <declaration name="unit" type="double[]" line="486"/>
                    <declaration name="r" type="FieldRotation&lt;Dfp&gt;" line="487"/>
                    <scope line="490">
                        <scope line="491">
                            <scope line="492">
                                <declaration name="uds" type="FieldVector3D&lt;Dfp&gt;" line="493"/>
                                <declaration name="ruds" type="FieldVector3D&lt;Dfp&gt;" line="494"/>
                                <declaration name="rIuds" type="FieldVector3D&lt;Dfp&gt;" line="495"/>
                                <declaration name="u" type="Vector3D" line="496"/>
                                <declaration name="ru" type="FieldVector3D&lt;Dfp&gt;" line="497"/>
                                <declaration name="rIu" type="FieldVector3D&lt;Dfp&gt;" line="498"/>
                                <declaration name="ruArray" type="Dfp[]" line="499"/>
                                <declaration name="rIuArray" type="Dfp[]" line="501"/>
                            </scope>
                        </scope>
                    </scope>
                </scope>
            </method>
            <method name="testDoubleRotations" type="void" line="515">
                <declaration name="field" type="DfpField" line="517"/>
                <declaration name="random" type="Well1024a" line="518"/>
                <declaration name="g" type="UnitSphereRandomVectorGenerator" line="519"/>
                <scope line="520">
                    <declaration name="unit1" type="double[]" line="521"/>
                    <declaration name="r1" type="Rotation" line="522"/>
                    <declaration name="r1Prime" type="FieldRotation&lt;Dfp&gt;" line="524"/>
                    <declaration name="unit2" type="double[]" line="529"/>
                    <declaration name="r2" type="FieldRotation&lt;Dfp&gt;" line="530"/>
                    <declaration name="rA" type="FieldRotation&lt;Dfp&gt;" line="533"/>
                    <declaration name="rB" type="FieldRotation&lt;Dfp&gt;" line="534"/>
                    <declaration name="rC" type="FieldRotation&lt;Dfp&gt;" line="535"/>
                    <declaration name="rD" type="FieldRotation&lt;Dfp&gt;" line="536"/>
                    <scope line="538">
                        <scope line="539">
                            <scope line="540">
                                <declaration name="uds" type="FieldVector3D&lt;Dfp&gt;" line="542"/>
                            </scope>
                        </scope>
                    </scope>
                </scope>
            </method>
            <method name="testArray" type="void" line="558">
                <declaration name="r" type="FieldRotation&lt;Dfp&gt;" line="560"/>
                <scope line="562">
                    <scope line="563">
                        <scope line="564">
                            <declaration name="u" type="FieldVector3D&lt;Dfp&gt;" line="565"/>
                            <declaration name="v" type="FieldVector3D&lt;Dfp&gt;" line="566"/>
                            <declaration name="out" type="Dfp[]" line="567"/>
                        </scope>
                    </scope>
                </scope>
            </method>
            <method name="testApplyInverseTo" type="void" line="583">
                <declaration name="in" type="Dfp[]" line="585"/>
                <declaration name="out" type="Dfp[]" line="586"/>
                <declaration name="rebuilt" type="Dfp[]" line="587"/>
                <declaration name="r" type="FieldRotation&lt;Dfp&gt;" line="588"/>
                <scope line="589">
                    <scope line="590">
                        <declaration name="u" type="FieldVector3D&lt;Dfp&gt;" line="591"/>
                    </scope>
                </scope>
                <scope line="609">
                    <scope line="610">
                        <declaration name="u" type="FieldVector3D&lt;Dfp&gt;" line="611"/>
                    </scope>
                </scope>
                <scope line="620">
                    <scope line="621">
                        <declaration name="u" type="FieldVector3D&lt;Dfp&gt;" line="622"/>
                    </scope>
                </scope>
            </method>
            <method name="testIssue639" type="void" line="633">
                <declaration name="u1" type="FieldVector3D&lt;Dfp&gt;" line="634"/>
                <declaration name="u2" type="FieldVector3D&lt;Dfp&gt;" line="637"/>
                <declaration name="rot" type="FieldRotation&lt;Dfp&gt;" line="640"/>
            </method>
            <method name="testIssue801" type="void" line="648">
                <declaration name="u1" type="FieldVector3D&lt;Dfp&gt;" line="649"/>
                <declaration name="u2" type="FieldVector3D&lt;Dfp&gt;" line="650"/>
                <declaration name="v1" type="FieldVector3D&lt;Dfp&gt;" line="652"/>
                <declaration name="v2" type="FieldVector3D&lt;Dfp&gt;" line="653"/>
                <declaration name="quat" type="FieldRotation&lt;Dfp&gt;" line="655"/>
                <declaration name="q2" type="double" line="656"/>
            </method>
            <method name="checkAngle" type="void" line="666"/>
            <method name="checkRotationDS" type="void" line="670">
                <declaration name="rPrime" type="FieldRotation&lt;Dfp&gt;" line="671"/>
            </method>
            <method name="createRotation" type="FieldRotation<Dfp>" line="676">
                <declaration name="field" type="DfpField" line="677"/>
            </method>
            <method name="createRotation" type="FieldRotation<Dfp>" line="685">
                <declaration name="field" type="DfpField" line="686"/>
                <declaration name="mds" type="Dfp[][]" line="687"/>
                <scope line="688">
                    <scope line="689"/>
                </scope>
            </method>
            <method name="createVector" type="FieldVector3D<Dfp>" line="696">
                <declaration name="field" type="DfpField" line="697"/>
            </method>
            <method name="createAxis" type="FieldVector3D<Dfp>" line="701">
                <declaration name="field" type="DfpField" line="702"/>
            </method>
            <method name="createAngle" type="Dfp" line="706"/>
            <method name="checkVector" type="void" line="710"/>
        </class>
    </source>