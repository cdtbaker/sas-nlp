<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.optimization.direct">
        <import package="org.apache.commons.math3.analysis.MultivariateFunction"/>
        <import package="org.apache.commons.math3.optimization.GoalType"/>
        <import package="org.apache.commons.math3.optimization.PointValuePair"/>
        <import package="org.apache.commons.math3.optimization.SimplePointChecker"/>
        <import package="org.junit.Assert"/>
        <import package="org.junit.Test"/>
        <class name="MultivariateFunctionPenaltyAdapterTest" line="28">
            <method name="testStartSimplexInsideRange" type="void" line="31">
                <declaration name="biQuadratic" type="BiQuadratic" line="33"/>
                <declaration name="wrapped" type="MultivariateFunctionPenaltyAdapter" line="34"/>
                <declaration name="optimizer" type="SimplexOptimizer" line="40"/>
                <declaration name="optimum" type="PointValuePair" line="43"/>
            </method>
            <method name="testStartSimplexOutsideRange" type="void" line="52">
                <declaration name="biQuadratic" type="BiQuadratic" line="54"/>
                <declaration name="wrapped" type="MultivariateFunctionPenaltyAdapter" line="55"/>
                <declaration name="optimizer" type="SimplexOptimizer" line="61"/>
                <declaration name="optimum" type="PointValuePair" line="64"/>
            </method>
            <method name="testOptimumOutsideRange" type="void" line="73">
                <declaration name="biQuadratic" type="BiQuadratic" line="75"/>
                <declaration name="wrapped" type="MultivariateFunctionPenaltyAdapter" line="76"/>
                <declaration name="optimizer" type="SimplexOptimizer" line="82"/>
                <declaration name="optimum" type="PointValuePair" line="85"/>
            </method>
            <method name="testUnbounded" type="void" line="94">
                <declaration name="biQuadratic" type="BiQuadratic" line="96"/>
                <declaration name="wrapped" type="MultivariateFunctionPenaltyAdapter" line="99"/>
                <declaration name="optimizer" type="SimplexOptimizer" line="105"/>
                <declaration name="optimum" type="PointValuePair" line="108"/>
            </method>
            <method name="testHalfBounded" type="void" line="117">
                <declaration name="biQuadratic" type="BiQuadratic" line="119"/>
                <declaration name="wrapped" type="MultivariateFunctionPenaltyAdapter" line="122"/>
                <declaration name="optimizer" type="SimplexOptimizer" line="128"/>
                <declaration name="optimum" type="PointValuePair" line="131"/>
            </method>
            <class name="BiQuadratic" line="139">
                <implements interface="MultivariateFunction"/>
                <declaration name="xOptimum" type="double" line="141"/>
                <declaration name="yOptimum" type="double" line="142"/>
                <declaration name="xMin" type="double" line="144"/>
                <declaration name="xMax" type="double" line="145"/>
                <declaration name="yMin" type="double" line="146"/>
                <declaration name="yMax" type="double" line="147"/>
                <method name="BiQuadratic" type="constructor" line="151">
                    <params>
                        <param name="xOptimum" type="double"/>
                        <param name="yOptimum" type="double"/>
                        <param name="xMin" type="double"/>
                        <param name="xMax" type="double"/>
                        <param name="yMin" type="double"/>
                        <param name="yMax" type="double"/>
                    </params>
                </method>
                <method name="value" type="double" line="160">
                    <params>
                        <param name="point" type="double[]"/>
                    </params>
                    <comment line="161">
                        the function should never be called with out of range points                        
                    </comment>
                    <declaration name="dx" type="double" line="168"/>
                    <declaration name="dy" type="double" line="169"/>
                </method>
                <method name="getLower" type="double[]" line="174"/>
                <method name="getUpper" type="double[]" line="178"/>
                <method name="getBoundedXOptimum" type="double" line="182"/>
                <method name="getBoundedYOptimum" type="double" line="186"/>
            </class>
        </class>
    </source>