<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.geometry.euclidean.twod">
        <import package="java.util.ArrayList"/>
        <import package="java.util.List"/>
        <import package="org.apache.commons.math3.geometry.euclidean.oned.Interval"/>
        <import package="org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet"/>
        <import package="org.apache.commons.math3.geometry.euclidean.oned.Vector1D"/>
        <import package="org.apache.commons.math3.geometry.partitioning.BSPTree"/>
        <import package="org.apache.commons.math3.geometry.partitioning.Region"/>
        <import package="org.apache.commons.math3.geometry.partitioning.Region.Location"/>
        <import package="org.apache.commons.math3.geometry.partitioning.RegionFactory"/>
        <import package="org.apache.commons.math3.geometry.partitioning.SubHyperplane"/>
        <import package="org.apache.commons.math3.util.FastMath"/>
        <import package="org.junit.Assert"/>
        <import package="org.junit.Test"/>
        <class name="PolygonsSetTest" line="34">
            <method name="testSimplyConnected" type="void" line="37">
                <declaration name="vertices" type="Vector2D[][]" line="38"/>
                <declaration name="set" type="PolygonsSet" line="52"/>
            </method>
            <method name="testStair" type="void" line="78">
                <declaration name="vertices" type="Vector2D[][]" line="79"/>
                <declaration name="set" type="PolygonsSet" line="95"/>
            </method>
            <method name="testHole" type="void" line="103">
                <declaration name="vertices" type="Vector2D[][]" line="104"/>
                <declaration name="set" type="PolygonsSet" line="117"/>
            </method>
            <method name="testDisjointPolygons" type="void" line="147">
                <declaration name="vertices" type="Vector2D[][]" line="148"/>
                <declaration name="set" type="PolygonsSet" line="159"/>
            </method>
            <method name="testOppositeHyperplanes" type="void" line="180">
                <declaration name="vertices" type="Vector2D[][]" line="181"/>
                <declaration name="set" type="PolygonsSet" line="191"/>
            </method>
            <method name="testSingularPoint" type="void" line="196">
                <declaration name="vertices" type="Vector2D[][]" line="197"/>
                <declaration name="set" type="PolygonsSet" line="209"/>
            </method>
            <method name="testLineIntersection" type="void" line="214">
                <declaration name="vertices" type="Vector2D[][]" line="215"/>
                <declaration name="set" type="PolygonsSet" line="227"/>
                <declaration name="l1" type="Line" line="229"/>
                <declaration name="s1" type="SubLine" line="230"/>
                <declaration name="i1" type="List&lt;Interval&gt;" line="231"/>
                <declaration name="v10" type="Interval" line="233"/>
                <declaration name="p10Lower" type="Vector2D" line="234"/>
                <declaration name="p10Upper" type="Vector2D" line="237"/>
                <declaration name="v11" type="Interval" line="240"/>
                <declaration name="p11Lower" type="Vector2D" line="241"/>
                <declaration name="p11Upper" type="Vector2D" line="244"/>
                <declaration name="l2" type="Line" line="248"/>
                <declaration name="s2" type="SubLine" line="249"/>
                <declaration name="i2" type="List&lt;Interval&gt;" line="250"/>
                <declaration name="v20" type="Interval" line="252"/>
                <declaration name="p20Lower" type="Vector2D" line="253"/>
                <declaration name="p20Upper" type="Vector2D" line="256"/>
            </method>
            <method name="testUnlimitedSubHyperplane" type="void" line="263">
                <declaration name="vertices1" type="Vector2D[][]" line="264"/>
                <declaration name="set1" type="PolygonsSet" line="272"/>
                <declaration name="vertices2" type="Vector2D[][]" line="273"/>
                <declaration name="set2" type="PolygonsSet" line="280"/>
                <declaration name="set" type="PolygonsSet" line="282"/>
            </method>
            <method name="testUnion" type="void" line="302">
                <declaration name="vertices1" type="Vector2D[][]" line="303"/>
                <declaration name="set1" type="PolygonsSet" line="311"/>
                <declaration name="vertices2" type="Vector2D[][]" line="312"/>
                <declaration name="set2" type="PolygonsSet" line="320"/>
                <declaration name="set" type="PolygonsSet" line="321"/>
            </method>
            <method name="testIntersection" type="void" line="366">
                <declaration name="vertices1" type="Vector2D[][]" line="367"/>
                <declaration name="set1" type="PolygonsSet" line="375"/>
                <declaration name="vertices2" type="Vector2D[][]" line="376"/>
                <declaration name="set2" type="PolygonsSet" line="384"/>
                <declaration name="set" type="PolygonsSet" line="385"/>
            </method>
            <method name="testXor" type="void" line="415">
                <declaration name="vertices1" type="Vector2D[][]" line="416"/>
                <declaration name="set1" type="PolygonsSet" line="424"/>
                <declaration name="vertices2" type="Vector2D[][]" line="425"/>
                <declaration name="set2" type="PolygonsSet" line="433"/>
                <declaration name="set" type="PolygonsSet" line="434"/>
            </method>
            <method name="testDifference" type="void" line="486">
                <declaration name="vertices1" type="Vector2D[][]" line="487"/>
                <declaration name="set1" type="PolygonsSet" line="495"/>
                <declaration name="vertices2" type="Vector2D[][]" line="496"/>
                <declaration name="set2" type="PolygonsSet" line="504"/>
                <declaration name="set" type="PolygonsSet" line="505"/>
            </method>
            <method name="testEmptyDifference" type="void" line="549">
                <declaration name="vertices1" type="Vector2D[][]" line="550"/>
                <declaration name="set1" type="PolygonsSet" line="558"/>
                <declaration name="vertices2" type="Vector2D[][]" line="559"/>
                <declaration name="set2" type="PolygonsSet" line="567"/>
            </method>
            <method name="testChoppedHexagon" type="void" line="572">
                <declaration name="pi6" type="double" line="573"/>
                <declaration name="sqrt3" type="double" line="574"/>
                <declaration name="hyp" type="SubLine[]" line="575"/>
                <declaration name="tree" type="BSPTree&lt;Euclidean2D&gt;" line="590"/>
                <scope line="591"/>
                <declaration name="set" type="PolygonsSet" line="594"/>
                <declaration name="splitter" type="SubLine" line="595"/>
                <declaration name="slice" type="PolygonsSet" line="597"/>
            </method>
            <method name="testConcentric" type="void" line="608">
                <declaration name="h" type="double" line="609"/>
                <declaration name="vertices1" type="Vector2D[][]" line="610"/>
                <declaration name="set1" type="PolygonsSet" line="621"/>
                <declaration name="vertices2" type="Vector2D[][]" line="622"/>
                <declaration name="set2" type="PolygonsSet" line="633"/>
            </method>
            <method name="testBug20040520" type="void" line="638">
                <declaration name="a0" type="BSPTree&lt;Euclidean2D&gt;" line="639"/>
                <declaration name="a1" type="BSPTree&lt;Euclidean2D&gt;" line="645"/>
                <declaration name="a2" type="BSPTree&lt;Euclidean2D&gt;" line="649"/>
                <declaration name="a3" type="BSPTree&lt;Euclidean2D&gt;" line="653"/>
                <declaration name="a4" type="BSPTree&lt;Euclidean2D&gt;" line="659"/>
                <declaration name="a5" type="BSPTree&lt;Euclidean2D&gt;" line="664"/>
                <declaration name="a6" type="BSPTree&lt;Euclidean2D&gt;" line="670"/>
                <declaration name="a7" type="BSPTree&lt;Euclidean2D&gt;" line="675"/>
                <declaration name="a8" type="BSPTree&lt;Euclidean2D&gt;" line="680"/>
                <declaration name="a9" type="BSPTree&lt;Euclidean2D&gt;" line="684"/>
                <declaration name="b0" type="BSPTree&lt;Euclidean2D&gt;" line="689"/>
                <declaration name="b1" type="BSPTree&lt;Euclidean2D&gt;" line="694"/>
                <declaration name="b2" type="BSPTree&lt;Euclidean2D&gt;" line="699"/>
                <declaration name="b3" type="BSPTree&lt;Euclidean2D&gt;" line="704"/>
                <declaration name="b4" type="BSPTree&lt;Euclidean2D&gt;" line="708"/>
                <declaration name="b5" type="BSPTree&lt;Euclidean2D&gt;" line="712"/>
                <declaration name="b6" type="BSPTree&lt;Euclidean2D&gt;" line="717"/>
                <declaration name="c" type="PolygonsSet" line="722"/>
            </method>
            <method name="testBug20041003" type="void" line="766">
                <declaration name="l" type="Line[]" line="768"/>
                <declaration name="node1" type="BSPTree&lt;Euclidean2D&gt;" line="779"/>
                <declaration name="node2" type="BSPTree&lt;Euclidean2D&gt;" line="785"/>
                <declaration name="node3" type="BSPTree&lt;Euclidean2D&gt;" line="790"/>
                <declaration name="node4" type="BSPTree&lt;Euclidean2D&gt;" line="795"/>
                <declaration name="set" type="PolygonsSet" line="798"/>
            </method>
            <method name="testSqueezedHexa" type="void" line="804">
                <declaration name="set" type="PolygonsSet" line="805"/>
            </method>
            <method name="testIssue880Simplified" type="void" line="812">
                <declaration name="vertices1" type="Vector2D[]" line="814"/>
                <declaration name="set1" type="PolygonsSet" line="824"/>
            </method>
            <method name="testIssue880Complete" type="void" line="831">
                <declaration name="vertices1" type="Vector2D[]" line="832"/>
                <declaration name="set1" type="PolygonsSet" line="904"/>
                <declaration name="vertices2" type="Vector2D[]" line="912"/>
                <declaration name="set2" type="PolygonsSet" line="976"/>
                <declaration name="set" type="PolygonsSet" line="977"/>
                <declaration name="verticies" type="Vector2D[][]" line="981"/>
            </method>
            <method name="buildSet" type="PolygonsSet" line="986">
                <params>
                    <param name="vertices" type="Vector2D[][]"/>
                </params>
                <declaration name="edges" type="ArrayList&lt;SubHyperplane&lt;Euclidean2D&gt;&gt;" line="987"/>
                <scope line="988">
                    <declaration name="l" type="int" line="989"/>
                    <scope line="990"/>
                </scope>
            </method>
            <method name="buildLine" type="SubHyperplane<Euclidean2D>" line="997">
                <params>
                    <param name="start" type="Vector2D"/>
                    <param name="end" type="Vector2D"/>
                </params>
            </method>
            <method name="intersectionAbscissa" type="double" line="1001">
                <params>
                    <param name="l0" type="Line"/>
                    <param name="l1" type="Line"/>
                </params>
                <declaration name="p" type="Vector2D" line="1002"/>
            </method>
            <method name="buildHalfLine" type="SubHyperplane<Euclidean2D>" line="1007">
                <params>
                    <param name="start" type="Vector2D"/>
                    <param name="end" type="Vector2D"/>
                    <param name="startIsVirtual" type="boolean"/>
                </params>
                <declaration name="line" type="Line" line="1008"/>
                <declaration name="lower" type="double" line="1009"/>
                <declaration name="upper" type="double" line="1012"/>
            </method>
            <method name="buildSegment" type="SubHyperplane<Euclidean2D>" line="1018">
                <params>
                    <param name="start" type="Vector2D"/>
                    <param name="end" type="Vector2D"/>
                </params>
                <declaration name="line" type="Line" line="1019"/>
                <declaration name="lower" type="double" line="1020"/>
                <declaration name="upper" type="double" line="1021"/>
            </method>
            <method name="checkPoints" type="void" line="1026">
                <params>
                    <param name="expected" type="Region.Location"/>
                    <param name="set" type="PolygonsSet"/>
                    <param name="points" type="Vector2D[]"/>
                </params>
                <scope line="1027"/>
            </method>
            <method name="checkInSegment" type="boolean" line="1034">
                <params>
                    <param name="p" type="Vector2D"/>
                    <param name="p1" type="Vector2D"/>
                    <param name="p2" type="Vector2D"/>
                    <param name="tolerance" type="double"/>
                </params>
                <declaration name="line" type="Line" line="1035"/>
                <scope line="1036">
                    <declaration name="x" type="double" line="1037"/>
                    <declaration name="x1" type="double" line="1038"/>
                    <declaration name="x2" type="double" line="1039"/>
                </scope>
                <scope line="1043"/>
            </method>
            <method name="checkVertices" type="void" line="1049">
                <params>
                    <param name="rebuiltVertices" type="Vector2D[][]"/>
                    <param name="vertices" type="Vector2D[][]"/>
                </params>
                <comment line="1050">
                    each rebuilt vertex should be in a segment joining two original vertices                    
                </comment>
                <comment line="1050">
                    each original vertex should have a corresponding rebuilt vertex                    
                </comment>
                <scope line="1052">
                    <scope line="1053">
                        <declaration name="inSegment" type="boolean" line="1054"/>
                        <declaration name="p" type="Vector2D" line="1055"/>
                        <scope line="1056">
                            <declaration name="loop" type="Vector2D[]" line="1057"/>
                            <declaration name="length" type="int" line="1058"/>
                            <scope line="1059"/>
                        </scope>
                    </scope>
                </scope>
                <scope line="1068">
                    <scope line="1069">
                        <declaration name="min" type="double" line="1070"/>
                        <scope line="1071">
                            <scope line="1072"/>
                        </scope>
                    </scope>
                </scope>
            </method>
        </class>
    </source>