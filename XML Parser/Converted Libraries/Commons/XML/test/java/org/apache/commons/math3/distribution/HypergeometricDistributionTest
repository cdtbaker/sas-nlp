<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.distribution">
        <import package="org.apache.commons.math3.TestUtils"/>
        <import package="org.apache.commons.math3.exception.NotPositiveException"/>
        <import package="org.apache.commons.math3.exception.NotStrictlyPositiveException"/>
        <import package="org.apache.commons.math3.exception.NumberIsTooLargeException"/>
        <import package="org.apache.commons.math3.util.Precision"/>
        <import package="org.junit.Assert"/>
        <import package="org.junit.Test"/>
        <class name="HypergeometricDistributionTest" line="28">
            <extends class="IntegerDistributionAbstractTest"/>
            <comment line="29">
                -------------- Implementations for abstract methods -----------------------                
            </comment>
            <comment line="29">
                -------------------- Additional test cases ------------------------------                
            </comment>
            <javadoc line="28">
                Test cases for HyperGeometriclDistribution.
                  Extends IntegerDistributionAbstractTest.  See class javadoc for
                  IntegerDistributionAbstractTest for details.                
                <@version>
                    n $Id: HypergeometricDistributionTest.java 1364028 2012-07-21 00:42:49Z erans $                    
                </@version>
            </javadoc>
            <javadoc line="39">
                Creates the default discrete distribution instance to use in tests.                
            </javadoc>
            <method name="makeDistribution" type="IntegerDistribution" line="41"/>
            <javadoc line="45">
                Creates the default probability density test input values                
            </javadoc>
            <method name="makeDensityTestPoints" type="int[]" line="47"/>
            <javadoc line="51">
                Creates the default probability density test expected values                
            </javadoc>
            <method name="makeDensityTestValues" type="double[]" line="53"/>
            <javadoc line="58">
                Creates the default cumulative probability density test input values                
            </javadoc>
            <method name="makeCumulativeTestPoints" type="int[]" line="60"/>
            <javadoc line="64">
                Creates the default cumulative probability density test expected values                
            </javadoc>
            <method name="makeCumulativeTestValues" type="double[]" line="66"/>
            <javadoc line="71">
                Creates the default inverse cumulative probability test input values                
            </javadoc>
            <method name="makeInverseCumulativeTestPoints" type="double[]" line="73"/>
            <javadoc line="78">
                Creates the default inverse cumulative probability density test expected values                
            </javadoc>
            <method name="makeInverseCumulativeTestValues" type="int[]" line="80"/>
            <javadoc line="86">
                Verify that if there are no failures, mass is concentrated on sampleSize                
            </javadoc>
            <method name="testDegenerateNoFailures" type="void" line="88">
                <declaration name="dist" type="HypergeometricDistribution" line="89"/>
            </method>
            <javadoc line="104">
                Verify that if there are no successes, mass is concentrated on 0                
            </javadoc>
            <method name="testDegenerateNoSuccesses" type="void" line="106">
                <declaration name="dist" type="HypergeometricDistribution" line="107"/>
            </method>
            <javadoc line="122">
                Verify that if sampleSize = populationSize, mass is concentrated on numberOfSuccesses                
            </javadoc>
            <method name="testDegenerateFullSample" type="void" line="124">
                <declaration name="dist" type="HypergeometricDistribution" line="125"/>
            </method>
            <method name="testPreconditions" type="void" line="141">
                <scope line="142"/>
                <scope line="145"/>
                <scope line="148"/>
                <scope line="151"/>
                <scope line="154"/>
                <scope line="157"/>
                <scope line="160"/>
                <scope line="163"/>
                <scope line="166"/>
                <scope line="169"/>
            </method>
            <method name="testAccessors" type="void" line="175">
                <declaration name="dist" type="HypergeometricDistribution" line="176"/>
            </method>
            <method name="testLargeValues" type="void" line="183">
                <declaration name="populationSize" type="int" line="184"/>
                <declaration name="sampleSize" type="int" line="185"/>
                <declaration name="numberOfSucceses" type="int" line="186"/>
                <declaration name="data" type="double[][]" line="187"/>
            </method>
            <method name="testHypergeometricDistributionProbabilities" type="void" line="211">
                <params>
                    <param name="populationSize" type="int"/>
                    <param name="sampleSize" type="int"/>
                    <param name="numberOfSucceses" type="int"/>
                    <param name="data" type="double[][]"/>
                </params>
                <declaration name="dist" type="HypergeometricDistribution" line="212"/>
                <scope line="213">
                    <declaration name="x" type="int" line="214"/>
                    <declaration name="pmf" type="double" line="215"/>
                    <declaration name="actualPmf" type="double" line="216"/>
                    <declaration name="cdf" type="double" line="219"/>
                    <declaration name="actualCdf" type="double" line="220"/>
                    <declaration name="cdf1" type="double" line="223"/>
                    <declaration name="actualCdf1" type="double" line="224"/>
                </scope>
            </method>
            <method name="testMoreLargeValues" type="void" line="230">
                <declaration name="populationSize" type="int" line="231"/>
                <declaration name="sampleSize" type="int" line="232"/>
                <declaration name="numberOfSucceses" type="int" line="233"/>
                <declaration name="data" type="double[][]" line="234"/>
            </method>
            <method name="testMoments" type="void" line="258">
                <declaration name="tol" type="double" line="259"/>
                <declaration name="dist" type="HypergeometricDistribution" line="260"/>
            </method>
            <method name="testMath644" type="void" line="272">
                <comment line="273">
                    t N = 14761461;  // population                    
                </comment>
                <comment line="273">
                    t m = 1035;      // successes in population                    
                </comment>
                <comment line="273">
                    t n = 1841;      // number of trials                    
                </comment>
                <comment line="273">
                    another way to calculate the upper cumulative probability                    
                </comment>
                <declaration name="N" type="int" line="273"/>
                <declaration name="m" type="int" line="274"/>
                <declaration name="n" type="int" line="275"/>
                <declaration name="k" type="int" line="277"/>
                <declaration name="dist" type="HypergeometricDistribution" line="278"/>
                <declaration name="upper" type="double" line="284"/>
            </method>
        </class>
    </source>