<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.distribution">
        <import package="org.apache.commons.math3.exception.DimensionMismatchException"/>
        <import package="org.apache.commons.math3.exception.MathArithmeticException"/>
        <import package="org.apache.commons.math3.exception.NotANumberException"/>
        <import package="org.apache.commons.math3.exception.NotFiniteNumberException"/>
        <import package="org.apache.commons.math3.exception.NotPositiveException"/>
        <import package="org.apache.commons.math3.util.FastMath"/>
        <import package="org.junit.Assert"/>
        <import package="org.junit.Test"/>
        <class name="EnumeratedIntegerDistributionTest" line="28">
            <javadoc line="28">
                Test class for {@link EnumeratedIntegerDistribution}.                
                <@version>
                    n $Id: EnumeratedIntegerDistributionTest.java 1456769 2013-03-15 04:51:34Z psteitz $                    
                </@version>
            </javadoc>
            <declaration name="testDistribution" type="EnumeratedIntegerDistribution" line="35"/>
            <javadoc line="35">
                The distribution object used for testing.                
            </javadoc>
            <javadoc line="40">
                Creates the default distribution object used for testing.                
            </javadoc>
            <method name="EnumeratedIntegerDistributionTest" type="constructor" line="43">
                <comment line="44">
                    Non-sorted singleton array with duplicates should be allowed.                    
                </comment>
                <comment line="44">
                    Values with zero-probability do not extend the support.                    
                </comment>
            </method>
            <javadoc line="51">
                Tests if the EnumeratedIntegerDistribution constructor throws
                  exceptions for invalid data.                
            </javadoc>
            <method name="testExceptions" type="void" line="56">
                <declaration name="invalid" type="EnumeratedIntegerDistribution" line="57"/>
                <scope line="58"/>
                <scope line="61"/>
                <scope line="63"/>
                <scope line="66"/>
                <scope line="68"/>
                <scope line="71"/>
                <scope line="73"/>
                <scope line="76"/>
                <scope line="78"/>
                <scope line="81"/>
            </method>
            <javadoc line="86">
                Tests if the distribution returns proper probability values.                
            </javadoc>
            <method name="testProbability" type="void" line="90">
                <declaration name="points" type="int[]" line="91"/>
                <declaration name="results" type="double[]" line="92"/>
                <scope line="93">
                    <declaration name="probability" type="double" line="94"/>
                </scope>
            </method>
            <javadoc line="99">
                Tests if the distribution returns proper cumulative probability values.                
            </javadoc>
            <method name="testCumulativeProbability" type="void" line="103">
                <declaration name="points" type="int[]" line="104"/>
                <declaration name="results" type="double[]" line="105"/>
                <scope line="106">
                    <declaration name="probability" type="double" line="107"/>
                </scope>
            </method>
            <javadoc line="112">
                Tests if the distribution returns proper mean value.                
            </javadoc>
            <method name="testGetNumericalMean" type="void" line="116"/>
            <javadoc line="120">
                Tests if the distribution returns proper variance.                
            </javadoc>
            <method name="testGetNumericalVariance" type="void" line="124"/>
            <javadoc line="128">
                Tests if the distribution returns proper lower bound.                
            </javadoc>
            <method name="testGetSupportLowerBound" type="void" line="132"/>
            <javadoc line="136">
                Tests if the distribution returns proper upper bound.                
            </javadoc>
            <method name="testGetSupportUpperBound" type="void" line="140"/>
            <javadoc line="144">
                Tests if the distribution returns properly that the support is connected.                
            </javadoc>
            <method name="testIsSupportConnected" type="void" line="148"/>
            <javadoc line="152">
                Tests sampling.                
            </javadoc>
            <method name="testSample" type="void" line="156">
                <comment line="157">
                    stDistribution.reseedRandomGenerator(-334759360); // fixed seed                    
                </comment>
                <declaration name="n" type="int" line="157"/>
                <declaration name="samples" type="int[]" line="159"/>
                <declaration name="sum" type="double" line="161"/>
                <declaration name="sumOfSquares" type="double" line="162"/>
                <scope line="163"/>
            </method>
        </class>
    </source>