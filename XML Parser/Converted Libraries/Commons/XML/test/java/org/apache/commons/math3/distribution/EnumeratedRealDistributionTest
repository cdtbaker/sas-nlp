<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.distribution">
        <import package="java.util.ArrayList"/>
        <import package="java.util.List"/>
        <import package="org.apache.commons.math3.exception.DimensionMismatchException"/>
        <import package="org.apache.commons.math3.exception.MathArithmeticException"/>
        <import package="org.apache.commons.math3.exception.NotANumberException"/>
        <import package="org.apache.commons.math3.exception.NotFiniteNumberException"/>
        <import package="org.apache.commons.math3.exception.NotPositiveException"/>
        <import package="org.apache.commons.math3.util.FastMath"/>
        <import package="org.apache.commons.math3.util.Pair"/>
        <import package="org.junit.Assert"/>
        <import package="org.junit.Test"/>
        <class name="EnumeratedRealDistributionTest" line="32">
            <javadoc line="32">
                Test class for {@link EnumeratedRealDistribution}.                
                <@version>
                    n $Id: EnumeratedRealDistributionTest.java 1456769 2013-03-15 04:51:34Z psteitz $                    
                </@version>
            </javadoc>
            <declaration name="testDistribution" type="EnumeratedRealDistribution" line="39"/>
            <javadoc line="39">
                The distribution object used for testing.                
            </javadoc>
            <javadoc line="44">
                Creates the default distribution object used for testing.                
            </javadoc>
            <method name="EnumeratedRealDistributionTest" type="constructor" line="47">
                <comment line="48">
                    Non-sorted singleton array with duplicates should be allowed.                    
                </comment>
                <comment line="48">
                    Values with zero-probability do not extend the support.                    
                </comment>
            </method>
            <javadoc line="55">
                Tests if the {@link EnumeratedRealDistribution} constructor throws
                 * exceptions for invalid data.                
            </javadoc>
            <method name="testExceptions" type="void" line="60">
                <declaration name="invalid" type="EnumeratedRealDistribution" line="61"/>
                <scope line="62"/>
                <scope line="65"/>
                <scope line="67"/>
                <scope line="70"/>
                <scope line="72"/>
                <scope line="75"/>
                <scope line="77"/>
                <scope line="80"/>
                <scope line="82"/>
                <scope line="85"/>
            </method>
            <javadoc line="90">
                Tests if the distribution returns proper probability values.                
            </javadoc>
            <method name="testProbability" type="void" line="94">
                <declaration name="points" type="double[]" line="95"/>
                <declaration name="results" type="double[]" line="96"/>
                <scope line="97">
                    <declaration name="density" type="double" line="98"/>
                </scope>
            </method>
            <javadoc line="103">
                Tests if the distribution returns proper density values.                
            </javadoc>
            <method name="testDensity" type="void" line="107">
                <declaration name="points" type="double[]" line="108"/>
                <declaration name="results" type="double[]" line="109"/>
                <scope line="110">
                    <declaration name="density" type="double" line="111"/>
                </scope>
            </method>
            <javadoc line="116">
                Tests if the distribution returns proper cumulative probability values.                
            </javadoc>
            <method name="testCumulativeProbability" type="void" line="120">
                <declaration name="points" type="double[]" line="121"/>
                <declaration name="results" type="double[]" line="122"/>
                <scope line="123">
                    <declaration name="probability" type="double" line="124"/>
                </scope>
            </method>
            <javadoc line="129">
                Tests if the distribution returns proper mean value.                
            </javadoc>
            <method name="testGetNumericalMean" type="void" line="133"/>
            <javadoc line="137">
                Tests if the distribution returns proper variance.                
            </javadoc>
            <method name="testGetNumericalVariance" type="void" line="141"/>
            <javadoc line="145">
                Tests if the distribution returns proper lower bound.                
            </javadoc>
            <method name="testGetSupportLowerBound" type="void" line="149"/>
            <javadoc line="153">
                Tests if the distribution returns proper upper bound.                
            </javadoc>
            <method name="testGetSupportUpperBound" type="void" line="157"/>
            <javadoc line="161">
                Tests if the distribution returns properly that the support includes the
                 * lower bound.                
            </javadoc>
            <method name="testIsSupportLowerBoundInclusive" type="void" line="166"/>
            <javadoc line="170">
                Tests if the distribution returns properly that the support includes the
                 * upper bound.                
            </javadoc>
            <method name="testIsSupportUpperBoundInclusive" type="void" line="175"/>
            <javadoc line="179">
                Tests if the distribution returns properly that the support is connected.                
            </javadoc>
            <method name="testIsSupportConnected" type="void" line="183"/>
            <javadoc line="187">
                Tests sampling.                
            </javadoc>
            <method name="testSample" type="void" line="191">
                <comment line="192">
                    stDistribution.reseedRandomGenerator(-334759360); // fixed seed                    
                </comment>
                <declaration name="n" type="int" line="192"/>
                <declaration name="samples" type="double[]" line="194"/>
                <declaration name="sum" type="double" line="196"/>
                <declaration name="sumOfSquares" type="double" line="197"/>
                <scope line="198"/>
            </method>
            <method name="testIssue942" type="void" line="209">
                <declaration name="list" type="List&lt;Pair&lt;Object,Double&gt;&gt;" line="210"/>
                <anonymous_class line="211"/>
                <anonymous_class line="212"/>
            </method>
        </class>
    </source>