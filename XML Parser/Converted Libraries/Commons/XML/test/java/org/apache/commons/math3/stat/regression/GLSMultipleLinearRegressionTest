<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.stat.regression">
        <import package="org.junit.Assert"/>
        <import package="org.junit.Before"/>
        <import package="org.junit.Test"/>
        <import package="org.apache.commons.math3.TestUtils"/>
        <import package="org.apache.commons.math3.linear.MatrixUtils"/>
        <import package="org.apache.commons.math3.linear.RealMatrix"/>
        <import package="org.apache.commons.math3.linear.RealVector"/>
        <import package="org.apache.commons.math3.random.CorrelatedRandomVectorGenerator"/>
        <import package="org.apache.commons.math3.random.JDKRandomGenerator"/>
        <import package="org.apache.commons.math3.random.GaussianRandomGenerator"/>
        <import package="org.apache.commons.math3.random.RandomGenerator"/>
        <import package="org.apache.commons.math3.stat.correlation.Covariance"/>
        <import package="org.apache.commons.math3.stat.descriptive.DescriptiveStatistics"/>
        <class name="GLSMultipleLinearRegressionTest" line="33">
            <extends class="MultipleLinearRegressionAbstractTest"/>
            <declaration name="y" type="double[]" line="35"/>
            <declaration name="x" type="double[][]" line="36"/>
            <declaration name="omega" type="double[][]" line="37"/>
            <declaration name="longley" type="double[]" line="38"/>
            <method name="setUp" type="void" line="59"/>
            <method name="cannotAddXSampleData" type="void" line="79"/>
            <method name="cannotAddNullYSampleData" type="void" line="84"/>
            <method name="cannotAddSampleDataWithSizeMismatch" type="void" line="89">
                <declaration name="y" type="double[]" line="90"/>
                <declaration name="x" type="double[][]" line="91"/>
            </method>
            <method name="cannotAddNullCovarianceData" type="void" line="97"/>
            <method name="notEnoughData" type="void" line="102">
                <declaration name="reducedY" type="double[]" line="103"/>
                <declaration name="reducedX" type="double[][]" line="104"/>
                <declaration name="reducedO" type="double[][]" line="105"/>
            </method>
            <method name="cannotAddCovarianceDataWithSampleSizeMismatch" type="void" line="113">
                <declaration name="y" type="double[]" line="114"/>
                <declaration name="x" type="double[][]" line="115"/>
                <declaration name="omega" type="double[][]" line="118"/>
            </method>
            <method name="cannotAddCovarianceDataThatIsNotSquare" type="void" line="124">
                <declaration name="y" type="double[]" line="125"/>
                <declaration name="x" type="double[][]" line="126"/>
                <declaration name="omega" type="double[][]" line="129"/>
            </method>
            <method name="createRegression" type="GLSMultipleLinearRegression" line="137">
                <declaration name="regression" type="GLSMultipleLinearRegression" line="138"/>
            </method>
            <method name="getNumberOfRegressors" type="int" line="144"/>
            <method name="getSampleSize" type="int" line="149"/>
            <javadoc line="153">
                test calculateYVariance                
            </javadoc>
            <method name="testYVariance" type="void" line="157">
                <comment line="158">
                    assumes: y = new double[]{11.0, 12.0, 13.0, 14.0, 15.0, 16.0};                    
                </comment>
                <declaration name="model" type="GLSMultipleLinearRegression" line="161"/>
            </method>
            <javadoc line="166">
                Verifies that setting X, Y and covariance separately has the same effect as newSample(X,Y,cov).                
            </javadoc>
            <method name="testNewSample2" type="void" line="170">
                <declaration name="y" type="double[]" line="171"/>
                <declaration name="x" type="double[][]" line="172"/>
                <declaration name="covariance" type="double[][]" line="178"/>
                <declaration name="regression" type="GLSMultipleLinearRegression" line="179"/>
                <declaration name="combinedX" type="RealMatrix" line="181"/>
                <declaration name="combinedY" type="RealVector" line="182"/>
                <declaration name="combinedCovInv" type="RealMatrix" line="183"/>
            </method>
            <javadoc line="191">
                Verifies that GLS with identity covariance matrix gives the same results
                  as OLS.                
            </javadoc>
            <method name="testGLSOLSConsistency" type="void" line="196">
                <comment line="197">
                    TODO:  Should have assertRelativelyEquals(double[], double[], eps) in TestUtils                    
                </comment>
                <comment line="197">
                    Should also add RealVector and RealMatrix versions                    
                </comment>
                <declaration name="identityCov" type="RealMatrix" line="197"/>
                <declaration name="glsModel" type="GLSMultipleLinearRegression" line="198"/>
                <declaration name="olsModel" type="OLSMultipleLinearRegression" line="199"/>
                <declaration name="olsBeta" type="double[]" line="203"/>
                <declaration name="glsBeta" type="double[]" line="204"/>
                <scope line="207"/>
            </method>
            <javadoc line="212">
                Generate an error covariance matrix and sample data representing models
                  with this error structure. Then verify that GLS estimated coefficients,
                  on average, perform better than OLS.                
            </javadoc>
            <method name="testGLSEfficiency" type="void" line="218">
                <comment line="219">
                    .setSeed(200);  // Seed has been selected to generate non-trivial covariance                    
                </comment>
                <comment line="219">
                    Assume model has 16 observations (will use Longley data).  Start by generating                    
                </comment>
                <comment line="219">
                    non-constant variances for the 16 error terms.                    
                </comment>
                <comment line="219">
                    Now generate 1000 error vectors to use to estimate the covariance matrix                    
                </comment>
                <comment line="219">
                    Columns are draws on N(0, sigma[col])                    
                </comment>
                <comment line="219">
                    Get covariance matrix for columns                    
                </comment>
                <comment line="219">
                    Create a CorrelatedRandomVectorGenerator to use to generate correlated errors                    
                </comment>
                <comment line="219">
                    uble[] errorMeans = new double[nObs];  // Counting on init to 0 here                    
                </comment>
                <comment line="219">
                    Now start generating models.  Use Longley X matrix on LHS                    
                </comment>
                <comment line="219">
                    and Longley OLS beta vector as &quot;true&quot; beta.  Generate                    
                </comment>
                <comment line="219">
                    Y values by XB + u where u is a CorrelatedRandomVector generated                    
                </comment>
                <comment line="219">
                    from cov.                    
                </comment>
                <comment line="219">
                    Create a GLS model to reuse                    
                </comment>
                <comment line="219">
                    Create aggregators for stats measuring model performance                    
                </comment>
                <comment line="219">
                    Generate Y vectors for 10000 models, estimate GLS and OLS and                    
                </comment>
                <comment line="219">
                    Verify that OLS estimates are better                    
                </comment>
                <comment line="219">
                    Verify that GLS is on average more efficient, lower variance                    
                </comment>
                <declaration name="rg" type="RandomGenerator" line="219"/>
                <declaration name="nObs" type="int" line="224"/>
                <declaration name="sigma" type="double[]" line="225"/>
                <scope line="226"/>
                <declaration name="numSeeds" type="int" line="232"/>
                <declaration name="errorSeeds" type="RealMatrix" line="233"/>
                <scope line="234">
                    <scope line="235"/>
                </scope>
                <declaration name="cov" type="RealMatrix" line="241"/>
                <declaration name="rawGenerator" type="GaussianRandomGenerator" line="244"/>
                <declaration name="errorMeans" type="double[]" line="245"/>
                <declaration name="gen" type="CorrelatedRandomVectorGenerator" line="246"/>
                <declaration name="ols" type="OLSMultipleLinearRegression" line="253"/>
                <declaration name="b" type="RealVector" line="255"/>
                <declaration name="x" type="RealMatrix" line="256"/>
                <declaration name="gls" type="GLSMultipleLinearRegression" line="259"/>
                <declaration name="olsBetaStats" type="DescriptiveStatistics" line="264"/>
                <declaration name="glsBetaStats" type="DescriptiveStatistics" line="265"/>
                <declaration name="nModels" type="int" line="269"/>
                <scope line="270">
                    <declaration name="u" type="RealVector" line="273"/>
                    <declaration name="y" type="double[]" line="274"/>
                    <declaration name="olsBeta" type="RealVector" line="278"/>
                    <declaration name="glsBeta" type="RealVector" line="282"/>
                    <declaration name="dist" type="double" line="285"/>
                </scope>
            </method>
        </class>
    </source>