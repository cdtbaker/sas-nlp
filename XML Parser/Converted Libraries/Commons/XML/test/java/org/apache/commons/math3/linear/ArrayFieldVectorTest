<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.linear">
        <import package="java.io.Serializable"/>
        <import package="java.lang.reflect.Array"/>
        <import package="org.apache.commons.math3.Field"/>
        <import package="org.apache.commons.math3.FieldElement"/>
        <import package="org.apache.commons.math3.TestUtils"/>
        <import package="org.apache.commons.math3.exception.MathIllegalArgumentException"/>
        <import package="org.apache.commons.math3.exception.OutOfRangeException"/>
        <import package="org.apache.commons.math3.fraction.Fraction"/>
        <import package="org.apache.commons.math3.fraction.FractionField"/>
        <import package="org.junit.Assert"/>
        <import package="org.junit.Test"/>
        <class name="ArrayFieldVectorTest" line="32">
            <comment line="33">
                                
            </comment>
            <comment line="33">
                Testclass to test the FieldVector&lt;Fraction&gt; interface                
            </comment>
            <comment line="33">
                only with enough content to support the test                
            </comment>
            <javadoc line="32">
                Test cases for the {@link ArrayFieldVector} class.                
                <@version>
                    n $Id: ArrayFieldVectorTest.java 1296542 2012-03-03 00:55:17Z sebb $                    
                </@version>
            </javadoc>
            <declaration name="ma1" type="Fraction[][]" line="40"/>
            <declaration name="vec1" type="Fraction[]" line="45"/>
            <declaration name="vec2" type="Fraction[]" line="46"/>
            <declaration name="vec3" type="Fraction[]" line="47"/>
            <declaration name="vec4" type="Fraction[]" line="48"/>
            <declaration name="vec_null" type="Fraction[]" line="51"/>
            <declaration name="dvec1" type="Fraction[]" line="52"/>
            <declaration name="mat1" type="Fraction[][]" line="55"/>
            <class name="FieldVectorTestImpl" line="63">
                <implements interface="FieldVector&lt;T&gt;"/>
                <implements interface="Serializable"/>
                <declaration name="serialVersionUID" type="long" line="66"/>
                <declaration name="field" type="Field&lt;T&gt;" line="68"/>
                <declaration name="data" type="T[]" line="70"/>
                <javadoc line="70">
                    Entries of the vector.                    
                </javadoc>
                <javadoc line="73">
                    Build an array of elements.                    
                    <@param>
                        m length size of the array to build                        
                    </@param>
                    <@return>
                        n a new array                        
                    </@return>
                </javadoc>
                <method name="buildArray" type="T[]" line="78"/>
                <method name="FieldVectorTestImpl" type="constructor" line="82"/>
                <method name="getField" type="Field<T>" line="87"/>
                <method name="unsupported" type="UnsupportedOperationException" line="91"/>
                <method name="copy" type="FieldVector<T>" line="95"/>
                <method name="add" type="FieldVector<T>" line="99"/>
                <method name="add" type="FieldVector<T>" line="103"/>
                <method name="subtract" type="FieldVector<T>" line="107"/>
                <method name="subtract" type="FieldVector<T>" line="111"/>
                <method name="mapAdd" type="FieldVector<T>" line="115"/>
                <method name="mapAddToSelf" type="FieldVector<T>" line="119"/>
                <method name="mapSubtract" type="FieldVector<T>" line="123"/>
                <method name="mapSubtractToSelf" type="FieldVector<T>" line="127"/>
                <method name="mapMultiply" type="FieldVector<T>" line="131">
                    <declaration name="out" type="T[]" line="132"/>
                    <scope line="133"/>
                </method>
                <method name="mapMultiplyToSelf" type="FieldVector<T>" line="139"/>
                <method name="mapDivide" type="FieldVector<T>" line="143"/>
                <method name="mapDivideToSelf" type="FieldVector<T>" line="147"/>
                <method name="mapInv" type="FieldVector<T>" line="151"/>
                <method name="mapInvToSelf" type="FieldVector<T>" line="155"/>
                <method name="ebeMultiply" type="FieldVector<T>" line="159"/>
                <method name="ebeMultiply" type="FieldVector<T>" line="163"/>
                <method name="ebeDivide" type="FieldVector<T>" line="167"/>
                <method name="ebeDivide" type="FieldVector<T>" line="171"/>
                <method name="getData" type="T[]" line="175"/>
                <method name="dotProduct" type="T" line="179">
                    <declaration name="dot" type="T" line="180"/>
                    <scope line="181"/>
                </method>
                <method name="dotProduct" type="T" line="187">
                    <declaration name="dot" type="T" line="188"/>
                    <scope line="189"/>
                </method>
                <method name="projection" type="FieldVector<T>" line="195"/>
                <method name="projection" type="FieldVector<T>" line="199"/>
                <method name="outerProduct" type="FieldMatrix<T>" line="203"/>
                <method name="outerProduct" type="FieldMatrix<T>" line="207"/>
                <method name="getEntry" type="T" line="211"/>
                <method name="getDimension" type="int" line="215"/>
                <method name="append" type="FieldVector<T>" line="219"/>
                <method name="append" type="FieldVector<T>" line="223"/>
                <method name="append" type="FieldVector<T>" line="227"/>
                <method name="getSubVector" type="FieldVector<T>" line="231"/>
                <method name="setEntry" type="void" line="235"/>
                <method name="setSubVector" type="void" line="239"/>
                <method name="setSubVector" type="void" line="243"/>
                <method name="set" type="void" line="247"/>
                <method name="toArray" type="T[]" line="251"/>
            </class>
            <method name="testConstructors" type="void" line="258">
                <declaration name="v0" type="ArrayFieldVector&lt;Fraction&gt;" line="260"/>
                <declaration name="v1" type="ArrayFieldVector&lt;Fraction&gt;" line="263"/>
                <declaration name="v2" type="ArrayFieldVector&lt;Fraction&gt;" line="267"/>
                <declaration name="v3" type="ArrayFieldVector&lt;Fraction&gt;" line="271"/>
                <declaration name="v4" type="ArrayFieldVector&lt;Fraction&gt;" line="275"/>
                <scope line="278"/>
                <scope line="281"/>
                <declaration name="v5_i" type="FieldVector&lt;Fraction&gt;" line="285"/>
                <declaration name="v5" type="ArrayFieldVector&lt;Fraction&gt;" line="289"/>
                <declaration name="v6" type="ArrayFieldVector&lt;Fraction&gt;" line="293"/>
                <scope line="296"/>
                <scope line="299"/>
                <declaration name="v7" type="ArrayFieldVector&lt;Fraction&gt;" line="303"/>
                <declaration name="v7_i" type="FieldVectorTestImpl&lt;Fraction&gt;" line="307"/>
                <declaration name="v7_2" type="ArrayFieldVector&lt;Fraction&gt;" line="309"/>
                <declaration name="v8" type="ArrayFieldVector&lt;Fraction&gt;" line="313"/>
                <declaration name="v8_2" type="ArrayFieldVector&lt;Fraction&gt;" line="318"/>
                <declaration name="v9" type="ArrayFieldVector&lt;Fraction&gt;" line="323"/>
            </method>
            <method name="testDataInOut" type="void" line="330">
                <comment line="331">
                    ArrayFieldVector&lt;Fraction&gt; vout4 = (ArrayFieldVector&lt;Fraction&gt;) v1.clone();                    
                </comment>
                <comment line="331">
                    Assert.assertEquals(3, vout4.getDimension());                    
                </comment>
                <comment line="331">
                    Assert.assertEquals(v1.getDataRef(), vout4.getDataRef());                    
                </comment>
                <declaration name="v1" type="ArrayFieldVector&lt;Fraction&gt;" line="332"/>
                <declaration name="v2" type="ArrayFieldVector&lt;Fraction&gt;" line="333"/>
                <declaration name="v4" type="ArrayFieldVector&lt;Fraction&gt;" line="334"/>
                <declaration name="v2_t" type="FieldVectorTestImpl&lt;Fraction&gt;" line="335"/>
                <declaration name="v_append_1" type="FieldVector&lt;Fraction&gt;" line="337"/>
                <declaration name="v_append_2" type="FieldVector&lt;Fraction&gt;" line="341"/>
                <declaration name="v_append_4" type="FieldVector&lt;Fraction&gt;" line="345"/>
                <declaration name="v_copy" type="FieldVector&lt;Fraction&gt;" line="349"/>
                <declaration name="a_frac" type="Fraction[]" line="353"/>
                <declaration name="vout5" type="FieldVector&lt;Fraction&gt;" line="363"/>
                <scope line="366"/>
                <scope line="369"/>
                <declaration name="v_set1" type="ArrayFieldVector&lt;Fraction&gt;" line="373"/>
                <scope line="376"/>
                <scope line="379"/>
                <declaration name="v_set2" type="ArrayFieldVector&lt;Fraction&gt;" line="383"/>
                <scope line="387"/>
                <scope line="390"/>
                <declaration name="v_set3" type="ArrayFieldVector&lt;Fraction&gt;" line="394"/>
                <scope line="398"/>
                <scope line="401"/>
                <declaration name="v_set4" type="ArrayFieldVector&lt;Fraction&gt;" line="405"/>
                <scope line="409"/>
                <scope line="412"/>
                <declaration name="vout10" type="ArrayFieldVector&lt;Fraction&gt;" line="417"/>
                <declaration name="vout10_2" type="ArrayFieldVector&lt;Fraction&gt;" line="418"/>
            </method>
            <method name="testMapFunctions" type="void" line="426">
                <comment line="427">
                    octave =  v1 .+ 2.0                    
                </comment>
                <comment line="427">
                    octave =  v1 .+ 2.0                    
                </comment>
                <comment line="427">
                    octave =  v1 .- 2.0                    
                </comment>
                <comment line="427">
                    octave =  v1 .- 2.0                    
                </comment>
                <comment line="427">
                    octave =  v1 .* 2.0                    
                </comment>
                <comment line="427">
                    octave =  v1 .* 2.0                    
                </comment>
                <comment line="427">
                    octave =  v1 ./ 2.0                    
                </comment>
                <comment line="427">
                    octave =  v1 ./ 2.0                    
                </comment>
                <comment line="427">
                    octave =  v1 .^-1                    
                </comment>
                <comment line="427">
                    octave =  v1 .^-1                    
                </comment>
                <declaration name="v1" type="ArrayFieldVector&lt;Fraction&gt;" line="427"/>
                <declaration name="v_mapAdd" type="FieldVector&lt;Fraction&gt;" line="430"/>
                <declaration name="result_mapAdd" type="Fraction[]" line="431"/>
                <declaration name="v_mapAddToSelf" type="FieldVector&lt;Fraction&gt;" line="435"/>
                <declaration name="result_mapAddToSelf" type="Fraction[]" line="437"/>
                <declaration name="v_mapSubtract" type="FieldVector&lt;Fraction&gt;" line="441"/>
                <declaration name="result_mapSubtract" type="Fraction[]" line="442"/>
                <declaration name="v_mapSubtractToSelf" type="FieldVector&lt;Fraction&gt;" line="446"/>
                <declaration name="result_mapSubtractToSelf" type="Fraction[]" line="448"/>
                <declaration name="v_mapMultiply" type="FieldVector&lt;Fraction&gt;" line="452"/>
                <declaration name="result_mapMultiply" type="Fraction[]" line="453"/>
                <declaration name="v_mapMultiplyToSelf" type="FieldVector&lt;Fraction&gt;" line="457"/>
                <declaration name="result_mapMultiplyToSelf" type="Fraction[]" line="459"/>
                <declaration name="v_mapDivide" type="FieldVector&lt;Fraction&gt;" line="463"/>
                <declaration name="result_mapDivide" type="Fraction[]" line="464"/>
                <declaration name="v_mapDivideToSelf" type="FieldVector&lt;Fraction&gt;" line="468"/>
                <declaration name="result_mapDivideToSelf" type="Fraction[]" line="470"/>
                <declaration name="v_mapInv" type="FieldVector&lt;Fraction&gt;" line="474"/>
                <declaration name="result_mapInv" type="Fraction[]" line="475"/>
                <declaration name="v_mapInvToSelf" type="FieldVector&lt;Fraction&gt;" line="479"/>
                <declaration name="result_mapInvToSelf" type="Fraction[]" line="481"/>
            </method>
            <method name="testBasicFunctions" type="void" line="487">
                <comment line="488">
                    octave =  v1 + v2                    
                </comment>
                <comment line="488">
                    octave =  v1 - v2                    
                </comment>
                <comment line="488">
                    octave v1 .* v2                    
                </comment>
                <comment line="488">
                    octave v1 ./ v2                    
                </comment>
                <comment line="488">
                    octave  dot(v1,v2)                    
                </comment>
                <comment line="488">
                    octave  dot(v1,v2_t)                    
                </comment>
                <declaration name="v1" type="ArrayFieldVector&lt;Fraction&gt;" line="488"/>
                <declaration name="v2" type="ArrayFieldVector&lt;Fraction&gt;" line="489"/>
                <declaration name="v2_t" type="FieldVectorTestImpl&lt;Fraction&gt;" line="492"/>
                <declaration name="v_add" type="ArrayFieldVector&lt;Fraction&gt;" line="495"/>
                <declaration name="result_add" type="Fraction[]" line="496"/>
                <declaration name="vt2" type="FieldVectorTestImpl&lt;Fraction&gt;" line="499"/>
                <declaration name="v_add_i" type="FieldVector&lt;Fraction&gt;" line="500"/>
                <declaration name="result_add_i" type="Fraction[]" line="501"/>
                <declaration name="v_subtract" type="ArrayFieldVector&lt;Fraction&gt;" line="505"/>
                <declaration name="result_subtract" type="Fraction[]" line="506"/>
                <declaration name="v_subtract_i" type="FieldVector&lt;Fraction&gt;" line="509"/>
                <declaration name="result_subtract_i" type="Fraction[]" line="510"/>
                <declaration name="v_ebeMultiply" type="ArrayFieldVector&lt;Fraction&gt;" line="514"/>
                <declaration name="result_ebeMultiply" type="Fraction[]" line="515"/>
                <declaration name="v_ebeMultiply_2" type="FieldVector&lt;Fraction&gt;" line="518"/>
                <declaration name="result_ebeMultiply_2" type="Fraction[]" line="519"/>
                <declaration name="v_ebeDivide" type="ArrayFieldVector&lt;Fraction&gt;" line="523"/>
                <declaration name="result_ebeDivide" type="Fraction[]" line="524"/>
                <declaration name="v_ebeDivide_2" type="FieldVector&lt;Fraction&gt;" line="527"/>
                <declaration name="result_ebeDivide_2" type="Fraction[]" line="528"/>
                <declaration name="dot" type="Fraction" line="532"/>
                <declaration name="dot_2" type="Fraction" line="536"/>
                <declaration name="m_outerProduct" type="FieldMatrix&lt;Fraction&gt;" line="539"/>
                <declaration name="m_outerProduct_2" type="FieldMatrix&lt;Fraction&gt;" line="542"/>
                <declaration name="v_projection" type="ArrayFieldVector&lt;Fraction&gt;" line="545"/>
                <declaration name="result_projection" type="Fraction[]" line="546"/>
                <declaration name="v_projection_2" type="FieldVector&lt;Fraction&gt;" line="549"/>
                <declaration name="result_projection_2" type="Fraction[]" line="550"/>
            </method>
            <method name="testMisc" type="void" line="556">
                <comment line="557">
                    Fraction[] dout1 = v1.copyOut();
                    Assert.assertEquals(3, dout1.length);                    
                </comment>
                <declaration name="v1" type="ArrayFieldVector&lt;Fraction&gt;" line="557"/>
                <declaration name="v4" type="ArrayFieldVector&lt;Fraction&gt;" line="558"/>
                <declaration name="v4_2" type="FieldVector&lt;Fraction&gt;" line="559"/>
                <declaration name="out1" type="String" line="561"/>
                <scope line="568"/>
                <scope line="571"/>
                <scope line="575"/>
                <scope line="578"/>
                <scope line="582"/>
                <scope line="585"/>
            </method>
            <method name="testSerial" type="void" line="592">
                <declaration name="v" type="ArrayFieldVector&lt;Fraction&gt;" line="593"/>
            </method>
            <method name="testZeroVectors" type="void" line="598">
                <comment line="599">
                    when the field is not specified, array cannot be empty                    
                </comment>
                <comment line="599">
                    when the field is specified, array can be empty                    
                </comment>
                <scope line="601"/>
                <scope line="604"/>
                <scope line="607"/>
                <scope line="610"/>
                <scope line="613"/>
                <scope line="616"/>
            </method>
            <method name="testOuterProduct" type="void" line="628">
                <declaration name="u" type="ArrayFieldVector&lt;Fraction&gt;" line="629"/>
                <declaration name="v" type="ArrayFieldVector&lt;Fraction&gt;" line="634"/>
                <declaration name="uv" type="FieldMatrix&lt;Fraction&gt;" line="639"/>
                <declaration name="tol" type="double" line="641"/>
            </method>
            <javadoc line="650">
                verifies that two vectors are equals                
            </javadoc>
            <method name="checkArray" type="void" line="651">
                <scope line="652"/>
                <scope line="655"/>
            </method>
        </class>
    </source>