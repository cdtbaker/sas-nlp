<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.optim.univariate">
        <import package="org.apache.commons.math3.analysis.QuinticFunction"/>
        <import package="org.apache.commons.math3.analysis.UnivariateFunction"/>
        <import package="org.apache.commons.math3.analysis.function.Sin"/>
        <import package="org.apache.commons.math3.optim.nonlinear.scalar.GoalType"/>
        <import package="org.apache.commons.math3.optim.MaxEval"/>
        <import package="org.apache.commons.math3.random.JDKRandomGenerator"/>
        <import package="org.apache.commons.math3.util.FastMath"/>
        <import package="org.apache.commons.math3.exception.MathIllegalStateException"/>
        <import package="org.junit.Assert"/>
        <import package="org.junit.Test"/>
        <class name="MultiStartUnivariateOptimizerTest" line="30">
            <method name="testMissingMaxEval" type="void" line="32">
                <declaration name="underlying" type="UnivariateOptimizer" line="33"/>
                <declaration name="g" type="JDKRandomGenerator" line="34"/>
                <declaration name="optimizer" type="MultiStartUnivariateOptimizer" line="36"/>
            </method>
            <method name="testMissingSearchInterval" type="void" line="42">
                <declaration name="underlying" type="UnivariateOptimizer" line="43"/>
                <declaration name="g" type="JDKRandomGenerator" line="44"/>
                <declaration name="optimizer" type="MultiStartUnivariateOptimizer" line="46"/>
            </method>
            <method name="testSinMin" type="void" line="53">
                <declaration name="f" type="UnivariateFunction" line="54"/>
                <declaration name="underlying" type="UnivariateOptimizer" line="55"/>
                <declaration name="g" type="JDKRandomGenerator" line="56"/>
                <declaration name="optimizer" type="MultiStartUnivariateOptimizer" line="58"/>
                <declaration name="optima" type="UnivariatePointValuePair[]" line="63"/>
                <scope line="64">
                    <declaration name="d" type="double" line="65"/>
                </scope>
            </method>
            <method name="testQuinticMin" type="void" line="75">
                <comment line="76">
                    The quintic function has zeros at 0, +-0.5 and +-1.                    
                </comment>
                <comment line="76">
                    The function has extrema (first derivative is zero) at 0.27195613 and 0.82221643,                    
                </comment>
                <declaration name="f" type="UnivariateFunction" line="78"/>
                <declaration name="underlying" type="UnivariateOptimizer" line="79"/>
                <declaration name="g" type="JDKRandomGenerator" line="80"/>
                <declaration name="optimizer" type="MultiStartUnivariateOptimizer" line="82"/>
                <declaration name="optimum" type="UnivariatePointValuePair" line="84"/>
                <declaration name="optima" type="UnivariatePointValuePair[]" line="92"/>
                <scope line="93"/>
            </method>
            <method name="testBadFunction" type="void" line="101">
                <comment line="102">
                    Ensure that the exception was thrown because no optimum was found.                    
                </comment>
                <anonymous_class line="102">
                    <method name="value" type="double" line="103">
                        <scope line="104"/>
                    </method>
                </anonymous_class>
                <declaration name="f" type="UnivariateFunction" line="102"/>
                <declaration name="underlying" type="UnivariateOptimizer" line="110"/>
                <declaration name="g" type="JDKRandomGenerator" line="111"/>
                <declaration name="optimizer" type="MultiStartUnivariateOptimizer" line="113"/>
                <scope line="115"/>
                <scope line="121"/>
            </method>
            <class name="LocalException" extends="RuntimeException" line="129">
                <declaration name="serialVersionUID" type="long" line="130"/>
            </class>
        </class>
    </source>