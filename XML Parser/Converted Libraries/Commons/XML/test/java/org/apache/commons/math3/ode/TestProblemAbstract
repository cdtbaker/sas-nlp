<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.ode">
        <import package="org.apache.commons.math3.ode.FirstOrderDifferentialEquations"/>
        <import package="org.apache.commons.math3.ode.events.EventHandler"/>
        <class name="TestProblemAbstract" line="23">
            <implements interface="FirstOrderDifferentialEquations"/>
            <javadoc line="23">
                This class is used as the base class of the problems that are
                 * integrated during the junit tests for the ODE integrators.                
            </javadoc>
            <declaration name="n" type="int" line="30"/>
            <javadoc line="30">
                Dimension of the problem.                
            </javadoc>
            <declaration name="calls" type="int" line="33"/>
            <javadoc line="33">
                Number of functions calls.                
            </javadoc>
            <declaration name="t0" type="double" line="36"/>
            <javadoc line="36">
                Initial time                
            </javadoc>
            <declaration name="y0" type="double[]" line="39"/>
            <javadoc line="39">
                Initial state                
            </javadoc>
            <declaration name="t1" type="double" line="42"/>
            <javadoc line="42">
                Final time                
            </javadoc>
            <declaration name="errorScale" type="double[]" line="45"/>
            <javadoc line="45">
                Error scale                
            </javadoc>
            <javadoc line="48">
                Simple constructor.                
            </javadoc>
            <method name="TestProblemAbstract" type="constructor" line="51"/>
            <javadoc line="60">
                Copy constructor.                
                <@param>
                    m problem problem to copy                    
                </@param>
            </javadoc>
            <method name="TestProblemAbstract" type="constructor" line="64">
                <scope line="68"/>
                <scope line="70"/>
                <scope line="73"/>
                <scope line="75"/>
            </method>
            <method name="copy" type="TestProblemAbstract" line="81"/>
            <javadoc line="81">
                Copy operation.                
                <@return>
                    n a copy of the instance                    
                </@return>
            </javadoc>
            <javadoc line="87">
                Set the initial conditions                
                <@param>
                    m t0 initial time                    
                </@param>
                <@param>
                    m y0 initial state vector                    
                </@param>
            </javadoc>
            <method name="setInitialConditions" type="void" line="92"/>
            <javadoc line="99">
                Set the final conditions.                
                <@param>
                    m t1 final time                    
                </@param>
            </javadoc>
            <method name="setFinalConditions" type="void" line="103"/>
            <javadoc line="107">
                Set the error scale                
                <@param>
                    m errorScale error scale                    
                </@param>
            </javadoc>
            <method name="setErrorScale" type="void" line="111"/>
            <method name="getDimension" type="int" line="115"/>
            <javadoc line="119">
                Get the initial time.                
                <@return>
                    n initial time                    
                </@return>
            </javadoc>
            <method name="getInitialTime" type="double" line="123"/>
            <javadoc line="127">
                Get the initial state vector.                
                <@return>
                    n initial state vector                    
                </@return>
            </javadoc>
            <method name="getInitialState" type="double[]" line="131"/>
            <javadoc line="135">
                Get the final time.                
                <@return>
                    n final time                    
                </@return>
            </javadoc>
            <method name="getFinalTime" type="double" line="139"/>
            <javadoc line="143">
                Get the error scale.                
                <@return>
                    n error scale                    
                </@return>
            </javadoc>
            <method name="getErrorScale" type="double[]" line="147"/>
            <javadoc line="151">
                Get the events handlers.                
                <@return>
                    n events handlers                    
                </@return>
            </javadoc>
            <method name="getEventsHandlers" type="EventHandler[]" line="154"/>
            <javadoc line="158">
                Get the theoretical events times.                
                <@return>
                    n theoretical events times                    
                </@return>
            </javadoc>
            <method name="getTheoreticalEventsTimes" type="double[]" line="162"/>
            <javadoc line="166">
                Get the number of calls.                
                <@return>
                    n nuber of calls                    
                </@return>
            </javadoc>
            <method name="getCalls" type="int" line="170"/>
            <method name="computeDerivatives" type="void" line="174"/>
            <method name="doComputeDerivatives" type="void" line="179"/>
            <method name="computeTheoreticalState" type="double[]" line="181"/>
            <javadoc line="181">
                Compute the theoretical state at the specified time.                
                <@param>
                    m t time at which the state is required                    
                </@param>
                <@return>
                    n state vector at time t                    
                </@return>
            </javadoc>
        </class>
    </source>