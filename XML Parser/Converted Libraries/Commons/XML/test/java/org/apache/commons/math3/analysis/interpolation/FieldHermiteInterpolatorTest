<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.analysis.interpolation">
        <import package="java.util.Random"/>
        <import package="org.apache.commons.math3.analysis.polynomials.PolynomialFunction"/>
        <import package="org.apache.commons.math3.dfp.Dfp"/>
        <import package="org.apache.commons.math3.dfp.DfpField"/>
        <import package="org.apache.commons.math3.exception.NoDataException"/>
        <import package="org.apache.commons.math3.fraction.BigFraction"/>
        <import package="org.apache.commons.math3.util.FastMath"/>
        <import package="org.junit.Assert"/>
        <import package="org.junit.Test"/>
        <class name="FieldHermiteInterpolatorTest" line="30">
            <method name="testZero" type="void" line="33">
                <declaration name="interpolator" type="FieldHermiteInterpolator&lt;BigFraction&gt;" line="34"/>
                <scope line="36">
                    <declaration name="y" type="BigFraction" line="37"/>
                    <declaration name="derivatives" type="BigFraction[][]" line="39"/>
                </scope>
            </method>
            <method name="testQuadratic" type="void" line="46">
                <declaration name="interpolator" type="FieldHermiteInterpolator&lt;BigFraction&gt;" line="47"/>
                <scope line="51">
                    <declaration name="y" type="BigFraction" line="52"/>
                    <declaration name="derivatives" type="BigFraction[][]" line="54"/>
                </scope>
            </method>
            <method name="testMixedDerivatives" type="void" line="63">
                <declaration name="interpolator" type="FieldHermiteInterpolator&lt;BigFraction&gt;" line="64"/>
                <declaration name="derivatives" type="BigFraction[][]" line="68"/>
            </method>
            <method name="testRandomPolynomialsValuesOnly" type="void" line="92">
                <declaration name="random" type="Random" line="94"/>
                <scope line="96">
                    <declaration name="maxDegree" type="int" line="98"/>
                    <declaration name="p" type="PolynomialFunction[]" line="99"/>
                    <scope line="100">
                        <declaration name="degree" type="int" line="101"/>
                    </scope>
                    <declaration name="field" type="DfpField" line="106"/>
                    <declaration name="step" type="Dfp" line="107"/>
                    <declaration name="interpolator" type="FieldHermiteInterpolator&lt;Dfp&gt;" line="108"/>
                    <scope line="109">
                        <declaration name="x" type="Dfp" line="110"/>
                        <declaration name="values" type="Dfp[]" line="111"/>
                        <scope line="112"/>
                    </scope>
                    <scope line="118">
                        <declaration name="x" type="Dfp" line="119"/>
                        <declaration name="values" type="Dfp[]" line="120"/>
                        <scope line="122"/>
                    </scope>
                </scope>
            </method>
            <method name="testRandomPolynomialsFirstDerivative" type="void" line="134">
                <declaration name="random" type="Random" line="136"/>
                <scope line="138">
                    <declaration name="maxDegree" type="int" line="140"/>
                    <declaration name="p" type="PolynomialFunction[]" line="141"/>
                    <declaration name="pPrime" type="PolynomialFunction[]" line="142"/>
                    <scope line="143">
                        <declaration name="degree" type="int" line="144"/>
                    </scope>
                    <declaration name="field" type="DfpField" line="150"/>
                    <declaration name="step" type="Dfp" line="151"/>
                    <declaration name="interpolator" type="FieldHermiteInterpolator&lt;Dfp&gt;" line="152"/>
                    <scope line="153">
                        <declaration name="x" type="Dfp" line="154"/>
                        <declaration name="values" type="Dfp[]" line="155"/>
                        <declaration name="derivatives" type="Dfp[]" line="156"/>
                        <scope line="157"/>
                    </scope>
                    <declaration name="h" type="Dfp" line="164"/>
                    <scope line="165">
                        <declaration name="x" type="Dfp" line="166"/>
                        <declaration name="y" type="Dfp[]" line="167"/>
                        <declaration name="yP" type="Dfp[]" line="168"/>
                        <declaration name="yM" type="Dfp[]" line="169"/>
                        <scope line="171"/>
                    </scope>
                </scope>
            </method>
            <method name="testSine" type="void" line="185">
                <declaration name="field" type="DfpField" line="186"/>
                <declaration name="interpolator" type="FieldHermiteInterpolator&lt;Dfp&gt;" line="187"/>
                <scope line="188"/>
                <scope line="191">
                    <declaration name="y" type="Dfp" line="192"/>
                </scope>
            </method>
            <method name="testSquareRoot" type="void" line="198">
                <declaration name="field" type="DfpField" line="199"/>
                <declaration name="interpolator" type="FieldHermiteInterpolator&lt;Dfp&gt;" line="200"/>
                <scope line="201"/>
                <scope line="204">
                    <declaration name="y" type="Dfp" line="205"/>
                </scope>
            </method>
            <method name="testWikipedia" type="void" line="211">
                <comment line="212">
                    this test corresponds to the example from Wikipedia page:                    
                </comment>
                <comment line="212">
                    http://en.wikipedia.org/wiki/Hermite_interpolation                    
                </comment>
                <declaration name="interpolator" type="FieldHermiteInterpolator&lt;BigFraction&gt;" line="214"/>
                <scope line="227">
                    <declaration name="y" type="BigFraction" line="228"/>
                    <declaration name="x2" type="BigFraction" line="229"/>
                    <declaration name="x4" type="BigFraction" line="230"/>
                    <declaration name="x8" type="BigFraction" line="231"/>
                </scope>
            </method>
            <method name="testOnePointParabola" type="void" line="237">
                <declaration name="interpolator" type="FieldHermiteInterpolator&lt;BigFraction&gt;" line="238"/>
                <scope line="243">
                    <declaration name="y" type="BigFraction" line="244"/>
                </scope>
            </method>
            <method name="randomPolynomial" type="PolynomialFunction" line="249">
                <declaration name="coeff" type="double[]" line="250"/>
                <scope line="251"/>
            </method>
            <method name="testEmptySampleValue" type="void" line="258"/>
            <method name="testEmptySampleDerivative" type="void" line="263"/>
            <method name="testDuplicatedAbscissa" type="void" line="268">
                <declaration name="interpolator" type="FieldHermiteInterpolator&lt;BigFraction&gt;" line="269"/>
            </method>
        </class>
    </source>