<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.ode">
        <import package="java.util.Random"/>
        <import package="org.apache.commons.math3.exception.DimensionMismatchException"/>
        <import package="org.apache.commons.math3.exception.MathIllegalArgumentException"/>
        <import package="org.apache.commons.math3.exception.MaxCountExceededException"/>
        <import package="org.apache.commons.math3.exception.NoBracketingException"/>
        <import package="org.apache.commons.math3.exception.NumberIsTooSmallException"/>
        <import package="org.apache.commons.math3.ode.nonstiff.DormandPrince54Integrator"/>
        <import package="org.apache.commons.math3.ode.nonstiff.DormandPrince853Integrator"/>
        <import package="org.apache.commons.math3.ode.sampling.DummyStepInterpolator"/>
        <import package="org.apache.commons.math3.ode.sampling.StepInterpolator"/>
        <import package="org.apache.commons.math3.util.FastMath"/>
        <import package="org.junit.After"/>
        <import package="org.junit.Assert"/>
        <import package="org.junit.Before"/>
        <import package="org.junit.Test"/>
        <class name="ContinuousOutputModelTest" line="37">
            <method name="ContinuousOutputModelTest" type="constructor" line="39"/>
            <method name="testBoundaries" type="void" line="45">
                <declaration name="cm" type="ContinuousOutputModel" line="50"/>
            </method>
            <method name="testRandomAccess" type="void" line="57">
                <declaration name="cm" type="ContinuousOutputModel" line="59"/>
                <declaration name="random" type="Random" line="65"/>
                <declaration name="maxError" type="double" line="66"/>
                <scope line="67">
                    <declaration name="r" type="double" line="68"/>
                    <declaration name="time" type="double" line="69"/>
                    <declaration name="interpolatedY" type="double[]" line="71"/>
                    <declaration name="theoreticalY" type="double[]" line="72"/>
                    <declaration name="dx" type="double" line="73"/>
                    <declaration name="dy" type="double" line="74"/>
                    <declaration name="error" type="double" line="75"/>
                    <scope line="76"/>
                </scope>
            </method>
            <method name="testModelsMerging" type="void" line="86">
                <comment line="87">
                    theoretical solution: y[0] = cos(t), y[1] = sin(t)                    
                </comment>
                <comment line="87">
                    integrate backward from &amp;pi; to 0;                    
                </comment>
                <comment line="87">
                    integrate backward from 2&amp;pi; to &amp;pi;                    
                </comment>
                <comment line="87">
                    merge the two half circles                    
                </comment>
                <comment line="87">
                    check circle                    
                </comment>
                <anonymous_class line="90">
                    <method name="computeDerivatives" type="void" line="91">
                        <params>
                            <param name="t" type="double"/>
                            <param name="y" type="double[]"/>
                            <param name="dot" type="double[]"/>
                        </params>
                    </method>
                    <method name="getDimension" type="int" line="95"/>
                </anonymous_class>
                <declaration name="problem" type="FirstOrderDifferentialEquations" line="89"/>
                <declaration name="cm1" type="ContinuousOutputModel" line="101"/>
                <declaration name="integ1" type="FirstOrderIntegrator" line="102"/>
                <declaration name="cm2" type="ContinuousOutputModel" line="109"/>
                <declaration name="integ2" type="FirstOrderIntegrator" line="110"/>
                <declaration name="cm" type="ContinuousOutputModel" line="117"/>
                <scope line="126">
                    <declaration name="y" type="double[]" line="128"/>
                </scope>
            </method>
            <method name="testErrorConditions" type="void" line="136">
                <comment line="137">
                    dimension mismatch                    
                </comment>
                <comment line="137">
                    hole between time ranges                    
                </comment>
                <comment line="137">
                    propagation direction mismatch                    
                </comment>
                <comment line="137">
                    no errors                    
                </comment>
                <declaration name="cm" type="ContinuousOutputModel" line="138"/>
            </method>
            <method name="checkAppendError" type="boolean" line="157">
                <params>
                    <param name="cm" type="ContinuousOutputModel"/>
                    <param name="t0" type="double"/>
                    <param name="y0" type="double[]"/>
                    <param name="t1" type="double"/>
                </params>
                <comment line="158">
                    turn false; // no allowable error                    
                </comment>
                <scope line="158">
                    <declaration name="otherCm" type="ContinuousOutputModel" line="159"/>
                </scope>
                <scope line="162"/>
            </method>
            <method name="buildInterpolator" type="StepInterpolator" line="168">
                <params>
                    <param name="t0" type="double"/>
                    <param name="y0" type="double[]"/>
                    <param name="t1" type="double"/>
                </params>
                <declaration name="interpolator" type="DummyStepInterpolator" line="169"/>
            </method>
            <method name="checkValue" type="void" line="176">
                <params>
                    <param name="value" type="double"/>
                    <param name="reference" type="double"/>
                </params>
            </method>
            <method name="setUp" type="void" line="181">
                <declaration name="minStep" type="double" line="183"/>
                <declaration name="maxStep" type="double" line="184"/>
            </method>
            <method name="tearDown" type="void" line="189"/>
            <declaration name="pb" type="TestProblem3" line="194"/>
            <declaration name="integ" type="FirstOrderIntegrator" line="195"/>
        </class>
    </source>