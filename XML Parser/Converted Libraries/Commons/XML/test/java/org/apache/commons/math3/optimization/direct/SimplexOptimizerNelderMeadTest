<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.optimization.direct">
        <import package="org.apache.commons.math3.exception.TooManyEvaluationsException"/>
        <import package="org.apache.commons.math3.analysis.MultivariateFunction"/>
        <import package="org.apache.commons.math3.analysis.MultivariateVectorFunction"/>
        <import package="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
        <import package="org.apache.commons.math3.linear.RealMatrix"/>
        <import package="org.apache.commons.math3.optimization.GoalType"/>
        <import package="org.apache.commons.math3.optimization.LeastSquaresConverter"/>
        <import package="org.apache.commons.math3.optimization.PointValuePair"/>
        <import package="org.apache.commons.math3.util.FastMath"/>
        <import package="org.junit.Assert"/>
        <import package="org.junit.Test"/>
        <class name="SimplexOptimizerNelderMeadTest" line="33">
            <method name="testMinimize1" type="void" line="35">
                <declaration name="optimizer" type="SimplexOptimizer" line="36"/>
                <declaration name="fourExtrema" type="FourExtrema" line="38"/>
                <declaration name="optimum" type="PointValuePair" line="40"/>
            </method>
            <method name="testMinimize2" type="void" line="50">
                <declaration name="optimizer" type="SimplexOptimizer" line="51"/>
                <declaration name="fourExtrema" type="FourExtrema" line="53"/>
                <declaration name="optimum" type="PointValuePair" line="55"/>
            </method>
            <method name="testMaximize1" type="void" line="65">
                <declaration name="optimizer" type="SimplexOptimizer" line="66"/>
                <declaration name="fourExtrema" type="FourExtrema" line="68"/>
                <declaration name="optimum" type="PointValuePair" line="70"/>
            </method>
            <method name="testMaximize2" type="void" line="80">
                <declaration name="optimizer" type="SimplexOptimizer" line="81"/>
                <declaration name="fourExtrema" type="FourExtrema" line="83"/>
                <declaration name="optimum" type="PointValuePair" line="85"/>
            </method>
            <method name="testRosenbrock" type="void" line="95">
                <declaration name="rosenbrock" type="Rosenbrock" line="97"/>
                <declaration name="optimizer" type="SimplexOptimizer" line="98"/>
                <declaration name="optimum" type="PointValuePair" line="102"/>
            </method>
            <method name="testPowell" type="void" line="112">
                <declaration name="powell" type="Powell" line="114"/>
                <declaration name="optimizer" type="SimplexOptimizer" line="115"/>
                <declaration name="optimum" type="PointValuePair" line="117"/>
            </method>
            <method name="testLeastSquares1" type="void" line="126">
                <declaration name="factors" type="RealMatrix" line="128"/>
                <anonymous_class line="133">
                    <method name="value" type="double[]" line="134"/>
                </anonymous_class>
                <declaration name="ls" type="LeastSquaresConverter" line="133"/>
                <declaration name="optimizer" type="SimplexOptimizer" line="138"/>
                <declaration name="optimum" type="PointValuePair" line="140"/>
            </method>
            <method name="testLeastSquares2" type="void" line="150">
                <declaration name="factors" type="RealMatrix" line="152"/>
                <anonymous_class line="157">
                    <method name="value" type="double[]" line="158"/>
                </anonymous_class>
                <declaration name="ls" type="LeastSquaresConverter" line="157"/>
                <declaration name="optimizer" type="SimplexOptimizer" line="162"/>
                <declaration name="optimum" type="PointValuePair" line="164"/>
            </method>
            <method name="testLeastSquares3" type="void" line="174">
                <declaration name="factors" type="RealMatrix" line="176"/>
                <anonymous_class line="181">
                    <method name="value" type="double[]" line="182"/>
                </anonymous_class>
                <declaration name="ls" type="LeastSquaresConverter" line="181"/>
                <declaration name="optimizer" type="SimplexOptimizer" line="188"/>
                <declaration name="optimum" type="PointValuePair" line="190"/>
            </method>
            <method name="testMaxIterations" type="void" line="200">
                <declaration name="powell" type="Powell" line="201"/>
                <declaration name="optimizer" type="SimplexOptimizer" line="202"/>
            </method>
            <class name="FourExtrema" line="207">
                <comment line="208">
                    The following function has 4 local extrema.                    
                </comment>
                <comment line="208">
                    nal double valueXmYm = 0.2373295333134216789769; // Local maximum.                    
                </comment>
                <comment line="208">
                    nal double valueXmYp = -valueXmYm; // Local minimum.                    
                </comment>
                <comment line="208">
                    nal double valueXpYm = -0.7290400707055187115322; // Global minimum.                    
                </comment>
                <comment line="208">
                    nal double valueXpYp = -valueXpYm; // Global maximum.                    
                </comment>
                <implements interface="MultivariateFunction"/>
                <declaration name="xM" type="double" line="209"/>
                <declaration name="yM" type="double" line="210"/>
                <declaration name="xP" type="double" line="211"/>
                <declaration name="yP" type="double" line="212"/>
                <declaration name="valueXmYm" type="double" line="213"/>
                <declaration name="valueXmYp" type="double" line="214"/>
                <declaration name="valueXpYm" type="double" line="215"/>
                <declaration name="valueXpYp" type="double" line="216"/>
                <method name="value" type="double" line="218">
                    <declaration name="x" type="double" line="219"/>
                    <declaration name="y" type="double" line="220"/>
                </method>
            </class>
            <class name="Rosenbrock" line="226">
                <comment line="208">
                    The following function has 4 local extrema.                    
                </comment>
                <comment line="208">
                    nal double valueXmYm = 0.2373295333134216789769; // Local maximum.                    
                </comment>
                <comment line="208">
                    nal double valueXmYp = -valueXmYm; // Local minimum.                    
                </comment>
                <comment line="208">
                    nal double valueXpYm = -0.7290400707055187115322; // Global minimum.                    
                </comment>
                <comment line="208">
                    nal double valueXpYp = -valueXpYm; // Global maximum.                    
                </comment>
                <implements interface="MultivariateFunction"/>
                <declaration name="count" type="int" line="227"/>
                <method name="Rosenbrock" type="constructor" line="229"/>
                <method name="value" type="double" line="233">
                    <declaration name="a" type="double" line="235"/>
                    <declaration name="b" type="double" line="236"/>
                </method>
                <method name="getCount" type="int" line="240"/>
            </class>
            <class name="Powell" line="245">
                <comment line="208">
                    The following function has 4 local extrema.                    
                </comment>
                <comment line="208">
                    nal double valueXmYm = 0.2373295333134216789769; // Local maximum.                    
                </comment>
                <comment line="208">
                    nal double valueXmYp = -valueXmYm; // Local minimum.                    
                </comment>
                <comment line="208">
                    nal double valueXpYm = -0.7290400707055187115322; // Global minimum.                    
                </comment>
                <comment line="208">
                    nal double valueXpYp = -valueXpYm; // Global maximum.                    
                </comment>
                <implements interface="MultivariateFunction"/>
                <declaration name="count" type="int" line="246"/>
                <method name="Powell" type="constructor" line="248"/>
                <method name="value" type="double" line="252">
                    <declaration name="a" type="double" line="254"/>
                    <declaration name="b" type="double" line="255"/>
                    <declaration name="c" type="double" line="256"/>
                    <declaration name="d" type="double" line="257"/>
                </method>
                <method name="getCount" type="int" line="261"/>
            </class>
        </class>
    </source>