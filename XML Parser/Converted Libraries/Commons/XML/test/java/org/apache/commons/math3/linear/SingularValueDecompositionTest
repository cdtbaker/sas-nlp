<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.linear">
        <import package="java.io.BufferedReader"/>
        <import package="java.io.DataInputStream"/>
        <import package="java.io.IOException"/>
        <import package="java.io.InputStreamReader"/>
        <import package="java.util.Random"/>
        <import package="org.junit.Assert"/>
        <import package="org.junit.Test"/>
        <class name="SingularValueDecompositionTest" line="30">
            <declaration name="testSquare" type="double[][]" line="32"/>
            <declaration name="testNonSquare" type="double[][]" line="37"/>
            <declaration name="normTolerance" type="double" line="44"/>
            <method name="testMoreRows" type="void" line="47">
                <declaration name="singularValues" type="double[]" line="48"/>
                <declaration name="rows" type="int" line="49"/>
                <declaration name="columns" type="int" line="50"/>
                <declaration name="r" type="Random" line="51"/>
                <declaration name="svd" type="SingularValueDecomposition" line="52"/>
                <declaration name="computedSV" type="double[]" line="54"/>
                <scope line="56"/>
            </method>
            <method name="testMoreColumns" type="void" line="62">
                <declaration name="singularValues" type="double[]" line="63"/>
                <declaration name="rows" type="int" line="64"/>
                <declaration name="columns" type="int" line="65"/>
                <declaration name="r" type="Random" line="66"/>
                <declaration name="svd" type="SingularValueDecomposition" line="67"/>
                <declaration name="computedSV" type="double[]" line="69"/>
                <scope line="71"/>
            </method>
            <javadoc line="76">
                test dimensions                
            </javadoc>
            <method name="testDimensions" type="void" line="78">
                <declaration name="matrix" type="RealMatrix" line="79"/>
                <declaration name="m" type="int" line="80"/>
                <declaration name="n" type="int" line="81"/>
                <declaration name="svd" type="SingularValueDecomposition" line="82"/>
            </method>
            <javadoc line="92">
                Test based on a dimension 4 Hadamard matrix.                
            </javadoc>
            <method name="testHadamard" type="void" line="94">
                <declaration name="matrix" type="RealMatrix" line="95"/>
                <declaration name="svd" type="SingularValueDecomposition" line="101"/>
                <declaration name="fullCovariance" type="RealMatrix" line="107"/>
                <declaration name="halfCovariance" type="RealMatrix" line="117"/>
            </method>
            <javadoc line="129">
                test A = USVt                
            </javadoc>
            <method name="testAEqualUSVt" type="void" line="131"/>
            <method name="checkAEqualUSVt" type="void" line="137">
                <params>
                    <param name="matrix" type="RealMatrix"/>
                </params>
                <declaration name="svd" type="SingularValueDecomposition" line="138"/>
                <declaration name="u" type="RealMatrix" line="139"/>
                <declaration name="s" type="RealMatrix" line="140"/>
                <declaration name="v" type="RealMatrix" line="141"/>
                <declaration name="norm" type="double" line="142"/>
            </method>
            <javadoc line="147">
                test that U is orthogonal                
            </javadoc>
            <method name="testUOrthogonal" type="void" line="149"/>
            <javadoc line="155">
                test that V is orthogonal                
            </javadoc>
            <method name="testVOrthogonal" type="void" line="157"/>
            <method name="checkOrthogonal" type="void" line="163">
                <params>
                    <param name="m" type="RealMatrix"/>
                </params>
                <declaration name="mTm" type="RealMatrix" line="164"/>
                <declaration name="id" type="RealMatrix" line="165"/>
            </method>
            <javadoc line="169">
                test matrices values                
            </javadoc>
            <method name="testMatricesValues1" type="void" line="172">
                <comment line="173">
                    check values against known references                    
                </comment>
                <comment line="173">
                    check the same cached instance is returned the second time                    
                </comment>
                <declaration name="svd" type="SingularValueDecomposition" line="173"/>
                <declaration name="uRef" type="RealMatrix" line="175"/>
                <declaration name="sRef" type="RealMatrix" line="179"/>
                <declaration name="vRef" type="RealMatrix" line="183"/>
                <declaration name="u" type="RealMatrix" line="189"/>
                <declaration name="s" type="RealMatrix" line="191"/>
                <declaration name="v" type="RealMatrix" line="193"/>
            </method>
            <javadoc line="203">
                test matrices values                
            </javadoc>
            <method name="useless_testMatricesValues2" type="void" line="206">
                <comment line="207">
                    check values against known references                    
                </comment>
                <comment line="207">
                    check the same cached instance is returned the second time                    
                </comment>
                <declaration name="uRef" type="RealMatrix" line="208"/>
                <declaration name="sRef" type="RealMatrix" line="214"/>
                <declaration name="vRef" type="RealMatrix" line="219"/>
                <declaration name="svd" type="SingularValueDecomposition" line="226"/>
                <declaration name="u" type="RealMatrix" line="228"/>
                <declaration name="s" type="RealMatrix" line="230"/>
                <declaration name="v" type="RealMatrix" line="232"/>
            </method>
            <javadoc line="242">
                test MATH-465                
            </javadoc>
            <method name="testRank" type="void" line="244">
                <declaration name="d" type="double[][]" line="245"/>
                <declaration name="m" type="RealMatrix" line="246"/>
                <declaration name="svd" type="SingularValueDecomposition" line="247"/>
            </method>
            <javadoc line="251">
                test MATH-583                
            </javadoc>
            <method name="testStability1" type="void" line="253">
                <declaration name="m" type="RealMatrix" line="254"/>
                <scope line="256"/>
                <scope line="258"/>
            </method>
            <javadoc line="263">
                test MATH-327                
            </javadoc>
            <method name="testStability2" type="void" line="265">
                <declaration name="m" type="RealMatrix" line="266"/>
                <scope line="268"/>
                <scope line="270"/>
            </method>
            <method name="loadRealMatrix" type="void" line="275">
                <params>
                    <param name="m" type="RealMatrix"/>
                    <param name="resourceName" type="String"/>
                </params>
                <scope line="276">
                    <declaration name="in" type="DataInputStream" line="277"/>
                    <declaration name="br" type="BufferedReader" line="278"/>
                    <declaration name="strLine" type="String" line="279"/>
                    <declaration name="row" type="int" line="280"/>
                    <scope line="281">
                        <scope line="282">
                            <declaration name="col" type="int" line="283"/>
                            <scope line="284"/>
                        </scope>
                    </scope>
                </scope>
                <scope line="291"/>
            </method>
            <javadoc line="294">
                test condition number                
            </javadoc>
            <method name="testConditionNumber" type="void" line="296">
                <comment line="297">
                    replace 1.0e-15 with 1.5e-15                    
                </comment>
                <declaration name="svd" type="SingularValueDecomposition" line="297"/>
            </method>
            <method name="testInverseConditionNumber" type="void" line="304">
                <declaration name="svd" type="SingularValueDecomposition" line="305"/>
            </method>
            <method name="createTestMatrix" type="RealMatrix" line="311">
                <params>
                    <param name="r" type="Random"/>
                    <param name="rows" type="int"/>
                    <param name="columns" type="int"/>
                    <param name="singularValues" type="double[]"/>
                </params>
                <declaration name="u" type="RealMatrix" line="312"/>
                <declaration name="d" type="RealMatrix" line="313"/>
                <declaration name="v" type="RealMatrix" line="315"/>
            </method>
            <method name="testIssue947" type="void" line="320">
                <declaration name="nans" type="double[][]" line="321"/>
                <declaration name="m" type="RealMatrix" line="325"/>
                <declaration name="svd" type="SingularValueDecomposition" line="326"/>
            </method>
        </class>
    </source>