<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3">
        <import package="org.apache.commons.math3.random.RandomGenerator"/>
        <import package="org.apache.commons.math3.random.Well1024a"/>
        <import package="org.apache.commons.math3.util.FastMath"/>
        <import package="org.apache.commons.math3.util.MathArrays"/>
        <import package="org.junit.Assert"/>
        <import package="org.junit.Test"/>
        <class name="ExtendedFieldElementAbstractTest" line="26">
            <type_params>
                <type_param name="T"/>
            </type_params>
            <comment line="27">
                TODO: add this test in 4.0, as it is not possible to do it in 3.2                
            </comment>
            <comment line="27">
                due to incompatibility of the return type in the Dfp class                
            </comment>
            <comment line="27">
                @Test                
            </comment>
            <comment line="27">
                public void testLog10() {                
            </comment>
            <comment line="27">
                for (double x = -0.9; x &lt; 0.9; x += 0.05) {                
            </comment>
            <comment line="27">
                checkRelative(FastMath.log10(x), build(x).log10());                
            </comment>
            <comment line="27">
                }                
            </comment>
            <comment line="27">
                }                
            </comment>
            <method name="build" type="T" line="28"/>
            <method name="testAddField" type="void" line="31">
                <scope line="32">
                    <scope line="33"/>
                </scope>
            </method>
            <method name="testAddDouble" type="void" line="40">
                <scope line="41">
                    <scope line="42"/>
                </scope>
            </method>
            <method name="testSubtractField" type="void" line="49">
                <scope line="50">
                    <scope line="51"/>
                </scope>
            </method>
            <method name="testSubtractDouble" type="void" line="58">
                <scope line="59">
                    <scope line="60"/>
                </scope>
            </method>
            <method name="testMultiplyField" type="void" line="67">
                <scope line="68">
                    <scope line="69"/>
                </scope>
            </method>
            <method name="testMultiplyDouble" type="void" line="76">
                <scope line="77">
                    <scope line="78"/>
                </scope>
            </method>
            <method name="testMultiplyInt" type="void" line="85">
                <scope line="86">
                    <scope line="87"/>
                </scope>
            </method>
            <method name="testDivideField" type="void" line="94">
                <scope line="95">
                    <scope line="96"/>
                </scope>
            </method>
            <method name="testDivideDouble" type="void" line="103">
                <scope line="104">
                    <scope line="105"/>
                </scope>
            </method>
            <method name="testRemainderField" type="void" line="112">
                <scope line="113">
                    <scope line="114"/>
                </scope>
            </method>
            <method name="testRemainderDouble" type="void" line="121">
                <scope line="122">
                    <scope line="123"/>
                </scope>
            </method>
            <method name="testCos" type="void" line="130">
                <scope line="131"/>
            </method>
            <method name="testAcos" type="void" line="137">
                <scope line="138"/>
            </method>
            <method name="testSin" type="void" line="144">
                <scope line="145"/>
            </method>
            <method name="testAsin" type="void" line="151">
                <scope line="152"/>
            </method>
            <method name="testTan" type="void" line="158">
                <scope line="159"/>
            </method>
            <method name="testAtan" type="void" line="165">
                <scope line="166"/>
            </method>
            <method name="testAtan2" type="void" line="172">
                <scope line="173">
                    <scope line="174"/>
                </scope>
            </method>
            <method name="testCosh" type="void" line="181">
                <scope line="182"/>
            </method>
            <method name="testAcosh" type="void" line="188">
                <scope line="189"/>
            </method>
            <method name="testSinh" type="void" line="195">
                <scope line="196"/>
            </method>
            <method name="testAsinh" type="void" line="202">
                <scope line="203"/>
            </method>
            <method name="testTanh" type="void" line="209">
                <scope line="210"/>
            </method>
            <method name="testAtanh" type="void" line="216">
                <scope line="217"/>
            </method>
            <method name="testSqrt" type="void" line="223">
                <scope line="224"/>
            </method>
            <method name="testCbrt" type="void" line="230">
                <scope line="231"/>
            </method>
            <method name="testHypot" type="void" line="237">
                <scope line="238">
                    <scope line="239"/>
                </scope>
            </method>
            <method name="testRootN" type="void" line="246">
                <scope line="247">
                    <scope line="248">
                        <scope line="249">
                            <scope line="250"/>
                        </scope>
                        <scope line="253"/>
                    </scope>
                </scope>
            </method>
            <method name="testPowField" type="void" line="261">
                <scope line="262">
                    <scope line="263"/>
                </scope>
            </method>
            <method name="testPowDouble" type="void" line="270">
                <scope line="271">
                    <scope line="272"/>
                </scope>
            </method>
            <method name="testPowInt" type="void" line="279">
                <scope line="280">
                    <scope line="281"/>
                </scope>
            </method>
            <method name="testExp" type="void" line="288">
                <scope line="289"/>
            </method>
            <method name="testExpm1" type="void" line="295">
                <scope line="296"/>
            </method>
            <method name="testLog" type="void" line="302">
                <scope line="303"/>
            </method>
            <method name="testLog1p" type="void" line="309">
                <scope line="310"/>
            </method>
            <method name="testAbs" type="void" line="325">
                <scope line="326"/>
            </method>
            <method name="testCeil" type="void" line="332">
                <scope line="333"/>
            </method>
            <method name="testFloor" type="void" line="339">
                <scope line="340"/>
            </method>
            <method name="testRint" type="void" line="346">
                <scope line="347"/>
            </method>
            <method name="testRound" type="void" line="353">
                <scope line="354"/>
            </method>
            <method name="testSignum" type="void" line="360">
                <scope line="361"/>
            </method>
            <method name="testCopySignField" type="void" line="367">
                <scope line="368">
                    <scope line="369"/>
                </scope>
            </method>
            <method name="testCopySignDouble" type="void" line="376">
                <scope line="377">
                    <scope line="378"/>
                </scope>
            </method>
            <method name="testScalb" type="void" line="385">
                <scope line="386">
                    <scope line="387"/>
                </scope>
            </method>
            <method name="testLinearCombinationFaFa" type="void" line="394">
                <declaration name="r" type="RandomGenerator" line="395"/>
                <scope line="396">
                    <declaration name="aD" type="double[]" line="397"/>
                    <declaration name="bD" type="double[]" line="398"/>
                    <declaration name="aF" type="T[]" line="399"/>
                    <declaration name="bF" type="T[]" line="400"/>
                </scope>
            </method>
            <method name="testLinearCombinationDaFa" type="void" line="407">
                <declaration name="r" type="RandomGenerator" line="408"/>
                <scope line="409">
                    <declaration name="aD" type="double[]" line="410"/>
                    <declaration name="bD" type="double[]" line="411"/>
                    <declaration name="bF" type="T[]" line="412"/>
                </scope>
            </method>
            <method name="testLinearCombinationFF2" type="void" line="419">
                <declaration name="r" type="RandomGenerator" line="420"/>
                <scope line="421">
                    <declaration name="aD" type="double[]" line="422"/>
                    <declaration name="bD" type="double[]" line="423"/>
                    <declaration name="aF" type="T[]" line="424"/>
                    <declaration name="bF" type="T[]" line="425"/>
                </scope>
            </method>
            <method name="testLinearCombinationDF2" type="void" line="432">
                <declaration name="r" type="RandomGenerator" line="433"/>
                <scope line="434">
                    <declaration name="aD" type="double[]" line="435"/>
                    <declaration name="bD" type="double[]" line="436"/>
                    <declaration name="bF" type="T[]" line="437"/>
                </scope>
            </method>
            <method name="testLinearCombinationFF3" type="void" line="444">
                <declaration name="r" type="RandomGenerator" line="445"/>
                <scope line="446">
                    <declaration name="aD" type="double[]" line="447"/>
                    <declaration name="bD" type="double[]" line="448"/>
                    <declaration name="aF" type="T[]" line="449"/>
                    <declaration name="bF" type="T[]" line="450"/>
                </scope>
            </method>
            <method name="testLinearCombinationDF3" type="void" line="457">
                <declaration name="r" type="RandomGenerator" line="458"/>
                <scope line="459">
                    <declaration name="aD" type="double[]" line="460"/>
                    <declaration name="bD" type="double[]" line="461"/>
                    <declaration name="bF" type="T[]" line="462"/>
                </scope>
            </method>
            <method name="testLinearCombinationFF4" type="void" line="469">
                <declaration name="r" type="RandomGenerator" line="470"/>
                <scope line="471">
                    <declaration name="aD" type="double[]" line="472"/>
                    <declaration name="bD" type="double[]" line="473"/>
                    <declaration name="aF" type="T[]" line="474"/>
                    <declaration name="bF" type="T[]" line="475"/>
                </scope>
            </method>
            <method name="testLinearCombinationDF4" type="void" line="482">
                <declaration name="r" type="RandomGenerator" line="483"/>
                <scope line="484">
                    <declaration name="aD" type="double[]" line="485"/>
                    <declaration name="bD" type="double[]" line="486"/>
                    <declaration name="bF" type="T[]" line="487"/>
                </scope>
            </method>
            <method name="testGetField" type="void" line="494"/>
            <method name="checkRelative" type="void" line="499">
                <params>
                    <param name="expected" type="double"/>
                    <param name="obtained" type="T"/>
                </params>
            </method>
            <method name="testEquals" type="void" line="504">
                <declaration name="t1a" type="T" line="505"/>
                <declaration name="t1b" type="T" line="506"/>
                <declaration name="t2" type="T" line="507"/>
            </method>
            <method name="testHash" type="void" line="515">
                <declaration name="t1a" type="T" line="516"/>
                <declaration name="t1b" type="T" line="517"/>
                <declaration name="t2" type="T" line="518"/>
            </method>
            <method name="generateDouble" type="double[]" line="523">
                <params>
                    <param name="r" type="RandomGenerator"/>
                    <param name="n" type="int"/>
                </params>
                <declaration name="a" type="double[]" line="524"/>
                <scope line="525"/>
            </method>
            <method name="toFieldArray" type="T[]" line="531">
                <params>
                    <param name="a" type="double[]"/>
                </params>
                <declaration name="f" type="T[]" line="532"/>
                <scope line="533"/>
            </method>
        </class>
    </source>