<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.ode">
        <import package="org.apache.commons.math3.ode.events.EventHandler"/>
        <import package="org.apache.commons.math3.util.FastMath"/>
        <class name="TestProblem4" line="23">
            <extends class="TestProblemAbstract"/>
            <javadoc line="23">
                This class is used in the junit tests for the ODE integrators.
                  &lt;p&gt;This specific problem is the following differential equation :
                  &lt;pre&gt;
                  x&apos;&apos; = -x
                  &lt;/pre&gt;
                  And when x decreases down to 0, the state should be changed as follows :
                  &lt;pre&gt;
                  x&apos; -&gt; -x&apos;
                  &lt;/pre&gt;
                  The theoretical solution of this problem is x = |sin(t+a)|
                  &lt;/p&gt;                
            </javadoc>
            <declaration name="a" type="double" line="41"/>
            <javadoc line="41">
                Time offset.                
            </javadoc>
            <declaration name="y" type="double[]" line="44"/>
            <javadoc line="44">
                theoretical state                
            </javadoc>
            <javadoc line="47">
                Simple constructor.                
            </javadoc>
            <method name="TestProblem4" type="constructor" line="48">
                <declaration name="y0" type="double[]" line="51"/>
                <declaration name="errorScale" type="double[]" line="54"/>
            </method>
            <javadoc line="59">
                Copy constructor.                
                <@param>
                    m problem problem to copy                    
                </@param>
            </javadoc>
            <method name="TestProblem4" type="constructor" line="63">
                <params>
                    <param name="problem" type="TestProblem4"/>
                </params>
            </method>
            <javadoc line="69">
                {@inheritDoc}                
            </javadoc>
            <method name="copy" type="TestProblem4" line="71"/>
            <method name="getEventsHandlers" type="EventHandler[]" line="76"/>
            <javadoc line="80">
                Get the theoretical events times.                
                <@return>
                    n theoretical events times                    
                </@return>
            </javadoc>
            <method name="getTheoreticalEventsTimes" type="double[]" line="85"/>
            <method name="doComputeDerivatives" type="void" line="96">
                <params>
                    <param name="t" type="double"/>
                    <param name="y" type="double[]"/>
                    <param name="yDot" type="double[]"/>
                </params>
            </method>
            <method name="computeTheoreticalState" type="double[]" line="102">
                <params>
                    <param name="t" type="double"/>
                </params>
                <declaration name="sin" type="double" line="103"/>
                <declaration name="cos" type="double" line="104"/>
            </method>
            <class name="Bounce" line="110">
                <implements interface="EventHandler"/>
                <declaration name="sign" type="int" line="112"/>
                <method name="Bounce" type="constructor" line="114"/>
                <method name="init" type="void" line="118">
                    <params>
                        <param name="t0" type="double"/>
                        <param name="y0" type="double[]"/>
                        <param name="t" type="double"/>
                    </params>
                </method>
                <method name="g" type="double" line="121">
                    <params>
                        <param name="t" type="double"/>
                        <param name="y" type="double[]"/>
                    </params>
                </method>
                <method name="eventOccurred" type="Action" line="125">
                    <params>
                        <param name="t" type="double"/>
                        <param name="y" type="double[]"/>
                        <param name="increasing" type="boolean"/>
                    </params>
                    <comment line="126">
                        this sign change is needed because the state will be reset soon                        
                    </comment>
                </method>
                <method name="resetState" type="void" line="131">
                    <params>
                        <param name="t" type="double"/>
                        <param name="y" type="double[]"/>
                    </params>
                </method>
            </class>
            <class name="Stop" line="138">
                <implements interface="EventHandler"/>
                <method name="Stop" type="constructor" line="140"/>
                <method name="init" type="void" line="143">
                    <params>
                        <param name="t0" type="double"/>
                        <param name="y0" type="double[]"/>
                        <param name="t" type="double"/>
                    </params>
                </method>
                <method name="g" type="double" line="146">
                    <params>
                        <param name="t" type="double"/>
                        <param name="y" type="double[]"/>
                    </params>
                </method>
                <method name="eventOccurred" type="Action" line="150">
                    <params>
                        <param name="t" type="double"/>
                        <param name="y" type="double[]"/>
                        <param name="increasing" type="boolean"/>
                    </params>
                </method>
                <method name="resetState" type="void" line="154">
                    <params>
                        <param name="t" type="double"/>
                        <param name="y" type="double[]"/>
                    </params>
                </method>
            </class>
        </class>
    </source>