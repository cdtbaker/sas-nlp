<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.optimization.general">
        <import package="org.apache.commons.math3.analysis.MultivariateVectorFunction"/>
        <import package="org.apache.commons.math3.analysis.differentiation.GradientFunction"/>
        <import package="org.apache.commons.math3.analysis.differentiation.MultivariateDifferentiableFunction"/>
        <import package="org.apache.commons.math3.optimization.ConvergenceChecker"/>
        <import package="org.apache.commons.math3.optimization.GoalType"/>
        <import package="org.apache.commons.math3.optimization.OptimizationData"/>
        <import package="org.apache.commons.math3.optimization.InitialGuess"/>
        <import package="org.apache.commons.math3.optimization.PointValuePair"/>
        <import package="org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer"/>
        <class name="AbstractDifferentiableOptimizer" extends="BaseAbstractMultivariateOptimizer<MultivariateDifferentiableFunction>" line="30">
            <javadoc line="30">
                Base class for implementing optimizers for multivariate scalar
                 * differentiable functions.
                 * It contains boiler-plate code for dealing with gradient evaluation.                
                <@version>
                    n $Id: AbstractDifferentiableOptimizer.java 1422230 2012-12-15 12:11:13Z erans $                    
                </@version>
                <@deprecated>
                    d As of 3.1 (to be removed in 4.0).                    
                </@deprecated>
                <@since>
                    e 3.1                    
                </@since>
            </javadoc>
            <declaration name="gradient" type="MultivariateVectorFunction" line="42"/>
            <javadoc line="42">
                Objective function gradient.                
            </javadoc>
            <javadoc line="47">
                @param checker Convergence checker.                
            </javadoc>
            <method name="AbstractDifferentiableOptimizer" type="constructor" line="50"/>
            <javadoc line="54">
                Compute the gradient vector.                
                <@param>
                    m evaluationPoint Point at which the gradient must be evaluated.                    
                </@param>
                <@return>
                    n the gradient at the specified point.                    
                </@return>
            </javadoc>
            <method name="computeObjectiveGradient" type="double[]" line="60"/>
            <javadoc line="64">
                {@inheritDoc}                
                <@deprecated>
                    d In 3.1. Please use{@link #optimizeInternal(int,MultivariateDifferentiableFunction,GoalType,OptimizationData[])}instead.                    
                </@deprecated>
            </javadoc>
            <method name="optimizeInternal" type="PointValuePair" line="75"/>
            <javadoc line="79">
                {@inheritDoc}                
            </javadoc>
            <method name="optimizeInternal" type="PointValuePair" line="84">
                <comment line="85">
                    Store optimization problem characteristics.                    
                </comment>
                <comment line="85">
                    Perform optimization.                    
                </comment>
            </method>
        </class>
    </source>