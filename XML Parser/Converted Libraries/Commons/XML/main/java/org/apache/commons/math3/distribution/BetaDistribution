<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.distribution">
        <import package="org.apache.commons.math3.exception.NumberIsTooSmallException"/>
        <import package="org.apache.commons.math3.exception.util.LocalizedFormats"/>
        <import package="org.apache.commons.math3.special.Gamma"/>
        <import package="org.apache.commons.math3.special.Beta"/>
        <import package="org.apache.commons.math3.util.FastMath"/>
        <import package="org.apache.commons.math3.random.RandomGenerator"/>
        <import package="org.apache.commons.math3.random.Well19937c"/>
        <class name="BetaDistribution" line="27">
            <extends class="AbstractRealDistribution"/>
            <javadoc line="27">
                Implements the Beta distribution.                
                <@see>
                    e <a href="http://en.wikipedia.org/wiki/Beta_distribution">Beta distribution</a>                    
                </@see>
                <@version>
                    n $Id: BetaDistribution.java 1416643 2012-12-03 19:37:14Z tn $                    
                </@version>
                <@since>
                    e 2.0 (changed to concrete class in 3.0)                    
                </@since>
            </javadoc>
            <declaration name="DEFAULT_INVERSE_ABSOLUTE_ACCURACY" type="double" line="35"/>
            <javadoc line="35">
                Default inverse cumulative probability accuracy.                
                <@since>
                    e 2.1                    
                </@since>
            </javadoc>
            <declaration name="serialVersionUID" type="long" line="40"/>
            <javadoc line="40">
                Serializable version identifier.                
            </javadoc>
            <declaration name="alpha" type="double" line="42"/>
            <javadoc line="42">
                First shape parameter.                
            </javadoc>
            <declaration name="beta" type="double" line="44"/>
            <javadoc line="44">
                Second shape parameter.                
            </javadoc>
            <declaration name="z" type="double" line="46"/>
            <javadoc line="46">
                Normalizing factor used in density computations.
                  updated whenever alpha or beta are changed.                
            </javadoc>
            <declaration name="solverAbsoluteAccuracy" type="double" line="50"/>
            <javadoc line="50">
                Inverse cumulative probability accuracy.                
            </javadoc>
            <javadoc line="53">
                Build a new instance.                
                <@param>
                    m alpha First shape parameter (must be positive).                    
                </@param>
                <@param>
                    m beta Second shape parameter (must be positive).                    
                </@param>
            </javadoc>
            <method name="BetaDistribution" type="constructor" line="59">
                <params>
                    <param name="alpha" type="double"/>
                    <param name="beta" type="double"/>
                </params>
            </method>
            <javadoc line="63">
                Build a new instance.                
                <@param>
                    m alpha First shape parameter (must be positive).                    
                </@param>
                <@param>
                    m beta Second shape parameter (must be positive).                    
                </@param>
                <@param>
                    m inverseCumAccuracy Maximum absolute error in inverse
                      cumulative probability estimates (defaults to{@link #DEFAULT_INVERSE_ABSOLUTE_ACCURACY}).                    
                </@param>
                <@since>
                    e 2.1                    
                </@since>
            </javadoc>
            <method name="BetaDistribution" type="constructor" line="73">
                <params>
                    <param name="alpha" type="double"/>
                    <param name="beta" type="double"/>
                    <param name="inverseCumAccuracy" type="double"/>
                </params>
            </method>
            <javadoc line="77">
                Creates a &amp;beta; distribution.                
                <@param>
                    m rng Random number generator.                    
                </@param>
                <@param>
                    m alpha First shape parameter (must be positive).                    
                </@param>
                <@param>
                    m beta Second shape parameter (must be positive).                    
                </@param>
                <@param>
                    m inverseCumAccuracy Maximum absolute error in inverse
                      cumulative probability estimates (defaults to{@link #DEFAULT_INVERSE_ABSOLUTE_ACCURACY}).                    
                </@param>
                <@since>
                    e 3.1                    
                </@since>
            </javadoc>
            <method name="BetaDistribution" type="constructor" line="91">
                <params>
                    <param name="rng" type="RandomGenerator"/>
                    <param name="alpha" type="double"/>
                    <param name="beta" type="double"/>
                    <param name="inverseCumAccuracy" type="double"/>
                </params>
            </method>
            <javadoc line="100">
                Access the first shape parameter, {@code alpha}.                
                <@return>
                    n the first shape parameter.                    
                </@return>
            </javadoc>
            <method name="getAlpha" type="double" line="105"/>
            <javadoc line="109">
                Access the second shape parameter, {@code beta}.                
                <@return>
                    n the second shape parameter.                    
                </@return>
            </javadoc>
            <method name="getBeta" type="double" line="114"/>
            <javadoc line="118">
                Recompute the normalization factor.                
            </javadoc>
            <method name="recomputeZ" type="void" line="119">
                <scope line="120"/>
            </method>
            <javadoc line="125">
                {@inheritDoc}                
            </javadoc>
            <method name="density" type="double" line="126">
                <params>
                    <param name="x" type="double"/>
                </params>
                <scope line="128"/>
                <scope line="130">
                    <scope line="131"/>
                </scope>
                <scope line="135">
                    <scope line="136"/>
                </scope>
                <scope line="140">
                    <declaration name="logX" type="double" line="141"/>
                    <declaration name="log1mX" type="double" line="142"/>
                </scope>
            </method>
            <javadoc line="147">
                {@inheritDoc}                
            </javadoc>
            <method name="cumulativeProbability" type="double" line="148">
                <params>
                    <param name="x" type="double"/>
                </params>
                <scope line="149"/>
                <scope line="151"/>
                <scope line="153"/>
            </method>
            <javadoc line="158">
                Return the absolute accuracy setting of the solver used to estimate
                  inverse cumulative probabilities.                
                <@return>
                    n the solver absolute accuracy.                    
                </@return>
                <@since>
                    e 2.1                    
                </@since>
            </javadoc>
            <method name="getSolverAbsoluteAccuracy" type="double" line="166"/>
            <javadoc line="170">
                {@inheritDoc}For first shape parameter {@code alpha} and second shape parameter{@code beta}, the mean is {@code alpha / (alpha + beta)}.                
            </javadoc>
            <method name="getNumericalMean" type="double" line="176">
                <declaration name="a" type="double" line="177"/>
            </method>
            <javadoc line="181">
                {@inheritDoc}For first shape parameter {@code alpha} and second shape parameter{@code beta}, the variance is{@code (alpha  beta) / [(alpha + beta)^2  (alpha + beta + 1)]}.                
            </javadoc>
            <method name="getNumericalVariance" type="double" line="188">
                <declaration name="a" type="double" line="189"/>
                <declaration name="b" type="double" line="190"/>
                <declaration name="alphabetasum" type="double" line="191"/>
            </method>
            <javadoc line="195">
                {@inheritDoc}The lower bound of the support is always 0 no matter the parameters.                
                <@return>
                    n lower bound of the support (always 0)                    
                </@return>
            </javadoc>
            <method name="getSupportLowerBound" type="double" line="202"/>
            <javadoc line="206">
                {@inheritDoc}The upper bound of the support is always 1 no matter the parameters.                
                <@return>
                    n upper bound of the support (always 1)                    
                </@return>
            </javadoc>
            <method name="getSupportUpperBound" type="double" line="213"/>
            <javadoc line="217">
                {@inheritDoc}                
            </javadoc>
            <method name="isSupportLowerBoundInclusive" type="boolean" line="218"/>
            <javadoc line="222">
                {@inheritDoc}                
            </javadoc>
            <method name="isSupportUpperBoundInclusive" type="boolean" line="223"/>
            <javadoc line="227">
                {@inheritDoc}The support of this distribution is connected.                
                <@return>
                    n {@code true}                    
                </@return>
            </javadoc>
            <method name="isSupportConnected" type="boolean" line="234"/>
        </class>
    </source>