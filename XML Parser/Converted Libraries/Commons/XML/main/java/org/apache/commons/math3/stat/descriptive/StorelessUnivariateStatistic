<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.stat.descriptive">
        <import package="org.apache.commons.math3.exception.MathIllegalArgumentException"/>
        <interface name="StorelessUnivariateStatistic">
            <implements interface="UnivariateStatistic"/>
            <javadoc line="21">
                Extends the definition of {@link UnivariateStatistic} with{@link #increment} and {@link #incrementAll(double[])} methods for adding
                 * values and updating internal state.
                 * &lt;p&gt;
                 * This interface is designed to be used for calculating statistics that can be
                 * computed in one pass through the data without storing the full array of
                 * sample values.&lt;/p&gt;                
                <@version>
                    n $Id: StorelessUnivariateStatistic.java 1416643 2012-12-03 19:37:14Z tn $                    
                </@version>
            </javadoc>
            <method name="increment" type="void" line="34"/>
            <javadoc line="34">
                Updates the internal state of the statistic to reflect the addition of the new value.                
                <@param>
                    m d  the new value.                    
                </@param>
            </javadoc>
            <method name="incrementAll" type="void" line="40"/>
            <javadoc line="40">
                Updates the internal state of the statistic to reflect addition of
                 * all values in the values array.  Does not clear the statistic first --
                 * i.e., the values are added &lt;strong&gt;incrementally&lt;/strong&gt; to the dataset.                
                <@param>
                    m values  array holding the new values to add                    
                </@param>
                <@throws>
                    s MathIllegalArgumentException if the array is null                    
                </@throws>
            </javadoc>
            <method name="incrementAll" type="void" line="50"/>
            <javadoc line="50">
                Updates the internal state of the statistic to reflect addition of
                 * the values in the designated portion of the values array.  Does not
                 * clear the statistic first -- i.e., the values are added
                 * &lt;strong&gt;incrementally&lt;/strong&gt; to the dataset.                
                <@param>
                    m values  array holding the new values to add                    
                </@param>
                <@param>
                    m start  the array index of the first value to add                    
                </@param>
                <@param>
                    m length  the number of elements to add                    
                </@param>
                <@throws>
                    s MathIllegalArgumentException if the array is null or the index                    
                </@throws>
            </javadoc>
            <method name="getResult" type="double" line="63"/>
            <javadoc line="63">
                Returns the current value of the Statistic.                
                <@return>
                    n value of the statistic, <code>Double.NaN</code> if it
                     * has been cleared or just instantiated.                    
                </@return>
            </javadoc>
            <method name="getN" type="long" line="70"/>
            <javadoc line="70">
                Returns the number of values that have been added.                
                <@return>
                    n the number of values.                    
                </@return>
            </javadoc>
            <method name="clear" type="void" line="76"/>
            <javadoc line="76">
                Clears the internal state of the Statistic                
            </javadoc>
            <method name="copy" type="StorelessUnivariateStatistic" line="81"/>
            <javadoc line="81">
                Returns a copy of the statistic with the same internal state.                
                <@return>
                    n a copy of the statistic                    
                </@return>
            </javadoc>
        </interface>
    </source>