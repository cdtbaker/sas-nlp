<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.filter">
        <import package="org.apache.commons.math3.linear.RealMatrix"/>
        <import package="org.apache.commons.math3.linear.RealVector"/>
        <interface name="ProcessModel">
            <javadoc line="22">
                Defines the process dynamics model for the use with a {@link KalmanFilter}.                
                <@since>
                    e 3.0                    
                </@since>
                <@version>
                    n $Id: ProcessModel.java 1416643 2012-12-03 19:37:14Z tn $                    
                </@version>
            </javadoc>
            <method name="getStateTransitionMatrix" type="RealMatrix" line="29"/>
            <javadoc line="29">
                Returns the state transition matrix.                
                <@return>
                    n the state transition matrix                    
                </@return>
            </javadoc>
            <method name="getControlMatrix" type="RealMatrix" line="36"/>
            <javadoc line="36">
                Returns the control matrix.                
                <@return>
                    n the control matrix                    
                </@return>
            </javadoc>
            <method name="getProcessNoise" type="RealMatrix" line="43"/>
            <javadoc line="43">
                Returns the process noise matrix. This method is called by the {@link KalmanFilter} every
                 * prediction step, so implementations of this interface may return a modified process noise
                 * depending on the current iteration step.                
                <@return>
                    n the process noise matrix                    
                </@return>
                <@see>
                    e KalmanFilter#predict()                    
                </@see>
                <@see>
                    e KalmanFilter#predict(double[])                    
                </@see>
                <@see>
                    e KalmanFilter#predict(RealVector)                    
                </@see>
            </javadoc>
            <method name="getInitialStateEstimate" type="RealVector" line="55"/>
            <javadoc line="55">
                Returns the initial state estimation vector.
                 * &lt;p&gt;
                 * &lt;b&gt;Note:&lt;/b&gt; if the return value is zero, the Kalman filter will initialize the
                 * state estimation with a zero vector.                
                <@return>
                    n the initial state estimation vector                    
                </@return>
            </javadoc>
            <method name="getInitialErrorCovariance" type="RealMatrix" line="65"/>
            <javadoc line="65">
                Returns the initial error covariance matrix.
                 * &lt;p&gt;
                 * &lt;b&gt;Note:&lt;/b&gt; if the return value is zero, the Kalman filter will initialize the
                 * error covariance with the process noise matrix.                
                <@return>
                    n the initial error covariance matrix                    
                </@return>
            </javadoc>
        </interface>
    </source>