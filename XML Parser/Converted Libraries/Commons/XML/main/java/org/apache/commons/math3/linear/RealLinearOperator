<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.linear">
        <import package="org.apache.commons.math3.exception.DimensionMismatchException"/>
        <class name="RealLinearOperator" line="22">
            <javadoc line="22">
                This class defines a linear operator operating on real ({@code double})
                 * vector spaces. No direct access to the coefficients of the underlying matrix
                 * is provided.
                 * The motivation for such an interface is well stated by
                 * &lt;a href=&quot;#BARR1994&quot;&gt;Barrett et al. (1994)&lt;/a&gt;:
                 * &lt;blockquote&gt;
                 * We restrict ourselves to iterative methods, which work by repeatedly
                 * improving an approximate solution until it is accurate enough. These
                 * methods access the coefficient matrix A of the linear system only via the
                 * matrix-vector product y = A &amp;middot; x
                 * (and perhaps z = A&lt;sup&gt;T&lt;/sup&gt; &amp;middot; x). Thus the user need only
                 * supply a subroutine for computing y (and perhaps z) given x, which permits
                 * full exploitation of the sparsity or other special structure of A.
                 * &lt;/blockquote&gt;
                 * &lt;br/&gt;
                 * &lt;dl&gt;
                 * &lt;dt&gt;&lt;a name=&quot;BARR1994&quot;&gt;Barret et al. (1994)&lt;/a&gt;&lt;/dt&gt;
                 * &lt;dd&gt;
                 * R. Barrett, M. Berry, T. F. Chan, J. Demmel, J. M. Donato, J. Dongarra,
                 * V. Eijkhout, R. Pozo, C. Romine and H. Van der Vorst,
                 * &lt;em&gt;Templates for the Solution of Linear Systems: Building Blocks for
                 * Iterative Methods&lt;/em&gt;, SIAM
                 * &lt;/dd&gt;
                 * &lt;/dl&gt;                
                <@version>
                    n $Id: RealLinearOperator.java 1416643 2012-12-03 19:37:14Z tn $                    
                </@version>
                <@since>
                    e 3.0                    
                </@since>
            </javadoc>
            <method name="getRowDimension" type="int" line="54"/>
            <javadoc line="54">
                Returns the dimension of the codomain of this operator.                
                <@return>
                    n the number of rows of the underlying matrix                    
                </@return>
            </javadoc>
            <method name="getColumnDimension" type="int" line="61"/>
            <javadoc line="61">
                Returns the dimension of the domain of this operator.                
                <@return>
                    n the number of columns of the underlying matrix                    
                </@return>
            </javadoc>
            <method name="operate" type="RealVector" line="68"/>
            <javadoc line="68">
                Returns the result of multiplying {@code this} by the vector {@code x}.                
                <@param>
                    m x the vector to operate on                    
                </@param>
                <@return>
                    n the product of {@code this} instance with {@code x}                    
                </@return>
                <@throws>
                    s DimensionMismatchException if the column dimension does not match
                     * the size of {@code x}                    
                </@throws>
            </javadoc>
            <javadoc line="79">
                Returns the result of multiplying the transpose of {@code this} operator
                 * by the vector {@code x} (optional operation). The default implementation
                 * throws an {@link UnsupportedOperationException}. Users overriding this
                 * method must also override {@link #isTransposable()}.                
                <@param>
                    m x the vector to operate on                    
                </@param>
                <@return>
                    n the product of the transpose of {@code this} instance with{@code x}                    
                </@return>
                <@throws>
                    s org.apache.commons.math3.exception.DimensionMismatchExceptionif the row dimension does not match the size of {@code x}                    
                </@throws>
                <@throws>
                    s UnsupportedOperationException if this operation is not supported
                     * by {@code this} operator                    
                </@throws>
            </javadoc>
            <method name="operateTranspose" type="RealVector" line="94"/>
            <javadoc line="98">
                Returns {@code true} if this operator supports{@link #operateTranspose(RealVector)}. If {@code true} is returned,{@link #operateTranspose(RealVector)} should not throw{@code UnsupportedOperationException}. The default implementation returns{@code false}.                
                <@return>
                    n {@code false}                    
                </@return>
            </javadoc>
            <method name="isTransposable" type="boolean" line="107"/>
        </class>
    </source>