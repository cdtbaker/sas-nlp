<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.filter">
        <import package="org.apache.commons.math3.exception.DimensionMismatchException"/>
        <import package="org.apache.commons.math3.exception.NoDataException"/>
        <import package="org.apache.commons.math3.exception.NullArgumentException"/>
        <import package="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
        <import package="org.apache.commons.math3.linear.ArrayRealVector"/>
        <import package="org.apache.commons.math3.linear.RealMatrix"/>
        <import package="org.apache.commons.math3.linear.RealVector"/>
        <class name="DefaultProcessModel" line="27">
            <implements interface="ProcessModel"/>
            <javadoc line="27">
                Default implementation of a {@link ProcessModel} for the use with a {@link KalmanFilter}.                
                <@since>
                    e 3.0                    
                </@since>
                <@version>
                    n $Id: DefaultProcessModel.java 1416643 2012-12-03 19:37:14Z tn $                    
                </@version>
            </javadoc>
            <declaration name="stateTransitionMatrix" type="RealMatrix" line="34"/>
            <javadoc line="34">
                The state transition matrix, used to advance the internal state estimation each time-step.                
            </javadoc>
            <declaration name="controlMatrix" type="RealMatrix" line="39"/>
            <javadoc line="39">
                The control matrix, used to integrate a control input into the state estimation.                
            </javadoc>
            <declaration name="processNoiseCovMatrix" type="RealMatrix" line="44"/>
            <javadoc line="44">
                The process noise covariance matrix.                
            </javadoc>
            <declaration name="initialStateEstimateVector" type="RealVector" line="47"/>
            <javadoc line="47">
                The initial state estimation of the observed process.                
            </javadoc>
            <declaration name="initialErrorCovMatrix" type="RealMatrix" line="50"/>
            <javadoc line="50">
                The initial error covariance matrix of the observed process.                
            </javadoc>
            <javadoc line="53">
                Create a new {@link ProcessModel}, taking double arrays as input parameters.                
                <@param>
                    m stateTransitionthe state transition matrix                    
                </@param>
                <@param>
                    m controlthe control matrix                    
                </@param>
                <@param>
                    m processNoisethe process noise matrix                    
                </@param>
                <@param>
                    m initialStateEstimatethe initial state estimate vector                    
                </@param>
                <@param>
                    m initialErrorCovariancethe initial error covariance matrix                    
                </@param>
                <@throws>
                    s NullArgumentExceptionif any of the input arrays is {@code null}                    
                </@throws>
                <@throws>
                    s NoDataExceptionif any row / column dimension of the input matrices is zero                    
                </@throws>
                <@throws>
                    s DimensionMismatchExceptionif any of the input matrices is non-rectangular                    
                </@throws>
            </javadoc>
            <method name="DefaultProcessModel" type="constructor" line="78">
                <params>
                    <param name="stateTransition" type="double[][]"/>
                    <param name="control" type="double[][]"/>
                    <param name="processNoise" type="double[][]"/>
                    <param name="initialStateEstimate" type="double[]"/>
                    <param name="initialErrorCovariance" type="double[][]"/>
                </params>
            </method>
            <javadoc line="87">
                Create a new {@link ProcessModel}, taking double arrays as input parameters.
                  &lt;p&gt;
                  The initial state estimate and error covariance are omitted and will be initialized by the{@link KalmanFilter} to default values.                
                <@param>
                    m stateTransitionthe state transition matrix                    
                </@param>
                <@param>
                    m controlthe control matrix                    
                </@param>
                <@param>
                    m processNoisethe process noise matrix                    
                </@param>
                <@throws>
                    s NullArgumentExceptionif any of the input arrays is {@code null}                    
                </@throws>
                <@throws>
                    s NoDataExceptionif any row / column dimension of the input matrices is zero                    
                </@throws>
                <@throws>
                    s DimensionMismatchExceptionif any of the input matrices is non-rectangular                    
                </@throws>
            </javadoc>
            <method name="DefaultProcessModel" type="constructor" line="109">
                <params>
                    <param name="stateTransition" type="double[][]"/>
                    <param name="control" type="double[][]"/>
                    <param name="processNoise" type="double[][]"/>
                </params>
            </method>
            <javadoc line="116">
                Create a new {@link ProcessModel}, taking double arrays as input parameters.                
                <@param>
                    m stateTransitionthe state transition matrix                    
                </@param>
                <@param>
                    m controlthe control matrix                    
                </@param>
                <@param>
                    m processNoisethe process noise matrix                    
                </@param>
                <@param>
                    m initialStateEstimatethe initial state estimate vector                    
                </@param>
                <@param>
                    m initialErrorCovariancethe initial error covariance matrix                    
                </@param>
            </javadoc>
            <method name="DefaultProcessModel" type="constructor" line="134">
                <params>
                    <param name="stateTransition" type="RealMatrix"/>
                    <param name="control" type="RealMatrix"/>
                    <param name="processNoise" type="RealMatrix"/>
                    <param name="initialStateEstimate" type="RealVector"/>
                    <param name="initialErrorCovariance" type="RealMatrix"/>
                </params>
            </method>
            <javadoc line="142">
                {@inheritDoc}                
            </javadoc>
            <method name="getStateTransitionMatrix" type="RealMatrix" line="143"/>
            <javadoc line="147">
                {@inheritDoc}                
            </javadoc>
            <method name="getControlMatrix" type="RealMatrix" line="148"/>
            <javadoc line="152">
                {@inheritDoc}                
            </javadoc>
            <method name="getProcessNoise" type="RealMatrix" line="153"/>
            <javadoc line="157">
                {@inheritDoc}                
            </javadoc>
            <method name="getInitialStateEstimate" type="RealVector" line="158"/>
            <javadoc line="162">
                {@inheritDoc}                
            </javadoc>
            <method name="getInitialErrorCovariance" type="RealMatrix" line="163"/>
        </class>
    </source>