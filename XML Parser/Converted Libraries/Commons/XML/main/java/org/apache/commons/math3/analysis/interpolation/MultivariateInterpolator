<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.analysis.interpolation">
        <import package="org.apache.commons.math3.analysis.MultivariateFunction"/>
        <import package="org.apache.commons.math3.exception.DimensionMismatchException"/>
        <import package="org.apache.commons.math3.exception.MathIllegalArgumentException"/>
        <import package="org.apache.commons.math3.exception.NoDataException"/>
        <import package="org.apache.commons.math3.exception.NullArgumentException"/>
        <interface name="MultivariateInterpolator">
            <javadoc line="25">
                Interface representing a univariate real interpolating function.                
                <@since>
                    e 2.1                    
                </@since>
                <@version>
                    n $Id: MultivariateInterpolator.java 1455194 2013-03-11 15:45:54Z luc $                    
                </@version>
            </javadoc>
            <method name="interpolate" type="MultivariateFunction" line="33"/>
            <javadoc line="33">
                Computes an interpolating function for the data set.                
                <@param>
                    m xval the arguments for the interpolation points.{@code xval[i][0]} is the first component of interpolation point{@code i}, {@code xval[i][1]} is the second component, and so on
                      until {@code xval[i][d-1]}, the last component of that interpolation
                      point (where {@code d} is thus the dimension of the space).                    
                </@param>
                <@param>
                    m yval the values for the interpolation points                    
                </@param>
                <@return>
                    n a function which interpolates the data set                    
                </@return>
                <@throws>
                    s MathIllegalArgumentException if the arguments violate assumptions
                      made by the interpolation algorithm.                    
                </@throws>
                <@throws>
                    s DimensionMismatchException when the array dimensions are not consistent.                    
                </@throws>
                <@throws>
                    s NoDataException if an array has zero-length.                    
                </@throws>
                <@throws>
                    s NullArgumentException if the arguments are {@code null}.                    
                </@throws>
            </javadoc>
        </interface>
    </source>