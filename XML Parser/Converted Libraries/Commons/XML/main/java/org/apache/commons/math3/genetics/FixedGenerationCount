<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.genetics">
        <import package="org.apache.commons.math3.exception.NumberIsTooSmallException"/>
        <class name="FixedGenerationCount" line="21">
            <implements interface="StoppingCondition"/>
            <javadoc line="21">
                Stops after a fixed number of generations. Each time {@link #isSatisfied(Population)} is invoked, a generation
                  counter is incremented. Once the counter reaches the configured &lt;code&gt;maxGenerations&lt;/code&gt; value,{@link #isSatisfied(Population)} returns true.                
                <@version>
                    n $Id: FixedGenerationCount.java 1416643 2012-12-03 19:37:14Z tn $                    
                </@version>
                <@since>
                    e 2.0                    
                </@since>
            </javadoc>
            <declaration name="numGenerations" type="int" line="30"/>
            <javadoc line="30">
                Number of generations that have passed                
            </javadoc>
            <declaration name="maxGenerations" type="int" line="33"/>
            <javadoc line="33">
                Maximum number of generations (stopping criteria)                
            </javadoc>
            <javadoc line="36">
                Create a new FixedGenerationCount instance.                
                <@param>
                    m maxGenerations number of generations to evolve                    
                </@param>
                <@throws>
                    s NumberIsTooSmallException if the number of generations is &lt; 1                    
                </@throws>
            </javadoc>
            <method name="FixedGenerationCount" type="constructor" line="42">
                <params>
                    <param name="maxGenerations" type="int"/>
                </params>
                <scope line="43"/>
            </method>
            <javadoc line="49">
                Determine whether or not the given number of generations have passed. Increments the number of generations
                  counter if the maximum has not been reached.                
                <@param>
                    m population ignored (no impact on result)                    
                </@param>
                <@return>
                    n <code>true</code> IFF the maximum number of generations has been exceeded                    
                </@return>
            </javadoc>
            <method name="isSatisfied" type="boolean" line="56">
                <params>
                    <param name="population" type="Population"/>
                </params>
                <scope line="57"/>
            </method>
            <javadoc line="64">
                Returns the number of generations that have already passed.                
                <@return>
                    n the number of generations that have passed                    
                </@return>
            </javadoc>
            <method name="getNumGenerations" type="int" line="68"/>
        </class>
    </source>