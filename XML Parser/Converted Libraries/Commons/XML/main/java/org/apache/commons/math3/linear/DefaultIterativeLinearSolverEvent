<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.linear">
        <import package="org.apache.commons.math3.exception.MathUnsupportedOperationException"/>
        <class name="DefaultIterativeLinearSolverEvent" extends="IterativeLinearSolverEvent" line="21">
            <javadoc line="21">
                A default concrete implementation of the abstract class{@link IterativeLinearSolverEvent}.                
                <@version>
                    n $Id: DefaultIterativeLinearSolverEvent.java 1416643 2012-12-03 19:37:14Z tn $                    
                </@version>
            </javadoc>
            <declaration name="serialVersionUID" type="long" line="29"/>
            <javadoc line="29">
                                
            </javadoc>
            <declaration name="b" type="RealVector" line="32"/>
            <javadoc line="32">
                The right-hand side vector.                
            </javadoc>
            <declaration name="r" type="RealVector" line="35"/>
            <javadoc line="35">
                The current estimate of the residual.                
            </javadoc>
            <declaration name="rnorm" type="double" line="38"/>
            <javadoc line="38">
                The current estimate of the norm of the residual.                
            </javadoc>
            <declaration name="x" type="RealVector" line="41"/>
            <javadoc line="41">
                The current estimate of the solution.                
            </javadoc>
            <javadoc line="44">
                Creates a new instance of this class. This implementation does
                 * &lt;em&gt;not&lt;/em&gt; deep copy the specified vectors {@code x}, {@code b},{@code r}. Therefore the user must make sure that these vectors are
                 * either unmodifiable views or deep copies of the same vectors actually
                 * used by the {@code source}. Failure to do so may compromise subsequent
                 * iterations of the {@code source}. If the residual vector {@code r} is{@code null}, then {@link #getResidual()} throws a{@link MathUnsupportedOperationException}, and{@link #providesResidual()} returns {@code false}.                
                <@param>
                    m source the iterative solver which fired this event                    
                </@param>
                <@param>
                    m iterations the number of iterations performed at the time{@code this} event is created                    
                </@param>
                <@param>
                    m x the current estimate of the solution                    
                </@param>
                <@param>
                    m b the right-hand side vector                    
                </@param>
                <@param>
                    m r the current estimate of the residual (can be {@code null})                    
                </@param>
                <@param>
                    m rnorm the norm of the current estimate of the residual                    
                </@param>
            </javadoc>
            <method name="DefaultIterativeLinearSolverEvent" type="constructor" line="65"/>
            <javadoc line="73">
                Creates a new instance of this class. This implementation does
                 * &lt;em&gt;not&lt;/em&gt; deep copy the specified vectors {@code x}, {@code b}.
                 * Therefore the user must make sure that these vectors are either
                 * unmodifiable views or deep copies of the same vectors actually used by
                 * the {@code source}. Failure to do so may compromise subsequent iterations
                 * of the {@code source}. Callling {@link #getResidual()} on instances
                 * returned by this constructor throws a{@link MathUnsupportedOperationException}, while{@link #providesResidual()} returns {@code false}.                
                <@param>
                    m source the iterative solver which fired this event                    
                </@param>
                <@param>
                    m iterations the number of iterations performed at the time{@code this} event is created                    
                </@param>
                <@param>
                    m x the current estimate of the solution                    
                </@param>
                <@param>
                    m b the right-hand side vector                    
                </@param>
                <@param>
                    m rnorm the norm of the current estimate of the residual                    
                </@param>
            </javadoc>
            <method name="DefaultIterativeLinearSolverEvent" type="constructor" line="92"/>
            <javadoc line="100">
                {@inheritDoc}                
            </javadoc>
            <method name="getNormOfResidual" type="double" line="102"/>
            <javadoc line="106">
                {@inheritDoc}This implementation throws an {@link MathUnsupportedOperationException}if no residual vector {@code r} was provided at construction time.                
            </javadoc>
            <method name="getResidual" type="RealVector" line="113">
                <scope line="114"/>
            </method>
            <javadoc line="120">
                {@inheritDoc}                
            </javadoc>
            <method name="getRightHandSideVector" type="RealVector" line="122"/>
            <javadoc line="126">
                {@inheritDoc}                
            </javadoc>
            <method name="getSolution" type="RealVector" line="128"/>
            <javadoc line="132">
                {@inheritDoc}This implementation returns {@code true} if a non-{@code null} value was
                 * specified for the residual vector {@code r} at construction time.                
                <@return>
                    n {@code true} if {@code r != null}                    
                </@return>
            </javadoc>
            <method name="providesResidual" type="boolean" line="141"/>
        </class>
    </source>