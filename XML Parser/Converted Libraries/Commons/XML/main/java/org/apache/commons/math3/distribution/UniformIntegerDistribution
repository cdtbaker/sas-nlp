<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.distribution">
        <import package="org.apache.commons.math3.exception.NumberIsTooLargeException"/>
        <import package="org.apache.commons.math3.exception.util.LocalizedFormats"/>
        <import package="org.apache.commons.math3.random.RandomGenerator"/>
        <import package="org.apache.commons.math3.random.Well19937c"/>
        <import package="org.apache.commons.math3.util.FastMath"/>
        <class name="UniformIntegerDistribution" line="26">
            <extends class="AbstractIntegerDistribution"/>
            <javadoc line="26">
                Implementation of the uniform integer distribution.                
                <@see>
                    e <a href="http://en.wikipedia.org/wiki/Uniform_distribution_(discrete)"
                      >Uniform distribution (discrete), at Wikipedia</a>                    
                </@see>
                <@version>
                    n $Id: UniformIntegerDistribution.java 1416643 2012-12-03 19:37:14Z tn $                    
                </@version>
                <@since>
                    e 3.0                    
                </@since>
            </javadoc>
            <declaration name="serialVersionUID" type="long" line="36"/>
            <javadoc line="36">
                Serializable version identifier.                
            </javadoc>
            <declaration name="lower" type="int" line="38"/>
            <javadoc line="38">
                Lower bound (inclusive) of this distribution.                
            </javadoc>
            <declaration name="upper" type="int" line="40"/>
            <javadoc line="40">
                Upper bound (inclusive) of this distribution.                
            </javadoc>
            <javadoc line="43">
                Creates a new uniform integer distribution using the given lower and
                  upper bounds (both inclusive).                
                <@param>
                    m lower Lower bound (inclusive) of this distribution.                    
                </@param>
                <@param>
                    m upper Upper bound (inclusive) of this distribution.                    
                </@param>
                <@throws>
                    s NumberIsTooLargeException if {@code lower >= upper}.                    
                </@throws>
            </javadoc>
            <method name="UniformIntegerDistribution" type="constructor" line="52">
                <params>
                    <param name="lower" type="int"/>
                    <param name="upper" type="int"/>
                </params>
            </method>
            <javadoc line="56">
                Creates a new uniform integer distribution using the given lower and
                  upper bounds (both inclusive).                
                <@param>
                    m rng Random number generator.                    
                </@param>
                <@param>
                    m lower Lower bound (inclusive) of this distribution.                    
                </@param>
                <@param>
                    m upper Upper bound (inclusive) of this distribution.                    
                </@param>
                <@throws>
                    s NumberIsTooLargeException if {@code lower >= upper}.                    
                </@throws>
                <@since>
                    e 3.1                    
                </@since>
            </javadoc>
            <method name="UniformIntegerDistribution" type="constructor" line="69">
                <params>
                    <param name="rng" type="RandomGenerator"/>
                    <param name="lower" type="int"/>
                    <param name="upper" type="int"/>
                </params>
                <scope line="72"/>
            </method>
            <javadoc line="81">
                {@inheritDoc}                
            </javadoc>
            <method name="probability" type="double" line="82">
                <params>
                    <param name="x" type="int"/>
                </params>
                <scope line="83"/>
            </method>
            <javadoc line="89">
                {@inheritDoc}                
            </javadoc>
            <method name="cumulativeProbability" type="double" line="90">
                <params>
                    <param name="x" type="int"/>
                </params>
                <scope line="91"/>
                <scope line="94"/>
            </method>
            <javadoc line="100">
                {@inheritDoc}For lower bound {@code lower} and upper bound {@code upper}, the mean is{@code 0.5  (lower + upper)}.                
            </javadoc>
            <method name="getNumericalMean" type="double" line="106"/>
            <javadoc line="110">
                {@inheritDoc}For lower bound {@code lower} and upper bound {@code upper}, and{@code n = upper - lower + 1}, the variance is {@code (n^2 - 1) / 12}.                
            </javadoc>
            <method name="getNumericalVariance" type="double" line="116">
                <declaration name="n" type="double" line="117"/>
            </method>
            <javadoc line="121">
                {@inheritDoc}The lower bound of the support is equal to the lower bound parameter
                  of the distribution.                
                <@return>
                    n lower bound of the support                    
                </@return>
            </javadoc>
            <method name="getSupportLowerBound" type="int" line="129"/>
            <javadoc line="133">
                {@inheritDoc}The upper bound of the support is equal to the upper bound parameter
                  of the distribution.                
                <@return>
                    n upper bound of the support                    
                </@return>
            </javadoc>
            <method name="getSupportUpperBound" type="int" line="141"/>
            <javadoc line="145">
                {@inheritDoc}The support of this distribution is connected.                
                <@return>
                    n {@code true}                    
                </@return>
            </javadoc>
            <method name="isSupportConnected" type="boolean" line="152"/>
            <javadoc line="156">
                {@inheritDoc}                
            </javadoc>
            <method name="sample" type="int" line="158">
                <declaration name="r" type="double" line="159"/>
                <declaration name="scaled" type="double" line="160"/>
            </method>
        </class>
    </source>