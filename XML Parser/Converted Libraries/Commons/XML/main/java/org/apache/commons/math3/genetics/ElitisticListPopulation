<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.genetics">
        <import package="java.util.Collections"/>
        <import package="java.util.List"/>
        <import package="org.apache.commons.math3.exception.NotPositiveException"/>
        <import package="org.apache.commons.math3.exception.NullArgumentException"/>
        <import package="org.apache.commons.math3.exception.NumberIsTooLargeException"/>
        <import package="org.apache.commons.math3.exception.OutOfRangeException"/>
        <import package="org.apache.commons.math3.exception.util.LocalizedFormats"/>
        <import package="org.apache.commons.math3.util.FastMath"/>
        <class name="ElitisticListPopulation" extends="ListPopulation" line="29">
            <javadoc line="29">
                Population of chromosomes which uses elitism (certain percentage of the best
                 * chromosomes is directly copied to the next generation).                
                <@version>
                    n $Id: ElitisticListPopulation.java 1416643 2012-12-03 19:37:14Z tn $                    
                </@version>
                <@since>
                    e 2.0                    
                </@since>
            </javadoc>
            <declaration name="elitismRate" type="double" line="38"/>
            <javadoc line="38">
                percentage of chromosomes copied to the next generation                
            </javadoc>
            <javadoc line="41">
                Creates a new {@link ElitisticListPopulation} instance.                
                <@param>
                    m chromosomes list of chromosomes in the population                    
                </@param>
                <@param>
                    m populationLimit maximal size of the population                    
                </@param>
                <@param>
                    m elitismRate how many best chromosomes will be directly transferred to the next generation [in %]                    
                </@param>
                <@throws>
                    s NullArgumentException if the list of chromosomes is {@code null}                    
                </@throws>
                <@throws>
                    s NotPositiveException if the population limit is not a positive number (&lt; 1)                    
                </@throws>
                <@throws>
                    s NumberIsTooLargeException if the list of chromosomes exceeds the population limit                    
                </@throws>
                <@throws>
                    s OutOfRangeException if the elitism rate is outside the [0, 1] range                    
                </@throws>
            </javadoc>
            <method name="ElitisticListPopulation" type="constructor" line="54"/>
            <javadoc line="61">
                Creates a new {@link ElitisticListPopulation} instance and initializes its inner chromosome list.                
                <@param>
                    m populationLimit maximal size of the population                    
                </@param>
                <@param>
                    m elitismRate how many best chromosomes will be directly transferred to the next generation [in %]                    
                </@param>
                <@throws>
                    s NotPositiveException if the population limit is not a positive number (&lt; 1)                    
                </@throws>
                <@throws>
                    s OutOfRangeException if the elitism rate is outside the [0, 1] range                    
                </@throws>
            </javadoc>
            <method name="ElitisticListPopulation" type="constructor" line="70"/>
            <javadoc line="77">
                Start the population for the next generation. The &lt;code&gt;{@link #elitismRate}&lt;/code&gt;
                 * percents of the best chromosomes are directly copied to the next generation.                
                <@return>
                    n the beginnings of the next generation.                    
                </@return>
            </javadoc>
            <method name="nextGeneration" type="Population" line="83">
                <comment line="84">
                    initialize a new generation with the same parameters                    
                </comment>
                <comment line="84">
                    index of the last &quot;not good enough&quot; chromosome                    
                </comment>
                <declaration name="nextGeneration" type="ElitisticListPopulation" line="85"/>
                <declaration name="oldChromosomes" type="List&lt;Chromosome&gt;" line="88"/>
                <declaration name="boundIndex" type="int" line="92"/>
                <scope line="93"/>
            </method>
            <javadoc line="99">
                Sets the elitism rate, i.e. how many best chromosomes will be directly transferred to the next generation [in %].                
                <@param>
                    m elitismRate how many best chromosomes will be directly transferred to the next generation [in %]                    
                </@param>
                <@throws>
                    s OutOfRangeException if the elitism rate is outside the [0, 1] range                    
                </@throws>
            </javadoc>
            <method name="setElitismRate" type="void" line="105">
                <scope line="106"/>
            </method>
            <javadoc line="112">
                Access the elitism rate.                
                <@return>
                    n the elitism rate                    
                </@return>
            </javadoc>
            <method name="getElitismRate" type="double" line="116"/>
        </class>
    </source>