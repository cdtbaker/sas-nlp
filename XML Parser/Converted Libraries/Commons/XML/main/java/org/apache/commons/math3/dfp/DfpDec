<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.dfp">
        <class name="DfpDec" line="20">
            <extends class="Dfp"/>
            <javadoc line="20">
                Subclass of {@link Dfp} which hides the radix-10000 artifacts of the superclass.
                  This should give outward appearances of being a decimal number with DIGITS4-3
                  decimal digits. This class can be subclassed to appear to be an arbitrary number
                  of decimal digits less than DIGITS4-3.                
                <@version>
                    n $Id: DfpDec.java 1449529 2013-02-24 19:13:17Z luc $                    
                </@version>
                <@since>
                    e 2.2                    
                </@since>
            </javadoc>
            <javadoc line="29">
                Makes an instance with a value of zero.                
                <@param>
                    m factory factory linked to this instance                    
                </@param>
            </javadoc>
            <method name="DfpDec" type="constructor" line="32">
                <params>
                    <param name="factory" type="DfpField"/>
                </params>
            </method>
            <javadoc line="36">
                Create an instance from a byte value.                
                <@param>
                    m factory factory linked to this instance                    
                </@param>
                <@param>
                    m x value to convert to an instance                    
                </@param>
            </javadoc>
            <method name="DfpDec" type="constructor" line="40">
                <params>
                    <param name="factory" type="DfpField"/>
                    <param name="x" type="byte"/>
                </params>
            </method>
            <javadoc line="44">
                Create an instance from an int value.                
                <@param>
                    m factory factory linked to this instance                    
                </@param>
                <@param>
                    m x value to convert to an instance                    
                </@param>
            </javadoc>
            <method name="DfpDec" type="constructor" line="48">
                <params>
                    <param name="factory" type="DfpField"/>
                    <param name="x" type="int"/>
                </params>
            </method>
            <javadoc line="52">
                Create an instance from a long value.                
                <@param>
                    m factory factory linked to this instance                    
                </@param>
                <@param>
                    m x value to convert to an instance                    
                </@param>
            </javadoc>
            <method name="DfpDec" type="constructor" line="56">
                <params>
                    <param name="factory" type="DfpField"/>
                    <param name="x" type="long"/>
                </params>
            </method>
            <javadoc line="60">
                Create an instance from a double value.                
                <@param>
                    m factory factory linked to this instance                    
                </@param>
                <@param>
                    m x value to convert to an instance                    
                </@param>
            </javadoc>
            <method name="DfpDec" type="constructor" line="64">
                <params>
                    <param name="factory" type="DfpField"/>
                    <param name="x" type="double"/>
                </params>
            </method>
            <javadoc line="69">
                Copy constructor.                
                <@param>
                    m d instance to copy                    
                </@param>
            </javadoc>
            <method name="DfpDec" type="constructor" line="72">
                <params>
                    <param name="d" type="Dfp"/>
                </params>
            </method>
            <javadoc line="77">
                Create an instance from a String representation.                
                <@param>
                    m factory factory linked to this instance                    
                </@param>
                <@param>
                    m s string representation of the instance                    
                </@param>
            </javadoc>
            <method name="DfpDec" type="constructor" line="81">
                <params>
                    <param name="factory" type="DfpField"/>
                    <param name="s" type="String"/>
                </params>
            </method>
            <javadoc line="86">
                Creates an instance with a non-finite value.                
                <@param>
                    m factory factory linked to this instance                    
                </@param>
                <@param>
                    m sign sign of the Dfp to create                    
                </@param>
                <@param>
                    m nans code of the value, must be one of {@link #INFINITE},{@link #SNAN},  {@link #QNAN}                    
                </@param>
            </javadoc>
            <method name="DfpDec" type="constructor" line="92">
                <params>
                    <param name="factory" type="DfpField"/>
                    <param name="sign" type="byte"/>
                    <param name="nans" type="byte"/>
                </params>
            </method>
            <javadoc line="96">
                {@inheritDoc}                
            </javadoc>
            <method name="newInstance" type="Dfp" line="98"/>
            <javadoc line="102">
                {@inheritDoc}                
            </javadoc>
            <method name="newInstance" type="Dfp" line="104">
                <params>
                    <param name="x" type="byte"/>
                </params>
            </method>
            <javadoc line="108">
                {@inheritDoc}                
            </javadoc>
            <method name="newInstance" type="Dfp" line="110">
                <params>
                    <param name="x" type="int"/>
                </params>
            </method>
            <javadoc line="114">
                {@inheritDoc}                
            </javadoc>
            <method name="newInstance" type="Dfp" line="116">
                <params>
                    <param name="x" type="long"/>
                </params>
            </method>
            <javadoc line="120">
                {@inheritDoc}                
            </javadoc>
            <method name="newInstance" type="Dfp" line="122">
                <params>
                    <param name="x" type="double"/>
                </params>
            </method>
            <javadoc line="126">
                {@inheritDoc}                
            </javadoc>
            <method name="newInstance" type="Dfp" line="128">
                <params>
                    <param name="d" type="Dfp"/>
                </params>
                <comment line="129">
                    make sure we don&apos;t mix number with different precision                    
                </comment>
                <scope line="131">
                    <declaration name="result" type="Dfp" line="133"/>
                </scope>
            </method>
            <javadoc line="142">
                {@inheritDoc}                
            </javadoc>
            <method name="newInstance" type="Dfp" line="144">
                <params>
                    <param name="s" type="String"/>
                </params>
            </method>
            <javadoc line="148">
                {@inheritDoc}                
            </javadoc>
            <method name="newInstance" type="Dfp" line="150">
                <params>
                    <param name="sign" type="byte"/>
                    <param name="nans" type="byte"/>
                </params>
            </method>
            <javadoc line="154">
                Get the number of decimal digits this class is going to represent.
                  Default implementation returns {@link #getRadixDigits()}4-3. Subclasses can
                  override this to return something less.                
                <@return>
                    n number of decimal digits this class is going to represent                    
                </@return>
            </javadoc>
            <method name="getDecimalDigits" type="int" line="159"/>
            <javadoc line="163">
                {@inheritDoc}                
            </javadoc>
            <method name="round" type="int" line="165">
                <params>
                    <param name="in" type="int"/>
                </params>
                <comment line="166">
                    t discarded = in;  // not looking at this after this point                    
                </comment>
                <comment line="166">
                    Check for exceptional cases and raise signals if necessary                    
                </comment>
                <declaration name="msb" type="int" line="167"/>
                <scope line="168"/>
                <declaration name="cmaxdigits" type="int" line="173"/>
                <declaration name="lsbthreshold" type="int" line="174"/>
                <scope line="175"/>
                <declaration name="digits" type="int" line="181"/>
                <declaration name="lsbshift" type="int" line="182"/>
                <declaration name="lsd" type="int" line="183"/>
                <scope line="186"/>
                <declaration name="lsb" type="int" line="190"/>
                <scope line="192"/>
                <declaration name="discarded" type="int" line="196"/>
                <declaration name="n" type="int" line="197"/>
                <scope line="198"/>
                <scope line="203"/>
                <scope line="208"/>
                <declaration name="inc" type="boolean" line="215"/>
                <scope line="255">
                    <declaration name="rh" type="int" line="257"/>
                    <scope line="258">
                        <declaration name="r" type="int" line="259"/>
                    </scope>
                    <scope line="264"/>
                </scope>
                <scope line="271"/>
                <scope line="277"/>
                <scope line="283"/>
            </method>
            <javadoc line="291">
                {@inheritDoc}                
            </javadoc>
            <method name="nextAfter" type="Dfp" line="293">
                <params>
                    <param name="x" type="Dfp"/>
                </params>
                <comment line="294">
                    make sure we don&apos;t mix number with different precision                    
                </comment>
                <comment line="294">
                    if this is greater than x                    
                </comment>
                <declaration name="trapName" type="String" line="295"/>
                <scope line="298">
                    <declaration name="result" type="Dfp" line="300"/>
                </scope>
                <declaration name="up" type="boolean" line="305"/>
                <declaration name="result" type="Dfp" line="306"/>
                <declaration name="inc" type="Dfp" line="307"/>
                <scope line="310"/>
                <scope line="314"/>
                <scope line="318"/>
                <scope line="322">
                    <scope line="326"/>
                    <scope line="330"/>
                    <scope line="332"/>
                </scope>
                <scope line="335">
                    <scope line="339"/>
                    <scope line="341"/>
                    <scope line="345"/>
                    <scope line="349"/>
                    <scope line="351"/>
                </scope>
                <scope line="356"/>
                <scope line="361"/>
            </method>
        </class>
    </source>