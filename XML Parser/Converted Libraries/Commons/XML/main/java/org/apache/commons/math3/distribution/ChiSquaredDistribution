<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.distribution">
        <import package="org.apache.commons.math3.random.RandomGenerator"/>
        <import package="org.apache.commons.math3.random.Well19937c"/>
        <class name="ChiSquaredDistribution" line="22">
            <extends class="AbstractRealDistribution"/>
            <javadoc line="22">
                Implementation of the chi-squared distribution.                
                <@see>
                    e <a href="http://en.wikipedia.org/wiki/Chi-squared_distribution">Chi-squared distribution (Wikipedia)</a>                    
                </@see>
                <@see>
                    e <a href="http://mathworld.wolfram.com/Chi-SquaredDistribution.html">Chi-squared Distribution (MathWorld)</a>                    
                </@see>
                <@version>
                    n $Id: ChiSquaredDistribution.java 1416643 2012-12-03 19:37:14Z tn $                    
                </@version>
            </javadoc>
            <declaration name="DEFAULT_INVERSE_ABSOLUTE_ACCURACY" type="double" line="30"/>
            <javadoc line="30">
                Default inverse cumulative probability accuracy                
                <@since>
                    e 2.1                    
                </@since>
            </javadoc>
            <declaration name="serialVersionUID" type="long" line="35"/>
            <javadoc line="35">
                Serializable version identifier                
            </javadoc>
            <declaration name="gamma" type="GammaDistribution" line="37"/>
            <javadoc line="37">
                Internal Gamma distribution.                
            </javadoc>
            <declaration name="solverAbsoluteAccuracy" type="double" line="39"/>
            <javadoc line="39">
                Inverse cumulative probability accuracy                
            </javadoc>
            <javadoc line="42">
                Create a Chi-Squared distribution with the given degrees of freedom.                
                <@param>
                    m degreesOfFreedom Degrees of freedom.                    
                </@param>
            </javadoc>
            <method name="ChiSquaredDistribution" type="constructor" line="47">
                <params>
                    <param name="degreesOfFreedom" type="double"/>
                </params>
            </method>
            <javadoc line="51">
                Create a Chi-Squared distribution with the given degrees of freedom and
                  inverse cumulative probability accuracy.                
                <@param>
                    m degreesOfFreedom Degrees of freedom.                    
                </@param>
                <@param>
                    m inverseCumAccuracy the maximum absolute error in inverse
                      cumulative probability estimates (defaults to{@link #DEFAULT_INVERSE_ABSOLUTE_ACCURACY}).                    
                </@param>
                <@since>
                    e 2.1                    
                </@since>
            </javadoc>
            <method name="ChiSquaredDistribution" type="constructor" line="62">
                <params>
                    <param name="degreesOfFreedom" type="double"/>
                    <param name="inverseCumAccuracy" type="double"/>
                </params>
            </method>
            <javadoc line="66">
                Create a Chi-Squared distribution with the given degrees of freedom and
                  inverse cumulative probability accuracy.                
                <@param>
                    m rng Random number generator.                    
                </@param>
                <@param>
                    m degreesOfFreedom Degrees of freedom.                    
                </@param>
                <@param>
                    m inverseCumAccuracy the maximum absolute error in inverse
                      cumulative probability estimates (defaults to{@link #DEFAULT_INVERSE_ABSOLUTE_ACCURACY}).                    
                </@param>
                <@since>
                    e 3.1                    
                </@since>
            </javadoc>
            <method name="ChiSquaredDistribution" type="constructor" line="79">
                <params>
                    <param name="rng" type="RandomGenerator"/>
                    <param name="degreesOfFreedom" type="double"/>
                    <param name="inverseCumAccuracy" type="double"/>
                </params>
            </method>
            <javadoc line="86">
                Access the number of degrees of freedom.                
                <@return>
                    n the degrees of freedom.                    
                </@return>
            </javadoc>
            <method name="getDegreesOfFreedom" type="double" line="91"/>
            <javadoc line="95">
                {@inheritDoc}                
            </javadoc>
            <method name="density" type="double" line="96">
                <params>
                    <param name="x" type="double"/>
                </params>
            </method>
            <javadoc line="100">
                {@inheritDoc}                
            </javadoc>
            <method name="cumulativeProbability" type="double" line="101">
                <params>
                    <param name="x" type="double"/>
                </params>
            </method>
            <javadoc line="105">
                {@inheritDoc}                
            </javadoc>
            <method name="getSolverAbsoluteAccuracy" type="double" line="107"/>
            <javadoc line="111">
                {@inheritDoc}For {@code k} degrees of freedom, the mean is {@code k}.                
            </javadoc>
            <method name="getNumericalMean" type="double" line="116"/>
            <javadoc line="120">
                {@inheritDoc}                
                <@return>
                    n {@code 2  k}, where {@code k} is the number of degrees of freedom.                    
                </@return>
            </javadoc>
            <method name="getNumericalVariance" type="double" line="125"/>
            <javadoc line="129">
                {@inheritDoc}The lower bound of the support is always 0 no matter the
                  degrees of freedom.                
                <@return>
                    n zero.                    
                </@return>
            </javadoc>
            <method name="getSupportLowerBound" type="double" line="137"/>
            <javadoc line="141">
                {@inheritDoc}The upper bound of the support is always positive infinity no matter the
                  degrees of freedom.                
                <@return>
                    n {@code Double.POSITIVE_INFINITY}.                    
                </@return>
            </javadoc>
            <method name="getSupportUpperBound" type="double" line="149"/>
            <javadoc line="153">
                {@inheritDoc}                
            </javadoc>
            <method name="isSupportLowerBoundInclusive" type="boolean" line="154"/>
            <javadoc line="158">
                {@inheritDoc}                
            </javadoc>
            <method name="isSupportUpperBoundInclusive" type="boolean" line="159"/>
            <javadoc line="163">
                {@inheritDoc}The support of this distribution is connected.                
                <@return>
                    n {@code true}                    
                </@return>
            </javadoc>
            <method name="isSupportConnected" type="boolean" line="170"/>
        </class>
    </source>