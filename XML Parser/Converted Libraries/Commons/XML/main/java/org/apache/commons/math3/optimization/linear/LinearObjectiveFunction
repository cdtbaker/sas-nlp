<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.optimization.linear">
        <import package="java.io.IOException"/>
        <import package="java.io.ObjectInputStream"/>
        <import package="java.io.ObjectOutputStream"/>
        <import package="java.io.Serializable"/>
        <import package="org.apache.commons.math3.linear.MatrixUtils"/>
        <import package="org.apache.commons.math3.linear.RealVector"/>
        <import package="org.apache.commons.math3.linear.ArrayRealVector"/>
        <class name="LinearObjectiveFunction" line="29">
            <implements interface="Serializable"/>
            <javadoc line="29">
                An objective function for a linear optimization problem.
                  &lt;p&gt;
                  A linear objective function has one the form:
                  &lt;pre&gt;
                  c&lt;sub&gt;1&lt;/sub&gt;x&lt;sub&gt;1&lt;/sub&gt; + ... c&lt;sub&gt;n&lt;/sub&gt;x&lt;sub&gt;n&lt;/sub&gt; + d
                  &lt;/pre&gt;
                  The c&lt;sub&gt;i&lt;/sub&gt; and d are the coefficients of the equation,
                  the x&lt;sub&gt;i&lt;/sub&gt; are the coordinates of the current point.
                  &lt;/p&gt;                
                <@version>
                    n $Id: LinearObjectiveFunction.java 1422230 2012-12-15 12:11:13Z erans $                    
                </@version>
                <@deprecated>
                    d As of 3.1 (to be removed in 4.0).                    
                </@deprecated>
                <@since>
                    e 2.0                    
                </@since>
            </javadoc>
            <declaration name="serialVersionUID" type="long" line="46"/>
            <javadoc line="46">
                Serializable version identifier.                
            </javadoc>
            <declaration name="coefficients" type="RealVector" line="49"/>
            <javadoc line="49">
                Coefficients of the constraint (c&lt;sub&gt;i&lt;/sub&gt;).                
            </javadoc>
            <declaration name="constantTerm" type="double" line="52"/>
            <javadoc line="52">
                Constant term of the linear equation.                
            </javadoc>
            <javadoc line="55">
                @param coefficients The coefficients for the linear equation being optimized                
                <@param>
                    m constantTerm The constant term of the linear equation                    
                </@param>
            </javadoc>
            <method name="LinearObjectiveFunction" type="constructor" line="59">
                <params>
                    <param name="coefficients" type="double[]"/>
                    <param name="constantTerm" type="double"/>
                </params>
            </method>
            <javadoc line="63">
                @param coefficients The coefficients for the linear equation being optimized                
                <@param>
                    m constantTerm The constant term of the linear equation                    
                </@param>
            </javadoc>
            <method name="LinearObjectiveFunction" type="constructor" line="67">
                <params>
                    <param name="coefficients" type="RealVector"/>
                    <param name="constantTerm" type="double"/>
                </params>
            </method>
            <javadoc line="72">
                Get the coefficients of the linear equation being optimized.                
                <@return>
                    n coefficients of the linear equation being optimized                    
                </@return>
            </javadoc>
            <method name="getCoefficients" type="RealVector" line="76"/>
            <javadoc line="80">
                Get the constant of the linear equation being optimized.                
                <@return>
                    n constant of the linear equation being optimized                    
                </@return>
            </javadoc>
            <method name="getConstantTerm" type="double" line="84"/>
            <javadoc line="88">
                Compute the value of the linear equation at the current point                
                <@param>
                    m point point at which linear equation must be evaluated                    
                </@param>
                <@return>
                    n value of the linear equation at the current point                    
                </@return>
            </javadoc>
            <method name="getValue" type="double" line="93">
                <params>
                    <param name="point" type="double[]"/>
                </params>
            </method>
            <javadoc line="97">
                Compute the value of the linear equation at the current point                
                <@param>
                    m point point at which linear equation must be evaluated                    
                </@param>
                <@return>
                    n value of the linear equation at the current point                    
                </@return>
            </javadoc>
            <method name="getValue" type="double" line="102">
                <params>
                    <param name="point" type="RealVector"/>
                </params>
            </method>
            <method name="equals" type="boolean" line="107">
                <params>
                    <param name="other" type="Object"/>
                </params>
                <scope line="109"/>
                <scope line="113">
                    <declaration name="rhs" type="LinearObjectiveFunction" line="114"/>
                </scope>
            </method>
            <method name="hashCode" type="int" line="122"/>
            <javadoc line="126">
                Serialize the instance.                
                <@param>
                    m oos stream where object should be written                    
                </@param>
                <@throws>
                    s IOException if object cannot be written to stream                    
                </@throws>
            </javadoc>
            <method name="writeObject" type="void" line="132">
                <params>
                    <param name="oos" type="ObjectOutputStream"/>
                </params>
            </method>
            <javadoc line="137">
                Deserialize the instance.                
                <@param>
                    m ois stream from which the object should be read                    
                </@param>
                <@throws>
                    s ClassNotFoundException if a class in the stream cannot be found                    
                </@throws>
                <@throws>
                    s IOException if object cannot be read from the stream                    
                </@throws>
            </javadoc>
            <method name="readObject" type="void" line="144">
                <params>
                    <param name="ois" type="ObjectInputStream"/>
                </params>
            </method>
        </class>
    </source>