<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.distribution">
        <import package="org.apache.commons.math3.exception.OutOfRangeException"/>
        <import package="org.apache.commons.math3.random.RandomGenerator"/>
        <import package="org.apache.commons.math3.special.Erf"/>
        <import package="org.apache.commons.math3.util.FastMath"/>
        <class name="LevyDistribution" extends="AbstractRealDistribution" line="24">
            <comment line="25">
                ivate final double c;  // Setting this to 1 returns a cumProb of 1.0                
            </comment>
            <javadoc line="24">
                This class implements the &lt;a href=&quot;http://en.wikipedia.org/wiki/L%C3%A9vy_distribution&quot;&gt;
                 * L&amp;eacute;vy distribution&lt;/a&gt;.                
                <@version>
                    n $Id: LevyDistribution.java 1456957 2013-03-15 13:54:52Z luc $                    
                </@version>
                <@since>
                    e 3.2                    
                </@since>
            </javadoc>
            <declaration name="serialVersionUID" type="long" line="33"/>
            <javadoc line="33">
                Serializable UID.                
            </javadoc>
            <declaration name="mu" type="double" line="36"/>
            <javadoc line="36">
                Location parameter.                
            </javadoc>
            <declaration name="c" type="double" line="39"/>
            <javadoc line="39">
                Scale parameter.                
            </javadoc>
            <declaration name="halfC" type="double" line="42"/>
            <javadoc line="42">
                Half of c (for calculations).                
            </javadoc>
            <javadoc line="45">
                Creates a LevyDistribution.                
                <@param>
                    m rng random generator to be used for sampling                    
                </@param>
                <@param>
                    m mu location                    
                </@param>
                <@param>
                    m c scale parameter                    
                </@param>
            </javadoc>
            <method name="LevyDistribution" type="constructor" line="51"/>
            <javadoc line="58">
                {@inheritDoc}&lt;p&gt;
                 * From Wikipedia: The probability density function of the L&amp;eacute;vy distribution
                 * over the domain is
                 * &lt;/p&gt;
                 * &lt;pre&gt;
                 * f(x; &amp;mu;, c) = &amp;radic;(c / 2&amp;pi;) * e&lt;sup&gt;-c / 2 (x - &amp;mu;)&lt;/sup&gt; / (x - &amp;mu;)&lt;sup&gt;3/2&lt;/sup&gt;
                 * &lt;/pre&gt;
                 * &lt;p&gt;
                 * For this distribution, {@code X}, this method returns {@code P(X &lt; x)}.
                 * If {@code x} is less than location parameter &amp;mu;, {@code Double.NaN} is
                 * returned, as in these cases the distribution is not defined.
                 * &lt;/p&gt;                
            </javadoc>
            <method name="density" type="double" line="72">
                <scope line="73"/>
                <declaration name="delta" type="double" line="77"/>
                <declaration name="f" type="double" line="78"/>
            </method>
            <javadoc line="82">
                {@inheritDoc}&lt;p&gt;
                 * From Wikipedia: the cumulative distribution function is
                 * &lt;/p&gt;
                 * &lt;pre&gt;
                 * f(x; u, c) = erfc (&amp;radic; (c / 2 (x - u )))
                 * &lt;/pre&gt;                
            </javadoc>
            <method name="cumulativeProbability" type="double" line="90">
                <scope line="91"/>
            </method>
            <javadoc line="97">
                {@inheritDoc}                
            </javadoc>
            <method name="inverseCumulativeProbability" type="double" line="99">
                <scope line="100"/>
                <declaration name="t" type="double" line="103"/>
            </method>
            <javadoc line="107">
                Get the scale parameter of the distribution.                
                <@return>
                    n scale parameter of the distribution                    
                </@return>
            </javadoc>
            <method name="getScale" type="double" line="110"/>
            <javadoc line="114">
                Get the location parameter of the distribution.                
                <@return>
                    n location parameter of the distribution                    
                </@return>
            </javadoc>
            <method name="getLocation" type="double" line="117"/>
            <javadoc line="121">
                {@inheritDoc}                
            </javadoc>
            <method name="getNumericalMean" type="double" line="122"/>
            <javadoc line="126">
                {@inheritDoc}                
            </javadoc>
            <method name="getNumericalVariance" type="double" line="127"/>
            <javadoc line="131">
                {@inheritDoc}                
            </javadoc>
            <method name="getSupportLowerBound" type="double" line="132"/>
            <javadoc line="136">
                {@inheritDoc}                
            </javadoc>
            <method name="getSupportUpperBound" type="double" line="137"/>
            <javadoc line="141">
                {@inheritDoc}                
            </javadoc>
            <method name="isSupportLowerBoundInclusive" type="boolean" line="142">
                <comment line="143">
                    there is a division by x-mu in the computation, so density                    
                </comment>
                <comment line="143">
                    is not finite at lower bound, bound must be excluded                    
                </comment>
            </method>
            <javadoc line="148">
                {@inheritDoc}                
            </javadoc>
            <method name="isSupportUpperBoundInclusive" type="boolean" line="149">
                <comment line="150">
                    upper bound is infinite, so it must be excluded                    
                </comment>
            </method>
            <javadoc line="154">
                {@inheritDoc}                
            </javadoc>
            <method name="isSupportConnected" type="boolean" line="155"/>
        </class>
    </source>