<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.geometry.partitioning">
        <import package="org.apache.commons.math3.geometry.Vector"/>
        <import package="org.apache.commons.math3.geometry.Space"/>
        <interface name="Embedding">
            <javadoc line="22">
                This interface defines mappers between a space and one of its sub-spaces.
                 * &lt;p&gt;Sub-spaces are the lower dimensions subsets of a n-dimensions
                 * space. The (n-1)-dimension sub-spaces are specific sub-spaces known
                 * as {@link Hyperplane hyperplanes}. This interface can be used regardless
                 * of the dimensions differences. As an example, {@link org.apache.commons.math3.geometry.euclidean.threed.Line Line} in 3D
                 * implements Embedding&lt;{@link org.apache.commons.math3.geometry.euclidean.threed.Vector3D Vector3D}, {link
                 * org.apache.commons.math3.geometry.euclidean.oned.Vector1D Vector1D&gt;, i.e. it
                 * maps directly dimensions 3 and 1.&lt;/p&gt;
                 * &lt;p&gt;In the 3D euclidean space, hyperplanes are 2D planes, and the 1D
                 * sub-spaces are lines.&lt;/p&gt;                
                <@param>
                    m<S>
                     *  Type of the embedding space.                    
                </@param>
                <@param>
                    m<T>
                     *  Type of the embedded sub-space.                    
                </@param>
                <@see>
                    e Hyperplane                    
                </@see>
                <@version>
                    n $Id: Embedding.java 1416643 2012-12-03 19:37:14Z tn $                    
                </@version>
                <@since>
                    e 3.0                    
                </@since>
            </javadoc>
            <method name="toSubSpace" type="Vector<T>" line="46"/>
            <javadoc line="46">
                Transform a space point into a sub-space point.                
                <@param>
                    m point n-dimension point of the space                    
                </@param>
                <@return>
                    n (n-1)-dimension point of the sub-space corresponding to
                     * the specified space point                    
                </@return>
                <@see>
                    e #toSpace                    
                </@see>
            </javadoc>
            <method name="toSpace" type="Vector<S>" line="54"/>
            <javadoc line="54">
                Transform a sub-space point into a space point.                
                <@param>
                    m point (n-1)-dimension point of the sub-space                    
                </@param>
                <@return>
                    n n-dimension point of the space corresponding to the
                     * specified sub-space point                    
                </@return>
                <@see>
                    e #toSubSpace                    
                </@see>
            </javadoc>
        </interface>
    </source>