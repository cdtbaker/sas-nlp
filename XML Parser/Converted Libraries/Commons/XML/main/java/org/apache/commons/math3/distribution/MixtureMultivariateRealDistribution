<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.distribution">
        <import package="java.util.List"/>
        <import package="java.util.ArrayList"/>
        <import package="org.apache.commons.math3.exception.DimensionMismatchException"/>
        <import package="org.apache.commons.math3.exception.NotPositiveException"/>
        <import package="org.apache.commons.math3.exception.MathArithmeticException"/>
        <import package="org.apache.commons.math3.exception.util.LocalizedFormats"/>
        <import package="org.apache.commons.math3.random.RandomGenerator"/>
        <import package="org.apache.commons.math3.random.Well19937c"/>
        <import package="org.apache.commons.math3.util.Pair"/>
        <class name="MixtureMultivariateRealDistribution" extends="AbstractMultivariateRealDistribution" line="29">
            <javadoc line="29">
                Class for representing &lt;a href=&quot;http://en.wikipedia.org/wiki/Mixture_model&quot;&gt;
                 * mixture model&lt;/a&gt; distributions.                
                <@param>
                    m<T>
                     *  Type of the mixture components.                    
                </@param>
                <@version>
                    n $Id: MixtureMultivariateRealDistribution.java 1416643 2012-12-03 19:37:14Z tn $                    
                </@version>
                <@since>
                    e 3.1                    
                </@since>
            </javadoc>
            <declaration name="weight" type="double[]" line="40"/>
            <javadoc line="40">
                Normalized weight of each mixture component.                
            </javadoc>
            <declaration name="distribution" type="List&lt;T&gt;" line="42"/>
            <javadoc line="42">
                Mixture components.                
            </javadoc>
            <javadoc line="45">
                Creates a mixture model from a list of distributions and their
                 * associated weights.                
                <@param>
                    m components List of (weight, distribution) pairs from which to sample.                    
                </@param>
            </javadoc>
            <method name="MixtureMultivariateRealDistribution" type="constructor" line="51"/>
            <javadoc line="55">
                Creates a mixture model from a list of distributions and their
                 * associated weights.                
                <@param>
                    m rng Random number generator.                    
                </@param>
                <@param>
                    m components Distributions from which to sample.                    
                </@param>
                <@throws>
                    s NotPositiveException if any of the weights is negative.                    
                </@throws>
                <@throws>
                    s DimensionMismatchException if not all components have the same
                     * number of variables.                    
                </@throws>
            </javadoc>
            <method name="MixtureMultivariateRealDistribution" type="constructor" line="66">
                <comment line="67">
                    Check for overflow.                    
                </comment>
                <comment line="67">
                    Store each distribution and its normalized weight.                    
                </comment>
                <declaration name="numComp" type="int" line="69"/>
                <declaration name="dim" type="int" line="70"/>
                <declaration name="weightSum" type="double" line="71"/>
                <scope line="72">
                    <declaration name="comp" type="Pair&lt;Double,T&gt;" line="73"/>
                    <scope line="74"/>
                    <scope line="77"/>
                </scope>
                <scope line="84"/>
                <scope line="91">
                    <declaration name="comp" type="Pair&lt;Double,T&gt;" line="92"/>
                </scope>
            </method>
            <javadoc line="98">
                {@inheritDoc}                
            </javadoc>
            <method name="density" type="double" line="99">
                <declaration name="p" type="double" line="100"/>
                <scope line="101"/>
            </method>
            <javadoc line="107">
                {@inheritDoc}                
            </javadoc>
            <method name="sample" type="double[]" line="108">
                <comment line="109">
                    Sampled values.                    
                </comment>
                <comment line="109">
                    Determine which component to sample from.                    
                </comment>
                <declaration name="vals" type="double[]" line="110"/>
                <declaration name="randomValue" type="double" line="113"/>
                <declaration name="sum" type="double" line="114"/>
                <scope line="116">
                    <scope line="118"/>
                </scope>
                <scope line="125"/>
            </method>
            <javadoc line="135">
                {@inheritDoc}                
            </javadoc>
            <method name="reseedRandomGenerator" type="void" line="136">
                <comment line="137">
                    Seed needs to be propagated to underlying components                    
                </comment>
                <comment line="137">
                    in order to maintain consistency between runs.                    
                </comment>
                <scope line="141"/>
            </method>
            <javadoc line="148">
                Gets the distributions that make up the mixture model.                
                <@return>
                    n the component distributions and associated weights.                    
                </@return>
            </javadoc>
            <method name="getComponents" type="List<Pair<Double,T>>" line="153">
                <declaration name="list" type="List&lt;Pair&lt;Double,T&gt;&gt;" line="154"/>
                <scope line="156"/>
            </method>
        </class>
    </source>