<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.optimization">
        <import package="java.io.Serializable"/>
        <import package="org.apache.commons.math3.util.Pair"/>
        <class name="PointVectorValuePair" extends="Pair<double[],double[]>" line="24">
            <implements interface="Serializable"/>
            <javadoc line="24">
                This class holds a point and the vectorial value of an objective function at
                 * that point.                
                <@see>
                    e PointValuePair                    
                </@see>
                <@see>
                    e org.apache.commons.math3.analysis.MultivariateVectorFunction                    
                </@see>
                <@version>
                    n $Id: PointVectorValuePair.java 1422230 2012-12-15 12:11:13Z erans $                    
                </@version>
                <@deprecated>
                    d As of 3.1 (to be removed in 4.0).                    
                </@deprecated>
                <@since>
                    e 3.0                    
                </@since>
            </javadoc>
            <declaration name="serialVersionUID" type="long" line="37"/>
            <javadoc line="37">
                Serializable UID.                
            </javadoc>
            <javadoc line="40">
                Builds a point/objective function value pair.                
                <@param>
                    m point Point coordinates. This instance will store
                     * a copy of the array, not the array passed as argument.                    
                </@param>
                <@param>
                    m value Value of the objective function at the point.                    
                </@param>
            </javadoc>
            <method name="PointVectorValuePair" type="constructor" line="48"/>
            <javadoc line="52">
                Build a point/objective function value pair.                
                <@param>
                    m point Point coordinates.                    
                </@param>
                <@param>
                    m value Value of the objective function at the point.                    
                </@param>
                <@param>
                    m copyArray if {@code true}, the input arrays will be copied,
                     * otherwise they will be referenced.                    
                </@param>
            </javadoc>
            <method name="PointVectorValuePair" type="constructor" line="62"/>
            <javadoc line="73">
                Gets the point.                
                <@return>
                    n a copy of the stored point.                    
                </@return>
            </javadoc>
            <method name="getPoint" type="double[]" line="78">
                <declaration name="p" type="double[]" line="79"/>
            </method>
            <javadoc line="83">
                Gets a reference to the point.                
                <@return>
                    n a reference to the internal array storing the point.                    
                </@return>
            </javadoc>
            <method name="getPointRef" type="double[]" line="88"/>
            <javadoc line="92">
                Gets the value of the objective function.                
                <@return>
                    n a copy of the stored value of the objective function.                    
                </@return>
            </javadoc>
            <method name="getValue" type="double[]" line="98">
                <declaration name="v" type="double[]" line="99"/>
            </method>
            <javadoc line="103">
                Gets a reference to the value of the objective function.                
                <@return>
                    n a reference to the internal array storing the value of
                     * the objective function.                    
                </@return>
            </javadoc>
            <method name="getValueRef" type="double[]" line="109"/>
            <javadoc line="113">
                Replace the instance with a data transfer object for serialization.                
                <@return>
                    n data transfer object that will be serialized                    
                </@return>
            </javadoc>
            <method name="writeReplace" type="Object" line="117"/>
            <class name="DataTransferObject" line="121">
                <implements interface="Serializable"/>
                <javadoc line="121">
                    Internal class used only for serialization.                    
                </javadoc>
                <declaration name="serialVersionUID" type="long" line="123"/>
                <javadoc line="123">
                    Serializable UID.                    
                </javadoc>
                <declaration name="point" type="double[]" line="125"/>
                <javadoc line="125">
                    Point coordinates.                    
                    <@Serial>
                        l                        
                    </@Serial>
                </javadoc>
                <declaration name="value" type="double[]" line="130"/>
                <javadoc line="130">
                    Value of the objective function at the point.                    
                    <@Serial>
                        l                        
                    </@Serial>
                </javadoc>
                <javadoc line="136">
                    Simple constructor.                    
                    <@param>
                        m point Point coordinates.                        
                    </@param>
                    <@param>
                        m value Value of the objective function at the point.                        
                    </@param>
                </javadoc>
                <method name="DataTransferObject" type="constructor" line="140"/>
                <javadoc line="145">
                    Replace the deserialized data transfer object with a {@link PointValuePair}.                    
                    <@return>
                        n replacement {@link PointValuePair}                        
                    </@return>
                </javadoc>
                <method name="readResolve" type="Object" line="148"/>
            </class>
        </class>
    </source>