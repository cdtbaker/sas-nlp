<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.stat.descriptive">
        <import package="org.apache.commons.math3.exception.MathIllegalArgumentException"/>
        <import package="org.apache.commons.math3.exception.NullArgumentException"/>
        <import package="org.apache.commons.math3.util.MathUtils"/>
        <class name="SynchronizedDescriptiveStatistics" line="23">
            <extends class="DescriptiveStatistics"/>
            <javadoc line="23">
                Implementation of{@link org.apache.commons.math3.stat.descriptive.DescriptiveStatistics} that
                  is safe to use in a multithreaded environment.  Multiple threads can safely
                  operate on a single instance without causing runtime exceptions due to race
                  conditions.  In effect, this implementation makes modification and access
                  methods atomic operations for a single instance.  That is to say, as one
                  thread is computing a statistic from the instance, no other thread can modify
                  the instance nor compute another statistic.                
                <@since>
                    e 1.2                    
                </@since>
                <@version>
                    n $Id: SynchronizedDescriptiveStatistics.java 1416643 2012-12-03 19:37:14Z tn $                    
                </@version>
            </javadoc>
            <declaration name="serialVersionUID" type="long" line="38"/>
            <javadoc line="38">
                Serialization UID                
            </javadoc>
            <javadoc line="41">
                Construct an instance with infinite window                
            </javadoc>
            <method name="SynchronizedDescriptiveStatistics" type="constructor" line="44">
                <comment line="45">
                    no try-catch or advertized IAE because arg is valid                    
                </comment>
            </method>
            <javadoc line="49">
                Construct an instance with finite window                
                <@param>
                    m window the finite window size.                    
                </@param>
                <@throws>
                    s MathIllegalArgumentException if window size is less than 1 but
                      not equal to {@link #INFINITE_WINDOW}                    
                </@throws>
            </javadoc>
            <method name="SynchronizedDescriptiveStatistics" type="constructor" line="55">
                <params>
                    <param name="window" type="int"/>
                </params>
            </method>
            <javadoc line="59">
                A copy constructor. Creates a deep-copy of the {@code original}.                
                <@param>
                    m original the {@code SynchronizedDescriptiveStatistics} instance to copy                    
                </@param>
                <@throws>
                    s NullArgumentException if original is null                    
                </@throws>
            </javadoc>
            <method name="SynchronizedDescriptiveStatistics" type="constructor" line="66">
                <params>
                    <param name="original" type="SynchronizedDescriptiveStatistics"/>
                </params>
            </method>
            <javadoc line="70">
                {@inheritDoc}                
            </javadoc>
            <method name="addValue" type="void" line="74">
                <params>
                    <param name="v" type="double"/>
                </params>
            </method>
            <javadoc line="78">
                {@inheritDoc}                
            </javadoc>
            <method name="apply" type="double" line="82">
                <params>
                    <param name="stat" type="UnivariateStatistic"/>
                </params>
            </method>
            <javadoc line="86">
                {@inheritDoc}                
            </javadoc>
            <method name="clear" type="void" line="90"/>
            <javadoc line="94">
                {@inheritDoc}                
            </javadoc>
            <method name="getElement" type="double" line="98">
                <params>
                    <param name="index" type="int"/>
                </params>
            </method>
            <javadoc line="102">
                {@inheritDoc}                
            </javadoc>
            <method name="getN" type="long" line="106"/>
            <javadoc line="110">
                {@inheritDoc}                
            </javadoc>
            <method name="getStandardDeviation" type="double" line="114"/>
            <javadoc line="118">
                {@inheritDoc}                
            </javadoc>
            <method name="getValues" type="double[]" line="122"/>
            <javadoc line="126">
                {@inheritDoc}                
            </javadoc>
            <method name="getWindowSize" type="int" line="130"/>
            <javadoc line="134">
                {@inheritDoc}                
            </javadoc>
            <method name="setWindowSize" type="void" line="138">
                <params>
                    <param name="windowSize" type="int"/>
                </params>
            </method>
            <javadoc line="142">
                {@inheritDoc}                
            </javadoc>
            <method name="toString" type="String" line="146"/>
            <javadoc line="150">
                Returns a copy of this SynchronizedDescriptiveStatistics instance with the
                  same internal state.                
                <@return>
                    n a copy of this                    
                </@return>
            </javadoc>
            <method name="copy" type="SynchronizedDescriptiveStatistics" line="157">
                <comment line="158">
                    No try-catch or advertised exception because arguments are guaranteed non-null                    
                </comment>
                <declaration name="result" type="SynchronizedDescriptiveStatistics" line="158"/>
            </method>
            <javadoc line="165">
                Copies source to dest.
                  &lt;p&gt;Neither source nor dest can be null.&lt;/p&gt;
                  &lt;p&gt;Acquires synchronization lock on source, then dest before copying.&lt;/p&gt;                
                <@param>
                    m source SynchronizedDescriptiveStatistics to copy                    
                </@param>
                <@param>
                    m dest SynchronizedDescriptiveStatistics to copy to                    
                </@param>
                <@throws>
                    s NullArgumentException if either source or dest is null                    
                </@throws>
            </javadoc>
            <method name="copy" type="void" line="176">
                <params>
                    <param name="source" type="SynchronizedDescriptiveStatistics"/>
                    <param name="dest" type="SynchronizedDescriptiveStatistics"/>
                </params>
                <scope line="179">
                    <scope line="180"/>
                </scope>
            </method>
        </class>
    </source>