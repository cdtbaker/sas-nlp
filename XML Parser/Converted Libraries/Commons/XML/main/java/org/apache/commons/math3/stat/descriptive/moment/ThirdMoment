<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.stat.descriptive.moment">
        <import package="java.io.Serializable"/>
        <import package="org.apache.commons.math3.exception.NullArgumentException"/>
        <import package="org.apache.commons.math3.util.MathUtils"/>
        <class name="ThirdMoment" extends="SecondMoment" line="25">
            <implements interface="Serializable"/>
            <javadoc line="25">
                Computes a statistic related to the Third Central Moment.  Specifically,
                 * what is computed is the sum of cubed deviations from the sample mean.
                 * &lt;p&gt;
                 * The following recursive updating formula is used:&lt;/p&gt;
                 * &lt;p&gt;
                 * Let &lt;ul&gt;
                 * &lt;li&gt; dev = (current obs - previous mean) &lt;/li&gt;
                 * &lt;li&gt; m2 = previous value of {@link SecondMoment} &lt;/li&gt;
                 * &lt;li&gt; n = number of observations (including current obs) &lt;/li&gt;
                 * &lt;/ul&gt;
                 * Then&lt;/p&gt;
                 * &lt;p&gt;
                 * new value = old value - 3 * (dev/n) * m2 + (n-1) * (n -2) * (dev^3/n^2)&lt;/p&gt;
                 * &lt;p&gt;
                 * Returns &lt;code&gt;Double.NaN&lt;/code&gt; if no data values have been added and
                 * returns &lt;code&gt;0&lt;/code&gt; if there is just one value in the data set.&lt;/p&gt;
                 * &lt;p&gt;
                 * &lt;strong&gt;Note that this implementation is not synchronized.&lt;/strong&gt; If
                 * multiple threads access an instance of this class concurrently, and at least
                 * one of the threads invokes the &lt;code&gt;increment()&lt;/code&gt; or
                 * &lt;code&gt;clear()&lt;/code&gt; method, it must be synchronized externally.&lt;/p&gt;                
                <@version>
                    n $Id: ThirdMoment.java 1416643 2012-12-03 19:37:14Z tn $                    
                </@version>
            </javadoc>
            <declaration name="serialVersionUID" type="long" line="52"/>
            <javadoc line="52">
                Serializable version identifier                
            </javadoc>
            <declaration name="m3" type="double" line="55"/>
            <javadoc line="55">
                third moment of values that have been added                
            </javadoc>
            <declaration name="nDevSq" type="double" line="58"/>
            <javadoc line="58">
                Square of deviation of most recently added value from previous first
                 * moment, normalized by previous sample size.  Retained to prevent
                 * repeated computation in higher order moments.  nDevSq = nDev * nDev.                
            </javadoc>
            <javadoc line="65">
                Create a FourthMoment instance                
            </javadoc>
            <method name="ThirdMoment" type="constructor" line="68"/>
            <javadoc line="74">
                Copy constructor, creates a new {@code ThirdMoment} identical
                 * to the {@code original}                
                <@param>
                    m original the {@code ThirdMoment} instance to copy                    
                </@param>
                <@throws>
                    s NullArgumentException if orginal is null                    
                </@throws>
            </javadoc>
            <method name="ThirdMoment" type="constructor" line="81"/>
            <javadoc line="85">
                {@inheritDoc}                
            </javadoc>
            <method name="increment" type="void" line="89">
                <scope line="90"/>
                <declaration name="prevM2" type="double" line="94"/>
                <declaration name="n0" type="double" line="97"/>
            </method>
            <javadoc line="101">
                {@inheritDoc}                
            </javadoc>
            <method name="getResult" type="double" line="105"/>
            <javadoc line="109">
                {@inheritDoc}                
            </javadoc>
            <method name="clear" type="void" line="113"/>
            <javadoc line="119">
                {@inheritDoc}                
            </javadoc>
            <method name="copy" type="ThirdMoment" line="123">
                <comment line="124">
                    No try-catch or advertised exception because args are guaranteed non-null                    
                </comment>
                <declaration name="result" type="ThirdMoment" line="124"/>
            </method>
            <javadoc line="130">
                Copies source to dest.
                 * &lt;p&gt;Neither source nor dest can be null.&lt;/p&gt;                
                <@param>
                    m source ThirdMoment to copy                    
                </@param>
                <@param>
                    m dest ThirdMoment to copy to                    
                </@param>
                <@throws>
                    s NullArgumentException if either source or dest is null                    
                </@throws>
            </javadoc>
            <method name="copy" type="void" line="139"/>
        </class>
    </source>