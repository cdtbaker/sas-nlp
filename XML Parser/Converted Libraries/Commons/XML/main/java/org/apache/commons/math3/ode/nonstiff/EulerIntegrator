<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.ode.nonstiff">
        <class name="EulerIntegrator" line="21">
            <extends class="RungeKuttaIntegrator"/>
            <javadoc line="21">
                This class implements a simple Euler integrator for Ordinary
                  Differential Equations.
                  &lt;p&gt;The Euler algorithm is the simplest one that can be used to
                  integrate ordinary differential equations. It is a simple inversion
                  of the forward difference expression :
                  &lt;code&gt;f&apos;=(f(t+h)-f(t))/h&lt;/code&gt; which leads to
                  &lt;code&gt;f(t+h)=f(t)+hf&apos;&lt;/code&gt;. The interpolation scheme used for
                  dense output is the linear scheme already used for integration.&lt;/p&gt;
                  &lt;p&gt;This algorithm looks cheap because it needs only one function
                  evaluation per step. However, as it uses linear estimates, it needs
                  very small steps to achieve high accuracy, and small steps lead to
                  numerical errors and instabilities.&lt;/p&gt;
                  &lt;p&gt;This algorithm is almost never used and has been included in
                  this package only as a comparison reference for more useful
                  integrators.&lt;/p&gt;                
                <@see>
                    e MidpointIntegrator                    
                </@see>
                <@see>
                    e ClassicalRungeKuttaIntegrator                    
                </@see>
                <@see>
                    e GillIntegrator                    
                </@see>
                <@see>
                    e ThreeEighthesIntegrator                    
                </@see>
                <@version>
                    n $Id: EulerIntegrator.java 1416643 2012-12-03 19:37:14Z tn $                    
                </@version>
                <@since>
                    e 1.2                    
                </@since>
            </javadoc>
            <declaration name="STATIC_C" type="double[]" line="51"/>
            <javadoc line="51">
                Time steps Butcher array.                
            </javadoc>
            <declaration name="STATIC_A" type="double[][]" line="55"/>
            <javadoc line="55">
                Internal weights Butcher array.                
            </javadoc>
            <declaration name="STATIC_B" type="double[]" line="59"/>
            <javadoc line="59">
                Propagation weights Butcher array.                
            </javadoc>
            <javadoc line="64">
                Simple constructor.
                  Build an Euler integrator with the given step.                
                <@param>
                    m step integration step                    
                </@param>
            </javadoc>
            <method name="EulerIntegrator" type="constructor" line="68">
                <params>
                    <param name="step" type="double"/>
                </params>
            </method>
        </class>
    </source>