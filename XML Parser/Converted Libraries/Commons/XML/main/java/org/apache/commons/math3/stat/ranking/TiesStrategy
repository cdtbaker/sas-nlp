<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.stat.ranking">
        <javadoc line="20">
            Strategies for handling tied values in rank transformations.
             * &lt;ul&gt;
             * &lt;li&gt;SEQUENTIAL - Ties are assigned ranks in order of occurrence in the original array,
             * for example (1,3,4,3) is ranked as (1,2,4,3)&lt;/li&gt;
             * &lt;li&gt;MINIMUM - Tied values are assigned the minimum applicable rank, or the rank
             * of the first occurrence. For example, (1,3,4,3) is ranked as (1,2,4,2)&lt;/li&gt;
             * &lt;li&gt;MAXIMUM - Tied values are assigned the maximum applicable rank, or the rank
             * of the last occurrence. For example, (1,3,4,3) is ranked as (1,3,4,3)&lt;/li&gt;
             * &lt;li&gt;AVERAGE - Tied values are assigned the average of the applicable ranks.
             * For example, (1,3,4,3) is ranked as (1,2.5,4,2.5)&lt;/li&gt;
             * &lt;li&gt;RANDOM - Tied values are assigned a random integer rank from among the
             * applicable values. The assigned rank will always be an integer, (inclusively)
             * between the values returned by the MINIMUM and MAXIMUM strategies.&lt;/li&gt;
             * &lt;/ul&gt;            
            <@since>
                e 2.0                
            </@since>
            <@version>
                n $Id: TiesStrategy.java 1416643 2012-12-03 19:37:14Z tn $                
            </@version>
        </javadoc>
        <javadoc line="41">
            Ties assigned sequential ranks in order of occurrence            
        </javadoc>
        <javadoc line="44">
            Ties get the minimum applicable rank            
        </javadoc>
        <javadoc line="47">
            Ties get the maximum applicable rank            
        </javadoc>
        <javadoc line="50">
            Ties get the average of applicable ranks            
        </javadoc>
        <javadoc line="53">
            Ties get a random integral value from among applicable ranks            
        </javadoc>
    </source>