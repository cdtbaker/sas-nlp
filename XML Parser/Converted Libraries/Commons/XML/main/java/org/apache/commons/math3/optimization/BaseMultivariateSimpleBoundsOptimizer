<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.optimization">
        <import package="org.apache.commons.math3.analysis.MultivariateFunction"/>
        <interface name="BaseMultivariateSimpleBoundsOptimizer">
            <type_params>
                <type_param name="FUNC"/>
            </type_params>
            <implements interface="BaseMultivariateOptimizer">
                <type_params>
                    <type_param name="FUNC"/>
                </type_params>
            </implements>
            <javadoc line="22">
                This interface is mainly intended to enforce the internal coherence of
                  Commons-FastMath. Users of the API are advised to base their code on
                  the following interfaces:
                  &lt;ul&gt;
                  &lt;li&gt;{@link org.apache.commons.math3.optimization.MultivariateOptimizer}&lt;/li&gt;
                  &lt;li&gt;{@link org.apache.commons.math3.optimization.MultivariateDifferentiableOptimizer}&lt;/li&gt;
                  &lt;/ul&gt;                
                <@param>
                    m<FUNC>
                       Type of the objective function to be optimized.                    
                </@param>
                <@version>
                    n $Id: BaseMultivariateSimpleBoundsOptimizer.java 1422230 2012-12-15 12:11:13Z erans $                    
                </@version>
                <@deprecated>
                    d As of 3.1 (to be removed in 4.0).                    
                </@deprecated>
                <@since>
                    e 3.0                    
                </@since>
            </javadoc>
            <method name="optimize" type="PointValuePair" line="40"/>
            <javadoc line="40">
                Optimize an objective function.                
                <@param>
                    m f Objective function.                    
                </@param>
                <@param>
                    m goalType Type of optimization goal: either{@link GoalType#MAXIMIZE} or {@link GoalType#MINIMIZE}.                    
                </@param>
                <@param>
                    m startPoint Start point for optimization.                    
                </@param>
                <@param>
                    m maxEval Maximum number of function evaluations.                    
                </@param>
                <@param>
                    m lowerBound Lower bound for each of the parameters.                    
                </@param>
                <@param>
                    m upperBound Upper bound for each of the parameters.                    
                </@param>
                <@return>
                    n the point/value pair giving the optimal value for objective
                      function.                    
                </@return>
                <@throws>
                    s org.apache.commons.math3.exception.DimensionMismatchExceptionif the array sizes are wrong.                    
                </@throws>
                <@throws>
                    s org.apache.commons.math3.exception.TooManyEvaluationsExceptionif the maximal number of evaluations is exceeded.                    
                </@throws>
                <@throws>
                    s org.apache.commons.math3.exception.NullArgumentException if{@code f}, {@code goalType} or {@code startPoint} is {@code null}.                    
                </@throws>
                <@throws>
                    s org.apache.commons.math3.exception.NumberIsTooSmallException if any
                      of the initial values is less than its lower bound.                    
                </@throws>
                <@throws>
                    s org.apache.commons.math3.exception.NumberIsTooLargeException if any
                      of the initial values is greater than its upper bound.                    
                </@throws>
            </javadoc>
        </interface>
    </source>