<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.analysis">
        <interface name="UnivariateFunction">
            <javadoc line="19">
                An interface representing a univariate real function.
                  &lt;br/&gt;
                  When a &lt;em&gt;user-defined&lt;/em&gt; function encounters an error during
                  evaluation, the {@link #value(double) value} method should throw a
                  &lt;em&gt;user-defined&lt;/em&gt; unchecked exception.
                  &lt;br/&gt;
                  The following code excerpt shows the recommended way to do that using
                  a root solver as an example, but the same construct is applicable to
                  ODE integrators or optimizers.
                  &lt;pre&gt;
                  private static class LocalException extends RuntimeException {
                  // The x value that caused the problem.
                  private final double x;
                  public LocalException(double x) {
                  this.x = x;
                  }
                  public double getX() {
                  return x;
                  }
                  }
                  private static class MyFunction implements UnivariateFunction {
                  public double value(double x) {
                  double y = hugeFormula(x);
                  if (somethingBadHappens) {
                  throw new LocalException(x);
                  }
                  return y;
                  }
                  }
                  public void compute() {
                  try {
                  solver.solve(maxEval, new MyFunction(a, b, c), min, max);
                  } catch (LocalException le) {
                  // Retrieve the x value.
                  }
                  }
                  &lt;/pre&gt;
                  As shown, the exception is local to the user&apos;s code and it is guaranteed
                  that Apache Commons Math will not catch it.                
                <@version>
                    n $Id: UnivariateFunction.java 1364387 2012-07-22 18:14:11Z tn $                    
                </@version>
            </javadoc>
            <method name="value" type="double" line="69"/>
            <javadoc line="69">
                Compute the value of the function.                
                <@param>
                    m x Point at which the function value should be computed.                    
                </@param>
                <@return>
                    n the value of the function.                    
                </@return>
                <@throws>
                    s IllegalArgumentException when the activated method itself can
                      ascertain that a precondition, specified in the API expressed at the
                      level of the activated method, has been violated.
                      When Commons Math throws an {@code IllegalArgumentException}, it is
                      usually the consequence of checking the actual parameters passed to
                      the method.                    
                </@throws>
            </javadoc>
        </interface>
    </source>