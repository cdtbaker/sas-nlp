<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.stat.clustering">
        <import package="java.io.Serializable"/>
        <import package="java.util.Collection"/>
        <import package="java.util.Arrays"/>
        <import package="org.apache.commons.math3.util.MathArrays"/>
        <class name="EuclideanDoublePoint" line="25">
            <implements interface="Clusterable&lt;EuclideanDoublePoint&gt;"/>
            <implements interface="Serializable"/>
            <javadoc line="25">
                A simple implementation of {@link Clusterable} for points with double coordinates.                
                <@version>
                    n $Id: EuclideanDoublePoint.java 1461871 2013-03-27 22:01:25Z tn $                    
                </@version>
                <@since>
                    e 3.1                    
                </@since>
                <@deprecated>
                    d As of 3.2 (to be removed in 4.0),
                     * use {@link org.apache.commons.math3.ml.clustering.DoublePoint} instead                    
                </@deprecated>
            </javadoc>
            <declaration name="serialVersionUID" type="long" line="35"/>
            <javadoc line="35">
                Serializable version identifier.                
            </javadoc>
            <declaration name="point" type="double[]" line="38"/>
            <javadoc line="38">
                Point coordinates.                
            </javadoc>
            <javadoc line="41">
                Build an instance wrapping an integer array.
                 * &lt;p&gt;
                 * The wrapped array is referenced, it is &lt;em&gt;not&lt;/em&gt; copied.                
                <@param>
                    m point the n-dimensional point in integer space                    
                </@param>
            </javadoc>
            <method name="EuclideanDoublePoint" type="constructor" line="48"/>
            <javadoc line="52">
                {@inheritDoc}                
            </javadoc>
            <method name="centroidOf" type="EuclideanDoublePoint" line="53">
                <declaration name="centroid" type="double[]" line="54"/>
                <scope line="55">
                    <scope line="56"/>
                </scope>
                <scope line="60"/>
            </method>
            <javadoc line="66">
                {@inheritDoc}                
            </javadoc>
            <method name="distanceFrom" type="double" line="67"/>
            <javadoc line="71">
                {@inheritDoc}                
            </javadoc>
            <method name="equals" type="boolean" line="73">
                <scope line="74"/>
            </method>
            <javadoc line="80">
                Get the n-dimensional point in integer space.                
                <@return>
                    n a reference (not a copy!) to the wrapped array                    
                </@return>
            </javadoc>
            <method name="getPoint" type="double[]" line="85"/>
            <javadoc line="89">
                {@inheritDoc}                
            </javadoc>
            <method name="hashCode" type="int" line="91"/>
            <javadoc line="95">
                {@inheritDoc}                
            </javadoc>
            <method name="toString" type="String" line="97"/>
        </class>
    </source>