<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.geometry.euclidean.oned">
        <import package="org.apache.commons.math3.geometry.Vector"/>
        <import package="org.apache.commons.math3.geometry.partitioning.Hyperplane"/>
        <class name="OrientedPoint" line="22">
            <implements interface="Hyperplane&lt;Euclidean1D&gt;"/>
            <javadoc line="22">
                This class represents a 1D oriented hyperplane.
                 * &lt;p&gt;An hyperplane in 1D is a simple point, its orientation being a
                 * boolean.&lt;/p&gt;
                 * &lt;p&gt;Instances of this class are guaranteed to be immutable.&lt;/p&gt;                
                <@version>
                    n $Id: OrientedPoint.java 1416643 2012-12-03 19:37:14Z tn $                    
                </@version>
                <@since>
                    e 3.0                    
                </@since>
            </javadoc>
            <declaration name="location" type="Vector1D" line="31"/>
            <javadoc line="31">
                Vector location.                
            </javadoc>
            <declaration name="direct" type="boolean" line="34"/>
            <javadoc line="34">
                Orientation.                
            </javadoc>
            <javadoc line="37">
                Simple constructor.                
                <@param>
                    m location location of the hyperplane                    
                </@param>
                <@param>
                    m direct if true, the plus side of the hyperplane is towards
                     * abscissas greater than {@code location}                    
                </@param>
            </javadoc>
            <method name="OrientedPoint" type="constructor" line="42"/>
            <javadoc line="47">
                Copy the instance.
                 * &lt;p&gt;Since instances are immutable, this method directly returns
                 * the instance.&lt;/p&gt;                
                <@return>
                    n the instance itself                    
                </@return>
            </javadoc>
            <method name="copySelf" type="OrientedPoint" line="52"/>
            <javadoc line="56">
                {@inheritDoc}                
            </javadoc>
            <method name="getOffset" type="double" line="57">
                <declaration name="delta" type="double" line="58"/>
            </method>
            <javadoc line="62">
                Build a region covering the whole hyperplane.
                 * &lt;p&gt;Since this class represent zero dimension spaces which does
                 * not have lower dimension sub-spaces, this method returns a dummy
                 * implementation of a {@link org.apache.commons.math3.geometry.partitioning.SubHyperplane SubHyperplane}.
                 * This implementation is only used to allow the {@link org.apache.commons.math3.geometry.partitioning.SubHyperplaneSubHyperplane} class implementation to work properly, it should
                 * &lt;em&gt;not&lt;/em&gt; be used otherwise.&lt;/p&gt;                
                <@return>
                    n a dummy sub hyperplane                    
                </@return>
            </javadoc>
            <method name="wholeHyperplane" type="SubOrientedPoint" line="73"/>
            <javadoc line="77">
                Build a region covering the whole space.                
                <@return>
                    n a region containing the instance (really an {@link IntervalsSet IntervalsSet} instance)                    
                </@return>
            </javadoc>
            <method name="wholeSpace" type="IntervalsSet" line="81"/>
            <javadoc line="85">
                {@inheritDoc}                
            </javadoc>
            <method name="sameOrientationAs" type="boolean" line="86"/>
            <javadoc line="90">
                Get the hyperplane location on the real line.                
                <@return>
                    n the hyperplane location                    
                </@return>
            </javadoc>
            <method name="getLocation" type="Vector1D" line="93"/>
            <javadoc line="97">
                Check if the hyperplane orientation is direct.                
                <@return>
                    n true if the plus side of the hyperplane is towards
                     * abscissae greater than hyperplane location                    
                </@return>
            </javadoc>
            <method name="isDirect" type="boolean" line="101"/>
            <javadoc line="105">
                Revert the instance.                
            </javadoc>
            <method name="revertSelf" type="void" line="107"/>
        </class>
    </source>