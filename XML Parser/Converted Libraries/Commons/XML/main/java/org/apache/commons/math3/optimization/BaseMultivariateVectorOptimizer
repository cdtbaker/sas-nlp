<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.optimization">
        <import package="org.apache.commons.math3.analysis.MultivariateVectorFunction"/>
        <interface name="BaseMultivariateVectorOptimizer">
            <implements interface="BaseOptimizer&lt;PointVectorValuePair&gt;"/>
            <javadoc line="22">
                This interface is mainly intended to enforce the internal coherence of
                 * Commons-Math. Users of the API are advised to base their code on
                 * the following interfaces:
                 * &lt;ul&gt;
                 * &lt;li&gt;{@link org.apache.commons.math3.optimization.DifferentiableMultivariateVectorOptimizer}&lt;/li&gt;
                 * &lt;/ul&gt;                
                <@param>
                    m<FUNC>
                     *  Type of the objective function to be optimized.                    
                </@param>
                <@version>
                    n $Id: BaseMultivariateVectorOptimizer.java 1422230 2012-12-15 12:11:13Z erans $                    
                </@version>
                <@deprecated>
                    d As of 3.1 (to be removed in 4.0).                    
                </@deprecated>
                <@since>
                    e 3.0                    
                </@since>
            </javadoc>
            <method name="optimize" type="PointVectorValuePair" line="39"/>
            <javadoc line="39">
                Optimize an objective function.
                 * Optimization is considered to be a weighted least-squares minimization.
                 * The cost function to be minimized is
                 * &lt;code&gt;&amp;sum;weight&lt;sub&gt;i&lt;/sub&gt;(objective&lt;sub&gt;i&lt;/sub&gt; - target&lt;sub&gt;i&lt;/sub&gt;)&lt;sup&gt;2&lt;/sup&gt;&lt;/code&gt;                
                <@param>
                    m f Objective function.                    
                </@param>
                <@param>
                    m target Target value for the objective functions at optimum.                    
                </@param>
                <@param>
                    m weight Weights for the least squares cost computation.                    
                </@param>
                <@param>
                    m startPoint Start point for optimization.                    
                </@param>
                <@return>
                    n the point/value pair giving the optimal value for objective
                     * function.                    
                </@return>
                <@param>
                    m maxEval Maximum number of function evaluations.                    
                </@param>
                <@throws>
                    s org.apache.commons.math3.exception.DimensionMismatchExceptionif the start point dimension is wrong.                    
                </@throws>
                <@throws>
                    s org.apache.commons.math3.exception.TooManyEvaluationsExceptionif the maximal number of evaluations is exceeded.                    
                </@throws>
                <@throws>
                    s org.apache.commons.math3.exception.NullArgumentException if
                     * any argument is {@code null}.                    
                </@throws>
                <@deprecated>
                    d As of 3.1. In 4.0, this will be replaced by the declaration
                     * corresponding to this {@link org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer#optimize(int,MultivariateVectorFunction,OptimizationData[]) method}.                    
                </@deprecated>
            </javadoc>
        </interface>
    </source>