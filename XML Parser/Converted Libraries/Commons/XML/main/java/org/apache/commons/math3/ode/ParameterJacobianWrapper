<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.ode">
        <import package="java.util.Arrays"/>
        <import package="java.util.Collection"/>
        <import package="java.util.HashMap"/>
        <import package="java.util.Map"/>
        <import package="org.apache.commons.math3.exception.DimensionMismatchException"/>
        <import package="org.apache.commons.math3.exception.MaxCountExceededException"/>
        <class name="ParameterJacobianWrapper" line="27">
            <implements interface="ParameterJacobianProvider"/>
            <javadoc line="27">
                Wrapper class to compute Jacobian matrices by finite differences for ODE
                  which do not compute them by themselves.                
                <@version>
                    n $Id: ParameterJacobianWrapper.java 1416643 2012-12-03 19:37:14Z tn $                    
                </@version>
                <@since>
                    e 3.0                    
                </@since>
            </javadoc>
            <declaration name="fode" type="FirstOrderDifferentialEquations" line="35"/>
            <javadoc line="35">
                Main ODE set.                
            </javadoc>
            <declaration name="pode" type="ParameterizedODE" line="38"/>
            <javadoc line="38">
                Raw ODE without Jacobian computation skill to be wrapped into a ParameterJacobianProvider.                
            </javadoc>
            <declaration name="hParam" type="Map&lt;String,Double&gt;" line="41"/>
            <javadoc line="41">
                Steps for finite difference computation of the Jacobian df/dp w.r.t. parameters.                
            </javadoc>
            <javadoc line="44">
                Wrap a {@link ParameterizedODE} into a {@link ParameterJacobianProvider}.                
                <@param>
                    m fode main first order differential equations set                    
                </@param>
                <@param>
                    m pode secondary problem, without parameter Jacobian computation skill                    
                </@param>
                <@param>
                    m paramsAndSteps parameters and steps to compute the Jacobians df/dp                    
                </@param>
                <@see>
                    e JacobianMatrices#setParameterStep(String,double)                    
                </@see>
            </javadoc>
            <method name="ParameterJacobianWrapper" type="constructor" line="52">
                <params>
                    <param name="fode" type="FirstOrderDifferentialEquations"/>
                    <param name="pode" type="ParameterizedODE"/>
                    <param name="paramsAndSteps" type="ParameterConfiguration[]"/>
                </params>
                <comment line="53">
                    set up parameters for jacobian computation                    
                </comment>
                <scope line="58">
                    <declaration name="name" type="String" line="59"/>
                    <scope line="60"/>
                </scope>
            </method>
            <javadoc line="66">
                {@inheritDoc}                
            </javadoc>
            <method name="getParametersNames" type="Collection<String>" line="67"/>
            <javadoc line="71">
                {@inheritDoc}                
            </javadoc>
            <method name="isSupported" type="boolean" line="72">
                <params>
                    <param name="name" type="String"/>
                </params>
            </method>
            <javadoc line="76">
                {@inheritDoc}                
            </javadoc>
            <method name="computeParameterJacobian" type="void" line="79">
                <params>
                    <param name="t" type="double"/>
                    <param name="y" type="double[]"/>
                    <param name="yDot" type="double[]"/>
                    <param name="paramName" type="String"/>
                    <param name="dFdP" type="double[]"/>
                </params>
                <declaration name="n" type="int" line="81"/>
                <scope line="82">
                    <declaration name="tmpDot" type="double[]" line="83"/>
                    <declaration name="p" type="double" line="86"/>
                    <declaration name="hP" type="double" line="87"/>
                    <scope line="90"/>
                </scope>
                <scope line="94"/>
            </method>
        </class>
    </source>