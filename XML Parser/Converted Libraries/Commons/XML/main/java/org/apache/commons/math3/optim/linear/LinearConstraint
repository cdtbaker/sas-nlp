<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.optim.linear">
        <import package="java.io.IOException"/>
        <import package="java.io.ObjectInputStream"/>
        <import package="java.io.ObjectOutputStream"/>
        <import package="java.io.Serializable"/>
        <import package="org.apache.commons.math3.linear.MatrixUtils"/>
        <import package="org.apache.commons.math3.linear.RealVector"/>
        <import package="org.apache.commons.math3.linear.ArrayRealVector"/>
        <class name="LinearConstraint" line="27">
            <implements interface="Serializable"/>
            <javadoc line="27">
                A linear constraint for a linear optimization problem.
                 * &lt;p&gt;
                 * A linear constraint has one of the forms:
                 * &lt;ul&gt;
                 * &lt;li&gt;c&lt;sub&gt;1&lt;/sub&gt;x&lt;sub&gt;1&lt;/sub&gt; + ... c&lt;sub&gt;n&lt;/sub&gt;x&lt;sub&gt;n&lt;/sub&gt; = v&lt;/li&gt;
                 * &lt;li&gt;c&lt;sub&gt;1&lt;/sub&gt;x&lt;sub&gt;1&lt;/sub&gt; + ... c&lt;sub&gt;n&lt;/sub&gt;x&lt;sub&gt;n&lt;/sub&gt; &amp;lt;= v&lt;/li&gt;
                 * &lt;li&gt;c&lt;sub&gt;1&lt;/sub&gt;x&lt;sub&gt;1&lt;/sub&gt; + ... c&lt;sub&gt;n&lt;/sub&gt;x&lt;sub&gt;n&lt;/sub&gt; &gt;= v&lt;/li&gt;
                 * &lt;li&gt;l&lt;sub&gt;1&lt;/sub&gt;x&lt;sub&gt;1&lt;/sub&gt; + ... l&lt;sub&gt;n&lt;/sub&gt;x&lt;sub&gt;n&lt;/sub&gt; + l&lt;sub&gt;cst&lt;/sub&gt; =
                 * r&lt;sub&gt;1&lt;/sub&gt;x&lt;sub&gt;1&lt;/sub&gt; + ... r&lt;sub&gt;n&lt;/sub&gt;x&lt;sub&gt;n&lt;/sub&gt; + r&lt;sub&gt;cst&lt;/sub&gt;&lt;/li&gt;
                 * &lt;li&gt;l&lt;sub&gt;1&lt;/sub&gt;x&lt;sub&gt;1&lt;/sub&gt; + ... l&lt;sub&gt;n&lt;/sub&gt;x&lt;sub&gt;n&lt;/sub&gt; + l&lt;sub&gt;cst&lt;/sub&gt; &amp;lt;=
                 * r&lt;sub&gt;1&lt;/sub&gt;x&lt;sub&gt;1&lt;/sub&gt; + ... r&lt;sub&gt;n&lt;/sub&gt;x&lt;sub&gt;n&lt;/sub&gt; + r&lt;sub&gt;cst&lt;/sub&gt;&lt;/li&gt;
                 * &lt;li&gt;l&lt;sub&gt;1&lt;/sub&gt;x&lt;sub&gt;1&lt;/sub&gt; + ... l&lt;sub&gt;n&lt;/sub&gt;x&lt;sub&gt;n&lt;/sub&gt; + l&lt;sub&gt;cst&lt;/sub&gt; &gt;=
                 * r&lt;sub&gt;1&lt;/sub&gt;x&lt;sub&gt;1&lt;/sub&gt; + ... r&lt;sub&gt;n&lt;/sub&gt;x&lt;sub&gt;n&lt;/sub&gt; + r&lt;sub&gt;cst&lt;/sub&gt;&lt;/li&gt;
                 * &lt;/ul&gt;
                 * The c&lt;sub&gt;i&lt;/sub&gt;, l&lt;sub&gt;i&lt;/sub&gt; or r&lt;sub&gt;i&lt;/sub&gt; are the coefficients of the constraints, the x&lt;sub&gt;i&lt;/sub&gt;
                 * are the coordinates of the current point and v is the value of the constraint.
                 * &lt;/p&gt;                
                <@version>
                    n $Id: LinearConstraint.java 1435539 2013-01-19 13:27:24Z tn $                    
                </@version>
                <@since>
                    e 2.0                    
                </@since>
            </javadoc>
            <declaration name="serialVersionUID" type="long" line="50"/>
            <javadoc line="50">
                Serializable version identifier.                
            </javadoc>
            <declaration name="coefficients" type="RealVector" line="52"/>
            <javadoc line="52">
                Coefficients of the constraint (left hand side).                
            </javadoc>
            <declaration name="relationship" type="Relationship" line="54"/>
            <javadoc line="54">
                Relationship between left and right hand sides (=, &amp;lt;=, &gt;=).                
            </javadoc>
            <declaration name="value" type="double" line="56"/>
            <javadoc line="56">
                Value of the constraint (right hand side).                
            </javadoc>
            <javadoc line="59">
                Build a constraint involving a single linear equation.
                 * &lt;p&gt;
                 * A linear constraint with a single linear equation has one of the forms:
                 * &lt;ul&gt;
                 * &lt;li&gt;c&lt;sub&gt;1&lt;/sub&gt;x&lt;sub&gt;1&lt;/sub&gt; + ... c&lt;sub&gt;n&lt;/sub&gt;x&lt;sub&gt;n&lt;/sub&gt; = v&lt;/li&gt;
                 * &lt;li&gt;c&lt;sub&gt;1&lt;/sub&gt;x&lt;sub&gt;1&lt;/sub&gt; + ... c&lt;sub&gt;n&lt;/sub&gt;x&lt;sub&gt;n&lt;/sub&gt; &amp;lt;= v&lt;/li&gt;
                 * &lt;li&gt;c&lt;sub&gt;1&lt;/sub&gt;x&lt;sub&gt;1&lt;/sub&gt; + ... c&lt;sub&gt;n&lt;/sub&gt;x&lt;sub&gt;n&lt;/sub&gt; &gt;= v&lt;/li&gt;
                 * &lt;/ul&gt;
                 * &lt;/p&gt;                
                <@param>
                    m coefficients The coefficients of the constraint (left hand side)                    
                </@param>
                <@param>
                    m relationship The type of (in)equality used in the constraint                    
                </@param>
                <@param>
                    m value The value of the constraint (right hand side)                    
                </@param>
            </javadoc>
            <method name="LinearConstraint" type="constructor" line="75"/>
            <javadoc line="79">
                Build a constraint involving a single linear equation.
                 * &lt;p&gt;
                 * A linear constraint with a single linear equation has one of the forms:
                 * &lt;ul&gt;
                 * &lt;li&gt;c&lt;sub&gt;1&lt;/sub&gt;x&lt;sub&gt;1&lt;/sub&gt; + ... c&lt;sub&gt;n&lt;/sub&gt;x&lt;sub&gt;n&lt;/sub&gt; = v&lt;/li&gt;
                 * &lt;li&gt;c&lt;sub&gt;1&lt;/sub&gt;x&lt;sub&gt;1&lt;/sub&gt; + ... c&lt;sub&gt;n&lt;/sub&gt;x&lt;sub&gt;n&lt;/sub&gt; &amp;lt;= v&lt;/li&gt;
                 * &lt;li&gt;c&lt;sub&gt;1&lt;/sub&gt;x&lt;sub&gt;1&lt;/sub&gt; + ... c&lt;sub&gt;n&lt;/sub&gt;x&lt;sub&gt;n&lt;/sub&gt; &gt;= v&lt;/li&gt;
                 * &lt;/ul&gt;
                 * &lt;/p&gt;                
                <@param>
                    m coefficients The coefficients of the constraint (left hand side)                    
                </@param>
                <@param>
                    m relationship The type of (in)equality used in the constraint                    
                </@param>
                <@param>
                    m value The value of the constraint (right hand side)                    
                </@param>
            </javadoc>
            <method name="LinearConstraint" type="constructor" line="95"/>
            <javadoc line="101">
                Build a constraint involving two linear equations.
                 * &lt;p&gt;
                 * A linear constraint with two linear equation has one of the forms:
                 * &lt;ul&gt;
                 * &lt;li&gt;l&lt;sub&gt;1&lt;/sub&gt;x&lt;sub&gt;1&lt;/sub&gt; + ... l&lt;sub&gt;n&lt;/sub&gt;x&lt;sub&gt;n&lt;/sub&gt; + l&lt;sub&gt;cst&lt;/sub&gt; =
                 * r&lt;sub&gt;1&lt;/sub&gt;x&lt;sub&gt;1&lt;/sub&gt; + ... r&lt;sub&gt;n&lt;/sub&gt;x&lt;sub&gt;n&lt;/sub&gt; + r&lt;sub&gt;cst&lt;/sub&gt;&lt;/li&gt;
                 * &lt;li&gt;l&lt;sub&gt;1&lt;/sub&gt;x&lt;sub&gt;1&lt;/sub&gt; + ... l&lt;sub&gt;n&lt;/sub&gt;x&lt;sub&gt;n&lt;/sub&gt; + l&lt;sub&gt;cst&lt;/sub&gt; &amp;lt;=
                 * r&lt;sub&gt;1&lt;/sub&gt;x&lt;sub&gt;1&lt;/sub&gt; + ... r&lt;sub&gt;n&lt;/sub&gt;x&lt;sub&gt;n&lt;/sub&gt; + r&lt;sub&gt;cst&lt;/sub&gt;&lt;/li&gt;
                 * &lt;li&gt;l&lt;sub&gt;1&lt;/sub&gt;x&lt;sub&gt;1&lt;/sub&gt; + ... l&lt;sub&gt;n&lt;/sub&gt;x&lt;sub&gt;n&lt;/sub&gt; + l&lt;sub&gt;cst&lt;/sub&gt; &gt;=
                 * r&lt;sub&gt;1&lt;/sub&gt;x&lt;sub&gt;1&lt;/sub&gt; + ... r&lt;sub&gt;n&lt;/sub&gt;x&lt;sub&gt;n&lt;/sub&gt; + r&lt;sub&gt;cst&lt;/sub&gt;&lt;/li&gt;
                 * &lt;/ul&gt;
                 * &lt;/p&gt;                
                <@param>
                    m lhsCoefficients The coefficients of the linear expression on the left hand side of the constraint                    
                </@param>
                <@param>
                    m lhsConstant The constant term of the linear expression on the left hand side of the constraint                    
                </@param>
                <@param>
                    m relationship The type of (in)equality used in the constraint                    
                </@param>
                <@param>
                    m rhsCoefficients The coefficients of the linear expression on the right hand side of the constraint                    
                </@param>
                <@param>
                    m rhsConstant The constant term of the linear expression on the right hand side of the constraint                    
                </@param>
            </javadoc>
            <method name="LinearConstraint" type="constructor" line="122">
                <declaration name="sub" type="double[]" line="123"/>
                <scope line="124"/>
            </method>
            <javadoc line="132">
                Build a constraint involving two linear equations.
                 * &lt;p&gt;
                 * A linear constraint with two linear equation has one of the forms:
                 * &lt;ul&gt;
                 * &lt;li&gt;l&lt;sub&gt;1&lt;/sub&gt;x&lt;sub&gt;1&lt;/sub&gt; + ... l&lt;sub&gt;n&lt;/sub&gt;x&lt;sub&gt;n&lt;/sub&gt; + l&lt;sub&gt;cst&lt;/sub&gt; =
                 * r&lt;sub&gt;1&lt;/sub&gt;x&lt;sub&gt;1&lt;/sub&gt; + ... r&lt;sub&gt;n&lt;/sub&gt;x&lt;sub&gt;n&lt;/sub&gt; + r&lt;sub&gt;cst&lt;/sub&gt;&lt;/li&gt;
                 * &lt;li&gt;l&lt;sub&gt;1&lt;/sub&gt;x&lt;sub&gt;1&lt;/sub&gt; + ... l&lt;sub&gt;n&lt;/sub&gt;x&lt;sub&gt;n&lt;/sub&gt; + l&lt;sub&gt;cst&lt;/sub&gt; &amp;lt;=
                 * r&lt;sub&gt;1&lt;/sub&gt;x&lt;sub&gt;1&lt;/sub&gt; + ... r&lt;sub&gt;n&lt;/sub&gt;x&lt;sub&gt;n&lt;/sub&gt; + r&lt;sub&gt;cst&lt;/sub&gt;&lt;/li&gt;
                 * &lt;li&gt;l&lt;sub&gt;1&lt;/sub&gt;x&lt;sub&gt;1&lt;/sub&gt; + ... l&lt;sub&gt;n&lt;/sub&gt;x&lt;sub&gt;n&lt;/sub&gt; + l&lt;sub&gt;cst&lt;/sub&gt; &gt;=
                 * r&lt;sub&gt;1&lt;/sub&gt;x&lt;sub&gt;1&lt;/sub&gt; + ... r&lt;sub&gt;n&lt;/sub&gt;x&lt;sub&gt;n&lt;/sub&gt; + r&lt;sub&gt;cst&lt;/sub&gt;&lt;/li&gt;
                 * &lt;/ul&gt;
                 * &lt;/p&gt;                
                <@param>
                    m lhsCoefficients The coefficients of the linear expression on the left hand side of the constraint                    
                </@param>
                <@param>
                    m lhsConstant The constant term of the linear expression on the left hand side of the constraint                    
                </@param>
                <@param>
                    m relationship The type of (in)equality used in the constraint                    
                </@param>
                <@param>
                    m rhsCoefficients The coefficients of the linear expression on the right hand side of the constraint                    
                </@param>
                <@param>
                    m rhsConstant The constant term of the linear expression on the right hand side of the constraint                    
                </@param>
            </javadoc>
            <method name="LinearConstraint" type="constructor" line="153"/>
            <javadoc line="159">
                Gets the coefficients of the constraint (left hand side).                
                <@return>
                    n the coefficients of the constraint (left hand side).                    
                </@return>
            </javadoc>
            <method name="getCoefficients" type="RealVector" line="164"/>
            <javadoc line="168">
                Gets the relationship between left and right hand sides.                
                <@return>
                    n the relationship between left and right hand sides.                    
                </@return>
            </javadoc>
            <method name="getRelationship" type="Relationship" line="173"/>
            <javadoc line="177">
                Gets the value of the constraint (right hand side).                
                <@return>
                    n the value of the constraint (right hand side).                    
                </@return>
            </javadoc>
            <method name="getValue" type="double" line="182"/>
            <method name="equals" type="boolean" line="187">
                <scope line="188"/>
                <scope line="191">
                    <declaration name="rhs" type="LinearConstraint" line="192"/>
                </scope>
            </method>
            <method name="hashCode" type="int" line="201"/>
            <javadoc line="207">
                Serialize the instance.                
                <@param>
                    m oos stream where object should be written                    
                </@param>
                <@throws>
                    s IOException if object cannot be written to stream                    
                </@throws>
            </javadoc>
            <method name="writeObject" type="void" line="213"/>
            <javadoc line="218">
                Deserialize the instance.                
                <@param>
                    m ois stream from which the object should be read                    
                </@param>
                <@throws>
                    s ClassNotFoundException if a class in the stream cannot be found                    
                </@throws>
                <@throws>
                    s IOException if object cannot be read from the stream                    
                </@throws>
            </javadoc>
            <method name="readObject" type="void" line="225"/>
        </class>
    </source>