<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.genetics">
        <import package="java.util.ArrayList"/>
        <import package="java.util.Collection"/>
        <import package="java.util.Collections"/>
        <import package="java.util.Iterator"/>
        <import package="java.util.List"/>
        <import package="org.apache.commons.math3.exception.util.LocalizedFormats"/>
        <import package="org.apache.commons.math3.exception.NotPositiveException"/>
        <import package="org.apache.commons.math3.exception.NullArgumentException"/>
        <import package="org.apache.commons.math3.exception.NumberIsTooLargeException"/>
        <import package="org.apache.commons.math3.exception.NumberIsTooSmallException"/>
        <class name="ListPopulation" line="31">
            <implements interface="Population"/>
            <javadoc line="31">
                Population of chromosomes represented by a {@link List}.                
                <@since>
                    e 2.0                    
                </@since>
                <@version>
                    n $Id: ListPopulation.java 1422195 2012-12-15 06:45:18Z psteitz $                    
                </@version>
            </javadoc>
            <declaration name="chromosomes" type="List&lt;Chromosome&gt;" line="39"/>
            <javadoc line="39">
                List of chromosomes                
            </javadoc>
            <declaration name="populationLimit" type="int" line="42"/>
            <javadoc line="42">
                maximal size of the population                
            </javadoc>
            <javadoc line="45">
                Creates a new ListPopulation instance and initializes its inner chromosome list.                
                <@param>
                    m populationLimit maximal size of the population                    
                </@param>
                <@throws>
                    s NotPositiveException if the population limit is not a positive number (&lt; 1)                    
                </@throws>
            </javadoc>
            <method name="ListPopulation" type="constructor" line="51">
                <params>
                    <param name="populationLimit" type="int"/>
                </params>
            </method>
            <javadoc line="55">
                Creates a new ListPopulation instance.
                  &lt;p&gt;
                  Note: the chromosomes of the specified list are added to the population.                
                <@param>
                    m chromosomes list of chromosomes to be added to the population                    
                </@param>
                <@param>
                    m populationLimit maximal size of the population                    
                </@param>
                <@throws>
                    s NullArgumentException if the list of chromosomes is {@code null}                    
                </@throws>
                <@throws>
                    s NotPositiveException if the population limit is not a positive number (&lt; 1)                    
                </@throws>
                <@throws>
                    s NumberIsTooLargeException if the list of chromosomes exceeds the population limit                    
                </@throws>
            </javadoc>
            <method name="ListPopulation" type="constructor" line="67">
                <params>
                    <param name="chromosomes" type="List<Chromosome>"/>
                    <param name="populationLimit" type="int"/>
                </params>
                <scope line="69"/>
                <scope line="72"/>
                <scope line="75"/>
            </method>
            <javadoc line="84">
                Sets the list of chromosomes.
                  &lt;p&gt;
                  Note: this method removed all existing chromosomes in the population and adds all chromosomes
                  of the specified list to the population.                
                <@param>
                    m chromosomes the list of chromosomes                    
                </@param>
                <@throws>
                    s NullArgumentException if the list of chromosomes is {@code null}                    
                </@throws>
                <@throws>
                    s NumberIsTooLargeException if the list of chromosomes exceeds the population limit                    
                </@throws>
                <@deprecated>
                    d use {@link #addChromosomes(Collection)} instead                    
                </@deprecated>
            </javadoc>
            <method name="setChromosomes" type="void" line="97">
                <params>
                    <param name="chromosomes" type="List<Chromosome>"/>
                </params>
                <scope line="99"/>
                <scope line="102"/>
            </method>
            <javadoc line="110">
                Add a {@link Collection} of chromosomes to this {@link Population}.                
                <@param>
                    m chromosomeColl a {@link Collection} of chromosomes                    
                </@param>
                <@throws>
                    s NumberIsTooLargeException if the population would exceed the population limit when
                      adding this chromosome                    
                </@throws>
                <@since>
                    e 3.1                    
                </@since>
            </javadoc>
            <method name="addChromosomes" type="void" line="117">
                <params>
                    <param name="chromosomeColl" type="Collection<Chromosome>"/>
                </params>
                <scope line="118"/>
            </method>
            <javadoc line="125">
                Returns an unmodifiable list of the chromosomes in this population.                
                <@return>
                    n the unmodifiable list of chromosomes                    
                </@return>
            </javadoc>
            <method name="getChromosomes" type="List<Chromosome>" line="129"/>
            <javadoc line="133">
                Access the list of chromosomes.                
                <@return>
                    n the list of chromosomes                    
                </@return>
                <@since>
                    e 3.1                    
                </@since>
            </javadoc>
            <method name="getChromosomeList" type="List<Chromosome>" line="138"/>
            <javadoc line="142">
                Add the given chromosome to the population.                
                <@param>
                    m chromosome the chromosome to add.                    
                </@param>
                <@throws>
                    s NumberIsTooLargeException if the population would exceed the {@code populationLimit} after
                      adding this chromosome                    
                </@throws>
            </javadoc>
            <method name="addChromosome" type="void" line="149">
                <params>
                    <param name="chromosome" type="Chromosome"/>
                </params>
                <scope line="150"/>
            </method>
            <javadoc line="157">
                Access the fittest chromosome in this population.                
                <@return>
                    n the fittest chromosome.                    
                </@return>
            </javadoc>
            <method name="getFittestChromosome" type="Chromosome" line="161">
                <comment line="162">
                    best so far                    
                </comment>
                <declaration name="bestChromosome" type="Chromosome" line="163"/>
                <scope line="164">
                    <scope line="165"/>
                </scope>
            </method>
            <javadoc line="173">
                Access the maximum population size.                
                <@return>
                    n the maximum population size.                    
                </@return>
            </javadoc>
            <method name="getPopulationLimit" type="int" line="177"/>
            <javadoc line="181">
                Sets the maximal population size.                
                <@param>
                    m populationLimit maximal population size.                    
                </@param>
                <@throws>
                    s NotPositiveException if the population limit is not a positive number (&lt; 1)                    
                </@throws>
                <@throws>
                    s NumberIsTooSmallException if the new population size is smaller than the current number
                      of chromosomes in the population                    
                </@throws>
            </javadoc>
            <method name="setPopulationLimit" type="void" line="188">
                <params>
                    <param name="populationLimit" type="int"/>
                </params>
                <scope line="189"/>
                <scope line="192"/>
            </method>
            <javadoc line="198">
                Access the current population size.                
                <@return>
                    n the current population size.                    
                </@return>
            </javadoc>
            <method name="getPopulationSize" type="int" line="202"/>
            <javadoc line="206">
                {@inheritDoc}                
            </javadoc>
            <method name="toString" type="String" line="210"/>
            <javadoc line="214">
                Returns an iterator over the unmodifiable list of chromosomes.
                  &lt;p&gt;Any call to {@link Iterator#remove()} will result in a {@link UnsupportedOperationException}.&lt;/p&gt;                
                <@return>
                    n chromosome iterator                    
                </@return>
            </javadoc>
            <method name="iterator" type="Iterator<Chromosome>" line="220"/>
        </class>
    </source>