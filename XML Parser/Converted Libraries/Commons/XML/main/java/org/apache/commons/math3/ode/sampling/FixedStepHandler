<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.ode.sampling">
        <interface name="FixedStepHandler">
            <javadoc line="21">
                This interface represents a handler that should be called after
                 * each successful fixed step.
                 * &lt;p&gt;This interface should be implemented by anyone who is interested
                 * in getting the solution of an ordinary differential equation at
                 * fixed time steps. Objects implementing this interface should be
                 * wrapped within an instance of {@link StepNormalizer} that itself
                 * is used as the general {@link StepHandler} by the integrator. The{@link StepNormalizer} object is called according to the integrator
                 * internal algorithms and it calls objects implementing this
                 * interface as necessary at fixed time steps.&lt;/p&gt;                
                <@see>
                    e StepHandler                    
                </@see>
                <@see>
                    e StepNormalizer                    
                </@see>
                <@version>
                    n $Id: FixedStepHandler.java 1416643 2012-12-03 19:37:14Z tn $                    
                </@version>
                <@since>
                    e 1.2                    
                </@since>
            </javadoc>
            <method name="init" type="void" line="42"/>
            <javadoc line="42">
                Initialize step handler at the start of an ODE integration.
                 * &lt;p&gt;
                 * This method is called once at the start of the integration. It
                 * may be used by the step handler to initialize some internal data
                 * if needed.
                 * &lt;/p&gt;                
                <@param>
                    m t0 start value of the independent <i>time</i> variable                    
                </@param>
                <@param>
                    m y0 array containing the start value of the state vector                    
                </@param>
                <@param>
                    m t target time for the integration                    
                </@param>
            </javadoc>
            <method name="handleStep" type="void" line="54"/>
            <javadoc line="54">
                Handle the last accepted step                
                <@param>
                    m t time of the current step                    
                </@param>
                <@param>
                    m y state vector at t. For efficiency purposes, the {@link StepNormalizer} class reuses the same array on each call, so if
                     * the instance wants to keep it across all calls (for example to
                     * provide at the end of the integration a complete array of all
                     * steps), it should build a local copy store this copy.                    
                </@param>
                <@param>
                    m yDot derivatives of the state vector state vector at t.
                     * For efficiency purposes, the {@link StepNormalizer} class reuses
                     * the same array on each call, so if
                     * the instance wants to keep it across all calls (for example to
                     * provide at the end of the integration a complete array of all
                     * steps), it should build a local copy store this copy.                    
                </@param>
                <@param>
                    m isLast true if the step is the last one                    
                </@param>
            </javadoc>
        </interface>
    </source>