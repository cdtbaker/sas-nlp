<?xml version="1.0" encoding="UTF-8"?>
<source package="org.apache.commons.math3.random">
  <import name="java.net.URL" />
  <import name="java.util.Arrays" />
  <import name="org.apache.commons.math3.RetryRunner" />
  <import name="org.apache.commons.math3.exception.MathIllegalStateException" />
  <import name="org.apache.commons.math3.exception.ZeroException" />
  <import name="org.apache.commons.math3.stat.descriptive.SummaryStatistics" />
  <import name="org.junit.Assert" />
  <import name="org.junit.Before" />
  <import name="org.junit.Test" />
  <import name="org.junit.runner.RunWith" />
  <class name="ValueServerTest" startLine="31">
    <javadoc>
      <text>* Test cases for the ValueServer class.</text>
      <version>$Id: ValueServerTest.java 1425978 2012-12-26 18:19:30Z psteitz $</version>
    </javadoc>
    <declaration type="ValueServer" name="vs" />
    <method type="void" name="setUp" startLine="43" endLine="47">
      <declaration type="URL" name="url" />
    </method>
    <javadoc>
      <text>* Generate 1000 random values and make sure they look OK.<br>
 * Note that there is a non-zero (but very small) probability that
 * these tests will fail even if the code is working as designed.</text>
    </javadoc>
    <method type="void" name="testNextDigest" startLine="55" endLine="79">
      <declaration type="double" name="next" />
      <declaration type="double" name="tolerance" />
      <declaration type="SummaryStatistics" name="stats" />
      <scope startLine="62" endLine="65" />
      <scope startLine="72" endLine="75" />
    </method>
    <javadoc>
      <text>* Verify that when provided with fixed seeds, stochastic modes
 * generate fixed sequences.  Verifies the fix for MATH-654.</text>
    </javadoc>
    <method type="void" name="testFixedSeed" startLine="86" endLine="95">
      <declaration type="ValueServer" name="valueServer" />
      <declaration type="URL" name="url" />
    </method>
    <javadoc>
      <text>* Do the check for {@link #testFixedSeed()}</text>
      <param>mode ValueServer mode</param>
    </javadoc>
    <method type="void" name="checkFixedSeed" startLine="101" endLine="113">
      <declaration type="double[][]" name="values" />
      <scope startLine="105" endLine="107" />
      <scope startLine="109" endLine="111" />
    </method>
    <javadoc>
      <text>* Make sure exception thrown if digest getNext is attempted
 * before loading empiricalDistribution.</text>
    </javadoc>
    <method type="void" name="testNextDigestFail" startLine="120" endLine="125">
      <scope startLine="121" endLine="124" />
      <scope startLine="124" endLine="124" />
    </method>
    <method type="void" name="testEmptyReplayFile" startLine="128" endLine="138">
      <scope startLine="129" endLine="135">
        <declaration type="URL" name="url" />
      </scope>
      <scope startLine="135" endLine="137">
        <comment>expected behavior</comment>
      </scope>
    </method>
    <method type="void" name="testEmptyDigestFile" startLine="141" endLine="151">
      <scope startLine="142" endLine="148">
        <declaration type="URL" name="url" />
      </scope>
      <scope startLine="148" endLine="150">
        <comment>expected behavior</comment>
      </scope>
    </method>
    <javadoc>
      <text>* Test ValueServer REPLAY_MODE using values in testData file.<br>
 * Check that the values 1,2,1001,1002 match data file values 1 and 2.
 * the sample data file.</text>
    </javadoc>
    <method type="void" name="testReplay" startLine="159" endLine="180">
      <declaration type="double" name="firstDataValue" />
      <declaration type="double" name="secondDataValue" />
      <declaration type="double" name="tolerance" />
      <declaration type="double" name="compareValue" />
      <scope startLine="170" endLine="172" />
      <comment>make sure no NPE</comment>
    </method>
    <javadoc>
      <text>* Test other ValueServer modes</text>
    </javadoc>
    <method type="void" name="testModes" startLine="186" endLine="209">
      <declaration type="double" name="val" />
      <scope startLine="202" endLine="206" />
      <scope startLine="206" endLine="208">
        <comment>ignored</comment>
      </scope>
    </method>
    <javadoc>
      <text>* Test fill</text>
    </javadoc>
    <method type="void" name="testFill" startLine="215" endLine="227">
      <declaration type="double[]" name="val" />
      <scope startLine="220" endLine="222" />
      <declaration type="double[]" name="v2" />
      <scope startLine="224" endLine="226" />
    </method>
    <javadoc>
      <text>* Test getters to make Clover happy</text>
    </javadoc>
    <method type="void" name="testProperties" startLine="233" endLine="239">
      <declaration type="URL" name="url" />
    </method>
  </class>
</source>
