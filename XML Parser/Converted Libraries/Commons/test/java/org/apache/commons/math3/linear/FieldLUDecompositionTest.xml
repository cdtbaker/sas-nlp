<?xml version="1.0" encoding="UTF-8"?>
<source package="org.apache.commons.math3.linear">
  <import name="org.junit.Test" />
  <import name="org.junit.Assert" />
  <import name="org.apache.commons.math3.TestUtils" />
  <import name="org.apache.commons.math3.fraction.Fraction" />
  <import name="org.apache.commons.math3.fraction.FractionField" />
  <class name="FieldLUDecompositionTest" startLine="27">
    <declaration type="Fraction[][]" name="testData" />
    <declaration type="Fraction[][]" name="testDataMinus" />
    <declaration type="Fraction[][]" name="luData" />
    <declaration type="Fraction[][]" name="singular" />
    <declaration type="Fraction[][]" name="bigSingular" />
    <javadoc>
      <text>* test dimensions</text>
    </javadoc>
    <method type="void" name="testDimensions" startLine="58" endLine="69">
      <declaration type="FieldMatrix<Fraction>" name="matrix" />
      <declaration type="FieldLUDecomposition<Fraction>" name="LU" />
    </method>
    <javadoc>
      <text>* test non-square matrix</text>
    </javadoc>
    <method type="void" name="testNonSquare" startLine="73" endLine="85">
      <scope startLine="74" endLine="82">
        <comment>we don't use FractionField.getInstance() for testing purposes</comment>
      </scope>
      <scope startLine="82" endLine="84">
        <comment>expected behavior</comment>
      </scope>
    </method>
    <javadoc>
      <text>* test PA = LU</text>
    </javadoc>
    <method type="void" name="testPAEqualLU" startLine="89" endLine="128">
      <declaration type="FieldMatrix<Fraction>" name="matrix" />
      <declaration type="FieldLUDecomposition<Fraction>" name="lu" />
      <declaration type="FieldMatrix<Fraction>" name="l" />
      <declaration type="FieldMatrix<Fraction>" name="u" />
      <declaration type="FieldMatrix<Fraction>" name="p" />
      <scope startLine="105" endLine="107" />
    </method>
    <javadoc>
      <text>* test that L is lower triangular with unit diagonal</text>
    </javadoc>
    <method type="void" name="testLLowerTriangular" startLine="132" endLine="141">
      <declaration type="FieldMatrix<Fraction>" name="matrix" />
      <declaration type="FieldMatrix<Fraction>" name="l" />
      <scope startLine="135" endLine="140">
        <scope startLine="137" endLine="139" />
      </scope>
    </method>
    <javadoc>
      <text>* test that U is upper triangular</text>
    </javadoc>
    <method type="void" name="testUUpperTriangular" startLine="145" endLine="153">
      <declaration type="FieldMatrix<Fraction>" name="matrix" />
      <declaration type="FieldMatrix<Fraction>" name="u" />
      <scope startLine="148" endLine="152">
        <scope startLine="149" endLine="151" />
      </scope>
    </method>
    <javadoc>
      <text>* test that P is a permutation matrix</text>
    </javadoc>
    <method type="void" name="testPPermutation" startLine="157" endLine="208">
      <declaration type="FieldMatrix<Fraction>" name="matrix" />
      <declaration type="FieldMatrix<Fraction>" name="p" />
      <declaration type="FieldMatrix<Fraction>" name="ppT" />
      <declaration type="FieldMatrix<Fraction>" name="id" />
      <scope startLine="165" endLine="167" />
      <scope startLine="170" endLine="187">
        <declaration type="int" name="zeroCount" />
        <declaration type="int" name="oneCount" />
        <declaration type="int" name="otherCount" />
        <scope startLine="174" endLine="183">
          <declaration type="Fraction" name="e" />
          <scope startLine="176" endLine="178" />
          <scope startLine="178" endLine="180" />
          <scope startLine="180" endLine="182" />
        </scope>
      </scope>
      <scope startLine="189" endLine="206">
        <declaration type="int" name="zeroCount" />
        <declaration type="int" name="oneCount" />
        <declaration type="int" name="otherCount" />
        <scope startLine="193" endLine="202">
          <declaration type="Fraction" name="e" />
          <scope startLine="195" endLine="197" />
          <scope startLine="197" endLine="199" />
          <scope startLine="199" endLine="201" />
        </scope>
      </scope>
    </method>
    <javadoc>
      <text>* test singular</text>
    </javadoc>
    <method type="void" name="testSingular" startLine="213" endLine="221">
      <declaration type="FieldLUDecomposition<Fraction>" name="lu" />
    </method>
    <javadoc>
      <text>* test matrices values</text>
    </javadoc>
    <method type="void" name="testMatricesValues1" startLine="225" endLine="262">
      <declaration type="FieldLUDecomposition<Fraction>" name="lu" />
      <declaration type="FieldMatrix<Fraction>[]" name="lRef" />
      <declaration type="FieldMatrix<Fraction>[]" name="uRef" />
      <declaration type="FieldMatrix<Fraction>[]" name="pRef" />
      <declaration type="int[]" name="pivotRef" />
      <declaration type="FieldMatrix<Fraction>" name="l" />
      <declaration type="FieldMatrix<Fraction>" name="u" />
      <declaration type="FieldMatrix<Fraction>" name="p" />
      <declaration type="int[]" name="pivot" />
      <scope startLine="253" endLine="255" />
      <comment>check values against known references</comment>
      <comment>check the same cached instance is returned the second time</comment>
    </method>
    <javadoc>
      <text>* test matrices values</text>
    </javadoc>
    <method type="void" name="testMatricesValues2" startLine="266" endLine="302">
      <declaration type="FieldLUDecomposition<Fraction>" name="lu" />
      <declaration type="FieldMatrix<Fraction>[]" name="lRef" />
      <declaration type="FieldMatrix<Fraction>[]" name="uRef" />
      <declaration type="FieldMatrix<Fraction>[]" name="pRef" />
      <declaration type="int[]" name="pivotRef" />
      <declaration type="FieldMatrix<Fraction>" name="l" />
      <declaration type="FieldMatrix<Fraction>" name="u" />
      <declaration type="FieldMatrix<Fraction>" name="p" />
      <declaration type="int[]" name="pivot" />
      <scope startLine="294" endLine="296" />
      <comment>check values against known references</comment>
      <comment>check the same cached instance is returned the second time</comment>
    </method>
    <comment>singular matrices</comment>
    <comment>4th row = 1st + 2nd</comment>
  </class>
</source>
