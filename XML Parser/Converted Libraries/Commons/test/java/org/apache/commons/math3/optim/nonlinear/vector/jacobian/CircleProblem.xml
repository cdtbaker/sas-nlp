<?xml version="1.0" encoding="UTF-8"?>
<source package="org.apache.commons.math3.optim.nonlinear.vector.jacobian">
  <import name="java.util.ArrayList" />
  <import name="org.apache.commons.math3.analysis.MultivariateVectorFunction" />
  <import name="org.apache.commons.math3.analysis.MultivariateMatrixFunction" />
  <import name="org.apache.commons.math3.util.MathUtils" />
  <import name="org.apache.commons.math3.util.FastMath" />
  <import name="org.apache.commons.math3.optim.nonlinear.vector.ModelFunction" />
  <import name="org.apache.commons.math3.optim.nonlinear.vector.ModelFunctionJacobian" />
  <class name="CircleProblem" startLine="27">
    <javadoc>
      <text>* Class that models a circle.
 * The parameters of problem are:
 * <ul>
 * <li>the x-coordinate of the circle center,</li>
 * <li>the y-coordinate of the circle center,</li>
 * <li>the radius of the circle.</li>
 * </ul>
 * The model functions are:
 * <ul>
 * <li>for each triplet (cx, cy, r), the (x, y) coordinates of a point on the
 * corresponding circle.</li>
 * </ul></text>
    </javadoc>
    <javadoc>
      <text>* Cloud of points assumed to be fitted by a circle.</text>
    </javadoc>
    <declaration type="ArrayList<double[]>" name="points" />
    <javadoc>
      <text>* Error on the x-coordinate of the points.</text>
    </javadoc>
    <declaration type="double" name="xSigma" />
    <javadoc>
      <text>* Error on the y-coordinate of the points.</text>
    </javadoc>
    <declaration type="double" name="ySigma" />
    <javadoc>
      <text>* Number of points on the circumference (when searching which
 * model point is closest to a given "observation".</text>
    </javadoc>
    <declaration type="int" name="resolution" />
    <javadoc>
      <param>xError Assumed error for the x-coordinate of the circle points.</param>
      <param>yError Assumed error for the y-coordinate of the circle points.</param>
      <param>searchResolution Number of points to try when searching the one
 * that is closest to a given "observed" point.</param>
    </javadoc>
    <method type="constructor" name="CircleProblem" startLine="60" endLine="65" />
    <javadoc>
      <param>xError Assumed error for the x-coordinate of the circle points.</param>
      <param>yError Assumed error for the y-coordinate of the circle points.</param>
    </javadoc>
    <method type="constructor" name="CircleProblem" startLine="72" endLine="74" />
    <method type="void" name="addPoint" startLine="76" endLine="78" />
    <method type="double[]" name="target" startLine="80" endLine="90">
      <declaration type="double[]" name="t" />
      <scope startLine="82" endLine="87">
        <declaration type="double[]" name="p" />
        <declaration type="int" name="index" />
      </scope>
    </method>
    <method type="double[]" name="weight" startLine="92" endLine="103">
      <declaration type="double" name="wX" />
      <declaration type="double" name="wY" />
      <declaration type="double[]" name="w" />
      <scope startLine="96" endLine="100">
        <declaration type="int" name="index" />
      </scope>
    </method>
    <method type="ModelFunction" name="getModelFunction" startLine="105" endLine="148">
      <method type="double[]" name="value" startLine="107" endLine="146">
        <declaration type="double" name="cx" />
        <declaration type="double" name="cy" />
        <declaration type="double" name="r" />
        <declaration type="double[]" name="model" />
        <declaration type="double" name="deltaTheta" />
        <scope startLine="115" endLine="143">
          <declaration type="double[]" name="p" />
          <declaration type="double" name="px" />
          <declaration type="double" name="py" />
          <declaration type="double" name="bestX" />
          <declaration type="double" name="bestY" />
          <declaration type="double" name="dMin" />
          <scope startLine="127" endLine="138">
            <declaration type="double" name="currentX" />
            <declaration type="double" name="currentY" />
            <declaration type="double" name="dX" />
            <declaration type="double" name="dY" />
            <declaration type="double" name="d" />
            <scope startLine="133" endLine="137" />
          </scope>
          <declaration type="int" name="index" />
          <comment>Find the angle for which the circle passes closest to the</comment>
          <comment>current point (using a resolution of 100 points along the</comment>
          <comment>circumference).</comment>
        </scope>
      </method>
    </method>
    <method type="ModelFunctionJacobian" name="getModelFunctionJacobian" startLine="150" endLine="156">
      <method type="double[][]" name="value" startLine="152" endLine="154" />
    </method>
    <method type="double[][]" name="jacobian" startLine="158" endLine="176">
      <declaration type="double[][]" name="jacobian" />
      <scope startLine="161" endLine="173">
        <declaration type="int" name="index" />
        <declaration type="double[]" name="p" />
        <comment>Partial derivative wrt x-coordinate of center.</comment>
        <comment>Partial derivative wrt y-coordinate of center.</comment>
        <comment>Partial derivative wrt radius.</comment>
      </scope>
    </method>
  </class>
</source>
