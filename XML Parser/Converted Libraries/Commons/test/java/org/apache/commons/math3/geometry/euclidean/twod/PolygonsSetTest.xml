<?xml version="1.0" encoding="UTF-8"?>
<source package="org.apache.commons.math3.geometry.euclidean.twod">
  <import name="java.util.ArrayList" />
  <import name="java.util.List" />
  <import name="org.apache.commons.math3.geometry.euclidean.oned.Interval" />
  <import name="org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet" />
  <import name="org.apache.commons.math3.geometry.euclidean.oned.Vector1D" />
  <import name="org.apache.commons.math3.geometry.partitioning.BSPTree" />
  <import name="org.apache.commons.math3.geometry.partitioning.Region" />
  <import name="org.apache.commons.math3.geometry.partitioning.Region.Location" />
  <import name="org.apache.commons.math3.geometry.partitioning.RegionFactory" />
  <import name="org.apache.commons.math3.geometry.partitioning.SubHyperplane" />
  <import name="org.apache.commons.math3.util.FastMath" />
  <import name="org.junit.Assert" />
  <import name="org.junit.Test" />
  <class name="PolygonsSetTest" startLine="34">
    <method type="void" name="testSimplyConnected" startLine="37" endLine="75">
      <declaration type="Vector2D[][][]" name="vertices" />
      <declaration type="PolygonsSet" name="set" />
    </method>
    <method type="void" name="testStair" startLine="78" endLine="100">
      <declaration type="Vector2D[][][]" name="vertices" />
      <declaration type="PolygonsSet" name="set" />
    </method>
    <method type="void" name="testHole" startLine="103" endLine="144">
      <declaration type="Vector2D[][][]" name="vertices" />
      <declaration type="PolygonsSet" name="set" />
    </method>
    <method type="void" name="testDisjointPolygons" startLine="147" endLine="177">
      <declaration type="Vector2D[][][]" name="vertices" />
      <declaration type="PolygonsSet" name="set" />
    </method>
    <method type="void" name="testOppositeHyperplanes" startLine="180" endLine="193">
      <declaration type="Vector2D[][][]" name="vertices" />
      <declaration type="PolygonsSet" name="set" />
    </method>
    <method type="void" name="testSingularPoint" startLine="196" endLine="211">
      <declaration type="Vector2D[][][]" name="vertices" />
      <declaration type="PolygonsSet" name="set" />
    </method>
    <method type="void" name="testLineIntersection" startLine="214" endLine="260">
      <declaration type="Vector2D[][][]" name="vertices" />
      <declaration type="PolygonsSet" name="set" />
      <declaration type="Line" name="l1" />
      <declaration type="SubLine" name="s1" />
      <declaration type="List<Interval>" name="i1" />
      <declaration type="Interval" name="v10" />
      <declaration type="Vector2D" name="p10Lower" />
      <declaration type="Vector2D" name="p10Upper" />
      <declaration type="Interval" name="v11" />
      <declaration type="Vector2D" name="p11Lower" />
      <declaration type="Vector2D" name="p11Upper" />
      <declaration type="Line" name="l2" />
      <declaration type="SubLine" name="s2" />
      <declaration type="List<Interval>" name="i2" />
      <declaration type="Interval" name="v20" />
      <declaration type="Vector2D" name="p20Lower" />
      <declaration type="Vector2D" name="p20Upper" />
    </method>
    <method type="void" name="testUnlimitedSubHyperplane" startLine="263" endLine="299">
      <declaration type="Vector2D[][][]" name="vertices1" />
      <declaration type="PolygonsSet" name="set1" />
      <declaration type="Vector2D[][][]" name="vertices2" />
      <declaration type="PolygonsSet" name="set2" />
      <declaration type="PolygonsSet" name="set" />
    </method>
    <method type="void" name="testUnion" startLine="302" endLine="363">
      <declaration type="Vector2D[][][]" name="vertices1" />
      <declaration type="PolygonsSet" name="set1" />
      <declaration type="Vector2D[][][]" name="vertices2" />
      <declaration type="PolygonsSet" name="set2" />
      <declaration type="PolygonsSet" name="set" />
    </method>
    <method type="void" name="testIntersection" startLine="366" endLine="412">
      <declaration type="Vector2D[][][]" name="vertices1" />
      <declaration type="PolygonsSet" name="set1" />
      <declaration type="Vector2D[][][]" name="vertices2" />
      <declaration type="PolygonsSet" name="set2" />
      <declaration type="PolygonsSet" name="set" />
    </method>
    <method type="void" name="testXor" startLine="415" endLine="483">
      <declaration type="Vector2D[][][]" name="vertices1" />
      <declaration type="PolygonsSet" name="set1" />
      <declaration type="Vector2D[][][]" name="vertices2" />
      <declaration type="PolygonsSet" name="set2" />
      <declaration type="PolygonsSet" name="set" />
    </method>
    <method type="void" name="testDifference" startLine="486" endLine="546">
      <declaration type="Vector2D[][][]" name="vertices1" />
      <declaration type="PolygonsSet" name="set1" />
      <declaration type="Vector2D[][][]" name="vertices2" />
      <declaration type="PolygonsSet" name="set2" />
      <declaration type="PolygonsSet" name="set" />
    </method>
    <method type="void" name="testEmptyDifference" startLine="549" endLine="569">
      <declaration type="Vector2D[][][]" name="vertices1" />
      <declaration type="PolygonsSet" name="set1" />
      <declaration type="Vector2D[][][]" name="vertices2" />
      <declaration type="PolygonsSet" name="set2" />
    </method>
    <method type="void" name="testChoppedHexagon" startLine="572" endLine="605">
      <declaration type="double" name="pi6" />
      <declaration type="double" name="sqrt3" />
      <declaration type="SubLine[]" name="hyp" />
      <declaration type="BSPTree<Euclidean2D>" name="tree" />
      <scope startLine="591" endLine="593" />
      <declaration type="PolygonsSet" name="set" />
      <declaration type="SubLine" name="splitter" />
      <declaration type="PolygonsSet" name="slice" />
    </method>
    <method type="void" name="testConcentric" startLine="608" endLine="635">
      <declaration type="double" name="h" />
      <declaration type="Vector2D[][][]" name="vertices1" />
      <declaration type="PolygonsSet" name="set1" />
      <declaration type="Vector2D[][][]" name="vertices2" />
      <declaration type="PolygonsSet" name="set2" />
    </method>
    <method type="void" name="testBug20040520" startLine="638" endLine="763">
      <declaration type="BSPTree<Euclidean2D>" name="a0" />
      <declaration type="BSPTree<Euclidean2D>" name="a1" />
      <declaration type="BSPTree<Euclidean2D>" name="a2" />
      <declaration type="BSPTree<Euclidean2D>" name="a3" />
      <declaration type="BSPTree<Euclidean2D>" name="a4" />
      <declaration type="BSPTree<Euclidean2D>" name="a5" />
      <declaration type="BSPTree<Euclidean2D>" name="a6" />
      <declaration type="BSPTree<Euclidean2D>" name="a7" />
      <declaration type="BSPTree<Euclidean2D>" name="a8" />
      <declaration type="BSPTree<Euclidean2D>" name="a9" />
      <declaration type="BSPTree<Euclidean2D>" name="b0" />
      <declaration type="BSPTree<Euclidean2D>" name="b1" />
      <declaration type="BSPTree<Euclidean2D>" name="b2" />
      <declaration type="BSPTree<Euclidean2D>" name="b3" />
      <declaration type="BSPTree<Euclidean2D>" name="b4" />
      <declaration type="BSPTree<Euclidean2D>" name="b5" />
      <declaration type="BSPTree<Euclidean2D>" name="b6" />
      <declaration type="PolygonsSet" name="c" />
    </method>
    <method type="void" name="testBug20041003" startLine="766" endLine="801">
      <declaration type="Line[]" name="l" />
      <declaration type="BSPTree<Euclidean2D>" name="node1" />
      <declaration type="BSPTree<Euclidean2D>" name="node2" />
      <declaration type="BSPTree<Euclidean2D>" name="node3" />
      <declaration type="BSPTree<Euclidean2D>" name="node4" />
      <declaration type="PolygonsSet" name="set" />
    </method>
    <method type="void" name="testSqueezedHexa" startLine="804" endLine="809">
      <declaration type="PolygonsSet" name="set" />
    </method>
    <method type="void" name="testIssue880Simplified" startLine="812" endLine="828">
      <declaration type="Vector2D[][]" name="vertices1" />
      <declaration type="PolygonsSet" name="set1" />
    </method>
    <method type="void" name="testIssue880Complete" startLine="831" endLine="984">
      <declaration type="Vector2D[][]" name="vertices1" />
      <declaration type="PolygonsSet" name="set1" />
      <declaration type="Vector2D[][]" name="vertices2" />
      <declaration type="PolygonsSet" name="set2" />
      <declaration type="PolygonsSet" name="set" />
      <declaration type="Vector2D[][]" name="verticies" />
    </method>
    <method type="PolygonsSet" name="buildSet" startLine="986" endLine="995">
      <declaration type="ArrayList<SubHyperplane<Euclidean2D>>" name="edges" />
      <scope startLine="988" endLine="993">
        <declaration type="int" name="l" />
        <scope startLine="990" endLine="992" />
      </scope>
    </method>
    <method type="SubHyperplane<Euclidean2D>" name="buildLine" startLine="997" endLine="999" />
    <method type="double" name="intersectionAbscissa" startLine="1001" endLine="1004">
      <declaration type="Vector2D" name="p" />
    </method>
    <method type="SubHyperplane<Euclidean2D>" name="buildHalfLine" startLine="1007" endLine="1016">
      <declaration type="Line" name="line" />
      <declaration type="double" name="lower" />
      <declaration type="double" name="upper" />
    </method>
    <method type="SubHyperplane<Euclidean2D>" name="buildSegment" startLine="1018" endLine="1023">
      <declaration type="Line" name="line" />
      <declaration type="double" name="lower" />
      <declaration type="double" name="upper" />
    </method>
    <method type="void" name="checkPoints" startLine="1026" endLine="1030">
      <scope startLine="1027" endLine="1029" />
    </method>
    <method type="boolean" name="checkInSegment" startLine="1034" endLine="1046">
      <declaration type="Line" name="line" />
      <scope startLine="1036" endLine="1043">
        <declaration type="double" name="x" />
        <declaration type="double" name="x1" />
        <declaration type="double" name="x2" />
      </scope>
      <scope startLine="1043" endLine="1045" />
    </method>
    <method type="void" name="checkVertices" startLine="1049" endLine="1081">
      <scope startLine="1052" endLine="1065">
        <scope startLine="1053" endLine="1064">
          <declaration type="boolean" name="inSegment" />
          <declaration type="Vector2D" name="p" />
          <scope startLine="1056" endLine="1062">
            <declaration type="Vector2D[]" name="loop" />
            <declaration type="int" name="length" />
            <scope startLine="1059" endLine="1061" />
          </scope>
        </scope>
      </scope>
      <scope startLine="1068" endLine="1079">
        <scope startLine="1069" endLine="1078">
          <declaration type="double" name="min" />
          <scope startLine="1071" endLine="1076">
            <scope startLine="1072" endLine="1075" />
          </scope>
        </scope>
      </scope>
      <comment>each rebuilt vertex should be in a segment joining two original vertices</comment>
      <comment>each original vertex should have a corresponding rebuilt vertex</comment>
    </method>
  </class>
</source>
