<?xml version="1.0" encoding="UTF-8"?>
<source package="org.apache.commons.math3.optimization.general">
  <import name="java.awt.geom.Point2D" />
  <import name="org.apache.commons.math3.random.RandomGenerator" />
  <import name="org.apache.commons.math3.random.Well44497b" />
  <import name="org.apache.commons.math3.distribution.RealDistribution" />
  <import name="org.apache.commons.math3.distribution.UniformRealDistribution" />
  <import name="org.apache.commons.math3.distribution.NormalDistribution" />
  <class name="RandomStraightLinePointGenerator" startLine="27">
    <javadoc>
      <text>* Factory for generating a cloud of points that approximate a straight line.</text>
    </javadoc>
    <javadoc>
      <text>* Slope.</text>
    </javadoc>
    <declaration type="double" name="slope" />
    <javadoc>
      <text>* Intercept.</text>
    </javadoc>
    <declaration type="double" name="intercept" />
    <javadoc>
      <text>* RNG for the x-coordinate.</text>
    </javadoc>
    <declaration type="RealDistribution" name="x" />
    <javadoc>
      <text>* RNG for the error on the y-coordinate.</text>
    </javadoc>
    <declaration type="RealDistribution" name="error" />
    <javadoc>
      <text>* The generator will create a cloud of points whose x-coordinates
 * will be randomly sampled between {@code xLo} and {@code xHi}, and
 * the corresponding y-coordinates will be computed as
 * <pre><code>
 * y = a x + b + N(0, error)
 * </code></pre>
 * where {@code N(mean, sigma)} is a Gaussian distribution with the
 * given mean and standard deviation.</text>
      <param>a Slope.</param>
      <param>b Intercept.</param>
      <param>sigma Standard deviation on the y-coordinate of the point.</param>
      <param>lo Lowest value of the x-coordinate.</param>
      <param>hi Highest value of the x-coordinate.</param>
      <param>seed RNG seed.</param>
    </javadoc>
    <method type="constructor" name="RandomStraightLinePointGenerator" startLine="62" endLine="70">
      <declaration type="RandomGenerator" name="rng" />
    </method>
    <javadoc>
      <text>* Point generator.</text>
      <param>n Number of points to create.</param>
      <return>the cloud of {@code n} points.</return>
    </javadoc>
    <method type="Point2D.Double[]" name="generate" startLine="78" endLine="84">
      <declaration type="Point2D.Double[]" name="cloud" />
      <scope startLine="80" endLine="82" />
    </method>
    <javadoc>
      <text>* Create one point.</text>
      <return>a point.</return>
    </javadoc>
    <method type="Point2D.Double" name="create" startLine="91" endLine="97">
      <declaration type="double" name="abscissa" />
      <declaration type="double" name="yModel" />
      <declaration type="double" name="ordinate" />
    </method>
  </class>
</source>
