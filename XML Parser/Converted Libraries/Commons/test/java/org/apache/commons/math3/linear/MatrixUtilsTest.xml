<?xml version="1.0" encoding="UTF-8"?>
<source package="org.apache.commons.math3.linear">
  <import name="java.math.BigDecimal" />
  <import name="org.apache.commons.math3.TestUtils" />
  <import name="org.apache.commons.math3.fraction.BigFraction" />
  <import name="org.apache.commons.math3.fraction.Fraction" />
  <import name="org.apache.commons.math3.fraction.FractionConversionException" />
  <import name="org.apache.commons.math3.fraction.FractionField" />
  <import name="org.apache.commons.math3.exception.NullArgumentException" />
  <import name="org.apache.commons.math3.exception.NotStrictlyPositiveException" />
  <import name="org.apache.commons.math3.exception.MathIllegalArgumentException" />
  <import name="org.junit.Assert" />
  <import name="org.junit.Test" />
  <class name="MatrixUtilsTest" startLine="31">
    <javadoc>
      <text>* Test cases for the {@link MatrixUtils} class.</text>
      <version>$Id: MatrixUtilsTest.java 1403587 2012-10-30 00:21:20Z erans $</version>
    </javadoc>
    <declaration type="double[][]" name="testData" />
    <declaration type="double[][]" name="nullMatrix" />
    <declaration type="double[]" name="row" />
    <declaration type="BigDecimal[]" name="bigRow" />
    <declaration type="String[]" name="stringRow" />
    <declaration type="Fraction[]" name="fractionRow" />
    <declaration type="double[][]" name="rowMatrix" />
    <declaration type="BigDecimal[][]" name="bigRowMatrix" />
    <declaration type="String[][]" name="stringRowMatrix" />
    <declaration type="Fraction[][]" name="fractionRowMatrix" />
    <declaration type="double[]" name="col" />
    <declaration type="BigDecimal[]" name="bigCol" />
    <declaration type="String[]" name="stringCol" />
    <declaration type="Fraction[]" name="fractionCol" />
    <declaration type="double[]" name="nullDoubleArray" />
    <declaration type="double[][]" name="colMatrix" />
    <declaration type="BigDecimal[][]" name="bigColMatrix" />
    <declaration type="String[][]" name="stringColMatrix" />
    <declaration type="Fraction[][]" name="fractionColMatrix" />
    <method type="void" name="testCreateRealMatrix" startLine="68" endLine="89">
      <scope startLine="71" endLine="74">
        <comment>ragged</comment>
      </scope>
      <scope startLine="74" endLine="76">
        <comment>expected</comment>
      </scope>
      <scope startLine="77" endLine="80">
        <comment>no columns</comment>
      </scope>
      <scope startLine="80" endLine="82">
        <comment>expected</comment>
      </scope>
      <scope startLine="83" endLine="86">
        <comment>null</comment>
      </scope>
      <scope startLine="86" endLine="88">
        <comment>expected</comment>
      </scope>
    </method>
    <method type="void" name="testcreateFieldMatrix" startLine="92" endLine="115">
      <scope startLine="97" endLine="100">
        <comment>ragged</comment>
      </scope>
      <scope startLine="100" endLine="102">
        <comment>expected</comment>
      </scope>
      <scope startLine="103" endLine="106">
        <comment>no columns</comment>
      </scope>
      <scope startLine="106" endLine="108">
        <comment>expected</comment>
      </scope>
      <scope startLine="109" endLine="112">
        <comment>null</comment>
      </scope>
      <scope startLine="112" endLine="114">
        <comment>expected</comment>
      </scope>
    </method>
    <method type="void" name="testCreateRowRealMatrix" startLine="118" endLine="133">
      <scope startLine="121" endLine="124">
        <comment>empty</comment>
      </scope>
      <scope startLine="124" endLine="126">
        <comment>expected</comment>
      </scope>
      <scope startLine="127" endLine="130">
        <comment>null</comment>
      </scope>
      <scope startLine="130" endLine="132">
        <comment>expected</comment>
      </scope>
    </method>
    <method type="void" name="testCreateRowFieldMatrix" startLine="136" endLine="153">
      <scope startLine="141" endLine="144">
        <comment>empty</comment>
      </scope>
      <scope startLine="144" endLine="146">
        <comment>expected</comment>
      </scope>
      <scope startLine="147" endLine="150">
        <comment>null</comment>
      </scope>
      <scope startLine="150" endLine="152">
        <comment>expected</comment>
      </scope>
    </method>
    <method type="void" name="testCreateColumnRealMatrix" startLine="156" endLine="171">
      <scope startLine="159" endLine="162">
        <comment>empty</comment>
      </scope>
      <scope startLine="162" endLine="164">
        <comment>expected</comment>
      </scope>
      <scope startLine="165" endLine="168">
        <comment>null</comment>
      </scope>
      <scope startLine="168" endLine="170">
        <comment>expected</comment>
      </scope>
    </method>
    <method type="void" name="testCreateColumnFieldMatrix" startLine="174" endLine="192">
      <scope startLine="180" endLine="183">
        <comment>empty</comment>
      </scope>
      <scope startLine="183" endLine="185">
        <comment>expected</comment>
      </scope>
      <scope startLine="186" endLine="189">
        <comment>null</comment>
      </scope>
      <scope startLine="189" endLine="191">
        <comment>expected</comment>
      </scope>
    </method>
    <javadoc>
      <text>* Verifies that the matrix is an identity matrix</text>
    </javadoc>
    <method type="void" name="checkIdentityMatrix" startLine="197" endLine="207">
      <scope startLine="198" endLine="206">
        <scope startLine="199" endLine="205">
          <scope startLine="200" endLine="202" />
          <scope startLine="202" endLine="204" />
        </scope>
      </scope>
    </method>
    <method type="void" name="testCreateIdentityMatrix" startLine="210" endLine="220">
      <scope startLine="214" endLine="217" />
      <scope startLine="217" endLine="219">
        <comment>expected</comment>
      </scope>
    </method>
    <javadoc>
      <text>* Verifies that the matrix is an identity matrix</text>
    </javadoc>
    <method type="void" name="checkIdentityFieldMatrix" startLine="225" endLine="235">
      <scope startLine="226" endLine="234">
        <scope startLine="227" endLine="233">
          <scope startLine="228" endLine="230" />
          <scope startLine="230" endLine="232" />
        </scope>
      </scope>
    </method>
    <method type="void" name="testcreateFieldIdentityMatrix" startLine="238" endLine="248">
      <scope startLine="242" endLine="245" />
      <scope startLine="245" endLine="247">
        <comment>expected</comment>
      </scope>
    </method>
    <method type="void" name="testBigFractionConverter" startLine="251" endLine="261">
      <declaration type="BigFraction[][]" name="bfData" />
      <declaration type="FieldMatrix<BigFraction>" name="m" />
      <declaration type="RealMatrix" name="converted" />
      <declaration type="RealMatrix" name="reference" />
    </method>
    <method type="void" name="testFractionConverter" startLine="264" endLine="274">
      <declaration type="Fraction[][]" name="fData" />
      <declaration type="FieldMatrix<Fraction>" name="m" />
      <declaration type="RealMatrix" name="converted" />
      <declaration type="RealMatrix" name="reference" />
    </method>
    <method type="Fraction[][]" name="asFraction" startLine="276" endLine="291">
      <declaration type="Fraction[]" name="d" />
      <scope startLine="278" endLine="287">
        <scope startLine="279" endLine="286">
          <declaration type="double[]" name="dataI" />
          <declaration type="Fraction[]" name="dI" />
          <scope startLine="282" endLine="284" />
        </scope>
      </scope>
      <scope startLine="287" endLine="289" />
    </method>
    <method type="Fraction[]" name="asFraction" startLine="293" endLine="303">
      <declaration type="Fraction[]" name="d" />
      <scope startLine="295" endLine="299">
        <scope startLine="296" endLine="298" />
      </scope>
      <scope startLine="299" endLine="301" />
    </method>
    <method type="void" name="testSolveLowerTriangularSystem" startLine="306" endLine="313">
      <declaration type="RealMatrix[]" name="rm" />
      <declaration type="RealVector[]" name="b" />
    </method>
    <method type="void" name="testSolveUpperTriangularSystem" startLine="320" endLine="327">
      <declaration type="RealMatrix[]" name="rm" />
      <declaration type="RealVector[]" name="b" />
    </method>
    <javadoc>
      <text>* This test should probably be replaced by one that could show
 * whether this algorithm can sometimes perform better (precision- or
 * performance-wise) than the direct inversion of the whole matrix.</text>
    </javadoc>
    <method type="void" name="testBlockInverse" startLine="335" endLine="365">
      <declaration type="double[][]" name="data" />
      <declaration type="RealMatrix" name="m" />
      <declaration type="int" name="len" />
      <declaration type="double" name="tol" />
      <scope startLine="347" endLine="364">
        <declaration type="RealMatrix" name="mInv" />
        <declaration type="RealMatrix" name="id" />
        <scope startLine="352" endLine="363">
          <scope startLine="353" endLine="362">
            <declaration type="double" name="entry" />
            <scope startLine="355" endLine="358" />
            <scope startLine="358" endLine="361" />
          </scope>
        </scope>
        <comment>Check that we recovered the identity matrix.</comment>
      </scope>
    </method>
    <method type="void" name="testIsSymmetric" startLine="368" endLine="384">
      <declaration type="double" name="eps" />
      <declaration type="double[][]" name="dataSym" />
      <declaration type="double[][]" name="dataNonSym" />
    </method>
    <method type="void" name="testIsSymmetricTolerance" startLine="387" endLine="415">
      <declaration type="double" name="eps" />
      <declaration type="double[][]" name="dataSym1" />
      <declaration type="double[][]" name="dataSym2" />
      <declaration type="double[][]" name="dataNonSym1" />
      <declaration type="double[][]" name="dataNonSym2" />
    </method>
    <method type="void" name="testCheckSymmetric1" startLine="418" endLine="425">
      <declaration type="double[][]" name="dataSym" />
    </method>
    <method type="void" name="testCheckSymmetric2" startLine="428" endLine="435">
      <declaration type="double[][]" name="dataNonSym" />
    </method>
    <comment>Taken from R manual http:stat.ethz.chR-manualR-patchedlibrarybasehtmlbacksolve.html</comment>
  </class>
</source>
