<?xml version="1.0" encoding="UTF-8"?>
<source package="org.apache.commons.math3.ode">
  <import name="org.apache.commons.math3.ode.FirstOrderDifferentialEquations" />
  <import name="org.apache.commons.math3.ode.events.EventHandler" />
  <class name="TestProblemAbstract" startLine="23">
    <implements name="FirstOrderDifferentialEquations" />
    <javadoc>
      <text>* This class is used as the base class of the problems that are
 * integrated during the junit tests for the ODE integrators.</text>
    </javadoc>
    <javadoc>
      <text>* Dimension of the problem.</text>
    </javadoc>
    <declaration type="int" name="n" />
    <javadoc>
      <text>* Number of functions calls.</text>
    </javadoc>
    <declaration type="int" name="calls" />
    <javadoc>
      <text>* Initial time</text>
    </javadoc>
    <declaration type="double" name="t0" />
    <javadoc>
      <text>* Initial state</text>
    </javadoc>
    <declaration type="double[]" name="y0" />
    <javadoc>
      <text>* Final time</text>
    </javadoc>
    <declaration type="double" name="t1" />
    <javadoc>
      <text>* Error scale</text>
    </javadoc>
    <declaration type="double[]" name="errorScale" />
    <javadoc>
      <text>* Simple constructor.</text>
    </javadoc>
    <method type="constructor" name="TestProblemAbstract" startLine="51" endLine="58" />
    <javadoc>
      <text>* Copy constructor.</text>
      <param>problem problem to copy</param>
    </javadoc>
    <method type="constructor" name="TestProblemAbstract" startLine="64" endLine="79">
      <scope startLine="68" endLine="70" />
      <scope startLine="70" endLine="72" />
      <scope startLine="73" endLine="75" />
      <scope startLine="75" endLine="77" />
    </method>
    <method name="copy" type="TestProblemAbstract" startLine="81" endLine="85" />
    <javadoc>
      <text>* Copy operation.</text>
      <return>a copy of the instance</return>
    </javadoc>
    <javadoc>
      <text>* Set the initial conditions</text>
      <param>t0 initial time</param>
      <param>y0 initial state vector</param>
    </javadoc>
    <method type="void" name="setInitialConditions" startLine="92" endLine="97" />
    <javadoc>
      <text>* Set the final conditions.</text>
      <param>t1 final time</param>
    </javadoc>
    <method type="void" name="setFinalConditions" startLine="103" endLine="105" />
    <javadoc>
      <text>* Set the error scale</text>
      <param>errorScale error scale</param>
    </javadoc>
    <method type="void" name="setErrorScale" startLine="111" endLine="113" />
    <method type="int" name="getDimension" startLine="115" endLine="117" />
    <javadoc>
      <text>* Get the initial time.</text>
      <return>initial time</return>
    </javadoc>
    <method type="double" name="getInitialTime" startLine="123" endLine="125" />
    <javadoc>
      <text>* Get the initial state vector.</text>
      <return>initial state vector</return>
    </javadoc>
    <method type="double[]" name="getInitialState" startLine="131" endLine="133" />
    <javadoc>
      <text>* Get the final time.</text>
      <return>final time</return>
    </javadoc>
    <method type="double" name="getFinalTime" startLine="139" endLine="141" />
    <javadoc>
      <text>* Get the error scale.</text>
      <return>error scale</return>
    </javadoc>
    <method type="double[]" name="getErrorScale" startLine="147" endLine="149" />
    <javadoc>
      <text>* Get the events handlers.</text>
      <return>events handlers</return>
    </javadoc>
    <method type="EventHandler[]" name="getEventsHandlers" startLine="154" endLine="156" />
    <javadoc>
      <text>* Get the theoretical events times.</text>
      <return>theoretical events times</return>
    </javadoc>
    <method type="double[]" name="getTheoreticalEventsTimes" startLine="162" endLine="164" />
    <javadoc>
      <text>* Get the number of calls.</text>
      <return>nuber of calls</return>
    </javadoc>
    <method type="int" name="getCalls" startLine="170" endLine="172" />
    <method type="void" name="computeDerivatives" startLine="174" endLine="177" />
    <method name="doComputeDerivatives" type="void" startLine="179" endLine="179" />
    <method name="computeTheoreticalState" type="double[]" startLine="181" endLine="186" />
    <javadoc>
      <text>* Compute the theoretical state at the specified time.</text>
      <param>t time at which the state is required</param>
      <return>state vector at time t</return>
    </javadoc>
  </class>
</source>
