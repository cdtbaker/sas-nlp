<?xml version="1.0" encoding="UTF-8"?>
<source package="org.apache.commons.math3.optimization.direct">
  <import name="org.apache.commons.math3.analysis.MultivariateFunction" />
  <import name="org.apache.commons.math3.optimization.GoalType" />
  <import name="org.apache.commons.math3.optimization.PointValuePair" />
  <import name="org.junit.Assert" />
  <import name="org.junit.Test" />
  <class name="MultivariateFunctionMappingAdapterTest" startLine="27">
    <method type="void" name="testStartSimplexInsideRange" startLine="30" endLine="53">
      <declaration type="BiQuadratic" name="biQuadratic" />
      <declaration type="MultivariateFunctionMappingAdapter" name="wrapped" />
      <declaration type="SimplexOptimizer" name="optimizer" />
      <declaration type="PointValuePair[]" name="optimum" />
      <declaration type="double[]" name="bounded" />
    </method>
    <method type="void" name="testOptimumOutsideRange" startLine="56" endLine="79">
      <declaration type="BiQuadratic" name="biQuadratic" />
      <declaration type="MultivariateFunctionMappingAdapter" name="wrapped" />
      <declaration type="SimplexOptimizer" name="optimizer" />
      <declaration type="PointValuePair[]" name="optimum" />
      <declaration type="double[]" name="bounded" />
    </method>
    <method type="void" name="testUnbounded" startLine="82" endLine="107">
      <declaration type="BiQuadratic" name="biQuadratic" />
      <declaration type="MultivariateFunctionMappingAdapter" name="wrapped" />
      <declaration type="SimplexOptimizer" name="optimizer" />
      <declaration type="PointValuePair[]" name="optimum" />
      <declaration type="double[]" name="bounded" />
    </method>
    <method type="void" name="testHalfBounded" startLine="110" endLine="135">
      <declaration type="BiQuadratic" name="biQuadratic" />
      <declaration type="MultivariateFunctionMappingAdapter" name="wrapped" />
      <declaration type="SimplexOptimizer" name="optimizer" />
      <declaration type="PointValuePair[]" name="optimum" />
      <declaration type="double[]" name="bounded" />
    </method>
    <class name="BiQuadratic" startLine="137">
      <implements name="MultivariateFunction" />
      <declaration type="double" name="xOptimum" />
      <declaration type="double" name="yOptimum" />
      <declaration type="double" name="xMin" />
      <declaration type="double" name="xMax" />
      <declaration type="double" name="yMin" />
      <declaration type="double" name="yMax" />
      <method type="constructor" name="BiQuadratic" startLine="149" endLine="156" />
      <method type="double" name="value" startLine="158" endLine="170">
        <declaration type="double" name="dx" />
        <declaration type="double" name="dy" />
        <comment>the function should never be called with out of range points</comment>
      </method>
      <method type="double[]" name="getLower" startLine="172" endLine="174" />
      <method type="double[]" name="getUpper" startLine="176" endLine="178" />
      <method type="double" name="getBoundedXOptimum" startLine="180" endLine="182" />
      <method type="double" name="getBoundedYOptimum" startLine="184" endLine="186" />
    </class>
  </class>
</source>
