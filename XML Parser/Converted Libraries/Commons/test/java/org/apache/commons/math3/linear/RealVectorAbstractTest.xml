<?xml version="1.0" encoding="UTF-8"?>
<source package="org.apache.commons.math3.linear">
  <import name="java.io.Serializable" />
  <import name="java.util.Arrays" />
  <import name="java.util.Iterator" />
  <import name="java.util.NoSuchElementException" />
  <import name="org.apache.commons.math3.TestUtils" />
  <import name="org.apache.commons.math3.analysis.UnivariateFunction" />
  <import name="org.apache.commons.math3.analysis.function.Abs" />
  <import name="org.apache.commons.math3.analysis.function.Acos" />
  <import name="org.apache.commons.math3.analysis.function.Asin" />
  <import name="org.apache.commons.math3.analysis.function.Atan" />
  <import name="org.apache.commons.math3.analysis.function.Cbrt" />
  <import name="org.apache.commons.math3.analysis.function.Ceil" />
  <import name="org.apache.commons.math3.analysis.function.Cos" />
  <import name="org.apache.commons.math3.analysis.function.Cosh" />
  <import name="org.apache.commons.math3.analysis.function.Exp" />
  <import name="org.apache.commons.math3.analysis.function.Expm1" />
  <import name="org.apache.commons.math3.analysis.function.Floor" />
  <import name="org.apache.commons.math3.analysis.function.Inverse" />
  <import name="org.apache.commons.math3.analysis.function.Log" />
  <import name="org.apache.commons.math3.analysis.function.Log10" />
  <import name="org.apache.commons.math3.analysis.function.Log1p" />
  <import name="org.apache.commons.math3.analysis.function.Power" />
  <import name="org.apache.commons.math3.analysis.function.Rint" />
  <import name="org.apache.commons.math3.analysis.function.Signum" />
  <import name="org.apache.commons.math3.analysis.function.Sin" />
  <import name="org.apache.commons.math3.analysis.function.Sinh" />
  <import name="org.apache.commons.math3.analysis.function.Sqrt" />
  <import name="org.apache.commons.math3.analysis.function.Tan" />
  <import name="org.apache.commons.math3.analysis.function.Tanh" />
  <import name="org.apache.commons.math3.analysis.function.Ulp" />
  <import name="org.apache.commons.math3.exception.DimensionMismatchException" />
  <import name="org.apache.commons.math3.exception.MathArithmeticException" />
  <import name="org.apache.commons.math3.exception.NotPositiveException" />
  <import name="org.apache.commons.math3.exception.NumberIsTooSmallException" />
  <import name="org.apache.commons.math3.exception.OutOfRangeException" />
  <import name="org.apache.commons.math3.util.FastMath" />
  <import name="org.apache.commons.math3.util.MathArrays" />
  <import name="org.junit.Assert" />
  <import name="org.junit.Ignore" />
  <import name="org.junit.Test" />
  <class name="RealVectorAbstractTest" startLine="62">
    <javadoc>
      <text>* <p>
 * This is an attempt at covering most particular cases of combining two
 * values. Here {@code x} is the value returned by{@link #getPreferredEntryValue()}, while {@code y} and {@code z} are two
 * "normal" values.
 * </p>
 * <ol>
 * <li>
 * Addition: the following cases should be covered
 * <ul>
 * <li>{@code (2 * x) + (-x)}</li>
 * <li>{@code (-x) + 2 * x}</li>
 * <li>{@code x + y}</li>
 * <li>{@code y + x}</li>
 * <li>{@code y + z}</li>
 * <li>{@code y + (x - y)}</li>
 * <li>{@code (y - x) + x}</li>
 * </ul>
 * The values to be considered are:{@code x, y, z, 2 * x, -x, x - y, y - x}.
 * </li>
 * <li>
 * Subtraction: the following cases should be covered
 * <ul>
 * <li>{@code (2 * x) - x}</li>
 * <li>{@code x - y}</li>
 * <li>{@code y - x}</li>
 * <li>{@code y - z}</li>
 * <li>{@code y - (y - x)}</li>
 * <li>{@code (y + x) - y}</li>
 * </ul>
 * The values to be considered are: {@code x, y, z, x + y, y - x}.
 * </li>
 * <li>
 * Multiplication
 * <ul>
 * <li>{@code (x * x) * (1 / x)}</li>
 * <li>{@code (1 / x) * (x * x)}</li>
 * <li>{@code x * y}</li>
 * <li>{@code y * x}</li>
 * <li>{@code y * z}</li>
 * </ul>
 * The values to be considered are: {@code x, y, z, 1 / x, x * x}.
 * </li>
 * <li>
 * Division
 * <ul>
 * <li>{@code (x * x) / x}</li>
 * <li>{@code x / y}</li>
 * <li>{@code y / x}</li>
 * <li>{@code y / z}</li>
 * </ul>
 * The values to be considered are: {@code x, y, z, x * x}.
 * </li>
 * </ol>
 * Also to be considered {@code NaN}, {@code POSITIVE_INFINITY},{@code NEGATIVE_INFINITY}, {@code +0.0}, {@code -0.0}.</text>
    </javadoc>
    <declaration type="double[]" name="values" />
    <method name="create" type="RealVector" startLine="129" endLine="139" />
    <javadoc>
      <text>* Creates a new instance of {@link RealVector}, with specified entries.
 * The returned vector must be of the type currently tested. It should be
 * noted that some tests assume that no references to the specified{@code double[]} are kept in the returned object: if necessary, defensive
 * copy of this array should be made.</text>
      <param>data the entries of the vector to be created</param>
      <return>a new {@link RealVector} of the type to be tested</return>
    </javadoc>
    <javadoc>
      <text>* Creates a new instance of {@link RealVector}, with specified entries.
 * The type of the returned vector must be different from the type currently
 * tested. It should be noted that some tests assume that no references to
 * the specified {@code double[]} are kept in the returned object: if
 * necessary, defensive copy of this array should be made.</text>
      <param>data the entries of the vector to be created</param>
      <return>a new {@link RealVector} of an alien type</return>
    </javadoc>
    <method type="RealVector" name="createAlien" startLine="151" endLine="153" />
    <javadoc>
      <text>* Returns a preferred value of the entries, to be tested specifically. Some
 * implementations of {@link RealVector} (e.g. {@link OpenMapRealVector}) do
 * not store specific values of entries. In order to ensure that all tests
 * take into account this specific value, some entries of the vectors to be
 * tested are deliberately set to the value returned by the present method.
 * The default implementation returns {@code 0.0}.</text>
      <return>a value which <em>should</em> be present in all vectors to be
 * tested</return>
    </javadoc>
    <method type="double" name="getPreferredEntryValue" startLine="166" endLine="168" />
    <method type="constructor" name="RealVectorAbstractTest" startLine="170" endLine="185">
      <declaration type="double" name="x" />
      <declaration type="double" name="y" />
      <declaration type="double" name="z" />
      <comment>Make sure that x, y, z are three different values. Also, x is the
 preferred value (e.g. the value which is not stored in sparse
 implementations).</comment>
    </method>
    <method type="void" name="testGetDimension" startLine="188" endLine="195">
      <declaration type="double" name="x" />
      <declaration type="double[]" name="data1" />
      <declaration type="double" name="y" />
      <declaration type="double[]" name="data2" />
    </method>
    <method type="void" name="testGetEntry" startLine="198" endLine="205">
      <declaration type="double" name="x" />
      <declaration type="double[]" name="data" />
      <declaration type="RealVector" name="v" />
      <scope startLine="202" endLine="204" />
    </method>
    <method type="void" name="testGetEntryInvalidIndex1" startLine="208" endLine="210" />
    <method type="void" name="testGetEntryInvalidIndex2" startLine="213" endLine="215" />
    <method type="void" name="testSetEntry" startLine="218" endLine="251">
      <declaration type="double" name="x" />
      <declaration type="double[]" name="data" />
      <declaration type="double[]" name="expected" />
      <declaration type="RealVector" name="actual" />
      <scope startLine="227" endLine="236">
        <declaration type="double" name="oldValue" />
        <declaration type="double" name="newValue" />
      </scope>
      <scope startLine="241" endLine="250">
        <declaration type="double" name="oldValue" />
        <declaration type="double" name="newValue" />
      </scope>
      <comment>Try setting to any value.</comment>
      <comment>Try setting to the preferred value.</comment>
    </method>
    <method type="void" name="testSetEntryInvalidIndex1" startLine="254" endLine="256" />
    <method type="void" name="testSetEntryInvalidIndex2" startLine="259" endLine="261" />
    <method type="void" name="testAddToEntry" startLine="264" endLine="299">
      <declaration type="double" name="x" />
      <declaration type="double[]" name="data1" />
      <declaration type="double[]" name="data2" />
      <declaration type="double[]" name="expected" />
      <declaration type="RealVector" name="actual" />
      <declaration type="double" name="increment" />
      <scope startLine="276" endLine="284">
        <declaration type="double" name="oldValue" />
      </scope>
      <scope startLine="289" endLine="298">
        <declaration type="double" name="oldValue" />
      </scope>
      <comment>Try adding any value.</comment>
      <comment>Try incrementing so that result is equal to preferred value.</comment>
    </method>
    <method type="void" name="testAddToEntryInvalidIndex1" startLine="302" endLine="304" />
    <method type="void" name="testAddToEntryInvalidIndex2" startLine="307" endLine="309" />
    <method type="void" name="doTestAppendVector" startLine="312" endLine="326">
      <declaration type="int" name="n1" />
      <declaration type="int" name="n2" />
      <declaration type="RealVector" name="v" />
      <scope startLine="318" endLine="321">
        <declaration type="String" name="msg" />
      </scope>
      <scope startLine="322" endLine="325">
        <declaration type="String" name="msg" />
      </scope>
    </method>
    <method type="void" name="testAppendVector" startLine="329" endLine="336">
      <declaration type="double" name="x" />
      <declaration type="double[]" name="data1" />
      <declaration type="double[]" name="data2" />
    </method>
    <method type="void" name="doTestAppendScalar" startLine="339" endLine="350">
      <declaration type="int" name="n" />
      <declaration type="RealVector" name="w" />
      <scope startLine="344" endLine="347">
        <declaration type="String" name="msg" />
      </scope>
      <declaration type="String" name="msg" />
    </method>
    <method type="void" name="testAppendScalar" startLine="353" endLine="359">
      <declaration type="double" name="x" />
      <declaration type="double[][]" name="data" />
    </method>
    <method type="void" name="testGetSubVector" startLine="362" endLine="371">
      <declaration type="double" name="x" />
      <declaration type="double[]" name="data" />
      <declaration type="int" name="index" />
      <declaration type="int" name="n" />
      <declaration type="RealVector" name="actual" />
      <declaration type="double[]" name="expected" />
    </method>
    <method type="void" name="testGetSubVectorInvalidIndex1" startLine="374" endLine="377">
      <declaration type="int" name="n" />
    </method>
    <method type="void" name="testGetSubVectorInvalidIndex2" startLine="380" endLine="383">
      <declaration type="int" name="n" />
    </method>
    <method type="void" name="testGetSubVectorInvalidIndex3" startLine="386" endLine="389">
      <declaration type="int" name="n" />
    </method>
    <method type="void" name="testGetSubVectorInvalidIndex4" startLine="392" endLine="395">
      <declaration type="int" name="n" />
    </method>
    <method type="void" name="testSetSubVectorSameType" startLine="398" endLine="410">
      <declaration type="double" name="x" />
      <declaration type="double[]" name="expected" />
      <declaration type="double[]" name="sub" />
      <declaration type="RealVector" name="actual" />
      <declaration type="int" name="index" />
      <scope startLine="406" endLine="408" />
    </method>
    <method type="void" name="testSetSubVectorMixedType" startLine="413" endLine="425">
      <declaration type="double" name="x" />
      <declaration type="double[]" name="expected" />
      <declaration type="double[]" name="sub" />
      <declaration type="RealVector" name="actual" />
      <declaration type="int" name="index" />
      <scope startLine="421" endLine="423" />
    </method>
    <method type="void" name="testSetSubVectorInvalidIndex1" startLine="428" endLine="430" />
    <method type="void" name="testSetSubVectorInvalidIndex2" startLine="433" endLine="435" />
    <method type="void" name="testSetSubVectorInvalidIndex3" startLine="438" endLine="440" />
    <method type="void" name="testIsNaN" startLine="443" endLine="449">
      <declaration type="RealVector[]" name="v" />
    </method>
    <method type="void" name="testIsInfinite" startLine="452" endLine="460">
      <declaration type="RealVector[]" name="v" />
    </method>
    <method type="void" name="doTestEbeBinaryOperation" startLine="462" endLine="515">
      <declaration type="double[]" name="data1" />
      <declaration type="double[]" name="data2" />
      <declaration type="int" name="k" />
      <scope startLine="466" endLine="472">
        <scope startLine="467" endLine="471" />
      </scope>
      <declaration type="RealVector" name="v1" />
      <declaration type="RealVector" name="v2" />
      <declaration type="RealVector" name="actual" />
      <declaration type="double[]" name="expected" />
      <scope startLine="493" endLine="510" />
      <scope startLine="511" endLine="514">
        <declaration type="String" name="msg" />
      </scope>
    </method>
    <method type="void" name="doTestEbeBinaryOperationDimensionMismatch" startLine="517" endLine="535">
      <declaration type="int" name="n" />
    </method>
    <method type="void" name="testAddSameType" startLine="538" endLine="540" />
    <method type="void" name="testAddMixedTypes" startLine="543" endLine="545" />
    <method type="void" name="testAddDimensionMismatch" startLine="548" endLine="550" />
    <method type="void" name="testSubtractSameType" startLine="553" endLine="555" />
    <method type="void" name="testSubtractMixedTypes" startLine="558" endLine="560" />
    <method type="void" name="testSubtractDimensionMismatch" startLine="563" endLine="565" />
    <method type="void" name="testEbeMultiplySameType" startLine="569" endLine="571" />
    <method type="void" name="testEbeMultiplyMixedTypes" startLine="575" endLine="577" />
    <method type="void" name="testEbeMultiplyDimensionMismatch" startLine="581" endLine="583" />
    <method type="void" name="testEbeDivideSameType" startLine="587" endLine="589" />
    <method type="void" name="testEbeDivideMixedTypes" startLine="593" endLine="595" />
    <method type="void" name="testEbeDivideDimensionMismatch" startLine="599" endLine="601" />
    <method type="void" name="doTestGetDistance" startLine="603" endLine="622">
      <declaration type="double" name="x" />
      <declaration type="double[][]" name="data1" />
      <declaration type="double[][]" name="data2" />
      <declaration type="RealVector" name="v1" />
      <declaration type="RealVector" name="v2" />
      <scope startLine="609" endLine="611" />
      <scope startLine="611" endLine="613" />
      <declaration type="double" name="actual" />
      <declaration type="double" name="expected" />
      <scope startLine="616" endLine="619">
        <declaration type="double" name="delta" />
      </scope>
    </method>
    <method type="void" name="testGetDistanceSameType" startLine="625" endLine="627" />
    <method type="void" name="testGetDistanceMixedTypes" startLine="630" endLine="632" />
    <method type="void" name="testGetDistanceDimensionMismatch" startLine="635" endLine="637" />
    <method type="void" name="testGetNorm" startLine="640" endLine="651">
      <declaration type="double" name="x" />
      <declaration type="double[][]" name="data" />
      <declaration type="RealVector" name="v" />
      <declaration type="double" name="actual" />
      <declaration type="double" name="expected" />
      <scope startLine="646" endLine="648" />
    </method>
    <method type="void" name="doTestGetL1Distance" startLine="653" endLine="671">
      <declaration type="double" name="x" />
      <declaration type="double[][]" name="data1" />
      <declaration type="double[][]" name="data2" />
      <declaration type="RealVector" name="v1" />
      <declaration type="RealVector" name="v2" />
      <scope startLine="659" endLine="661" />
      <scope startLine="661" endLine="663" />
      <declaration type="double" name="actual" />
      <declaration type="double" name="expected" />
      <scope startLine="666" endLine="669">
        <declaration type="double" name="delta" />
      </scope>
    </method>
    <method type="void" name="testGetL1DistanceSameType" startLine="674" endLine="676" />
    <method type="void" name="testGetL1DistanceMixedTypes" startLine="679" endLine="681" />
    <method type="void" name="testGetL1DistanceDimensionMismatch" startLine="684" endLine="686" />
    <method type="void" name="testGetL1Norm" startLine="689" endLine="700">
      <declaration type="double" name="x" />
      <declaration type="double[][]" name="data" />
      <declaration type="RealVector" name="v" />
      <declaration type="double" name="actual" />
      <declaration type="double" name="expected" />
      <scope startLine="695" endLine="697" />
    </method>
    <method type="void" name="doTestGetLInfDistance" startLine="702" endLine="720">
      <declaration type="double" name="x" />
      <declaration type="double[][]" name="data1" />
      <declaration type="double[][]" name="data2" />
      <declaration type="RealVector" name="v1" />
      <declaration type="RealVector" name="v2" />
      <scope startLine="708" endLine="710" />
      <scope startLine="710" endLine="712" />
      <declaration type="double" name="actual" />
      <declaration type="double" name="expected" />
      <scope startLine="715" endLine="718">
        <declaration type="double" name="delta" />
      </scope>
    </method>
    <method type="void" name="testGetLInfDistanceSameType" startLine="723" endLine="725" />
    <method type="void" name="testGetLInfDistanceMixedTypes" startLine="728" endLine="730" />
    <method type="void" name="testGetLInfDistanceDimensionMismatch" startLine="733" endLine="735" />
    <method type="void" name="testGetLInfNorm" startLine="738" endLine="749">
      <declaration type="double" name="x" />
      <declaration type="double[][]" name="data" />
      <declaration type="RealVector" name="v" />
      <declaration type="double" name="actual" />
      <declaration type="double" name="expected" />
      <scope startLine="744" endLine="746" />
    </method>
    <method type="void" name="doTestMapBinaryOperation" startLine="751" endLine="812">
      <declaration type="double[]" name="expected" />
      <scope startLine="753" endLine="811">
        <declaration type="double" name="d" />
        <scope startLine="755" endLine="772" />
        <declaration type="RealVector" name="v" />
        <declaration type="RealVector" name="actual" />
        <scope startLine="775" endLine="792" />
        <scope startLine="792" endLine="809" />
      </scope>
    </method>
    <method type="void" name="testMapAdd" startLine="815" endLine="817" />
    <method type="void" name="testMapAddToSelf" startLine="820" endLine="822" />
    <method type="void" name="testMapSubtract" startLine="825" endLine="827" />
    <method type="void" name="testMapSubtractToSelf" startLine="830" endLine="832" />
    <method type="void" name="testMapMultiply" startLine="835" endLine="837" />
    <method type="void" name="testMapMultiplyToSelf" startLine="840" endLine="842" />
    <method type="void" name="testMapDivide" startLine="845" endLine="847" />
    <method type="void" name="testMapDivideToSelf" startLine="850" endLine="852" />
    <method type="void" name="doTestMapFunction" startLine="855" endLine="877">
      <declaration type="double[]" name="data" />
      <declaration type="double[]" name="expected" />
      <scope startLine="865" endLine="867" />
      <declaration type="RealVector" name="v" />
      <declaration type="RealVector" name="actual" />
      <scope startLine="870" endLine="873" />
      <scope startLine="873" endLine="875" />
    </method>
    <method type="UnivariateFunction[]" name="createFunctions" startLine="879" endLine="887" />
    <method type="void" name="testMap" startLine="890" endLine="895">
      <declaration type="UnivariateFunction[]" name="functions" />
      <scope startLine="892" endLine="894" />
    </method>
    <method type="void" name="testMapToSelf" startLine="898" endLine="903">
      <declaration type="UnivariateFunction[]" name="functions" />
      <scope startLine="900" endLine="902" />
    </method>
    <method type="void" name="doTestOuterProduct" startLine="905" endLine="931">
      <declaration type="double[]" name="dataU" />
      <declaration type="RealVector" name="u" />
      <declaration type="double[]" name="dataV" />
      <declaration type="RealVector" name="v" />
      <scope startLine="914" endLine="916" />
      <scope startLine="916" endLine="918" />
      <declaration type="RealMatrix" name="uv" />
      <scope startLine="924" endLine="930">
        <scope startLine="925" endLine="929">
          <declaration type="double" name="expected" />
          <declaration type="double" name="actual" />
        </scope>
      </scope>
    </method>
    <method type="void" name="testOuterProductSameType" startLine="934" endLine="936" />
    <method type="void" name="testOuterProductMixedTypes" startLine="939" endLine="941" />
    <method type="void" name="doTestProjection" startLine="943" endLine="971">
      <declaration type="double" name="x" />
      <declaration type="double[]" name="data1" />
      <declaration type="double[]" name="data2" />
      <declaration type="double" name="dotProduct" />
      <declaration type="double" name="norm2" />
      <scope startLine="953" endLine="956" />
      <declaration type="double" name="s" />
      <declaration type="double[]" name="expected" />
      <scope startLine="959" endLine="961" />
      <declaration type="RealVector" name="v1" />
      <declaration type="RealVector" name="v2" />
      <scope startLine="964" endLine="966" />
      <scope startLine="966" endLine="968" />
      <declaration type="RealVector" name="actual" />
    </method>
    <method type="void" name="testProjectionSameType" startLine="974" endLine="976" />
    <method type="void" name="testProjectionMixedTypes" startLine="979" endLine="981" />
    <method type="void" name="testProjectionNullVector" startLine="984" endLine="986" />
    <method type="void" name="testProjectionDimensionMismatch" startLine="989" endLine="994">
      <declaration type="RealVector" name="v1" />
      <declaration type="RealVector" name="v2" />
    </method>
    <method type="void" name="testSet" startLine="997" endLine="1006">
      <scope startLine="998" endLine="1005">
        <declaration type="double" name="expected" />
        <declaration type="RealVector" name="v" />
        <scope startLine="1002" endLine="1004" />
      </scope>
    </method>
    <method type="void" name="testToArray" startLine="1009" endLine="1015">
      <declaration type="double[]" name="data" />
      <scope startLine="1012" endLine="1014" />
    </method>
    <method type="void" name="doTestUnitVector" startLine="1017" endLine="1041">
      <declaration type="double" name="x" />
      <declaration type="double[]" name="data" />
      <declaration type="double" name="norm" />
      <scope startLine="1023" endLine="1025" />
      <declaration type="double[]" name="expected" />
      <scope startLine="1028" endLine="1030" />
      <declaration type="RealVector" name="v" />
      <declaration type="RealVector" name="actual" />
      <scope startLine="1033" endLine="1036" />
      <scope startLine="1036" endLine="1039" />
    </method>
    <method type="void" name="testUnitVector" startLine="1044" endLine="1046" />
    <method type="void" name="testUnitize" startLine="1049" endLine="1051" />
    <method type="void" name="doTestUnitVectorNullVector" startLine="1053" endLine="1062">
      <declaration type="double[]" name="data" />
      <scope startLine="1057" endLine="1059" />
      <scope startLine="1059" endLine="1061" />
    </method>
    <method type="void" name="testUnitVectorNullVector" startLine="1065" endLine="1067" />
    <method type="void" name="testUnitizeNullVector" startLine="1070" endLine="1072" />
    <method type="void" name="testIterator" startLine="1075" endLine="1097">
      <declaration type="RealVector" name="v" />
      <declaration type="Iterator<RealVector.Entry>" name="it" />
      <scope startLine="1078" endLine="1089">
        <declaration type="RealVector.Entry" name="e" />
        <scope startLine="1083" endLine="1086" />
        <scope startLine="1086" endLine="1088" />
        <comment>Expected behavior</comment>
      </scope>
      <scope startLine="1091" endLine="1094" />
      <scope startLine="1094" endLine="1096">
        <comment>Expected behavior</comment>
      </scope>
    </method>
    <method type="void" name="doTestCombine" startLine="1099" endLine="1132">
      <declaration type="int" name="n" />
      <declaration type="double[]" name="data1" />
      <declaration type="double[]" name="data2" />
      <scope startLine="1103" endLine="1109">
        <scope startLine="1104" endLine="1108">
          <declaration type="int" name="index" />
        </scope>
      </scope>
      <declaration type="RealVector" name="v1" />
      <declaration type="RealVector" name="v2" />
      <declaration type="double[]" name="expected" />
      <scope startLine="1113" endLine="1131">
        <declaration type="double" name="a1" />
        <scope startLine="1115" endLine="1130">
          <declaration type="double" name="a2" />
          <scope startLine="1117" endLine="1119" />
          <declaration type="RealVector" name="actual" />
          <scope startLine="1121" endLine="1125">
            <declaration type="RealVector" name="v1bis" />
          </scope>
          <scope startLine="1125" endLine="1127" />
        </scope>
      </scope>
    </method>
    <method type="void" name="doTestCombineDimensionMismatch" startLine="1134" endLine="1147">
      <declaration type="RealVector" name="v1" />
      <declaration type="RealVector" name="v2" />
      <scope startLine="1137" endLine="1139" />
      <scope startLine="1139" endLine="1141" />
      <scope startLine="1142" endLine="1144" />
      <scope startLine="1144" endLine="1146" />
    </method>
    <method type="void" name="testCombineSameType" startLine="1150" endLine="1152" />
    <method type="void" name="testCombineMixedTypes" startLine="1155" endLine="1157" />
    <method type="void" name="testCombineDimensionMismatchSameType" startLine="1160" endLine="1162" />
    <method type="void" name="testCombineDimensionMismatchMixedTypes" startLine="1165" endLine="1167" />
    <method type="void" name="testCombineToSelfSameType" startLine="1170" endLine="1172" />
    <method type="void" name="testCombineToSelfMixedTypes" startLine="1175" endLine="1177" />
    <method type="void" name="testCombineToSelfDimensionMismatchSameType" startLine="1180" endLine="1182" />
    <method type="void" name="testCombineToSelfDimensionMismatchMixedTypes" startLine="1185" endLine="1187" />
    <method type="void" name="testCopy" startLine="1190" endLine="1195">
      <declaration type="RealVector" name="v" />
      <declaration type="RealVector" name="w" />
    </method>
    <method type="void" name="doTestDotProductRegularValues" startLine="1197" endLine="1218">
      <declaration type="double" name="x" />
      <declaration type="double[]" name="data1" />
      <declaration type="double[]" name="data2" />
      <declaration type="double" name="expected" />
      <scope startLine="1206" endLine="1208" />
      <declaration type="RealVector" name="v1" />
      <declaration type="RealVector" name="v2" />
      <scope startLine="1211" endLine="1213" />
      <scope startLine="1213" endLine="1215" />
      <declaration type="double" name="actual" />
    </method>
    <method type="void" name="doTestDotProductSpecialValues" startLine="1220" endLine="1242">
      <scope startLine="1221" endLine="1241">
        <declaration type="double[]" name="data1" />
        <declaration type="RealVector" name="v1" />
        <scope startLine="1226" endLine="1240">
          <declaration type="double[]" name="data2" />
          <declaration type="RealVector" name="v2" />
          <scope startLine="1231" endLine="1233" />
          <scope startLine="1233" endLine="1235" />
          <declaration type="double" name="expected" />
          <declaration type="double" name="actual" />
        </scope>
      </scope>
    </method>
    <method type="void" name="doTestDotProductDimensionMismatch" startLine="1244" endLine="1255">
      <declaration type="double[]" name="data1" />
      <declaration type="double[]" name="data2" />
      <declaration type="RealVector" name="v1" />
      <declaration type="RealVector" name="v2" />
      <scope startLine="1249" endLine="1251" />
      <scope startLine="1251" endLine="1253" />
    </method>
    <method type="void" name="testDotProductSameType" startLine="1258" endLine="1261" />
    <method type="void" name="testDotProductDimensionMismatchSameType" startLine="1264" endLine="1266" />
    <method type="void" name="testDotProductMixedTypes" startLine="1269" endLine="1272" />
    <method type="void" name="testDotProductDimensionMismatchMixedTypes" startLine="1275" endLine="1277" />
    <method type="void" name="doTestCosine" startLine="1279" endLine="1308">
      <declaration type="double" name="x" />
      <declaration type="double[]" name="data1" />
      <declaration type="double[]" name="data2" />
      <declaration type="double" name="norm1" />
      <declaration type="double" name="norm2" />
      <declaration type="double" name="dotProduct" />
      <scope startLine="1290" endLine="1294" />
      <declaration type="double" name="expected" />
      <declaration type="RealVector" name="v1" />
      <declaration type="RealVector" name="v2" />
      <scope startLine="1300" endLine="1302" />
      <scope startLine="1302" endLine="1304" />
      <declaration type="double" name="actual" />
    </method>
    <method type="void" name="testCosineSameType" startLine="1311" endLine="1313" />
    <method type="void" name="testCosineMixedTypes" startLine="1316" endLine="1318" />
    <method type="void" name="testCosineLeftNullVector" startLine="1321" endLine="1325">
      <declaration type="RealVector[]" name="v" />
      <declaration type="RealVector[]" name="w" />
    </method>
    <method type="void" name="testCosineRightNullVector" startLine="1328" endLine="1332">
      <declaration type="RealVector[]" name="v" />
      <declaration type="RealVector[]" name="w" />
    </method>
    <method type="void" name="testCosineDimensionMismatch" startLine="1335" endLine="1339">
      <declaration type="RealVector[]" name="v" />
      <declaration type="RealVector[]" name="w" />
    </method>
    <method type="void" name="testEquals" startLine="1342" endLine="1350">
      <declaration type="RealVector[]" name="v" />
    </method>
    <method type="void" name="testSerial" startLine="1353" endLine="1356">
      <declaration type="RealVector[]" name="v" />
    </method>
    <method type="void" name="testMinMax" startLine="1359" endLine="1380">
      <declaration type="RealVector[]" name="v1" />
      <declaration type="RealVector[]" name="v2" />
      <declaration type="RealVector[]" name="v3" />
      <declaration type="RealVector" name="v4" />
    </method>
    <javadoc>
      <text>* The whole vector is visited.</text>
    </javadoc>
    <method type="void" name="testWalkInDefaultOrderPreservingVisitor1" startLine="1388" endLine="1418">
      <declaration type="double[][]" name="data" />
      <declaration type="RealVector" name="v" />
      <declaration type="RealVectorPreservingVisitor" name="visitor" />
      <declaration type="int" name="expectedIndex" />
      <method type="void" name="visit" startLine="1398" endLine="1403" />
      <method type="void" name="start" startLine="1406" endLine="1411" />
      <method type="double" name="end" startLine="1413" endLine="1415" />
    </method>
    <javadoc>
      <text>* Visiting an invalid subvector.</text>
    </javadoc>
    <method type="void" name="testWalkInDefaultOrderPreservingVisitor2" startLine="1422" endLine="1469">
      <declaration type="RealVector" name="v" />
      <declaration type="RealVectorPreservingVisitor" name="visitor" />
      <method type="void" name="visit" startLine="1427" endLine="1429" />
      <method type="void" name="start" startLine="1431" endLine="1433" />
      <method type="double" name="end" startLine="1435" endLine="1437" />
      <scope startLine="1439" endLine="1442" />
      <scope startLine="1442" endLine="1444">
        <comment>Expected behavior</comment>
      </scope>
      <scope startLine="1445" endLine="1448" />
      <scope startLine="1448" endLine="1450">
        <comment>Expected behavior</comment>
      </scope>
      <scope startLine="1451" endLine="1454" />
      <scope startLine="1454" endLine="1456">
        <comment>Expected behavior</comment>
      </scope>
      <scope startLine="1457" endLine="1460" />
      <scope startLine="1460" endLine="1462">
        <comment>Expected behavior</comment>
      </scope>
      <scope startLine="1463" endLine="1466" />
      <scope startLine="1466" endLine="1468">
        <comment>Expected behavior</comment>
      </scope>
      <comment>Do nothing</comment>
      <comment>Do nothing</comment>
    </method>
    <javadoc>
      <text>* Visiting a valid subvector.</text>
    </javadoc>
    <method type="void" name="testWalkInDefaultOrderPreservingVisitor3" startLine="1473" endLine="1505">
      <declaration type="double[][]" name="data" />
      <declaration type="int" name="expectedStart" />
      <declaration type="int" name="expectedEnd" />
      <declaration type="RealVector" name="v" />
      <declaration type="RealVectorPreservingVisitor" name="visitor" />
      <declaration type="int" name="expectedIndex" />
      <method type="void" name="visit" startLine="1485" endLine="1490" />
      <method type="void" name="start" startLine="1493" endLine="1498" />
      <method type="double" name="end" startLine="1500" endLine="1502" />
    </method>
    <javadoc>
      <text>* The whole vector is visited.</text>
    </javadoc>
    <method type="void" name="testWalkInOptimizedOrderPreservingVisitor1" startLine="1509" endLine="1541">
      <declaration type="double[][]" name="data" />
      <declaration type="RealVector" name="v" />
      <declaration type="RealVectorPreservingVisitor" name="visitor" />
      <declaration type="boolean[]" name="visited" />
      <method type="void" name="visit" startLine="1518" endLine="1522" />
      <method type="void" name="start" startLine="1525" endLine="1530" />
      <method type="double" name="end" startLine="1532" endLine="1538">
        <scope startLine="1533" endLine="1536" />
      </method>
    </method>
    <javadoc>
      <text>* Visiting an invalid subvector.</text>
    </javadoc>
    <method type="void" name="testWalkInOptimizedOrderPreservingVisitor2" startLine="1545" endLine="1592">
      <declaration type="RealVector" name="v" />
      <declaration type="RealVectorPreservingVisitor" name="visitor" />
      <method type="void" name="visit" startLine="1550" endLine="1552" />
      <method type="void" name="start" startLine="1554" endLine="1556" />
      <method type="double" name="end" startLine="1558" endLine="1560" />
      <scope startLine="1562" endLine="1565" />
      <scope startLine="1565" endLine="1567">
        <comment>Expected behavior</comment>
      </scope>
      <scope startLine="1568" endLine="1571" />
      <scope startLine="1571" endLine="1573">
        <comment>Expected behavior</comment>
      </scope>
      <scope startLine="1574" endLine="1577" />
      <scope startLine="1577" endLine="1579">
        <comment>Expected behavior</comment>
      </scope>
      <scope startLine="1580" endLine="1583" />
      <scope startLine="1583" endLine="1585">
        <comment>Expected behavior</comment>
      </scope>
      <scope startLine="1586" endLine="1589" />
      <scope startLine="1589" endLine="1591">
        <comment>Expected behavior</comment>
      </scope>
      <comment>Do nothing</comment>
      <comment>Do nothing</comment>
    </method>
    <javadoc>
      <text>* Visiting a valid subvector.</text>
    </javadoc>
    <method type="void" name="testWalkInOptimizedOrderPreservingVisitor3" startLine="1596" endLine="1630">
      <declaration type="double[][]" name="data" />
      <declaration type="int" name="expectedStart" />
      <declaration type="int" name="expectedEnd" />
      <declaration type="RealVector" name="v" />
      <declaration type="RealVectorPreservingVisitor" name="visitor" />
      <declaration type="boolean[]" name="visited" />
      <method type="void" name="visit" startLine="1607" endLine="1611" />
      <method type="void" name="start" startLine="1614" endLine="1619" />
      <method type="double" name="end" startLine="1621" endLine="1627">
        <scope startLine="1622" endLine="1625" />
      </method>
    </method>
    <javadoc>
      <text>* The whole vector is visited.</text>
    </javadoc>
    <method type="void" name="testWalkInDefaultOrderChangingVisitor1" startLine="1634" endLine="1668">
      <declaration type="double[][]" name="data" />
      <declaration type="RealVector" name="v" />
      <declaration type="RealVectorChangingVisitor" name="visitor" />
      <declaration type="int" name="expectedIndex" />
      <method type="double" name="visit" startLine="1644" endLine="1650" />
      <method type="void" name="start" startLine="1653" endLine="1658" />
      <method type="double" name="end" startLine="1660" endLine="1662" />
      <scope startLine="1665" endLine="1667" />
    </method>
    <javadoc>
      <text>* Visiting an invalid subvector.</text>
    </javadoc>
    <method type="void" name="testWalkInDefaultOrderChangingVisitor2" startLine="1672" endLine="1719">
      <declaration type="RealVector" name="v" />
      <declaration type="RealVectorChangingVisitor" name="visitor" />
      <method type="double" name="visit" startLine="1677" endLine="1679" />
      <method type="void" name="start" startLine="1681" endLine="1683" />
      <method type="double" name="end" startLine="1685" endLine="1687" />
      <scope startLine="1689" endLine="1692" />
      <scope startLine="1692" endLine="1694">
        <comment>Expected behavior</comment>
      </scope>
      <scope startLine="1695" endLine="1698" />
      <scope startLine="1698" endLine="1700">
        <comment>Expected behavior</comment>
      </scope>
      <scope startLine="1701" endLine="1704" />
      <scope startLine="1704" endLine="1706">
        <comment>Expected behavior</comment>
      </scope>
      <scope startLine="1707" endLine="1710" />
      <scope startLine="1710" endLine="1712">
        <comment>Expected behavior</comment>
      </scope>
      <scope startLine="1713" endLine="1716" />
      <scope startLine="1716" endLine="1718">
        <comment>Expected behavior</comment>
      </scope>
      <comment>Do nothing</comment>
    </method>
    <javadoc>
      <text>* Visiting a valid subvector.</text>
    </javadoc>
    <method type="void" name="testWalkInDefaultOrderChangingVisitor3" startLine="1723" endLine="1759">
      <declaration type="double[][]" name="data" />
      <declaration type="int" name="expectedStart" />
      <declaration type="int" name="expectedEnd" />
      <declaration type="RealVector" name="v" />
      <declaration type="RealVectorChangingVisitor" name="visitor" />
      <declaration type="int" name="expectedIndex" />
      <method type="double" name="visit" startLine="1735" endLine="1741" />
      <method type="void" name="start" startLine="1744" endLine="1749" />
      <method type="double" name="end" startLine="1751" endLine="1753" />
      <scope startLine="1756" endLine="1758" />
    </method>
    <javadoc>
      <text>* The whole vector is visited.</text>
    </javadoc>
    <method type="void" name="testWalkInOptimizedOrderChangingVisitor1" startLine="1763" endLine="1799">
      <declaration type="double[][]" name="data" />
      <declaration type="RealVector" name="v" />
      <declaration type="RealVectorChangingVisitor" name="visitor" />
      <declaration type="boolean[]" name="visited" />
      <method type="double" name="visit" startLine="1772" endLine="1777" />
      <method type="void" name="start" startLine="1780" endLine="1785" />
      <method type="double" name="end" startLine="1787" endLine="1793">
        <scope startLine="1788" endLine="1791" />
      </method>
      <scope startLine="1796" endLine="1798" />
    </method>
    <javadoc>
      <text>* Visiting an invalid subvector.</text>
    </javadoc>
    <method type="void" name="testWalkInOptimizedOrderChangingVisitor2" startLine="1803" endLine="1850">
      <declaration type="RealVector" name="v" />
      <declaration type="RealVectorChangingVisitor" name="visitor" />
      <method type="double" name="visit" startLine="1808" endLine="1810" />
      <method type="void" name="start" startLine="1812" endLine="1814" />
      <method type="double" name="end" startLine="1816" endLine="1818" />
      <scope startLine="1820" endLine="1823" />
      <scope startLine="1823" endLine="1825">
        <comment>Expected behavior</comment>
      </scope>
      <scope startLine="1826" endLine="1829" />
      <scope startLine="1829" endLine="1831">
        <comment>Expected behavior</comment>
      </scope>
      <scope startLine="1832" endLine="1835" />
      <scope startLine="1835" endLine="1837">
        <comment>Expected behavior</comment>
      </scope>
      <scope startLine="1838" endLine="1841" />
      <scope startLine="1841" endLine="1843">
        <comment>Expected behavior</comment>
      </scope>
      <scope startLine="1844" endLine="1847" />
      <scope startLine="1847" endLine="1849">
        <comment>Expected behavior</comment>
      </scope>
      <comment>Do nothing</comment>
    </method>
    <javadoc>
      <text>* Visiting a valid subvector.</text>
    </javadoc>
    <method type="void" name="testWalkInOptimizedOrderChangingVisitor3" startLine="1854" endLine="1892">
      <declaration type="double[][]" name="data" />
      <declaration type="int" name="expectedStart" />
      <declaration type="int" name="expectedEnd" />
      <declaration type="RealVector" name="v" />
      <declaration type="RealVectorChangingVisitor" name="visitor" />
      <declaration type="boolean[]" name="visited" />
      <method type="double" name="visit" startLine="1865" endLine="1870" />
      <method type="void" name="start" startLine="1873" endLine="1878" />
      <method type="double" name="end" startLine="1880" endLine="1886">
        <scope startLine="1881" endLine="1884" />
      </method>
      <scope startLine="1889" endLine="1891" />
    </method>
    <class name="RealVectorTestImpl" extends="RealVector" startLine="1894">
      <implements name="Serializable" />
      <javadoc>
        <text>* Minimal implementation of the {@link RealVector} abstract class, for
 * mixed types unit tests.</text>
      </javadoc>
      <javadoc>
        <text>* Serializable version identifier.</text>
      </javadoc>
      <declaration type="long" name="serialVersionUID" />
      <javadoc>
        <text>* Entries of the vector.</text>
      </javadoc>
      <declaration type="double" name="data" />
      <method type="constructor" name="RealVectorTestImpl" startLine="1907" endLine="1909" />
      <method type="UnsupportedOperationException" name="unsupported" startLine="1911" endLine="1913" />
      <method type="RealVector" name="copy" startLine="1916" endLine="1918" />
      <method type="RealVector" name="ebeMultiply" startLine="1921" endLine="1923" />
      <method type="RealVector" name="ebeDivide" startLine="1926" endLine="1928" />
      <method type="double" name="getEntry" startLine="1931" endLine="1934" />
      <method type="int" name="getDimension" startLine="1937" endLine="1939" />
      <method type="RealVector" name="append" startLine="1942" endLine="1944" />
      <method type="RealVector" name="append" startLine="1947" endLine="1949" />
      <method type="RealVector" name="getSubVector" startLine="1952" endLine="1954" />
      <method type="void" name="setEntry" startLine="1957" endLine="1960" />
      <method type="void" name="setSubVector" startLine="1963" endLine="1965" />
      <method type="boolean" name="isNaN" startLine="1968" endLine="1970" />
      <method type="boolean" name="isInfinite" startLine="1973" endLine="1975" />
    </class>
    <comment>TESTS OF THE VISITOR PATTERN</comment>
  </class>
</source>
