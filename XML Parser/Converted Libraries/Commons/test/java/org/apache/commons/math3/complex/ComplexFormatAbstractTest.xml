<?xml version="1.0" encoding="UTF-8"?>
<source package="org.apache.commons.math3.complex">
  <import name="java.text.NumberFormat" />
  <import name="java.text.ParsePosition" />
  <import name="java.util.Locale" />
  <import name="org.junit.Test" />
  <import name="org.junit.Assert" />
  <import name="org.apache.commons.math3.util.FastMath" />
  <class name="ComplexFormatAbstractTest" startLine="29">
    <declaration type="ComplexFormat" name="complexFormat" />
    <declaration type="ComplexFormat" name="complexFormatJ" />
    <method name="getLocale" type="Locale" startLine="34" endLine="34" />
    <method name="getDecimalCharacter" type="char" startLine="36" endLine="36" />
    <method type="constructor" name="ComplexFormatAbstractTest" startLine="38" endLine="41" />
    <method type="void" name="testSimpleNoDecimals" startLine="44" endLine="49">
      <declaration type="Complex" name="c" />
      <declaration type="String" name="expected" />
      <declaration type="String" name="actual" />
    </method>
    <method type="void" name="testTrimOneImaginary" startLine="52" endLine="75">
      <declaration type="ComplexFormat" name="fmt" />
      <declaration type="Complex" name="c" />
      <declaration type="String" name="expected" />
      <declaration type="String" name="actual" />
    </method>
    <method type="void" name="testSimpleWithDecimals" startLine="78" endLine="83">
      <declaration type="Complex" name="c" />
      <declaration type="String" name="expected" />
      <declaration type="String" name="actual" />
    </method>
    <method type="void" name="testSimpleWithDecimalsTrunc" startLine="86" endLine="91">
      <declaration type="Complex" name="c" />
      <declaration type="String" name="expected" />
      <declaration type="String" name="actual" />
    </method>
    <method type="void" name="testNegativeReal" startLine="94" endLine="99">
      <declaration type="Complex" name="c" />
      <declaration type="String" name="expected" />
      <declaration type="String" name="actual" />
    </method>
    <method type="void" name="testNegativeImaginary" startLine="102" endLine="107">
      <declaration type="Complex" name="c" />
      <declaration type="String" name="expected" />
      <declaration type="String" name="actual" />
    </method>
    <method type="void" name="testNegativeBoth" startLine="110" endLine="115">
      <declaration type="Complex" name="c" />
      <declaration type="String" name="expected" />
      <declaration type="String" name="actual" />
    </method>
    <method type="void" name="testZeroReal" startLine="118" endLine="123">
      <declaration type="Complex" name="c" />
      <declaration type="String" name="expected" />
      <declaration type="String" name="actual" />
    </method>
    <method type="void" name="testZeroImaginary" startLine="126" endLine="131">
      <declaration type="Complex" name="c" />
      <declaration type="String" name="expected" />
      <declaration type="String" name="actual" />
    </method>
    <method type="void" name="testDifferentImaginaryChar" startLine="134" endLine="139">
      <declaration type="Complex" name="c" />
      <declaration type="String" name="expected" />
      <declaration type="String" name="actual" />
    </method>
    <method type="void" name="testDefaultFormatComplex" startLine="142" endLine="152">
      <declaration type="Locale" name="defaultLocal" />
      <declaration type="Complex" name="c" />
      <declaration type="String" name="expected" />
      <declaration type="String" name="actual" />
    </method>
    <method type="void" name="testNan" startLine="155" endLine="160">
      <declaration type="Complex" name="c" />
      <declaration type="String" name="expected" />
      <declaration type="String" name="actual" />
    </method>
    <method type="void" name="testPositiveInfinity" startLine="163" endLine="168">
      <declaration type="Complex" name="c" />
      <declaration type="String" name="expected" />
      <declaration type="String" name="actual" />
    </method>
    <method type="void" name="testNegativeInfinity" startLine="171" endLine="176">
      <declaration type="Complex" name="c" />
      <declaration type="String" name="expected" />
      <declaration type="String" name="actual" />
    </method>
    <method type="void" name="testParseSimpleNoDecimals" startLine="179" endLine="184">
      <declaration type="String" name="source" />
      <declaration type="Complex" name="expected" />
      <declaration type="Complex" name="actual" />
    </method>
    <method type="void" name="testParseSimpleWithDecimals" startLine="187" endLine="192">
      <declaration type="String" name="source" />
      <declaration type="Complex" name="expected" />
      <declaration type="Complex" name="actual" />
    </method>
    <method type="void" name="testParseSimpleWithDecimalsTrunc" startLine="195" endLine="200">
      <declaration type="String" name="source" />
      <declaration type="Complex" name="expected" />
      <declaration type="Complex" name="actual" />
    </method>
    <method type="void" name="testParseNegativeReal" startLine="203" endLine="208">
      <declaration type="String" name="source" />
      <declaration type="Complex" name="expected" />
      <declaration type="Complex" name="actual" />
    </method>
    <method type="void" name="testParseNegativeImaginary" startLine="211" endLine="216">
      <declaration type="String" name="source" />
      <declaration type="Complex" name="expected" />
      <declaration type="Complex" name="actual" />
    </method>
    <method type="void" name="testParseNegativeBoth" startLine="219" endLine="224">
      <declaration type="String" name="source" />
      <declaration type="Complex" name="expected" />
      <declaration type="Complex" name="actual" />
    </method>
    <method type="void" name="testParseZeroReal" startLine="227" endLine="232">
      <declaration type="String" name="source" />
      <declaration type="Complex" name="expected" />
      <declaration type="Complex" name="actual" />
    </method>
    <method type="void" name="testParseZeroImaginary" startLine="235" endLine="240">
      <declaration type="String" name="source" />
      <declaration type="Complex" name="expected" />
      <declaration type="Complex" name="actual" />
    </method>
    <method type="void" name="testParseDifferentImaginaryChar" startLine="243" endLine="248">
      <declaration type="String" name="source" />
      <declaration type="Complex" name="expected" />
      <declaration type="Complex" name="actual" />
    </method>
    <method type="void" name="testParseNan" startLine="251" endLine="256">
      <declaration type="String" name="source" />
      <declaration type="Complex" name="expected" />
      <declaration type="Complex" name="actual" />
    </method>
    <method type="void" name="testParsePositiveInfinity" startLine="259" endLine="264">
      <declaration type="String" name="source" />
      <declaration type="Complex" name="expected" />
      <declaration type="Complex" name="actual" />
    </method>
    <method type="void" name="testPaseNegativeInfinity" startLine="267" endLine="272">
      <declaration type="String" name="source" />
      <declaration type="Complex" name="expected" />
      <declaration type="Complex" name="actual" />
    </method>
    <method type="void" name="testConstructorSingleFormat" startLine="275" endLine="280">
      <declaration type="NumberFormat" name="nf" />
      <declaration type="ComplexFormat" name="cf" />
    </method>
    <method type="void" name="testGetImaginaryFormat" startLine="283" endLine="287">
      <declaration type="NumberFormat" name="nf" />
      <declaration type="ComplexFormat" name="cf" />
    </method>
    <method type="void" name="testGetRealFormat" startLine="290" endLine="294">
      <declaration type="NumberFormat" name="nf" />
      <declaration type="ComplexFormat" name="cf" />
    </method>
    <method type="void" name="testFormatNumber" startLine="297" endLine="302">
      <declaration type="ComplexFormat" name="cf" />
      <declaration type="Double" name="pi" />
      <declaration type="String" name="text" />
    </method>
    <method type="void" name="testForgottenImaginaryCharacter" startLine="305" endLine="309">
      <declaration type="ParsePosition" name="pos" />
    </method>
  </class>
</source>
