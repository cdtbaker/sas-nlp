<?xml version="1.0" encoding="UTF-8"?>
<source package="org.apache.commons.math3.distribution">
  <import name="java.io.BufferedReader" />
  <import name="java.io.IOException" />
  <import name="java.io.InputStream" />
  <import name="java.io.InputStreamReader" />
  <import name="org.apache.commons.math3.exception.NotStrictlyPositiveException" />
  <import name="org.apache.commons.math3.special.Gamma" />
  <import name="org.apache.commons.math3.stat.descriptive.SummaryStatistics" />
  <import name="org.apache.commons.math3.util.FastMath" />
  <import name="org.junit.Assert" />
  <import name="org.junit.Test" />
  <class name="GammaDistributionTest" extends="RealDistributionAbstractTest" startLine="32">
    <javadoc>
      <text>* Test cases for GammaDistribution.
 * Extends ContinuousDistributionAbstractTest.  See class javadoc for
 * ContinuousDistributionAbstractTest for details.</text>
      <version>$Id: GammaDistributionTest.java 1454719 2013-03-09 14:34:05Z luc $</version>
    </javadoc>
    <javadoc>
      <text>* Creates the default continuous distribution instance to use in tests.</text>
    </javadoc>
    <method type="GammaDistribution" name="makeDistribution" startLine="45" endLine="47" />
    <javadoc>
      <text>* Creates the default cumulative probability distribution test input values</text>
    </javadoc>
    <method type="double[]" name="makeCumulativeTestPoints" startLine="51" endLine="55">
      <comment>quantiles computed using R version 2.9.2</comment>
    </method>
    <javadoc>
      <text>* Creates the default cumulative probability density test expected values</text>
    </javadoc>
    <method type="double[]" name="makeCumulativeTestValues" startLine="59" endLine="61" />
    <javadoc>
      <text>* Creates the default probability density test expected values</text>
    </javadoc>
    <method type="double[]" name="makeDensityTestValues" startLine="65" endLine="68" />
    <method type="void" name="setUp" startLine="72" endLine="75" />
    <method type="void" name="testParameterAccessors" startLine="79" endLine="83">
      <declaration type="GammaDistribution" name="distribution" />
    </method>
    <method type="void" name="testPreconditions" startLine="86" endLine="99">
      <scope startLine="87" endLine="90" />
      <scope startLine="90" endLine="92">
        <comment>Expected.</comment>
      </scope>
      <scope startLine="93" endLine="96" />
      <scope startLine="96" endLine="98">
        <comment>Expected.</comment>
      </scope>
    </method>
    <method type="void" name="testProbabilities" startLine="102" endLine="108" />
    <method type="void" name="testValues" startLine="111" endLine="116" />
    <method type="void" name="testProbability" startLine="118" endLine="122">
      <declaration type="GammaDistribution" name="distribution" />
      <declaration type="double" name="actual" />
    </method>
    <method type="void" name="testValue" startLine="124" endLine="128">
      <declaration type="GammaDistribution" name="distribution" />
      <declaration type="double" name="actual" />
    </method>
    <method type="void" name="testDensity" startLine="131" endLine="149">
      <declaration type="double[][]" name="x" />
      <comment>R2.5: print(dgamma(x, shape=1, rate=1), digits=10)</comment>
      <comment>R2.5: print(dgamma(x, shape=2, rate=1), digits=10)</comment>
      <comment>R2.5: print(dgamma(x, shape=4, rate=1), digits=10)</comment>
      <comment>R2.5: print(dgamma(x, shape=4, rate=10), digits=10)</comment>
      <comment>R2.5: print(dgamma(x, shape=.1, rate=10), digits=10)</comment>
      <comment>R2.5: print(dgamma(x, shape=.1, rate=20), digits=10)</comment>
      <comment>R2.5: print(dgamma(x, shape=.1, rate=4), digits=10)</comment>
      <comment>R2.5: print(dgamma(x, shape=.1, rate=1), digits=10)</comment>
    </method>
    <method type="void" name="checkDensity" startLine="151" endLine="156">
      <declaration type="GammaDistribution" name="d" />
      <scope startLine="153" endLine="155" />
    </method>
    <method type="void" name="testInverseCumulativeProbabilityExtremes" startLine="159" endLine="163" />
    <method type="void" name="testMoments" startLine="166" endLine="177">
      <declaration type="double" name="tol" />
      <declaration type="GammaDistribution" name="dist" />
    </method>
    <declaration type="double" name="HALF_LOG_2_PI" />
    <method type="double" name="logGamma" startLine="181" endLine="199">
      <declaration type="double" name="ret" />
      <scope startLine="189" endLine="191" />
      <scope startLine="191" endLine="196">
        <declaration type="double" name="sum" />
        <declaration type="double" name="tmp" />
      </scope>
      <comment>This is a copy of
 double Gamma.logGamma(double)
 prior to MATH-849</comment>
    </method>
    <method type="double" name="density" startLine="202" endLine="213">
      <scope startLine="208" endLine="210" />
      <comment>This is a copy of
 double GammaDistribution.density(double)
 prior to MATH-753.</comment>
    </method>
    <method type="void" name="doTestMath753" startLine="225" endLine="326">
      <declaration type="GammaDistribution" name="distribution" />
      <declaration type="SummaryStatistics" name="statOld" />
      <declaration type="SummaryStatistics" name="statNewNoOF" />
      <declaration type="SummaryStatistics" name="statNewOF" />
      <declaration type="InputStream" name="resourceAsStream" />
      <declaration type="BufferedReader" name="in" />
      <scope startLine="238" endLine="321">
        <scope startLine="239" endLine="265">
          <scope startLine="240" endLine="242" />
          <declaration type="String[]" name="tokens" />
          <declaration type="double" name="x" />
          <declaration type="String" name="msg" />
          <declaration type="double" name="expected" />
          <declaration type="double" name="ulp" />
          <declaration type="double" name="actualOld" />
          <declaration type="double" name="actualNew" />
          <declaration type="double" name="errOld" />
          <scope startLine="257" endLine="261" />
          <scope startLine="261" endLine="264" />
        </scope>
        <scope startLine="266" endLine="300">
          <declaration type="StringBuilder" name="sb" />
          <declaration type="String" name="msg" />
          <declaration type="double" name="oldMin" />
          <declaration type="double" name="newMin" />
          <declaration type="double" name="oldMax" />
          <declaration type="double" name="newMax" />
          <declaration type="double" name="oldMean" />
          <declaration type="double" name="newMean" />
          <declaration type="double" name="oldSd" />
          <declaration type="double" name="newSd" />
        </scope>
        <scope startLine="301" endLine="320">
          <declaration type="double" name="newMean" />
          <declaration type="double" name="newSd" />
          <declaration type="StringBuilder" name="sb" />
          <declaration type="String" name="msg" />
        </scope>
        <comment>If no overflow occurs, check that new implementation is
 better than old one.</comment>
      </scope>
      <scope startLine="321" endLine="323" />
      <scope startLine="323" endLine="325" />
    </method>
    <method type="void" name="testMath753Shape1" startLine="330" endLine="332" />
    <method type="void" name="testMath753Shape8" startLine="335" endLine="337" />
    <method type="void" name="testMath753Shape10" startLine="340" endLine="342" />
    <method type="void" name="testMath753Shape100" startLine="345" endLine="347" />
    <method type="void" name="testMath753Shape142" startLine="350" endLine="352" />
    <method type="void" name="testMath753Shape1000" startLine="355" endLine="357" />
    <comment>-------------- Implementations for abstract methods -----------------------</comment>
    <comment>--------------------- Override tolerance  --------------</comment>
    <comment>---------------------------- Additional test cases -------------------------</comment>
    <comment>MATH-753: large values of x or shape parameter cause density(double) to
 overflow. Reference data is generated with the Maxima script
 gamma-distribution.mac, which can be found in
 srctestresourcesorgapachecommonsmath3distribution.</comment>
  </class>
</source>
