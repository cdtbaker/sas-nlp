<?xml version="1.0" encoding="UTF-8"?>
<source package="org.apache.commons.math3.analysis.interpolation">
  <import name="org.apache.commons.math3.util.FastMath" />
  <import name="org.apache.commons.math3.exception.OutOfRangeException" />
  <import name="org.apache.commons.math3.exception.DimensionMismatchException" />
  <import name="org.apache.commons.math3.exception.NoDataException" />
  <import name="org.apache.commons.math3.exception.NonMonotonicSequenceException" />
  <import name="org.apache.commons.math3.exception.NotFiniteNumberException" />
  <import name="org.apache.commons.math3.exception.NumberIsTooSmallException" />
  <import name="org.junit.Assert" />
  <import name="org.junit.Test" />
  <class name="LoessInterpolatorTest" startLine="30">
    <javadoc>
      <text>* Test of the LoessInterpolator class.</text>
    </javadoc>
    <method type="void" name="testOnOnePoint" startLine="36" endLine="42">
      <declaration type="double[]" name="xval" />
      <declaration type="double[]" name="yval" />
      <declaration type="double[]" name="res" />
    </method>
    <method type="void" name="testOnTwoPoints" startLine="45" endLine="52">
      <declaration type="double[]" name="xval" />
      <declaration type="double[]" name="yval" />
      <declaration type="double[]" name="res" />
    </method>
    <method type="void" name="testOnStraightLine" startLine="55" endLine="64">
      <declaration type="double[]" name="xval" />
      <declaration type="double[]" name="yval" />
      <declaration type="LoessInterpolator" name="li" />
      <declaration type="double[]" name="res" />
      <scope startLine="61" endLine="63" />
    </method>
    <method type="void" name="testOnDistortedSine" startLine="67" endLine="96">
      <declaration type="int" name="numPoints" />
      <declaration type="double[]" name="xval" />
      <declaration type="double[]" name="yval" />
      <declaration type="double" name="xnoise" />
      <declaration type="double" name="ynoise" />
      <declaration type="LoessInterpolator" name="li" />
      <declaration type="double[]" name="res" />
      <declaration type="double" name="noisyResidualSum" />
      <declaration type="double" name="fitResidualSum" />
      <scope startLine="86" endLine="93">
        <declaration type="double" name="expected" />
        <declaration type="double" name="noisy" />
        <declaration type="double" name="fit" />
      </scope>
      <comment>Check that the resulting curve differs from</comment>
      <comment>the "real" sine less than the jittered one</comment>
    </method>
    <method type="void" name="testIncreasingBandwidthIncreasesSmoothness" startLine="99" endLine="127">
      <declaration type="int" name="numPoints" />
      <declaration type="double[]" name="xval" />
      <declaration type="double[]" name="yval" />
      <declaration type="double" name="xnoise" />
      <declaration type="double" name="ynoise" />
      <declaration type="double[]" name="bandwidths" />
      <declaration type="double[]" name="variances" />
      <scope startLine="112" endLine="122">
        <declaration type="double" name="bw" />
        <declaration type="LoessInterpolator" name="li" />
        <declaration type="double[]" name="res" />
        <scope startLine="119" endLine="121" />
      </scope>
      <scope startLine="124" endLine="126" />
      <comment>Check that variance decreases as bandwidth increases</comment>
    </method>
    <method type="void" name="testIncreasingRobustnessItersIncreasesSmoothnessWithOutliers" startLine="130" endLine="160">
      <declaration type="int" name="numPoints" />
      <declaration type="double[]" name="xval" />
      <declaration type="double[]" name="yval" />
      <declaration type="double" name="xnoise" />
      <declaration type="double" name="ynoise" />
      <declaration type="double[]" name="variances" />
      <scope startLine="147" endLine="155">
        <declaration type="LoessInterpolator" name="li" />
        <declaration type="double[]" name="res" />
        <scope startLine="152" endLine="154" />
      </scope>
      <scope startLine="157" endLine="159" />
      <comment>Introduce a couple of outliers</comment>
      <comment>Check that variance decreases as the number of robustness</comment>
      <comment>iterations increases</comment>
    </method>
    <method type="void" name="testUnequalSizeArguments" startLine="163" endLine="165" />
    <method type="void" name="testEmptyData" startLine="168" endLine="170" />
    <method type="void" name="testNonStrictlyIncreasing1" startLine="173" endLine="175" />
    <method type="void" name="testNonStrictlyIncreasing2" startLine="178" endLine="180" />
    <method type="void" name="testNotAllFiniteReal1" startLine="183" endLine="185" />
    <method type="void" name="testNotAllFiniteReal2" startLine="188" endLine="190" />
    <method type="void" name="testNotAllFiniteReal3" startLine="193" endLine="195" />
    <method type="void" name="testNotAllFiniteReal4" startLine="198" endLine="200" />
    <method type="void" name="testNotAllFiniteReal5" startLine="203" endLine="205" />
    <method type="void" name="testNotAllFiniteReal6" startLine="208" endLine="210" />
    <method type="void" name="testInsufficientBandwidth" startLine="213" endLine="216">
      <declaration type="LoessInterpolator" name="li" />
    </method>
    <method type="void" name="testCompletelyIncorrectBandwidth1" startLine="219" endLine="221" />
    <method type="void" name="testCompletelyIncorrectBandwidth2" startLine="224" endLine="226" />
    <method type="void" name="testMath296withoutWeights" startLine="229" endLine="249">
      <declaration type="double[]" name="xval" />
      <declaration type="double[]" name="yval" />
      <declaration type="double[]" name="yref" />
      <declaration type="LoessInterpolator" name="li" />
      <declaration type="double[]" name="res" />
      <scope startLine="246" endLine="248" />
      <comment>Output from R, rounded to .001</comment>
    </method>
    <method type="void" name="generateSineData" startLine="251" endLine="259">
      <declaration type="double" name="dx" />
      <declaration type="double" name="x" />
      <scope startLine="254" endLine="258" />
    </method>
  </class>
</source>
