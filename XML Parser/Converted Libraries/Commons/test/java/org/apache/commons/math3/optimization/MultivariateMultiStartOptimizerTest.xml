<?xml version="1.0" encoding="UTF-8"?>
<source package="org.apache.commons.math3.optimization">
  <import name="org.apache.commons.math3.analysis.MultivariateFunction" />
  <import name="org.apache.commons.math3.optimization.direct.NelderMeadSimplex" />
  <import name="org.apache.commons.math3.optimization.direct.SimplexOptimizer" />
  <import name="org.apache.commons.math3.random.GaussianRandomGenerator" />
  <import name="org.apache.commons.math3.random.JDKRandomGenerator" />
  <import name="org.apache.commons.math3.random.RandomVectorGenerator" />
  <import name="org.apache.commons.math3.random.UncorrelatedRandomVectorGenerator" />
  <import name="org.junit.Assert" />
  <import name="org.junit.Test" />
  <class name="MultivariateMultiStartOptimizerTest" startLine="31">
    <method type="void" name="testRosenbrock" startLine="33" endLine="54">
      <declaration type="Rosenbrock" name="rosenbrock" />
      <declaration type="SimplexOptimizer" name="underlying" />
      <declaration type="NelderMeadSimplex[]" name="simplex" />
      <declaration type="JDKRandomGenerator" name="g" />
      <declaration type="RandomVectorGenerator" name="generator" />
      <declaration type="MultivariateMultiStartOptimizer" name="optimizer" />
      <declaration type="PointValuePair[]" name="optimum" />
    </method>
    <class name="Rosenbrock" startLine="56">
      <implements name="MultivariateFunction" />
      <declaration type="int" name="count" />
      <method type="constructor" name="Rosenbrock" startLine="59" endLine="61" />
      <method type="double" name="value" startLine="63" endLine="68">
        <declaration type="double" name="a" />
        <declaration type="double" name="b" />
      </method>
      <method type="int" name="getCount" startLine="70" endLine="72" />
    </class>
  </class>
</source>
