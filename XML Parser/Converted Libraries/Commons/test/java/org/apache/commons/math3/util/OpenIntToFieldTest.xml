<?xml version="1.0" encoding="UTF-8"?>
<source package="org.apache.commons.math3.util">
  <import name="java.util.ConcurrentModificationException" />
  <import name="java.util.HashMap" />
  <import name="java.util.HashSet" />
  <import name="java.util.Map" />
  <import name="java.util.NoSuchElementException" />
  <import name="java.util.Random" />
  <import name="java.util.Set" />
  <import name="java.util.Map.Entry" />
  <import name="org.apache.commons.math3.Field" />
  <import name="org.apache.commons.math3.fraction.Fraction" />
  <import name="org.apache.commons.math3.fraction.FractionConversionException" />
  <import name="org.apache.commons.math3.fraction.FractionField" />
  <import name="org.junit.Assert" />
  <import name="org.junit.Before" />
  <import name="org.junit.Test" />
  <class name="OpenIntToFieldTest" startLine="37">
    <declaration type="Map<Integer,Fraction>" name="javaMap" />
    <declaration type="FractionField" name="field" />
    <method type="void" name="setUp" startLine="43" endLine="60">
      <comment>Add a few more to cause the table to rehash</comment>
    </method>
    <method type="Map<Integer,Fraction>" name="generate" startLine="62" endLine="74">
      <declaration type="Map<Integer,Fraction>" name="map" />
      <declaration type="Random" name="r" />
      <declaration type="double" name="dd" />
      <scope startLine="68" endLine="70" />
      <scope startLine="70" endLine="72" />
    </method>
    <method type="OpenIntToFieldHashMap<Fraction>" name="createFromJavaMap" startLine="76" endLine="82">
      <declaration type="OpenIntToFieldHashMap<Fraction>" name="map" />
      <scope startLine="78" endLine="80" />
    </method>
    <method type="void" name="testPutAndGetWith0ExpectedSize" startLine="85" endLine="88">
      <declaration type="OpenIntToFieldHashMap<Fraction>" name="map" />
    </method>
    <method type="void" name="testPutAndGetWithExpectedSize" startLine="91" endLine="94">
      <declaration type="OpenIntToFieldHashMap<Fraction>" name="map" />
    </method>
    <method type="void" name="testPutAndGet" startLine="97" endLine="100">
      <declaration type="OpenIntToFieldHashMap<Fraction>" name="map" />
    </method>
    <method type="void" name="assertPutAndGet" startLine="102" endLine="104" />
    <method type="void" name="assertPutAndGet" startLine="107" endLine="116">
      <scope startLine="109" endLine="115" />
    </method>
    <method type="void" name="testPutAbsentOnExisting" startLine="119" endLine="127">
      <declaration type="OpenIntToFieldHashMap<Fraction>" name="map" />
      <declaration type="int" name="size" />
      <scope startLine="122" endLine="126" />
    </method>
    <method type="void" name="testPutOnExisting" startLine="130" endLine="137">
      <declaration type="OpenIntToFieldHashMap<Fraction>" name="map" />
      <scope startLine="132" endLine="136" />
    </method>
    <method type="void" name="testGetAbsent" startLine="140" endLine="146">
      <declaration type="Map<Integer,Fraction>" name="generated" />
      <declaration type="OpenIntToFieldHashMap<Fraction>" name="map" />
    </method>
    <method type="void" name="testGetFromEmpty" startLine="149" endLine="154">
      <declaration type="OpenIntToFieldHashMap<Fraction>" name="map" />
    </method>
    <method type="void" name="testRemove" startLine="157" endLine="169">
      <declaration type="OpenIntToFieldHashMap<Fraction>" name="map" />
      <declaration type="int" name="mapSize" />
      <scope startLine="161" endLine="165" />
      <comment>Ensure that put and get still work correctly after removals</comment>
    </method>
    <method type="void" name="testRemove2" startLine="173" endLine="189">
      <declaration type="OpenIntToFieldHashMap<Fraction>" name="map" />
      <declaration type="int" name="mapSize" />
      <declaration type="int" name="count" />
      <declaration type="Set<Integer>" name="keysInMap" />
      <scope startLine="178" endLine="185" />
      <comment>Ensure that put and get still work correctly after removals</comment>
    </method>
    <method type="void" name="testRemoveFromEmpty" startLine="192" endLine="195">
      <declaration type="OpenIntToFieldHashMap<Fraction>" name="map" />
    </method>
    <method type="void" name="testRemoveAbsent" startLine="198" endLine="209">
      <declaration type="Map<Integer,Fraction>" name="generated" />
      <declaration type="OpenIntToFieldHashMap<Fraction>" name="map" />
      <declaration type="int" name="mapSize" />
      <scope startLine="204" endLine="208" />
    </method>
    <javadoc>
      <text>* Returns a map with at least 100 elements where each element is absent from javaMap.</text>
    </javadoc>
    <method type="Map<Integer,Fraction>" name="generateAbsent" startLine="214" endLine="222">
      <declaration type="Map<Integer,Fraction>" name="generated" />
      <scope startLine="216" endLine="220" />
    </method>
    <method type="void" name="testCopy" startLine="225" endLine="232">
      <declaration type="OpenIntToFieldHashMap<Fraction>" name="copy" />
    </method>
    <method type="void" name="testContainsKey" startLine="235" endLine="249">
      <declaration type="OpenIntToFieldHashMap<Fraction>" name="map" />
      <scope startLine="237" endLine="239" />
      <scope startLine="240" endLine="242" />
      <scope startLine="243" endLine="248">
        <declaration type="int" name="key" />
      </scope>
    </method>
    <method type="void" name="testIterator" startLine="252" endLine="271">
      <declaration type="OpenIntToFieldHashMap<Fraction>" name="map" />
      <declaration type="OpenIntToFieldHashMap<Fraction>.Iterator" name="iterator" />
      <scope startLine="255" endLine="263">
        <declaration type="int" name="key" />
      </scope>
      <scope startLine="265" endLine="268" />
      <scope startLine="268" endLine="270">
        <comment>expected</comment>
      </scope>
    </method>
    <method type="void" name="testConcurrentModification" startLine="274" endLine="284">
      <declaration type="OpenIntToFieldHashMap<Fraction>" name="map" />
      <declaration type="OpenIntToFieldHashMap<Fraction>.Iterator" name="iterator" />
      <scope startLine="278" endLine="281" />
      <scope startLine="281" endLine="283">
        <comment>expected</comment>
      </scope>
    </method>
    <javadoc>
      <text>* Regression test for a bug in findInsertionIndex where the hashing in the second probing
 * loop was inconsistent with the first causing duplicate keys after the right sequence
 * of puts and removes.</text>
    </javadoc>
    <method type="void" name="testPutKeysWithCollisions" startLine="292" endLine="309">
      <declaration type="OpenIntToFieldHashMap<Fraction>" name="map" />
      <declaration type="int" name="key1" />
      <declaration type="Fraction" name="value1" />
      <declaration type="int" name="key2" />
      <declaration type="int" name="key3" />
      <declaration type="Fraction" name="value2" />
    </method>
    <javadoc>
      <text>* Similar to testPutKeysWithCollisions() but exercises the codepaths in a slightly
 * different manner.</text>
    </javadoc>
    <method type="void" name="testPutKeysWithCollision2" startLine="316" endLine="331">
      <declaration type="OpenIntToFieldHashMap<Fraction>" name="map" />
      <declaration type="int" name="key1" />
      <declaration type="Fraction" name="value1" />
      <declaration type="int" name="key2" />
      <declaration type="Fraction" name="value2" />
    </method>
    <comment>This time only remove some entries</comment>
  </class>
</source>
