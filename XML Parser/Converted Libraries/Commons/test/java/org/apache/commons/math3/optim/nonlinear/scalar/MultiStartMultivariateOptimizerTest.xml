<?xml version="1.0" encoding="UTF-8"?>
<source package="org.apache.commons.math3.optim.nonlinear.scalar">
  <import name="org.apache.commons.math3.analysis.MultivariateFunction" />
  <import name="org.apache.commons.math3.geometry.euclidean.twod.Vector2D" />
  <import name="org.apache.commons.math3.optim.MaxEval" />
  <import name="org.apache.commons.math3.optim.InitialGuess" />
  <import name="org.apache.commons.math3.optim.PointValuePair" />
  <import name="org.apache.commons.math3.optim.SimpleValueChecker" />
  <import name="org.apache.commons.math3.optim.nonlinear.scalar.gradient.CircleScalar" />
  <import name="org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer" />
  <import name="org.apache.commons.math3.optim.nonlinear.scalar.noderiv.NelderMeadSimplex" />
  <import name="org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer" />
  <import name="org.apache.commons.math3.random.GaussianRandomGenerator" />
  <import name="org.apache.commons.math3.random.JDKRandomGenerator" />
  <import name="org.apache.commons.math3.random.RandomVectorGenerator" />
  <import name="org.apache.commons.math3.random.UncorrelatedRandomVectorGenerator" />
  <import name="org.junit.Assert" />
  <import name="org.junit.Test" />
  <class name="MultiStartMultivariateOptimizerTest" startLine="36">
    <method type="void" name="testCircleFitting" startLine="38" endLine="76">
      <declaration type="CircleScalar" name="circle" />
      <declaration type="GradientMultivariateOptimizer" name="underlying" />
      <declaration type="JDKRandomGenerator" name="g" />
      <declaration type="RandomVectorGenerator[]" name="generator" />
      <declaration type="MultiStartMultivariateOptimizer" name="optimizer" />
      <declaration type="PointValuePair[]" name="optimum" />
      <declaration type="PointValuePair[]" name="optima" />
      <scope startLine="67" endLine="72">
        <declaration type="Vector2D" name="center" />
      </scope>
      <comment>TODO: the wrapper around NonLinearConjugateGradientOptimizer is a temporary hack for</comment>
      <comment>version 3.1 of the library. It should be removed when NonLinearConjugateGradientOptimizer</comment>
      <comment>will officially be declared as implementing MultivariateDifferentiableOptimizer</comment>
    </method>
    <method type="void" name="testRosenbrock" startLine="79" endLine="105">
      <declaration type="Rosenbrock" name="rosenbrock" />
      <declaration type="SimplexOptimizer" name="underlying" />
      <declaration type="NelderMeadSimplex[]" name="simplex" />
      <declaration type="JDKRandomGenerator" name="g" />
      <declaration type="RandomVectorGenerator" name="generator" />
      <declaration type="MultiStartMultivariateOptimizer" name="optimizer" />
      <declaration type="PointValuePair[]" name="optimum" />
    </method>
    <class name="Rosenbrock" startLine="107">
      <implements name="MultivariateFunction" />
      <declaration type="int" name="count" />
      <method type="constructor" name="Rosenbrock" startLine="110" endLine="112" />
      <method type="double" name="value" startLine="114" endLine="119">
        <declaration type="double" name="a" />
        <declaration type="double" name="b" />
      </method>
      <method type="int" name="getCount" startLine="121" endLine="123" />
    </class>
  </class>
</source>
