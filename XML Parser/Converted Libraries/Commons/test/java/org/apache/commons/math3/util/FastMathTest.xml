<?xml version="1.0" encoding="UTF-8"?>
<source package="org.apache.commons.math3.util">
  <import name="java.lang.reflect.Method" />
  <import name="java.lang.reflect.Modifier" />
  <import name="java.lang.reflect.Type" />
  <import name="org.apache.commons.math3.TestUtils" />
  <import name="org.apache.commons.math3.dfp.Dfp" />
  <import name="org.apache.commons.math3.dfp.DfpField" />
  <import name="org.apache.commons.math3.dfp.DfpMath" />
  <import name="org.apache.commons.math3.random.MersenneTwister" />
  <import name="org.apache.commons.math3.random.RandomGenerator" />
  <import name="org.junit.Assert" />
  <import name="org.junit.Before" />
  <import name="org.junit.Ignore" />
  <import name="org.junit.Test" />
  <class name="FastMathTest" startLine="34">
    <declaration type="double" name="MAX_ERROR_ULP" />
    <declaration type="int" name="NUMBER_OF_TRIALS" />
    <declaration type="DfpField" name="field" />
    <declaration type="RandomGenerator" name="generator" />
    <method type="void" name="setUp" startLine="44" endLine="47" />
    <method type="void" name="testMinMaxDouble" startLine="50" endLine="81">
      <declaration type="double[][]" name="pairs" />
      <scope startLine="63" endLine="80" />
    </method>
    <method type="void" name="testMinMaxFloat" startLine="84" endLine="114">
      <declaration type="float[][]" name="pairs" />
      <scope startLine="96" endLine="113" />
    </method>
    <method type="void" name="testConstants" startLine="117" endLine="120" />
    <method type="void" name="testAtan2" startLine="123" endLine="130">
      <declaration type="double" name="y1" />
      <declaration type="double" name="x1" />
      <declaration type="double" name="y2" />
      <declaration type="double" name="x2" />
    </method>
    <method type="void" name="testHyperbolic" startLine="133" endLine="158">
      <declaration type="double" name="maxErr" />
      <scope startLine="135" endLine="139">
        <declaration type="double" name="tst" />
        <declaration type="double" name="ref" />
      </scope>
      <scope startLine="143" endLine="147">
        <declaration type="double" name="tst" />
        <declaration type="double" name="ref" />
      </scope>
      <scope startLine="151" endLine="155">
        <declaration type="double" name="tst" />
        <declaration type="double" name="ref" />
      </scope>
    </method>
    <method type="void" name="testMath904" startLine="161" endLine="168">
      <declaration type="double" name="x" />
      <declaration type="double" name="y" />
    </method>
    <method type="void" name="testMath905LargePositive" startLine="171" endLine="190">
      <declaration type="double" name="start" />
      <declaration type="double" name="endT" />
      <declaration type="double" name="end" />
      <declaration type="double" name="maxErr" />
      <scope startLine="177" endLine="181">
        <declaration type="double" name="tst" />
        <declaration type="double" name="ref" />
      </scope>
      <scope startLine="184" endLine="188">
        <declaration type="double" name="tst" />
        <declaration type="double" name="ref" />
      </scope>
    </method>
    <method type="void" name="testMath905LargeNegative" startLine="193" endLine="212">
      <declaration type="double" name="start" />
      <declaration type="double" name="endT" />
      <declaration type="double" name="end" />
      <declaration type="double" name="maxErr" />
      <scope startLine="199" endLine="203">
        <declaration type="double" name="tst" />
        <declaration type="double" name="ref" />
      </scope>
      <scope startLine="206" endLine="210">
        <declaration type="double" name="tst" />
        <declaration type="double" name="ref" />
      </scope>
    </method>
    <method type="void" name="testHyperbolicInverses" startLine="215" endLine="234">
      <declaration type="double" name="maxErr" />
      <scope startLine="217" endLine="219" />
      <scope startLine="223" endLine="225" />
      <scope startLine="229" endLine="231" />
    </method>
    <method type="void" name="testLogAccuracy" startLine="237" endLine="259">
      <declaration type="double" name="maxerrulp" />
      <scope startLine="240" endLine="256">
        <declaration type="double" name="x" />
        <declaration type="double" name="tst" />
        <declaration type="double" name="ref" />
        <declaration type="double" name="err" />
        <scope startLine="247" endLine="255">
          <declaration type="double" name="ulp" />
          <declaration type="double" name="errulp" />
        </scope>
        <comment>double x = generator.nextDouble()*2.0;</comment>
        <comment>System.out.println(x + "\t" + tst + "\t" + ref + "\t" + err + "\t" + errulp);</comment>
      </scope>
    </method>
    <method type="void" name="testLog10Accuracy" startLine="262" endLine="283">
      <declaration type="double" name="maxerrulp" />
      <scope startLine="265" endLine="280">
        <declaration type="double" name="x" />
        <declaration type="double" name="tst" />
        <declaration type="double" name="ref" />
        <declaration type="double" name="err" />
        <scope startLine="272" endLine="279">
          <declaration type="double" name="ulp" />
          <declaration type="double" name="errulp" />
        </scope>
        <comment>double x = generator.nextDouble()*2.0;</comment>
        <comment>System.out.println(x + "\t" + tst + "\t" + ref + "\t" + err + "\t" + errulp);</comment>
      </scope>
    </method>
    <method type="void" name="testLog1pAccuracy" startLine="286" endLine="307">
      <declaration type="double" name="maxerrulp" />
      <scope startLine="289" endLine="304">
        <declaration type="double" name="x" />
        <declaration type="double" name="tst" />
        <declaration type="double" name="ref" />
        <declaration type="double" name="err" />
        <scope startLine="296" endLine="303">
          <declaration type="double" name="ulp" />
          <declaration type="double" name="errulp" />
        </scope>
        <comment>double x = generator.nextDouble()*2.0;</comment>
        <comment>System.out.println(x + "\t" + tst + "\t" + ref + "\t" + err + "\t" + errulp);</comment>
      </scope>
    </method>
    <method type="void" name="testLog1pSpecialCases" startLine="310" endLine="314" />
    <method type="void" name="testLogSpecialCases" startLine="317" endLine="330" />
    <method type="void" name="testExpSpecialCases" startLine="332" endLine="346">
      <comment>Smallest value that will round up to Double.MIN_VALUE</comment>
    </method>
    <method type="void" name="testPowSpecialCases" startLine="349" endLine="409">
      <comment>Added tests for a 100% coverage</comment>
    </method>
    <method type="void" name="testAtan2SpecialCases" startLine="412" endLine="465" />
    <method type="void" name="testPowAccuracy" startLine="468" endLine="498">
      <declaration type="double" name="maxerrulp" />
      <scope startLine="471" endLine="495">
        <declaration type="double" name="x" />
        <declaration type="double" name="y" />
        <declaration type="double" name="tst" />
        <declaration type="double" name="ref" />
        <declaration type="double" name="err" />
        <scope startLine="486" endLine="494">
          <declaration type="double" name="ulp" />
          <declaration type="double" name="errulp" />
        </scope>
        <comment>double x = FastMath.floor(generator.nextDouble()1024.0 - 512.0); double
 y; if (x != 0) y = FastMath.floor(512.0  FastMath.abs(x)); else
 y = generator.nextDouble()1200.0; y = y - y2; x = FastMath.pow(2.0, x) 
 generator.nextDouble(); y = y  generator.nextDouble();</comment>
        <comment>double x = generator.nextDouble()*2.0;</comment>
        <comment>System.out.println(x + "\t" + y + "\t" + tst + "\t" + ref + "\t" + err + "\t" + errulp);</comment>
      </scope>
    </method>
    <method type="void" name="testExpAccuracy" startLine="501" endLine="525">
      <declaration type="double" name="maxerrulp" />
      <scope startLine="504" endLine="522">
        <declaration type="double" name="x" />
        <declaration type="double" name="tst" />
        <declaration type="double" name="ref" />
        <declaration type="double" name="err" />
        <scope startLine="514" endLine="521">
          <declaration type="double" name="ulp" />
          <declaration type="double" name="errulp" />
        </scope>
        <comment>double x = 1.0 + i1024.02.0;</comment>
        <comment>double x = (generator.nextDouble() * 20.0) - 10.0;</comment>
        <comment>double x = ((generator.nextDouble() * 2.0) - 1.0) * generator.nextDouble();</comment>
        <comment>double x = 3.0  512.0  i - 3.0;</comment>
        <comment>System.out.println(x + "\t" + tst + "\t" + ref + "\t" + err + "\t" + errulp);</comment>
      </scope>
    </method>
    <method type="void" name="testSinAccuracy" startLine="528" endLine="554">
      <declaration type="double" name="maxerrulp" />
      <scope startLine="531" endLine="551">
        <declaration type="double" name="x" />
        <declaration type="double" name="tst" />
        <declaration type="double" name="ref" />
        <declaration type="double" name="err" />
        <scope startLine="543" endLine="550">
          <declaration type="double" name="ulp" />
          <declaration type="double" name="errulp" />
        </scope>
        <comment>double x = 1.0 + i1024.02.0;</comment>
        <comment>double x = ((generator.nextDouble() * 1416.0) - 708.0) * generator.nextDouble();</comment>
        <comment>double x = (generator.nextDouble() * 20.0) - 10.0;</comment>
        <comment>double x = ((generator.nextDouble() * 2.0) - 1.0) * generator.nextDouble();</comment>
        <comment>double x = 3.0  512.0  i - 3.0;</comment>
        <comment>System.out.println(x + "\t" + tst + "\t" + ref + "\t" + err + "\t" + errulp);</comment>
      </scope>
    </method>
    <method type="void" name="testCosAccuracy" startLine="557" endLine="583">
      <declaration type="double" name="maxerrulp" />
      <scope startLine="560" endLine="580">
        <declaration type="double" name="x" />
        <declaration type="double" name="tst" />
        <declaration type="double" name="ref" />
        <declaration type="double" name="err" />
        <scope startLine="572" endLine="579">
          <declaration type="double" name="ulp" />
          <declaration type="double" name="errulp" />
        </scope>
        <comment>double x = 1.0 + i1024.02.0;</comment>
        <comment>double x = ((generator.nextDouble() * 1416.0) - 708.0) * generator.nextDouble();</comment>
        <comment>double x = (generator.nextDouble() * 20.0) - 10.0;</comment>
        <comment>double x = ((generator.nextDouble() * 2.0) - 1.0) * generator.nextDouble();</comment>
        <comment>double x = 3.0  512.0  i - 3.0;</comment>
        <comment>System.out.println(x + "\t" + tst + "\t" + ref + "\t" + err + "\t" + errulp);</comment>
      </scope>
    </method>
    <method type="void" name="testTanAccuracy" startLine="586" endLine="612">
      <declaration type="double" name="maxerrulp" />
      <scope startLine="589" endLine="609">
        <declaration type="double" name="x" />
        <declaration type="double" name="tst" />
        <declaration type="double" name="ref" />
        <declaration type="double" name="err" />
        <scope startLine="601" endLine="608">
          <declaration type="double" name="ulp" />
          <declaration type="double" name="errulp" />
        </scope>
        <comment>double x = 1.0 + i1024.02.0;</comment>
        <comment>double x = ((generator.nextDouble() * 1416.0) - 708.0) * generator.nextDouble();</comment>
        <comment>double x = (generator.nextDouble() * 20.0) - 10.0;</comment>
        <comment>double x = ((generator.nextDouble() * 2.0) - 1.0) * generator.nextDouble();</comment>
        <comment>double x = 3.0  512.0  i - 3.0;</comment>
        <comment>System.out.println(x + "\t" + tst + "\t" + ref + "\t" + err + "\t" + errulp);</comment>
      </scope>
    </method>
    <method type="void" name="testAtanAccuracy" startLine="615" endLine="643">
      <declaration type="double" name="maxerrulp" />
      <scope startLine="618" endLine="640">
        <declaration type="double" name="x" />
        <declaration type="double" name="tst" />
        <declaration type="double" name="ref" />
        <declaration type="double" name="err" />
        <scope startLine="632" endLine="639">
          <declaration type="double" name="ulp" />
          <declaration type="double" name="errulp" />
        </scope>
        <comment>double x = 1.0 + i1024.02.0;</comment>
        <comment>double x = ((generator.nextDouble() * 1416.0) - 708.0) * generator.nextDouble();</comment>
        <comment>double x = ((generator.nextDouble() * Math.PI) - Math.PI/2.0) *</comment>
        <comment>generator.nextDouble();</comment>
        <comment>double x = (generator.nextDouble() * 20.0) - 10.0;</comment>
        <comment>double x = ((generator.nextDouble() * 2.0) - 1.0) * generator.nextDouble();</comment>
        <comment>double x = 3.0  512.0  i - 3.0;</comment>
        <comment>System.out.println(x + "\t" + tst + "\t" + ref + "\t" + err + "\t" + errulp);</comment>
      </scope>
    </method>
    <method type="void" name="testAtan2Accuracy" startLine="646" endLine="683">
      <declaration type="double" name="maxerrulp" />
      <scope startLine="649" endLine="680">
        <declaration type="double" name="x" />
        <declaration type="double" name="y" />
        <declaration type="double" name="tst" />
        <declaration type="Dfp" name="refdfp" />
        <scope startLine="661" endLine="666" />
        <declaration type="double" name="ref" />
        <declaration type="double" name="err" />
        <scope startLine="671" endLine="679">
          <declaration type="double" name="ulp" />
          <declaration type="double" name="errulp" />
        </scope>
        <comment>double x = 1.0 + i1024.02.0;</comment>
        <comment>double x = ((generator.nextDouble() * 1416.0) - 708.0) * generator.nextDouble();</comment>
        <comment>double x = (generator.nextDouble() * 20.0) - 10.0;</comment>
        <comment>double x = ((generator.nextDouble() * 2.0) - 1.0) * generator.nextDouble();</comment>
        <comment>double x = 3.0  512.0  i - 3.0;</comment>
        <comment>Make adjustments for sign</comment>
        <comment>System.out.println(x + "\t" + y + "\t" + tst + "\t" + ref + "\t" + errulp);</comment>
      </scope>
    </method>
    <method type="void" name="testExpm1Accuracy" startLine="686" endLine="710">
      <declaration type="double" name="maxerrulp" />
      <scope startLine="689" endLine="707">
        <declaration type="double" name="x" />
        <declaration type="double" name="tst" />
        <declaration type="double" name="ref" />
        <declaration type="double" name="err" />
        <scope startLine="698" endLine="706">
          <declaration type="double" name="ulp" />
          <declaration type="double" name="errulp" />
        </scope>
        <comment>double x = 1.0 + i1024.02.0;</comment>
        <comment>double x = (generator.nextDouble() * 20.0) - 10.0;</comment>
        <comment>double x = 3.0  512.0  i - 3.0;</comment>
        <comment>System.out.println(x + "\t" + tst + "\t" + ref + "\t" + err + "\t" + errulp);</comment>
      </scope>
    </method>
    <method type="void" name="testAsinAccuracy" startLine="713" endLine="733">
      <declaration type="double" name="maxerrulp" />
      <scope startLine="716" endLine="730">
        <declaration type="double" name="x" />
        <declaration type="double" name="tst" />
        <declaration type="double" name="ref" />
        <declaration type="double" name="err" />
        <scope startLine="723" endLine="729">
          <declaration type="double" name="ulp" />
          <declaration type="double" name="errulp" />
        </scope>
        <comment>System.out.println(x+"\t"+tst+"\t"+ref+"\t"+err+"\t"+errulp);</comment>
      </scope>
    </method>
    <method type="void" name="testAcosAccuracy" startLine="736" endLine="756">
      <declaration type="double" name="maxerrulp" />
      <scope startLine="739" endLine="753">
        <declaration type="double" name="x" />
        <declaration type="double" name="tst" />
        <declaration type="double" name="ref" />
        <declaration type="double" name="err" />
        <scope startLine="746" endLine="752">
          <declaration type="double" name="ulp" />
          <declaration type="double" name="errulp" />
        </scope>
        <comment>System.out.println(x+"\t"+tst+"\t"+ref+"\t"+err+"\t"+errulp);</comment>
      </scope>
    </method>
    <javadoc>
      <text>* Added tests for a 100% coverage of acos().</text>
    </javadoc>
    <method type="void" name="testAcosSpecialCases" startLine="762" endLine="775" />
    <javadoc>
      <text>* Added tests for a 100% coverage of asin().</text>
    </javadoc>
    <method type="void" name="testAsinSpecialCases" startLine="781" endLine="794" />
    <method type="Dfp" name="cosh" startLine="796" endLine="798" />
    <method type="Dfp" name="sinh" startLine="800" endLine="802" />
    <method type="Dfp" name="tanh" startLine="804" endLine="806" />
    <method type="void" name="testSinhAccuracy" startLine="809" endLine="828">
      <declaration type="double" name="maxerrulp" />
      <scope startLine="812" endLine="825">
        <declaration type="double" name="x" />
        <declaration type="double" name="tst" />
        <declaration type="double" name="ref" />
        <declaration type="double" name="err" />
        <scope startLine="819" endLine="824">
          <declaration type="double" name="ulp" />
          <declaration type="double" name="errulp" />
        </scope>
        <comment>System.out.println(x+"\t"+tst+"\t"+ref+"\t"+err+"\t"+errulp);</comment>
      </scope>
    </method>
    <method type="void" name="testCoshAccuracy" startLine="831" endLine="850">
      <declaration type="double" name="maxerrulp" />
      <scope startLine="834" endLine="847">
        <declaration type="double" name="x" />
        <declaration type="double" name="tst" />
        <declaration type="double" name="ref" />
        <declaration type="double" name="err" />
        <scope startLine="841" endLine="846">
          <declaration type="double" name="ulp" />
          <declaration type="double" name="errulp" />
        </scope>
        <comment>System.out.println(x+"\t"+tst+"\t"+ref+"\t"+err+"\t"+errulp);</comment>
      </scope>
    </method>
    <method type="void" name="testTanhAccuracy" startLine="853" endLine="872">
      <declaration type="double" name="maxerrulp" />
      <scope startLine="856" endLine="869">
        <declaration type="double" name="x" />
        <declaration type="double" name="tst" />
        <declaration type="double" name="ref" />
        <declaration type="double" name="err" />
        <scope startLine="863" endLine="868">
          <declaration type="double" name="ulp" />
          <declaration type="double" name="errulp" />
        </scope>
        <comment>System.out.println(x+"\t"+tst+"\t"+ref+"\t"+err+"\t"+errulp);</comment>
      </scope>
    </method>
    <method type="void" name="testCbrtAccuracy" startLine="875" endLine="894">
      <declaration type="double" name="maxerrulp" />
      <scope startLine="878" endLine="891">
        <declaration type="double" name="x" />
        <declaration type="double" name="tst" />
        <declaration type="double" name="ref" />
        <declaration type="double" name="err" />
        <scope startLine="885" endLine="890">
          <declaration type="double" name="ulp" />
          <declaration type="double" name="errulp" />
        </scope>
        <comment>System.out.println(x+"\t"+tst+"\t"+ref+"\t"+err+"\t"+errulp);</comment>
      </scope>
    </method>
    <method type="Dfp" name="cbrt" startLine="896" endLine="911">
      <declaration type="boolean" name="negative" />
      <scope startLine="899" endLine="902" />
      <declaration type="Dfp" name="y" />
      <scope startLine="906" endLine="908" />
    </method>
    <method type="void" name="testToDegrees" startLine="914" endLine="933">
      <declaration type="double" name="maxerrulp" />
      <scope startLine="916" endLine="930">
        <declaration type="double" name="x" />
        <declaration type="double" name="tst" />
        <declaration type="double" name="ref" />
        <declaration type="double" name="err" />
        <scope startLine="922" endLine="929">
          <declaration type="double" name="ulp" />
          <declaration type="double" name="errulp" />
        </scope>
        <comment>System.out.println(x + "\t" + tst + "\t" + ref + "\t" + err + "\t" + errulp);</comment>
      </scope>
    </method>
    <method type="void" name="testToRadians" startLine="936" endLine="956">
      <declaration type="double" name="maxerrulp" />
      <scope startLine="938" endLine="953">
        <declaration type="double" name="x" />
        <declaration type="double" name="tst" />
        <declaration type="double" name="ref" />
        <declaration type="double" name="err" />
        <scope startLine="944" endLine="952">
          <declaration type="double" name="ulp" />
          <declaration type="double" name="errulp" />
        </scope>
        <comment>System.out.println(x + "\t" + tst + "\t" + ref + "\t" + err + "\t" + errulp);</comment>
      </scope>
    </method>
    <method type="void" name="testNextAfter" startLine="959" endLine="1020">
      <comment>0x402fffffffffffff 0x404123456789abcd -> 4030000000000000</comment>
      <comment>0xc02fffffffffffff 0x404123456789abcd -> c02ffffffffffffe</comment>
      <comment>0x402fffffffffffff 0x400123456789abcd -> 402ffffffffffffe</comment>
      <comment>0xc02fffffffffffff 0x400123456789abcd -> c02ffffffffffffe</comment>
      <comment>0x4020000000000000 0x404123456789abcd -> 4020000000000001</comment>
      <comment>0xc020000000000000 0x404123456789abcd -> c01fffffffffffff</comment>
      <comment>0x4020000000000000 0x400123456789abcd -> 401fffffffffffff</comment>
      <comment>0xc020000000000000 0x400123456789abcd -> c01fffffffffffff</comment>
      <comment>0x3f2e43753d36a223 0x3f2e43753d36a224 -> 3f2e43753d36a224</comment>
      <comment>0x3f2e43753d36a223 0x3f2e43753d36a223 -> 3f2e43753d36a223</comment>
      <comment>0x3f2e43753d36a223 0x3f2e43753d36a222 -> 3f2e43753d36a222</comment>
      <comment>0x3f2e43753d36a223 0xbf2e43753d36a224 -> 3f2e43753d36a222</comment>
      <comment>0x3f2e43753d36a223 0xbf2e43753d36a223 -> 3f2e43753d36a222</comment>
      <comment>0x3f2e43753d36a223 0xbf2e43753d36a222 -> 3f2e43753d36a222</comment>
      <comment>0xbf2e43753d36a223 0x3f2e43753d36a224 -> bf2e43753d36a222</comment>
      <comment>0xbf2e43753d36a223 0x3f2e43753d36a223 -> bf2e43753d36a222</comment>
      <comment>0xbf2e43753d36a223 0x3f2e43753d36a222 -> bf2e43753d36a222</comment>
      <comment>0xbf2e43753d36a223 0xbf2e43753d36a224 -> bf2e43753d36a224</comment>
      <comment>0xbf2e43753d36a223 0xbf2e43753d36a223 -> bf2e43753d36a223</comment>
      <comment>0xbf2e43753d36a223 0xbf2e43753d36a222 -> bf2e43753d36a222</comment>
    </method>
    <method type="void" name="testDoubleNextAfterSpecialCases" startLine="1023" endLine="1033" />
    <method type="void" name="testFloatNextAfterSpecialCases" startLine="1036" endLine="1046" />
    <method type="void" name="testDoubleScalbSpecialCases" startLine="1049" endLine="1070" />
    <method type="void" name="testFloatScalbSpecialCases" startLine="1073" endLine="1088" />
    <method type="boolean" name="compareClassMethods" startLine="1090" endLine="1104">
      <declaration type="boolean" name="allfound" />
      <scope startLine="1092" endLine="1102">
        <scope startLine="1093" endLine="1101">
          <declaration type="Type[]" name="params" />
          <scope startLine="1095" endLine="1097" />
          <scope startLine="1097" endLine="1100" />
        </scope>
      </scope>
    </method>
    <method type="void" name="checkMissingFastMathClasses" startLine="1107" endLine="1110">
      <declaration type="boolean" name="ok" />
    </method>
    <method type="void" name="checkExtraFastMathClasses" startLine="1114" endLine="1116" />
    <method type="void" name="testSignumDouble" startLine="1119" endLine="1125">
      <declaration type="double" name="delta" />
    </method>
    <method type="void" name="testSignumFloat" startLine="1128" endLine="1134">
      <declaration type="float" name="delta" />
    </method>
    <method type="void" name="testLogWithBase" startLine="1137" endLine="1145" />
    <method type="void" name="testIndicatorDouble" startLine="1148" endLine="1157">
      <declaration type="double" name="delta" />
    </method>
    <method type="void" name="testIndicatorFloat" startLine="1160" endLine="1169">
      <declaration type="float" name="delta" />
    </method>
    <method type="void" name="testIntPow" startLine="1172" endLine="1183">
      <declaration type="int" name="maxExp" />
      <declaration type="DfpField" name="field" />
      <declaration type="double" name="base" />
      <declaration type="Dfp" name="baseDfp" />
      <declaration type="Dfp" name="dfpPower" />
      <scope startLine="1178" endLine="1182" />
    </method>
  </class>
</source>
