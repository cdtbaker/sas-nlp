<?xml version="1.0" encoding="UTF-8"?>
<source package="org.apache.commons.math3.ode.nonstiff">
  <import name="java.io.ByteArrayInputStream" />
  <import name="java.io.ByteArrayOutputStream" />
  <import name="java.io.IOException" />
  <import name="java.io.ObjectInputStream" />
  <import name="java.io.ObjectOutputStream" />
  <import name="java.util.Random" />
  <import name="org.apache.commons.math3.exception.DimensionMismatchException" />
  <import name="org.apache.commons.math3.exception.MaxCountExceededException" />
  <import name="org.apache.commons.math3.exception.NoBracketingException" />
  <import name="org.apache.commons.math3.exception.NumberIsTooSmallException" />
  <import name="org.apache.commons.math3.ode.ContinuousOutputModel" />
  <import name="org.apache.commons.math3.ode.EquationsMapper" />
  <import name="org.apache.commons.math3.ode.TestProblem1" />
  <import name="org.apache.commons.math3.ode.TestProblem3" />
  <import name="org.apache.commons.math3.ode.sampling.StepHandler" />
  <import name="org.apache.commons.math3.ode.sampling.StepInterpolatorTestUtils" />
  <import name="org.apache.commons.math3.util.FastMath" />
  <import name="org.junit.Assert" />
  <import name="org.junit.Test" />
  <class name="EulerStepInterpolatorTest" startLine="42">
    <method type="void" name="noReset" startLine="45" endLine="62">
      <declaration type="double[]" name="y" />
      <declaration type="double[][]" name="yDot" />
      <declaration type="EulerStepInterpolator" name="interpolator" />
      <declaration type="double[]" name="result" />
      <scope startLine="58" endLine="60" />
    </method>
    <method type="void" name="interpolationAtBounds" startLine="65" endLine="100">
      <declaration type="double" name="t0" />
      <declaration type="double[]" name="y0" />
      <declaration type="double[]" name="y" />
      <declaration type="double[][]" name="yDot" />
      <declaration type="EulerStepInterpolator" name="interpolator" />
      <declaration type="double" name="dt" />
      <declaration type="double[]" name="result" />
      <scope startLine="90" endLine="92" />
      <scope startLine="96" endLine="98" />
    </method>
    <method type="void" name="interpolationInside" startLine="103" endLine="130">
      <declaration type="double[]" name="y" />
      <declaration type="double[][]" name="yDot" />
      <declaration type="EulerStepInterpolator" name="interpolator" />
      <declaration type="double[]" name="result" />
    </method>
    <method type="void" name="derivativesConsistency" startLine="135" endLine="140">
      <declaration type="TestProblem3" name="pb" />
      <declaration type="double" name="step" />
      <declaration type="EulerIntegrator" name="integ" />
    </method>
    <method type="void" name="serialization" startLine="146" endLine="183">
      <declaration type="TestProblem1" name="pb" />
      <declaration type="double" name="step" />
      <declaration type="EulerIntegrator" name="integ" />
      <declaration type="ByteArrayOutputStream" name="bos" />
      <declaration type="ObjectOutputStream" name="oos" />
      <scope startLine="158" endLine="160" />
      <declaration type="ByteArrayInputStream" name="bis" />
      <declaration type="ObjectInputStream" name="ois" />
      <declaration type="ContinuousOutputModel" name="cm" />
      <declaration type="Random" name="random" />
      <declaration type="double" name="maxError" />
      <scope startLine="168" endLine="180">
        <declaration type="double" name="r" />
        <declaration type="double" name="time" />
        <declaration type="double[]" name="interpolatedY" />
        <declaration type="double[]" name="theoreticalY" />
        <declaration type="double" name="dx" />
        <declaration type="double" name="dy" />
        <declaration type="double" name="error" />
        <scope startLine="177" endLine="179" />
      </scope>
    </method>
    <class name="DummyIntegrator" extends="RungeKuttaIntegrator" startLine="185">
      <method type="constructor" name="DummyIntegrator" startLine="188" endLine="190" />
    </class>
  </class>
</source>
