<?xml version="1.0" encoding="UTF-8"?>
<source package="org.apache.commons.math3.util">
  <import name="org.apache.commons.math3.distribution.RealDistribution" />
  <import name="org.apache.commons.math3.distribution.UniformRealDistribution" />
  <import name="org.apache.commons.math3.exception.MathArithmeticException" />
  <import name="org.apache.commons.math3.exception.NotFiniteNumberException" />
  <import name="org.apache.commons.math3.exception.NullArgumentException" />
  <import name="org.apache.commons.math3.exception.util.LocalizedFormats" />
  <import name="org.apache.commons.math3.random.RandomDataImpl" />
  <import name="org.junit.Assert" />
  <import name="org.junit.Test" />
  <class name="MathUtilsTest" startLine="26">
    <javadoc>
      <text>* Test cases for the MathUtils class.</text>
      <version>$Id: MathUtilsTest.java 1449529 2013-02-24 19:13:17Z luc $
 * 2007) $</version>
    </javadoc>
    <method type="void" name="testHash" startLine="33" endLine="55">
      <declaration type="double[]" name="testArray" />
      <scope startLine="44" endLine="54">
        <scope startLine="45" endLine="53">
          <scope startLine="46" endLine="49" />
          <scope startLine="49" endLine="52" />
        </scope>
      </scope>
    </method>
    <method type="void" name="testArrayHash" startLine="58" endLine="72" />
    <javadoc>
      <text>* Make sure that permuted arrays do not hash to the same value.</text>
    </javadoc>
    <method type="void" name="testPermutedArrayHash" startLine="78" endLine="103">
      <declaration type="double[]" name="original" />
      <declaration type="double[]" name="permuted" />
      <declaration type="RandomDataImpl" name="random" />
      <scope startLine="84" endLine="87">
        <declaration type="RealDistribution" name="u" />
      </scope>
      <declaration type="boolean" name="isIdentity" />
      <scope startLine="91" endLine="99">
        <declaration type="int[]" name="permutation" />
        <scope startLine="93" endLine="98">
          <scope startLine="94" endLine="96" />
        </scope>
      </scope>
      <comment>Generate 10 distinct random values</comment>
      <comment>Generate a random permutation, making sure it is not the identity</comment>
      <comment>Verify that permuted array has different hash</comment>
    </method>
    <method type="void" name="testIndicatorByte" startLine="106" endLine="110" />
    <method type="void" name="testIndicatorInt" startLine="113" endLine="117" />
    <method type="void" name="testIndicatorLong" startLine="120" endLine="124" />
    <method type="void" name="testIndicatorShort" startLine="127" endLine="131" />
    <method type="void" name="testNormalizeAngle" startLine="134" endLine="144">
      <scope startLine="135" endLine="143">
        <scope startLine="136" endLine="142">
          <declaration type="double" name="c" />
          <declaration type="double" name="twoK" />
        </scope>
      </scope>
    </method>
    <method type="void" name="testReduce" startLine="147" endLine="197">
      <declaration type="double" name="period" />
      <declaration type="double" name="offset" />
      <declaration type="double" name="delta" />
      <declaration type="double" name="orig" />
      <declaration type="double" name="expected" />
    </method>
    <method type="void" name="testReduceComparedWithNormalizeAngle" startLine="200" endLine="211">
      <declaration type="double" name="tol" />
      <declaration type="double" name="period" />
      <scope startLine="203" endLine="210">
        <scope startLine="204" endLine="209">
          <declaration type="double" name="nA" />
          <declaration type="double" name="offset" />
          <declaration type="double" name="r" />
        </scope>
      </scope>
    </method>
    <method type="void" name="testSignByte" startLine="214" endLine="218">
      <declaration type="byte" name="one" />
    </method>
    <method type="void" name="testSignInt" startLine="221" endLine="225">
      <declaration type="int" name="one" />
    </method>
    <method type="void" name="testSignLong" startLine="228" endLine="232">
      <declaration type="long" name="one" />
    </method>
    <method type="void" name="testSignShort" startLine="235" endLine="239">
      <declaration type="short" name="one" />
    </method>
    <method type="void" name="testCheckFinite" startLine="242" endLine="280">
      <scope startLine="243" endLine="246" />
      <scope startLine="246" endLine="248">
        <comment>Expected</comment>
      </scope>
      <scope startLine="249" endLine="252" />
      <scope startLine="252" endLine="254">
        <comment>Expected</comment>
      </scope>
      <scope startLine="255" endLine="258" />
      <scope startLine="258" endLine="260">
        <comment>Expected</comment>
      </scope>
      <scope startLine="262" endLine="265" />
      <scope startLine="265" endLine="267">
        <comment>Expected</comment>
      </scope>
      <scope startLine="268" endLine="271" />
      <scope startLine="271" endLine="273">
        <comment>Expected</comment>
      </scope>
      <scope startLine="274" endLine="277" />
      <scope startLine="277" endLine="279">
        <comment>Expected</comment>
      </scope>
    </method>
    <method type="void" name="testCheckNotNull1" startLine="283" endLine="290">
      <scope startLine="284" endLine="287">
        <declaration type="Object" name="obj" />
      </scope>
      <scope startLine="287" endLine="289">
        <comment>Expected.</comment>
      </scope>
    </method>
    <method type="void" name="testCheckNotNull2" startLine="293" endLine="300">
      <scope startLine="294" endLine="297">
        <declaration type="double[]" name="array" />
      </scope>
      <scope startLine="297" endLine="299">
        <comment>Expected.</comment>
      </scope>
    </method>
    <method type="void" name="testCopySignByte" startLine="303" endLine="331">
      <declaration type="byte" name="a" />
      <declaration type="byte" name="minValuePlusOne" />
      <declaration type="byte" name="one" />
      <declaration type="byte" name="val" />
      <declaration type="byte" name="minusOne" />
    </method>
    <method type="void" name="testCopySignByte2" startLine="334" endLine="336" />
  </class>
</source>
