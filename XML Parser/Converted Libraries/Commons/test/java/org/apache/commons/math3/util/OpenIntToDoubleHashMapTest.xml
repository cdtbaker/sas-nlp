<?xml version="1.0" encoding="UTF-8"?>
<source package="org.apache.commons.math3.util">
  <import name="java.util.ConcurrentModificationException" />
  <import name="java.util.HashMap" />
  <import name="java.util.HashSet" />
  <import name="java.util.Map" />
  <import name="java.util.NoSuchElementException" />
  <import name="java.util.Random" />
  <import name="java.util.Set" />
  <import name="org.junit.Assert" />
  <import name="org.junit.Before" />
  <import name="org.junit.Test" />
  <class name="OpenIntToDoubleHashMapTest" startLine="32">
    <javadoc>
      <text>* Test cases for the {@link OpenIntToDoubleHashMap}.</text>
    </javadoc>
    <declaration type="Map<Integer,Double>" name="javaMap" />
    <method type="void" name="setUp" startLine="40" endLine="57">
      <comment>Add a few more to cause the table to rehash</comment>
    </method>
    <method type="Map<Integer,Double>" name="generate" startLine="59" endLine="65">
      <declaration type="Map<Integer,Double>" name="map" />
      <declaration type="Random" name="r" />
    </method>
    <method type="OpenIntToDoubleHashMap" name="createFromJavaMap" startLine="67" endLine="73">
      <declaration type="OpenIntToDoubleHashMap" name="map" />
      <scope startLine="69" endLine="71" />
    </method>
    <method type="void" name="testPutAndGetWith0ExpectedSize" startLine="76" endLine="79">
      <declaration type="OpenIntToDoubleHashMap" name="map" />
    </method>
    <method type="void" name="testPutAndGetWithExpectedSize" startLine="82" endLine="85">
      <declaration type="OpenIntToDoubleHashMap" name="map" />
    </method>
    <method type="void" name="testPutAndGet" startLine="88" endLine="91">
      <declaration type="OpenIntToDoubleHashMap" name="map" />
    </method>
    <method type="void" name="assertPutAndGet" startLine="93" endLine="95" />
    <method type="void" name="assertPutAndGet" startLine="98" endLine="107">
      <scope startLine="100" endLine="106" />
    </method>
    <method type="void" name="testPutAbsentOnExisting" startLine="110" endLine="118">
      <declaration type="OpenIntToDoubleHashMap" name="map" />
      <declaration type="int" name="size" />
      <scope startLine="113" endLine="117" />
    </method>
    <method type="void" name="testPutOnExisting" startLine="121" endLine="128">
      <declaration type="OpenIntToDoubleHashMap" name="map" />
      <scope startLine="123" endLine="127" />
    </method>
    <method type="void" name="testGetAbsent" startLine="131" endLine="137">
      <declaration type="Map<Integer,Double>" name="generated" />
      <declaration type="OpenIntToDoubleHashMap" name="map" />
    </method>
    <method type="void" name="testGetFromEmpty" startLine="140" endLine="145">
      <declaration type="OpenIntToDoubleHashMap" name="map" />
    </method>
    <method type="void" name="testRemove" startLine="148" endLine="160">
      <declaration type="OpenIntToDoubleHashMap" name="map" />
      <declaration type="int" name="mapSize" />
      <scope startLine="152" endLine="156" />
      <comment>Ensure that put and get still work correctly after removals</comment>
    </method>
    <method type="void" name="testRemove2" startLine="164" endLine="180">
      <declaration type="OpenIntToDoubleHashMap" name="map" />
      <declaration type="int" name="mapSize" />
      <declaration type="int" name="count" />
      <declaration type="Set<Integer>" name="keysInMap" />
      <scope startLine="169" endLine="176" />
      <comment>Ensure that put and get still work correctly after removals</comment>
    </method>
    <method type="void" name="testRemoveFromEmpty" startLine="183" endLine="186">
      <declaration type="OpenIntToDoubleHashMap" name="map" />
    </method>
    <method type="void" name="testRemoveAbsent" startLine="189" endLine="200">
      <declaration type="Map<Integer,Double>" name="generated" />
      <declaration type="OpenIntToDoubleHashMap" name="map" />
      <declaration type="int" name="mapSize" />
      <scope startLine="195" endLine="199" />
    </method>
    <javadoc>
      <text>* Returns a map with at least 100 elements where each element is absent from javaMap.</text>
    </javadoc>
    <method type="Map<Integer,Double>" name="generateAbsent" startLine="205" endLine="213">
      <declaration type="Map<Integer,Double>" name="generated" />
      <scope startLine="207" endLine="211" />
    </method>
    <method type="void" name="testCopy" startLine="216" endLine="223">
      <declaration type="OpenIntToDoubleHashMap" name="copy" />
    </method>
    <method type="void" name="testContainsKey" startLine="226" endLine="240">
      <declaration type="OpenIntToDoubleHashMap" name="map" />
      <scope startLine="228" endLine="230" />
      <scope startLine="231" endLine="233" />
      <scope startLine="234" endLine="239">
        <declaration type="int" name="key" />
      </scope>
    </method>
    <method type="void" name="testIterator" startLine="243" endLine="262">
      <declaration type="OpenIntToDoubleHashMap" name="map" />
      <declaration type="OpenIntToDoubleHashMap.Iterator" name="iterator" />
      <scope startLine="246" endLine="254">
        <declaration type="int" name="key" />
      </scope>
      <scope startLine="256" endLine="259" />
      <scope startLine="259" endLine="261">
        <comment>expected</comment>
      </scope>
    </method>
    <method type="void" name="testConcurrentModification" startLine="265" endLine="275">
      <declaration type="OpenIntToDoubleHashMap" name="map" />
      <declaration type="OpenIntToDoubleHashMap.Iterator" name="iterator" />
      <scope startLine="269" endLine="272" />
      <scope startLine="272" endLine="274">
        <comment>expected</comment>
      </scope>
    </method>
    <javadoc>
      <text>* Regression test for a bug in findInsertionIndex where the hashing in the second probing
 * loop was inconsistent with the first causing duplicate keys after the right sequence
 * of puts and removes.</text>
    </javadoc>
    <method type="void" name="testPutKeysWithCollisions" startLine="283" endLine="300">
      <declaration type="OpenIntToDoubleHashMap" name="map" />
      <declaration type="int" name="key1" />
      <declaration type="double" name="value1" />
      <declaration type="int" name="key2" />
      <declaration type="int" name="key3" />
      <declaration type="double" name="value2" />
    </method>
    <javadoc>
      <text>* Similar to testPutKeysWithCollisions() but exercises the codepaths in a slightly
 * different manner.</text>
    </javadoc>
    <method type="void" name="testPutKeysWithCollision2" startLine="307" endLine="322">
      <declaration type="OpenIntToDoubleHashMap" name="map" />
      <declaration type="int" name="key1" />
      <declaration type="double" name="value1" />
      <declaration type="int" name="key2" />
      <declaration type="double" name="value2" />
    </method>
    <comment>This time only remove some entries</comment>
  </class>
</source>
