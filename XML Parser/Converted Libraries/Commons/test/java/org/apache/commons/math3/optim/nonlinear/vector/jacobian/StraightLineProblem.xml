<?xml version="1.0" encoding="UTF-8"?>
<source package="org.apache.commons.math3.optim.nonlinear.vector.jacobian">
  <import name="java.util.ArrayList" />
  <import name="org.apache.commons.math3.analysis.MultivariateVectorFunction" />
  <import name="org.apache.commons.math3.analysis.MultivariateMatrixFunction" />
  <import name="org.apache.commons.math3.analysis.UnivariateFunction" />
  <import name="org.apache.commons.math3.stat.regression.SimpleRegression" />
  <import name="org.apache.commons.math3.optim.nonlinear.vector.ModelFunction" />
  <import name="org.apache.commons.math3.optim.nonlinear.vector.ModelFunctionJacobian" />
  <class name="StraightLineProblem" startLine="28">
    <javadoc>
      <text>* Class that models a straight line defined as {@code y = a x + b}.
 * The parameters of problem are:
 * <ul>
 * <li>{@code a}</li>
 * <li>{@code b}</li>
 * </ul>
 * The model functions are:
 * <ul>
 * <li>for each pair (a, b), the y-coordinate of the line.</li>
 * </ul></text>
    </javadoc>
    <javadoc>
      <text>* Cloud of points assumed to be fitted by a straight line.</text>
    </javadoc>
    <declaration type="ArrayList<double[]>" name="points" />
    <javadoc>
      <text>* Error (on the y-coordinate of the points).</text>
    </javadoc>
    <declaration type="double" name="sigma" />
    <javadoc>
      <param>error Assumed error for the y-coordinate.</param>
    </javadoc>
    <method type="constructor" name="StraightLineProblem" startLine="49" endLine="52" />
    <method type="void" name="addPoint" startLine="54" endLine="56" />
    <javadoc>
      <return>the list of x-coordinates.</return>
    </javadoc>
    <method type="double[]" name="x" startLine="61" endLine="69">
      <declaration type="double[]" name="v" />
      <scope startLine="63" endLine="66">
        <declaration type="double[]" name="p" />
        <comment>x-coordinate.</comment>
      </scope>
    </method>
    <javadoc>
      <return>the list of y-coordinates.</return>
    </javadoc>
    <method type="double[]" name="y" startLine="74" endLine="82">
      <declaration type="double[]" name="v" />
      <scope startLine="76" endLine="79">
        <declaration type="double[]" name="p" />
        <comment>y-coordinate.</comment>
      </scope>
    </method>
    <method type="double[]" name="target" startLine="84" endLine="86" />
    <method type="double[]" name="weight" startLine="88" endLine="96">
      <declaration type="double" name="weight" />
      <declaration type="double[]" name="w" />
      <scope startLine="91" endLine="93" />
    </method>
    <method type="ModelFunction" name="getModelFunction" startLine="98" endLine="112">
      <method type="double[]" name="value" startLine="100" endLine="110">
        <declaration type="Model" name="line" />
        <declaration type="double[]" name="model" />
        <scope startLine="104" endLine="107">
          <declaration type="double[]" name="p" />
        </scope>
      </method>
    </method>
    <method type="ModelFunctionJacobian" name="getModelFunctionJacobian" startLine="114" endLine="120">
      <method type="double[][]" name="value" startLine="116" endLine="118" />
    </method>
    <javadoc>
      <text>* Directly solve the linear problem, using the {@link SimpleRegression}class.</text>
    </javadoc>
    <method type="double[]" name="solve" startLine="126" endLine="134">
      <declaration type="SimpleRegression" name="regress" />
      <scope startLine="128" endLine="130" />
      <declaration type="double[]" name="result" />
    </method>
    <method type="double[][]" name="jacobian" startLine="136" endLine="148">
      <declaration type="double[][]" name="jacobian" />
      <scope startLine="139" endLine="145">
        <declaration type="double[]" name="p" />
        <comment>Partial derivative wrt "a".</comment>
        <comment>Partial derivative wrt "b".</comment>
      </scope>
    </method>
    <class name="Model" startLine="150">
      <implements name="UnivariateFunction" />
      <javadoc>
        <text>* Linear function.</text>
      </javadoc>
      <declaration type="double" name="a" />
      <declaration type="double" name="b" />
      <method type="constructor" name="Model" startLine="158" endLine="161" />
      <method type="double" name="value" startLine="163" endLine="165" />
    </class>
  </class>
</source>
