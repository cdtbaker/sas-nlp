<?xml version="1.0" encoding="UTF-8"?>
<source package="org.apache.commons.math3.analysis.solvers">
  <import name="org.apache.commons.math3.analysis.polynomials.PolynomialFunction" />
  <import name="org.apache.commons.math3.exception.NumberIsTooLargeException" />
  <import name="org.apache.commons.math3.exception.NoBracketingException" />
  <import name="org.apache.commons.math3.complex.Complex" />
  <import name="org.apache.commons.math3.util.FastMath" />
  <import name="org.apache.commons.math3.TestUtils" />
  <import name="org.junit.Assert" />
  <import name="org.junit.Test" />
  <class name="LaguerreSolverTest" startLine="28">
    <javadoc>
      <text>* Test case for Laguerre solver.
 * <p>
 * Laguerre's method is very efficient in solving polynomials. Test runs
 * show that for a default absolute accuracy of 1E-6, it generally takes
 * less than 5 iterations to find one root, provided solveAll() is not
 * invoked, and 15 to 20 iterations to find all roots for quintic function.</text>
      <version>$Id: LaguerreSolverTest.java 1361793 2012-07-15 20:50:13Z erans $</version>
    </javadoc>
    <javadoc>
      <text>* Test of solver for the linear function.</text>
    </javadoc>
    <method type="void" name="testLinearFunction" startLine="43" endLine="56">
      <declaration type="double" name="min" />
      <declaration type="double[]" name="coefficients" />
      <declaration type="PolynomialFunction" name="f" />
      <declaration type="LaguerreSolver" name="solver" />
      <comment>p(x) = 4x - 1</comment>
    </method>
    <javadoc>
      <text>* Test of solver for the quadratic function.</text>
    </javadoc>
    <method type="void" name="testQuadraticFunction" startLine="62" endLine="81">
      <declaration type="double" name="min" />
      <declaration type="double[]" name="coefficients" />
      <declaration type="PolynomialFunction" name="f" />
      <declaration type="LaguerreSolver" name="solver" />
      <comment>p(x) = 2x^2 + 5x - 3 = (x+3)(2x-1)</comment>
    </method>
    <javadoc>
      <text>* Test of solver for the quintic function.</text>
    </javadoc>
    <method type="void" name="testQuinticFunction" startLine="87" endLine="112">
      <declaration type="double" name="min" />
      <declaration type="double[]" name="coefficients" />
      <declaration type="PolynomialFunction" name="f" />
      <declaration type="LaguerreSolver" name="solver" />
      <comment>p(x) = x^5 - x^4 - 12x^3 + x^2 - x - 12 = (x+1)(x+3)(x-4)(x^2-x+1)</comment>
    </method>
    <javadoc>
      <text>* Test of solver for the quintic function using{@link LaguerreSolver#solveAllComplex(double[],double) solveAllComplex}.</text>
    </javadoc>
    <method type="void" name="testQuinticFunction2" startLine="119" endLine="134">
      <declaration type="double[]" name="coefficients" />
      <declaration type="LaguerreSolver" name="solver" />
      <declaration type="Complex[]" name="result" />
      <scope startLine="129" endLine="133">
        <declaration type="double" name="tolerance" />
      </scope>
      <comment>p(x) = x^5 + 4x^3 + x^2 + 4 = (x+1)(x^2-x+1)(x^2+4)</comment>
    </method>
    <javadoc>
      <text>* Test of parameters for the solver.</text>
    </javadoc>
    <method type="void" name="testParameters" startLine="140" endLine="159">
      <declaration type="double[]" name="coefficients" />
      <declaration type="PolynomialFunction" name="f" />
      <declaration type="LaguerreSolver" name="solver" />
      <scope startLine="145" endLine="149">
        <comment>bad interval</comment>
      </scope>
      <scope startLine="149" endLine="151">
        <comment>expected</comment>
      </scope>
      <scope startLine="152" endLine="156">
        <comment>no bracketing</comment>
      </scope>
      <scope startLine="156" endLine="158">
        <comment>expected</comment>
      </scope>
    </method>
  </class>
</source>
