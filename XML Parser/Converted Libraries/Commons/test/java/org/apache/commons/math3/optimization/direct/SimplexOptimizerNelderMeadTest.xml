<?xml version="1.0" encoding="UTF-8"?>
<source package="org.apache.commons.math3.optimization.direct">
  <import name="org.apache.commons.math3.exception.TooManyEvaluationsException" />
  <import name="org.apache.commons.math3.analysis.MultivariateFunction" />
  <import name="org.apache.commons.math3.analysis.MultivariateVectorFunction" />
  <import name="org.apache.commons.math3.linear.Array2DRowRealMatrix" />
  <import name="org.apache.commons.math3.linear.RealMatrix" />
  <import name="org.apache.commons.math3.optimization.GoalType" />
  <import name="org.apache.commons.math3.optimization.LeastSquaresConverter" />
  <import name="org.apache.commons.math3.optimization.PointValuePair" />
  <import name="org.apache.commons.math3.util.FastMath" />
  <import name="org.junit.Assert" />
  <import name="org.junit.Test" />
  <class name="SimplexOptimizerNelderMeadTest" startLine="33">
    <method type="void" name="testMinimize1" startLine="35" endLine="47">
      <declaration type="SimplexOptimizer" name="optimizer" />
      <declaration type="FourExtrema" name="fourExtrema" />
      <declaration type="PointValuePair[]" name="optimum" />
    </method>
    <method type="void" name="testMinimize2" startLine="50" endLine="62">
      <declaration type="SimplexOptimizer" name="optimizer" />
      <declaration type="FourExtrema" name="fourExtrema" />
      <declaration type="PointValuePair[]" name="optimum" />
    </method>
    <method type="void" name="testMaximize1" startLine="65" endLine="77">
      <declaration type="SimplexOptimizer" name="optimizer" />
      <declaration type="FourExtrema" name="fourExtrema" />
      <declaration type="PointValuePair[]" name="optimum" />
    </method>
    <method type="void" name="testMaximize2" startLine="80" endLine="92">
      <declaration type="SimplexOptimizer" name="optimizer" />
      <declaration type="FourExtrema" name="fourExtrema" />
      <declaration type="PointValuePair[]" name="optimum" />
    </method>
    <method type="void" name="testRosenbrock" startLine="95" endLine="109">
      <declaration type="Rosenbrock" name="rosenbrock" />
      <declaration type="SimplexOptimizer" name="optimizer" />
      <declaration type="PointValuePair[]" name="optimum" />
    </method>
    <method type="void" name="testPowell" startLine="112" endLine="123">
      <declaration type="Powell" name="powell" />
      <declaration type="SimplexOptimizer" name="optimizer" />
      <declaration type="PointValuePair[]" name="optimum" />
    </method>
    <method type="void" name="testLeastSquares1" startLine="126" endLine="147">
      <declaration type="RealMatrix[]" name="factors" />
      <declaration type="LeastSquaresConverter[]" name="ls" />
      <method type="double[]" name="value" startLine="134" endLine="136" />
      <declaration type="SimplexOptimizer" name="optimizer" />
      <declaration type="PointValuePair[]" name="optimum" />
    </method>
    <method type="void" name="testLeastSquares2" startLine="150" endLine="171">
      <declaration type="RealMatrix[]" name="factors" />
      <declaration type="LeastSquaresConverter[]" name="ls" />
      <method type="double[]" name="value" startLine="158" endLine="160" />
      <declaration type="SimplexOptimizer" name="optimizer" />
      <declaration type="PointValuePair[]" name="optimum" />
    </method>
    <method type="void" name="testLeastSquares3" startLine="174" endLine="197">
      <declaration type="RealMatrix[]" name="factors" />
      <declaration type="LeastSquaresConverter[]" name="ls" />
      <method type="double[]" name="value" startLine="182" endLine="184" />
      <declaration type="SimplexOptimizer" name="optimizer" />
      <declaration type="PointValuePair[]" name="optimum" />
    </method>
    <method type="void" name="testMaxIterations" startLine="200" endLine="205">
      <declaration type="Powell" name="powell" />
      <declaration type="SimplexOptimizer" name="optimizer" />
    </method>
    <class name="FourExtrema" startLine="207">
      <implements name="MultivariateFunction" />
      <declaration type="double" name="xM" />
      <declaration type="double" name="yM" />
      <declaration type="double" name="xP" />
      <declaration type="double" name="yP" />
      <declaration type="double" name="valueXmYm" />
      <declaration type="double" name="valueXmYp" />
      <declaration type="double" name="valueXpYm" />
      <declaration type="double" name="valueXpYp" />
      <method type="double" name="value" startLine="218" endLine="223">
        <declaration type="double" name="x" />
        <declaration type="double" name="y" />
      </method>
      <class name="Rosenbrock" startLine="226">
        <implements name="MultivariateFunction" />
        <declaration type="int" name="count" />
        <method type="constructor" name="Rosenbrock" startLine="229" endLine="231" />
        <method type="double" name="value" startLine="233" endLine="238">
          <declaration type="double" name="a" />
          <declaration type="double" name="b" />
        </method>
        <method type="int" name="getCount" startLine="240" endLine="242" />
        <class name="Powell" startLine="245">
          <implements name="MultivariateFunction" />
          <declaration type="int" name="count" />
          <method type="constructor" name="Powell" startLine="248" endLine="250" />
          <method type="double" name="value" startLine="252" endLine="259">
            <declaration type="double" name="a" />
            <declaration type="double" name="b" />
            <declaration type="double" name="c" />
            <declaration type="double" name="d" />
          </method>
          <method type="int" name="getCount" startLine="261" endLine="263" />
        </class>
      </class>
    </class>
    <comment>The following function has 4 local extrema.</comment>
    <comment>Local maximum.</comment>
    <comment>Local minimum.</comment>
    <comment>Global minimum.</comment>
    <comment>Global maximum.</comment>
  </class>
</source>
