<?xml version="1.0" encoding="UTF-8"?>
<source package="org.apache.commons.math3.util">
  <import name="org.apache.commons.math3.distribution.IntegerDistribution" />
  <import name="org.apache.commons.math3.distribution.UniformIntegerDistribution" />
  <import name="org.junit.After" />
  <import name="org.junit.Assert" />
  <import name="org.junit.Before" />
  <import name="org.junit.Test" />
  <class name="ResizableDoubleArrayTest" extends="DoubleArrayAbstractTest" startLine="28">
    <javadoc>
      <text>* This class contains test cases for the ResizableDoubleArray.</text>
      <version>$Id: ResizableDoubleArrayTest.java 1410121 2012-11-16 00:18:30Z erans $</version>
    </javadoc>
    <method type="void" name="tearDown" startLine="36" endLine="39" />
    <method type="void" name="setUp" startLine="42" endLine="45" />
    <method type="void" name="testConstructors" startLine="48" endLine="129">
      <declaration type="float" name="defaultExpansionFactor" />
      <declaration type="float" name="defaultContractionCriteria" />
      <declaration type="int" name="defaultMode" />
      <declaration type="ResizableDoubleArray" name="testDa" />
      <scope startLine="59" endLine="62" />
      <scope startLine="62" endLine="64">
        <comment>expected</comment>
      </scope>
      <declaration type="double[][]" name="initialArray" />
      <scope startLine="80" endLine="83" />
      <scope startLine="83" endLine="85">
        <comment>expected</comment>
      </scope>
      <scope startLine="98" endLine="101" />
      <scope startLine="101" endLine="103">
        <comment>expected</comment>
      </scope>
      <scope startLine="114" endLine="117" />
      <scope startLine="117" endLine="119">
        <comment>expected</comment>
      </scope>
      <declaration type="ResizableDoubleArray" name="copyDa" />
      <comment>Copy constructor</comment>
    </method>
    <method type="void" name="testSetElementArbitraryExpansion1" startLine="133" endLine="154">
      <comment>MULTIPLICATIVE_MODE</comment>
      <comment>Expand the array arbitrarily to 1000 items</comment>
    </method>
    <method type="void" name="testSetElementArbitraryExpansion2" startLine="157" endLine="191">
      <scope startLine="174" endLine="177" />
      <scope startLine="177" endLine="179">
        <comment>expected</comment>
      </scope>
      <declaration type="ResizableDoubleArray" name="testDa" />
      <comment>Make sure numElements and expansion work correctly for expansion boundary cases</comment>
      <comment>ADDITIVE_MODE</comment>
    </method>
    <method type="void" name="testAdd1000" startLine="195" endLine="200" />
    <method type="void" name="testAddElements" startLine="203" endLine="228">
      <declaration type="ResizableDoubleArray" name="testDa" />
      <comment>MULTIPLICATIVE_MODE</comment>
      <comment>ADDITIVE_MODE  (x's are occupied storage locations, 0's are open)</comment>
      <comment>x,0</comment>
      <comment>x,x</comment>
      <comment>x,x,x,0 -- expanded</comment>
      <comment>x,x,x,0</comment>
    </method>
    <method type="void" name="testAddElementRolling" startLine="232" endLine="287">
      <declaration type="ResizableDoubleArray" name="testDa" />
      <scope startLine="275" endLine="278" />
      <scope startLine="278" endLine="280">
        <comment>expected</comment>
      </scope>
      <scope startLine="281" endLine="284" />
      <scope startLine="284" endLine="286">
        <comment>expected</comment>
      </scope>
      <comment>MULTIPLICATIVE_MODE</comment>
      <comment>ADDITIVE_MODE  (x's are occupied storage locations, 0's are open)</comment>
      <comment>x,0</comment>
      <comment>x,x</comment>
      <comment>x,x,x,0 -- expanded</comment>
      <comment>x,x,x,0</comment>
      <comment>0,x,x,x</comment>
      <comment>0,0,x,x,x,0 -- time to contract</comment>
      <comment>contracted -- x,x,x,0</comment>
    </method>
    <method type="void" name="testSetNumberOfElements" startLine="290" endLine="312">
      <scope startLine="302" endLine="305" />
      <scope startLine="305" endLine="306" />
    </method>
    <method type="void" name="testWithInitialCapacity" startLine="315" endLine="333">
      <declaration type="ResizableDoubleArray" name="eDA2" />
      <declaration type="IntegerDistribution" name="randomData" />
      <declaration type="int" name="iterations" />
      <scope startLine="323" endLine="325" />
    </method>
    <method type="void" name="testWithInitialCapacityAndExpansionFactor" startLine="336" endLine="356">
      <declaration type="ResizableDoubleArray" name="eDA3" />
      <declaration type="IntegerDistribution" name="randomData" />
      <declaration type="int" name="iterations" />
      <scope startLine="344" endLine="346" />
    </method>
    <method type="void" name="testDiscard" startLine="359" endLine="409">
      <scope startLine="385" endLine="388" />
      <scope startLine="388" endLine="389" />
      <scope startLine="391" endLine="394" />
      <scope startLine="394" endLine="395" />
      <scope startLine="397" endLine="400" />
      <scope startLine="400" endLine="401" />
      <scope startLine="403" endLine="406" />
      <scope startLine="406" endLine="407" />
    </method>
    <method type="void" name="testSubstitute" startLine="412" endLine="441">
      <scope startLine="431" endLine="433" />
      <scope startLine="433" endLine="435" />
    </method>
    <method type="void" name="testMutators" startLine="444" endLine="465">
      <scope startLine="449" endLine="452">
        <comment>greater than contractionCriteria</comment>
      </scope>
      <scope startLine="452" endLine="454">
        <comment>expected</comment>
      </scope>
      <scope startLine="459" endLine="462" />
      <scope startLine="462" endLine="464">
        <comment>expected</comment>
      </scope>
    </method>
    <method type="void" name="testEqualsAndHashCode" startLine="468" endLine="542">
      <declaration type="ResizableDoubleArray" name="first" />
      <declaration type="Double" name="other" />
      <declaration type="ResizableDoubleArray" name="second" />
      <declaration type="ResizableDoubleArray" name="third" />
      <declaration type="ResizableDoubleArray" name="fourth" />
      <declaration type="ResizableDoubleArray" name="fifth" />
      <comment>Wrong type</comment>
      <comment>Null</comment>
      <comment>Reflexive</comment>
      <comment>Argumentless constructor</comment>
      <comment>Equals iff same data, same properties</comment>
      <comment>expand</comment>
      <comment>discard</comment>
      <comment>discard recent</comment>
      <comment>wrong order</comment>
      <comment>copy</comment>
      <comment>Copy constructor</comment>
      <comment>Instance copy</comment>
    </method>
    <method type="void" name="testGetArrayRef" startLine="545" endLine="559">
      <declaration type="ResizableDoubleArray" name="a" />
      <declaration type="int" name="index" />
      <declaration type="double" name="v1" />
      <declaration type="double" name="v2" />
      <declaration type="double[]" name="aInternalArray" />
      <comment>Modify "a" through the public API.</comment>
      <comment>Modify the internal storage through the protected API.</comment>
    </method>
    <method type="void" name="testCompute" startLine="562" endLine="585">
      <declaration type="ResizableDoubleArray" name="a" />
      <declaration type="int" name="max" />
      <scope startLine="565" endLine="567" />
      <declaration type="MathArrays.Function[]" name="add" />
      <method type="double" name="evaluate" startLine="570" endLine="577">
        <declaration type="double" name="sum" />
        <declaration type="int" name="max" />
        <scope startLine="573" endLine="575" />
      </method>
      <method type="double" name="evaluate" startLine="578" endLine="580" />
      <declaration type="double" name="sum" />
    </method>
    <method type="void" name="verifyEquality" startLine="587" endLine="591" />
    <method type="void" name="verifyInequality" startLine="593" endLine="597" />
  </class>
</source>
