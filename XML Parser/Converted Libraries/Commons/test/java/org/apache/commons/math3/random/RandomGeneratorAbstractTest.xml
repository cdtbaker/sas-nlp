<?xml version="1.0" encoding="UTF-8"?>
<source package="org.apache.commons.math3.random">
  <import name="java.util.Arrays" />
  <import name="org.apache.commons.math3.TestUtils" />
  <import name="org.apache.commons.math3.stat.Frequency" />
  <import name="org.apache.commons.math3.stat.descriptive.SummaryStatistics" />
  <import name="org.apache.commons.math3.util.FastMath" />
  <import name="org.apache.commons.math3.exception.MathIllegalArgumentException" />
  <import name="org.junit.Assert" />
  <import name="org.junit.Before" />
  <import name="org.junit.Test" />
  <class name="RandomGeneratorAbstractTest" extends="RandomDataGeneratorTest" startLine="31">
    <javadoc>
      <text>* Base class for RandomGenerator tests.
 * Tests RandomGenerator methods directly and also executes RandomDataTest
 * test cases against a RandomDataImpl created using the provided generator.
 * RandomGenerator test classes should extend this class, implementing
 * makeGenerator() to provide a concrete generator to test. The generator
 * returned by makeGenerator should be seeded with a fixed seed.</text>
      <version>$Id: RandomGeneratorAbstractTest.java 1454846 2013-03-10 13:02:04Z luc $</version>
    </javadoc>
    <javadoc>
      <text>* RandomGenerator under test</text>
    </javadoc>
    <declaration type="RandomGenerator" name="generator" />
    <method name="makeGenerator" type="RandomGenerator" startLine="49" endLine="53" />
    <javadoc>
      <text>* Override this method in subclasses to provide a concrete generator to test.
 * Return a generator seeded with a fixed seed.</text>
    </javadoc>
    <javadoc>
      <text>* Initialize generator and randomData instance in superclass.</text>
    </javadoc>
    <method type="constructor" name="RandomGeneratorAbstractTest" startLine="58" endLine="61" />
    <javadoc>
      <text>* Set a fixed seed for the tests</text>
    </javadoc>
    <method type="void" name="setUp" startLine="67" endLine="69" />
    <method type="void" name="testNextSecureLongIAE" startLine="73" endLine="73" />
    <method type="void" name="testNextSecureLongNegativeToPositiveRange" startLine="75" endLine="75" />
    <method type="void" name="testNextSecureLongNegativeRange" startLine="77" endLine="77" />
    <method type="void" name="testNextSecureLongPositiveRange" startLine="79" endLine="79" />
    <method type="void" name="testNextSecureIntIAE" startLine="81" endLine="81" />
    <method type="void" name="testNextSecureIntNegativeToPositiveRange" startLine="83" endLine="83" />
    <method type="void" name="testNextSecureIntNegativeRange" startLine="85" endLine="85" />
    <method type="void" name="testNextSecureIntPositiveRange" startLine="87" endLine="87" />
    <method type="void" name="testNextSecureHex" startLine="89" endLine="89" />
    <method type="void" name="testNextIntDirect" startLine="104" endLine="162">
      <declaration type="int[][]" name="testValues" />
      <scope startLine="107" endLine="110">
        <declaration type="int" name="val" />
      </scope>
      <declaration type="int" name="numTests" />
      <scope startLine="113" endLine="161">
        <declaration type="int" name="n" />
        <declaration type="int[]" name="binUpperBounds" />
        <scope startLine="117" endLine="122">
          <scope startLine="119" endLine="121" />
        </scope>
        <scope startLine="122" endLine="129">
          <declaration type="int" name="step" />
          <scope startLine="125" endLine="127" />
        </scope>
        <declaration type="int" name="numFailures" />
        <declaration type="int" name="binCount" />
        <declaration type="long[]" name="observed" />
        <declaration type="double[]" name="expected" />
        <scope startLine="137" endLine="140" />
        <scope startLine="141" endLine="156">
          <scope startLine="143" endLine="152">
            <declaration type="int" name="value" />
            <scope startLine="146" endLine="151">
              <scope startLine="147" endLine="150" />
            </scope>
          </scope>
          <scope startLine="153" endLine="155" />
        </scope>
        <scope startLine="157" endLine="160" />
        <comment>Set up bins</comment>
        <comment>Run the tests</comment>
      </scope>
      <comment>Set up test values - end of the array filled randomly</comment>
    </method>
    <method type="void" name="testNextIntIAE2" startLine="165" endLine="177">
      <scope startLine="166" endLine="169" />
      <scope startLine="169" endLine="171">
        <comment>ignored</comment>
      </scope>
      <scope startLine="172" endLine="174" />
      <scope startLine="174" endLine="176">
        <comment>ignored</comment>
      </scope>
    </method>
    <method type="void" name="testNextLongDirect" startLine="180" endLine="212">
      <declaration type="long" name="q1" />
      <declaration type="long" name="q2" />
      <declaration type="long" name="q3" />
      <declaration type="Frequency" name="freq" />
      <declaration type="long" name="val" />
      <declaration type="int" name="value" />
      <scope startLine="188" endLine="201">
        <scope startLine="191" endLine="193" />
        <scope startLine="193" endLine="195" />
        <scope startLine="195" endLine="197" />
        <scope startLine="197" endLine="199" />
      </scope>
      <declaration type="long[]" name="observed" />
      <scope startLine="203" endLine="205" />
      <comment>Use ChiSquare dist with df = 4-1 = 3, alpha = .001
 Change to 11.34 for alpha = .01</comment>
    </method>
    <method type="void" name="testNextBooleanDirect" startLine="215" endLine="231">
      <declaration type="long" name="halfSampleSize" />
      <declaration type="double[]" name="expected" />
      <declaration type="long[]" name="observed" />
      <scope startLine="219" endLine="225">
        <scope startLine="220" endLine="222" />
        <scope startLine="222" endLine="224" />
      </scope>
      <comment>Use ChiSquare dist with df = 2-1 = 1, alpha = .001
 Change to 6.635 for alpha = .01</comment>
    </method>
    <method type="void" name="testNextFloatDirect" startLine="234" endLine="261">
      <declaration type="Frequency" name="freq" />
      <declaration type="float" name="val" />
      <declaration type="int" name="value" />
      <scope startLine="238" endLine="250">
        <scope startLine="240" endLine="242" />
        <scope startLine="242" endLine="244" />
        <scope startLine="244" endLine="246" />
        <scope startLine="246" endLine="248" />
      </scope>
      <declaration type="long[]" name="observed" />
      <scope startLine="252" endLine="254" />
      <comment>Use ChiSquare dist with df = 4-1 = 3, alpha = .001
 Change to 11.34 for alpha = .01</comment>
    </method>
    <method type="void" name="testDoubleDirect" startLine="264" endLine="274">
      <declaration type="SummaryStatistics" name="sample" />
      <declaration type="int" name="N" />
      <scope startLine="267" endLine="269" />
    </method>
    <method type="void" name="testFloatDirect" startLine="277" endLine="287">
      <declaration type="SummaryStatistics" name="sample" />
      <declaration type="int" name="N" />
      <scope startLine="280" endLine="282" />
    </method>
    <method type="void" name="testNextIntNeg" startLine="290" endLine="292" />
    <method type="void" name="testNextInt2" startLine="295" endLine="308">
      <declaration type="int" name="walk" />
      <declaration type="int" name="N" />
      <scope startLine="298" endLine="304">
        <scope startLine="299" endLine="301" />
        <scope startLine="301" endLine="303" />
      </scope>
    </method>
    <method type="void" name="testNextLong2" startLine="311" endLine="324">
      <declaration type="int" name="walk" />
      <declaration type="int" name="N" />
      <scope startLine="314" endLine="320">
        <scope startLine="315" endLine="317" />
        <scope startLine="317" endLine="319" />
      </scope>
    </method>
    <method type="void" name="testNexBoolean2" startLine="327" endLine="340">
      <declaration type="int" name="walk" />
      <declaration type="int" name="N" />
      <scope startLine="330" endLine="336">
        <scope startLine="331" endLine="333" />
        <scope startLine="333" endLine="335" />
      </scope>
    </method>
    <method type="void" name="testNexBytes" startLine="343" endLine="362">
      <declaration type="long[]" name="count" />
      <declaration type="byte[]" name="bytes" />
      <declaration type="double[]" name="expected" />
      <declaration type="int" name="sampleSize" />
      <scope startLine="349" endLine="351" />
      <scope startLine="353" endLine="358">
        <scope startLine="355" endLine="357" />
      </scope>
    </method>
    <method type="void" name="testSeeding" startLine="365" endLine="376">
      <declaration type="RandomGenerator" name="gen" />
      <declaration type="RandomGenerator" name="gen1" />
      <comment>makeGenerator initializes with fixed seed</comment>
      <comment>reseed, but recreate the second one</comment>
      <comment>verifies MATH-723</comment>
    </method>
    <method type="void" name="checkSameSequence" startLine="378" endLine="430">
      <declaration type="int" name="len" />
      <declaration type="double[][]" name="values" />
      <scope startLine="381" endLine="383" />
      <scope startLine="384" endLine="386" />
      <scope startLine="388" endLine="390" />
      <scope startLine="391" endLine="393" />
      <scope startLine="395" endLine="397" />
      <scope startLine="398" endLine="400" />
      <scope startLine="402" endLine="404" />
      <scope startLine="405" endLine="407" />
      <scope startLine="409" endLine="411" />
      <scope startLine="412" endLine="414" />
      <scope startLine="416" endLine="418" />
      <scope startLine="419" endLine="421" />
      <scope startLine="423" endLine="425" />
      <scope startLine="426" endLine="428" />
      <comment>Needs to be an odd number to check MATH-723</comment>
    </method>
    <comment>Omit secureXxx tests, since they do not use the provided generator</comment>
    <javadoc>
      <text>* Tests uniformity of nextInt(int) distribution by generating 1000
 * samples for each of 10 test values and for each sample performing
 * a chi-square test of homogeneity of the observed distribution with
 * the expected uniform distribution.  Tests are performed at the .01
 * level and an average failure rate higher than 2% (i.e. more than 20
 * null hypothesis rejections) causes the test case to fail.
 * All random values are generated using the generator instance used by
 * other tests and the generator is not reseeded, so this is a fixed seed
 * test.</text>
    </javadoc>
  </class>
</source>
