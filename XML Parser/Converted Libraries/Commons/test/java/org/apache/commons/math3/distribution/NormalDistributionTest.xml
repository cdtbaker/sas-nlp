<?xml version="1.0" encoding="UTF-8"?>
<source package="org.apache.commons.math3.distribution">
  <import name="org.apache.commons.math3.exception.NotStrictlyPositiveException" />
  <import name="org.junit.Assert" />
  <import name="org.junit.Test" />
  <class name="NormalDistributionTest" extends="RealDistributionAbstractTest" startLine="24">
    <javadoc>
      <text>* Test cases for {@link NormalDistribution}. Extends{@link RealDistributionAbstractTest}. See class javadoc of that class
 * for details.</text>
      <version>$Id: NormalDistributionTest.java 1364028 2012-07-21 00:42:49Z erans $</version>
    </javadoc>
    <javadoc>
      <text>* Creates the default real distribution instance to use in tests.</text>
    </javadoc>
    <method type="NormalDistribution" name="makeDistribution" startLine="37" endLine="39" />
    <javadoc>
      <text>* Creates the default cumulative probability distribution test input values</text>
    </javadoc>
    <method type="double[]" name="makeCumulativeTestPoints" startLine="43" endLine="47">
      <comment>quantiles computed using R</comment>
    </method>
    <javadoc>
      <text>* Creates the default cumulative probability density test expected values</text>
    </javadoc>
    <method type="double[]" name="makeCumulativeTestValues" startLine="51" endLine="54" />
    <javadoc>
      <text>* Creates the default probability density test expected values</text>
    </javadoc>
    <method type="double[]" name="makeDensityTestValues" startLine="58" endLine="61" />
    <declaration type="double" name="defaultTolerance" />
    <method type="void" name="setUp" startLine="66" endLine="69" />
    <method type="void" name="verifyQuantiles" startLine="73" endLine="84">
      <declaration type="NormalDistribution" name="distribution" />
      <declaration type="double" name="mu" />
      <declaration type="double" name="sigma" />
      <comment>Quantiles computed using R (same as Mathematica)</comment>
    </method>
    <method type="void" name="testQuantiles" startLine="87" endLine="104" />
    <method type="void" name="testInverseCumulativeProbabilityExtremes" startLine="107" endLine="112" />
    <method type="void" name="testGetMean" startLine="115" endLine="118">
      <declaration type="NormalDistribution" name="distribution" />
    </method>
    <method type="void" name="testGetStandardDeviation" startLine="121" endLine="124">
      <declaration type="NormalDistribution" name="distribution" />
    </method>
    <method type="void" name="testPreconditions" startLine="127" endLine="129" />
    <method type="void" name="testDensity" startLine="132" endLine="138">
      <declaration type="double[][]" name="x" />
      <comment>R 2.5: print(dnorm(c(-2,-1,0,1,2)), digits=10)</comment>
      <comment>R 2.5: print(dnorm(c(-2,-1,0,1,2), mean=1.1), digits=10)</comment>
    </method>
    <method type="void" name="checkDensity" startLine="140" endLine="145">
      <declaration type="NormalDistribution" name="d" />
      <scope startLine="142" endLine="144" />
    </method>
    <javadoc>
      <text>* Check to make sure top-coding of extreme values works correctly.
 * Verifies fixes for JIRA MATH-167, MATH-414</text>
    </javadoc>
    <method type="void" name="testExtremeValues" startLine="152" endLine="173">
      <declaration type="NormalDistribution" name="distribution" />
      <scope startLine="154" endLine="167">
        <declaration type="double" name="lowerTail" />
        <declaration type="double" name="upperTail" />
        <scope startLine="157" endLine="162" />
        <scope startLine="163" endLine="166" />
        <comment>make sure no convergence exception</comment>
        <comment>make sure not top-coded</comment>
        <comment>For i = 10, due to bad tail precision in erf (MATH-364), 1 is returned</comment>
        <comment>TODO: once MATH-364 is resolved, replace 9 with 30</comment>
        <comment>make sure top coding not reversed</comment>
      </scope>
    </method>
    <method type="void" name="testMath280" startLine="176" endLine="186">
      <declaration type="NormalDistribution" name="normal" />
      <declaration type="double" name="result" />
    </method>
    <method type="void" name="testMoments" startLine="189" endLine="204">
      <declaration type="double" name="tol" />
      <declaration type="NormalDistribution" name="dist" />
    </method>
    <comment>-------------- Implementations for abstract methods -----------------------</comment>
    <comment>--------------------- Override tolerance  --------------</comment>
    <comment>---------------------------- Additional test cases -------------------------</comment>
  </class>
</source>
