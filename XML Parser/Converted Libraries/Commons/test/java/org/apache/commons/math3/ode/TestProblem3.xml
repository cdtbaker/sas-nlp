<?xml version="1.0" encoding="UTF-8"?>
<source package="org.apache.commons.math3.ode">
  <import name="org.apache.commons.math3.util.FastMath" />
  <class name="TestProblem3" extends="TestProblemAbstract" startLine="22">
    <javadoc>
      <text>* This class is used in the junit tests for the ODE integrators.
 * <p>This specific problem is the following differential equation :
 * <pre>
 * y1'' = -y1/r^3  y1 (0) = 1-e  y1' (0) = 0
 * y2'' = -y2/r^3  y2 (0) = 0    y2' (0) =sqrt((1+e)/(1-e))
 * r = sqrt (y1^2 + y2^2), e = 0.9
 * </pre>
 * This is a two-body problem in the plane which can be solved by
 * Kepler's equation
 * <pre>
 * y1 (t) = ...
 * </pre>
 * </p></text>
    </javadoc>
    <javadoc>
      <text>* Eccentricity</text>
    </javadoc>
    <declaration type="double" name="e" />
    <javadoc>
      <text>* theoretical state</text>
    </javadoc>
    <declaration type="double[]" name="y" />
    <javadoc>
      <text>* Simple constructor.</text>
      <param>e eccentricity</param>
    </javadoc>
    <method type="constructor" name="TestProblem3" startLine="52" endLine="61">
      <declaration type="double[]" name="y0" />
      <declaration type="double[]" name="errorScale" />
    </method>
    <javadoc>
      <text>* Simple constructor.</text>
    </javadoc>
    <method type="constructor" name="TestProblem3" startLine="66" endLine="68" />
    <javadoc>
      <text>* Copy constructor.</text>
      <param>problem problem to copy</param>
    </javadoc>
    <method type="constructor" name="TestProblem3" startLine="74" endLine="78" />
    <javadoc>
      <text>* {@inheritDoc}</text>
    </javadoc>
    <method type="TestProblem3" name="copy" startLine="82" endLine="84" />
    <method type="void" name="doComputeDerivatives" startLine="87" endLine="99">
      <declaration type="double" name="r2" />
      <declaration type="double" name="invR3" />
      <comment>current radius</comment>
      <comment>compute the derivatives</comment>
    </method>
    <method type="double[]" name="computeTheoreticalState" startLine="102" endLine="127">
      <declaration type="double" name="E" />
      <declaration type="double" name="d" />
      <declaration type="double" name="corr" />
      <scope startLine="108" endLine="116">
        <declaration type="double" name="f2" />
        <declaration type="double" name="f0" />
        <declaration type="double" name="f1" />
        <declaration type="double" name="f12" />
      </scope>
      <declaration type="double" name="cosE" />
      <declaration type="double" name="sinE" />
      <comment>solve Kepler's equation</comment>
    </method>
  </class>
</source>
