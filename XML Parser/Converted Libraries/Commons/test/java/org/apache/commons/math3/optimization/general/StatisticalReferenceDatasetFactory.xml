<?xml version="1.0" encoding="UTF-8"?>
<source package="org.apache.commons.math3.optimization.general">
  <import name="java.io.BufferedReader" />
  <import name="java.io.IOException" />
  <import name="java.io.InputStream" />
  <import name="java.io.InputStreamReader" />
  <import name="org.apache.commons.math3.analysis.differentiation.DerivativeStructure" />
  <class name="StatisticalReferenceDatasetFactory" startLine="26">
    <javadoc>
      <text>* A factory to create instances of {@link StatisticalReferenceDataset} from
 * available resources.</text>
    </javadoc>
    <method type="constructor" name="StatisticalReferenceDatasetFactory" startLine="32" endLine="34">
      <comment>Do nothing</comment>
    </method>
    <javadoc>
      <text>* Creates a new buffered reader from the specified resource name.</text>
      <param>name the name of the resource</param>
      <return>a buffered reader</return>
      <throws>IOException if an I/O error occured</throws>
    </javadoc>
    <method type="BufferedReader" name="createBufferedReaderFromResource" startLine="44" endLine="52">
      <declaration type="InputStream" name="resourceAsStream" />
      <scope startLine="48" endLine="50" />
    </method>
    <method type="StatisticalReferenceDataset" name="createKirby2" startLine="55" endLine="73">
      <declaration type="BufferedReader" name="in" />
      <declaration type="StatisticalReferenceDataset" name="dataset" />
      <scope startLine="58" endLine="69">
        <method type="DerivativeStructure" name="getModelValue" startLine="62" endLine="66">
          <declaration type="DerivativeStructure" name="p" />
          <declaration type="DerivativeStructure" name="q" />
        </method>
      </scope>
      <scope startLine="69" endLine="71" />
    </method>
    <method type="StatisticalReferenceDataset" name="createHahn1" startLine="76" endLine="94">
      <declaration type="BufferedReader" name="in" />
      <declaration type="StatisticalReferenceDataset" name="dataset" />
      <scope startLine="79" endLine="90">
        <method type="DerivativeStructure" name="getModelValue" startLine="83" endLine="87">
          <declaration type="DerivativeStructure" name="p" />
          <declaration type="DerivativeStructure" name="q" />
        </method>
      </scope>
      <scope startLine="90" endLine="92" />
    </method>
    <method type="StatisticalReferenceDataset" name="createMGH17" startLine="97" endLine="113">
      <declaration type="BufferedReader" name="in" />
      <declaration type="StatisticalReferenceDataset" name="dataset" />
      <scope startLine="100" endLine="109">
        <method type="DerivativeStructure" name="getModelValue" startLine="104" endLine="106" />
      </scope>
      <scope startLine="109" endLine="111" />
    </method>
    <method type="StatisticalReferenceDataset" name="createLanczos1" startLine="116" endLine="135">
      <declaration type="BufferedReader" name="in" />
      <declaration type="StatisticalReferenceDataset" name="dataset" />
      <scope startLine="120" endLine="131">
        <method type="DerivativeStructure" name="getModelValue" startLine="124" endLine="128" />
      </scope>
      <scope startLine="131" endLine="133" />
    </method>
    <javadoc>
      <text>* Returns an array with all available reference datasets.</text>
      <return>the array of datasets</return>
      <throws>IOException if an I/O error occurs</throws>
    </javadoc>
    <method type="StatisticalReferenceDataset[]" name="createAll" startLine="144" endLine="148" />
  </class>
</source>
