<?xml version="1.0" encoding="UTF-8"?>
<source package="org.apache.commons.math3.distribution">
  <import name="org.apache.commons.math3.exception.NotStrictlyPositiveException" />
  <import name="org.junit.Assert" />
  <import name="org.junit.Test" />
  <class name="LogNormalDistributionTest" extends="RealDistributionAbstractTest" startLine="24">
    <javadoc>
      <text>* Test cases for {@link LogNormalDistribution}. Extends{@link RealDistributionAbstractTest}. See class javadoc of that class
 * for details.</text>
      <version>$Id: LogNormalDistributionTest.java 1364028 2012-07-21 00:42:49Z erans $</version>
      <since>3.0</since>
    </javadoc>
    <javadoc>
      <text>* Creates the default real distribution instance to use in tests.</text>
    </javadoc>
    <method type="LogNormalDistribution" name="makeDistribution" startLine="38" endLine="40" />
    <javadoc>
      <text>* Creates the default cumulative probability distribution test input values</text>
    </javadoc>
    <method type="double[]" name="makeCumulativeTestPoints" startLine="44" endLine="51">
      <comment>quantiles computed using R</comment>
    </method>
    <javadoc>
      <text>* Creates the default cumulative probability density test expected values</text>
    </javadoc>
    <method type="double[]" name="makeCumulativeTestValues" startLine="55" endLine="59" />
    <javadoc>
      <text>* Creates the default probability density test expected values</text>
    </javadoc>
    <method type="double[]" name="makeDensityTestValues" startLine="63" endLine="67" />
    <javadoc>
      <text>* Creates the default inverse cumulative probability distribution test
 * input values.</text>
    </javadoc>
    <method type="double[]" name="makeInverseCumulativeTestPoints" startLine="74" endLine="83">
      <declaration type="double[]" name="points" />
      <declaration type="double[]" name="points2" />
      <comment>Exclude the test points less than zero, as they have cumulative</comment>
      <comment>probability of zero, meaning the inverse returns zero, and not the</comment>
      <comment>points less than zero.</comment>
      <comment>return Arrays.copyOfRange(points, 4, points.length - 4);</comment>
    </method>
    <javadoc>
      <text>* Creates the default inverse cumulative probability test expected
 * values.</text>
    </javadoc>
    <method type="double[]" name="makeInverseCumulativeTestValues" startLine="90" endLine="99">
      <declaration type="double[]" name="points" />
      <declaration type="double[]" name="points2" />
      <comment>Exclude the test points less than zero, as they have cumulative</comment>
      <comment>probability of zero, meaning the inverse returns zero, and not the</comment>
      <comment>points less than zero.</comment>
      <comment>return Arrays.copyOfRange(points, 1, points.length - 4);</comment>
    </method>
    <method type="void" name="setUp" startLine="103" endLine="106" />
    <method type="void" name="verifyQuantiles" startLine="110" endLine="119">
      <declaration type="LogNormalDistribution" name="distribution" />
      <declaration type="double" name="mu" />
      <declaration type="double" name="sigma" />
    </method>
    <method type="void" name="testQuantiles" startLine="122" endLine="156" />
    <method type="void" name="testInverseCumulativeProbabilityExtremes" startLine="159" endLine="164" />
    <method type="void" name="testGetScale" startLine="167" endLine="170">
      <declaration type="LogNormalDistribution" name="distribution" />
    </method>
    <method type="void" name="testGetShape" startLine="173" endLine="176">
      <declaration type="LogNormalDistribution" name="distribution" />
    </method>
    <method type="void" name="testPreconditions" startLine="179" endLine="181" />
    <method type="void" name="testDensity" startLine="184" endLine="194">
      <declaration type="double[][]" name="x" />
      <comment>R 2.13: print(dlnorm(c(-2,-1,0,1,2)), digits=10)</comment>
      <comment>R 2.13: print(dlnorm(c(-2,-1,0,1,2), mean=1.1), digits=10)</comment>
    </method>
    <method type="void" name="checkDensity" startLine="197" endLine="202">
      <declaration type="LogNormalDistribution" name="d" />
      <scope startLine="199" endLine="201" />
    </method>
    <javadoc>
      <text>* Check to make sure top-coding of extreme values works correctly.
 * Verifies fixes for JIRA MATH-167, MATH-414</text>
    </javadoc>
    <method type="void" name="testExtremeValues" startLine="209" endLine="225">
      <declaration type="LogNormalDistribution" name="d" />
      <scope startLine="211" endLine="219">
        <declaration type="double" name="upperTail" />
        <scope startLine="213" endLine="215" />
        <scope startLine="216" endLine="218" />
        <comment>make sure no convergence exception</comment>
        <comment>make sure not top-coded</comment>
        <comment>make sure top coding not reversed</comment>
      </scope>
    </method>
    <method type="void" name="testMeanVariance" startLine="228" endLine="245">
      <declaration type="double" name="tol" />
      <declaration type="LogNormalDistribution" name="dist" />
    </method>
    <comment>-------------- Implementations for abstract methods -----------------------</comment>
    <comment>--------------------- Override tolerance  --------------</comment>
    <comment>---------------------------- Additional test cases -------------------------</comment>
  </class>
</source>
