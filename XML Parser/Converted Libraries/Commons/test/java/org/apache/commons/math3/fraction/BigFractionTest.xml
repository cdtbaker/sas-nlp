<?xml version="1.0" encoding="UTF-8"?>
<source package="org.apache.commons.math3.fraction">
  <import name="java.math.BigDecimal" />
  <import name="java.math.BigInteger" />
  <import name="org.apache.commons.math3.TestUtils" />
  <import name="org.apache.commons.math3.exception.ConvergenceException" />
  <import name="org.apache.commons.math3.exception.MathArithmeticException" />
  <import name="org.apache.commons.math3.exception.NullArgumentException" />
  <import name="org.apache.commons.math3.exception.ZeroException" />
  <import name="org.apache.commons.math3.util.FastMath" />
  <import name="org.junit.Assert" />
  <import name="org.junit.Test" />
  <class name="BigFractionTest" startLine="32">
    <method type="void" name="assertFraction" startLine="34" endLine="37" />
    <method type="void" name="assertFraction" startLine="39" endLine="42" />
    <method type="void" name="testConstructor" startLine="45" endLine="92">
      <scope startLine="68" endLine="71" />
      <scope startLine="71" endLine="73">
        <comment>expected</comment>
      </scope>
      <scope startLine="74" endLine="77" />
      <scope startLine="77" endLine="79">
        <comment>expected</comment>
      </scope>
      <scope startLine="80" endLine="83" />
      <scope startLine="83" endLine="85">
        <comment>expected</comment>
      </scope>
      <scope startLine="86" endLine="89" />
      <scope startLine="89" endLine="91">
        <comment>expected</comment>
      </scope>
    </method>
    <method type="void" name="testGoldenRatio" startLine="95" endLine="98">
      <comment>the golden ratio is notoriously a difficult number for continuous fraction</comment>
    </method>
    <method type="void" name="testDoubleConstructor" startLine="102" endLine="144" />
    <method type="void" name="testDigitLimitConstructor" startLine="148" endLine="157" />
    <method type="void" name="testEpsilonLimitConstructor" startLine="160" endLine="169" />
    <method type="void" name="testCompareTo" startLine="172" endLine="191">
      <declaration type="BigFraction" name="first" />
      <declaration type="BigFraction" name="second" />
      <declaration type="BigFraction" name="third" />
      <declaration type="BigFraction" name="pi1" />
      <declaration type="BigFraction" name="pi2" />
      <comment>these two values are different approximations of PI</comment>
      <comment>the first  one is approximately PI - 3.07e-18</comment>
      <comment>the second one is approximately PI + 1.936e-17</comment>
    </method>
    <method type="void" name="testDoubleValue" startLine="194" endLine="200">
      <declaration type="BigFraction" name="first" />
      <declaration type="BigFraction" name="second" />
    </method>
    <method type="void" name="testDoubleValueForLargeNumeratorAndDenominator" startLine="204" endLine="212">
      <declaration type="BigInteger" name="pow400" />
      <declaration type="BigInteger" name="pow401" />
      <declaration type="BigInteger" name="two" />
      <declaration type="BigFraction" name="large" />
    </method>
    <method type="void" name="testFloatValueForLargeNumeratorAndDenominator" startLine="216" endLine="224">
      <declaration type="BigInteger" name="pow400" />
      <declaration type="BigInteger" name="pow401" />
      <declaration type="BigInteger" name="two" />
      <declaration type="BigFraction" name="large" />
    </method>
    <method type="void" name="testFloatValue" startLine="227" endLine="233">
      <declaration type="BigFraction" name="first" />
      <declaration type="BigFraction" name="second" />
    </method>
    <method type="void" name="testIntValue" startLine="236" endLine="242">
      <declaration type="BigFraction" name="first" />
      <declaration type="BigFraction" name="second" />
    </method>
    <method type="void" name="testLongValue" startLine="245" endLine="251">
      <declaration type="BigFraction" name="first" />
      <declaration type="BigFraction" name="second" />
    </method>
    <method type="void" name="testConstructorDouble" startLine="254" endLine="274">
      <scope startLine="263" endLine="270">
        <scope startLine="264" endLine="267" />
        <scope startLine="267" endLine="269" />
        <comment>expected</comment>
      </scope>
    </method>
    <method type="void" name="testAbs" startLine="277" endLine="285">
      <declaration type="BigFraction" name="a" />
      <declaration type="BigFraction" name="b" />
      <declaration type="BigFraction" name="c" />
    </method>
    <method type="void" name="testReciprocal" startLine="288" endLine="318">
      <declaration type="BigFraction" name="f" />
      <scope startLine="307" endLine="310" />
      <scope startLine="310" endLine="311" />
      <comment>large values</comment>
    </method>
    <method type="void" name="testNegate" startLine="321" endLine="340">
      <declaration type="BigFraction" name="f" />
      <comment>large values</comment>
    </method>
    <method type="void" name="testAdd" startLine="343" endLine="411">
      <declaration type="BigFraction" name="a" />
      <declaration type="BigFraction" name="b" />
      <declaration type="BigFraction" name="f1" />
      <declaration type="BigFraction" name="f2" />
      <declaration type="BigFraction" name="f" />
      <scope startLine="364" endLine="367" />
      <scope startLine="367" endLine="368" />
      <comment>if this fraction is added naively, it will overflow.</comment>
      <comment>check that it doesn't.</comment>
    </method>
    <method type="void" name="testDivide" startLine="414" endLine="474">
      <declaration type="BigFraction" name="a" />
      <declaration type="BigFraction" name="b" />
      <declaration type="BigFraction" name="f1" />
      <declaration type="BigFraction" name="f2" />
      <scope startLine="425" endLine="428" />
      <scope startLine="428" endLine="429" />
      <declaration type="BigFraction" name="f" />
      <scope startLine="453" endLine="456" />
      <scope startLine="456" endLine="457" />
    </method>
    <method type="void" name="testMultiply" startLine="477" endLine="506">
      <declaration type="BigFraction" name="a" />
      <declaration type="BigFraction" name="b" />
      <declaration type="BigFraction" name="f1" />
      <declaration type="BigFraction" name="f2" />
      <declaration type="BigFraction" name="f" />
      <scope startLine="500" endLine="503" />
      <scope startLine="503" endLine="504" />
    </method>
    <method type="void" name="testSubtract" startLine="509" endLine="545">
      <declaration type="BigFraction" name="a" />
      <declaration type="BigFraction" name="b" />
      <declaration type="BigFraction" name="f" />
      <scope startLine="519" endLine="522" />
      <scope startLine="522" endLine="523" />
      <declaration type="BigFraction" name="f1" />
      <declaration type="BigFraction" name="f2" />
      <comment>if this fraction is subtracted naively, it will overflow.</comment>
      <comment>check that it doesn't.</comment>
    </method>
    <method type="void" name="testBigDecimalValue" startLine="548" endLine="553" />
    <method type="void" name="testEqualsAndHashCode" startLine="556" endLine="568">
      <declaration type="BigFraction" name="zero" />
      <declaration type="BigFraction" name="nullFraction" />
      <declaration type="BigFraction" name="zero2" />
      <declaration type="BigFraction" name="one" />
    </method>
    <method type="void" name="testGetReducedFraction" startLine="571" endLine="583">
      <declaration type="BigFraction" name="threeFourths" />
      <scope startLine="575" endLine="578" />
      <scope startLine="578" endLine="580">
        <comment>expected</comment>
      </scope>
    </method>
    <method type="void" name="testPercentage" startLine="586" endLine="588" />
    <method type="void" name="testPow" startLine="591" endLine="601" />
    <method type="void" name="testMath340" startLine="604" endLine="611">
      <declaration type="BigFraction" name="fractionA" />
      <declaration type="BigFraction" name="fractionB" />
      <declaration type="BigFraction" name="errorResult" />
      <declaration type="BigFraction" name="correctResult" />
    </method>
    <method type="void" name="testSerial" startLine="614" endLine="623">
      <declaration type="BigFraction[]" name="fractions" />
      <scope startLine="620" endLine="622" />
    </method>
    <comment>MATH-179</comment>
    <comment>MATH-181</comment>
    <comment>MATH-744</comment>
    <comment>MATH-744</comment>
  </class>
</source>
