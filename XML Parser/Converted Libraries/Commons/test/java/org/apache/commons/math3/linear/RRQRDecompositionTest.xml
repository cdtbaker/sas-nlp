<?xml version="1.0" encoding="UTF-8"?>
<source package="org.apache.commons.math3.linear">
  <import name="java.util.Random" />
  <import name="org.junit.Assert" />
  <import name="org.junit.Test" />
  <class name="RRQRDecompositionTest" startLine="26">
    <declaration type="double[][]" name="testData3x3NonSingular" />
    <declaration type="double[][]" name="testData3x3Singular" />
    <declaration type="double[][]" name="testData3x4" />
    <declaration type="double[][]" name="testData4x3" />
    <declaration type="double" name="entryTolerance" />
    <declaration type="double" name="normTolerance" />
    <javadoc>
      <text>* test dimensions</text>
    </javadoc>
    <method type="void" name="testDimensions" startLine="54" endLine="67">
      <declaration type="Random" name="r" />
      <declaration type="int" name="p" />
      <declaration type="int" name="q" />
    </method>
    <method type="void" name="checkDimension" startLine="69" endLine="77">
      <declaration type="int" name="rows" />
      <declaration type="int" name="columns" />
      <declaration type="RRQRDecomposition" name="qr" />
    </method>
    <javadoc>
      <text>* test AP = QR</text>
    </javadoc>
    <method type="void" name="testAPEqualQR" startLine="81" endLine="97">
      <declaration type="Random" name="r" />
      <declaration type="int" name="p" />
      <declaration type="int" name="q" />
    </method>
    <method type="void" name="checkAPEqualQR" startLine="99" endLine="103">
      <declaration type="RRQRDecomposition" name="rrqr" />
      <declaration type="double" name="norm" />
    </method>
    <javadoc>
      <text>* test the orthogonality of Q</text>
    </javadoc>
    <method type="void" name="testQOrthogonal" startLine="107" endLine="123">
      <declaration type="Random" name="r" />
      <declaration type="int" name="p" />
      <declaration type="int" name="q" />
    </method>
    <method type="void" name="checkQOrthogonal" startLine="125" endLine="130">
      <declaration type="RRQRDecomposition" name="qr" />
      <declaration type="RealMatrix" name="eye" />
      <declaration type="double" name="norm" />
    </method>
    <javadoc>
      <text>* test that R is upper triangular</text>
    </javadoc>
    <method type="void" name="testRUpperTriangular" startLine="134" endLine="156">
      <declaration type="RealMatrix" name="matrix" />
      <declaration type="Random" name="r" />
      <declaration type="int" name="p" />
      <declaration type="int" name="q" />
    </method>
    <method type="void" name="checkUpperTriangular" startLine="158" endLine="167">
      <method type="void" name="visit" startLine="161" endLine="165">
        <scope startLine="162" endLine="164" />
      </method>
    </method>
    <javadoc>
      <text>* test that H is trapezoidal</text>
    </javadoc>
    <method type="void" name="testHTrapezoidal" startLine="171" endLine="193">
      <declaration type="RealMatrix" name="matrix" />
      <declaration type="Random" name="r" />
      <declaration type="int" name="p" />
      <declaration type="int" name="q" />
    </method>
    <method type="void" name="checkTrapezoidal" startLine="195" endLine="204">
      <method type="void" name="visit" startLine="198" endLine="202">
        <scope startLine="199" endLine="201" />
      </method>
    </method>
    <method type="void" name="testNonInvertible" startLine="207" endLine="211">
      <declaration type="RRQRDecomposition" name="qr" />
    </method>
    <method type="RealMatrix" name="createTestMatrix" startLine="213" endLine="222">
      <declaration type="RealMatrix" name="m" />
      <method type="double" name="visit" startLine="217" endLine="219" />
    </method>
    <javadoc>
      <text>* test the rank is returned correctly</text>
    </javadoc>
    <method type="void" name="testRank" startLine="226" endLine="231">
      <declaration type="double[][]" name="d" />
      <declaration type="RealMatrix" name="m" />
      <declaration type="RRQRDecomposition" name="qr" />
    </method>
  </class>
</source>
