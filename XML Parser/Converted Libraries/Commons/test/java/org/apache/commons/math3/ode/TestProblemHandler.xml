<?xml version="1.0" encoding="UTF-8"?>
<source package="org.apache.commons.math3.ode">
  <import name="org.apache.commons.math3.exception.MaxCountExceededException" />
  <import name="org.apache.commons.math3.ode.sampling.StepHandler" />
  <import name="org.apache.commons.math3.ode.sampling.StepInterpolator" />
  <import name="org.apache.commons.math3.util.FastMath" />
  <class name="TestProblemHandler" startLine="25">
    <implements name="StepHandler" />
    <javadoc>
      <text>* This class is used to handle steps for the test problems
 * integrated during the junit tests for the ODE integrators.</text>
    </javadoc>
    <javadoc>
      <text>* Associated problem.</text>
    </javadoc>
    <declaration type="TestProblemAbstract" name="problem" />
    <javadoc>
      <text>* Maximal errors encountered during the integration.</text>
    </javadoc>
    <declaration type="double" name="maxValueError" />
    <declaration type="double" name="maxTimeError" />
    <javadoc>
      <text>* Error at the end of the integration.</text>
    </javadoc>
    <declaration type="double" name="lastError" />
    <javadoc>
      <text>* Time at the end of integration.</text>
    </javadoc>
    <declaration type="double" name="lastTime" />
    <javadoc>
      <text>* ODE solver used.</text>
    </javadoc>
    <declaration type="ODEIntegrator" name="integrator" />
    <javadoc>
      <text>* Expected start for step.</text>
    </javadoc>
    <declaration type="double" name="expectedStepStart" />
    <javadoc>
      <text>* Simple constructor.</text>
      <param>problem problem for which steps should be handled</param>
      <param>integrator ODE solver used</param>
    </javadoc>
    <method type="constructor" name="TestProblemHandler" startLine="56" endLine="63" />
    <method type="void" name="init" startLine="65" endLine="70" />
    <method type="void" name="handleStep" startLine="72" endLine="119">
      <declaration type="double" name="start" />
      <scope startLine="75" endLine="88">
        <scope startLine="78" endLine="86">
          <declaration type="double" name="stepError" />
          <scope startLine="82" endLine="84" />
        </scope>
        <comment>multistep integrators do not handle the first steps themselves</comment>
        <comment>so we have to make sure the integrator we look at has really started its work</comment>
        <comment>the step should either start at the end of the integrator step</comment>
        <comment>or at an event if the step is split into several substeps</comment>
      </scope>
      <declaration type="double" name="pT" />
      <declaration type="double" name="cT" />
      <declaration type="double[]" name="errorScale" />
      <scope startLine="95" endLine="103">
        <declaration type="double[]" name="interpolatedY" />
        <declaration type="double[]" name="theoreticalY" />
        <scope startLine="98" endLine="101">
          <declaration type="double" name="error" />
        </scope>
      </scope>
      <scope startLine="106" endLine="118">
        <declaration type="double" name="time" />
        <declaration type="double[]" name="interpolatedY" />
        <declaration type="double[]" name="theoreticalY" />
        <scope startLine="114" endLine="117">
          <declaration type="double" name="error" />
        </scope>
        <comment>update the errors</comment>
      </scope>
      <comment>store the error at the last step</comment>
      <comment>walk through the step</comment>
    </method>
    <javadoc>
      <text>* Get the maximal value error encountered during integration.</text>
      <return>maximal value error</return>
    </javadoc>
    <method type="double" name="getMaximalValueError" startLine="125" endLine="127" />
    <javadoc>
      <text>* Get the maximal time error encountered during integration.</text>
      <return>maximal time error</return>
    </javadoc>
    <method type="double" name="getMaximalTimeError" startLine="133" endLine="135" />
    <javadoc>
      <text>* Get the error at the end of the integration.</text>
      <return>error at the end of the integration</return>
    </javadoc>
    <method type="double" name="getLastError" startLine="141" endLine="143" />
    <javadoc>
      <text>* Get the time at the end of the integration.</text>
      <return>time at the end of the integration.</return>
    </javadoc>
    <method type="double" name="getLastTime" startLine="149" endLine="151" />
  </class>
</source>
