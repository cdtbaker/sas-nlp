<?xml version="1.0" encoding="UTF-8"?>
<source package="org.apache.commons.math3.stat.descriptive">
  <import name="java.util.Locale" />
  <import name="org.apache.commons.math3.TestUtils" />
  <import name="org.apache.commons.math3.stat.descriptive.rank.Percentile" />
  <import name="org.apache.commons.math3.stat.descriptive.moment.GeometricMean" />
  <import name="org.apache.commons.math3.stat.descriptive.moment.Mean" />
  <import name="org.apache.commons.math3.stat.descriptive.moment.Variance" />
  <import name="org.apache.commons.math3.stat.descriptive.rank.Max" />
  <import name="org.apache.commons.math3.stat.descriptive.rank.Min" />
  <import name="org.apache.commons.math3.stat.descriptive.summary.Sum" />
  <import name="org.apache.commons.math3.stat.descriptive.summary.SumOfSquares" />
  <import name="org.apache.commons.math3.util.Precision" />
  <import name="org.junit.Assert" />
  <import name="org.junit.Test" />
  <class name="DescriptiveStatisticsTest" startLine="32">
    <javadoc>
      <text>* Test cases for the DescriptiveStatistics class.</text>
      <version>$Id: DescriptiveStatisticsTest.java 1364030 2012-07-21 01:10:04Z erans $
 * 2007) $</version>
    </javadoc>
    <method type="DescriptiveStatistics" name="createDescriptiveStatistics" startLine="40" endLine="42" />
    <method type="void" name="testSetterInjection" startLine="45" endLine="53">
      <declaration type="DescriptiveStatistics" name="stats" />
      <comment>Now lets try some new math</comment>
    </method>
    <method type="void" name="testCopy" startLine="56" endLine="66">
      <declaration type="DescriptiveStatistics" name="stats" />
      <declaration type="DescriptiveStatistics" name="copy" />
      <comment>Now lets try some new math</comment>
    </method>
    <method type="void" name="testWindowSize" startLine="69" endLine="89">
      <declaration type="DescriptiveStatistics" name="stats" />
      <scope startLine="72" endLine="74" />
      <declaration type="int" name="refSum" />
      <scope startLine="78" endLine="81" />
      <scope startLine="81" endLine="83">
        <comment>expected</comment>
      </scope>
      <declaration type="int" name="refSum2" />
    </method>
    <method type="void" name="testGetValues" startLine="92" endLine="108">
      <declaration type="DescriptiveStatistics" name="stats" />
      <scope startLine="94" endLine="96" />
      <declaration type="int" name="refSum" />
      <declaration type="double[]" name="v" />
      <scope startLine="100" endLine="102" />
      <declaration type="double[]" name="s" />
      <scope startLine="104" endLine="106" />
    </method>
    <method type="void" name="testToString" startLine="111" endLine="128">
      <declaration type="DescriptiveStatistics" name="stats" />
      <declaration type="Locale" name="d" />
    </method>
    <method type="void" name="testShuffledStatistics" startLine="131" endLine="164">
      <declaration type="DescriptiveStatistics" name="reference" />
      <declaration type="DescriptiveStatistics" name="shuffled" />
      <declaration type="UnivariateStatistic" name="tmp" />
      <scope startLine="149" endLine="152" />
      <comment>the purpose of this test is only to check the get/set methods</comment>
      <comment>we are aware shuffling statistics like this is really not</comment>
      <comment>something sensible to do in production ...</comment>
    </method>
    <method type="void" name="testPercentileSetter" startLine="167" endLine="189">
      <declaration type="DescriptiveStatistics" name="stats" />
      <scope startLine="183" endLine="186" />
      <scope startLine="186" endLine="188">
        <comment>expected</comment>
      </scope>
      <comment>Inject wrapped Percentile impl</comment>
      <comment>Try "new math" impl</comment>
      <comment>Try to set bad impl</comment>
    </method>
    <method type="void" name="test20090720" startLine="192" endLine="200">
      <declaration type="DescriptiveStatistics" name="descriptiveStatistics" />
      <scope startLine="194" endLine="196" />
    </method>
    <method type="void" name="testRemoval" startLine="203" endLine="213">
      <declaration type="DescriptiveStatistics" name="dstat" />
    </method>
    <method type="void" name="testSummaryConsistency" startLine="216" endLine="247">
      <declaration type="DescriptiveStatistics" name="dstats" />
      <declaration type="SummaryStatistics" name="sstats" />
      <declaration type="int" name="windowSize" />
      <declaration type="double" name="tol" />
      <scope startLine="222" endLine="246">
        <declaration type="double[]" name="values" />
        <scope startLine="226" endLine="228" />
      </scope>
    </method>
    <method type="void" name="checkremoval" startLine="250" endLine="265">
      <scope startLine="255" endLine="257" />
    </method>
    <class name="deepMean" startLine="269">
      <implements name="UnivariateStatistic" />
      <javadoc>
        <text>* A new way to compute the mean</text>
      </javadoc>
      <method type="double" name="evaluate" startLine="274" endLine="276" />
      <method type="double" name="evaluate" startLine="278" endLine="280" />
      <method type="UnivariateStatistic" name="copy" startLine="281" endLine="283" />
      <class name="goodPercentile" startLine="286">
        <implements name="UnivariateStatistic" />
        <javadoc>
          <text>* Test percentile implementation - wraps a Percentile</text>
        </javadoc>
        <declaration type="Percentile" name="percentile" />
        <method type="void" name="setQuantile" startLine="291" endLine="293" />
        <method type="double" name="evaluate" startLine="294" endLine="296" />
        <method type="double" name="evaluate" startLine="297" endLine="299" />
        <method type="UnivariateStatistic" name="copy" startLine="300" endLine="304">
          <declaration type="goodPercentile" name="result" />
        </method>
        <class name="subPercentile" extends="Percentile" startLine="307">
          <javadoc>
            <text>* Test percentile subclass - another "new math" impl
 * Always returns currently set quantile</text>
          </javadoc>
          <method type="double" name="evaluate" startLine="313" endLine="315" />
          <method type="double" name="evaluate" startLine="317" endLine="319" />
          <declaration type="long" name="serialVersionUID" />
          <method type="Percentile" name="copy" startLine="322" endLine="325">
            <declaration type="subPercentile" name="result" />
          </method>
          <class name="badPercentile" startLine="328">
            <implements name="UnivariateStatistic" />
            <javadoc>
              <text>* "Bad" test percentile implementation - no setQuantile</text>
            </javadoc>
            <declaration type="Percentile" name="percentile" />
            <method type="double" name="evaluate" startLine="333" endLine="335" />
            <method type="double" name="evaluate" startLine="336" endLine="338" />
            <method type="UnivariateStatistic" name="copy" startLine="339" endLine="341" />
          </class>
        </class>
      </class>
    </class>
    <comment>Test UnivariateStatistics impls for setter injection tests</comment>
  </class>
</source>
