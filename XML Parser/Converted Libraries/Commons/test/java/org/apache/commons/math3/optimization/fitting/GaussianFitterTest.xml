<?xml version="1.0" encoding="UTF-8"?>
<source package="org.apache.commons.math3.optimization.fitting">
  <import name="org.apache.commons.math3.exception.MathIllegalArgumentException" />
  <import name="org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizer" />
  <import name="org.junit.Assert" />
  <import name="org.junit.Test" />
  <class name="GaussianFitterTest" startLine="26">
    <javadoc>
      <text>* Tests {@link GaussianFitter}.</text>
      <since>2.2</since>
      <version>$Id: GaussianFitterTest.java 1349707 2012-06-13 09:30:56Z erans $</version>
    </javadoc>
    <javadoc>
      <text>* Good data.</text>
    </javadoc>
    <declaration type="double[][]" name="DATASET1" />
    <javadoc>
      <text>* Poor data: right of peak not symmetric with left of peak.</text>
    </javadoc>
    <declaration type="double[][]" name="DATASET2" />
    <javadoc>
      <text>* Poor data: long tails.</text>
    </javadoc>
    <declaration type="double[][]" name="DATASET3" />
    <javadoc>
      <text>* Poor data: right of peak is missing.</text>
    </javadoc>
    <declaration type="double[][]" name="DATASET4" />
    <javadoc>
      <text>* Good data, but few points.</text>
    </javadoc>
    <declaration type="double[][]" name="DATASET5" />
    <javadoc>
      <text>* Basic.</text>
    </javadoc>
    <method type="void" name="testFit01" startLine="186" endLine="194">
      <declaration type="GaussianFitter" name="fitter" />
      <declaration type="double[]" name="parameters" />
    </method>
    <javadoc>
      <text>* Zero points is not enough observed points.</text>
    </javadoc>
    <method type="void" name="testFit02" startLine="200" endLine="203">
      <declaration type="GaussianFitter" name="fitter" />
    </method>
    <javadoc>
      <text>* Two points is not enough observed points.</text>
    </javadoc>
    <method type="void" name="testFit03" startLine="209" endLine="216">
      <declaration type="GaussianFitter" name="fitter" />
    </method>
    <javadoc>
      <text>* Poor data: right of peak not symmetric with left of peak.</text>
    </javadoc>
    <method type="void" name="testFit04" startLine="222" endLine="230">
      <declaration type="GaussianFitter" name="fitter" />
      <declaration type="double[]" name="parameters" />
    </method>
    <javadoc>
      <text>* Poor data: long tails.</text>
    </javadoc>
    <method type="void" name="testFit05" startLine="236" endLine="244">
      <declaration type="GaussianFitter" name="fitter" />
      <declaration type="double[]" name="parameters" />
    </method>
    <javadoc>
      <text>* Poor data: right of peak is missing.</text>
    </javadoc>
    <method type="void" name="testFit06" startLine="250" endLine="258">
      <declaration type="GaussianFitter" name="fitter" />
      <declaration type="double[]" name="parameters" />
    </method>
    <javadoc>
      <text>* Basic with smaller dataset.</text>
    </javadoc>
    <method type="void" name="testFit07" startLine="264" endLine="272">
      <declaration type="GaussianFitter" name="fitter" />
      <declaration type="double[]" name="parameters" />
    </method>
    <method type="void" name="testMath519" startLine="275" endLine="317">
      <declaration type="double[]" name="data" />
      <declaration type="GaussianFitter" name="fitter" />
      <scope startLine="310" endLine="312" />
      <declaration type="double[]" name="p" />
      <comment>The optimizer will try negative sigma values but "GaussianFitter"</comment>
      <comment>will catch the raised exceptions and return NaN values instead.</comment>
    </method>
    <method type="void" name="testMath798" startLine="320" endLine="346">
      <declaration type="GaussianFitter" name="fitter" />
      <declaration type="double[]" name="p" />
      <comment>When the data points are not commented out below, the fit stalls.</comment>
      <comment>This is expected however, since the whole dataset hardly looks like</comment>
      <comment>a Gaussian.</comment>
      <comment>When commented out, the fit proceeds fine.</comment>
      <comment>fitter.addObservedPoint(0.68, 0.0);</comment>
      <comment>fitter.addObservedPoint(1.59, 0.0);</comment>
      <comment>fitter.addObservedPoint(2.50, 0.0);</comment>
      <comment>fitter.addObservedPoint(3.41, 0.0);</comment>
      <comment>fitter.addObservedPoint(4.32, 0.0);</comment>
      <comment>Values are copied from a previous run of this test.</comment>
    </method>
    <javadoc>
      <text>* Adds the specified points to specified <code>GaussianFitter</code>
 * instance.</text>
      <param>points data points where first dimension is a point index and
 * second dimension is an array of length two representing the point
 * with the first value corresponding to X and the second value
 * corresponding to Y</param>
      <param>fitter fitter to which the points in <code>points</code> should be
 * added as observed points</param>
    </javadoc>
    <method type="void" name="addDatasetToGaussianFitter" startLine="360" endLine="364">
      <scope startLine="361" endLine="363" />
    </method>
  </class>
</source>
