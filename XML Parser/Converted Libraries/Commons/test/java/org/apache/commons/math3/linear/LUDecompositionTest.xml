<?xml version="1.0" encoding="UTF-8"?>
<source package="org.apache.commons.math3.linear">
  <import name="org.junit.Test" />
  <import name="org.junit.Assert" />
  <class name="LUDecompositionTest" startLine="23">
    <declaration type="double[][]" name="testData" />
    <declaration type="double[][]" name="testDataMinus" />
    <declaration type="double[][]" name="luData" />
    <declaration type="double[][]" name="singular" />
    <declaration type="double[][]" name="bigSingular" />
    <declaration type="double" name="entryTolerance" />
    <declaration type="double" name="normTolerance" />
    <javadoc>
      <text>* test dimensions</text>
    </javadoc>
    <method type="void" name="testDimensions" startLine="58" endLine="68">
      <declaration type="RealMatrix" name="matrix" />
      <declaration type="LUDecomposition" name="LU" />
    </method>
    <javadoc>
      <text>* test non-square matrix</text>
    </javadoc>
    <method type="void" name="testNonSquare" startLine="72" endLine="79">
      <scope startLine="73" endLine="76" />
      <scope startLine="76" endLine="78">
        <comment>expected behavior</comment>
      </scope>
    </method>
    <javadoc>
      <text>* test PA = LU</text>
    </javadoc>
    <method type="void" name="testPAEqualLU" startLine="83" endLine="122">
      <declaration type="RealMatrix" name="matrix" />
      <declaration type="LUDecomposition" name="lu" />
      <declaration type="RealMatrix" name="l" />
      <declaration type="RealMatrix" name="u" />
      <declaration type="RealMatrix" name="p" />
      <declaration type="double" name="norm" />
    </method>
    <javadoc>
      <text>* test that L is lower triangular with unit diagonal</text>
    </javadoc>
    <method type="void" name="testLLowerTriangular" startLine="126" endLine="135">
      <declaration type="RealMatrix" name="matrix" />
      <declaration type="RealMatrix" name="l" />
      <scope startLine="129" endLine="134">
        <scope startLine="131" endLine="133" />
      </scope>
    </method>
    <javadoc>
      <text>* test that U is upper triangular</text>
    </javadoc>
    <method type="void" name="testUUpperTriangular" startLine="139" endLine="147">
      <declaration type="RealMatrix" name="matrix" />
      <declaration type="RealMatrix" name="u" />
      <scope startLine="142" endLine="146">
        <scope startLine="143" endLine="145" />
      </scope>
    </method>
    <javadoc>
      <text>* test that P is a permutation matrix</text>
    </javadoc>
    <method type="void" name="testPPermutation" startLine="151" endLine="197">
      <declaration type="RealMatrix" name="matrix" />
      <declaration type="RealMatrix" name="p" />
      <declaration type="RealMatrix" name="ppT" />
      <declaration type="RealMatrix" name="id" />
      <scope startLine="159" endLine="176">
        <declaration type="int" name="zeroCount" />
        <declaration type="int" name="oneCount" />
        <declaration type="int" name="otherCount" />
        <scope startLine="163" endLine="172">
          <declaration type="double" name="e" />
          <scope startLine="165" endLine="167" />
          <scope startLine="167" endLine="169" />
          <scope startLine="169" endLine="171" />
        </scope>
      </scope>
      <scope startLine="178" endLine="195">
        <declaration type="int" name="zeroCount" />
        <declaration type="int" name="oneCount" />
        <declaration type="int" name="otherCount" />
        <scope startLine="182" endLine="191">
          <declaration type="double" name="e" />
          <scope startLine="184" endLine="186" />
          <scope startLine="186" endLine="188" />
          <scope startLine="188" endLine="190" />
        </scope>
      </scope>
    </method>
    <javadoc>
      <text>* test singular</text>
    </javadoc>
    <method type="void" name="testSingular" startLine="201" endLine="209">
      <declaration type="LUDecomposition" name="lu" />
    </method>
    <javadoc>
      <text>* test matrices values</text>
    </javadoc>
    <method type="void" name="testMatricesValues1" startLine="213" endLine="250">
      <declaration type="LUDecomposition" name="lu" />
      <declaration type="RealMatrix[]" name="lRef" />
      <declaration type="RealMatrix[]" name="uRef" />
      <declaration type="RealMatrix[]" name="pRef" />
      <declaration type="int[]" name="pivotRef" />
      <declaration type="RealMatrix" name="l" />
      <declaration type="RealMatrix" name="u" />
      <declaration type="RealMatrix" name="p" />
      <declaration type="int[]" name="pivot" />
      <scope startLine="241" endLine="243" />
      <comment>check values against known references</comment>
      <comment>check the same cached instance is returned the second time</comment>
    </method>
    <javadoc>
      <text>* test matrices values</text>
    </javadoc>
    <method type="void" name="testMatricesValues2" startLine="254" endLine="290">
      <declaration type="LUDecomposition" name="lu" />
      <declaration type="RealMatrix[]" name="lRef" />
      <declaration type="RealMatrix[]" name="uRef" />
      <declaration type="RealMatrix[]" name="pRef" />
      <declaration type="int[]" name="pivotRef" />
      <declaration type="RealMatrix" name="l" />
      <declaration type="RealMatrix" name="u" />
      <declaration type="RealMatrix" name="p" />
      <declaration type="int[]" name="pivot" />
      <scope startLine="282" endLine="284" />
      <comment>check values against known references</comment>
      <comment>check the same cached instance is returned the second time</comment>
    </method>
    <comment>singular matrices</comment>
    <comment>4th row = 1st + 2nd</comment>
  </class>
</source>
