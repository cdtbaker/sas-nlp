<?xml version="1.0" encoding="UTF-8"?>
<source package="org.apache.commons.math3.ml.clustering">
  <import name="java.util.ArrayList" />
  <import name="java.util.Arrays" />
  <import name="java.util.Collection" />
  <import name="java.util.List" />
  <import name="org.apache.commons.math3.exception.NumberIsTooSmallException" />
  <import name="org.apache.commons.math3.ml.distance.EuclideanDistance" />
  <import name="org.apache.commons.math3.random.JDKRandomGenerator" />
  <import name="org.apache.commons.math3.random.RandomGenerator" />
  <import name="org.junit.Assert" />
  <import name="org.junit.Before" />
  <import name="org.junit.Test" />
  <class name="KMeansPlusPlusClustererTest" startLine="33">
    <declaration type="RandomGenerator" name="random" />
    <method type="void" name="setUp" startLine="38" endLine="41" />
    <javadoc>
      <text>* JIRA: MATH-305
 * Two points, one cluster, one iteration</text>
    </javadoc>
    <method type="void" name="testPerformClusterAnalysisDegenerate" startLine="49" endLine="64">
      <declaration type="KMeansPlusPlusClusterer<DoublePoint>" name="transformer" />
      <declaration type="DoublePoint[][]" name="points" />
      <declaration type="List<? extends Cluster<DoublePoint>>" name="clusters" />
      <declaration type="DoublePoint[]" name="pt1" />
      <declaration type="DoublePoint[]" name="pt2" />
    </method>
    <method type="void" name="testCertainSpace" startLine="67" endLine="115">
      <declaration type="KMeansPlusPlusClusterer.EmptyClusterStrategy[]" name="strategies" />
      <scope startLine="73" endLine="113">
        <declaration type="int" name="numberOfVariables" />
        <declaration type="int" name="position1" />
        <declaration type="int" name="position2" />
        <declaration type="int" name="position3" />
        <declaration type="int" name="position4" />
        <declaration type="int" name="multiplier" />
        <declaration type="DoublePoint[]" name="breakingPoints" />
        <scope startLine="85" endLine="97">
          <declaration type="int[]" name="points" />
          <scope startLine="88" endLine="90" />
          <declaration type="DoublePoint" name="DoublePoint" />
        </scope>
        <scope startLine="99" endLine="112">
          <declaration type="KMeansPlusPlusClusterer<DoublePoint>" name="transformer" />
          <declaration type="List<? extends Cluster<DoublePoint>>" name="clusters" />
          <declaration type="int" name="sum" />
          <scope startLine="108" endLine="110" />
        </scope>
        <comment>initialise testvalues</comment>
        <comment>testvalues will be multiplied</comment>
        <comment>define the space which will break the cluster algorithm</comment>
        <comment>multiply the values</comment>
      </scope>
    </method>
    <class name="CloseDistance" extends="EuclideanDistance" startLine="117">
      <javadoc>
        <text>* A helper class for testSmallDistances(). This class is similar to DoublePoint, but
 * it defines a different distanceFrom() method that tends to return distances less than 1.</text>
      </javadoc>
      <declaration type="long" name="serialVersionUID" />
      <method type="double" name="compute" startLine="125" endLine="127" />
      <javadoc>
        <text>* Test points that are very close together. See issue MATH-546.</text>
      </javadoc>
      <method type="void" name="testSmallDistances" startLine="134" endLine="169">
        <declaration type="int[]" name="repeatedArray" />
        <declaration type="int[]" name="uniqueArray" />
        <declaration type="DoublePoint" name="repeatedPoint" />
        <declaration type="DoublePoint" name="uniquePoint" />
        <declaration type="Collection<DoublePoint>" name="points" />
        <declaration type="int" name="NUM_REPEATED_POINTS" />
        <scope startLine="144" endLine="146" />
        <declaration type="long" name="RANDOM_SEED" />
        <declaration type="int" name="NUM_CLUSTERS" />
        <declaration type="int" name="NUM_ITERATIONS" />
        <declaration type="KMeansPlusPlusClusterer<DoublePoint>" name="clusterer" />
        <declaration type="List<CentroidCluster<DoublePoint>>" name="clusters" />
        <declaration type="boolean" name="uniquePointIsCenter" />
        <scope startLine="163" endLine="167">
          <scope startLine="164" endLine="166" />
        </scope>
        <comment>Create a bunch of CloseDoublePoints. Most are identical, but one is different by a</comment>
        <comment>small distance.</comment>
        <comment>Ask a KMeansPlusPlusClusterer to run zero iterations (i.e., to simply choose initial</comment>
        <comment>cluster centers).</comment>
        <comment>Check that one of the chosen centers is the unique point.</comment>
      </method>
      <javadoc>
        <text>* 2 variables cannot be clustered into 3 clusters. See issue MATH-436.</text>
      </javadoc>
      <method type="void" name="testPerformClusterAnalysisToManyClusters" startLine="175" endLine="189">
        <declaration type="KMeansPlusPlusClusterer<DoublePoint>" name="transformer" />
        <declaration type="DoublePoint[][]" name="points" />
      </method>
    </class>
  </class>
</source>
