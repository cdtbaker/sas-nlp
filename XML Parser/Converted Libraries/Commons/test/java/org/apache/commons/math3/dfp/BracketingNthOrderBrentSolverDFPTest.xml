<?xml version="1.0" encoding="UTF-8"?>
<source package="org.apache.commons.math3.dfp">
  <import name="org.apache.commons.math3.analysis.solvers.AllowedSolution" />
  <import name="org.apache.commons.math3.exception.MathInternalError" />
  <import name="org.apache.commons.math3.exception.NumberIsTooSmallException" />
  <import name="org.junit.Assert" />
  <import name="org.junit.Before" />
  <import name="org.junit.Test" />
  <class name="BracketingNthOrderBrentSolverDFPTest" startLine="27">
    <javadoc>
      <text>* Test case for {@link BracketingNthOrderBrentSolverDFP bracketing n<sup>th</sup> order Brent} solver.</text>
      <version>$Id: BracketingNthOrderBrentSolverDFPTest.java 1244107 2012-02-14 16:17:55Z erans $</version>
    </javadoc>
    <method type="void" name="testInsufficientOrder3" startLine="35" endLine="38" />
    <method type="void" name="testConstructorOK" startLine="41" endLine="46">
      <declaration type="BracketingNthOrderBrentSolverDFP" name="solver" />
    </method>
    <method type="void" name="testConvergenceOnFunctionAccuracy" startLine="49" endLine="75">
      <declaration type="BracketingNthOrderBrentSolverDFP" name="solver" />
      <declaration type="UnivariateDfpFunction" name="f" />
      <method type="Dfp" name="value" startLine="54" endLine="62">
        <declaration type="Dfp" name="one" />
        <declaration type="Dfp" name="oneHalf" />
        <declaration type="Dfp" name="xMo" />
        <declaration type="Dfp" name="xMh" />
        <declaration type="Dfp" name="xPh" />
        <declaration type="Dfp" name="xPo" />
      </method>
      <declaration type="Dfp" name="result" />
    </method>
    <method type="void" name="testNeta" startLine="78" endLine="122">
      <scope startLine="84" endLine="120">
        <method type="Dfp" name="value" startLine="86" endLine="88" />
        <method type="Dfp" name="value" startLine="92" endLine="94" />
        <method type="Dfp" name="value" startLine="98" endLine="100" />
        <method type="Dfp" name="value" startLine="104" endLine="106" />
        <method type="Dfp" name="value" startLine="110" endLine="112" />
        <method type="Dfp" name="value" startLine="116" endLine="118" />
      </scope>
      <comment>the following test functions come from Beny Neta's paper:</comment>
      <comment>"Several New Methods for solving Equations"</comment>
      <comment>intern J. Computer Math Vol 23 pp 265-282</comment>
      <comment>available here: http:www.math.nps.navy.mil/~bneta/SeveralNewMethods.PDF</comment>
    </method>
    <method type="void" name="check" startLine="125" endLine="156">
      <declaration type="BracketingNthOrderBrentSolverDFP" name="solver" />
      <declaration type="Dfp" name="xResult" />
      <declaration type="Dfp" name="yResult" />
      <scope startLine="136" endLine="140">
        <declaration type="boolean" name="increasing" />
      </scope>
      <scope startLine="141" endLine="145">
        <declaration type="boolean" name="increasing" />
      </scope>
      <comment>this should never happen</comment>
    </method>
    <method type="void" name="setUp" startLine="159" endLine="164" />
    <declaration type="DfpField" name="field" />
    <declaration type="Dfp" name="absoluteAccuracy" />
    <declaration type="Dfp" name="relativeAccuracy" />
    <declaration type="Dfp" name="functionValueAccuracy" />
  </class>
</source>
