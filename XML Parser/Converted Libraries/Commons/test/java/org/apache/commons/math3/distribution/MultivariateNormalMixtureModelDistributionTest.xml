<?xml version="1.0" encoding="UTF-8"?>
<source package="org.apache.commons.math3.distribution">
  <import name="java.util.List" />
  <import name="java.util.ArrayList" />
  <import name="org.apache.commons.math3.exception.NotPositiveException" />
  <import name="org.apache.commons.math3.exception.MathArithmeticException" />
  <import name="org.apache.commons.math3.util.Pair" />
  <import name="org.junit.Assert" />
  <import name="org.junit.Test" />
  <class name="MultivariateNormalMixtureModelDistributionTest" startLine="27">
    <javadoc>
      <text>* Test that demonstrates the use of {@link MixtureMultivariateRealDistribution}in order to create a mixture model composed of {@link MultivariateNormalDistributionnormal distributions}.</text>
    </javadoc>
    <method type="void" name="testNonUnitWeightSum" startLine="35" endLine="50">
      <declaration type="double[]" name="weights" />
      <declaration type="double[][]" name="means" />
      <declaration type="double[][][]" name="covariances" />
      <declaration type="MultivariateNormalMixtureModelDistribution" name="d" />
      <declaration type="List<Pair<Double,MultivariateNormalDistribution>>" name="comp" />
    </method>
    <method type="void" name="testWeightSumOverFlow" startLine="53" endLine="63">
      <declaration type="double[]" name="weights" />
      <declaration type="double[][]" name="means" />
      <declaration type="double[][][]" name="covariances" />
      <declaration type="MultivariateNormalMixtureModelDistribution" name="d" />
    </method>
    <method type="void" name="testPreconditionPositiveWeights" startLine="66" endLine="76">
      <declaration type="double[]" name="negativeWeights" />
      <declaration type="double[][]" name="means" />
      <declaration type="double[][][]" name="covariances" />
      <declaration type="MultivariateNormalMixtureModelDistribution" name="d" />
    </method>
    <javadoc>
      <text>* Test the accuracy of the density calculation.</text>
    </javadoc>
    <method type="void" name="testDensities" startLine="82" endLine="112">
      <declaration type="double[]" name="weights" />
      <declaration type="double[][]" name="means" />
      <declaration type="double[][][]" name="covariances" />
      <declaration type="MultivariateNormalMixtureModelDistribution" name="d" />
      <declaration type="double[][]" name="testValues" />
      <declaration type="double[]" name="correctDensities" />
      <scope startLine="109" endLine="111" />
      <comment>Test vectors</comment>
      <comment>Densities that we should get back.</comment>
      <comment>Calculated by assigning weights to multivariate normal distribution</comment>
      <comment>and summing</comment>
      <comment>values from dmvnorm function in R 2.15 CRAN package Mixtools v0.4.</comment>
      <comment>Like: .3*dmvnorm(val,mu1,sigma1)+.7*dmvnorm(val,mu2,sigma2)</comment>
    </method>
    <javadoc>
      <text>* Test the accuracy of sampling from the distribution.</text>
    </javadoc>
    <method type="void" name="testSampling" startLine="118" endLine="139">
      <declaration type="double[]" name="weights" />
      <declaration type="double[][]" name="means" />
      <declaration type="double[][][]" name="covariances" />
      <declaration type="MultivariateNormalMixtureModelDistribution" name="d" />
      <declaration type="double[][]" name="correctSamples" />
      <declaration type="int" name="n" />
      <declaration type="double[][]" name="samples" />
      <scope startLine="134" endLine="138">
        <scope startLine="135" endLine="137" />
      </scope>
    </method>
    <javadoc>
      <text>* Creates a mixture of Gaussian distributions.</text>
      <param>weights Weights.</param>
      <param>means Means.</param>
      <param>covariances Covariances.</param>
      <return>the mixture distribution.</return>
    </javadoc>
    <method type="MultivariateNormalMixtureModelDistribution" name="create" startLine="151" endLine="162">
      <declaration type="List<Pair<Double,MultivariateNormalDistribution>>" name="mvns" />
      <scope startLine="155" endLine="159">
        <declaration type="MultivariateNormalDistribution" name="dist" />
      </scope>
    </method>
    <javadoc>
      <text>* Values used in {@link #testSampling()}.</text>
    </javadoc>
    <method type="double[][]" name="getCorrectSamples" startLine="167" endLine="287">
      <comment>These were sampled from the MultivariateNormalMixtureModelDistribution class</comment>
      <comment>with seed 50.</comment>
      <comment />
      <comment>They were then fit to a MVN mixture model in R using mixtools.</comment>
      <comment />
      <comment>The optimal parameters were:</comment>
      <comment>- component weights: {0.3595186, 0.6404814}</comment>
      <comment>- mean vectors: {-1.645879, 1.989797}, {3.474328, 7.782232}</comment>
      <comment>- covariance matrices:</comment>
      <comment>{ 1.397738 -1.167732</comment>
      <comment>-1.167732 1.801782 }</comment>
      <comment>and</comment>
      <comment>{ 3.934593 2.354787</comment>
      <comment>2.354787 4.428024 }</comment>
      <comment />
      <comment>It is considered fairly close to the actual test parameters,</comment>
      <comment>considering that the sample size is only 100.</comment>
    </method>
    <class name="MultivariateNormalMixtureModelDistribution" extends="MixtureMultivariateRealDistribution<MultivariateNormalDistribution>" startLine="290">
      <javadoc>
        <text>* Class that implements a mixture of Gaussian ditributions.</text>
      </javadoc>
      <method type="constructor" name="MultivariateNormalMixtureModelDistribution" startLine="296" endLine="298" />
    </class>
  </class>
</source>
