<?xml version="1.0" encoding="UTF-8"?>
<source package="org.apache.commons.math3.optim.linear">
  <import name="java.util.ArrayList" />
  <import name="java.util.Collection" />
  <import name="java.util.List" />
  <import name="org.apache.commons.math3.optim.MaxIter" />
  <import name="org.apache.commons.math3.optim.nonlinear.scalar.GoalType" />
  <import name="org.apache.commons.math3.optim.PointValuePair" />
  <import name="org.apache.commons.math3.util.Precision" />
  <import name="org.junit.Test" />
  <import name="org.junit.Assert" />
  <class name="SimplexSolverTest" startLine="29">
    <declaration type="MaxIter" name="DEFAULT_MAX_ITER" />
    <method type="void" name="testMath828" startLine="33" endLine="52">
      <declaration type="LinearObjectiveFunction[]" name="f" />
      <declaration type="ArrayList<LinearConstraint>" name="constraints" />
      <declaration type="double" name="epsilon" />
      <declaration type="PointValuePair" name="solution" />
    </method>
    <method type="void" name="testMath828Cycle" startLine="55" endLine="74">
      <declaration type="LinearObjectiveFunction[]" name="f" />
      <declaration type="ArrayList<LinearConstraint>" name="constraints" />
      <declaration type="double" name="epsilon" />
      <declaration type="PointValuePair" name="solution" />
    </method>
    <method type="void" name="testMath781" startLine="77" endLine="94">
      <declaration type="LinearObjectiveFunction[]" name="f" />
      <declaration type="ArrayList<LinearConstraint>" name="constraints" />
      <declaration type="double" name="epsilon" />
      <declaration type="SimplexSolver" name="solver" />
      <declaration type="PointValuePair" name="solution" />
    </method>
    <method type="void" name="testMath713NegativeVariable" startLine="97" endLine="109">
      <declaration type="LinearObjectiveFunction[]" name="f" />
      <declaration type="ArrayList<LinearConstraint>" name="constraints" />
      <declaration type="double" name="epsilon" />
      <declaration type="SimplexSolver" name="solver" />
      <declaration type="PointValuePair" name="solution" />
    </method>
    <method type="void" name="testMath434NegativeVariable" startLine="112" endLine="127">
      <declaration type="LinearObjectiveFunction[]" name="f" />
      <declaration type="ArrayList<LinearConstraint>" name="constraints" />
      <declaration type="double" name="epsilon" />
      <declaration type="SimplexSolver" name="solver" />
      <declaration type="PointValuePair" name="solution" />
    </method>
    <method type="void" name="testMath434UnfeasibleSolution" startLine="130" endLine="142">
      <declaration type="double" name="epsilon" />
      <declaration type="LinearObjectiveFunction[]" name="f" />
      <declaration type="ArrayList<LinearConstraint>" name="constraints" />
      <declaration type="SimplexSolver" name="solver" />
      <comment>allowing only non-negative values, no feasible solution shall be found</comment>
    </method>
    <method type="void" name="testMath434PivotRowSelection" startLine="145" endLine="159">
      <declaration type="LinearObjectiveFunction[]" name="f" />
      <declaration type="double" name="epsilon" />
      <declaration type="ArrayList<LinearConstraint>" name="constraints" />
      <declaration type="SimplexSolver" name="solver" />
      <declaration type="PointValuePair" name="solution" />
    </method>
    <method type="void" name="testMath434PivotRowSelection2" startLine="162" endLine="185">
      <declaration type="LinearObjectiveFunction[]" name="f" />
      <declaration type="ArrayList<LinearConstraint>" name="constraints" />
      <declaration type="double" name="epsilon" />
      <declaration type="SimplexSolver" name="simplex" />
      <declaration type="PointValuePair" name="solution" />
    </method>
    <method type="void" name="testMath272" startLine="188" endLine="203">
      <declaration type="LinearObjectiveFunction[]" name="f" />
      <declaration type="Collection<LinearConstraint>" name="constraints" />
      <declaration type="SimplexSolver" name="solver" />
      <declaration type="PointValuePair" name="solution" />
    </method>
    <method type="void" name="testMath286" startLine="206" endLine="225">
      <declaration type="LinearObjectiveFunction[]" name="f" />
      <declaration type="Collection<LinearConstraint>" name="constraints" />
      <declaration type="SimplexSolver" name="solver" />
      <declaration type="PointValuePair" name="solution" />
    </method>
    <method type="void" name="testDegeneracy" startLine="228" endLine="239">
      <declaration type="LinearObjectiveFunction[]" name="f" />
      <declaration type="Collection<LinearConstraint>" name="constraints" />
      <declaration type="SimplexSolver" name="solver" />
      <declaration type="PointValuePair" name="solution" />
    </method>
    <method type="void" name="testMath288" startLine="242" endLine="255">
      <declaration type="LinearObjectiveFunction[]" name="f" />
      <declaration type="Collection<LinearConstraint>" name="constraints" />
      <declaration type="SimplexSolver" name="solver" />
      <declaration type="PointValuePair" name="solution" />
    </method>
    <method type="void" name="testMath290GEQ" startLine="258" endLine="268">
      <declaration type="LinearObjectiveFunction[]" name="f" />
      <declaration type="Collection<LinearConstraint>" name="constraints" />
      <declaration type="SimplexSolver" name="solver" />
      <declaration type="PointValuePair" name="solution" />
    </method>
    <method type="void" name="testMath290LEQ" startLine="271" endLine="278">
      <declaration type="LinearObjectiveFunction[]" name="f" />
      <declaration type="Collection<LinearConstraint>" name="constraints" />
      <declaration type="SimplexSolver" name="solver" />
    </method>
    <method type="void" name="testMath293" startLine="281" endLine="317">
      <declaration type="LinearObjectiveFunction[]" name="f" />
      <declaration type="Collection<LinearConstraint>" name="constraints" />
      <declaration type="SimplexSolver" name="solver" />
      <declaration type="PointValuePair" name="solution1" />
      <declaration type="double" name="valA" />
      <declaration type="double" name="valB" />
      <declaration type="double" name="valC" />
      <declaration type="PointValuePair" name="solution2" />
    </method>
    <method type="void" name="testMath930" startLine="320" endLine="428">
      <declaration type="Collection<LinearConstraint>" name="constraints" />
      <declaration type="double[]" name="objFunctionCoeff" />
      <declaration type="LinearObjectiveFunction" name="f" />
      <declaration type="SimplexSolver" name="solver" />
      <declaration type="PointValuePair" name="solution" />
    </method>
    <method type="void" name="testSimplexSolver" startLine="431" endLine="445">
      <declaration type="LinearObjectiveFunction[]" name="f" />
      <declaration type="Collection<LinearConstraint>" name="constraints" />
      <declaration type="SimplexSolver" name="solver" />
      <declaration type="PointValuePair" name="solution" />
    </method>
    <method type="void" name="testSingleVariableAndConstraint" startLine="448" endLine="458">
      <declaration type="LinearObjectiveFunction[]" name="f" />
      <declaration type="Collection<LinearConstraint>" name="constraints" />
      <declaration type="SimplexSolver" name="solver" />
      <declaration type="PointValuePair" name="solution" />
    </method>
    <javadoc>
      <text>* With no artificial variables needed (no equals and no greater than
 * constraints) we can go straight to Phase 2.</text>
    </javadoc>
    <method type="void" name="testModelWithNoArtificialVars" startLine="465" endLine="478">
      <declaration type="LinearObjectiveFunction[]" name="f" />
      <declaration type="Collection<LinearConstraint>" name="constraints" />
      <declaration type="SimplexSolver" name="solver" />
      <declaration type="PointValuePair" name="solution" />
    </method>
    <method type="void" name="testMinimization" startLine="481" endLine="494">
      <declaration type="LinearObjectiveFunction[]" name="f" />
      <declaration type="Collection<LinearConstraint>" name="constraints" />
      <declaration type="SimplexSolver" name="solver" />
      <declaration type="PointValuePair" name="solution" />
    </method>
    <method type="void" name="testSolutionWithNegativeDecisionVariable" startLine="497" endLine="509">
      <declaration type="LinearObjectiveFunction[]" name="f" />
      <declaration type="Collection<LinearConstraint>" name="constraints" />
      <declaration type="SimplexSolver" name="solver" />
      <declaration type="PointValuePair" name="solution" />
    </method>
    <method type="void" name="testInfeasibleSolution" startLine="512" endLine="521">
      <declaration type="LinearObjectiveFunction[]" name="f" />
      <declaration type="Collection<LinearConstraint>" name="constraints" />
      <declaration type="SimplexSolver" name="solver" />
    </method>
    <method type="void" name="testUnboundedSolution" startLine="524" endLine="532">
      <declaration type="LinearObjectiveFunction[]" name="f" />
      <declaration type="Collection<LinearConstraint>" name="constraints" />
      <declaration type="SimplexSolver" name="solver" />
    </method>
    <method type="void" name="testRestrictVariablesToNonNegative" startLine="535" endLine="553">
      <declaration type="LinearObjectiveFunction[]" name="f" />
      <declaration type="Collection<LinearConstraint>" name="constraints" />
      <declaration type="SimplexSolver" name="solver" />
      <declaration type="PointValuePair" name="solution" />
    </method>
    <method type="void" name="testEpsilon" startLine="556" endLine="571">
      <declaration type="LinearObjectiveFunction[]" name="f" />
      <declaration type="Collection<LinearConstraint>" name="constraints" />
      <declaration type="SimplexSolver" name="solver" />
      <declaration type="PointValuePair" name="solution" />
    </method>
    <method type="void" name="testTrivialModel" startLine="574" endLine="583">
      <declaration type="LinearObjectiveFunction[]" name="f" />
      <declaration type="Collection<LinearConstraint>" name="constraints" />
      <declaration type="SimplexSolver" name="solver" />
      <declaration type="PointValuePair" name="solution" />
    </method>
    <method type="void" name="testLargeModel" startLine="586" endLine="711">
      <declaration type="double[][]" name="objective" />
      <declaration type="LinearObjectiveFunction" name="f" />
      <declaration type="Collection<LinearConstraint>" name="constraints" />
      <declaration type="SimplexSolver" name="solver" />
      <declaration type="PointValuePair" name="solution" />
    </method>
    <javadoc>
      <text>* Converts a test string to a {@link LinearConstraint}.
 * Ex: x0 + x1 + x2 + x3 - x12 = 0</text>
    </javadoc>
    <method type="LinearConstraint" name="equationFromString" startLine="717" endLine="741">
      <declaration type="Relationship" name="relationship" />
      <scope startLine="719" endLine="721" />
      <scope startLine="721" endLine="723" />
      <scope startLine="723" endLine="725" />
      <scope startLine="725" endLine="727" />
      <declaration type="String[]" name="equationParts" />
      <declaration type="double" name="rhs" />
      <declaration type="double[]" name="lhs" />
      <declaration type="String" name="left" />
      <declaration type="String[]" name="coefficients" />
      <scope startLine="735" endLine="739">
        <declaration type="double" name="value" />
        <declaration type="int" name="index" />
      </scope>
    </method>
    <method type="boolean" name="validSolution" startLine="743" endLine="774">
      <declaration type="double[]" name="vals" />
      <scope startLine="745" endLine="771">
        <declaration type="double[]" name="coeffs" />
        <declaration type="double" name="result" />
        <scope startLine="748" endLine="750" />
        <scope startLine="754" endLine="756" />
        <scope startLine="760" endLine="762" />
        <scope startLine="766" endLine="768" />
      </scope>
    </method>
  </class>
</source>
