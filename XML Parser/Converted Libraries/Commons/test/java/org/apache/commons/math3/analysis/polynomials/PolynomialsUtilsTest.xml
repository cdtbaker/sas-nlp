<?xml version="1.0" encoding="UTF-8"?>
<source package="org.apache.commons.math3.analysis.polynomials">
  <import name="org.apache.commons.math3.analysis.UnivariateFunction" />
  <import name="org.apache.commons.math3.analysis.integration.IterativeLegendreGaussIntegrator" />
  <import name="org.apache.commons.math3.util.ArithmeticUtils" />
  <import name="org.apache.commons.math3.util.FastMath" />
  <import name="org.apache.commons.math3.util.Precision" />
  <import name="org.junit.Assert" />
  <import name="org.junit.Test" />
  <class name="PolynomialsUtilsTest" startLine="27">
    <javadoc>
      <text>* Tests the PolynomialsUtils class.</text>
      <version>$Id: PolynomialsUtilsTest.java 1377244 2012-08-25 10:05:13Z luc $</version>
    </javadoc>
    <method type="void" name="testFirstChebyshevPolynomials" startLine="35" endLine="46" />
    <method type="void" name="testChebyshevBounds" startLine="49" endLine="56">
      <scope startLine="50" endLine="55">
        <declaration type="PolynomialFunction" name="Tk" />
        <scope startLine="52" endLine="54" />
      </scope>
    </method>
    <method type="void" name="testChebyshevDifferentials" startLine="59" endLine="77">
      <scope startLine="60" endLine="76">
        <declaration type="PolynomialFunction" name="Tk0" />
        <declaration type="PolynomialFunction" name="Tk1" />
        <declaration type="PolynomialFunction" name="Tk2" />
        <declaration type="PolynomialFunction[]" name="g0" />
        <declaration type="PolynomialFunction[]" name="g1" />
        <declaration type="PolynomialFunction[]" name="g2" />
        <declaration type="PolynomialFunction" name="Tk0g0" />
        <declaration type="PolynomialFunction" name="Tk1g1" />
        <declaration type="PolynomialFunction" name="Tk2g2" />
      </scope>
    </method>
    <method type="void" name="testChebyshevOrthogonality" startLine="80" endLine="93">
      <declaration type="UnivariateFunction" name="weight" />
      <method type="double" name="value" startLine="82" endLine="84" />
      <scope startLine="86" endLine="92">
        <declaration type="PolynomialFunction" name="pi" />
        <scope startLine="88" endLine="91">
          <declaration type="PolynomialFunction" name="pj" />
        </scope>
      </scope>
    </method>
    <method type="void" name="testFirstHermitePolynomials" startLine="96" endLine="107" />
    <method type="void" name="testHermiteDifferentials" startLine="110" endLine="128">
      <scope startLine="111" endLine="127">
        <declaration type="PolynomialFunction" name="Hk0" />
        <declaration type="PolynomialFunction" name="Hk1" />
        <declaration type="PolynomialFunction" name="Hk2" />
        <declaration type="PolynomialFunction[]" name="g0" />
        <declaration type="PolynomialFunction[]" name="g1" />
        <declaration type="PolynomialFunction[]" name="g2" />
        <declaration type="PolynomialFunction" name="Hk0g0" />
        <declaration type="PolynomialFunction" name="Hk1g1" />
        <declaration type="PolynomialFunction" name="Hk2g2" />
      </scope>
    </method>
    <method type="void" name="testHermiteOrthogonality" startLine="131" endLine="144">
      <declaration type="UnivariateFunction" name="weight" />
      <method type="double" name="value" startLine="133" endLine="135" />
      <scope startLine="137" endLine="143">
        <declaration type="PolynomialFunction" name="pi" />
        <scope startLine="139" endLine="142">
          <declaration type="PolynomialFunction" name="pj" />
        </scope>
      </scope>
    </method>
    <method type="void" name="testFirstLaguerrePolynomials" startLine="147" endLine="164" />
    <method type="void" name="testLaguerreDifferentials" startLine="167" endLine="185">
      <scope startLine="168" endLine="184">
        <declaration type="PolynomialFunction" name="Lk0" />
        <declaration type="PolynomialFunction" name="Lk1" />
        <declaration type="PolynomialFunction" name="Lk2" />
        <declaration type="PolynomialFunction[]" name="g0" />
        <declaration type="PolynomialFunction[]" name="g1" />
        <declaration type="PolynomialFunction[]" name="g2" />
        <declaration type="PolynomialFunction" name="Lk0g0" />
        <declaration type="PolynomialFunction" name="Lk1g1" />
        <declaration type="PolynomialFunction" name="Lk2g2" />
      </scope>
    </method>
    <method type="void" name="testLaguerreOrthogonality" startLine="188" endLine="201">
      <declaration type="UnivariateFunction" name="weight" />
      <method type="double" name="value" startLine="190" endLine="192" />
      <scope startLine="194" endLine="200">
        <declaration type="PolynomialFunction" name="pi" />
        <scope startLine="196" endLine="199">
          <declaration type="PolynomialFunction" name="pj" />
        </scope>
      </scope>
    </method>
    <method type="void" name="testFirstLegendrePolynomials" startLine="204" endLine="215" />
    <method type="void" name="testLegendreDifferentials" startLine="218" endLine="236">
      <scope startLine="219" endLine="235">
        <declaration type="PolynomialFunction" name="Pk0" />
        <declaration type="PolynomialFunction" name="Pk1" />
        <declaration type="PolynomialFunction" name="Pk2" />
        <declaration type="PolynomialFunction[]" name="g0" />
        <declaration type="PolynomialFunction[]" name="g1" />
        <declaration type="PolynomialFunction[]" name="g2" />
        <declaration type="PolynomialFunction" name="Pk0g0" />
        <declaration type="PolynomialFunction" name="Pk1g1" />
        <declaration type="PolynomialFunction" name="Pk2g2" />
      </scope>
    </method>
    <method type="void" name="testLegendreOrthogonality" startLine="239" endLine="252">
      <declaration type="UnivariateFunction" name="weight" />
      <method type="double" name="value" startLine="241" endLine="243" />
      <scope startLine="245" endLine="251">
        <declaration type="PolynomialFunction" name="pi" />
        <scope startLine="247" endLine="250">
          <declaration type="PolynomialFunction" name="pj" />
        </scope>
      </scope>
    </method>
    <method type="void" name="testHighDegreeLegendre" startLine="255" endLine="275">
      <declaration type="double[]" name="l40" />
      <declaration type="double" name="denominator" />
      <declaration type="double[][]" name="numerators" />
      <scope startLine="267" endLine="274">
        <scope startLine="268" endLine="271">
          <declaration type="double" name="ci" />
        </scope>
        <scope startLine="271" endLine="273" />
      </scope>
    </method>
    <method type="void" name="testJacobiLegendre" startLine="278" endLine="284">
      <scope startLine="279" endLine="283">
        <declaration type="PolynomialFunction" name="legendre" />
        <declaration type="PolynomialFunction" name="jacobi" />
      </scope>
    </method>
    <method type="void" name="testJacobiEvaluationAt1" startLine="287" endLine="297">
      <scope startLine="288" endLine="296">
        <scope startLine="289" endLine="295">
          <scope startLine="290" endLine="294">
            <declaration type="PolynomialFunction" name="jacobi" />
            <declaration type="double" name="binomial" />
          </scope>
        </scope>
      </scope>
    </method>
    <method type="void" name="testJacobiOrthogonality" startLine="300" endLine="319">
      <scope startLine="301" endLine="318">
        <scope startLine="302" endLine="317">
          <declaration type="int" name="vv" />
          <declaration type="int" name="ww" />
          <declaration type="UnivariateFunction" name="weight" />
          <method type="double" name="value" startLine="306" endLine="308" />
          <scope startLine="310" endLine="316">
            <declaration type="PolynomialFunction" name="pi" />
            <scope startLine="312" endLine="315">
              <declaration type="PolynomialFunction" name="pj" />
            </scope>
          </scope>
        </scope>
      </scope>
    </method>
    <method type="void" name="testShift" startLine="322" endLine="348">
      <declaration type="PolynomialFunction[]" name="f1x" />
      <declaration type="PolynomialFunction" name="f1x1" />
      <declaration type="PolynomialFunction" name="f1xM1" />
      <declaration type="PolynomialFunction" name="f1x3" />
      <declaration type="PolynomialFunction[]" name="f2x" />
      <declaration type="PolynomialFunction" name="f2x1" />
      <declaration type="PolynomialFunction" name="f2x3" />
      <comment>f1(x) = 1 + x + 2 x^2</comment>
      <comment>f2(x) = 2 + 3 x^2 + 8 x^3 + 121 x^5</comment>
    </method>
    <method type="void" name="checkPolynomial" startLine="351" endLine="354">
      <declaration type="PolynomialFunction[]" name="q" />
    </method>
    <method type="void" name="checkPolynomial" startLine="356" endLine="358" />
    <method type="void" name="checkNullPolynomial" startLine="360" endLine="364">
      <scope startLine="361" endLine="363" />
    </method>
    <method type="void" name="checkOrthogonality" startLine="371" endLine="388">
      <declaration type="UnivariateFunction" name="f" />
      <method type="double" name="value" startLine="373" endLine="375" />
      <declaration type="double" name="dotProduct" />
      <scope startLine="379" endLine="383">
        <comment>integral should be non-zero</comment>
      </scope>
      <scope startLine="383" endLine="387">
        <comment>integral should be zero</comment>
      </scope>
    </method>
  </class>
</source>
