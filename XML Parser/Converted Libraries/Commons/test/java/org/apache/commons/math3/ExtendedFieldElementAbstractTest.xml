<?xml version="1.0" encoding="UTF-8"?>
<source package="org.apache.commons.math3">
  <import name="org.apache.commons.math3.random.RandomGenerator" />
  <import name="org.apache.commons.math3.random.Well1024a" />
  <import name="org.apache.commons.math3.util.FastMath" />
  <import name="org.apache.commons.math3.util.MathArrays" />
  <import name="org.junit.Assert" />
  <import name="org.junit.Test" />
  <class name="ExtendedFieldElementAbstractTest" startLine="26">
    <method name="build" type="T" startLine="28" endLine="28" />
    <method type="void" name="testAddField" startLine="31" endLine="37">
      <scope startLine="32" endLine="36">
        <scope startLine="33" endLine="35" />
      </scope>
    </method>
    <method type="void" name="testAddDouble" startLine="40" endLine="46">
      <scope startLine="41" endLine="45">
        <scope startLine="42" endLine="44" />
      </scope>
    </method>
    <method type="void" name="testSubtractField" startLine="49" endLine="55">
      <scope startLine="50" endLine="54">
        <scope startLine="51" endLine="53" />
      </scope>
    </method>
    <method type="void" name="testSubtractDouble" startLine="58" endLine="64">
      <scope startLine="59" endLine="63">
        <scope startLine="60" endLine="62" />
      </scope>
    </method>
    <method type="void" name="testMultiplyField" startLine="67" endLine="73">
      <scope startLine="68" endLine="72">
        <scope startLine="69" endLine="71" />
      </scope>
    </method>
    <method type="void" name="testMultiplyDouble" startLine="76" endLine="82">
      <scope startLine="77" endLine="81">
        <scope startLine="78" endLine="80" />
      </scope>
    </method>
    <method type="void" name="testMultiplyInt" startLine="85" endLine="91">
      <scope startLine="86" endLine="90">
        <scope startLine="87" endLine="89" />
      </scope>
    </method>
    <method type="void" name="testDivideField" startLine="94" endLine="100">
      <scope startLine="95" endLine="99">
        <scope startLine="96" endLine="98" />
      </scope>
    </method>
    <method type="void" name="testDivideDouble" startLine="103" endLine="109">
      <scope startLine="104" endLine="108">
        <scope startLine="105" endLine="107" />
      </scope>
    </method>
    <method type="void" name="testRemainderField" startLine="112" endLine="118">
      <scope startLine="113" endLine="117">
        <scope startLine="114" endLine="116" />
      </scope>
    </method>
    <method type="void" name="testRemainderDouble" startLine="121" endLine="127">
      <scope startLine="122" endLine="126">
        <scope startLine="123" endLine="125" />
      </scope>
    </method>
    <method type="void" name="testCos" startLine="130" endLine="134">
      <scope startLine="131" endLine="133" />
    </method>
    <method type="void" name="testAcos" startLine="137" endLine="141">
      <scope startLine="138" endLine="140" />
    </method>
    <method type="void" name="testSin" startLine="144" endLine="148">
      <scope startLine="145" endLine="147" />
    </method>
    <method type="void" name="testAsin" startLine="151" endLine="155">
      <scope startLine="152" endLine="154" />
    </method>
    <method type="void" name="testTan" startLine="158" endLine="162">
      <scope startLine="159" endLine="161" />
    </method>
    <method type="void" name="testAtan" startLine="165" endLine="169">
      <scope startLine="166" endLine="168" />
    </method>
    <method type="void" name="testAtan2" startLine="172" endLine="178">
      <scope startLine="173" endLine="177">
        <scope startLine="174" endLine="176" />
      </scope>
    </method>
    <method type="void" name="testCosh" startLine="181" endLine="185">
      <scope startLine="182" endLine="184" />
    </method>
    <method type="void" name="testAcosh" startLine="188" endLine="192">
      <scope startLine="189" endLine="191" />
    </method>
    <method type="void" name="testSinh" startLine="195" endLine="199">
      <scope startLine="196" endLine="198" />
    </method>
    <method type="void" name="testAsinh" startLine="202" endLine="206">
      <scope startLine="203" endLine="205" />
    </method>
    <method type="void" name="testTanh" startLine="209" endLine="213">
      <scope startLine="210" endLine="212" />
    </method>
    <method type="void" name="testAtanh" startLine="216" endLine="220">
      <scope startLine="217" endLine="219" />
    </method>
    <method type="void" name="testSqrt" startLine="223" endLine="227">
      <scope startLine="224" endLine="226" />
    </method>
    <method type="void" name="testCbrt" startLine="230" endLine="234">
      <scope startLine="231" endLine="233" />
    </method>
    <method type="void" name="testHypot" startLine="237" endLine="243">
      <scope startLine="238" endLine="242">
        <scope startLine="239" endLine="241" />
      </scope>
    </method>
    <method type="void" name="testRootN" startLine="246" endLine="258">
      <scope startLine="247" endLine="257">
        <scope startLine="248" endLine="256">
          <scope startLine="249" endLine="253">
            <scope startLine="250" endLine="252" />
          </scope>
          <scope startLine="253" endLine="255" />
        </scope>
      </scope>
    </method>
    <method type="void" name="testPowField" startLine="261" endLine="267">
      <scope startLine="262" endLine="266">
        <scope startLine="263" endLine="265" />
      </scope>
    </method>
    <method type="void" name="testPowDouble" startLine="270" endLine="276">
      <scope startLine="271" endLine="275">
        <scope startLine="272" endLine="274" />
      </scope>
    </method>
    <method type="void" name="testPowInt" startLine="279" endLine="285">
      <scope startLine="280" endLine="284">
        <scope startLine="281" endLine="283" />
      </scope>
    </method>
    <method type="void" name="testExp" startLine="288" endLine="292">
      <scope startLine="289" endLine="291" />
    </method>
    <method type="void" name="testExpm1" startLine="295" endLine="299">
      <scope startLine="296" endLine="298" />
    </method>
    <method type="void" name="testLog" startLine="302" endLine="306">
      <scope startLine="303" endLine="305" />
    </method>
    <method type="void" name="testLog1p" startLine="309" endLine="313">
      <scope startLine="310" endLine="312" />
    </method>
    <method type="void" name="testAbs" startLine="325" endLine="329">
      <scope startLine="326" endLine="328" />
    </method>
    <method type="void" name="testCeil" startLine="332" endLine="336">
      <scope startLine="333" endLine="335" />
    </method>
    <method type="void" name="testFloor" startLine="339" endLine="343">
      <scope startLine="340" endLine="342" />
    </method>
    <method type="void" name="testRint" startLine="346" endLine="350">
      <scope startLine="347" endLine="349" />
    </method>
    <method type="void" name="testRound" startLine="353" endLine="357">
      <scope startLine="354" endLine="356" />
    </method>
    <method type="void" name="testSignum" startLine="360" endLine="364">
      <scope startLine="361" endLine="363" />
    </method>
    <method type="void" name="testCopySignField" startLine="367" endLine="373">
      <scope startLine="368" endLine="372">
        <scope startLine="369" endLine="371" />
      </scope>
    </method>
    <method type="void" name="testCopySignDouble" startLine="376" endLine="382">
      <scope startLine="377" endLine="381">
        <scope startLine="378" endLine="380" />
      </scope>
    </method>
    <method type="void" name="testScalb" startLine="385" endLine="391">
      <scope startLine="386" endLine="390">
        <scope startLine="387" endLine="389" />
      </scope>
    </method>
    <method type="void" name="testLinearCombinationFaFa" startLine="394" endLine="404">
      <declaration type="RandomGenerator" name="r" />
      <scope startLine="396" endLine="403">
        <declaration type="double[]" name="aD" />
        <declaration type="double[]" name="bD" />
        <declaration type="T[]" name="aF" />
        <declaration type="T[]" name="bF" />
      </scope>
    </method>
    <method type="void" name="testLinearCombinationDaFa" startLine="407" endLine="416">
      <declaration type="RandomGenerator" name="r" />
      <scope startLine="409" endLine="415">
        <declaration type="double[]" name="aD" />
        <declaration type="double[]" name="bD" />
        <declaration type="T[]" name="bF" />
      </scope>
    </method>
    <method type="void" name="testLinearCombinationFF2" startLine="419" endLine="429">
      <declaration type="RandomGenerator" name="r" />
      <scope startLine="421" endLine="428">
        <declaration type="double[]" name="aD" />
        <declaration type="double[]" name="bD" />
        <declaration type="T[]" name="aF" />
        <declaration type="T[]" name="bF" />
      </scope>
    </method>
    <method type="void" name="testLinearCombinationDF2" startLine="432" endLine="441">
      <declaration type="RandomGenerator" name="r" />
      <scope startLine="434" endLine="440">
        <declaration type="double[]" name="aD" />
        <declaration type="double[]" name="bD" />
        <declaration type="T[]" name="bF" />
      </scope>
    </method>
    <method type="void" name="testLinearCombinationFF3" startLine="444" endLine="454">
      <declaration type="RandomGenerator" name="r" />
      <scope startLine="446" endLine="453">
        <declaration type="double[]" name="aD" />
        <declaration type="double[]" name="bD" />
        <declaration type="T[]" name="aF" />
        <declaration type="T[]" name="bF" />
      </scope>
    </method>
    <method type="void" name="testLinearCombinationDF3" startLine="457" endLine="466">
      <declaration type="RandomGenerator" name="r" />
      <scope startLine="459" endLine="465">
        <declaration type="double[]" name="aD" />
        <declaration type="double[]" name="bD" />
        <declaration type="T[]" name="bF" />
      </scope>
    </method>
    <method type="void" name="testLinearCombinationFF4" startLine="469" endLine="479">
      <declaration type="RandomGenerator" name="r" />
      <scope startLine="471" endLine="478">
        <declaration type="double[]" name="aD" />
        <declaration type="double[]" name="bD" />
        <declaration type="T[]" name="aF" />
        <declaration type="T[]" name="bF" />
      </scope>
    </method>
    <method type="void" name="testLinearCombinationDF4" startLine="482" endLine="491">
      <declaration type="RandomGenerator" name="r" />
      <scope startLine="484" endLine="490">
        <declaration type="double[]" name="aD" />
        <declaration type="double[]" name="bD" />
        <declaration type="T[]" name="bF" />
      </scope>
    </method>
    <method type="void" name="testGetField" startLine="494" endLine="497" />
    <method type="void" name="checkRelative" startLine="499" endLine="501" />
    <method type="void" name="testEquals" startLine="504" endLine="512">
      <declaration type="T" name="t1a" />
      <declaration type="T" name="t1b" />
      <declaration type="T" name="t2" />
    </method>
    <method type="void" name="testHash" startLine="515" endLine="521">
      <declaration type="T" name="t1a" />
      <declaration type="T" name="t1b" />
      <declaration type="T" name="t2" />
    </method>
    <method type="double[]" name="generateDouble" startLine="523" endLine="529">
      <declaration type="double[]" name="a" />
      <scope startLine="525" endLine="527" />
    </method>
    <method type="T[]" name="toFieldArray" startLine="531" endLine="537">
      <declaration type="T[]" name="f" />
      <scope startLine="533" endLine="535" />
    </method>
    <comment>TODO: add this test in 4.0, as it is not possible to do it in 3.2</comment>
    <comment>due to incompatibility of the return type in the Dfp class</comment>
    <comment>@Test</comment>
    <comment>public void testLog10() {</comment>
    <comment>for (double x = -0.9; x < 0.9; x += 0.05) {</comment>
    <comment>checkRelative(FastMath.log10(x), build(x).log10());</comment>
    <comment>}</comment>
    <comment>}</comment>
  </class>
</source>
