<?xml version="1.0" encoding="UTF-8"?>
<source package="org.apache.commons.math3.special">
  <import name="java.lang.reflect.InvocationTargetException" />
  <import name="java.lang.reflect.Method" />
  <import name="org.apache.commons.math3.TestUtils" />
  <import name="org.apache.commons.math3.exception.MathIllegalArgumentException" />
  <import name="org.apache.commons.math3.exception.NumberIsTooSmallException" />
  <import name="org.apache.commons.math3.exception.OutOfRangeException" />
  <import name="org.apache.commons.math3.util.FastMath" />
  <import name="org.junit.Assert" />
  <import name="org.junit.Test" />
  <class name="BetaTest" startLine="30">
    <javadoc>
      <version>$Id: BetaTest.java 1415853 2012-11-30 21:02:23Z celestin $</version>
    </javadoc>
    <declaration type="Method" name="LOG_GAMMA_SUM_METHOD" />
    <declaration type="Method" name="LOG_GAMMA_MINUS_LOG_GAMMA_SUM_METHOD" />
    <declaration type="Method" name="SUM_DELTA_MINUS_DELTA_SUM_METHOD" />
    <scope startLine="44" endLine="74">
      <declaration type="Class<Beta>" name="b" />
      <declaration type="Class<Double>" name="d" />
      <declaration type="Method" name="m" />
      <scope startLine="49" endLine="51" />
      <scope startLine="51" endLine="53" />
      <scope startLine="58" endLine="60" />
      <scope startLine="60" endLine="62" />
      <scope startLine="67" endLine="69" />
      <scope startLine="69" endLine="71" />
    </scope>
    <method type="void" name="testRegularizedBeta" startLine="77" endLine="80">
      <declaration type="double" name="actual" />
    </method>
    <method type="void" name="testLogBeta" startLine="82" endLine="85">
      <declaration type="double" name="actual" />
    </method>
    <method type="void" name="testRegularizedBetaNanPositivePositive" startLine="88" endLine="90" />
    <method type="void" name="testRegularizedBetaPositiveNanPositive" startLine="93" endLine="95" />
    <method type="void" name="testRegularizedBetaPositivePositiveNan" startLine="98" endLine="100" />
    <method type="void" name="testRegularizedBetaNegativePositivePositive" startLine="103" endLine="105" />
    <method type="void" name="testRegularizedBetaPositiveNegativePositive" startLine="108" endLine="110" />
    <method type="void" name="testRegularizedBetaPositivePositiveNegative" startLine="113" endLine="115" />
    <method type="void" name="testRegularizedBetaZeroPositivePositive" startLine="118" endLine="120" />
    <method type="void" name="testRegularizedBetaPositiveZeroPositive" startLine="123" endLine="125" />
    <method type="void" name="testRegularizedBetaPositivePositiveZero" startLine="128" endLine="130" />
    <method type="void" name="testRegularizedBetaPositivePositivePositive" startLine="133" endLine="135" />
    <method type="void" name="testLogBetaNanPositive" startLine="138" endLine="140" />
    <method type="void" name="testLogBetaPositiveNan" startLine="143" endLine="145" />
    <method type="void" name="testLogBetaNegativePositive" startLine="148" endLine="150" />
    <method type="void" name="testLogBetaPositiveNegative" startLine="153" endLine="155" />
    <method type="void" name="testLogBetaZeroPositive" startLine="158" endLine="160" />
    <method type="void" name="testLogBetaPositiveZero" startLine="163" endLine="165" />
    <method type="void" name="testLogBetaPositivePositive" startLine="168" endLine="170" />
    <javadoc>
      <text>* Reference data for the {@link Gamma#logGammaSum(double,double)}function. This data was generated with the following
 * <a href="http://maxima.sourceforge.net/">Maxima</a> script.
 * <pre>
 * kill(all);
 * fpprec : 64;
 * gsumln(a, b) := log(gamma(a + b));
 * x : [1.0b0, 1.125b0, 1.25b0, 1.375b0, 1.5b0, 1.625b0, 1.75b0, 1.875b0, 2.0b0];
 * for i : 1 while i <= length(x) do
 * for j : 1 while j <= length(x) do block(
 * a : x[i],
 * b : x[j],
 * print("{", float(a), ",", float(b), ",", float(gsumln(a, b)), "},")
 * );
 * </pre></text>
    </javadoc>
    <declaration type="double[][]" name="LOG_GAMMA_SUM_REF" />
    <method type="double" name="logGammaSum" startLine="277" endLine="296">
      <scope startLine="282" endLine="284" />
      <scope startLine="284" endLine="286" />
      <scope startLine="286" endLine="288" />
      <scope startLine="288" endLine="294">
        <declaration type="Throwable" name="te" />
        <scope startLine="290" endLine="292" />
      </scope>
      <comment>Use reflection to access private method.</comment>
    </method>
    <method type="void" name="testLogGammaSum" startLine="299" endLine="312">
      <declaration type="int" name="ulps" />
      <scope startLine="301" endLine="311">
        <declaration type="double[]" name="ref" />
        <declaration type="double" name="a" />
        <declaration type="double" name="b" />
        <declaration type="double" name="expected" />
        <declaration type="double" name="actual" />
        <declaration type="double" name="tol" />
        <declaration type="StringBuilder" name="builder" />
      </scope>
    </method>
    <method type="void" name="testLogGammaSumPrecondition1" startLine="315" endLine="318" />
    <method type="void" name="testLogGammaSumPrecondition2" startLine="321" endLine="324" />
    <method type="void" name="testLogGammaSumPrecondition3" startLine="327" endLine="330" />
    <method type="void" name="testLogGammaSumPrecondition4" startLine="333" endLine="336" />
    <declaration type="double[][]" name="LOG_GAMMA_MINUS_LOG_GAMMA_SUM_REF" />
    <method type="double" name="logGammaMinusLogGammaSum" startLine="462" endLine="482">
      <scope startLine="467" endLine="470">
        <declaration type="Method" name="m" />
      </scope>
      <scope startLine="470" endLine="472" />
      <scope startLine="472" endLine="474" />
      <scope startLine="474" endLine="480">
        <declaration type="Throwable" name="te" />
        <scope startLine="476" endLine="478" />
      </scope>
      <comment>Use reflection to access private method.</comment>
    </method>
    <method type="void" name="testLogGammaMinusLogGammaSum" startLine="485" endLine="498">
      <declaration type="int" name="ulps" />
      <scope startLine="487" endLine="497">
        <declaration type="double[]" name="ref" />
        <declaration type="double" name="a" />
        <declaration type="double" name="b" />
        <declaration type="double" name="expected" />
        <declaration type="double" name="actual" />
        <declaration type="double" name="tol" />
        <declaration type="StringBuilder" name="builder" />
      </scope>
    </method>
    <method type="void" name="testLogGammaMinusLogGammaSumPrecondition1" startLine="501" endLine="503" />
    <method type="void" name="testLogGammaMinusLogGammaSumPrecondition2" startLine="506" endLine="508" />
    <declaration type="double[][]" name="SUM_DELTA_MINUS_DELTA_SUM_REF" />
    <method type="double" name="sumDeltaMinusDeltaSum" startLine="635" endLine="655">
      <scope startLine="640" endLine="643">
        <declaration type="Method" name="m" />
      </scope>
      <scope startLine="643" endLine="645" />
      <scope startLine="645" endLine="647" />
      <scope startLine="647" endLine="653">
        <declaration type="Throwable" name="te" />
        <scope startLine="649" endLine="651" />
      </scope>
      <comment>Use reflection to access private method.</comment>
    </method>
    <method type="void" name="testSumDeltaMinusDeltaSum" startLine="658" endLine="672">
      <declaration type="int" name="ulps" />
      <scope startLine="661" endLine="671">
        <declaration type="double[]" name="ref" />
        <declaration type="double" name="a" />
        <declaration type="double" name="b" />
        <declaration type="double" name="expected" />
        <declaration type="double" name="actual" />
        <declaration type="double" name="tol" />
        <declaration type="StringBuilder" name="builder" />
      </scope>
    </method>
    <method type="void" name="testSumDeltaMinusDeltaSumPrecondition1" startLine="675" endLine="678" />
    <method type="void" name="testSumDeltaMinusDeltaSumPrecondition2" startLine="681" endLine="684" />
    <declaration type="double[][]" name="LOG_BETA_REF" />
    <method type="void" name="testLogBeta" startLine="946" endLine="959">
      <declaration type="int" name="ulps" />
      <scope startLine="948" endLine="958">
        <declaration type="double[]" name="ref" />
        <declaration type="double" name="a" />
        <declaration type="double" name="b" />
        <declaration type="double" name="expected" />
        <declaration type="double" name="actual" />
        <declaration type="double" name="tol" />
        <declaration type="StringBuilder" name="builder" />
      </scope>
    </method>
    <comment>Use reflection to test private methods.</comment>
    <comment>{ 0.0 , 8.0 , 0.0 },</comment>
    <comment>{ 0.0 , 9.0 , 0.0 },</comment>
    <comment>{ 1.0 , 8.0 , - 2.079441541679836 },</comment>
    <comment>{ 1.0 , 9.0 , - 2.19722457733622 },</comment>
    <comment>{ 2.0 , 8.0 , - 4.276666119016055 },</comment>
    <comment>{ 2.0 , 9.0 , - 4.499809670330265 },</comment>
    <comment>{ 3.0 , 8.0 , - 6.579251212010101 },</comment>
    <comment>{ 3.0 , 9.0 , - 6.897704943128636 },</comment>
    <comment>{ 4.0 , 8.0 , - 8.977146484808472 },</comment>
    <comment>{ 4.0 , 9.0 , - 9.382611592916636 },</comment>
    <comment>{ 5.0 , 8.0 , - 11.46205313459647 },</comment>
    <comment>{ 5.0 , 9.0 , - 11.94756095037817 },</comment>
    <comment>{ 6.0 , 8.0 , - 14.02700249205801 },</comment>
    <comment>{ 6.0 , 9.0 , - 14.58661827999343 },</comment>
    <comment>{ 7.0 , 8.0 , - 16.66605982167327 },</comment>
    <comment>{ 7.0 , 9.0 , - 17.29466848109564 },</comment>
    <comment>{ 8.0 , 8.0 , - 19.37411002277548 },</comment>
    <comment>{ 8.0 , 9.0 , - 20.06725720333542 },</comment>
    <comment>{ 9.0 , 8.0 , - 22.14669874501526 },</comment>
    <comment>{ 9.0 , 9.0 , - 22.90047054739164 },</comment>
    <comment>{ 10.0 , 8.0 , - 24.97991208907148 },</comment>
    <comment>{ 10.0 , 9.0 , - 25.7908423052878 },</comment>
    <comment>{ 0.5 , 4.0 , - .08961215868968714 },</comment>
    <comment>{ 4.0 , 0.5 , - .08961215868968714 },</comment>
  </class>
</source>
