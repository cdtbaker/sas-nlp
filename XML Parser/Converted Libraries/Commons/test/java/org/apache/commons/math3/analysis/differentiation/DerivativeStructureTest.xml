<?xml version="1.0" encoding="UTF-8"?>
<source package="org.apache.commons.math3.analysis.differentiation">
  <import name="java.util.Arrays" />
  <import name="java.util.List" />
  <import name="org.apache.commons.math3.ExtendedFieldElementAbstractTest" />
  <import name="org.apache.commons.math3.TestUtils" />
  <import name="org.apache.commons.math3.analysis.polynomials.PolynomialFunction" />
  <import name="org.apache.commons.math3.exception.DimensionMismatchException" />
  <import name="org.apache.commons.math3.exception.NumberIsTooLargeException" />
  <import name="org.apache.commons.math3.random.Well1024a" />
  <import name="org.apache.commons.math3.util.ArithmeticUtils" />
  <import name="org.apache.commons.math3.util.FastMath" />
  <import name="org.junit.Assert" />
  <import name="org.junit.Test" />
  <class name="DerivativeStructureTest" extends="ExtendedFieldElementAbstractTest<DerivativeStructure>" startLine="34">
    <javadoc>
      <text>* Test for class {@link DerivativeStructure}.</text>
    </javadoc>
    <method type="DerivativeStructure" name="build" startLine="39" endLine="41" />
    <method type="void" name="testWrongVariableIndex" startLine="44" endLine="46" />
    <method type="void" name="testMissingOrders" startLine="49" endLine="51" />
    <method type="void" name="testTooLargeOrder" startLine="54" endLine="56" />
    <method type="void" name="testVariableWithoutDerivative0" startLine="59" endLine="62">
      <declaration type="DerivativeStructure" name="v" />
    </method>
    <method type="void" name="testVariableWithoutDerivative1" startLine="65" endLine="68">
      <declaration type="DerivativeStructure" name="v" />
    </method>
    <method type="void" name="testVariable" startLine="71" endLine="80">
      <scope startLine="72" endLine="79" />
    </method>
    <method type="void" name="testConstant" startLine="83" endLine="88">
      <scope startLine="84" endLine="87" />
    </method>
    <method type="void" name="testPrimitiveAdd" startLine="91" endLine="97">
      <scope startLine="92" endLine="96" />
    </method>
    <method type="void" name="testAdd" startLine="100" endLine="108">
      <scope startLine="101" endLine="107">
        <declaration type="DerivativeStructure" name="x" />
        <declaration type="DerivativeStructure" name="y" />
        <declaration type="DerivativeStructure" name="z" />
        <declaration type="DerivativeStructure" name="xyz" />
      </scope>
    </method>
    <method type="void" name="testPrimitiveSubtract" startLine="111" endLine="117">
      <scope startLine="112" endLine="116" />
    </method>
    <method type="void" name="testSubtract" startLine="120" endLine="128">
      <scope startLine="121" endLine="127">
        <declaration type="DerivativeStructure" name="x" />
        <declaration type="DerivativeStructure" name="y" />
        <declaration type="DerivativeStructure" name="z" />
        <declaration type="DerivativeStructure" name="xyz" />
      </scope>
    </method>
    <method type="void" name="testPrimitiveMultiply" startLine="131" endLine="137">
      <scope startLine="132" endLine="136" />
    </method>
    <method type="void" name="testMultiply" startLine="140" endLine="160">
      <scope startLine="141" endLine="159">
        <declaration type="DerivativeStructure" name="x" />
        <declaration type="DerivativeStructure" name="y" />
        <declaration type="DerivativeStructure" name="z" />
        <declaration type="DerivativeStructure" name="xyz" />
        <scope startLine="146" endLine="158">
          <scope startLine="147" endLine="157">
            <scope startLine="148" endLine="156">
              <scope startLine="149" endLine="155" />
            </scope>
          </scope>
        </scope>
      </scope>
    </method>
    <method type="void" name="testNegate" startLine="163" endLine="169">
      <scope startLine="164" endLine="168" />
    </method>
    <method type="void" name="testReciprocal" startLine="172" endLine="182">
      <scope startLine="173" endLine="181">
        <declaration type="DerivativeStructure" name="r" />
        <scope startLine="176" endLine="180">
          <declaration type="double" name="expected" />
        </scope>
      </scope>
    </method>
    <method type="void" name="testPow" startLine="185" endLine="215">
      <scope startLine="186" endLine="214">
        <scope startLine="187" endLine="213">
          <declaration type="DerivativeStructure" name="x" />
          <declaration type="DerivativeStructure" name="y" />
          <declaration type="DerivativeStructure" name="z" />
          <declaration type="List<DerivativeStructure>" name="list" />
          <scope startLine="196" endLine="200">
            <scope startLine="197" endLine="199" />
          </scope>
          <scope startLine="200" endLine="204">
            <scope startLine="201" endLine="203" />
          </scope>
          <scope startLine="204" endLine="212">
            <scope startLine="205" endLine="211">
              <declaration type="DerivativeStructure" name="p" />
              <scope startLine="207" endLine="209" />
            </scope>
          </scope>
        </scope>
      </scope>
    </method>
    <method type="void" name="testExpression" startLine="218" endLine="270">
      <declaration type="double" name="epsilon" />
      <scope startLine="220" endLine="269">
        <declaration type="DerivativeStructure" name="dsX" />
        <scope startLine="222" endLine="268">
          <declaration type="DerivativeStructure" name="dsY" />
          <scope startLine="224" endLine="266">
            <declaration type="DerivativeStructure" name="dsZ" />
            <declaration type="DerivativeStructure" name="ds" />
            <declaration type="DerivativeStructure" name="dsOther" />
            <declaration type="double" name="f" />
            <declaration type="double" name="dfdx" />
            <declaration type="double" name="dfdxdy" />
            <declaration type="double" name="dfdxdydz" />
          </scope>
        </scope>
        <comment>f(x, y, z) = x + 5 x y - 2 z + (8 z x - y)^3</comment>
        <comment>df/dx = 1 + 5 y + 24 (8 z x - y)^2 z</comment>
        <comment>df/dxdy = 5 + 48 z*(y - 8 z x)</comment>
        <comment>df/dxdydz = 48 (y - 16 z x)</comment>
      </scope>
    </method>
    <method type="void" name="testCompositionOneVariableX" startLine="273" endLine="298">
      <declaration type="double" name="epsilon" />
      <scope startLine="275" endLine="297">
        <scope startLine="276" endLine="296">
          <declaration type="DerivativeStructure" name="dsX" />
          <scope startLine="278" endLine="295">
            <declaration type="DerivativeStructure" name="dsY" />
            <declaration type="DerivativeStructure" name="f" />
            <declaration type="double" name="f0" />
            <scope startLine="283" endLine="294">
              <declaration type="double" name="f1" />
              <scope startLine="286" endLine="293">
                <declaration type="double" name="f2" />
                <scope startLine="289" endLine="292">
                  <declaration type="double" name="f3" />
                </scope>
              </scope>
            </scope>
          </scope>
        </scope>
      </scope>
    </method>
    <method type="void" name="testTrigo" startLine="301" endLine="341">
      <declaration type="double" name="epsilon" />
      <scope startLine="303" endLine="340">
        <scope startLine="304" endLine="339">
          <declaration type="DerivativeStructure" name="dsX" />
          <scope startLine="306" endLine="338">
            <declaration type="DerivativeStructure" name="dsY" />
            <scope startLine="308" endLine="337">
              <declaration type="DerivativeStructure" name="dsZ" />
              <declaration type="DerivativeStructure" name="f" />
              <declaration type="double" name="a" />
              <declaration type="double" name="f0" />
              <scope startLine="314" endLine="336">
                <declaration type="double" name="dfdx" />
                <declaration type="double" name="dfdy" />
                <declaration type="double" name="cz" />
                <declaration type="double" name="cz2" />
                <declaration type="double" name="dfdz" />
                <scope startLine="323" endLine="335">
                  <declaration type="double" name="df2dx2" />
                  <declaration type="double" name="df2dy2" />
                  <declaration type="double" name="c4" />
                  <declaration type="double" name="df2dz2" />
                  <declaration type="double" name="df2dxdy" />
                </scope>
              </scope>
            </scope>
          </scope>
        </scope>
      </scope>
    </method>
    <method type="void" name="testSqrtDefinition" startLine="344" endLine="357">
      <declaration type="double[][]" name="epsilon" />
      <scope startLine="346" endLine="356">
        <scope startLine="347" endLine="355">
          <declaration type="DerivativeStructure" name="dsX" />
          <declaration type="DerivativeStructure" name="sqrt1" />
          <declaration type="DerivativeStructure" name="sqrt2" />
          <declaration type="DerivativeStructure" name="zero" />
          <scope startLine="352" endLine="354" />
        </scope>
      </scope>
    </method>
    <method type="void" name="testRootNSingularity" startLine="360" endLine="420">
      <scope startLine="361" endLine="418">
        <scope startLine="362" endLine="416">
          <declaration type="DerivativeStructure" name="dsZero" />
          <declaration type="DerivativeStructure" name="rootN" />
          <scope startLine="366" endLine="391">
            <scope startLine="369" endLine="390" />
          </scope>
          <declaration type="double[]" name="gDerivatives" />
          <scope startLine="398" endLine="400" />
          <declaration type="DerivativeStructure" name="correctRoot" />
          <scope startLine="403" endLine="414">
            <scope startLine="406" endLine="413">
              <scope startLine="408" endLine="410" />
              <scope startLine="410" endLine="412" />
            </scope>
          </scope>
        </scope>
        <comment>the following checks shows a LIMITATION of the current implementation</comment>
        <comment>we have no way to tell dsZero is a pure linear variable x = 0</comment>
        <comment>we only say: "dsZero is a structure with value = 0.0,</comment>
        <comment>first derivative = 1.0, second and higher derivatives = 0.0".</comment>
        <comment>Function composition rule for second derivatives is:</comment>
        <comment>d2[f(g(x))]/dx2 = f''(g(x)) * [g'(x)]^2 + f'(g(x)) * g''(x)</comment>
        <comment>when function f is the nth root and x = 0 we have:</comment>
        <comment>f(0) = 0, f'(0) = +infinity, f''(0) = -infinity (and higher</comment>
        <comment>derivatives keep switching between +infinity and -infinity)</comment>
        <comment>so given that in our case dsZero represents g, we have g(x) = 0,</comment>
        <comment>g'(x) = 1 and g''(x) = 0</comment>
        <comment>applying the composition rules gives:</comment>
        <comment>d2[f(g(x))]/dx2 = f''(g(x)) * [g'(x)]^2 + f'(g(x)) * g''(x)</comment>
        <comment>= -infinity * 1^2 + +infinity * 0</comment>
        <comment>= -infinity + NaN</comment>
        <comment>= NaN</comment>
        <comment>if we knew dsZero is really the x variable and not the identity</comment>
        <comment>function applied to x, we would not have computed f'(g(x)) * g''(x)</comment>
        <comment>and we would have found that the result was -infinity and not NaN</comment>
        <comment>the following shows that the limitation explained above is NOT a bug...</comment>
        <comment>if we set up the higher order derivatives for g appropriately, we do</comment>
        <comment>compute the higher order derivatives of the composition correctly</comment>
      </scope>
    </method>
    <method type="void" name="testSqrtPow2" startLine="423" endLine="435">
      <declaration type="double[][]" name="epsilon" />
      <scope startLine="425" endLine="434">
        <scope startLine="426" endLine="433">
          <declaration type="DerivativeStructure" name="dsX" />
          <declaration type="DerivativeStructure" name="rebuiltX" />
          <declaration type="DerivativeStructure" name="zero" />
          <scope startLine="430" endLine="432" />
        </scope>
      </scope>
    </method>
    <method type="void" name="testCbrtDefinition" startLine="438" endLine="451">
      <declaration type="double[][]" name="epsilon" />
      <scope startLine="440" endLine="450">
        <scope startLine="441" endLine="449">
          <declaration type="DerivativeStructure" name="dsX" />
          <declaration type="DerivativeStructure" name="cbrt1" />
          <declaration type="DerivativeStructure" name="cbrt2" />
          <declaration type="DerivativeStructure" name="zero" />
          <scope startLine="446" endLine="448" />
        </scope>
      </scope>
    </method>
    <method type="void" name="testCbrtPow3" startLine="454" endLine="466">
      <declaration type="double[][]" name="epsilon" />
      <scope startLine="456" endLine="465">
        <scope startLine="457" endLine="464">
          <declaration type="DerivativeStructure" name="dsX" />
          <declaration type="DerivativeStructure" name="rebuiltX" />
          <declaration type="DerivativeStructure" name="zero" />
          <scope startLine="461" endLine="463" />
        </scope>
      </scope>
    </method>
    <method type="void" name="testPowReciprocalPow" startLine="469" endLine="488">
      <declaration type="double[][]" name="epsilon" />
      <scope startLine="471" endLine="487">
        <scope startLine="472" endLine="486">
          <declaration type="DerivativeStructure" name="dsX" />
          <scope startLine="474" endLine="485">
            <declaration type="DerivativeStructure" name="dsY" />
            <declaration type="DerivativeStructure" name="rebuiltX" />
            <declaration type="DerivativeStructure" name="zero" />
            <scope startLine="478" endLine="484">
              <scope startLine="479" endLine="483">
                <scope startLine="480" endLine="482" />
              </scope>
            </scope>
          </scope>
        </scope>
      </scope>
    </method>
    <method type="void" name="testHypotDefinition" startLine="491" endLine="511">
      <declaration type="double" name="epsilon" />
      <scope startLine="493" endLine="510">
        <scope startLine="494" endLine="509">
          <declaration type="DerivativeStructure" name="dsX" />
          <scope startLine="496" endLine="508">
            <declaration type="DerivativeStructure" name="dsY" />
            <declaration type="DerivativeStructure" name="hypot" />
            <declaration type="DerivativeStructure" name="ref" />
            <declaration type="DerivativeStructure" name="zero" />
            <scope startLine="501" endLine="507">
              <scope startLine="502" endLine="506">
                <scope startLine="503" endLine="505" />
              </scope>
            </scope>
          </scope>
        </scope>
      </scope>
    </method>
    <method type="void" name="testHypotNoOverflow" startLine="514" endLine="526">
      <declaration type="DerivativeStructure" name="dsX" />
      <declaration type="DerivativeStructure" name="dsY" />
      <declaration type="DerivativeStructure" name="hypot" />
      <declaration type="DerivativeStructure" name="sqrt" />
    </method>
    <method type="void" name="testHypotNeglectible" startLine="529" endLine="554">
      <declaration type="DerivativeStructure" name="dsSmall" />
      <declaration type="DerivativeStructure" name="dsLarge" />
    </method>
    <method type="void" name="testHypotSpecial" startLine="557" endLine="566" />
    <method type="void" name="testPrimitiveRemainder" startLine="569" endLine="588">
      <declaration type="double" name="epsilon" />
      <scope startLine="571" endLine="587">
        <scope startLine="572" endLine="586">
          <declaration type="DerivativeStructure" name="dsX" />
          <scope startLine="574" endLine="585">
            <declaration type="DerivativeStructure" name="remainder" />
            <declaration type="DerivativeStructure" name="ref" />
            <declaration type="DerivativeStructure" name="zero" />
            <scope startLine="578" endLine="584">
              <scope startLine="579" endLine="583">
                <scope startLine="580" endLine="582" />
              </scope>
            </scope>
          </scope>
        </scope>
      </scope>
    </method>
    <method type="void" name="testRemainder" startLine="591" endLine="611">
      <declaration type="double" name="epsilon" />
      <scope startLine="593" endLine="610">
        <scope startLine="594" endLine="609">
          <declaration type="DerivativeStructure" name="dsX" />
          <scope startLine="596" endLine="608">
            <declaration type="DerivativeStructure" name="dsY" />
            <declaration type="DerivativeStructure" name="remainder" />
            <declaration type="DerivativeStructure" name="ref" />
            <declaration type="DerivativeStructure" name="zero" />
            <scope startLine="601" endLine="607">
              <scope startLine="602" endLine="606">
                <scope startLine="603" endLine="605" />
              </scope>
            </scope>
          </scope>
        </scope>
      </scope>
    </method>
    <method type="void" name="testExp" startLine="614" endLine="625">
      <declaration type="double[][]" name="epsilon" />
      <scope startLine="616" endLine="624">
        <scope startLine="617" endLine="623">
          <declaration type="double" name="refExp" />
          <declaration type="DerivativeStructure" name="exp" />
          <scope startLine="620" endLine="622" />
        </scope>
      </scope>
    </method>
    <method type="void" name="testExpm1Definition" startLine="628" endLine="641">
      <declaration type="double" name="epsilon" />
      <scope startLine="630" endLine="640">
        <scope startLine="631" endLine="639">
          <declaration type="DerivativeStructure" name="dsX" />
          <declaration type="DerivativeStructure" name="expm11" />
          <declaration type="DerivativeStructure" name="expm12" />
          <declaration type="DerivativeStructure" name="zero" />
          <scope startLine="636" endLine="638" />
        </scope>
      </scope>
    </method>
    <method type="void" name="testLog" startLine="644" endLine="656">
      <declaration type="double[][]" name="epsilon" />
      <scope startLine="646" endLine="655">
        <scope startLine="647" endLine="654">
          <declaration type="DerivativeStructure" name="log" />
          <scope startLine="650" endLine="653">
            <declaration type="double" name="refDer" />
          </scope>
        </scope>
      </scope>
    </method>
    <method type="void" name="testLog1pDefinition" startLine="659" endLine="672">
      <declaration type="double" name="epsilon" />
      <scope startLine="661" endLine="671">
        <scope startLine="662" endLine="670">
          <declaration type="DerivativeStructure" name="dsX" />
          <declaration type="DerivativeStructure" name="log1p1" />
          <declaration type="DerivativeStructure" name="log1p2" />
          <declaration type="DerivativeStructure" name="zero" />
          <scope startLine="667" endLine="669" />
        </scope>
      </scope>
    </method>
    <method type="void" name="testLog10Definition" startLine="675" endLine="688">
      <declaration type="double[][]" name="epsilon" />
      <scope startLine="677" endLine="687">
        <scope startLine="678" endLine="686">
          <declaration type="DerivativeStructure" name="dsX" />
          <declaration type="DerivativeStructure" name="log101" />
          <declaration type="DerivativeStructure" name="log102" />
          <declaration type="DerivativeStructure" name="zero" />
          <scope startLine="683" endLine="685" />
        </scope>
      </scope>
    </method>
    <method type="void" name="testLogExp" startLine="691" endLine="703">
      <declaration type="double[][]" name="epsilon" />
      <scope startLine="693" endLine="702">
        <scope startLine="694" endLine="701">
          <declaration type="DerivativeStructure" name="dsX" />
          <declaration type="DerivativeStructure" name="rebuiltX" />
          <declaration type="DerivativeStructure" name="zero" />
          <scope startLine="698" endLine="700" />
        </scope>
      </scope>
    </method>
    <method type="void" name="testLog1pExpm1" startLine="706" endLine="718">
      <declaration type="double[][]" name="epsilon" />
      <scope startLine="708" endLine="717">
        <scope startLine="709" endLine="716">
          <declaration type="DerivativeStructure" name="dsX" />
          <declaration type="DerivativeStructure" name="rebuiltX" />
          <declaration type="DerivativeStructure" name="zero" />
          <scope startLine="713" endLine="715" />
        </scope>
      </scope>
    </method>
    <method type="void" name="testLog10Power" startLine="721" endLine="733">
      <declaration type="double[][]" name="epsilon" />
      <scope startLine="723" endLine="732">
        <scope startLine="724" endLine="731">
          <declaration type="DerivativeStructure" name="dsX" />
          <declaration type="DerivativeStructure" name="rebuiltX" />
          <declaration type="DerivativeStructure" name="zero" />
          <scope startLine="728" endLine="730" />
        </scope>
      </scope>
    </method>
    <method type="void" name="testSinCos" startLine="736" endLine="767">
      <declaration type="double" name="epsilon" />
      <scope startLine="738" endLine="766">
        <scope startLine="739" endLine="765">
          <declaration type="DerivativeStructure" name="dsX" />
          <declaration type="DerivativeStructure" name="sin" />
          <declaration type="DerivativeStructure" name="cos" />
          <declaration type="double" name="s" />
          <declaration type="double" name="c" />
          <scope startLine="745" endLine="764" />
        </scope>
      </scope>
    </method>
    <method type="void" name="testSinAsin" startLine="770" endLine="782">
      <declaration type="double[][]" name="epsilon" />
      <scope startLine="772" endLine="781">
        <scope startLine="773" endLine="780">
          <declaration type="DerivativeStructure" name="dsX" />
          <declaration type="DerivativeStructure" name="rebuiltX" />
          <declaration type="DerivativeStructure" name="zero" />
          <scope startLine="777" endLine="779" />
        </scope>
      </scope>
    </method>
    <method type="void" name="testCosAcos" startLine="785" endLine="797">
      <declaration type="double[][]" name="epsilon" />
      <scope startLine="787" endLine="796">
        <scope startLine="788" endLine="795">
          <declaration type="DerivativeStructure" name="dsX" />
          <declaration type="DerivativeStructure" name="rebuiltX" />
          <declaration type="DerivativeStructure" name="zero" />
          <scope startLine="792" endLine="794" />
        </scope>
      </scope>
    </method>
    <method type="void" name="testTanAtan" startLine="800" endLine="812">
      <declaration type="double[][]" name="epsilon" />
      <scope startLine="802" endLine="811">
        <scope startLine="803" endLine="810">
          <declaration type="DerivativeStructure" name="dsX" />
          <declaration type="DerivativeStructure" name="rebuiltX" />
          <declaration type="DerivativeStructure" name="zero" />
          <scope startLine="807" endLine="809" />
        </scope>
      </scope>
    </method>
    <method type="void" name="testTangentDefinition" startLine="815" endLine="828">
      <declaration type="double[][]" name="epsilon" />
      <scope startLine="817" endLine="827">
        <scope startLine="818" endLine="826">
          <declaration type="DerivativeStructure" name="dsX" />
          <declaration type="DerivativeStructure" name="tan1" />
          <declaration type="DerivativeStructure" name="tan2" />
          <declaration type="DerivativeStructure" name="zero" />
          <scope startLine="823" endLine="825" />
        </scope>
      </scope>
    </method>
    <method type="void" name="testAtan2" startLine="831" endLine="854">
      <declaration type="double[][]" name="epsilon" />
      <scope startLine="833" endLine="853">
        <scope startLine="834" endLine="852">
          <declaration type="DerivativeStructure" name="dsX" />
          <scope startLine="836" endLine="851">
            <declaration type="DerivativeStructure" name="dsY" />
            <declaration type="DerivativeStructure" name="atan2" />
            <declaration type="DerivativeStructure" name="ref" />
            <scope startLine="840" endLine="842" />
            <declaration type="DerivativeStructure" name="zero" />
            <scope startLine="844" endLine="850">
              <scope startLine="845" endLine="849">
                <scope startLine="846" endLine="848" />
              </scope>
            </scope>
          </scope>
        </scope>
      </scope>
    </method>
    <method type="void" name="testAtan2SpecialCases" startLine="857" endLine="881">
      <declaration type="DerivativeStructure" name="pp" />
      <declaration type="DerivativeStructure" name="pn" />
      <declaration type="DerivativeStructure" name="np" />
      <declaration type="DerivativeStructure" name="nn" />
    </method>
    <method type="void" name="testSinhDefinition" startLine="884" endLine="897">
      <declaration type="double[][]" name="epsilon" />
      <scope startLine="886" endLine="896">
        <scope startLine="887" endLine="895">
          <declaration type="DerivativeStructure" name="dsX" />
          <declaration type="DerivativeStructure" name="sinh1" />
          <declaration type="DerivativeStructure" name="sinh2" />
          <declaration type="DerivativeStructure" name="zero" />
          <scope startLine="892" endLine="894" />
        </scope>
      </scope>
    </method>
    <method type="void" name="testCoshDefinition" startLine="900" endLine="913">
      <declaration type="double[][]" name="epsilon" />
      <scope startLine="902" endLine="912">
        <scope startLine="903" endLine="911">
          <declaration type="DerivativeStructure" name="dsX" />
          <declaration type="DerivativeStructure" name="cosh1" />
          <declaration type="DerivativeStructure" name="cosh2" />
          <declaration type="DerivativeStructure" name="zero" />
          <scope startLine="908" endLine="910" />
        </scope>
      </scope>
    </method>
    <method type="void" name="testTanhDefinition" startLine="916" endLine="929">
      <declaration type="double[][]" name="epsilon" />
      <scope startLine="918" endLine="928">
        <scope startLine="919" endLine="927">
          <declaration type="DerivativeStructure" name="dsX" />
          <declaration type="DerivativeStructure" name="tanh1" />
          <declaration type="DerivativeStructure" name="tanh2" />
          <declaration type="DerivativeStructure" name="zero" />
          <scope startLine="924" endLine="926" />
        </scope>
      </scope>
    </method>
    <method type="void" name="testSinhAsinh" startLine="932" endLine="944">
      <declaration type="double[][]" name="epsilon" />
      <scope startLine="934" endLine="943">
        <scope startLine="935" endLine="942">
          <declaration type="DerivativeStructure" name="dsX" />
          <declaration type="DerivativeStructure" name="rebuiltX" />
          <declaration type="DerivativeStructure" name="zero" />
          <scope startLine="939" endLine="941" />
        </scope>
      </scope>
    </method>
    <method type="void" name="testCoshAcosh" startLine="947" endLine="959">
      <declaration type="double[][]" name="epsilon" />
      <scope startLine="949" endLine="958">
        <scope startLine="950" endLine="957">
          <declaration type="DerivativeStructure" name="dsX" />
          <declaration type="DerivativeStructure" name="rebuiltX" />
          <declaration type="DerivativeStructure" name="zero" />
          <scope startLine="954" endLine="956" />
        </scope>
      </scope>
    </method>
    <method type="void" name="testTanhAtanh" startLine="962" endLine="974">
      <declaration type="double[][]" name="epsilon" />
      <scope startLine="964" endLine="973">
        <scope startLine="965" endLine="972">
          <declaration type="DerivativeStructure" name="dsX" />
          <declaration type="DerivativeStructure" name="rebuiltX" />
          <declaration type="DerivativeStructure" name="zero" />
          <scope startLine="969" endLine="971" />
        </scope>
      </scope>
    </method>
    <method type="void" name="testCompositionOneVariableY" startLine="977" endLine="1002">
      <declaration type="double" name="epsilon" />
      <scope startLine="979" endLine="1001">
        <scope startLine="980" endLine="1000">
          <declaration type="DerivativeStructure" name="dsX" />
          <scope startLine="982" endLine="999">
            <declaration type="DerivativeStructure" name="dsY" />
            <declaration type="DerivativeStructure" name="f" />
            <declaration type="double" name="f0" />
            <scope startLine="987" endLine="998">
              <declaration type="double" name="f1" />
              <scope startLine="990" endLine="997">
                <declaration type="double" name="f2" />
                <scope startLine="993" endLine="996">
                  <declaration type="double" name="f3" />
                </scope>
              </scope>
            </scope>
          </scope>
        </scope>
      </scope>
    </method>
    <method type="void" name="testTaylorPolynomial" startLine="1005" endLine="1024">
      <scope startLine="1006" endLine="1023">
        <declaration type="DerivativeStructure" name="dsX" />
        <scope startLine="1008" endLine="1022">
          <declaration type="DerivativeStructure" name="dsY" />
          <scope startLine="1010" endLine="1021">
            <declaration type="DerivativeStructure" name="dsZ" />
            <declaration type="DerivativeStructure" name="f" />
            <scope startLine="1013" endLine="1020">
              <scope startLine="1014" endLine="1019">
                <scope startLine="1015" endLine="1018">
                  <declaration type="double" name="ref" />
                </scope>
              </scope>
            </scope>
          </scope>
        </scope>
      </scope>
    </method>
    <method type="void" name="testTaylorAtan2" startLine="1027" endLine="1044">
      <declaration type="double[][]" name="expected" />
      <declaration type="double" name="x0" />
      <declaration type="double" name="y0" />
      <scope startLine="1031" endLine="1043">
        <declaration type="DerivativeStructure" name="dsX" />
        <declaration type="DerivativeStructure" name="dsY" />
        <declaration type="DerivativeStructure" name="atan2" />
        <declaration type="double" name="maxError" />
        <scope startLine="1036" endLine="1041">
          <scope startLine="1037" endLine="1040">
            <declaration type="double" name="ref" />
          </scope>
        </scope>
      </scope>
    </method>
    <method type="void" name="testAbs" startLine="1047" endLine="1065">
      <declaration type="DerivativeStructure" name="minusOne" />
      <declaration type="DerivativeStructure" name="plusOne" />
      <declaration type="DerivativeStructure" name="minusZero" />
      <declaration type="DerivativeStructure" name="plusZero" />
    </method>
    <method type="void" name="testSignum" startLine="1068" endLine="1088">
      <declaration type="DerivativeStructure" name="minusOne" />
      <declaration type="DerivativeStructure" name="plusOne" />
      <declaration type="DerivativeStructure" name="minusZero" />
      <declaration type="DerivativeStructure" name="plusZero" />
    </method>
    <method type="void" name="testCeilFloorRintLong" startLine="1091" endLine="1105">
      <declaration type="DerivativeStructure" name="x" />
    </method>
    <method type="void" name="testCopySign" startLine="1108" endLine="1134">
      <declaration type="DerivativeStructure" name="minusOne" />
      <declaration type="DerivativeStructure" name="plusOne" />
    </method>
    <method type="void" name="testToDegreesDefinition" startLine="1137" endLine="1152">
      <declaration type="double" name="epsilon" />
      <scope startLine="1139" endLine="1151">
        <scope startLine="1140" endLine="1150">
          <declaration type="DerivativeStructure" name="dsX" />
          <scope startLine="1143" endLine="1149">
            <scope startLine="1144" endLine="1146" />
            <scope startLine="1146" endLine="1148" />
          </scope>
        </scope>
      </scope>
    </method>
    <method type="void" name="testToRadiansDefinition" startLine="1155" endLine="1170">
      <declaration type="double" name="epsilon" />
      <scope startLine="1157" endLine="1169">
        <scope startLine="1158" endLine="1168">
          <declaration type="DerivativeStructure" name="dsX" />
          <scope startLine="1161" endLine="1167">
            <scope startLine="1162" endLine="1164" />
            <scope startLine="1164" endLine="1166" />
          </scope>
        </scope>
      </scope>
    </method>
    <method type="void" name="testDegRad" startLine="1173" endLine="1185">
      <declaration type="double" name="epsilon" />
      <scope startLine="1175" endLine="1184">
        <scope startLine="1176" endLine="1183">
          <declaration type="DerivativeStructure" name="dsX" />
          <declaration type="DerivativeStructure" name="rebuiltX" />
          <declaration type="DerivativeStructure" name="zero" />
          <scope startLine="1180" endLine="1182" />
        </scope>
      </scope>
    </method>
    <method type="void" name="testComposeMismatchedDimensions" startLine="1188" endLine="1190" />
    <method type="void" name="testCompose" startLine="1193" endLine="1220">
      <declaration type="double[][]" name="epsilon" />
      <declaration type="PolynomialFunction[]" name="poly" />
      <scope startLine="1197" endLine="1219">
        <declaration type="PolynomialFunction[]" name="p" />
        <scope startLine="1200" endLine="1202" />
        <scope startLine="1203" endLine="1218">
          <declaration type="DerivativeStructure" name="dsX" />
          <declaration type="DerivativeStructure" name="dsY1" />
          <scope startLine="1206" endLine="1208" />
          <declaration type="double[]" name="f" />
          <scope startLine="1210" endLine="1212" />
          <declaration type="DerivativeStructure" name="dsY2" />
          <declaration type="DerivativeStructure" name="zero" />
          <scope startLine="1215" endLine="1217" />
        </scope>
      </scope>
    </method>
    <method type="void" name="testField" startLine="1223" endLine="1232">
      <scope startLine="1224" endLine="1231">
        <declaration type="DerivativeStructure" name="x" />
      </scope>
    </method>
    <method type="void" name="testOneParameterConstructor" startLine="1235" endLine="1252">
      <declaration type="double" name="x" />
      <declaration type="double" name="cos" />
      <declaration type="double" name="sin" />
      <declaration type="DerivativeStructure" name="yRef" />
      <scope startLine="1240" endLine="1243" />
      <scope startLine="1243" endLine="1245">
        <comment>expected</comment>
      </scope>
      <scope startLine="1245" endLine="1247" />
      <declaration type="double[][]" name="derivatives" />
      <declaration type="DerivativeStructure" name="y" />
    </method>
    <method type="void" name="testOneOrderConstructor" startLine="1255" endLine="1274">
      <declaration type="double" name="x" />
      <declaration type="double" name="y" />
      <declaration type="double" name="z" />
      <declaration type="DerivativeStructure" name="xRef" />
      <declaration type="DerivativeStructure" name="yRef" />
      <declaration type="DerivativeStructure" name="zRef" />
      <scope startLine="1262" endLine="1265" />
      <scope startLine="1265" endLine="1267">
        <comment>expected</comment>
      </scope>
      <scope startLine="1267" endLine="1269" />
      <declaration type="double[][]" name="derivatives" />
      <declaration type="DerivativeStructure" name="t" />
    </method>
    <method type="void" name="testLinearCombination1DSDS" startLine="1277" endLine="1301">
      <declaration type="DerivativeStructure[][]" name="a" />
      <declaration type="DerivativeStructure[][]" name="b" />
      <declaration type="DerivativeStructure" name="abSumInline" />
      <declaration type="DerivativeStructure" name="abSumArray" />
    </method>
    <method type="void" name="testLinearCombination1DoubleDS" startLine="1304" endLine="1327">
      <declaration type="double[][]" name="a" />
      <declaration type="DerivativeStructure[][]" name="b" />
      <declaration type="DerivativeStructure" name="abSumInline" />
      <declaration type="DerivativeStructure" name="abSumArray" />
    </method>
    <method type="void" name="testLinearCombination2DSDS" startLine="1330" endLine="1371">
      <declaration type="Well1024a" name="random" />
      <scope startLine="1335" endLine="1370">
        <declaration type="DerivativeStructure[]" name="u" />
        <declaration type="DerivativeStructure[]" name="v" />
        <scope startLine="1338" endLine="1341" />
        <declaration type="DerivativeStructure" name="lin" />
        <declaration type="double" name="ref" />
      </scope>
      <comment>we compare accurate versus naive dot product implementations</comment>
      <comment>on regular vectors (i.e. not extreme cases like in the previous test)</comment>
    </method>
    <method type="void" name="testLinearCombination2DoubleDS" startLine="1374" endLine="1415">
      <declaration type="Well1024a" name="random" />
      <scope startLine="1379" endLine="1414">
        <declaration type="double[]" name="u" />
        <declaration type="DerivativeStructure[]" name="v" />
        <scope startLine="1382" endLine="1385" />
        <declaration type="DerivativeStructure" name="lin" />
        <declaration type="double" name="ref" />
      </scope>
      <comment>we compare accurate versus naive dot product implementations</comment>
      <comment>on regular vectors (i.e. not extreme cases like in the previous test)</comment>
    </method>
    <method type="void" name="testSerialization" startLine="1418" endLine="1424">
      <declaration type="DerivativeStructure" name="a" />
      <declaration type="DerivativeStructure" name="b" />
    </method>
    <method type="void" name="checkF0F1" startLine="1426" endLine="1442">
      <scope startLine="1436" endLine="1440">
        <declaration type="int[]" name="orders" />
      </scope>
      <comment>check dimension</comment>
      <comment>check value, directly and also as 0th order derivative</comment>
      <comment>check first order derivatives</comment>
    </method>
    <method type="void" name="checkEquals" startLine="1444" endLine="1479">
      <declaration type="int[]" name="derivatives" />
      <declaration type="int" name="sum" />
      <scope startLine="1452" endLine="1477">
        <scope startLine="1454" endLine="1458" />
        <declaration type="boolean" name="increment" />
        <scope startLine="1462" endLine="1472">
          <scope startLine="1463" endLine="1470">
            <scope startLine="1464" endLine="1466" />
            <scope startLine="1466" endLine="1469" />
          </scope>
        </scope>
        <scope startLine="1473" endLine="1475" />
      </scope>
      <comment>check dimension</comment>
    </method>
  </class>
</source>
