<?xml version="1.0" encoding="UTF-8"?>
<source package="org.apache.commons.math3.analysis.polynomials">
  <import name="java.util.Arrays" />
  <import name="org.apache.commons.math3.exception.OutOfRangeException" />
  <import name="org.apache.commons.math3.analysis.UnivariateFunction" />
  <import name="org.apache.commons.math3.exception.MathIllegalArgumentException" />
  <import name="org.apache.commons.math3.exception.MathIllegalStateException" />
  <import name="org.junit.Assert" />
  <import name="org.junit.Test" />
  <class name="PolynomialSplineFunctionTest" startLine="28">
    <javadoc>
      <text>* Tests the PolynomialSplineFunction implementation.</text>
      <version>$Id: PolynomialSplineFunctionTest.java 1364030 2012-07-21 01:10:04Z erans $</version>
    </javadoc>
    <javadoc>
      <text>* Error tolerance for tests</text>
    </javadoc>
    <declaration type="double" name="tolerance" />
    <javadoc>
      <text>* Quadratic polynomials used in tests:
 * x^2 + x            [-1, 0)
 * x^2 + x + 2        [0, 1)
 * x^2 + x + 4        [1, 2)
 * Defined so that evaluation using PolynomialSplineFunction evaluation
 * algorithm agrees at knot point boundaries.</text>
    </javadoc>
    <declaration type="PolynomialFunction[]" name="polynomials" />
    <javadoc>
      <text>* Knot points</text>
    </javadoc>
    <declaration type="double[]" name="knots" />
    <javadoc>
      <text>* Derivative of test polynomials -- 2x + 1</text>
    </javadoc>
    <declaration type="PolynomialFunction" name="dp" />
    <method type="void" name="testConstructor" startLine="63" endLine="90">
      <declaration type="PolynomialSplineFunction" name="spline" />
      <scope startLine="70" endLine="73">
        <comment>too few knots</comment>
      </scope>
      <scope startLine="73" endLine="75">
        <comment>expected</comment>
      </scope>
      <scope startLine="77" endLine="80">
        <comment>too many knots</comment>
      </scope>
      <scope startLine="80" endLine="82">
        <comment>expected</comment>
      </scope>
      <scope startLine="84" endLine="87">
        <comment>knots not increasing</comment>
      </scope>
      <scope startLine="87" endLine="89">
        <comment>expected</comment>
      </scope>
    </method>
    <method type="void" name="testValues" startLine="93" endLine="135">
      <declaration type="PolynomialSplineFunction" name="spline" />
      <declaration type="UnivariateFunction" name="dSpline" />
      <declaration type="double" name="x" />
      <declaration type="int" name="index" />
      <scope startLine="105" endLine="112" />
      <scope startLine="115" endLine="120" />
      <scope startLine="122" endLine="125">
        <comment>outside of domain -- under min</comment>
      </scope>
      <scope startLine="125" endLine="127">
        <comment>expected</comment>
      </scope>
      <scope startLine="129" endLine="132">
        <comment>outside of domain -- over max</comment>
      </scope>
      <scope startLine="132" endLine="134">
        <comment>expected</comment>
      </scope>
      <javadoc>
        <text>* interior points -- spline value at x should equal p(x - knot)
 * where knot is the largest knot point less than or equal to x and p
 * is the polynomial defined over the knot segment to which x belongs.</text>
      </javadoc>
      <comment>knot points -- centering should zero arguments</comment>
    </method>
    <javadoc>
      <text>* Do linear search to find largest knot point less than or equal to x.
 * Implementation does binary search.</text>
    </javadoc>
    <method type="int" name="findKnot" startLine="141" endLine="151">
      <scope startLine="142" endLine="144" />
      <scope startLine="145" endLine="149">
        <scope startLine="146" endLine="148" />
      </scope>
    </method>
  </class>
</source>
