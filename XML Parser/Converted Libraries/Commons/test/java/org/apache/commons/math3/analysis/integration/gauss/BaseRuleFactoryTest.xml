<?xml version="1.0" encoding="UTF-8"?>
<source package="org.apache.commons.math3.analysis.integration.gauss">
  <import name="java.util.List" />
  <import name="java.util.ArrayList" />
  <import name="java.util.concurrent.ThreadPoolExecutor" />
  <import name="java.util.concurrent.ArrayBlockingQueue" />
  <import name="java.util.concurrent.TimeUnit" />
  <import name="java.util.concurrent.Callable" />
  <import name="java.util.concurrent.Future" />
  <import name="java.util.concurrent.ExecutionException" />
  <import name="java.util.concurrent.atomic.AtomicInteger" />
  <import name="org.apache.commons.math3.util.Pair" />
  <import name="org.junit.Test" />
  <import name="org.junit.Assert" />
  <class name="BaseRuleFactoryTest" startLine="32">
    <javadoc>
      <text>* Test for {@link BaseRuleFactory}.</text>
      <version>$Id$</version>
    </javadoc>
    <javadoc>
      <text>* Tests that a given rule rule will be computed and added once to the cache
 * whatever the number of times this rule is called concurrently.</text>
    </javadoc>
    <method type="void" name="testConcurrentCreation" startLine="44" endLine="66">
      <declaration type="int" name="numTasks" />
      <declaration type="ThreadPoolExecutor" name="exec" />
      <declaration type="List<Future<Pair<double[],double[]>>>[]" name="results" />
      <scope startLine="54" endLine="56" />
      <scope startLine="59" endLine="61" />
      <declaration type="int" name="n" />
      <comment>Number of times the same rule will be called.</comment>
      <comment>Ensure that all computations have completed.</comment>
      <comment>Assertion would fail if "getRuleInternal" were not "synchronized".</comment>
    </method>
    <class name="RuleBuilder" startLine="69">
      <implements name="Callable<Pair<double[],double[]>>" />
      <declaration type="DummyRuleFactory" name="factory" />
      <method type="Pair<double[],double[]>" name="call" startLine="72" endLine="75">
        <declaration type="int" name="dummy" />
        <comment>Always request the same rule.</comment>
      </method>
      <method type="int" name="getNumberOfCalls" startLine="77" endLine="79" />
      <class name="DummyRuleFactory" extends="BaseRuleFactory<Double>" startLine="82">
        <javadoc>
          <text>* Rule computations counter.</text>
        </javadoc>
        <declaration type="AtomicInteger" name="nCalls" />
        <method type="Pair<Double[],Double[]>" name="computeRule" startLine="87" endLine="106">
          <scope startLine="91" endLine="94">
            <comment>Sleep to simulate computation time.</comment>
          </scope>
          <scope startLine="94" endLine="96" />
          <declaration type="Double[]" name="p" />
          <declaration type="Double[]" name="w" />
          <scope startLine="101" endLine="104" />
          <comment>Tracks whether this computation has been called more than once.</comment>
          <comment>Dummy rule (but contents must exist).</comment>
        </method>
        <method type="int" name="getNumberOfCalls" startLine="108" endLine="110" />
      </class>
    </class>
  </class>
</source>
