<?xml version="1.0" encoding="UTF-8"?>
<source package="org.apache.commons.math3.ode.sampling">
  <import name="static org.junit.Assert.assertArrayEquals" />
  <import name="java.util.ArrayList" />
  <import name="java.util.List" />
  <import name="org.apache.commons.math3.exception.DimensionMismatchException" />
  <import name="org.apache.commons.math3.exception.MaxCountExceededException" />
  <import name="org.apache.commons.math3.exception.NoBracketingException" />
  <import name="org.apache.commons.math3.exception.NumberIsTooSmallException" />
  <import name="org.apache.commons.math3.ode.FirstOrderDifferentialEquations" />
  <import name="org.apache.commons.math3.ode.FirstOrderIntegrator" />
  <import name="org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator" />
  <import name="org.junit.Test" />
  <class name="StepNormalizerOutputTestBase" startLine="34">
    <implements name="FirstOrderDifferentialEquations" />
    <implements name="FixedStepHandler" />
    <javadoc>
      <text>* Base class for step normalizer output tests.</text>
    </javadoc>
    <javadoc>
      <text>* The normalized output time values.</text>
    </javadoc>
    <declaration type="List<Double>" name="output" />
    <method name="getStart" type="double" startLine="41" endLine="45" />
    <javadoc>
      <text>* Returns the start time.</text>
      <return>the start time</return>
    </javadoc>
    <method name="getEnd" type="double" startLine="47" endLine="51" />
    <javadoc>
      <text>* Returns the end time.</text>
      <return>the end time</return>
    </javadoc>
    <method name="getExpInc" type="double[]" startLine="53" endLine="57" />
    <javadoc>
      <text>* Returns the expected normalized output time values for increment mode.</text>
      <return>the expected normalized output time values for increment mode</return>
    </javadoc>
    <method name="getExpIncRev" type="double[]" startLine="59" endLine="65" />
    <javadoc>
      <text>* Returns the expected reversed normalized output time values for
 * increment mode.</text>
      <return>the expected reversed normalized output time values for
 * increment mode</return>
    </javadoc>
    <method name="getExpMul" type="double[]" startLine="67" endLine="71" />
    <javadoc>
      <text>* Returns the expected normalized output time values for multiples mode.</text>
      <return>the expected normalized output time values for multiples mode</return>
    </javadoc>
    <method name="getExpMulRev" type="double[]" startLine="73" endLine="79" />
    <javadoc>
      <text>* Returns the expected reversed normalized output time values for
 * multiples mode.</text>
      <return>the expected reversed normalized output time values for
 * multiples mode</return>
    </javadoc>
    <method name="getO" type="int[][]" startLine="81" endLine="87" />
    <javadoc>
      <text>* Returns the offsets for the unit tests below, in the order they are
 * given below. For each test, the left and right offsets are returned.</text>
      <return>the offsets for the unit tests below, in the order they are
 * given below</return>
    </javadoc>
    <javadoc>
      <text>* Get the array, given left and right offsets.</text>
      <param>a the input array</param>
      <param>offsetL the left side offset</param>
      <param>offsetR the right side offset</param>
      <return>the modified array</return>
    </javadoc>
    <method type="double[]" name="getArray" startLine="96" endLine="100">
      <declaration type="double[]" name="copy" />
    </method>
    <method type="void" name="testIncNeither" startLine="105" endLine="108">
      <declaration type="double[]" name="exp" />
    </method>
    <method type="void" name="testIncNeitherRev" startLine="113" endLine="116">
      <declaration type="double[]" name="exp" />
    </method>
    <method type="void" name="testIncFirst" startLine="121" endLine="124">
      <declaration type="double[]" name="exp" />
    </method>
    <method type="void" name="testIncFirstRev" startLine="129" endLine="132">
      <declaration type="double[]" name="exp" />
    </method>
    <method type="void" name="testIncLast" startLine="137" endLine="140">
      <declaration type="double[]" name="exp" />
    </method>
    <method type="void" name="testIncLastRev" startLine="145" endLine="148">
      <declaration type="double[]" name="exp" />
    </method>
    <method type="void" name="testIncBoth" startLine="153" endLine="156">
      <declaration type="double[]" name="exp" />
    </method>
    <method type="void" name="testIncBothRev" startLine="161" endLine="164">
      <declaration type="double[]" name="exp" />
    </method>
    <method type="void" name="testMulNeither" startLine="169" endLine="172">
      <declaration type="double[]" name="exp" />
    </method>
    <method type="void" name="testMulNeitherRev" startLine="177" endLine="180">
      <declaration type="double[]" name="exp" />
    </method>
    <method type="void" name="testMulFirst" startLine="185" endLine="188">
      <declaration type="double[]" name="exp" />
    </method>
    <method type="void" name="testMulFirstRev" startLine="193" endLine="196">
      <declaration type="double[]" name="exp" />
    </method>
    <method type="void" name="testMulLast" startLine="201" endLine="204">
      <declaration type="double[]" name="exp" />
    </method>
    <method type="void" name="testMulLastRev" startLine="209" endLine="212">
      <declaration type="double[]" name="exp" />
    </method>
    <method type="void" name="testMulBoth" startLine="217" endLine="220">
      <declaration type="double[]" name="exp" />
    </method>
    <method type="void" name="testMulBothRev" startLine="225" endLine="228">
      <declaration type="double[]" name="exp" />
    </method>
    <javadoc>
      <text>* The actual step normalizer output test code, shared by all the unit
 * tests.</text>
      <param>mode the step normalizer mode to use</param>
      <param>bounds the step normalizer bounds setting to use</param>
      <param>expected the expected output (normalized time points)</param>
      <param>reverse whether to reverse the integration direction</param>
      <throws>NoBracketingException</throws>
      <throws>MaxCountExceededException</throws>
      <throws>NumberIsTooSmallException</throws>
      <throws>DimensionMismatchException</throws>
    </javadoc>
    <method type="void" name="doTest" startLine="246" endLine="261">
      <declaration type="FirstOrderIntegrator" name="integ" />
      <declaration type="double[]" name="y" />
      <declaration type="double" name="start" />
      <declaration type="double" name="end" />
      <declaration type="double[]" name="actual" />
      <scope startLine="257" endLine="259" />
      <comment>Forward test.</comment>
    </method>
    <javadoc>
      <text>* {@inheritDoc}</text>
    </javadoc>
    <method type="int" name="getDimension" startLine="264" endLine="266" />
    <javadoc>
      <text>* {@inheritDoc}</text>
    </javadoc>
    <method type="void" name="computeDerivatives" startLine="269" endLine="271" />
    <javadoc>
      <text>* {@inheritDoc}</text>
    </javadoc>
    <method type="void" name="init" startLine="274" endLine="275" />
    <javadoc>
      <text>* {@inheritDoc}</text>
    </javadoc>
    <method type="void" name="handleStep" startLine="278" endLine="280" />
  </class>
</source>
