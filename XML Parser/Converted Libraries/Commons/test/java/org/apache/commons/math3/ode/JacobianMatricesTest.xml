<?xml version="1.0" encoding="UTF-8"?>
<source package="org.apache.commons.math3.ode">
  <import name="org.apache.commons.math3.exception.DimensionMismatchException" />
  <import name="org.apache.commons.math3.exception.MaxCountExceededException" />
  <import name="org.apache.commons.math3.exception.NoBracketingException" />
  <import name="org.apache.commons.math3.exception.NumberIsTooSmallException" />
  <import name="org.apache.commons.math3.ode.JacobianMatrices.MismatchedEquations" />
  <import name="org.apache.commons.math3.ode.nonstiff.DormandPrince54Integrator" />
  <import name="org.apache.commons.math3.stat.descriptive.SummaryStatistics" />
  <import name="org.apache.commons.math3.util.FastMath" />
  <import name="org.junit.Assert" />
  <import name="org.junit.Test" />
  <class name="JacobianMatricesTest" startLine="31">
    <method type="void" name="testLowAccuracyExternalDifferentiation" startLine="36" endLine="64">
      <declaration type="FirstOrderIntegrator[]" name="integ" />
      <declaration type="double" name="hP" />
      <declaration type="SummaryStatistics" name="residualsP0" />
      <declaration type="SummaryStatistics" name="residualsP1" />
      <scope startLine="51" endLine="59">
        <declaration type="Brusselator" name="brusselator" />
        <declaration type="double[]" name="y" />
        <declaration type="double[]" name="yP" />
      </scope>
      <comment>this test does not really test JacobianMatrices,</comment>
      <comment>it only shows that WITHOUT this class, attempting to recover</comment>
      <comment>the jacobians from external differentiation on simple integration</comment>
      <comment>results with low accuracy gives very poor results. In fact,</comment>
      <comment>the curves dy/dp = g(b) when b varies from 2.88 to 3.08 are</comment>
      <comment>essentially noise.</comment>
      <comment>This test is taken from Hairer, Norsett and Wanner book</comment>
      <comment>Solving Ordinary Differential Equations I (Nonstiff problems),</comment>
      <comment>the curves dy/dp = g(b) are in figure 6.5</comment>
    </method>
    <method type="void" name="testHighAccuracyExternalDifferentiation" startLine="69" endLine="93">
      <declaration type="FirstOrderIntegrator[]" name="integ" />
      <declaration type="double" name="hP" />
      <declaration type="SummaryStatistics" name="residualsP0" />
      <declaration type="SummaryStatistics" name="residualsP1" />
      <scope startLine="75" endLine="84">
        <declaration type="ParamBrusselator" name="brusselator" />
        <declaration type="double[]" name="y" />
        <declaration type="double[]" name="yP" />
      </scope>
    </method>
    <method type="void" name="testInternalDifferentiation" startLine="99" endLine="138">
      <declaration type="AbstractIntegrator[]" name="integ" />
      <declaration type="double" name="hP" />
      <declaration type="double" name="hY" />
      <declaration type="SummaryStatistics" name="residualsP0" />
      <declaration type="SummaryStatistics" name="residualsP1" />
      <scope startLine="106" endLine="133">
        <declaration type="ParamBrusselator" name="brusselator" />
        <declaration type="double[]" name="z" />
        <declaration type="double[][]" name="dZdZ0" />
        <declaration type="double[]" name="dZdP" />
        <declaration type="JacobianMatrices[]" name="jacob" />
        <declaration type="ExpandableStatefulODE" name="efode" />
        <comment>Assert.assertEquals(5000, integ.getMaxEvaluations());</comment>
        <comment>Assert.assertTrue(integ.getEvaluations() > 1500);</comment>
        <comment>Assert.assertTrue(integ.getEvaluations() < 2100);</comment>
        <comment>Assert.assertEquals(4 * integ.getEvaluations(), integ.getEvaluations());</comment>
      </scope>
    </method>
    <method type="void" name="testAnalyticalDifferentiation" startLine="144" endLine="178">
      <declaration type="AbstractIntegrator[]" name="integ" />
      <declaration type="SummaryStatistics" name="residualsP0" />
      <declaration type="SummaryStatistics" name="residualsP1" />
      <scope startLine="149" endLine="173">
        <declaration type="Brusselator" name="brusselator" />
        <declaration type="double[]" name="z" />
        <declaration type="double[][]" name="dZdZ0" />
        <declaration type="double[]" name="dZdP" />
        <declaration type="JacobianMatrices" name="jacob" />
        <declaration type="ExpandableStatefulODE" name="efode" />
        <comment>Assert.assertEquals(5000, integ.getMaxEvaluations());</comment>
        <comment>Assert.assertTrue(integ.getEvaluations() > 350);</comment>
        <comment>Assert.assertTrue(integ.getEvaluations() < 510);</comment>
      </scope>
    </method>
    <method type="void" name="testFinalResult" startLine="184" endLine="234">
      <declaration type="AbstractIntegrator[]" name="integ" />
      <declaration type="double[][]" name="y" />
      <declaration type="Circle" name="circle" />
      <declaration type="JacobianMatrices" name="jacob" />
      <declaration type="ExpandableStatefulODE" name="efode" />
      <declaration type="double" name="t" />
      <scope startLine="208" endLine="210" />
      <declaration type="double[][]" name="dydy0" />
      <scope startLine="214" endLine="218">
        <scope startLine="215" endLine="217" />
      </scope>
      <declaration type="double[]" name="dydcx" />
      <scope startLine="221" endLine="223" />
      <declaration type="double[]" name="dydcy" />
      <scope startLine="226" endLine="228" />
      <declaration type="double[]" name="dydom" />
      <scope startLine="231" endLine="233" />
    </method>
    <method type="void" name="testParameterizable" startLine="240" endLine="295">
      <declaration type="AbstractIntegrator[]" name="integ" />
      <declaration type="double[][]" name="y" />
      <declaration type="ParameterizedCircle" name="pcircle" />
      <declaration type="double" name="hP" />
      <declaration type="double" name="hY" />
      <declaration type="JacobianMatrices[]" name="jacob" />
      <declaration type="ExpandableStatefulODE" name="efode" />
      <declaration type="double" name="t" />
      <scope startLine="272" endLine="274" />
      <declaration type="double[][]" name="dydy0" />
      <scope startLine="278" endLine="282">
        <scope startLine="279" endLine="281" />
      </scope>
      <declaration type="double[]" name="dydp0" />
      <scope startLine="286" endLine="288" />
      <declaration type="double[]" name="dydp1" />
      <scope startLine="292" endLine="294" />
    </method>
    <class name="Brusselator" extends="AbstractParameterizable" startLine="297">
      <implements name="MainStateJacobianProvider" />
      <implements name="ParameterJacobianProvider" />
      <declaration type="String" name="B" />
      <declaration type="double" name="b" />
      <method type="constructor" name="Brusselator" startLine="304" endLine="307" />
      <method type="int" name="getDimension" startLine="309" endLine="311" />
      <method type="void" name="computeDerivatives" startLine="313" endLine="317">
        <declaration type="double" name="prod" />
      </method>
      <method type="void" name="computeMainStateJacobian" startLine="320" endLine="327">
        <declaration type="double" name="p" />
        <declaration type="double" name="y02" />
      </method>
      <method type="void" name="computeParameterJacobian" startLine="330" endLine="338">
        <scope startLine="331" endLine="334" />
        <scope startLine="334" endLine="337" />
      </method>
      <method type="double" name="dYdP0" startLine="340" endLine="342" />
      <method type="double" name="dYdP1" startLine="344" endLine="346" />
      <class name="ParamBrusselator" extends="AbstractParameterizable" startLine="350">
        <implements name="FirstOrderDifferentialEquations" />
        <implements name="ParameterizedODE" />
        <declaration type="String" name="B" />
        <declaration type="double" name="b" />
        <method type="constructor" name="ParamBrusselator" startLine="357" endLine="360" />
        <method type="int" name="getDimension" startLine="362" endLine="364" />
        <javadoc>
          <text>* {@inheritDoc}</text>
        </javadoc>
        <method type="double" name="getParameter" startLine="368" endLine="371" />
        <javadoc>
          <text>* {@inheritDoc}</text>
        </javadoc>
        <method type="void" name="setParameter" startLine="375" endLine="378" />
        <method type="void" name="computeDerivatives" startLine="380" endLine="384">
          <declaration type="double" name="prod" />
        </method>
        <method type="double" name="dYdP0" startLine="386" endLine="388" />
        <method type="double" name="dYdP1" startLine="390" endLine="392" />
        <class name="Circle" extends="AbstractParameterizable" startLine="396">
          <implements name="MainStateJacobianProvider" />
          <implements name="ParameterJacobianProvider" />
          <javadoc>
            <text>* ODE representing a point moving on a circle with provided center and angular rate.</text>
          </javadoc>
          <declaration type="String" name="CX" />
          <declaration type="String" name="CY" />
          <declaration type="String" name="OMEGA" />
          <declaration type="double[]" name="y0" />
          <declaration type="double" name="cx" />
          <declaration type="double" name="cy" />
          <declaration type="double" name="omega" />
          <method type="constructor" name="Circle" startLine="409" endLine="415" />
          <method type="int" name="getDimension" startLine="417" endLine="419" />
          <method type="void" name="computeDerivatives" startLine="421" endLine="424" />
          <method type="void" name="computeMainStateJacobian" startLine="427" endLine="432" />
          <method type="void" name="computeParameterJacobian" startLine="436" endLine="448">
            <scope startLine="438" endLine="441" />
            <scope startLine="441" endLine="444" />
            <scope startLine="444" endLine="447" />
          </method>
          <method type="double[]" name="exactY" startLine="450" endLine="459">
            <declaration type="double" name="cos" />
            <declaration type="double" name="sin" />
            <declaration type="double" name="dx0" />
            <declaration type="double" name="dy0" />
          </method>
          <method type="double[][]" name="exactDyDy0" startLine="461" endLine="468">
            <declaration type="double" name="cos" />
            <declaration type="double" name="sin" />
          </method>
          <method type="double[]" name="exactDyDcx" startLine="470" endLine="474">
            <declaration type="double" name="cos" />
            <declaration type="double" name="sin" />
          </method>
          <method type="double[]" name="exactDyDcy" startLine="476" endLine="480">
            <declaration type="double" name="cos" />
            <declaration type="double" name="sin" />
          </method>
          <method type="double[]" name="exactDyDom" startLine="482" endLine="488">
            <declaration type="double" name="cos" />
            <declaration type="double" name="sin" />
            <declaration type="double" name="dx0" />
            <declaration type="double" name="dy0" />
          </method>
          <class name="ParameterizedCircle" extends="AbstractParameterizable" startLine="492">
            <implements name="FirstOrderDifferentialEquations" />
            <implements name="ParameterizedODE" />
            <javadoc>
              <text>* ODE representing a point moving on a circle with provided center and angular rate.</text>
            </javadoc>
            <declaration type="String" name="CX" />
            <declaration type="String" name="CY" />
            <declaration type="String" name="OMEGA" />
            <declaration type="double[]" name="y0" />
            <declaration type="double" name="cx" />
            <declaration type="double" name="cy" />
            <declaration type="double" name="omega" />
            <method type="constructor" name="ParameterizedCircle" startLine="505" endLine="511" />
            <method type="int" name="getDimension" startLine="513" endLine="515" />
            <method type="void" name="computeDerivatives" startLine="517" endLine="520" />
            <method type="double" name="getParameter" startLine="523" endLine="533">
              <scope startLine="524" endLine="526" />
              <scope startLine="526" endLine="528" />
              <scope startLine="528" endLine="530" />
              <scope startLine="530" endLine="532" />
            </method>
            <method type="void" name="setParameter" startLine="536" endLine="546">
              <scope startLine="537" endLine="539" />
              <scope startLine="539" endLine="541" />
              <scope startLine="541" endLine="543" />
              <scope startLine="543" endLine="545" />
            </method>
            <method type="double[]" name="exactY" startLine="548" endLine="557">
              <declaration type="double" name="cos" />
              <declaration type="double" name="sin" />
              <declaration type="double" name="dx0" />
              <declaration type="double" name="dy0" />
            </method>
            <method type="double[][]" name="exactDyDy0" startLine="559" endLine="566">
              <declaration type="double" name="cos" />
              <declaration type="double" name="sin" />
            </method>
            <method type="double[]" name="exactDyDcx" startLine="568" endLine="572">
              <declaration type="double" name="cos" />
              <declaration type="double" name="sin" />
            </method>
            <method type="double[]" name="exactDyDcy" startLine="574" endLine="578">
              <declaration type="double" name="cos" />
              <declaration type="double" name="sin" />
            </method>
            <method type="double[]" name="exactDyDom" startLine="580" endLine="586">
              <declaration type="double" name="cos" />
              <declaration type="double" name="sin" />
              <declaration type="double" name="dx0" />
              <declaration type="double" name="dy0" />
            </method>
          </class>
        </class>
      </class>
    </class>
  </class>
</source>
