<?xml version="1.0" encoding="UTF-8"?>
<source package="org.apache.commons.math3.dfp">
  <import name="org.junit.After" />
  <import name="org.junit.Assert" />
  <import name="org.junit.Before" />
  <import name="org.junit.Test" />
  <class name="DfpDecTest" startLine="25">
    <declaration type="DfpField" name="field" />
    <declaration type="Dfp" name="pinf" />
    <declaration type="Dfp" name="ninf" />
    <method type="void" name="setUp" startLine="32" endLine="38">
      <comment>Some basic setup.  Define some constants and clear the status flags</comment>
    </method>
    <method type="void" name="tearDown" startLine="41" endLine="45" />
    <method type="void" name="test" startLine="50" endLine="65">
      <declaration type="boolean" name="b" />
      <comment>NaNs involved</comment>
      <comment>distinguish +/- zero</comment>
    </method>
    <method type="void" name="testRound" startLine="69" endLine="282">
      <comment>Round down</comment>
      <comment>Round up</comment>
      <comment>Round half up</comment>
      <comment>Round half down</comment>
      <comment>Round half odd</comment>
      <comment>Round ceil</comment>
      <comment>Round floor</comment>
      <comment>reset</comment>
    </method>
    <method type="void" name="testRoundDecimal10" startLine="286" endLine="499">
      <comment>RoundDecimal10 down</comment>
      <comment>RoundDecimal10 up</comment>
      <comment>RoundDecimal10 half up</comment>
      <comment>RoundDecimal10 half down</comment>
      <comment>RoundDecimal10 half odd</comment>
      <comment>RoundDecimal10 ceil</comment>
      <comment>RoundDecimal10 floor</comment>
      <comment>reset</comment>
    </method>
    <method type="void" name="testNextAfter" startLine="503" endLine="563" />
    <comment>Generic test function.  Takes params x and y and tests them for</comment>
    <comment>equality.  Then checks the status flags against the flags argument.</comment>
    <comment>If the test fail, it prints the desc string</comment>
  </class>
</source>
