<?xml version="1.0" encoding="UTF-8"?>
<source package="org.apache.commons.math3.distribution">
  <import name="java.util.ArrayList" />
  <import name="java.util.List" />
  <import name="org.apache.commons.math3.exception.DimensionMismatchException" />
  <import name="org.apache.commons.math3.exception.MathArithmeticException" />
  <import name="org.apache.commons.math3.exception.NotANumberException" />
  <import name="org.apache.commons.math3.exception.NotFiniteNumberException" />
  <import name="org.apache.commons.math3.exception.NotPositiveException" />
  <import name="org.apache.commons.math3.util.FastMath" />
  <import name="org.apache.commons.math3.util.Pair" />
  <import name="org.junit.Assert" />
  <import name="org.junit.Test" />
  <class name="EnumeratedRealDistributionTest" startLine="32">
    <javadoc>
      <text>* Test class for {@link EnumeratedRealDistribution}.</text>
      <version>$Id: EnumeratedRealDistributionTest.java 1456769 2013-03-15 04:51:34Z psteitz $</version>
    </javadoc>
    <javadoc>
      <text>* The distribution object used for testing.</text>
    </javadoc>
    <declaration type="EnumeratedRealDistribution" name="testDistribution" />
    <javadoc>
      <text>* Creates the default distribution object used for testing.</text>
    </javadoc>
    <method type="constructor" name="EnumeratedRealDistributionTest" startLine="47" endLine="53">
      <comment>Non-sorted singleton array with duplicates should be allowed.</comment>
      <comment>Values with zero-probability do not extend the support.</comment>
    </method>
    <javadoc>
      <text>* Tests if the {@link EnumeratedRealDistribution} constructor throws
 * exceptions for invalid data.</text>
    </javadoc>
    <method type="void" name="testExceptions" startLine="60" endLine="88">
      <declaration type="EnumeratedRealDistribution" name="invalid" />
      <scope startLine="62" endLine="65" />
      <scope startLine="65" endLine="66" />
      <scope startLine="67" endLine="70" />
      <scope startLine="70" endLine="71" />
      <scope startLine="72" endLine="75" />
      <scope startLine="75" endLine="76" />
      <scope startLine="77" endLine="80" />
      <scope startLine="80" endLine="81" />
      <scope startLine="82" endLine="85" />
      <scope startLine="85" endLine="86" />
    </method>
    <javadoc>
      <text>* Tests if the distribution returns proper probability values.</text>
    </javadoc>
    <method type="void" name="testProbability" startLine="94" endLine="101">
      <declaration type="double[][]" name="points" />
      <declaration type="double[][]" name="results" />
      <scope startLine="97" endLine="100">
        <declaration type="double" name="density" />
      </scope>
    </method>
    <javadoc>
      <text>* Tests if the distribution returns proper density values.</text>
    </javadoc>
    <method type="void" name="testDensity" startLine="107" endLine="114">
      <declaration type="double[][]" name="points" />
      <declaration type="double[][]" name="results" />
      <scope startLine="110" endLine="113">
        <declaration type="double" name="density" />
      </scope>
    </method>
    <javadoc>
      <text>* Tests if the distribution returns proper cumulative probability values.</text>
    </javadoc>
    <method type="void" name="testCumulativeProbability" startLine="120" endLine="127">
      <declaration type="double[][]" name="points" />
      <declaration type="double[][]" name="results" />
      <scope startLine="123" endLine="126">
        <declaration type="double" name="probability" />
      </scope>
    </method>
    <javadoc>
      <text>* Tests if the distribution returns proper mean value.</text>
    </javadoc>
    <method type="void" name="testGetNumericalMean" startLine="133" endLine="135" />
    <javadoc>
      <text>* Tests if the distribution returns proper variance.</text>
    </javadoc>
    <method type="void" name="testGetNumericalVariance" startLine="141" endLine="143" />
    <javadoc>
      <text>* Tests if the distribution returns proper lower bound.</text>
    </javadoc>
    <method type="void" name="testGetSupportLowerBound" startLine="149" endLine="151" />
    <javadoc>
      <text>* Tests if the distribution returns proper upper bound.</text>
    </javadoc>
    <method type="void" name="testGetSupportUpperBound" startLine="157" endLine="159" />
    <javadoc>
      <text>* Tests if the distribution returns properly that the support includes the
 * lower bound.</text>
    </javadoc>
    <method type="void" name="testIsSupportLowerBoundInclusive" startLine="166" endLine="168" />
    <javadoc>
      <text>* Tests if the distribution returns properly that the support includes the
 * upper bound.</text>
    </javadoc>
    <method type="void" name="testIsSupportUpperBoundInclusive" startLine="175" endLine="177" />
    <javadoc>
      <text>* Tests if the distribution returns properly that the support is connected.</text>
    </javadoc>
    <method type="void" name="testIsSupportConnected" startLine="183" endLine="185" />
    <javadoc>
      <text>* Tests sampling.</text>
    </javadoc>
    <method type="void" name="testSample" startLine="191" endLine="206">
      <declaration type="int" name="n" />
      <declaration type="double[]" name="samples" />
      <declaration type="double" name="sum" />
      <declaration type="double" name="sumOfSquares" />
      <scope startLine="198" endLine="201" />
      <comment>fixed seed</comment>
    </method>
    <method type="void" name="testIssue942" startLine="209" endLine="214">
      <declaration type="List<Pair<Object,Double>>" name="list" />
    </method>
  </class>
</source>
