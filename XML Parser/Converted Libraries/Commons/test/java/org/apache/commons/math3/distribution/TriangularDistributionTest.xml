<?xml version="1.0" encoding="UTF-8"?>
<source package="org.apache.commons.math3.distribution">
  <import name="org.apache.commons.math3.exception.NumberIsTooLargeException" />
  <import name="org.apache.commons.math3.exception.NumberIsTooSmallException" />
  <import name="org.junit.Assert" />
  <import name="org.junit.Test" />
  <class name="TriangularDistributionTest" extends="RealDistributionAbstractTest" startLine="25">
    <javadoc>
      <text>* Test cases for {@link TriangularDistribution}. See class javadoc for{@link RealDistributionAbstractTest} for further details.</text>
    </javadoc>
    <method type="void" name="setUp" startLine="34" endLine="37" />
    <javadoc>
      <text>* Creates the default triangular distribution instance to use in tests.</text>
    </javadoc>
    <method type="TriangularDistribution" name="makeDistribution" startLine="45" endLine="48">
      <comment>Left side 5 wide, right side 10 wide.</comment>
    </method>
    <javadoc>
      <text>* Creates the default cumulative probability distribution test input
 * values.</text>
    </javadoc>
    <method type="double[]" name="makeCumulativeTestPoints" startLine="55" endLine="64">
      <comment>below lower limit</comment>
      <comment>at lower limit</comment>
      <comment>on lower side</comment>
      <comment>at mode</comment>
      <comment>on upper side</comment>
      <comment>at upper limit</comment>
      <comment>above upper limit</comment>
    </method>
    <javadoc>
      <text>* Creates the default cumulative probability density test expected values.</text>
    </javadoc>
    <method type="double[]" name="makeCumulativeTestValues" startLine="70" endLine="89">
      <declaration type="double" name="third" />
      <declaration type="double" name="left" />
      <declaration type="double" name="area" />
      <comment>Top at 2 / (b - a) = 2 / (12 - -3) = 2 / 15 = 7.5</comment>
      <comment>Area left  = 7.5 * 5  * 0.5 = 18.75 (1/3 of the total area)</comment>
      <comment>Area right = 7.5 * 10 * 0.5 = 37.5  (2/3 of the total area)</comment>
      <comment>Area total = 18.75 + 37.5 = 56.25</comment>
      <comment>Derivative left side = 7.5 / 5 = 1.5</comment>
      <comment>Derivative right side = -7.5 / 10 = -0.75</comment>
    </method>
    <javadoc>
      <text>* Creates the default inverse cumulative probability distribution test
 * input values.</text>
    </javadoc>
    <method type="double[]" name="makeInverseCumulativeTestPoints" startLine="96" endLine="105">
      <declaration type="double[]" name="points" />
      <declaration type="double[]" name="points2" />
      <comment>Exclude the points outside the limits, as they have cumulative</comment>
      <comment>probability of zero and one, meaning the inverse returns the</comment>
      <comment>limits and not the points outside the limits.</comment>
      <comment>return Arrays.copyOfRange(points, 1, points.length - 1);</comment>
    </method>
    <javadoc>
      <text>* Creates the default inverse cumulative probability density test expected
 * values.</text>
    </javadoc>
    <method type="double[]" name="makeInverseCumulativeTestValues" startLine="112" endLine="121">
      <declaration type="double[]" name="points" />
      <declaration type="double[]" name="points2" />
      <comment>Exclude the points outside the limits, as they have cumulative</comment>
      <comment>probability of zero and one, meaning the inverse returns the</comment>
      <comment>limits and not the points outside the limits.</comment>
      <comment>return Arrays.copyOfRange(points, 1, points.length - 1);</comment>
    </method>
    <javadoc>
      <text>* Creates the default probability density test expected values.</text>
    </javadoc>
    <method type="double[]" name="makeDensityTestValues" startLine="125" endLine="134" />
    <javadoc>
      <text>* Test lower bound getter.</text>
    </javadoc>
    <method type="void" name="testGetLowerBound" startLine="140" endLine="143">
      <declaration type="TriangularDistribution" name="distribution" />
    </method>
    <javadoc>
      <text>* Test upper bound getter.</text>
    </javadoc>
    <method type="void" name="testGetUpperBound" startLine="147" endLine="150">
      <declaration type="TriangularDistribution" name="distribution" />
    </method>
    <javadoc>
      <text>* Test pre-condition for equal lower/upper limit.</text>
    </javadoc>
    <method type="void" name="testPreconditions1" startLine="154" endLine="156" />
    <javadoc>
      <text>* Test pre-condition for lower limit larger than upper limit.</text>
    </javadoc>
    <method type="void" name="testPreconditions2" startLine="160" endLine="162" />
    <javadoc>
      <text>* Test pre-condition for mode larger than upper limit.</text>
    </javadoc>
    <method type="void" name="testPreconditions3" startLine="166" endLine="168" />
    <javadoc>
      <text>* Test pre-condition for mode smaller than lower limit.</text>
    </javadoc>
    <method type="void" name="testPreconditions4" startLine="172" endLine="174" />
    <javadoc>
      <text>* Test mean/variance.</text>
    </javadoc>
    <method type="void" name="testMeanVariance" startLine="178" endLine="192">
      <declaration type="TriangularDistribution" name="dist" />
    </method>
    <comment>--- Override tolerance -------------------------------------------------</comment>
    <comment>--- Implementations for abstract methods --------------------------------</comment>
    <comment>--- Additional test cases -----------------------------------------------</comment>
  </class>
</source>
