<?xml version="1.0" encoding="UTF-8"?>
<source package="org.apache.commons.math3.transform">
  <import name="java.util.Arrays" />
  <import name="java.util.Collection" />
  <import name="org.apache.commons.math3.analysis.UnivariateFunction" />
  <import name="org.apache.commons.math3.analysis.function.Sin" />
  <import name="org.apache.commons.math3.analysis.function.Sinc" />
  <import name="org.apache.commons.math3.exception.MathIllegalArgumentException" />
  <import name="org.apache.commons.math3.exception.MathIllegalStateException" />
  <import name="org.apache.commons.math3.util.FastMath" />
  <import name="org.junit.Assert" />
  <import name="org.junit.Test" />
  <import name="org.junit.runner.RunWith" />
  <import name="org.junit.runners.Parameterized" />
  <import name="org.junit.runners.Parameterized.Parameters" />
  <class name="FastSineTransformerTest" extends="RealTransformerAbstractTest" startLine="34">
    <javadoc>
      <text>* Test case for fast sine transformer.
 * <p>
 * FST algorithm is exact, the small tolerance number is used only
 * to account for round-off errors.</text>
      <version>$Id: FastSineTransformerTest.java 1374632 2012-08-18 18:11:11Z luc $</version>
    </javadoc>
    <declaration type="DstNormalization" name="normalization" />
    <declaration type="int[]" name="invalidDataSize" />
    <declaration type="double[]" name="relativeTolerance" />
    <declaration type="int[]" name="validDataSize" />
    <method type="constructor" name="FastSineTransformerTest" startLine="53" endLine="64" />
    <javadoc>
      <text>* Returns an array containing {@code true, false} in order to check both
 * standard and orthogonal DSTs.</text>
      <return>an array of parameters for this parameterized test</return>
    </javadoc>
    <method type="Collection<Object[]>" name="data" startLine="73" endLine="80">
      <declaration type="DstNormalization[]" name="normalization" />
      <declaration type="Object[][]" name="data" />
      <scope startLine="76" endLine="78" />
    </method>
    <javadoc>
      <text>* {@inheritDoc}Overriding the default implementation allows to ensure that the first
 * element of the data set is zero.</text>
    </javadoc>
    <method type="double[]" name="createRealData" startLine="89" endLine="93">
      <declaration type="double[]" name="data" />
    </method>
    <method type="RealTransformer" name="createRealTransformer" startLine="96" endLine="98" />
    <method type="int" name="getInvalidDataSize" startLine="101" endLine="103" />
    <method type="int" name="getNumberOfInvalidDataSizes" startLine="106" endLine="108" />
    <method type="int" name="getNumberOfValidDataSizes" startLine="111" endLine="113" />
    <method type="double" name="getRelativeTolerance" startLine="116" endLine="118" />
    <method type="int" name="getValidDataSize" startLine="121" endLine="123" />
    <method type="UnivariateFunction" name="getValidFunction" startLine="126" endLine="128" />
    <method type="double" name="getValidLowerBound" startLine="131" endLine="133" />
    <method type="double" name="getValidUpperBound" startLine="136" endLine="138" />
    <method type="double[]" name="transform" startLine="141" endLine="181">
      <declaration type="int" name="n" />
      <declaration type="double[]" name="y" />
      <declaration type="double[]" name="sin" />
      <scope startLine="145" endLine="147" />
      <scope startLine="148" endLine="154">
        <declaration type="double" name="yj" />
        <scope startLine="150" endLine="152" />
      </scope>
      <declaration type="double" name="s" />
      <scope startLine="156" endLine="164">
        <scope startLine="157" endLine="159" />
        <scope startLine="159" endLine="161" />
        <scope startLine="161" endLine="163" />
      </scope>
      <scope startLine="164" endLine="172">
        <scope startLine="165" endLine="167" />
        <scope startLine="167" endLine="169" />
        <scope startLine="169" endLine="171" />
      </scope>
      <scope startLine="172" endLine="178">
        <comment>Should never occur. This clause is a safeguard in case other
 types are used to TransformType (which should not be done).</comment>
      </scope>
    </method>
    <method type="void" name="testTransformRealFirstElementNotZero" startLine="187" endLine="201">
      <declaration type="TransformType[]" name="type" />
      <declaration type="double[][]" name="data" />
      <declaration type="RealTransformer" name="transformer" />
      <scope startLine="193" endLine="200">
        <scope startLine="194" endLine="197" />
        <scope startLine="197" endLine="199" />
        <comment>Expected: do nothing</comment>
      </scope>
    </method>
    <javadoc>
      <text>* Test of transformer for the ad hoc data.</text>
    </javadoc>
    <method type="void" name="testAdHocData" startLine="211" endLine="243">
      <declaration type="FastSineTransformer" name="transformer" />
      <declaration type="double[]" name="result" />
      <declaration type="double[]" name="x" />
      <declaration type="double[]" name="y" />
      <scope startLine="222" endLine="224" />
      <scope startLine="227" endLine="229" />
      <scope startLine="235" endLine="237" />
      <scope startLine="240" endLine="242" />
    </method>
    <javadoc>
      <text>* Test of transformer for the sine function.</text>
    </javadoc>
    <method type="void" name="testSinFunction" startLine="249" endLine="268">
      <declaration type="UnivariateFunction" name="f" />
      <declaration type="FastSineTransformer" name="transformer" />
      <declaration type="double" name="min" />
      <declaration type="int" name="N" />
      <scope startLine="258" endLine="260" />
      <scope startLine="265" endLine="267" />
    </method>
    <javadoc>
      <text>* Test of parameters for the transformer.</text>
    </javadoc>
    <method type="void" name="testParameters" startLine="274" endLine="300">
      <declaration type="UnivariateFunction" name="f" />
      <declaration type="FastSineTransformer" name="transformer" />
      <scope startLine="279" endLine="283">
        <comment>bad interval</comment>
      </scope>
      <scope startLine="283" endLine="285">
        <comment>expected</comment>
      </scope>
      <scope startLine="286" endLine="290">
        <comment>bad samples number</comment>
      </scope>
      <scope startLine="290" endLine="292">
        <comment>expected</comment>
      </scope>
      <scope startLine="293" endLine="297">
        <comment>bad samples number</comment>
      </scope>
      <scope startLine="297" endLine="299">
        <comment>expected</comment>
      </scope>
    </method>
    <comment>Additional tests.</comment>
    <comment>Additional (legacy) tests.</comment>
  </class>
</source>
