<?xml version="1.0" encoding="UTF-8"?>
<source package="org.apache.commons.math3.optimization.direct">
  <import name="org.apache.commons.math3.analysis.MultivariateFunction" />
  <import name="org.apache.commons.math3.optimization.GoalType" />
  <import name="org.apache.commons.math3.optimization.PointValuePair" />
  <import name="org.apache.commons.math3.optimization.SimpleValueChecker" />
  <import name="org.apache.commons.math3.util.FastMath" />
  <import name="org.junit.Assert" />
  <import name="org.junit.Test" />
  <class name="SimplexOptimizerMultiDirectionalTest" startLine="28">
    <method type="void" name="testMinimize1" startLine="30" endLine="42">
      <declaration type="SimplexOptimizer" name="optimizer" />
      <declaration type="FourExtrema" name="fourExtrema" />
      <declaration type="PointValuePair[]" name="optimum" />
    </method>
    <method type="void" name="testMinimize2" startLine="45" endLine="57">
      <declaration type="SimplexOptimizer" name="optimizer" />
      <declaration type="FourExtrema" name="fourExtrema" />
      <declaration type="PointValuePair[]" name="optimum" />
    </method>
    <method type="void" name="testMaximize1" startLine="60" endLine="72">
      <declaration type="SimplexOptimizer" name="optimizer" />
      <declaration type="FourExtrema" name="fourExtrema" />
      <declaration type="PointValuePair[]" name="optimum" />
    </method>
    <method type="void" name="testMaximize2" startLine="75" endLine="87">
      <declaration type="SimplexOptimizer" name="optimizer" />
      <declaration type="FourExtrema" name="fourExtrema" />
      <declaration type="PointValuePair[]" name="optimum" />
    </method>
    <method type="void" name="testRosenbrock" startLine="90" endLine="113">
      <declaration type="MultivariateFunction[]" name="rosenbrock" />
      <method type="double" name="value" startLine="93" endLine="98">
        <declaration type="double" name="a" />
        <declaration type="double" name="b" />
      </method>
      <declaration type="SimplexOptimizer" name="optimizer" />
      <declaration type="PointValuePair[]" name="optimum" />
    </method>
    <method type="void" name="testPowell" startLine="116" endLine="138">
      <declaration type="MultivariateFunction[]" name="powell" />
      <method type="double" name="value" startLine="119" endLine="126">
        <declaration type="double" name="a" />
        <declaration type="double" name="b" />
        <declaration type="double" name="c" />
        <declaration type="double" name="d" />
      </method>
      <declaration type="SimplexOptimizer" name="optimizer" />
      <declaration type="PointValuePair[]" name="optimum" />
    </method>
    <method type="void" name="testMath283" startLine="141" endLine="158">
      <declaration type="SimplexOptimizer" name="optimizer" />
      <declaration type="Gaussian2D" name="function" />
      <declaration type="PointValuePair" name="estimate" />
      <declaration type="double" name="EPSILON" />
      <declaration type="double" name="expectedMaximum" />
      <declaration type="double" name="actualMaximum" />
      <declaration type="double[]" name="expectedPosition" />
      <declaration type="double[]" name="actualPosition" />
      <comment>fails because MultiDirectional.iterateSimplex is looping forever</comment>
      <comment>the while(true) should be replaced with a convergence check</comment>
    </method>
    <class name="FourExtrema" startLine="160">
      <implements name="MultivariateFunction" />
      <declaration type="double" name="xM" />
      <declaration type="double" name="yM" />
      <declaration type="double" name="xP" />
      <declaration type="double" name="yP" />
      <declaration type="double" name="valueXmYm" />
      <declaration type="double" name="valueXmYp" />
      <declaration type="double" name="valueXpYm" />
      <declaration type="double" name="valueXpYp" />
      <method type="double" name="value" startLine="171" endLine="176">
        <declaration type="double" name="x" />
        <declaration type="double" name="y" />
      </method>
      <class name="Gaussian2D" startLine="179">
        <implements name="MultivariateFunction" />
        <declaration type="double[]" name="maximumPosition" />
        <declaration type="double" name="std" />
        <method type="constructor" name="Gaussian2D" startLine="183" endLine="186" />
        <method type="double" name="getMaximum" startLine="188" endLine="190" />
        <method type="double[]" name="getMaximumPosition" startLine="192" endLine="194" />
        <method type="double" name="value" startLine="196" endLine="200">
          <declaration type="double" name="x" />
          <declaration type="double" name="twoS2" />
        </method>
        <declaration type="int" name="count" />
      </class>
    </class>
    <comment>The following function has 4 local extrema.</comment>
    <comment>Local maximum.</comment>
    <comment>Local minimum.</comment>
    <comment>Global minimum.</comment>
    <comment>Global maximum.</comment>
  </class>
</source>
