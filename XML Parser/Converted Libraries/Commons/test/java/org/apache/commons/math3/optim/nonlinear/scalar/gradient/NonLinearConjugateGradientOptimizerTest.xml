<?xml version="1.0" encoding="UTF-8"?>
<source package="org.apache.commons.math3.optim.nonlinear.scalar.gradient">
  <import name="java.io.Serializable" />
  <import name="org.apache.commons.math3.analysis.DifferentiableMultivariateFunction" />
  <import name="org.apache.commons.math3.analysis.MultivariateFunction" />
  <import name="org.apache.commons.math3.analysis.MultivariateVectorFunction" />
  <import name="org.apache.commons.math3.analysis.differentiation.DerivativeStructure" />
  <import name="org.apache.commons.math3.analysis.differentiation.MultivariateDifferentiableFunction" />
  <import name="org.apache.commons.math3.analysis.solvers.BrentSolver" />
  <import name="org.apache.commons.math3.exception.DimensionMismatchException" />
  <import name="org.apache.commons.math3.exception.MathIllegalArgumentException" />
  <import name="org.apache.commons.math3.exception.MathUnsupportedOperationException" />
  <import name="org.apache.commons.math3.geometry.euclidean.twod.Vector2D" />
  <import name="org.apache.commons.math3.linear.BlockRealMatrix" />
  <import name="org.apache.commons.math3.linear.RealMatrix" />
  <import name="org.apache.commons.math3.optim.PointValuePair" />
  <import name="org.apache.commons.math3.optim.SimpleValueChecker" />
  <import name="org.apache.commons.math3.optim.InitialGuess" />
  <import name="org.apache.commons.math3.optim.MaxEval" />
  <import name="org.apache.commons.math3.optim.SimpleBounds" />
  <import name="org.apache.commons.math3.optim.nonlinear.scalar.ObjectiveFunction" />
  <import name="org.apache.commons.math3.optim.nonlinear.scalar.GoalType" />
  <import name="org.apache.commons.math3.optim.nonlinear.scalar.ObjectiveFunctionGradient" />
  <import name="org.junit.Assert" />
  <import name="org.junit.Test" />
  <class name="NonLinearConjugateGradientOptimizerTest" startLine="45">
    <javadoc>
      <text>* <p>Some of the unit tests are re-implementations of the MINPACK <a
 * href="http://www.netlib.org/minpack/ex/file17">file17</a> and <a
 * href="http://www.netlib.org/minpack/ex/file22">file22</a> test files.
 * The redistribution policy for MINPACK is available <a
 * href="http://www.netlib.org/minpack/disclaimer">here</a>, for
 * convenience, it is reproduced below.</p>
 * <table border="0" width="80%" cellpadding="10" align="center" bgcolor="#E0E0E0">
 * <tr><td>
 * Minpack Copyright Notice (1999) University of Chicago.
 * All rights reserved
 * </td></tr>
 * <tr><td>
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * <ol>
 * <li>Redistributions of source code must retain the above copyright
 * notice, this list of conditions and the following disclaimer.</li>
 * <li>Redistributions in binary form must reproduce the above
 * copyright notice, this list of conditions and the following
 * disclaimer in the documentation and/or other materials provided
 * with the distribution.</li>
 * <li>The end-user documentation included with the redistribution, if any,
 * must include the following acknowledgment:
 * <code>This product includes software developed by the University of
 * Chicago, as Operator of Argonne National Laboratory.</code>
 * Alternately, this acknowledgment may appear in the software itself,
 * if and wherever such third-party acknowledgments normally appear.</li>
 * <li><strong>WARRANTY DISCLAIMER. THE SOFTWARE IS SUPPLIED "AS IS"
 * WITHOUT WARRANTY OF ANY KIND. THE COPYRIGHT HOLDER, THE
 * UNITED STATES, THE UNITED STATES DEPARTMENT OF ENERGY, AND
 * THEIR EMPLOYEES: (1) DISCLAIM ANY WARRANTIES, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO ANY IMPLIED WARRANTIES
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, TITLE
 * OR NON-INFRINGEMENT, (2) DO NOT ASSUME ANY LEGAL LIABILITY
 * OR RESPONSIBILITY FOR THE ACCURACY, COMPLETENESS, OR
 * USEFULNESS OF THE SOFTWARE, (3) DO NOT REPRESENT THAT USE OF
 * THE SOFTWARE WOULD NOT INFRINGE PRIVATELY OWNED RIGHTS, (4)
 * DO NOT WARRANT THAT THE SOFTWARE WILL FUNCTION
 * UNINTERRUPTED, THAT IT IS ERROR-FREE OR THAT ANY ERRORS WILL
 * BE CORRECTED.</strong></li>
 * <li><strong>LIMITATION OF LIABILITY. IN NO EVENT WILL THE COPYRIGHT
 * HOLDER, THE UNITED STATES, THE UNITED STATES DEPARTMENT OF
 * ENERGY, OR THEIR EMPLOYEES: BE LIABLE FOR ANY INDIRECT,
 * INCIDENTAL, CONSEQUENTIAL, SPECIAL OR PUNITIVE DAMAGES OF
 * ANY KIND OR NATURE, INCLUDING BUT NOT LIMITED TO LOSS OF
 * PROFITS OR LOSS OF DATA, FOR ANY REASON WHATSOEVER, WHETHER
 * SUCH LIABILITY IS ASSERTED ON THE BASIS OF CONTRACT, TORT
 * (INCLUDING NEGLIGENCE OR STRICT LIABILITY), OR OTHERWISE,
 * EVEN IF ANY OF SAID PARTIES HAS BEEN WARNED OF THE
 * POSSIBILITY OF SUCH LOSS OR DAMAGES.</strong></li>
 * <ol></td></tr>
 * </table></text>
      <author>Argonne National Laboratory. MINPACK project. March 1980 (original fortran minpack tests)</author>
      <author>Burton S. Garbow (original fortran minpack tests)</author>
      <author>Kenneth E. Hillstrom (original fortran minpack tests)</author>
      <author>Jorge J. More (original fortran minpack tests)</author>
      <author>Luc Maisonobe (non-minpack tests and minpack tests Java translation)</author>
    </javadoc>
    <method type="void" name="testBoundsUnsupported" startLine="109" endLine="122">
      <declaration type="LinearProblem[]" name="problem" />
      <declaration type="NonLinearConjugateGradientOptimizer" name="optimizer" />
    </method>
    <method type="void" name="testTrivial" startLine="125" endLine="142">
      <declaration type="LinearProblem[]" name="problem" />
      <declaration type="NonLinearConjugateGradientOptimizer" name="optimizer" />
      <declaration type="PointValuePair[]" name="optimum" />
      <comment>Check that the number of iterations is updated (MATH-949).</comment>
    </method>
    <method type="void" name="testColumnsPermutation" startLine="145" endLine="163">
      <declaration type="LinearProblem[]" name="problem" />
      <declaration type="NonLinearConjugateGradientOptimizer" name="optimizer" />
      <declaration type="PointValuePair[]" name="optimum" />
    </method>
    <method type="void" name="testNoDependency" startLine="166" endLine="187">
      <declaration type="LinearProblem[]" name="problem" />
      <declaration type="NonLinearConjugateGradientOptimizer" name="optimizer" />
      <declaration type="PointValuePair[]" name="optimum" />
      <scope startLine="184" endLine="186" />
    </method>
    <method type="void" name="testOneSet" startLine="190" endLine="209">
      <declaration type="LinearProblem[]" name="problem" />
      <declaration type="NonLinearConjugateGradientOptimizer" name="optimizer" />
      <declaration type="PointValuePair[]" name="optimum" />
    </method>
    <method type="void" name="testTwoSets" startLine="212" endLine="256">
      <declaration type="double" name="epsilon" />
      <declaration type="LinearProblem[]" name="problem" />
      <declaration type="Preconditioner[]" name="preconditioner" />
      <method type="double[]" name="precondition" startLine="225" endLine="234">
        <declaration type="double[]" name="d" />
      </method>
      <declaration type="NonLinearConjugateGradientOptimizer" name="optimizer" />
      <declaration type="PointValuePair[]" name="optimum" />
    </method>
    <method type="void" name="testNonInversible" startLine="259" endLine="275">
      <declaration type="LinearProblem[]" name="problem" />
      <declaration type="NonLinearConjugateGradientOptimizer" name="optimizer" />
      <declaration type="PointValuePair[]" name="optimum" />
    </method>
    <method type="void" name="testIllConditioned" startLine="278" endLine="317">
      <declaration type="LinearProblem[]" name="problem1" />
      <declaration type="NonLinearConjugateGradientOptimizer" name="optimizer" />
      <declaration type="PointValuePair[]" name="optimum1" />
      <declaration type="LinearProblem[]" name="problem2" />
      <declaration type="PointValuePair[]" name="optimum2" />
    </method>
    <method type="void" name="testMoreEstimatedParametersSimple" startLine="320" endLine="338">
      <declaration type="LinearProblem[]" name="problem" />
      <declaration type="NonLinearConjugateGradientOptimizer" name="optimizer" />
      <declaration type="PointValuePair[]" name="optimum" />
    </method>
    <method type="void" name="testMoreEstimatedParametersUnsorted" startLine="341" endLine="359">
      <declaration type="LinearProblem[]" name="problem" />
      <declaration type="NonLinearConjugateGradientOptimizer" name="optimizer" />
      <declaration type="PointValuePair[]" name="optimum" />
    </method>
    <method type="void" name="testRedundantEquations" startLine="362" endLine="381">
      <declaration type="LinearProblem[]" name="problem" />
      <declaration type="NonLinearConjugateGradientOptimizer" name="optimizer" />
      <declaration type="PointValuePair[]" name="optimum" />
    </method>
    <method type="void" name="testInconsistentEquations" startLine="384" endLine="402">
      <declaration type="LinearProblem[]" name="problem" />
      <declaration type="NonLinearConjugateGradientOptimizer" name="optimizer" />
      <declaration type="PointValuePair[]" name="optimum" />
    </method>
    <method type="void" name="testCircleFitting" startLine="405" endLine="426">
      <declaration type="CircleScalar" name="problem" />
      <declaration type="NonLinearConjugateGradientOptimizer" name="optimizer" />
      <declaration type="PointValuePair[]" name="optimum" />
      <declaration type="Vector2D" name="center" />
    </method>
    <class name="LinearProblem" startLine="428">
      <declaration type="RealMatrix" name="factors" />
      <declaration type="double[]" name="target" />
      <method type="constructor" name="LinearProblem" startLine="433" endLine="436" />
      <method type="ObjectiveFunction" name="getObjectiveFunction" startLine="438" endLine="450">
        <method type="double" name="value" startLine="440" endLine="448">
          <declaration type="double[]" name="y" />
          <declaration type="double" name="sum" />
          <scope startLine="443" endLine="446">
            <declaration type="double" name="ri" />
          </scope>
        </method>
      </method>
      <method type="ObjectiveFunctionGradient" name="getObjectiveFunctionGradient" startLine="452" endLine="466">
        <method type="double[]" name="value" startLine="454" endLine="464">
          <declaration type="double[]" name="r" />
          <scope startLine="456" endLine="458" />
          <declaration type="double[]" name="p" />
          <scope startLine="460" endLine="462" />
        </method>
      </method>
    </class>
  </class>
</source>
