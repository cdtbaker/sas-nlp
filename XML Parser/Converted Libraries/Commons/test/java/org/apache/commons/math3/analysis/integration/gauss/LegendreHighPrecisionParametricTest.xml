<?xml version="1.0" encoding="UTF-8"?>
<source package="org.apache.commons.math3.analysis.integration.gauss">
  <import name="java.util.ArrayList" />
  <import name="java.util.Collection" />
  <import name="org.junit.runner.RunWith" />
  <import name="org.junit.runners.Parameterized" />
  <import name="org.junit.runners.Parameterized.Parameters" />
  <class name="LegendreHighPrecisionParametricTest" extends="GaussianQuadratureAbstractTest" startLine="26">
    <javadoc>
      <text>* Test of the {@link LegendreHighPrecisionRuleFactory}.
 * This parameterized test extends the standard test for Gaussian quadrature
 * rule, where each monomial is tested in turn.
 * Parametrization allows to test automatically 0, 1, ... , {@link #MAX_NUM_POINTS}quadrature rules.</text>
      <version>$Id$</version>
    </javadoc>
    <declaration type="GaussIntegratorFactory" name="factory" />
    <javadoc>
      <text>* The highest order quadrature rule to be tested.</text>
    </javadoc>
    <declaration type="int" name="MAX_NUM_POINTS" />
    <javadoc>
      <text>* Creates a new instance of this test, with the specified number of nodes
 * for the Gauss-Legendre quadrature rule.</text>
      <param>numberOfPoints Order of integration rule.</param>
      <param>maxDegree Maximum degree of monomials to be tested.</param>
      <param>eps Value of &epsilon;.</param>
      <param>numUlps Value of the maximum relative error (in ulps).</param>
    </javadoc>
    <method type="constructor" name="LegendreHighPrecisionParametricTest" startLine="56" endLine="59" />
    <javadoc>
      <text>* Returns the collection of parameters to be passed to the constructor of
 * this class.
 * Gauss-Legendre quadrature rules of order 1, ..., {@link #MAX_NUM_POINTS}will be constructed.</text>
      <return>the collection of parameters for this parameterized test.</return>
    </javadoc>
    <method type="Collection<Object[]>" name="getParameters" startLine="70" endLine="76">
      <declaration type="ArrayList<Object[]>[]" name="parameters" />
      <scope startLine="72" endLine="74" />
    </method>
    <method type="double" name="getExpectedValue" startLine="79" endLine="84">
      <scope startLine="80" endLine="82" />
    </method>
  </class>
</source>
