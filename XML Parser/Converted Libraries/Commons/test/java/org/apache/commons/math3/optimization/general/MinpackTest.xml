<?xml version="1.0" encoding="UTF-8"?>
<source package="org.apache.commons.math3.optimization.general">
  <import name="java.io.Serializable" />
  <import name="java.util.Arrays" />
  <import name="org.apache.commons.math3.exception.TooManyEvaluationsException" />
  <import name="org.apache.commons.math3.analysis.differentiation.DerivativeStructure" />
  <import name="org.apache.commons.math3.analysis.differentiation.MultivariateDifferentiableVectorFunction" />
  <import name="org.apache.commons.math3.optimization.PointVectorValuePair" />
  <import name="org.apache.commons.math3.util.FastMath" />
  <import name="org.junit.Assert" />
  <import name="org.junit.Test" />
  <class name="MinpackTest" startLine="32">
    <javadoc>
      <text>* <p>Some of the unit tests are re-implementations of the MINPACK <a
 * href="http://www.netlib.org/minpack/ex/file17">file17</a> and <a
 * href="http://www.netlib.org/minpack/ex/file22">file22</a> test files.
 * The redistribution policy for MINPACK is available <a
 * href="http://www.netlib.org/minpack/disclaimer">here</a>, for
 * convenience, it is reproduced below.</p>
 * <table border="0" width="80%" cellpadding="10" align="center" bgcolor="#E0E0E0">
 * <tr><td>
 * Minpack Copyright Notice (1999) University of Chicago.
 * All rights reserved
 * </td></tr>
 * <tr><td>
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * <ol>
 * <li>Redistributions of source code must retain the above copyright
 * notice, this list of conditions and the following disclaimer.</li>
 * <li>Redistributions in binary form must reproduce the above
 * copyright notice, this list of conditions and the following
 * disclaimer in the documentation and/or other materials provided
 * with the distribution.</li>
 * <li>The end-user documentation included with the redistribution, if any,
 * must include the following acknowledgment:
 * <code>This product includes software developed by the University of
 * Chicago, as Operator of Argonne National Laboratory.</code>
 * Alternately, this acknowledgment may appear in the software itself,
 * if and wherever such third-party acknowledgments normally appear.</li>
 * <li><strong>WARRANTY DISCLAIMER. THE SOFTWARE IS SUPPLIED "AS IS"
 * WITHOUT WARRANTY OF ANY KIND. THE COPYRIGHT HOLDER, THE
 * UNITED STATES, THE UNITED STATES DEPARTMENT OF ENERGY, AND
 * THEIR EMPLOYEES: (1) DISCLAIM ANY WARRANTIES, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO ANY IMPLIED WARRANTIES
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, TITLE
 * OR NON-INFRINGEMENT, (2) DO NOT ASSUME ANY LEGAL LIABILITY
 * OR RESPONSIBILITY FOR THE ACCURACY, COMPLETENESS, OR
 * USEFULNESS OF THE SOFTWARE, (3) DO NOT REPRESENT THAT USE OF
 * THE SOFTWARE WOULD NOT INFRINGE PRIVATELY OWNED RIGHTS, (4)
 * DO NOT WARRANT THAT THE SOFTWARE WILL FUNCTION
 * UNINTERRUPTED, THAT IT IS ERROR-FREE OR THAT ANY ERRORS WILL
 * BE CORRECTED.</strong></li>
 * <li><strong>LIMITATION OF LIABILITY. IN NO EVENT WILL THE COPYRIGHT
 * HOLDER, THE UNITED STATES, THE UNITED STATES DEPARTMENT OF
 * ENERGY, OR THEIR EMPLOYEES: BE LIABLE FOR ANY INDIRECT,
 * INCIDENTAL, CONSEQUENTIAL, SPECIAL OR PUNITIVE DAMAGES OF
 * ANY KIND OR NATURE, INCLUDING BUT NOT LIMITED TO LOSS OF
 * PROFITS OR LOSS OF DATA, FOR ANY REASON WHATSOEVER, WHETHER
 * SUCH LIABILITY IS ASSERTED ON THE BASIS OF CONTRACT, TORT
 * (INCLUDING NEGLIGENCE OR STRICT LIABILITY), OR OTHERWISE,
 * EVEN IF ANY OF SAID PARTIES HAS BEEN WARNED OF THE
 * POSSIBILITY OF SUCH LOSS OR DAMAGES.</strong></li>
 * <ol></td></tr>
 * </table></text>
      <author>Argonne National Laboratory. MINPACK project. March 1980 (original fortran minpack tests)</author>
      <author>Burton S. Garbow (original fortran minpack tests)</author>
      <author>Kenneth E. Hillstrom (original fortran minpack tests)</author>
      <author>Jorge J. More (original fortran minpack tests)</author>
      <author>Luc Maisonobe (non-minpack tests and minpack tests Java translation)</author>
    </javadoc>
    <method type="void" name="testMinpackLinearFullRank" startLine="97" endLine="102" />
    <method type="void" name="testMinpackLinearRank1" startLine="105" endLine="110" />
    <method type="void" name="testMinpackLinearRank1ZeroColsAndRows" startLine="113" endLine="116" />
    <method type="void" name="testMinpackRosenbrok" startLine="119" endLine="126" />
    <method type="void" name="testMinpackHelicalValley" startLine="129" endLine="136" />
    <method type="void" name="testMinpackPowellSingular" startLine="139" endLine="146" />
    <method type="void" name="testMinpackFreudensteinRoth" startLine="149" endLine="168" />
    <method type="void" name="testMinpackBard" startLine="171" endLine="190" />
    <method type="void" name="testMinpackKowalikOsborne" startLine="193" endLine="221" />
    <method type="void" name="testMinpackMeyer" startLine="224" endLine="239" />
    <method type="void" name="testMinpackWatson" startLine="242" endLine="325" />
    <method type="void" name="testMinpackBox3Dimensional" startLine="328" endLine="331" />
    <method type="void" name="testMinpackJennrichSampson" startLine="334" endLine="341">
      <comment>0.2578330049, 0.257829976764542</comment>
    </method>
    <method type="void" name="testMinpackBrownDennis" startLine="344" endLine="366" />
    <method type="void" name="testMinpackChebyquad" startLine="369" endLine="405" />
    <method type="void" name="testMinpackBrownAlmostLinear" startLine="408" endLine="474" />
    <method type="void" name="testMinpackOsborne1" startLine="477" endLine="485" />
    <method type="void" name="testMinpackOsborne2" startLine="488" endLine="503" />
    <method type="void" name="minpackTest" startLine="505" endLine="522">
      <declaration type="LevenbergMarquardtOptimizer" name="optimizer" />
      <scope startLine="511" endLine="519">
        <declaration type="PointVectorValuePair" name="optimum" />
      </scope>
      <scope startLine="519" endLine="521" />
      <comment>Assert.assertTrue(function.checkTheoreticalStartCost(optimizer.getRMS()));</comment>
    </method>
    <class name="MinpackFunction" startLine="524">
      <implements name="MultivariateDifferentiableVectorFunction" />
      <implements name="Serializable" />
      <declaration type="long" name="serialVersionUID" />
      <declaration type="int" name="n" />
      <declaration type="int" name="m" />
      <declaration type="double[]" name="startParams" />
      <declaration type="double" name="theoreticalMinCost" />
      <declaration type="double[]" name="theoreticalMinParams" />
      <declaration type="double" name="costAccuracy" />
      <declaration type="double" name="paramsAccuracy" />
      <method type="constructor" name="MinpackFunction" startLine="537" endLine="545" />
      <method type="double[]" name="buildArray" startLine="547" endLine="551">
        <declaration type="double[]" name="array" />
      </method>
      <method type="double[]" name="getTarget" startLine="553" endLine="555" />
      <method type="double[]" name="getWeight" startLine="557" endLine="559" />
      <method type="double[]" name="getStartPoint" startLine="561" endLine="563" />
      <method type="void" name="setCostAccuracy" startLine="565" endLine="567" />
      <method type="void" name="setParamsAccuracy" startLine="569" endLine="571" />
      <method type="int" name="getN" startLine="573" endLine="575" />
      <method type="void" name="checkTheoreticalMinCost" startLine="577" endLine="580">
        <declaration type="double" name="threshold" />
      </method>
      <method type="void" name="checkTheoreticalMinParams" startLine="582" endLine="591">
        <declaration type="double[]" name="params" />
        <scope startLine="584" endLine="590">
          <scope startLine="585" endLine="589">
            <declaration type="double" name="mi" />
            <declaration type="double" name="vi" />
          </scope>
        </scope>
      </method>
      <method type="double[]" name="value" startLine="593" endLine="604">
        <declaration type="DerivativeStructure[]" name="dsV" />
        <scope startLine="595" endLine="597" />
        <declaration type="DerivativeStructure[]" name="dsY" />
        <declaration type="double[]" name="y" />
        <scope startLine="600" endLine="602" />
      </method>
      <method name="value" type="DerivativeStructure[]" startLine="606" endLine="606" />
      <class name="LinearFullRankFunction" extends="MinpackFunction" startLine="610">
        <declaration type="long" name="serialVersionUID" />
        <method type="constructor" name="LinearFullRankFunction" startLine="616" endLine="619" />
        <method type="DerivativeStructure[]" name="value" startLine="622" endLine="634">
          <declaration type="DerivativeStructure" name="sum" />
          <scope startLine="624" endLine="626" />
          <declaration type="DerivativeStructure" name="t" />
          <declaration type="DerivativeStructure[]" name="f" />
          <scope startLine="629" endLine="631" />
        </method>
        <class name="LinearRank1Function" extends="MinpackFunction" startLine="638">
          <declaration type="long" name="serialVersionUID" />
          <method type="constructor" name="LinearRank1Function" startLine="644" endLine="646" />
          <method type="DerivativeStructure[]" name="value" startLine="649" endLine="659">
            <declaration type="DerivativeStructure[]" name="f" />
            <declaration type="DerivativeStructure" name="sum" />
            <scope startLine="652" endLine="654" />
            <scope startLine="655" endLine="657" />
          </method>
          <class name="LinearRank1ZeroColsAndRowsFunction" extends="MinpackFunction" startLine="663">
            <declaration type="long" name="serialVersionUID" />
            <method type="constructor" name="LinearRank1ZeroColsAndRowsFunction" startLine="667" endLine="671" />
            <method type="DerivativeStructure[]" name="value" startLine="674" endLine="685">
              <declaration type="DerivativeStructure[]" name="f" />
              <declaration type="DerivativeStructure" name="sum" />
              <scope startLine="677" endLine="679" />
              <scope startLine="680" endLine="682" />
            </method>
            <class name="RosenbrockFunction" extends="MinpackFunction" startLine="689">
              <declaration type="long" name="serialVersionUID" />
              <method type="constructor" name="RosenbrockFunction" startLine="693" endLine="695" />
              <method type="DerivativeStructure[]" name="value" startLine="698" endLine="705">
                <declaration type="DerivativeStructure" name="x1" />
                <declaration type="DerivativeStructure" name="x2" />
              </method>
              <class name="HelicalValleyFunction" extends="MinpackFunction" startLine="709">
                <declaration type="long" name="serialVersionUID" />
                <method type="constructor" name="HelicalValleyFunction" startLine="714" endLine="716" />
                <method type="DerivativeStructure[]" name="value" startLine="719" endLine="738">
                  <declaration type="DerivativeStructure" name="x1" />
                  <declaration type="DerivativeStructure" name="x2" />
                  <declaration type="DerivativeStructure" name="x3" />
                  <declaration type="DerivativeStructure" name="tmp1" />
                  <scope startLine="724" endLine="726" />
                  <scope startLine="726" endLine="731">
                    <scope startLine="728" endLine="730" />
                  </scope>
                  <declaration type="DerivativeStructure" name="tmp2" />
                </method>
                <declaration type="double" name="twoPi" />
                <class name="PowellSingularFunction" extends="MinpackFunction" startLine="744">
                  <declaration type="long" name="serialVersionUID" />
                  <method type="constructor" name="PowellSingularFunction" startLine="749" endLine="751" />
                  <method type="DerivativeStructure[]" name="value" startLine="754" endLine="765">
                    <declaration type="DerivativeStructure" name="x1" />
                    <declaration type="DerivativeStructure" name="x2" />
                    <declaration type="DerivativeStructure" name="x3" />
                    <declaration type="DerivativeStructure" name="x4" />
                  </method>
                  <declaration type="double" name="sqrt5" />
                  <declaration type="double" name="sqrt10" />
                  <class name="FreudensteinRothFunction" extends="MinpackFunction" startLine="772">
                    <declaration type="long" name="serialVersionUID" />
                    <method type="constructor" name="FreudensteinRothFunction" startLine="779" endLine="782" />
                    <method type="DerivativeStructure[]" name="value" startLine="785" endLine="792">
                      <declaration type="DerivativeStructure" name="x1" />
                      <declaration type="DerivativeStructure" name="x2" />
                    </method>
                    <class name="BardFunction" extends="MinpackFunction" startLine="796">
                      <declaration type="long" name="serialVersionUID" />
                      <method type="constructor" name="BardFunction" startLine="803" endLine="806" />
                      <method type="DerivativeStructure[]" name="value" startLine="809" endLine="821">
                        <declaration type="DerivativeStructure" name="x1" />
                        <declaration type="DerivativeStructure" name="x2" />
                        <declaration type="DerivativeStructure" name="x3" />
                        <declaration type="DerivativeStructure[]" name="f" />
                        <scope startLine="814" endLine="819">
                          <declaration type="double" name="tmp1" />
                          <declaration type="double" name="tmp2" />
                          <declaration type="double" name="tmp3" />
                        </scope>
                      </method>
                      <declaration type="double[]" name="y" />
                      <class name="KowalikOsborneFunction" extends="MinpackFunction" startLine="831">
                        <declaration type="long" name="serialVersionUID" />
                        <method type="constructor" name="KowalikOsborneFunction" startLine="838" endLine="845">
                          <scope startLine="841" endLine="844" />
                        </method>
                        <method type="DerivativeStructure[]" name="value" startLine="848" endLine="858">
                          <declaration type="DerivativeStructure" name="x1" />
                          <declaration type="DerivativeStructure" name="x2" />
                          <declaration type="DerivativeStructure" name="x3" />
                          <declaration type="DerivativeStructure" name="x4" />
                          <declaration type="DerivativeStructure[]" name="f" />
                          <scope startLine="854" endLine="856" />
                        </method>
                        <declaration type="double[]" name="v" />
                        <declaration type="double[]" name="y" />
                        <class name="MeyerFunction" extends="MinpackFunction" startLine="871">
                          <declaration type="long" name="serialVersionUID" />
                          <method type="constructor" name="MeyerFunction" startLine="878" endLine="885">
                            <scope startLine="881" endLine="884" />
                          </method>
                          <method type="DerivativeStructure[]" name="value" startLine="888" endLine="897">
                            <declaration type="DerivativeStructure" name="x1" />
                            <declaration type="DerivativeStructure" name="x2" />
                            <declaration type="DerivativeStructure" name="x3" />
                            <declaration type="DerivativeStructure[]" name="f" />
                            <scope startLine="893" endLine="895" />
                          </method>
                          <declaration type="double[]" name="y" />
                          <class name="WatsonFunction" extends="MinpackFunction" startLine="908">
                            <declaration type="long" name="serialVersionUID" />
                            <method type="constructor" name="WatsonFunction" startLine="915" endLine="918" />
                            <method type="DerivativeStructure[]" name="value" startLine="921" endLine="947">
                              <declaration type="DerivativeStructure[]" name="f" />
                              <scope startLine="923" endLine="938">
                                <declaration type="double" name="div" />
                                <declaration type="DerivativeStructure" name="s1" />
                                <declaration type="DerivativeStructure" name="dx" />
                                <scope startLine="927" endLine="930" />
                                <declaration type="DerivativeStructure" name="s2" />
                                <scope startLine="933" endLine="936" />
                              </scope>
                              <declaration type="DerivativeStructure" name="x1" />
                              <declaration type="DerivativeStructure" name="x2" />
                            </method>
                            <class name="Box3DimensionalFunction" extends="MinpackFunction" startLine="951">
                              <declaration type="long" name="serialVersionUID" />
                              <method type="constructor" name="Box3DimensionalFunction" startLine="956" endLine="959" />
                              <method type="DerivativeStructure[]" name="value" startLine="962" endLine="973">
                                <declaration type="DerivativeStructure" name="x1" />
                                <declaration type="DerivativeStructure" name="x2" />
                                <declaration type="DerivativeStructure" name="x3" />
                                <declaration type="DerivativeStructure[]" name="f" />
                                <scope startLine="967" endLine="971">
                                  <declaration type="double" name="tmp" />
                                </scope>
                              </method>
                              <class name="JennrichSampsonFunction" extends="MinpackFunction" startLine="977">
                                <declaration type="long" name="serialVersionUID" />
                                <method type="constructor" name="JennrichSampsonFunction" startLine="984" endLine="987" />
                                <method type="DerivativeStructure[]" name="value" startLine="990" endLine="999">
                                  <declaration type="DerivativeStructure" name="x1" />
                                  <declaration type="DerivativeStructure" name="x2" />
                                  <declaration type="DerivativeStructure[]" name="f" />
                                  <scope startLine="994" endLine="997">
                                    <declaration type="double" name="temp" />
                                  </scope>
                                </method>
                                <class name="BrownDennisFunction" extends="MinpackFunction" startLine="1003">
                                  <declaration type="long" name="serialVersionUID" />
                                  <method type="constructor" name="BrownDennisFunction" startLine="1010" endLine="1014" />
                                  <method type="DerivativeStructure[]" name="value" startLine="1017" endLine="1030">
                                    <declaration type="DerivativeStructure" name="x1" />
                                    <declaration type="DerivativeStructure" name="x2" />
                                    <declaration type="DerivativeStructure" name="x3" />
                                    <declaration type="DerivativeStructure" name="x4" />
                                    <declaration type="DerivativeStructure[]" name="f" />
                                    <scope startLine="1023" endLine="1028">
                                      <declaration type="double" name="temp" />
                                      <declaration type="DerivativeStructure" name="tmp1" />
                                      <declaration type="DerivativeStructure" name="tmp2" />
                                    </scope>
                                  </method>
                                  <class name="ChebyquadFunction" extends="MinpackFunction" startLine="1034">
                                    <declaration type="long" name="serialVersionUID" />
                                    <method type="double[]" name="buildChebyquadArray" startLine="1038" endLine="1045">
                                      <declaration type="double[]" name="array" />
                                      <declaration type="double" name="inv" />
                                      <scope startLine="1041" endLine="1043" />
                                    </method>
                                    <method type="constructor" name="ChebyquadFunction" startLine="1050" endLine="1053" />
                                    <method type="DerivativeStructure[]" name="value" startLine="1056" endLine="1085">
                                      <declaration type="DerivativeStructure[]" name="f" />
                                      <scope startLine="1061" endLine="1071">
                                        <declaration type="DerivativeStructure" name="tmp1" />
                                        <declaration type="DerivativeStructure" name="tmp2" />
                                        <declaration type="DerivativeStructure" name="temp" />
                                        <scope startLine="1065" endLine="1070">
                                          <declaration type="DerivativeStructure" name="ti" />
                                        </scope>
                                      </scope>
                                      <declaration type="double" name="dx" />
                                      <declaration type="boolean" name="iev" />
                                      <scope startLine="1075" endLine="1081">
                                        <scope startLine="1077" endLine="1079" />
                                      </scope>
                                    </method>
                                    <class name="BrownAlmostLinearFunction" extends="MinpackFunction" startLine="1089">
                                      <declaration type="long" name="serialVersionUID" />
                                      <method type="constructor" name="BrownAlmostLinearFunction" startLine="1096" endLine="1099" />
                                      <method type="DerivativeStructure[]" name="value" startLine="1102" endLine="1115">
                                        <declaration type="DerivativeStructure[]" name="f" />
                                        <declaration type="DerivativeStructure" name="sum" />
                                        <declaration type="DerivativeStructure" name="prod" />
                                        <scope startLine="1106" endLine="1109" />
                                        <scope startLine="1110" endLine="1112" />
                                      </method>
                                      <class name="Osborne1Function" extends="MinpackFunction" startLine="1119">
                                        <declaration type="long" name="serialVersionUID" />
                                        <method type="constructor" name="Osborne1Function" startLine="1126" endLine="1129" />
                                        <method type="DerivativeStructure[]" name="value" startLine="1132" endLine="1146">
                                          <declaration type="DerivativeStructure" name="x1" />
                                          <declaration type="DerivativeStructure" name="x2" />
                                          <declaration type="DerivativeStructure" name="x3" />
                                          <declaration type="DerivativeStructure" name="x4" />
                                          <declaration type="DerivativeStructure" name="x5" />
                                          <declaration type="DerivativeStructure[]" name="f" />
                                          <scope startLine="1139" endLine="1144">
                                            <declaration type="double" name="temp" />
                                            <declaration type="DerivativeStructure" name="tmp1" />
                                            <declaration type="DerivativeStructure" name="tmp2" />
                                          </scope>
                                        </method>
                                        <declaration type="double[]" name="y" />
                                        <class name="Osborne2Function" extends="MinpackFunction" startLine="1156">
                                          <declaration type="long" name="serialVersionUID" />
                                          <method type="constructor" name="Osborne2Function" startLine="1163" endLine="1166" />
                                          <method type="DerivativeStructure[]" name="value" startLine="1169" endLine="1191">
                                            <declaration type="DerivativeStructure" name="x01" />
                                            <declaration type="DerivativeStructure" name="x02" />
                                            <declaration type="DerivativeStructure" name="x03" />
                                            <declaration type="DerivativeStructure" name="x04" />
                                            <declaration type="DerivativeStructure" name="x05" />
                                            <declaration type="DerivativeStructure" name="x06" />
                                            <declaration type="DerivativeStructure" name="x07" />
                                            <declaration type="DerivativeStructure" name="x08" />
                                            <declaration type="DerivativeStructure" name="x09" />
                                            <declaration type="DerivativeStructure" name="x10" />
                                            <declaration type="DerivativeStructure" name="x11" />
                                            <declaration type="DerivativeStructure[]" name="f" />
                                            <scope startLine="1182" endLine="1189">
                                              <declaration type="double" name="temp" />
                                              <declaration type="DerivativeStructure" name="tmp1" />
                                              <declaration type="DerivativeStructure" name="tmp2" />
                                              <declaration type="DerivativeStructure" name="tmp3" />
                                              <declaration type="DerivativeStructure" name="tmp4" />
                                            </scope>
                                          </method>
                                          <declaration type="double[]" name="y" />
                                        </class>
                                      </class>
                                    </class>
                                  </class>
                                </class>
                              </class>
                            </class>
                          </class>
                        </class>
                      </class>
                    </class>
                  </class>
                </class>
              </class>
            </class>
          </class>
        </class>
      </class>
    </class>
  </class>
</source>
