<?xml version="1.0" encoding="UTF-8"?>
<source package="org.apache.commons.math3.optim.nonlinear.vector.jacobian">
  <import name="java.io.Serializable" />
  <import name="java.util.Arrays" />
  <import name="org.apache.commons.math3.exception.TooManyEvaluationsException" />
  <import name="org.apache.commons.math3.analysis.MultivariateVectorFunction" />
  <import name="org.apache.commons.math3.analysis.MultivariateMatrixFunction" />
  <import name="org.apache.commons.math3.optim.PointVectorValuePair" />
  <import name="org.apache.commons.math3.optim.InitialGuess" />
  <import name="org.apache.commons.math3.optim.MaxEval" />
  <import name="org.apache.commons.math3.optim.nonlinear.vector.Target" />
  <import name="org.apache.commons.math3.optim.nonlinear.vector.Weight" />
  <import name="org.apache.commons.math3.optim.nonlinear.vector.ModelFunction" />
  <import name="org.apache.commons.math3.optim.nonlinear.vector.ModelFunctionJacobian" />
  <import name="org.apache.commons.math3.util.FastMath" />
  <import name="org.junit.Assert" />
  <import name="org.junit.Test" />
  <class name="MinpackTest" startLine="36">
    <javadoc>
      <text>* <p>Some of the unit tests are re-implementations of the MINPACK <a
 * href="http://www.netlib.org/minpack/ex/file17">file17</a> and <a
 * href="http://www.netlib.org/minpack/ex/file22">file22</a> test files.
 * The redistribution policy for MINPACK is available <a
 * href="http://www.netlib.org/minpack/disclaimer">here</a>, for
 * convenience, it is reproduced below.</p>
 * <table border="0" width="80%" cellpadding="10" align="center" bgcolor="#E0E0E0">
 * <tr><td>
 * Minpack Copyright Notice (1999) University of Chicago.
 * All rights reserved
 * </td></tr>
 * <tr><td>
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * <ol>
 * <li>Redistributions of source code must retain the above copyright
 * notice, this list of conditions and the following disclaimer.</li>
 * <li>Redistributions in binary form must reproduce the above
 * copyright notice, this list of conditions and the following
 * disclaimer in the documentation and/or other materials provided
 * with the distribution.</li>
 * <li>The end-user documentation included with the redistribution, if any,
 * must include the following acknowledgment:
 * <code>This product includes software developed by the University of
 * Chicago, as Operator of Argonne National Laboratory.</code>
 * Alternately, this acknowledgment may appear in the software itself,
 * if and wherever such third-party acknowledgments normally appear.</li>
 * <li><strong>WARRANTY DISCLAIMER. THE SOFTWARE IS SUPPLIED "AS IS"
 * WITHOUT WARRANTY OF ANY KIND. THE COPYRIGHT HOLDER, THE
 * UNITED STATES, THE UNITED STATES DEPARTMENT OF ENERGY, AND
 * THEIR EMPLOYEES: (1) DISCLAIM ANY WARRANTIES, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO ANY IMPLIED WARRANTIES
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, TITLE
 * OR NON-INFRINGEMENT, (2) DO NOT ASSUME ANY LEGAL LIABILITY
 * OR RESPONSIBILITY FOR THE ACCURACY, COMPLETENESS, OR
 * USEFULNESS OF THE SOFTWARE, (3) DO NOT REPRESENT THAT USE OF
 * THE SOFTWARE WOULD NOT INFRINGE PRIVATELY OWNED RIGHTS, (4)
 * DO NOT WARRANT THAT THE SOFTWARE WILL FUNCTION
 * UNINTERRUPTED, THAT IT IS ERROR-FREE OR THAT ANY ERRORS WILL
 * BE CORRECTED.</strong></li>
 * <li><strong>LIMITATION OF LIABILITY. IN NO EVENT WILL THE COPYRIGHT
 * HOLDER, THE UNITED STATES, THE UNITED STATES DEPARTMENT OF
 * ENERGY, OR THEIR EMPLOYEES: BE LIABLE FOR ANY INDIRECT,
 * INCIDENTAL, CONSEQUENTIAL, SPECIAL OR PUNITIVE DAMAGES OF
 * ANY KIND OR NATURE, INCLUDING BUT NOT LIMITED TO LOSS OF
 * PROFITS OR LOSS OF DATA, FOR ANY REASON WHATSOEVER, WHETHER
 * SUCH LIABILITY IS ASSERTED ON THE BASIS OF CONTRACT, TORT
 * (INCLUDING NEGLIGENCE OR STRICT LIABILITY), OR OTHERWISE,
 * EVEN IF ANY OF SAID PARTIES HAS BEEN WARNED OF THE
 * POSSIBILITY OF SUCH LOSS OR DAMAGES.</strong></li>
 * <ol></td></tr>
 * </table></text>
      <author>Argonne National Laboratory. MINPACK project. March 1980 (original fortran minpack tests)</author>
      <author>Burton S. Garbow (original fortran minpack tests)</author>
      <author>Kenneth E. Hillstrom (original fortran minpack tests)</author>
      <author>Jorge J. More (original fortran minpack tests)</author>
      <author>Luc Maisonobe (non-minpack tests and minpack tests Java translation)</author>
    </javadoc>
    <method type="void" name="testMinpackLinearFullRank" startLine="101" endLine="106" />
    <method type="void" name="testMinpackLinearRank1" startLine="109" endLine="114" />
    <method type="void" name="testMinpackLinearRank1ZeroColsAndRows" startLine="117" endLine="120" />
    <method type="void" name="testMinpackRosenbrok" startLine="123" endLine="130" />
    <method type="void" name="testMinpackHelicalValley" startLine="133" endLine="140" />
    <method type="void" name="testMinpackPowellSingular" startLine="143" endLine="150" />
    <method type="void" name="testMinpackFreudensteinRoth" startLine="153" endLine="172" />
    <method type="void" name="testMinpackBard" startLine="175" endLine="194" />
    <method type="void" name="testMinpackKowalikOsborne" startLine="197" endLine="225" />
    <method type="void" name="testMinpackMeyer" startLine="228" endLine="243" />
    <method type="void" name="testMinpackWatson" startLine="246" endLine="325" />
    <method type="void" name="testMinpackBox3Dimensional" startLine="328" endLine="331" />
    <method type="void" name="testMinpackJennrichSampson" startLine="334" endLine="341">
      <comment>0.2578330049, 0.257829976764542</comment>
    </method>
    <method type="void" name="testMinpackBrownDennis" startLine="344" endLine="366" />
    <method type="void" name="testMinpackChebyquad" startLine="369" endLine="405" />
    <method type="void" name="testMinpackBrownAlmostLinear" startLine="408" endLine="474" />
    <method type="void" name="testMinpackOsborne1" startLine="477" endLine="485" />
    <method type="void" name="testMinpackOsborne2" startLine="488" endLine="502" />
    <method type="void" name="minpackTest" startLine="504" endLine="523">
      <declaration type="LevenbergMarquardtOptimizer" name="optimizer" />
      <scope startLine="509" endLine="520">
        <declaration type="PointVectorValuePair" name="optimum" />
      </scope>
      <scope startLine="520" endLine="522" />
    </method>
    <class name="MinpackFunction" startLine="525">
      <declaration type="int" name="n" />
      <declaration type="int" name="m" />
      <declaration type="double[]" name="startParams" />
      <declaration type="double" name="theoreticalMinCost" />
      <declaration type="double[]" name="theoreticalMinParams" />
      <declaration type="double" name="costAccuracy" />
      <declaration type="double" name="paramsAccuracy" />
      <method type="constructor" name="MinpackFunction" startLine="536" endLine="544" />
      <method type="double[]" name="buildArray" startLine="546" endLine="550">
        <declaration type="double[]" name="array" />
      </method>
      <method type="double[]" name="getTarget" startLine="552" endLine="554" />
      <method type="double[]" name="getWeight" startLine="556" endLine="558" />
      <method type="double[]" name="getStartPoint" startLine="560" endLine="562" />
      <method type="void" name="setCostAccuracy" startLine="564" endLine="566" />
      <method type="void" name="setParamsAccuracy" startLine="568" endLine="570" />
      <method type="int" name="getN" startLine="572" endLine="574" />
      <method type="void" name="checkTheoreticalMinCost" startLine="576" endLine="579">
        <declaration type="double" name="threshold" />
      </method>
      <method type="void" name="checkTheoreticalMinParams" startLine="581" endLine="590">
        <declaration type="double[]" name="params" />
        <scope startLine="583" endLine="589">
          <scope startLine="584" endLine="588">
            <declaration type="double" name="mi" />
            <declaration type="double" name="vi" />
          </scope>
        </scope>
      </method>
      <method type="ModelFunction" name="getModelFunction" startLine="592" endLine="598">
        <method type="double[]" name="value" startLine="594" endLine="596" />
      </method>
      <method type="ModelFunctionJacobian" name="getModelFunctionJacobian" startLine="600" endLine="606">
        <method type="double[][]" name="value" startLine="602" endLine="604" />
      </method>
      <method name="computeJacobian" type="double[][]" startLine="608" endLine="608" />
      <method name="computeValue" type="double[]" startLine="609" endLine="609" />
      <class name="LinearFullRankFunction" extends="MinpackFunction" startLine="612">
        <declaration type="long" name="serialVersionUID" />
        <method type="constructor" name="LinearFullRankFunction" startLine="617" endLine="620" />
        <method type="double[][]" name="computeJacobian" startLine="623" endLine="633">
          <declaration type="double" name="t" />
          <declaration type="double[][][]" name="jacobian" />
          <scope startLine="626" endLine="631">
            <scope startLine="628" endLine="630" />
          </scope>
        </method>
        <method type="double[]" name="computeValue" startLine="636" endLine="648">
          <declaration type="double" name="sum" />
          <scope startLine="638" endLine="640" />
          <declaration type="double" name="t" />
          <declaration type="double[]" name="f" />
          <scope startLine="643" endLine="645" />
        </method>
        <class name="LinearRank1Function" extends="MinpackFunction" startLine="651">
          <declaration type="long" name="serialVersionUID" />
          <method type="constructor" name="LinearRank1Function" startLine="656" endLine="658" />
          <method type="double[][]" name="computeJacobian" startLine="661" endLine="670">
            <declaration type="double[][][]" name="jacobian" />
            <scope startLine="663" endLine="668">
              <scope startLine="665" endLine="667" />
            </scope>
          </method>
          <method type="double[]" name="computeValue" startLine="673" endLine="683">
            <declaration type="double[]" name="f" />
            <declaration type="double" name="sum" />
            <scope startLine="676" endLine="678" />
            <scope startLine="679" endLine="681" />
          </method>
          <class name="LinearRank1ZeroColsAndRowsFunction" extends="MinpackFunction" startLine="686">
            <declaration type="long" name="serialVersionUID" />
            <method type="constructor" name="LinearRank1ZeroColsAndRowsFunction" startLine="689" endLine="693" />
            <method type="double[][]" name="computeJacobian" startLine="696" endLine="713">
              <declaration type="double[][][]" name="jacobian" />
              <scope startLine="698" endLine="711">
                <scope startLine="701" endLine="709">
                  <scope startLine="702" endLine="704" />
                  <scope startLine="704" endLine="706" />
                  <scope startLine="706" endLine="708" />
                </scope>
              </scope>
            </method>
            <method type="double[]" name="computeValue" startLine="716" endLine="727">
              <declaration type="double[]" name="f" />
              <declaration type="double" name="sum" />
              <scope startLine="719" endLine="721" />
              <scope startLine="722" endLine="724" />
            </method>
            <class name="RosenbrockFunction" extends="MinpackFunction" startLine="730">
              <declaration type="long" name="serialVersionUID" />
              <method type="constructor" name="RosenbrockFunction" startLine="732" endLine="734" />
              <method type="double[][]" name="computeJacobian" startLine="737" endLine="740">
                <declaration type="double" name="x1" />
              </method>
              <method type="double[]" name="computeValue" startLine="743" endLine="747">
                <declaration type="double" name="x1" />
                <declaration type="double" name="x2" />
              </method>
              <class name="HelicalValleyFunction" extends="MinpackFunction" startLine="750">
                <declaration type="long" name="serialVersionUID" />
                <method type="constructor" name="HelicalValleyFunction" startLine="753" endLine="755" />
                <method type="double[][]" name="computeJacobian" startLine="758" endLine="769">
                  <declaration type="double" name="x1" />
                  <declaration type="double" name="x2" />
                  <declaration type="double" name="tmpSquare" />
                  <declaration type="double" name="tmp1" />
                  <declaration type="double" name="tmp2" />
                </method>
                <method type="double[]" name="computeValue" startLine="772" endLine="791">
                  <declaration type="double" name="x1" />
                  <declaration type="double" name="x2" />
                  <declaration type="double" name="x3" />
                  <declaration type="double" name="tmp1" />
                  <scope startLine="777" endLine="779" />
                  <scope startLine="779" endLine="784">
                    <scope startLine="781" endLine="783" />
                  </scope>
                  <declaration type="double" name="tmp2" />
                </method>
                <declaration type="double" name="twoPi" />
                <class name="PowellSingularFunction" extends="MinpackFunction" startLine="796">
                  <declaration type="long" name="serialVersionUID" />
                  <method type="constructor" name="PowellSingularFunction" startLine="800" endLine="802" />
                  <method type="double[][]" name="computeJacobian" startLine="805" endLine="816">
                    <declaration type="double" name="x1" />
                    <declaration type="double" name="x2" />
                    <declaration type="double" name="x3" />
                    <declaration type="double" name="x4" />
                  </method>
                  <method type="double[]" name="computeValue" startLine="819" endLine="830">
                    <declaration type="double" name="x1" />
                    <declaration type="double" name="x2" />
                    <declaration type="double" name="x3" />
                    <declaration type="double" name="x4" />
                  </method>
                  <declaration type="double" name="sqrt5" />
                  <declaration type="double" name="sqrt10" />
                  <class name="FreudensteinRothFunction" extends="MinpackFunction" startLine="836">
                    <declaration type="long" name="serialVersionUID" />
                    <method type="constructor" name="FreudensteinRothFunction" startLine="842" endLine="845" />
                    <method type="double[][]" name="computeJacobian" startLine="848" endLine="854">
                      <declaration type="double" name="x2" />
                    </method>
                    <method type="double[]" name="computeValue" startLine="857" endLine="864">
                      <declaration type="double" name="x1" />
                      <declaration type="double" name="x2" />
                    </method>
                    <class name="BardFunction" extends="MinpackFunction" startLine="867">
                      <declaration type="long" name="serialVersionUID" />
                      <method type="constructor" name="BardFunction" startLine="873" endLine="876" />
                      <method type="double[][]" name="computeJacobian" startLine="879" endLine="892">
                        <declaration type="double" name="x2" />
                        <declaration type="double" name="x3" />
                        <declaration type="double[][][]" name="jacobian" />
                        <scope startLine="883" endLine="890">
                          <declaration type="double" name="tmp1" />
                          <declaration type="double" name="tmp2" />
                          <declaration type="double" name="tmp3" />
                          <declaration type="double" name="tmp4" />
                        </scope>
                      </method>
                      <method type="double[]" name="computeValue" startLine="895" endLine="907">
                        <declaration type="double" name="x1" />
                        <declaration type="double" name="x2" />
                        <declaration type="double" name="x3" />
                        <declaration type="double[]" name="f" />
                        <scope startLine="900" endLine="905">
                          <declaration type="double" name="tmp1" />
                          <declaration type="double" name="tmp2" />
                          <declaration type="double" name="tmp3" />
                        </scope>
                      </method>
                      <declaration type="double[]" name="y" />
                      <class name="KowalikOsborneFunction" extends="MinpackFunction" startLine="916">
                        <declaration type="long" name="serialVersionUID" />
                        <method type="constructor" name="KowalikOsborneFunction" startLine="922" endLine="929">
                          <scope startLine="925" endLine="928" />
                        </method>
                        <method type="double[][]" name="computeJacobian" startLine="932" endLine="947">
                          <declaration type="double" name="x1" />
                          <declaration type="double" name="x2" />
                          <declaration type="double" name="x3" />
                          <declaration type="double" name="x4" />
                          <declaration type="double[][][]" name="jacobian" />
                          <scope startLine="938" endLine="945">
                            <declaration type="double" name="tmp" />
                            <declaration type="double" name="j1" />
                            <declaration type="double" name="j2" />
                            <declaration type="double" name="j3" />
                            <declaration type="double" name="j4" />
                          </scope>
                        </method>
                        <method type="double[]" name="computeValue" startLine="950" endLine="960">
                          <declaration type="double" name="x1" />
                          <declaration type="double" name="x2" />
                          <declaration type="double" name="x3" />
                          <declaration type="double" name="x4" />
                          <declaration type="double[]" name="f" />
                          <scope startLine="956" endLine="958" />
                        </method>
                        <declaration type="double[]" name="v" />
                        <declaration type="double[]" name="y" />
                        <class name="MeyerFunction" extends="MinpackFunction" startLine="972">
                          <declaration type="long" name="serialVersionUID" />
                          <method type="constructor" name="MeyerFunction" startLine="978" endLine="985">
                            <scope startLine="981" endLine="984" />
                          </method>
                          <method type="double[][]" name="computeJacobian" startLine="988" endLine="1001">
                            <declaration type="double" name="x1" />
                            <declaration type="double" name="x2" />
                            <declaration type="double" name="x3" />
                            <declaration type="double[][][]" name="jacobian" />
                            <scope startLine="993" endLine="999">
                              <declaration type="double" name="temp" />
                              <declaration type="double" name="tmp1" />
                              <declaration type="double" name="tmp2" />
                              <declaration type="double" name="tmp3" />
                            </scope>
                          </method>
                          <method type="double[]" name="computeValue" startLine="1004" endLine="1013">
                            <declaration type="double" name="x1" />
                            <declaration type="double" name="x2" />
                            <declaration type="double" name="x3" />
                            <declaration type="double[]" name="f" />
                            <scope startLine="1009" endLine="1011" />
                          </method>
                          <declaration type="double[]" name="y" />
                          <class name="WatsonFunction" extends="MinpackFunction" startLine="1023">
                            <declaration type="long" name="serialVersionUID" />
                            <method type="constructor" name="WatsonFunction" startLine="1029" endLine="1032" />
                            <method type="double[][]" name="computeJacobian" startLine="1035" endLine="1063">
                              <declaration type="double[][][]" name="jacobian" />
                              <scope startLine="1038" endLine="1053">
                                <declaration type="double" name="div" />
                                <declaration type="double" name="s2" />
                                <declaration type="double" name="dx" />
                                <scope startLine="1042" endLine="1045" />
                                <declaration type="double" name="temp" />
                                <scope startLine="1049" endLine="1052" />
                              </scope>
                            </method>
                            <method type="double[]" name="computeValue" startLine="1066" endLine="1091">
                              <declaration type="double[]" name="f" />
                              <scope startLine="1068" endLine="1083">
                                <declaration type="double" name="div" />
                                <declaration type="double" name="s1" />
                                <declaration type="double" name="dx" />
                                <scope startLine="1072" endLine="1075" />
                                <declaration type="double" name="s2" />
                                <scope startLine="1078" endLine="1081" />
                              </scope>
                              <declaration type="double" name="x1" />
                              <declaration type="double" name="x2" />
                            </method>
                            <class name="Box3DimensionalFunction" extends="MinpackFunction" startLine="1094">
                              <declaration type="long" name="serialVersionUID" />
                              <method type="constructor" name="Box3DimensionalFunction" startLine="1098" endLine="1101" />
                              <method type="double[][]" name="computeJacobian" startLine="1104" endLine="1117">
                                <declaration type="double" name="x1" />
                                <declaration type="double" name="x2" />
                                <declaration type="double[][][]" name="jacobian" />
                                <scope startLine="1108" endLine="1115">
                                  <declaration type="double" name="tmp" />
                                </scope>
                              </method>
                              <method type="double[]" name="computeValue" startLine="1120" endLine="1131">
                                <declaration type="double" name="x1" />
                                <declaration type="double" name="x2" />
                                <declaration type="double" name="x3" />
                                <declaration type="double[]" name="f" />
                                <scope startLine="1125" endLine="1129">
                                  <declaration type="double" name="tmp" />
                                </scope>
                              </method>
                              <class name="JennrichSampsonFunction" extends="MinpackFunction" startLine="1134">
                                <declaration type="long" name="serialVersionUID" />
                                <method type="constructor" name="JennrichSampsonFunction" startLine="1140" endLine="1143" />
                                <method type="double[][]" name="computeJacobian" startLine="1146" endLine="1155">
                                  <declaration type="double" name="x1" />
                                  <declaration type="double" name="x2" />
                                  <declaration type="double[][][]" name="jacobian" />
                                  <scope startLine="1150" endLine="1153">
                                    <declaration type="double" name="t" />
                                  </scope>
                                </method>
                                <method type="double[]" name="computeValue" startLine="1158" endLine="1167">
                                  <declaration type="double" name="x1" />
                                  <declaration type="double" name="x2" />
                                  <declaration type="double[]" name="f" />
                                  <scope startLine="1162" endLine="1165">
                                    <declaration type="double" name="temp" />
                                  </scope>
                                </method>
                                <class name="BrownDennisFunction" extends="MinpackFunction" startLine="1170">
                                  <declaration type="long" name="serialVersionUID" />
                                  <method type="constructor" name="BrownDennisFunction" startLine="1176" endLine="1180" />
                                  <method type="double[][]" name="computeJacobian" startLine="1183" endLine="1199">
                                    <declaration type="double" name="x1" />
                                    <declaration type="double" name="x2" />
                                    <declaration type="double" name="x3" />
                                    <declaration type="double" name="x4" />
                                    <declaration type="double[][][]" name="jacobian" />
                                    <scope startLine="1189" endLine="1197">
                                      <declaration type="double" name="temp" />
                                      <declaration type="double" name="ti" />
                                      <declaration type="double" name="tmp1" />
                                      <declaration type="double" name="tmp2" />
                                    </scope>
                                  </method>
                                  <method type="double[]" name="computeValue" startLine="1202" endLine="1215">
                                    <declaration type="double" name="x1" />
                                    <declaration type="double" name="x2" />
                                    <declaration type="double" name="x3" />
                                    <declaration type="double" name="x4" />
                                    <declaration type="double[]" name="f" />
                                    <scope startLine="1208" endLine="1213">
                                      <declaration type="double" name="temp" />
                                      <declaration type="double" name="tmp1" />
                                      <declaration type="double" name="tmp2" />
                                    </scope>
                                  </method>
                                  <class name="ChebyquadFunction" extends="MinpackFunction" startLine="1218">
                                    <declaration type="long" name="serialVersionUID" />
                                    <method type="double[]" name="buildChebyquadArray" startLine="1221" endLine="1228">
                                      <declaration type="double[]" name="array" />
                                      <declaration type="double" name="inv" />
                                      <scope startLine="1224" endLine="1226" />
                                    </method>
                                    <method type="constructor" name="ChebyquadFunction" startLine="1233" endLine="1236" />
                                    <method type="double[][]" name="computeJacobian" startLine="1239" endLine="1264">
                                      <declaration type="double[][][]" name="jacobian" />
                                      <scope startLine="1241" endLine="1243" />
                                      <declaration type="double" name="dx" />
                                      <scope startLine="1246" endLine="1261">
                                        <declaration type="double" name="tmp1" />
                                        <declaration type="double" name="tmp2" />
                                        <declaration type="double" name="temp" />
                                        <declaration type="double" name="tmp3" />
                                        <declaration type="double" name="tmp4" />
                                        <scope startLine="1252" endLine="1260">
                                          <declaration type="double" name="ti" />
                                        </scope>
                                      </scope>
                                    </method>
                                    <method type="double[]" name="computeValue" startLine="1267" endLine="1293">
                                      <declaration type="double[]" name="f" />
                                      <scope startLine="1270" endLine="1280">
                                        <declaration type="double" name="tmp1" />
                                        <declaration type="double" name="tmp2" />
                                        <declaration type="double" name="temp" />
                                        <scope startLine="1274" endLine="1279">
                                          <declaration type="double" name="ti" />
                                        </scope>
                                      </scope>
                                      <declaration type="double" name="dx" />
                                      <declaration type="boolean" name="iev" />
                                      <scope startLine="1284" endLine="1290">
                                        <scope startLine="1286" endLine="1288" />
                                      </scope>
                                    </method>
                                    <class name="BrownAlmostLinearFunction" extends="MinpackFunction" startLine="1296">
                                      <declaration type="long" name="serialVersionUID" />
                                      <method type="constructor" name="BrownAlmostLinearFunction" startLine="1302" endLine="1305" />
                                      <method type="double[][]" name="computeJacobian" startLine="1308" endLine="1338">
                                        <declaration type="double[][][]" name="jacobian" />
                                        <scope startLine="1310" endLine="1312" />
                                        <declaration type="double" name="prod" />
                                        <scope startLine="1315" endLine="1321">
                                          <scope startLine="1317" endLine="1319" />
                                        </scope>
                                        <scope startLine="1323" endLine="1335">
                                          <declaration type="double" name="temp" />
                                          <scope startLine="1325" endLine="1333">
                                            <scope startLine="1328" endLine="1332">
                                              <scope startLine="1329" endLine="1331" />
                                            </scope>
                                          </scope>
                                        </scope>
                                      </method>
                                      <method type="double[]" name="computeValue" startLine="1341" endLine="1354">
                                        <declaration type="double[]" name="f" />
                                        <declaration type="double" name="sum" />
                                        <declaration type="double" name="prod" />
                                        <scope startLine="1345" endLine="1348" />
                                        <scope startLine="1349" endLine="1351" />
                                      </method>
                                      <class name="Osborne1Function" extends="MinpackFunction" startLine="1357">
                                        <declaration type="long" name="serialVersionUID" />
                                        <method type="constructor" name="Osborne1Function" startLine="1363" endLine="1366" />
                                        <method type="double[][]" name="computeJacobian" startLine="1369" endLine="1384">
                                          <declaration type="double" name="x2" />
                                          <declaration type="double" name="x3" />
                                          <declaration type="double" name="x4" />
                                          <declaration type="double" name="x5" />
                                          <declaration type="double[][][]" name="jacobian" />
                                          <scope startLine="1375" endLine="1382">
                                            <declaration type="double" name="temp" />
                                            <declaration type="double" name="tmp1" />
                                            <declaration type="double" name="tmp2" />
                                          </scope>
                                        </method>
                                        <method type="double[]" name="computeValue" startLine="1387" endLine="1401">
                                          <declaration type="double" name="x1" />
                                          <declaration type="double" name="x2" />
                                          <declaration type="double" name="x3" />
                                          <declaration type="double" name="x4" />
                                          <declaration type="double" name="x5" />
                                          <declaration type="double[]" name="f" />
                                          <scope startLine="1394" endLine="1399">
                                            <declaration type="double" name="temp" />
                                            <declaration type="double" name="tmp1" />
                                            <declaration type="double" name="tmp2" />
                                          </scope>
                                        </method>
                                        <declaration type="double[]" name="y" />
                                        <class name="Osborne2Function" extends="MinpackFunction" startLine="1410">
                                          <declaration type="long" name="serialVersionUID" />
                                          <method type="constructor" name="Osborne2Function" startLine="1416" endLine="1419" />
                                          <method type="double[][]" name="computeJacobian" startLine="1422" endLine="1456">
                                            <declaration type="double" name="x01" />
                                            <declaration type="double" name="x02" />
                                            <declaration type="double" name="x03" />
                                            <declaration type="double" name="x04" />
                                            <declaration type="double" name="x05" />
                                            <declaration type="double" name="x06" />
                                            <declaration type="double" name="x07" />
                                            <declaration type="double" name="x08" />
                                            <declaration type="double" name="x09" />
                                            <declaration type="double" name="x10" />
                                            <declaration type="double" name="x11" />
                                            <declaration type="double[][][]" name="jacobian" />
                                            <scope startLine="1435" endLine="1454">
                                              <declaration type="double" name="temp" />
                                              <declaration type="double" name="tmp1" />
                                              <declaration type="double" name="tmp2" />
                                              <declaration type="double" name="tmp3" />
                                              <declaration type="double" name="tmp4" />
                                            </scope>
                                          </method>
                                          <method type="double[]" name="computeValue" startLine="1459" endLine="1481">
                                            <declaration type="double" name="x01" />
                                            <declaration type="double" name="x02" />
                                            <declaration type="double" name="x03" />
                                            <declaration type="double" name="x04" />
                                            <declaration type="double" name="x05" />
                                            <declaration type="double" name="x06" />
                                            <declaration type="double" name="x07" />
                                            <declaration type="double" name="x08" />
                                            <declaration type="double" name="x09" />
                                            <declaration type="double" name="x10" />
                                            <declaration type="double" name="x11" />
                                            <declaration type="double[]" name="f" />
                                            <scope startLine="1472" endLine="1479">
                                              <declaration type="double" name="temp" />
                                              <declaration type="double" name="tmp1" />
                                              <declaration type="double" name="tmp2" />
                                              <declaration type="double" name="tmp3" />
                                              <declaration type="double" name="tmp4" />
                                            </scope>
                                          </method>
                                          <declaration type="double[]" name="y" />
                                        </class>
                                      </class>
                                    </class>
                                  </class>
                                </class>
                              </class>
                            </class>
                          </class>
                        </class>
                      </class>
                    </class>
                  </class>
                </class>
              </class>
            </class>
          </class>
        </class>
      </class>
    </class>
  </class>
</source>
