<?xml version="1.0" encoding="UTF-8"?>
<source package="org.apache.commons.math3.geometry.euclidean.threed">
  <import name="org.apache.commons.math3.TestUtils" />
  <import name="org.apache.commons.math3.analysis.differentiation.DerivativeStructure" />
  <import name="org.apache.commons.math3.exception.DimensionMismatchException" />
  <import name="org.apache.commons.math3.util.FastMath" />
  <import name="org.junit.Assert" />
  <import name="org.junit.Test" />
  <class name="SphericalCoordinatesTest" startLine="27">
    <method type="void" name="testCoordinatesStoC" startLine="30" endLine="44">
      <declaration type="double" name="piO2" />
      <declaration type="SphericalCoordinates" name="sc1" />
      <declaration type="SphericalCoordinates" name="sc2" />
      <declaration type="SphericalCoordinates" name="sc3" />
      <declaration type="SphericalCoordinates" name="sc4" />
      <declaration type="SphericalCoordinates" name="sc5" />
      <declaration type="SphericalCoordinates" name="sc6" />
    </method>
    <method type="void" name="testCoordinatesCtoS" startLine="47" endLine="73">
      <declaration type="double" name="piO2" />
      <declaration type="SphericalCoordinates" name="sc1" />
      <declaration type="SphericalCoordinates" name="sc2" />
      <declaration type="SphericalCoordinates" name="sc3" />
      <declaration type="SphericalCoordinates" name="sc4" />
      <declaration type="SphericalCoordinates" name="sc5" />
      <declaration type="SphericalCoordinates" name="sc6" />
      <comment>don't check theta on poles, as it is singular</comment>
      <comment>don't check theta on poles, as it is singular</comment>
    </method>
    <method type="void" name="testGradient" startLine="76" endLine="105">
      <scope startLine="77" endLine="104">
        <scope startLine="78" endLine="103">
          <scope startLine="79" endLine="102">
            <declaration type="SphericalCoordinates" name="sc" />
            <declaration type="DerivativeStructure" name="svalue" />
            <declaration type="double[][]" name="sGradient" />
            <declaration type="DerivativeStructure" name="cvalue" />
            <declaration type="Vector3D" name="refCGradient" />
            <declaration type="Vector3D" name="testCGradient" />
          </scope>
        </scope>
      </scope>
    </method>
    <method type="void" name="testHessian" startLine="108" endLine="164">
      <scope startLine="109" endLine="163">
        <scope startLine="110" endLine="162">
          <scope startLine="111" endLine="161">
            <declaration type="SphericalCoordinates" name="sc" />
            <declaration type="DerivativeStructure" name="svalue" />
            <declaration type="double[][]" name="sGradient" />
            <declaration type="double[][]" name="sHessian" />
            <declaration type="DerivativeStructure" name="cvalue" />
            <declaration type="double[][]" name="refCHessian" />
            <declaration type="double" name="norm" />
            <scope startLine="147" endLine="151">
              <scope startLine="148" endLine="150" />
            </scope>
            <declaration type="double[][]" name="testCHessian" />
            <scope startLine="154" endLine="159">
              <scope startLine="155" endLine="158" />
            </scope>
          </scope>
        </scope>
        <comment>d2F/dR2</comment>
        <comment>d2F/dRdTheta</comment>
        <comment>d2F/dRdPhi</comment>
        <comment>just to check upper-right part is not used</comment>
        <comment>d2F/dTheta2</comment>
        <comment>d2F/dThetadPhi</comment>
        <comment>just to check upper-right part is not used</comment>
        <comment>just to check upper-right part is not used</comment>
        <comment>d2F/dPhi2</comment>
        <comment>d2F/dX2</comment>
        <comment>d2F/dXdY</comment>
        <comment>d2F/dXdZ</comment>
        <comment>d2F/dY2</comment>
        <comment>d2F/dYdZ</comment>
        <comment>d2F/dZ2</comment>
      </scope>
    </method>
    <method type="DerivativeStructure" name="valueCartesian" startLine="166" endLine="168" />
    <method type="DerivativeStructure" name="valueSpherical" startLine="170" endLine="174" />
    <method type="void" name="testSerialization" startLine="177" endLine="184">
      <declaration type="SphericalCoordinates" name="a" />
      <declaration type="SphericalCoordinates" name="b" />
    </method>
  </class>
</source>
