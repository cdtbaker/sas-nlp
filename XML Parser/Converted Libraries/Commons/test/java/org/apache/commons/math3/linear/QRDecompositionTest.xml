<?xml version="1.0" encoding="UTF-8"?>
<source package="org.apache.commons.math3.linear">
  <import name="java.util.Random" />
  <import name="org.apache.commons.math3.linear.SingularMatrixException" />
  <import name="org.junit.Assert" />
  <import name="org.junit.Test" />
  <class name="QRDecompositionTest" startLine="27">
    <declaration type="double[][]" name="testData3x3NonSingular" />
    <declaration type="double[][]" name="testData3x3Singular" />
    <declaration type="double[][]" name="testData3x4" />
    <declaration type="double[][]" name="testData4x3" />
    <declaration type="double" name="entryTolerance" />
    <declaration type="double" name="normTolerance" />
    <javadoc>
      <text>* test dimensions</text>
    </javadoc>
    <method type="void" name="testDimensions" startLine="55" endLine="68">
      <declaration type="Random" name="r" />
      <declaration type="int" name="p" />
      <declaration type="int" name="q" />
    </method>
    <method type="void" name="checkDimension" startLine="70" endLine="78">
      <declaration type="int" name="rows" />
      <declaration type="int" name="columns" />
      <declaration type="QRDecomposition" name="qr" />
    </method>
    <javadoc>
      <text>* test A = QR</text>
    </javadoc>
    <method type="void" name="testAEqualQR" startLine="82" endLine="98">
      <declaration type="Random" name="r" />
      <declaration type="int" name="p" />
      <declaration type="int" name="q" />
    </method>
    <method type="void" name="checkAEqualQR" startLine="100" endLine="104">
      <declaration type="QRDecomposition" name="qr" />
      <declaration type="double" name="norm" />
    </method>
    <javadoc>
      <text>* test the orthogonality of Q</text>
    </javadoc>
    <method type="void" name="testQOrthogonal" startLine="108" endLine="124">
      <declaration type="Random" name="r" />
      <declaration type="int" name="p" />
      <declaration type="int" name="q" />
    </method>
    <method type="void" name="checkQOrthogonal" startLine="126" endLine="131">
      <declaration type="QRDecomposition" name="qr" />
      <declaration type="RealMatrix" name="eye" />
      <declaration type="double" name="norm" />
    </method>
    <javadoc>
      <text>* test that R is upper triangular</text>
    </javadoc>
    <method type="void" name="testRUpperTriangular" startLine="135" endLine="157">
      <declaration type="RealMatrix" name="matrix" />
      <declaration type="Random" name="r" />
      <declaration type="int" name="p" />
      <declaration type="int" name="q" />
    </method>
    <method type="void" name="checkUpperTriangular" startLine="159" endLine="168">
      <method type="void" name="visit" startLine="162" endLine="166">
        <scope startLine="163" endLine="165" />
      </method>
    </method>
    <javadoc>
      <text>* test that H is trapezoidal</text>
    </javadoc>
    <method type="void" name="testHTrapezoidal" startLine="172" endLine="194">
      <declaration type="RealMatrix" name="matrix" />
      <declaration type="Random" name="r" />
      <declaration type="int" name="p" />
      <declaration type="int" name="q" />
    </method>
    <method type="void" name="checkTrapezoidal" startLine="196" endLine="205">
      <method type="void" name="visit" startLine="199" endLine="203">
        <scope startLine="200" endLine="202" />
      </method>
    </method>
    <javadoc>
      <text>* test matrices values</text>
    </javadoc>
    <method type="void" name="testMatricesValues" startLine="208" endLine="242">
      <declaration type="QRDecomposition" name="qr" />
      <declaration type="RealMatrix[]" name="qRef" />
      <declaration type="RealMatrix[]" name="rRef" />
      <declaration type="RealMatrix[]" name="hRef" />
      <declaration type="RealMatrix" name="q" />
      <declaration type="RealMatrix" name="qT" />
      <declaration type="RealMatrix" name="r" />
      <declaration type="RealMatrix" name="h" />
      <comment>check values against known references</comment>
      <comment>check the same cached instance is returned the second time</comment>
    </method>
    <method type="void" name="testNonInvertible" startLine="245" endLine="249">
      <declaration type="QRDecomposition" name="qr" />
    </method>
    <method type="RealMatrix" name="createTestMatrix" startLine="251" endLine="260">
      <declaration type="RealMatrix" name="m" />
      <method type="double" name="visit" startLine="255" endLine="257" />
    </method>
  </class>
</source>
