<?xml version="1.0" encoding="UTF-8"?>
<source package="org.apache.commons.math3.analysis.integration.gauss">
  <import name="org.apache.commons.math3.analysis.function.Power" />
  <import name="org.junit.Test" />
  <import name="org.junit.Assert" />
  <class name="GaussianQuadratureAbstractTest" startLine="23">
    <javadoc>
      <text>* Base class for standard testing of Gaussian quadrature rules,
 * which are exact for polynomials up to a certain degree. In this test, each
 * monomial in turn is tested against the specified quadrature rule.</text>
      <version>$Id$</version>
    </javadoc>
    <javadoc>
      <text>* The maximum absolute error (for zero testing).</text>
    </javadoc>
    <declaration type="double" name="eps" />
    <javadoc>
      <text>* The maximum relative error (in ulps).</text>
    </javadoc>
    <declaration type="double" name="numUlps" />
    <javadoc>
      <text>* The quadrature rule under test.</text>
    </javadoc>
    <declaration type="GaussIntegrator" name="integrator" />
    <javadoc>
      <text>* Maximum degree of monomials to be tested.</text>
    </javadoc>
    <declaration type="int" name="maxDegree" />
    <javadoc>
      <text>* Creates a new instance of this abstract test with the specified
 * quadrature rule.
 * If the expected value is non-zero, equality of actual and expected values
 * is checked in the relative sense <center>
 * |x<sub>act</sub>&nbsp;-&nbsp;x<sub>exp</sub>|&nbsp;&le;&nbsp; n&nbsp;
 * <code>Math.ulp(</code>x<sub>exp</sub><code>)</code>, </center> where n is
 * the maximum relative error (in ulps). If the expected value is zero, the
 * test checks that <center> |x<sub>act</sub>|&nbsp;&le;&nbsp;&epsilon;,
 * </center> where &epsilon; is the maximum absolute error.</text>
      <param>integrator Quadrature rule under test.</param>
      <param>maxDegree Maximum degree of monomials to be tested.</param>
      <param>eps &epsilon;.</param>
      <param>numUlps Value of the maximum relative error (in ulps).</param>
    </javadoc>
    <method type="constructor" name="GaussianQuadratureAbstractTest" startLine="67" endLine="72" />
    <method name="getExpectedValue" type="double" startLine="74" endLine="82" />
    <javadoc>
      <text>* Returns the expected value of the integral of the specified monomial.
 * The integration is carried out on the natural interval of the quadrature
 * rule under test.</text>
      <param>n Degree of the monomial.</param>
      <return>the expected value of the integral of x<sup>n</sup>.</return>
    </javadoc>
    <javadoc>
      <text>* Checks that the value of the integral of each monomial
 * <code>x<sup>0</sup>, ... , x<sup>p</sup></code>
 * returned by the quadrature rule under test conforms with the expected
 * value.
 * Here {@code p} denotes the degree of the highest polynomial for which
 * exactness is to be expected.</text>
    </javadoc>
    <method type="void" name="testAllMonomials" startLine="93" endLine="115">
      <scope startLine="94" endLine="114">
        <declaration type="double" name="expected" />
        <declaration type="Power" name="monomial" />
        <declaration type="double" name="actual" />
        <scope startLine="102" endLine="107" />
        <scope startLine="107" endLine="113">
          <declaration type="double" name="err" />
        </scope>
        <comment>System.out.println(n + "/" + maxDegree + " " + integrator.getNumberOfPoints()</comment>
        <comment>+ " " + expected + " " + actual + " " + Math.ulp(expected));</comment>
      </scope>
    </method>
  </class>
</source>
