<?xml version="1.0" encoding="UTF-8"?>
<source package="org.apache.commons.math3.optimization">
  <import name="org.apache.commons.math3.analysis.differentiation.MultivariateDifferentiableVectorFunction" />
  <import name="org.apache.commons.math3.random.RandomVectorGenerator" />
  <class name="MultivariateDifferentiableVectorMultiStartOptimizer" extends="BaseMultivariateVectorMultiStartOptimizer<MultivariateDifferentiableVectorFunction>" startLine="23">
    <implements name="MultivariateDifferentiableVectorOptimizer" />
    <javadoc>
      <text>* Special implementation of the {@link MultivariateDifferentiableVectorOptimizer}interface adding multi-start features to an existing optimizer.
 * This class wraps a classical optimizer to use it several times in
 * turn with different starting points in order to avoid being trapped
 * into a local extremum when looking for a global one.</text>
      <version>$Id: MultivariateDifferentiableVectorMultiStartOptimizer.java 1422230 2012-12-15 12:11:13Z erans $</version>
      <deprecated>As of 3.1 (to be removed in 4.0).</deprecated>
      <since>3.1</since>
    </javadoc>
    <javadoc>
      <text>* Create a multi-start optimizer from a single-start optimizer.</text>
      <param>optimizer Single-start optimizer to wrap.</param>
      <param>starts Number of starts to perform (including the
 * first one), multi-start is disabled if value is less than or
 * equal to 1.</param>
      <param>generator Random vector generator to use for restarts.</param>
    </javadoc>
    <method type="constructor" name="MultivariateDifferentiableVectorMultiStartOptimizer" startLine="51" endLine="53" />
  </class>
</source>
