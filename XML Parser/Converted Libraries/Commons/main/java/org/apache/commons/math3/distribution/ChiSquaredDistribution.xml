<?xml version="1.0" encoding="UTF-8"?>
<source package="org.apache.commons.math3.distribution">
  <import name="org.apache.commons.math3.random.RandomGenerator" />
  <import name="org.apache.commons.math3.random.Well19937c" />
  <class name="ChiSquaredDistribution" extends="AbstractRealDistribution" startLine="22">
    <javadoc>
      <text>* Implementation of the chi-squared distribution.</text>
      <see><a href="http://en.wikipedia.org/wiki/Chi-squared_distribution">Chi-squared distribution (Wikipedia)</a></see>
      <see><a href="http://mathworld.wolfram.com/Chi-SquaredDistribution.html">Chi-squared Distribution (MathWorld)</a></see>
      <version>$Id: ChiSquaredDistribution.java 1416643 2012-12-03 19:37:14Z tn $</version>
    </javadoc>
    <javadoc>
      <text>* Default inverse cumulative probability accuracy</text>
      <since>2.1</since>
    </javadoc>
    <declaration type="double" name="DEFAULT_INVERSE_ABSOLUTE_ACCURACY" />
    <javadoc>
      <text>* Serializable version identifier</text>
    </javadoc>
    <declaration type="long" name="serialVersionUID" />
    <javadoc>
      <text>* Internal Gamma distribution.</text>
    </javadoc>
    <declaration type="GammaDistribution" name="gamma" />
    <javadoc>
      <text>* Inverse cumulative probability accuracy</text>
    </javadoc>
    <declaration type="double" name="solverAbsoluteAccuracy" />
    <javadoc>
      <text>* Create a Chi-Squared distribution with the given degrees of freedom.</text>
      <param>degreesOfFreedom Degrees of freedom.</param>
    </javadoc>
    <method type="constructor" name="ChiSquaredDistribution" startLine="47" endLine="49" />
    <javadoc>
      <text>* Create a Chi-Squared distribution with the given degrees of freedom and
 * inverse cumulative probability accuracy.</text>
      <param>degreesOfFreedom Degrees of freedom.</param>
      <param>inverseCumAccuracy the maximum absolute error in inverse
 * cumulative probability estimates (defaults to{@link #DEFAULT_INVERSE_ABSOLUTE_ACCURACY}).</param>
      <since>2.1</since>
    </javadoc>
    <method type="constructor" name="ChiSquaredDistribution" startLine="62" endLine="64" />
    <javadoc>
      <text>* Create a Chi-Squared distribution with the given degrees of freedom and
 * inverse cumulative probability accuracy.</text>
      <param>rng Random number generator.</param>
      <param>degreesOfFreedom Degrees of freedom.</param>
      <param>inverseCumAccuracy the maximum absolute error in inverse
 * cumulative probability estimates (defaults to{@link #DEFAULT_INVERSE_ABSOLUTE_ACCURACY}).</param>
      <since>3.1</since>
    </javadoc>
    <method type="constructor" name="ChiSquaredDistribution" startLine="79" endLine="84" />
    <javadoc>
      <text>* Access the number of degrees of freedom.</text>
      <return>the degrees of freedom.</return>
    </javadoc>
    <method type="double" name="getDegreesOfFreedom" startLine="91" endLine="93" />
    <javadoc>
      <text>* {@inheritDoc}</text>
    </javadoc>
    <method type="double" name="density" startLine="96" endLine="98" />
    <javadoc>
      <text>* {@inheritDoc}</text>
    </javadoc>
    <method type="double" name="cumulativeProbability" startLine="101" endLine="103" />
    <javadoc>
      <text>* {@inheritDoc}</text>
    </javadoc>
    <method type="double" name="getSolverAbsoluteAccuracy" startLine="107" endLine="109" />
    <javadoc>
      <text>* {@inheritDoc}For {@code k} degrees of freedom, the mean is {@code k}.</text>
    </javadoc>
    <method type="double" name="getNumericalMean" startLine="116" endLine="118" />
    <javadoc>
      <text>* {@inheritDoc}</text>
      <return>{@code 2 * k}, where {@code k} is the number of degrees of freedom.</return>
    </javadoc>
    <method type="double" name="getNumericalVariance" startLine="125" endLine="127" />
    <javadoc>
      <text>* {@inheritDoc}The lower bound of the support is always 0 no matter the
 * degrees of freedom.</text>
      <return>zero.</return>
    </javadoc>
    <method type="double" name="getSupportLowerBound" startLine="137" endLine="139" />
    <javadoc>
      <text>* {@inheritDoc}The upper bound of the support is always positive infinity no matter the
 * degrees of freedom.</text>
      <return>{@code Double.POSITIVE_INFINITY}.</return>
    </javadoc>
    <method type="double" name="getSupportUpperBound" startLine="149" endLine="151" />
    <javadoc>
      <text>* {@inheritDoc}</text>
    </javadoc>
    <method type="boolean" name="isSupportLowerBoundInclusive" startLine="154" endLine="156" />
    <javadoc>
      <text>* {@inheritDoc}</text>
    </javadoc>
    <method type="boolean" name="isSupportUpperBoundInclusive" startLine="159" endLine="161" />
    <javadoc>
      <text>* {@inheritDoc}The support of this distribution is connected.</text>
      <return>{@code true}</return>
    </javadoc>
    <method type="boolean" name="isSupportConnected" startLine="170" endLine="172" />
  </class>
</source>
