<?xml version="1.0" encoding="UTF-8"?>
<source package="org.apache.commons.math3.analysis">
  <interface name="DifferentiableMultivariateFunction" startLine="21">
    <implements name="MultivariateFunction" />
    <javadoc>
      <text>* Extension of {@link MultivariateFunction} representing a differentiable
 * multivariate real function.</text>
      <version>$Id: DifferentiableMultivariateFunction.java 1415149 2012-11-29 13:12:55Z erans $</version>
      <since>2.0</since>
      <deprecated>as of 3.1 replaced by {@link org.apache.commons.math3.analysis.differentiation.MultivariateDifferentiableFunction}</deprecated>
    </javadoc>
    <method name="partialDerivative" type="MultivariateFunction" startLine="31" endLine="43" />
    <javadoc>
      <text>* Returns the partial derivative of the function with respect to a point coordinate.
 * <p>
 * The partial derivative is defined with respect to point coordinate
 * x<sub>k</sub>. If the partial derivatives with respect to all coordinates are
 * needed, it may be more efficient to use the {@link #gradient()} method which will
 * compute them all at once.
 * </p></text>
      <param>k index of the coordinate with respect to which the partial
 * derivative is computed</param>
      <return>the partial derivative function with respect to k<sup>th</sup> point coordinate</return>
    </javadoc>
    <method name="gradient" type="MultivariateVectorFunction" startLine="45" endLine="52" />
    <javadoc>
      <text>* Returns the gradient function.
 * <p>If only one partial derivative with respect to a specific coordinate is
 * needed, it may be more efficient to use the {@link #partialDerivative(int)} method
 * which will compute only the specified component.</p></text>
      <return>the gradient function</return>
    </javadoc>
  </interface>
</source>
