<?xml version="1.0" encoding="UTF-8"?>
<source package="org.apache.commons.math3.stat.clustering">
  <import name="java.io.Serializable" />
  <import name="java.util.Arrays" />
  <import name="java.util.Collection" />
  <import name="org.apache.commons.math3.util.MathArrays" />
  <class name="EuclideanIntegerPoint" startLine="26">
    <implements name="Clusterable<EuclideanIntegerPoint>" />
    <implements name="Serializable" />
    <javadoc>
      <text>* A simple implementation of {@link Clusterable} for points with integer coordinates.</text>
      <version>$Id: EuclideanIntegerPoint.java 1461871 2013-03-27 22:01:25Z tn $</version>
      <since>2.0</since>
      <deprecated>As of 3.2 (to be removed in 4.0),
 * use {@link org.apache.commons.math3.ml.clustering.DoublePoint} instead</deprecated>
    </javadoc>
    <javadoc>
      <text>* Serializable version identifier.</text>
    </javadoc>
    <declaration type="long" name="serialVersionUID" />
    <javadoc>
      <text>* Point coordinates.</text>
    </javadoc>
    <declaration type="int[]" name="point" />
    <javadoc>
      <text>* Build an instance wrapping an integer array.
 * <p>The wrapped array is referenced, it is <em>not</em> copied.</p></text>
      <param>point the n-dimensional point in integer space</param>
    </javadoc>
    <method type="constructor" name="EuclideanIntegerPoint" startLine="47" endLine="49" />
    <javadoc>
      <text>* Get the n-dimensional point in integer space.</text>
      <return>a reference (not a copy!) to the wrapped array</return>
    </javadoc>
    <method type="int[]" name="getPoint" startLine="55" endLine="57" />
    <javadoc>
      <text>* {@inheritDoc}</text>
    </javadoc>
    <method type="double" name="distanceFrom" startLine="60" endLine="62" />
    <javadoc>
      <text>* {@inheritDoc}</text>
    </javadoc>
    <method type="EuclideanIntegerPoint" name="centroidOf" startLine="65" endLine="76">
      <declaration type="int[]" name="centroid" />
      <scope startLine="67" endLine="71">
        <scope startLine="68" endLine="70" />
      </scope>
      <scope startLine="72" endLine="74" />
    </method>
    <javadoc>
      <text>* {@inheritDoc}</text>
    </javadoc>
    <method type="boolean" name="equals" startLine="80" endLine="85">
      <scope startLine="81" endLine="83" />
    </method>
    <javadoc>
      <text>* {@inheritDoc}</text>
    </javadoc>
    <method type="int" name="hashCode" startLine="89" endLine="91" />
    <javadoc>
      <text>* {@inheritDoc}</text>
      <since>2.1</since>
    </javadoc>
    <method type="String" name="toString" startLine="98" endLine="100" />
  </class>
</source>
