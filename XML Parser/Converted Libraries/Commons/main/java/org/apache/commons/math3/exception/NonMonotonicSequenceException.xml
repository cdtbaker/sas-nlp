<?xml version="1.0" encoding="UTF-8"?>
<source package="org.apache.commons.math3.exception">
  <import name="org.apache.commons.math3.util.MathArrays" />
  <import name="org.apache.commons.math3.exception.util.LocalizedFormats" />
  <class name="NonMonotonicSequenceException" extends="MathIllegalNumberException" startLine="22">
    <javadoc>
      <text>* Exception to be thrown when the a sequence of values is not monotonically
 * increasing or decreasing.</text>
      <since>2.2 (name changed to "NonMonotonicSequenceException" in 3.0)</since>
      <version>$Id: NonMonotonicSequenceException.java 1364378 2012-07-22 17:42:38Z tn $</version>
    </javadoc>
    <javadoc>
      <text>* Serializable version Id.</text>
    </javadoc>
    <declaration type="long" name="serialVersionUID" />
    <javadoc>
      <text>* Direction (positive for increasing, negative for decreasing).</text>
    </javadoc>
    <declaration type="MathArrays.OrderDirection" name="direction" />
    <javadoc>
      <text>* Whether the sequence must be strictly increasing or decreasing.</text>
    </javadoc>
    <declaration type="boolean" name="strict" />
    <javadoc>
      <text>* Index of the wrong value.</text>
    </javadoc>
    <declaration type="int" name="index" />
    <javadoc>
      <text>* Previous value.</text>
    </javadoc>
    <declaration type="Number" name="previous" />
    <javadoc>
      <text>* Construct the exception.
 * This constructor uses default values assuming that the sequence should
 * have been strictly increasing.</text>
      <param>wrong Value that did not match the requirements.</param>
      <param>previous Previous value in the sequence.</param>
      <param>index Index of the value that did not match the requirements.</param>
    </javadoc>
    <method type="constructor" name="NonMonotonicSequenceException" startLine="60" endLine="62" />
    <javadoc>
      <text>* Construct the exception.</text>
      <param>wrong Value that did not match the requirements.</param>
      <param>previous Previous value in the sequence.</param>
      <param>index Index of the value that did not match the requirements.</param>
      <param>direction Strictly positive for a sequence required to be
 * increasing, negative (or zero) for a decreasing sequence.</param>
      <param>strict Whether the sequence must be strictly increasing or
 * decreasing.</param>
    </javadoc>
    <method type="constructor" name="NonMonotonicSequenceException" startLine="79" endLine="93" />
    <javadoc>
      <return>the order direction.</return>
    </javadoc>
    <method type="MathArrays.OrderDirection" name="getDirection" startLine="98" endLine="100" />
    <javadoc>
      <return>{@code true} is the sequence should be strictly monotonic.</return>
    </javadoc>
    <method type="boolean" name="getStrict" startLine="104" endLine="106" />
    <javadoc>
      <text>* Get the index of the wrong value.</text>
      <return>the current index.</return>
    </javadoc>
    <method type="int" name="getIndex" startLine="112" endLine="114" />
    <javadoc>
      <return>the previous value.</return>
    </javadoc>
    <method type="Number" name="getPrevious" startLine="118" endLine="120" />
  </class>
</source>
