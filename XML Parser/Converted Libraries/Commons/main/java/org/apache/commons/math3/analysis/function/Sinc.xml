<?xml version="1.0" encoding="UTF-8"?>
<source package="org.apache.commons.math3.analysis.function">
  <import name="org.apache.commons.math3.analysis.DifferentiableUnivariateFunction" />
  <import name="org.apache.commons.math3.analysis.FunctionUtils" />
  <import name="org.apache.commons.math3.analysis.UnivariateFunction" />
  <import name="org.apache.commons.math3.analysis.differentiation.DerivativeStructure" />
  <import name="org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiableFunction" />
  <import name="org.apache.commons.math3.exception.DimensionMismatchException" />
  <import name="org.apache.commons.math3.util.FastMath" />
  <class name="Sinc" startLine="28">
    <implements name="UnivariateDifferentiableFunction" />
    <implements name="DifferentiableUnivariateFunction" />
    <javadoc>
      <text>* <a href="http://en.wikipedia.org/wiki/Sinc_function">Sinc</a> function,
 * defined by
 * <pre><code>
 * sinc(x) = 1            if x = 0,
 * sin(x) / x   otherwise.
 * </code></pre></text>
      <since>3.0</since>
      <version>$Id: Sinc.java 1455194 2013-03-11 15:45:54Z luc $</version>
    </javadoc>
    <javadoc>
      <text>* Value below which the computations are done using Taylor series.
 * <p>
 * The Taylor series for sinc even order derivatives are:
 * <pre>
 * d^(2n)sinc/dx^(2n)     = Sum_(k>=0) (-1)^(n+k) / ((2k)!(2n+2k+1)) x^(2k)
 * = (-1)^n     [ 1/(2n+1) - x^2/(4n+6) + x^4/(48n+120) - x^6/(1440n+5040) + O(x^8) ]
 * </pre>
 * </p>
 * <p>
 * The Taylor series for sinc odd order derivatives are:
 * <pre>
 * d^(2n+1)sinc/dx^(2n+1) = Sum_(k>=0) (-1)^(n+k+1) / ((2k+1)!(2n+2k+3)) x^(2k+1)
 * = (-1)^(n+1) [ x/(2n+3) - x^3/(12n+30) + x^5/(240n+840) - x^7/(10080n+45360) + O(x^9) ]
 * </pre>
 * </p>
 * <p>
 * So the ratio of the fourth term with respect to the first term
 * is always smaller than x^6/720, for all derivative orders.
 * This implies that neglecting this term and using only the first three terms induces
 * a relative error bounded by x^6/720. The SHORTCUT value is chosen such that this
 * relative error is below double precision accuracy when |x| <= SHORTCUT.
 * </p></text>
    </javadoc>
    <declaration type="double" name="SHORTCUT" />
    <javadoc>
      <text>* For normalized sinc function.</text>
    </javadoc>
    <declaration type="boolean" name="normalized" />
    <javadoc>
      <text>* The sinc function, {@code sin(x) / x}.</text>
    </javadoc>
    <method type="constructor" name="Sinc" startLine="71" endLine="73" />
    <javadoc>
      <text>* Instantiates the sinc function.</text>
      <param>normalized If {@code true}, the function is
 * <code> sin(&pi;x) / &pi;x</code>, otherwise {@code sin(x) / x}.</param>
    </javadoc>
    <method type="constructor" name="Sinc" startLine="81" endLine="83" />
    <javadoc>
      <text>* {@inheritDoc}</text>
    </javadoc>
    <method type="double" name="value" startLine="86" endLine="96">
      <declaration type="double" name="scaledX" />
      <scope startLine="88" endLine="92">
        <declaration type="double" name="scaledX2" />
        <comment>use Taylor series</comment>
      </scope>
      <scope startLine="92" endLine="95">
        <comment>use definition expression</comment>
      </scope>
    </method>
    <javadoc>
      <text>* {@inheritDoc}</text>
      <deprecated>as of 3.1, replaced by {@link #value(DerivativeStructure)}</deprecated>
    </javadoc>
    <method type="UnivariateFunction" name="derivative" startLine="102" endLine="104" />
    <javadoc>
      <text>* {@inheritDoc}</text>
      <since>3.1</since>
    </javadoc>
    <method type="DerivativeStructure" name="value" startLine="110" endLine="204">
      <declaration type="double" name="scaledX" />
      <declaration type="double" name="scaledX2" />
      <declaration type="double[]" name="f" />
      <scope startLine="117" endLine="132">
        <scope startLine="119" endLine="130">
          <declaration type="int" name="k" />
          <scope startLine="121" endLine="125" />
          <scope startLine="125" endLine="129" />
        </scope>
        <comment>even derivation order</comment>
        <comment>odd derivation order</comment>
      </scope>
      <scope startLine="132" endLine="192">
        <declaration type="double" name="inv" />
        <declaration type="double" name="cos" />
        <declaration type="double" name="sin" />
        <declaration type="double[]" name="sc" />
        <declaration type="double" name="coeff" />
        <scope startLine="154" endLine="190">
          <declaration type="double" name="s" />
          <declaration type="double" name="c" />
          <declaration type="int" name="kStart" />
          <scope startLine="161" endLine="165" />
          <scope startLine="165" endLine="170" />
          <scope startLine="173" endLine="183" />
        </scope>
        <comment>the nth order derivative of sinc has the form:</comment>
        <comment>dn(sinc(x)/dxn = [S_n(x) sin(x) + C_n(x) cos(x)] / x^(n+1)</comment>
        <comment>where S_n(x) is an even polynomial with degree n-1 or n (depending on parity)</comment>
        <comment>and C_n(x) is an odd polynomial with degree n-1 or n (depending on parity)</comment>
        <comment>S_0(x) = 1, S_1(x) = -1, S_2(x) = -x^2 + 2, S_3(x) = 3x^2 - 6...</comment>
        <comment>C_0(x) = 0, C_1(x) = x, C_2(x) = -2x, C_3(x) = -x^3 + 6x...</comment>
        <comment>the general recurrence relations for S_n and C_n are:</comment>
        <comment>S_n(x) = x S_(n-1)'(x) - n S_(n-1)(x) - x C_(n-1)(x)</comment>
        <comment>C_n(x) = x C_(n-1)'(x) - n C_(n-1)(x) + x S_(n-1)(x)</comment>
        <comment>as per polynomials parity, we can store both S_n and C_n in the same array</comment>
        <comment>update and evaluate polynomials S_n(x) and C_n(x)</comment>
        <comment>even derivation order, S_n is degree n and C_n is degree n-1</comment>
        <comment>odd derivation order, S_n is degree n-1 and C_n is degree n</comment>
        <comment>in this loop, k is always even</comment>
        <comment>sine part</comment>
        <comment>cosine part</comment>
      </scope>
      <scope startLine="194" endLine="200">
        <declaration type="double" name="scale" />
        <scope startLine="196" endLine="199" />
      </scope>
    </method>
  </class>
</source>
