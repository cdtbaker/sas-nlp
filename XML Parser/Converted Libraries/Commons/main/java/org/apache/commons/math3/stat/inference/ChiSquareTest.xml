<?xml version="1.0" encoding="UTF-8"?>
<source package="org.apache.commons.math3.stat.inference">
  <import name="org.apache.commons.math3.distribution.ChiSquaredDistribution" />
  <import name="org.apache.commons.math3.exception.DimensionMismatchException" />
  <import name="org.apache.commons.math3.exception.MaxCountExceededException" />
  <import name="org.apache.commons.math3.exception.NotPositiveException" />
  <import name="org.apache.commons.math3.exception.NotStrictlyPositiveException" />
  <import name="org.apache.commons.math3.exception.NullArgumentException" />
  <import name="org.apache.commons.math3.exception.OutOfRangeException" />
  <import name="org.apache.commons.math3.exception.ZeroException" />
  <import name="org.apache.commons.math3.exception.util.LocalizedFormats" />
  <import name="org.apache.commons.math3.util.FastMath" />
  <import name="org.apache.commons.math3.util.MathArrays" />
  <class name="ChiSquareTest" startLine="31">
    <javadoc>
      <text>* Implements Chi-Square test statistics.
 * <p>This implementation handles both known and unknown distributions.</p>
 * <p>Two samples tests can be used when the distribution is unknown <i>a priori</i>
 * but provided by one sample, or when the hypothesis under test is that the two
 * samples come from the same underlying distribution.</p></text>
      <version>$Id: ChiSquareTest.java 1416643 2012-12-03 19:37:14Z tn $</version>
    </javadoc>
    <javadoc>
      <text>* Construct a ChiSquareTest</text>
    </javadoc>
    <method type="constructor" name="ChiSquareTest" startLine="47" endLine="49" />
    <javadoc>
      <text>* Computes the <a href="http://www.itl.nist.gov/div898/handbook/eda/section3/eda35f.htm">
 * Chi-Square statistic</a> comparing <code>observed</code> and <code>expected</code>
 * frequency counts.
 * <p>
 * This statistic can be used to perform a Chi-Square test evaluating the null
 * hypothesis that the observed counts follow the expected distribution.</p>
 * <p>
 * <strong>Preconditions</strong>: <ul>
 * <li>Expected counts must all be positive.
 * </li>
 * <li>Observed counts must all be &ge; 0.
 * </li>
 * <li>The observed and expected arrays must have the same length and
 * their common length must be at least 2.
 * </li></ul></p><p>
 * If any of the preconditions are not met, an
 * <code>IllegalArgumentException</code> is thrown.</p>
 * <p><strong>Note: </strong>This implementation rescales the
 * <code>expected</code> array if necessary to ensure that the sum of the
 * expected and observed counts are equal.</p></text>
      <param>observed array of observed frequency counts</param>
      <param>expected array of expected frequency counts</param>
      <return>chiSquare test statistic</return>
      <throws>NotPositiveException if <code>observed</code> has negative entries</throws>
      <throws>NotStrictlyPositiveException if <code>expected</code> has entries that are
 * not strictly positive</throws>
      <throws>DimensionMismatchException if the arrays length is less than 2</throws>
    </javadoc>
    <method type="double" name="chiSquare" startLine="83" endLine="118">
      <scope startLine="85" endLine="87" />
      <scope startLine="88" endLine="90" />
      <declaration type="double" name="sumExpected" />
      <declaration type="double" name="sumObserved" />
      <scope startLine="96" endLine="99" />
      <declaration type="double" name="ratio" />
      <declaration type="boolean" name="rescale" />
      <scope startLine="102" endLine="105" />
      <declaration type="double" name="sumSq" />
      <scope startLine="107" endLine="115">
        <scope startLine="108" endLine="111">
          <declaration type="double" name="dev" />
        </scope>
        <scope startLine="111" endLine="114">
          <declaration type="double" name="dev" />
        </scope>
      </scope>
    </method>
    <javadoc>
      <text>* Returns the <i>observed significance level</i>, or <a href=
 * "http://www.cas.lancs.ac.uk/glossary_v1.1/hyptest.html#pvalue">
 * p-value</a>, associated with a
 * <a href="http://www.itl.nist.gov/div898/handbook/eda/section3/eda35f.htm">
 * Chi-square goodness of fit test</a> comparing the <code>observed</code>
 * frequency counts to those in the <code>expected</code> array.
 * <p>
 * The number returned is the smallest significance level at which one can reject
 * the null hypothesis that the observed counts conform to the frequency distribution
 * described by the expected counts.</p>
 * <p>
 * <strong>Preconditions</strong>: <ul>
 * <li>Expected counts must all be positive.
 * </li>
 * <li>Observed counts must all be &ge; 0.
 * </li>
 * <li>The observed and expected arrays must have the same length and
 * their common length must be at least 2.
 * </li></ul></p><p>
 * If any of the preconditions are not met, an
 * <code>IllegalArgumentException</code> is thrown.</p>
 * <p><strong>Note: </strong>This implementation rescales the
 * <code>expected</code> array if necessary to ensure that the sum of the
 * expected and observed counts are equal.</p></text>
      <param>observed array of observed frequency counts</param>
      <param>expected array of expected frequency counts</param>
      <return>p-value</return>
      <throws>NotPositiveException if <code>observed</code> has negative entries</throws>
      <throws>NotStrictlyPositiveException if <code>expected</code> has entries that are
 * not strictly positive</throws>
      <throws>DimensionMismatchException if the arrays length is less than 2</throws>
      <throws>MaxCountExceededException if an error occurs computing the p-value</throws>
    </javadoc>
    <method type="double" name="chiSquareTest" startLine="157" endLine="162">
      <declaration type="ChiSquaredDistribution" name="distribution" />
    </method>
    <javadoc>
      <text>* Performs a <a href="http://www.itl.nist.gov/div898/handbook/eda/section3/eda35f.htm">
 * Chi-square goodness of fit test</a> evaluating the null hypothesis that the
 * observed counts conform to the frequency distribution described by the expected
 * counts, with significance level <code>alpha</code>.  Returns true iff the null
 * hypothesis can be rejected with 100 * (1 - alpha) percent confidence.
 * <p>
 * <strong>Example:</strong><br>
 * To test the hypothesis that <code>observed</code> follows
 * <code>expected</code> at the 99% level, use </p><p>
 * <code>chiSquareTest(expected, observed, 0.01) </code></p>
 * <p>
 * <strong>Preconditions</strong>: <ul>
 * <li>Expected counts must all be positive.
 * </li>
 * <li>Observed counts must all be &ge; 0.
 * </li>
 * <li>The observed and expected arrays must have the same length and
 * their common length must be at least 2.
 * <li> <code> 0 &lt; alpha &lt; 0.5 </code>
 * </li></ul></p><p>
 * If any of the preconditions are not met, an
 * <code>IllegalArgumentException</code> is thrown.</p>
 * <p><strong>Note: </strong>This implementation rescales the
 * <code>expected</code> array if necessary to ensure that the sum of the
 * expected and observed counts are equal.</p></text>
      <param>observed array of observed frequency counts</param>
      <param>expected array of expected frequency counts</param>
      <param>alpha significance level of the test</param>
      <return>true iff null hypothesis can be rejected with confidence
 * 1 - alpha</return>
      <throws>NotPositiveException if <code>observed</code> has negative entries</throws>
      <throws>NotStrictlyPositiveException if <code>expected</code> has entries that are
 * not strictly positive</throws>
      <throws>DimensionMismatchException if the arrays length is less than 2</throws>
      <throws>OutOfRangeException if <code>alpha</code> is not in the range (0, 0.5]</throws>
      <throws>MaxCountExceededException if an error occurs computing the p-value</throws>
    </javadoc>
    <method type="boolean" name="chiSquareTest" startLine="206" endLine="214">
      <scope startLine="208" endLine="211" />
    </method>
    <javadoc>
      <text>* Computes the Chi-Square statistic associated with a
 * <a href="http://www.itl.nist.gov/div898/handbook/prc/section4/prc45.htm">
 * chi-square test of independence</a> based on the input <code>counts</code>
 * array, viewed as a two-way table.
 * <p>
 * The rows of the 2-way table are
 * <code>count[0], ... , count[count.length - 1] </code></p>
 * <p>
 * <strong>Preconditions</strong>: <ul>
 * <li>All counts must be &ge; 0.
 * </li>
 * <li>The count array must be rectangular (i.e. all count[i] subarrays
 * must have the same length).
 * </li>
 * <li>The 2-way table represented by <code>counts</code> must have at
 * least 2 columns and at least 2 rows.
 * </li>
 * </li></ul></p><p>
 * If any of the preconditions are not met, an
 * <code>IllegalArgumentException</code> is thrown.</p></text>
      <param>counts array representation of 2-way table</param>
      <return>chiSquare test statistic</return>
      <throws>NullArgumentException if the array is null</throws>
      <throws>DimensionMismatchException if the array is not rectangular</throws>
      <throws>NotPositiveException if {@code counts} has negative entries</throws>
    </javadoc>
    <method type="double" name="chiSquare" startLine="246" endLine="276">
      <declaration type="int" name="nRows" />
      <declaration type="int" name="nCols" />
      <declaration type="double[]" name="rowSum" />
      <declaration type="double[]" name="colSum" />
      <declaration type="double" name="total" />
      <scope startLine="256" endLine="262">
        <scope startLine="257" endLine="261" />
      </scope>
      <declaration type="double" name="sumSq" />
      <declaration type="double" name="expected" />
      <scope startLine="267" endLine="273">
        <scope startLine="268" endLine="272" />
      </scope>
      <comment>compute row, column and total sums</comment>
      <comment>compute expected counts and chi-square</comment>
    </method>
    <javadoc>
      <text>* Returns the <i>observed significance level</i>, or <a href=
 * "http://www.cas.lancs.ac.uk/glossary_v1.1/hyptest.html#pvalue">
 * p-value</a>, associated with a
 * <a href="http://www.itl.nist.gov/div898/handbook/prc/section4/prc45.htm">
 * chi-square test of independence</a> based on the input <code>counts</code>
 * array, viewed as a two-way table.
 * <p>
 * The rows of the 2-way table are
 * <code>count[0], ... , count[count.length - 1] </code></p>
 * <p>
 * <strong>Preconditions</strong>: <ul>
 * <li>All counts must be &ge; 0.
 * </li>
 * <li>The count array must be rectangular (i.e. all count[i] subarrays must have
 * the same length).
 * </li>
 * <li>The 2-way table represented by <code>counts</code> must have at least 2
 * columns and at least 2 rows.
 * </li>
 * </li></ul></p><p>
 * If any of the preconditions are not met, an
 * <code>IllegalArgumentException</code> is thrown.</p></text>
      <param>counts array representation of 2-way table</param>
      <return>p-value</return>
      <throws>NullArgumentException if the array is null</throws>
      <throws>DimensionMismatchException if the array is not rectangular</throws>
      <throws>NotPositiveException if {@code counts} has negative entries</throws>
      <throws>MaxCountExceededException if an error occurs computing the p-value</throws>
    </javadoc>
    <method type="double" name="chiSquareTest" startLine="311" endLine="319">
      <declaration type="double" name="df" />
      <declaration type="ChiSquaredDistribution" name="distribution" />
    </method>
    <javadoc>
      <text>* Performs a <a href="http://www.itl.nist.gov/div898/handbook/prc/section4/prc45.htm">
 * chi-square test of independence</a> evaluating the null hypothesis that the
 * classifications represented by the counts in the columns of the input 2-way table
 * are independent of the rows, with significance level <code>alpha</code>.
 * Returns true iff the null hypothesis can be rejected with 100 * (1 - alpha) percent
 * confidence.
 * <p>
 * The rows of the 2-way table are
 * <code>count[0], ... , count[count.length - 1] </code></p>
 * <p>
 * <strong>Example:</strong><br>
 * To test the null hypothesis that the counts in
 * <code>count[0], ... , count[count.length - 1] </code>
 * all correspond to the same underlying probability distribution at the 99% level, use</p>
 * <p><code>chiSquareTest(counts, 0.01)</code></p>
 * <p>
 * <strong>Preconditions</strong>: <ul>
 * <li>All counts must be &ge; 0.
 * </li>
 * <li>The count array must be rectangular (i.e. all count[i] subarrays must have the
 * same length).</li>
 * <li>The 2-way table represented by <code>counts</code> must have at least 2 columns and
 * at least 2 rows.</li>
 * </li></ul></p><p>
 * If any of the preconditions are not met, an
 * <code>IllegalArgumentException</code> is thrown.</p></text>
      <param>counts array representation of 2-way table</param>
      <param>alpha significance level of the test</param>
      <return>true iff null hypothesis can be rejected with confidence
 * 1 - alpha</return>
      <throws>NullArgumentException if the array is null</throws>
      <throws>DimensionMismatchException if the array is not rectangular</throws>
      <throws>NotPositiveException if {@code counts} has any negative entries</throws>
      <throws>OutOfRangeException if <code>alpha</code> is not in the range (0, 0.5]</throws>
      <throws>MaxCountExceededException if an error occurs computing the p-value</throws>
    </javadoc>
    <method type="boolean" name="chiSquareTest" startLine="361" endLine="369">
      <scope startLine="363" endLine="366" />
    </method>
    <javadoc>
      <text>* <p>Computes a
 * <a href="http://www.itl.nist.gov/div898/software/dataplot/refman1/auxillar/chi2samp.htm">
 * Chi-Square two sample test statistic</a> comparing bin frequency counts
 * in <code>observed1</code> and <code>observed2</code>.  The
 * sums of frequency counts in the two samples are not required to be the
 * same.  The formula used to compute the test statistic is</p>
 * <code>
 * &sum;[(K * observed1[i] - observed2[i]/K)<sup>2</sup> / (observed1[i] + observed2[i])]
 * </code> where
 * <br/><code>K = &sqrt;[&sum(observed2 / &sum;(observed1)]</code>
 * </p>
 * <p>This statistic can be used to perform a Chi-Square test evaluating the
 * null hypothesis that both observed counts follow the same distribution.</p>
 * <p>
 * <strong>Preconditions</strong>: <ul>
 * <li>Observed counts must be non-negative.
 * </li>
 * <li>Observed counts for a specific bin must not both be zero.
 * </li>
 * <li>Observed counts for a specific sample must not all be 0.
 * </li>
 * <li>The arrays <code>observed1</code> and <code>observed2</code> must have
 * the same length and their common length must be at least 2.
 * </li></ul></p><p>
 * If any of the preconditions are not met, an
 * <code>IllegalArgumentException</code> is thrown.</p></text>
      <param>observed1 array of observed frequency counts of the first data set</param>
      <param>observed2 array of observed frequency counts of the second data set</param>
      <return>chiSquare test statistic</return>
      <throws>DimensionMismatchException the the length of the arrays does not match</throws>
      <throws>NotPositiveException if any entries in <code>observed1</code> or
 * <code>observed2</code> are negative</throws>
      <throws>ZeroException if either all counts of <code>observed1</code> or
 * <code>observed2</code> are zero, or if the count at some index is zero
 * for both arrays</throws>
      <since>1.2</since>
    </javadoc>
    <method type="double" name="chiSquareDataSetsComparison" startLine="411" endLine="463">
      <scope startLine="414" endLine="416" />
      <scope startLine="417" endLine="419" />
      <declaration type="long" name="countSum1" />
      <declaration type="long" name="countSum2" />
      <declaration type="boolean" name="unequalCounts" />
      <declaration type="double" name="weight" />
      <scope startLine="430" endLine="433" />
      <scope startLine="435" endLine="437" />
      <scope startLine="440" endLine="442" />
      <declaration type="double" name="sumSq" />
      <declaration type="double" name="dev" />
      <declaration type="double" name="obs1" />
      <declaration type="double" name="obs2" />
      <scope startLine="448" endLine="461">
        <scope startLine="449" endLine="451" />
        <scope startLine="451" endLine="460">
          <scope startLine="454" endLine="456" />
          <scope startLine="456" endLine="458" />
        </scope>
        <comment>apply weights</comment>
      </scope>
      <comment>Make sure lengths are same</comment>
      <comment>Ensure non-negative counts</comment>
      <comment>Compute and compare count sums</comment>
      <comment>Ensure neither sample is uniformly 0</comment>
      <comment>Compare and compute weight only if different</comment>
      <comment>Compute ChiSquare statistic</comment>
    </method>
    <javadoc>
      <text>* <p>Returns the <i>observed significance level</i>, or <a href=
 * "http://www.cas.lancs.ac.uk/glossary_v1.1/hyptest.html#pvalue">
 * p-value</a>, associated with a Chi-Square two sample test comparing
 * bin frequency counts in <code>observed1</code> and
 * <code>observed2</code>.
 * </p>
 * <p>The number returned is the smallest significance level at which one
 * can reject the null hypothesis that the observed counts conform to the
 * same distribution.
 * </p>
 * <p>See {@link #chiSquareDataSetsComparison(long[],long[])} for details
 * on the formula used to compute the test statistic. The degrees of
 * of freedom used to perform the test is one less than the common length
 * of the input observed count arrays.
 * </p>
 * <strong>Preconditions</strong>: <ul>
 * <li>Observed counts must be non-negative.
 * </li>
 * <li>Observed counts for a specific bin must not both be zero.
 * </li>
 * <li>Observed counts for a specific sample must not all be 0.
 * </li>
 * <li>The arrays <code>observed1</code> and <code>observed2</code> must
 * have the same length and
 * their common length must be at least 2.
 * </li></ul><p>
 * If any of the preconditions are not met, an
 * <code>IllegalArgumentException</code> is thrown.</p></text>
      <param>observed1 array of observed frequency counts of the first data set</param>
      <param>observed2 array of observed frequency counts of the second data set</param>
      <return>p-value</return>
      <throws>DimensionMismatchException the the length of the arrays does not match</throws>
      <throws>NotPositiveException if any entries in <code>observed1</code> or
 * <code>observed2</code> are negative</throws>
      <throws>ZeroException if either all counts of <code>observed1</code> or
 * <code>observed2</code> are zero, or if the count at the same index is zero
 * for both arrays</throws>
      <throws>MaxCountExceededException if an error occurs computing the p-value</throws>
      <since>1.2</since>
    </javadoc>
    <method type="double" name="chiSquareTestDataSetsComparison" startLine="509" endLine="516">
      <declaration type="ChiSquaredDistribution" name="distribution" />
    </method>
    <javadoc>
      <text>* <p>Performs a Chi-Square two sample test comparing two binned data
 * sets. The test evaluates the null hypothesis that the two lists of
 * observed counts conform to the same frequency distribution, with
 * significance level <code>alpha</code>.  Returns true iff the null
 * hypothesis can be rejected with 100 * (1 - alpha) percent confidence.
 * </p>
 * <p>See {@link #chiSquareDataSetsComparison(long[],long[])} for
 * details on the formula used to compute the Chisquare statistic used
 * in the test. The degrees of of freedom used to perform the test is
 * one less than the common length of the input observed count arrays.
 * </p>
 * <strong>Preconditions</strong>: <ul>
 * <li>Observed counts must be non-negative.
 * </li>
 * <li>Observed counts for a specific bin must not both be zero.
 * </li>
 * <li>Observed counts for a specific sample must not all be 0.
 * </li>
 * <li>The arrays <code>observed1</code> and <code>observed2</code> must
 * have the same length and their common length must be at least 2.
 * </li>
 * <li> <code> 0 < alpha < 0.5 </code>
 * </li></ul><p>
 * If any of the preconditions are not met, an
 * <code>IllegalArgumentException</code> is thrown.</p></text>
      <param>observed1 array of observed frequency counts of the first data set</param>
      <param>observed2 array of observed frequency counts of the second data set</param>
      <param>alpha significance level of the test</param>
      <return>true iff null hypothesis can be rejected with confidence
 * 1 - alpha</return>
      <throws>DimensionMismatchException the the length of the arrays does not match</throws>
      <throws>NotPositiveException if any entries in <code>observed1</code> or
 * <code>observed2</code> are negative</throws>
      <throws>ZeroException if either all counts of <code>observed1</code> or
 * <code>observed2</code> are zero, or if the count at the same index is zero
 * for both arrays</throws>
      <throws>OutOfRangeException if <code>alpha</code> is not in the range (0, 0.5]</throws>
      <throws>MaxCountExceededException if an error occurs performing the test</throws>
      <since>1.2</since>
    </javadoc>
    <method type="boolean" name="chiSquareTestDataSetsComparison" startLine="564" endLine="573">
      <scope startLine="567" endLine="570" />
    </method>
    <javadoc>
      <text>* Checks to make sure that the input long[][] array is rectangular,
 * has at least 2 rows and 2 columns, and has all non-negative entries.</text>
      <param>in input 2-way table to check</param>
      <throws>NullArgumentException if the array is null</throws>
      <throws>DimensionMismatchException if the array is not valid</throws>
      <throws>NotPositiveException if the array contains any negative entries</throws>
    </javadoc>
    <method type="void" name="checkArray" startLine="586" endLine="599">
      <scope startLine="588" endLine="590" />
      <scope startLine="592" endLine="594" />
    </method>
  </class>
</source>
