<?xml version="1.0" encoding="UTF-8"?>
<source package="org.apache.commons.math3.filter">
  <import name="org.apache.commons.math3.exception.DimensionMismatchException" />
  <import name="org.apache.commons.math3.exception.NoDataException" />
  <import name="org.apache.commons.math3.exception.NullArgumentException" />
  <import name="org.apache.commons.math3.linear.Array2DRowRealMatrix" />
  <import name="org.apache.commons.math3.linear.RealMatrix" />
  <class name="DefaultMeasurementModel" startLine="25">
    <implements name="MeasurementModel" />
    <javadoc>
      <text>* Default implementation of a {@link MeasurementModel} for the use with a {@link KalmanFilter}.</text>
      <since>3.0</since>
      <version>$Id: DefaultMeasurementModel.java 1416643 2012-12-03 19:37:14Z tn $</version>
    </javadoc>
    <javadoc>
      <text>* The measurement matrix, used to associate the measurement vector to the
 * internal state estimation vector.</text>
    </javadoc>
    <declaration type="RealMatrix" name="measurementMatrix" />
    <javadoc>
      <text>* The measurement noise covariance matrix.</text>
    </javadoc>
    <declaration type="RealMatrix" name="measurementNoise" />
    <javadoc>
      <text>* Create a new {@link MeasurementModel}, taking double arrays as input parameters for the
 * respective measurement matrix and noise.</text>
      <param>measMatrixthe measurement matrix</param>
      <param>measNoisethe measurement noise matrix</param>
      <throws>NullArgumentExceptionif any of the input matrices is {@code null}</throws>
      <throws>NoDataExceptionif any row / column dimension of the input matrices is zero</throws>
      <throws>DimensionMismatchExceptionif any of the input matrices is non-rectangular</throws>
    </javadoc>
    <method type="constructor" name="DefaultMeasurementModel" startLine="60" endLine="62" />
    <javadoc>
      <text>* Create a new {@link MeasurementModel}, taking {@link RealMatrix} objects
 * as input parameters for the respective measurement matrix and noise.</text>
      <param>measMatrix the measurement matrix</param>
      <param>measNoise the measurement noise matrix</param>
    </javadoc>
    <method type="constructor" name="DefaultMeasurementModel" startLine="71" endLine="74" />
    <javadoc>
      <text>* {@inheritDoc}</text>
    </javadoc>
    <method type="RealMatrix" name="getMeasurementMatrix" startLine="77" endLine="79" />
    <javadoc>
      <text>* {@inheritDoc}</text>
    </javadoc>
    <method type="RealMatrix" name="getMeasurementNoise" startLine="82" endLine="84" />
  </class>
</source>
