<?xml version="1.0" encoding="UTF-8"?>
<source package="org.apache.commons.math3.stat.inference">
  <import name="org.apache.commons.math3.distribution.NormalDistribution" />
  <import name="org.apache.commons.math3.exception.ConvergenceException" />
  <import name="org.apache.commons.math3.exception.MaxCountExceededException" />
  <import name="org.apache.commons.math3.exception.NoDataException" />
  <import name="org.apache.commons.math3.exception.NullArgumentException" />
  <import name="org.apache.commons.math3.stat.ranking.NaNStrategy" />
  <import name="org.apache.commons.math3.stat.ranking.NaturalRanking" />
  <import name="org.apache.commons.math3.stat.ranking.TiesStrategy" />
  <import name="org.apache.commons.math3.util.FastMath" />
  <class name="MannWhitneyUTest" startLine="29">
    <javadoc>
      <text>* An implementation of the Mann-Whitney U test (also called Wilcoxon rank-sum test).</text>
      <version>$Id: MannWhitneyUTest.java 1416643 2012-12-03 19:37:14Z tn $</version>
    </javadoc>
    <javadoc>
      <text>* Ranking algorithm.</text>
    </javadoc>
    <declaration type="NaturalRanking" name="naturalRanking" />
    <javadoc>
      <text>* Create a test instance using where NaN's are left in place and ties get
 * the average of applicable ranks. Use this unless you are very sure of
 * what you are doing.</text>
    </javadoc>
    <method type="constructor" name="MannWhitneyUTest" startLine="44" endLine="47" />
    <javadoc>
      <text>* Create a test instance using the given strategies for NaN's and ties.
 * Only use this if you are sure of what you are doing.</text>
      <param>nanStrategyspecifies the strategy that should be used for Double.NaN's</param>
      <param>tiesStrategyspecifies the strategy that should be used for ties</param>
    </javadoc>
    <method type="constructor" name="MannWhitneyUTest" startLine="59" endLine="61" />
    <javadoc>
      <text>* Ensures that the provided arrays fulfills the assumptions.</text>
      <param>x first sample</param>
      <param>y second sample</param>
      <throws>NullArgumentException if {@code x} or {@code y} are {@code null}.</throws>
      <throws>NoDataException if {@code x} or {@code y} are zero-length.</throws>
    </javadoc>
    <method type="void" name="ensureDataConformance" startLine="72" endLine="82">
      <scope startLine="75" endLine="77" />
      <scope startLine="79" endLine="81" />
    </method>
    <javadoc>
      <text>* Concatenate the samples into one array.</text>
      <param>x first sample</param>
      <param>y second sample</param>
      <return>concatenated array</return>
    </javadoc>
    <method type="double[]" name="concatenateSamples" startLine="89" endLine="96">
      <declaration type="double[]" name="z" />
    </method>
    <javadoc>
      <text>* Computes the <a
 * href="http://en.wikipedia.org/wiki/Mann%E2%80%93Whitney_U"> Mann-Whitney
 * U statistic</a> comparing mean for two independent samples possibly of
 * different length.
 * <p>
 * This statistic can be used to perform a Mann-Whitney U test evaluating
 * the null hypothesis that the two independent samples has equal mean.
 * </p>
 * <p>
 * Let X<sub>i</sub> denote the i'th individual of the first sample and
 * Y<sub>j</sub> the j'th individual in the second sample. Note that the
 * samples would often have different length.
 * </p>
 * <p>
 * <strong>Preconditions</strong>:
 * <ul>
 * <li>All observations in the two samples are independent.</li>
 * <li>The observations are at least ordinal (continuous are also ordinal).</li>
 * </ul>
 * </p></text>
      <param>x the first sample</param>
      <param>y the second sample</param>
      <return>Mann-Whitney U statistic (maximum of U<sup>x</sup> and U<sup>y</sup>)</return>
      <throws>NullArgumentException if {@code x} or {@code y} are {@code null}.</throws>
      <throws>NoDataException if {@code x} or {@code y} are zero-length.</throws>
    </javadoc>
    <method type="double" name="mannWhitneyU" startLine="127" endLine="156">
      <declaration type="double[]" name="z" />
      <declaration type="double[]" name="ranks" />
      <declaration type="double" name="sumRankX" />
      <scope startLine="140" endLine="142" />
      <declaration type="double" name="U1" />
      <declaration type="double" name="U2" />
      <comment>The ranks for x is in the first x.length entries in ranks because x
 is in the first x.length entries in z</comment>
      <comment>U1 = R1 - (n1  (n1 + 1))  2 where R1 is sum of ranks for sample 1,
 e.g. x, n1 is the number of observations in sample 1.</comment>
      <comment>It can be shown that U1 + U2 = n1  n2</comment>
    </method>
    <javadoc>
      <param>Umin smallest Mann-Whitney U value</param>
      <param>n1 number of subjects in first sample</param>
      <param>n2 number of subjects in second sample</param>
      <return>two-sided asymptotic p-value</return>
      <throws>ConvergenceException if the p-value can not be computed
 * due to a convergence error</throws>
      <throws>MaxCountExceededException if the maximum number of
 * iterations is exceeded</throws>
    </javadoc>
    <method type="double" name="calculateAsymptoticPValue" startLine="171" endLine="188">
      <declaration type="long" name="n1n2prod" />
      <declaration type="double" name="EU" />
      <declaration type="double" name="VarU" />
      <declaration type="double" name="z" />
      <declaration type="NormalDistribution" name="standardNormal" />
      <comment>long multiplication to avoid overflow (double not used due to efficiency
 and to avoid precision loss)</comment>
      <comment>http:en.wikipedia.org/wiki/Mann%E2%80%93Whitney_U#Normal_approximation</comment>
      <comment>No try-catch or advertised exception because args are valid</comment>
    </method>
    <javadoc>
      <text>* Returns the asymptotic <i>observed significance level</i>, or <a href=
 * "http://www.cas.lancs.ac.uk/glossary_v1.1/hyptest.html#pvalue">
 * p-value</a>, associated with a <a
 * href="http://en.wikipedia.org/wiki/Mann%E2%80%93Whitney_U"> Mann-Whitney
 * U statistic</a> comparing mean for two independent samples.
 * <p>
 * Let X<sub>i</sub> denote the i'th individual of the first sample and
 * Y<sub>j</sub> the j'th individual in the second sample. Note that the
 * samples would often have different length.
 * </p>
 * <p>
 * <strong>Preconditions</strong>:
 * <ul>
 * <li>All observations in the two samples are independent.</li>
 * <li>The observations are at least ordinal (continuous are also ordinal).</li>
 * </ul>
 * </p><p>
 * Ties give rise to biased variance at the moment. See e.g. <a
 * href="http://mlsc.lboro.ac.uk/resources/statistics/Mannwhitney.pdf"
 * >http://mlsc.lboro.ac.uk/resources/statistics/Mannwhitney.pdf</a>.</p></text>
      <param>x the first sample</param>
      <param>y the second sample</param>
      <return>asymptotic p-value</return>
      <throws>NullArgumentException if {@code x} or {@code y} are {@code null}.</throws>
      <throws>NoDataException if {@code x} or {@code y} are zero-length.</throws>
      <throws>ConvergenceException if the p-value can not be computed due to a
 * convergence error</throws>
      <throws>MaxCountExceededException if the maximum number of iterations
 * is exceeded</throws>
    </javadoc>
    <method type="double" name="mannWhitneyUTest" startLine="224" endLine="236">
      <declaration type="double" name="Umax" />
      <declaration type="double" name="Umin" />
      <comment>It can be shown that U1 + U2 = n1  n2</comment>
    </method>
  </class>
</source>
