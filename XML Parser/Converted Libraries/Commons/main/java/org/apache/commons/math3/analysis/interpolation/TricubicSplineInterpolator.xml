<?xml version="1.0" encoding="UTF-8"?>
<source package="org.apache.commons.math3.analysis.interpolation">
  <import name="org.apache.commons.math3.exception.DimensionMismatchException" />
  <import name="org.apache.commons.math3.exception.NoDataException" />
  <import name="org.apache.commons.math3.exception.NonMonotonicSequenceException" />
  <import name="org.apache.commons.math3.exception.NumberIsTooSmallException" />
  <import name="org.apache.commons.math3.util.MathArrays" />
  <class name="TricubicSplineInterpolator" startLine="25">
    <implements name="TrivariateGridInterpolator" />
    <javadoc>
      <text>* Generates a tricubic interpolating function.</text>
      <since>2.2</since>
      <version>$Id: TricubicSplineInterpolator.java 1455194 2013-03-11 15:45:54Z luc $</version>
    </javadoc>
    <javadoc>
      <text>* {@inheritDoc}</text>
    </javadoc>
    <method type="TricubicSplineInterpolatingFunction" name="interpolate" startLine="41" endLine="175">
      <scope startLine="42" endLine="44" />
      <scope startLine="45" endLine="47" />
      <declaration type="int" name="xLen" />
      <declaration type="int" name="yLen" />
      <declaration type="int" name="zLen" />
      <declaration type="double[][][]" name="fvalXY" />
      <declaration type="double[][][]" name="fvalZX" />
      <scope startLine="62" endLine="78">
        <scope startLine="63" endLine="65" />
        <scope startLine="67" endLine="77">
          <scope startLine="68" endLine="70" />
          <scope startLine="72" endLine="76">
            <declaration type="double" name="v" />
          </scope>
        </scope>
      </scope>
      <declaration type="BicubicSplineInterpolator" name="bsi" />
      <declaration type="BicubicSplineInterpolatingFunction[]" name="xSplineYZ" />
      <scope startLine="85" endLine="87" />
      <declaration type="BicubicSplineInterpolatingFunction[]" name="ySplineZX" />
      <scope startLine="92" endLine="94" />
      <declaration type="BicubicSplineInterpolatingFunction[]" name="zSplineXY" />
      <scope startLine="99" endLine="101" />
      <declaration type="double[][][]" name="dFdX" />
      <declaration type="double[][][]" name="dFdY" />
      <declaration type="double[][][]" name="d2FdXdY" />
      <scope startLine="107" endLine="118">
        <declaration type="BicubicSplineInterpolatingFunction" name="f" />
        <scope startLine="109" endLine="117">
          <declaration type="double" name="x" />
          <scope startLine="111" endLine="116">
            <declaration type="double" name="y" />
          </scope>
        </scope>
      </scope>
      <declaration type="double[][][]" name="dFdZ" />
      <declaration type="double[][][]" name="d2FdYdZ" />
      <scope startLine="123" endLine="133">
        <declaration type="BicubicSplineInterpolatingFunction" name="f" />
        <scope startLine="125" endLine="132">
          <declaration type="double" name="y" />
          <scope startLine="127" endLine="131">
            <declaration type="double" name="z" />
          </scope>
        </scope>
      </scope>
      <declaration type="double[][][]" name="d2FdZdX" />
      <scope startLine="137" endLine="146">
        <declaration type="BicubicSplineInterpolatingFunction" name="f" />
        <scope startLine="139" endLine="145">
          <declaration type="double" name="z" />
          <scope startLine="141" endLine="144">
            <declaration type="double" name="x" />
          </scope>
        </scope>
      </scope>
      <declaration type="double[][][]" name="d3FdXdYdZ" />
      <scope startLine="150" endLine="168">
        <declaration type="int" name="nI" />
        <declaration type="int" name="pI" />
        <scope startLine="153" endLine="167">
          <declaration type="int" name="nJ" />
          <declaration type="int" name="pJ" />
          <scope startLine="156" endLine="166">
            <declaration type="int" name="nK" />
            <declaration type="int" name="pK" />
          </scope>
        </scope>
        <comment>XXX Not sure about this formula</comment>
      </scope>
      <comment>Samples, re-ordered as (z, x, y) and (y, z, x) tuplets</comment>
      <comment>fvalXY[k][i][j] = f(xval[i], yval[j], zval[k])</comment>
      <comment>fvalZX[j][k][i] = f(xval[i], yval[j], zval[k])</comment>
      <comment>For each line x[i] (0 <= i < xLen), construct a 2D spline in y and z</comment>
      <comment>For each line y[j] (0 <= j < yLen), construct a 2D spline in z and x</comment>
      <comment>For each line z[k] (0 <= k < zLen), construct a 2D spline in x and y</comment>
      <comment>Partial derivatives wrt x and wrt y</comment>
      <comment>Partial derivatives wrt y and wrt z</comment>
      <comment>Partial derivatives wrt x and wrt z</comment>
      <comment>Third partial cross-derivatives</comment>
      <comment>Create the interpolating splines</comment>
    </method>
    <javadoc>
      <text>* Compute the next index of an array, clipping if necessary.
 * It is assumed (but not checked) that {@code i} is larger than or equal to 0}.</text>
      <param>i Index</param>
      <param>max Upper limit of the array</param>
      <return>the next index</return>
    </javadoc>
    <method type="int" name="nextIndex" startLine="185" endLine="188">
      <declaration type="int" name="index" />
    </method>
    <javadoc>
      <text>* Compute the previous index of an array, clipping if necessary.
 * It is assumed (but not checked) that {@code i} is smaller than the size of the array.</text>
      <param>i Index</param>
      <return>the previous index</return>
    </javadoc>
    <method type="int" name="previousIndex" startLine="196" endLine="199">
      <declaration type="int" name="index" />
    </method>
  </class>
</source>
