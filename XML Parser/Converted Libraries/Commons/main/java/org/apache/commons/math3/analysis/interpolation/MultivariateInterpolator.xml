<?xml version="1.0" encoding="UTF-8"?>
<source package="org.apache.commons.math3.analysis.interpolation">
  <import name="org.apache.commons.math3.analysis.MultivariateFunction" />
  <import name="org.apache.commons.math3.exception.DimensionMismatchException" />
  <import name="org.apache.commons.math3.exception.MathIllegalArgumentException" />
  <import name="org.apache.commons.math3.exception.NoDataException" />
  <import name="org.apache.commons.math3.exception.NullArgumentException" />
  <interface name="MultivariateInterpolator" startLine="25">
    <javadoc>
      <text>* Interface representing a univariate real interpolating function.</text>
      <since>2.1</since>
      <version>$Id: MultivariateInterpolator.java 1455194 2013-03-11 15:45:54Z luc $</version>
    </javadoc>
    <method name="interpolate" type="MultivariateFunction" startLine="33" endLine="51" />
    <javadoc>
      <text>* Computes an interpolating function for the data set.</text>
      <param>xval the arguments for the interpolation points.{@code xval[i][0]} is the first component of interpolation point{@code i}, {@code xval[i][1]} is the second component, and so on
 * until {@code xval[i][d-1]}, the last component of that interpolation
 * point (where {@code d} is thus the dimension of the space).</param>
      <param>yval the values for the interpolation points</param>
      <return>a function which interpolates the data set</return>
      <throws>MathIllegalArgumentException if the arguments violate assumptions
 * made by the interpolation algorithm.</throws>
      <throws>DimensionMismatchException when the array dimensions are not consistent.</throws>
      <throws>NoDataException if an array has zero-length.</throws>
      <throws>NullArgumentException if the arguments are {@code null}.</throws>
    </javadoc>
  </interface>
</source>
