<?xml version="1.0" encoding="UTF-8"?>
<source package="org.apache.commons.math3.ode.nonstiff">
  <import name="org.apache.commons.math3.util.FastMath" />
  <class name="HighamHall54Integrator" extends="EmbeddedRungeKuttaIntegrator" startLine="23">
    <javadoc>
      <text>* This class implements the 5(4) Higham and Hall integrator for
 * Ordinary Differential Equations.
 * <p>This integrator is an embedded Runge-Kutta integrator
 * of order 5(4) used in local extrapolation mode (i.e. the solution
 * is computed using the high order formula) with stepsize control
 * (and automatic step initialization) and continuous output. This
 * method uses 7 functions evaluations per step.</p></text>
      <version>$Id: HighamHall54Integrator.java 1416643 2012-12-03 19:37:14Z tn $</version>
      <since>1.2</since>
    </javadoc>
    <javadoc>
      <text>* Integrator method name.</text>
    </javadoc>
    <declaration type="String" name="METHOD_NAME" />
    <javadoc>
      <text>* Time steps Butcher array.</text>
    </javadoc>
    <declaration type="double[]" name="STATIC_C" />
    <javadoc>
      <text>* Internal weights Butcher array.</text>
    </javadoc>
    <declaration type="double[][]" name="STATIC_A" />
    <javadoc>
      <text>* Propagation weights Butcher array.</text>
    </javadoc>
    <declaration type="double[]" name="STATIC_B" />
    <javadoc>
      <text>* Error weights Butcher array.</text>
    </javadoc>
    <declaration type="double[]" name="STATIC_E" />
    <javadoc>
      <text>* Simple constructor.
 * Build a fifth order Higham and Hall integrator with the given step bounds</text>
      <param>minStep minimal step (sign is irrelevant, regardless of
 * integration direction, forward or backward), the last step can
 * be smaller than this</param>
      <param>maxStep maximal step (sign is irrelevant, regardless of
 * integration direction, forward or backward), the last step can
 * be smaller than this</param>
      <param>scalAbsoluteTolerance allowed absolute error</param>
      <param>scalRelativeTolerance allowed relative error</param>
    </javadoc>
    <method type="constructor" name="HighamHall54Integrator" startLine="80" endLine="83" />
    <javadoc>
      <text>* Simple constructor.
 * Build a fifth order Higham and Hall integrator with the given step bounds</text>
      <param>minStep minimal step (sign is irrelevant, regardless of
 * integration direction, forward or backward), the last step can
 * be smaller than this</param>
      <param>maxStep maximal step (sign is irrelevant, regardless of
 * integration direction, forward or backward), the last step can
 * be smaller than this</param>
      <param>vecAbsoluteTolerance allowed absolute error</param>
      <param>vecRelativeTolerance allowed relative error</param>
    </javadoc>
    <method type="constructor" name="HighamHall54Integrator" startLine="98" endLine="101" />
    <javadoc>
      <text>* {@inheritDoc}</text>
    </javadoc>
    <method type="int" name="getOrder" startLine="105" endLine="107" />
    <javadoc>
      <text>* {@inheritDoc}</text>
    </javadoc>
    <method type="double" name="estimateError" startLine="113" endLine="134">
      <declaration type="double" name="error" />
      <scope startLine="117" endLine="130">
        <declaration type="double" name="errSum" />
        <scope startLine="119" endLine="121" />
        <declaration type="double" name="yScale" />
        <declaration type="double" name="tol" />
        <declaration type="double" name="ratio" />
      </scope>
    </method>
  </class>
</source>
