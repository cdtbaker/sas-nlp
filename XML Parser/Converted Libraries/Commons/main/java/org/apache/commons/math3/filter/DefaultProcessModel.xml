<?xml version="1.0" encoding="UTF-8"?>
<source package="org.apache.commons.math3.filter">
  <import name="org.apache.commons.math3.exception.DimensionMismatchException" />
  <import name="org.apache.commons.math3.exception.NoDataException" />
  <import name="org.apache.commons.math3.exception.NullArgumentException" />
  <import name="org.apache.commons.math3.linear.Array2DRowRealMatrix" />
  <import name="org.apache.commons.math3.linear.ArrayRealVector" />
  <import name="org.apache.commons.math3.linear.RealMatrix" />
  <import name="org.apache.commons.math3.linear.RealVector" />
  <class name="DefaultProcessModel" startLine="27">
    <implements name="ProcessModel" />
    <javadoc>
      <text>* Default implementation of a {@link ProcessModel} for the use with a {@link KalmanFilter}.</text>
      <since>3.0</since>
      <version>$Id: DefaultProcessModel.java 1416643 2012-12-03 19:37:14Z tn $</version>
    </javadoc>
    <javadoc>
      <text>* The state transition matrix, used to advance the internal state estimation each time-step.</text>
    </javadoc>
    <declaration type="RealMatrix" name="stateTransitionMatrix" />
    <javadoc>
      <text>* The control matrix, used to integrate a control input into the state estimation.</text>
    </javadoc>
    <declaration type="RealMatrix" name="controlMatrix" />
    <javadoc>
      <text>* The process noise covariance matrix.</text>
    </javadoc>
    <declaration type="RealMatrix" name="processNoiseCovMatrix" />
    <javadoc>
      <text>* The initial state estimation of the observed process.</text>
    </javadoc>
    <declaration type="RealVector" name="initialStateEstimateVector" />
    <javadoc>
      <text>* The initial error covariance matrix of the observed process.</text>
    </javadoc>
    <declaration type="RealMatrix" name="initialErrorCovMatrix" />
    <javadoc>
      <text>* Create a new {@link ProcessModel}, taking double arrays as input parameters.</text>
      <param>stateTransitionthe state transition matrix</param>
      <param>controlthe control matrix</param>
      <param>processNoisethe process noise matrix</param>
      <param>initialStateEstimatethe initial state estimate vector</param>
      <param>initialErrorCovariancethe initial error covariance matrix</param>
      <throws>NullArgumentExceptionif any of the input arrays is {@code null}</throws>
      <throws>NoDataExceptionif any row / column dimension of the input matrices is zero</throws>
      <throws>DimensionMismatchExceptionif any of the input matrices is non-rectangular</throws>
    </javadoc>
    <method type="constructor" name="DefaultProcessModel" startLine="78" endLine="85" />
    <javadoc>
      <text>* Create a new {@link ProcessModel}, taking double arrays as input parameters.
 * <p>
 * The initial state estimate and error covariance are omitted and will be initialized by the{@link KalmanFilter} to default values.</text>
      <param>stateTransitionthe state transition matrix</param>
      <param>controlthe control matrix</param>
      <param>processNoisethe process noise matrix</param>
      <throws>NullArgumentExceptionif any of the input arrays is {@code null}</throws>
      <throws>NoDataExceptionif any row / column dimension of the input matrices is zero</throws>
      <throws>DimensionMismatchExceptionif any of the input matrices is non-rectangular</throws>
    </javadoc>
    <method type="constructor" name="DefaultProcessModel" startLine="109" endLine="114" />
    <javadoc>
      <text>* Create a new {@link ProcessModel}, taking double arrays as input parameters.</text>
      <param>stateTransitionthe state transition matrix</param>
      <param>controlthe control matrix</param>
      <param>processNoisethe process noise matrix</param>
      <param>initialStateEstimatethe initial state estimate vector</param>
      <param>initialErrorCovariancethe initial error covariance matrix</param>
    </javadoc>
    <method type="constructor" name="DefaultProcessModel" startLine="134" endLine="140" />
    <javadoc>
      <text>* {@inheritDoc}</text>
    </javadoc>
    <method type="RealMatrix" name="getStateTransitionMatrix" startLine="143" endLine="145" />
    <javadoc>
      <text>* {@inheritDoc}</text>
    </javadoc>
    <method type="RealMatrix" name="getControlMatrix" startLine="148" endLine="150" />
    <javadoc>
      <text>* {@inheritDoc}</text>
    </javadoc>
    <method type="RealMatrix" name="getProcessNoise" startLine="153" endLine="155" />
    <javadoc>
      <text>* {@inheritDoc}</text>
    </javadoc>
    <method type="RealVector" name="getInitialStateEstimate" startLine="158" endLine="160" />
    <javadoc>
      <text>* {@inheritDoc}</text>
    </javadoc>
    <method type="RealMatrix" name="getInitialErrorCovariance" startLine="163" endLine="165" />
  </class>
</source>
