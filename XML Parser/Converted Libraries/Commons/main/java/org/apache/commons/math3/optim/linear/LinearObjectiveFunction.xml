<?xml version="1.0" encoding="UTF-8"?>
<source package="org.apache.commons.math3.optim.linear">
  <import name="java.io.IOException" />
  <import name="java.io.ObjectInputStream" />
  <import name="java.io.ObjectOutputStream" />
  <import name="java.io.Serializable" />
  <import name="org.apache.commons.math3.analysis.MultivariateFunction" />
  <import name="org.apache.commons.math3.linear.MatrixUtils" />
  <import name="org.apache.commons.math3.linear.RealVector" />
  <import name="org.apache.commons.math3.linear.ArrayRealVector" />
  <import name="org.apache.commons.math3.optim.OptimizationData" />
  <class name="LinearObjectiveFunction" startLine="29">
    <implements name="MultivariateFunction" />
    <implements name="OptimizationData" />
    <implements name="Serializable" />
    <javadoc>
      <text>* An objective function for a linear optimization problem.
 * <p>
 * A linear objective function has one the form:
 * <pre>
 * c<sub>1</sub>x<sub>1</sub> + ... c<sub>n</sub>x<sub>n</sub> + d
 * </pre>
 * The c<sub>i</sub> and d are the coefficients of the equation,
 * the x<sub>i</sub> are the coordinates of the current point.
 * </p></text>
      <version>$Id: LinearObjectiveFunction.java 1435539 2013-01-19 13:27:24Z tn $</version>
      <since>2.0</since>
    </javadoc>
    <javadoc>
      <text>* Serializable version identifier.</text>
    </javadoc>
    <declaration type="long" name="serialVersionUID" />
    <javadoc>
      <text>* Coefficients of the linear equation (c<sub>i</sub>).</text>
    </javadoc>
    <declaration type="RealVector" name="coefficients" />
    <javadoc>
      <text>* Constant term of the linear equation.</text>
    </javadoc>
    <declaration type="double" name="constantTerm" />
    <javadoc>
      <param>coefficients Coefficients for the linear equation being optimized.</param>
      <param>constantTerm Constant term of the linear equation.</param>
    </javadoc>
    <method type="constructor" name="LinearObjectiveFunction" startLine="58" endLine="60" />
    <javadoc>
      <param>coefficients Coefficients for the linear equation being optimized.</param>
      <param>constantTerm Constant term of the linear equation.</param>
    </javadoc>
    <method type="constructor" name="LinearObjectiveFunction" startLine="66" endLine="69" />
    <javadoc>
      <text>* Gets the coefficients of the linear equation being optimized.</text>
      <return>coefficients of the linear equation being optimized.</return>
    </javadoc>
    <method type="RealVector" name="getCoefficients" startLine="76" endLine="78" />
    <javadoc>
      <text>* Gets the constant of the linear equation being optimized.</text>
      <return>constant of the linear equation being optimized.</return>
    </javadoc>
    <method type="double" name="getConstantTerm" startLine="85" endLine="87" />
    <javadoc>
      <text>* Computes the value of the linear equation at the current point.</text>
      <param>point Point at which linear equation must be evaluated.</param>
      <return>the value of the linear equation at the current point.</return>
    </javadoc>
    <method type="double" name="value" startLine="95" endLine="97" />
    <javadoc>
      <text>* Computes the value of the linear equation at the current point.</text>
      <param>point Point at which linear equation must be evaluated.</param>
      <return>the value of the linear equation at the current point.</return>
    </javadoc>
    <method type="double" name="value" startLine="105" endLine="107" />
    <method type="boolean" name="equals" startLine="110" endLine="120">
      <scope startLine="111" endLine="113" />
      <scope startLine="114" endLine="117">
        <declaration type="LinearObjectiveFunction" name="rhs" />
      </scope>
    </method>
    <method type="int" name="hashCode" startLine="123" endLine="125" />
    <javadoc>
      <text>* Serialize the instance.</text>
      <param>oos stream where object should be written</param>
      <throws>IOException if object cannot be written to stream</throws>
    </javadoc>
    <method type="void" name="writeObject" startLine="133" endLine="136" />
    <javadoc>
      <text>* Deserialize the instance.</text>
      <param>ois stream from which the object should be read</param>
      <throws>ClassNotFoundException if a class in the stream cannot be found</throws>
      <throws>IOException if object cannot be read from the stream</throws>
    </javadoc>
    <method type="void" name="readObject" startLine="145" endLine="148" />
  </class>
</source>
