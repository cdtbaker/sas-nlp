<?xml version="1.0" encoding="UTF-8"?>
<source package="org.apache.commons.math3.linear">
  <import name="org.apache.commons.math3.exception.DimensionMismatchException" />
  <import name="org.apache.commons.math3.exception.MaxCountExceededException" />
  <import name="org.apache.commons.math3.exception.NullArgumentException" />
  <import name="org.apache.commons.math3.exception.util.ExceptionContext" />
  <import name="org.apache.commons.math3.util.IterationManager" />
  <class name="ConjugateGradient" extends="PreconditionedIterativeLinearSolver" startLine="25">
    <javadoc>
      <text>* <p>
 * This is an implementation of the conjugate gradient method for{@link RealLinearOperator}. It follows closely the template by <a
 * href="#BARR1994">Barrett et al. (1994)</a> (figure 2.5). The linear system at
 * hand is A &middot; x = b, and the residual is r = b - A &middot; x.
 * </p>
 * <h3><a id="stopcrit">Default stopping criterion</a></h3>
 * <p>
 * A default stopping criterion is implemented. The iterations stop when || r ||
 * &le; &delta; || b ||, where b is the right-hand side vector, r the current
 * estimate of the residual, and &delta; a user-specified tolerance. It should
 * be noted that r is the so-called <em>updated</em> residual, which might
 * differ from the true residual due to rounding-off errors (see e.g. <a
 * href="#STRA2002">Strakos and Tichy, 2002</a>).
 * </p>
 * <h3>Iteration count</h3>
 * <p>
 * In the present context, an iteration should be understood as one evaluation
 * of the matrix-vector product A &middot; x. The initialization phase therefore
 * counts as one iteration.
 * </p>
 * <h3><a id="context">Exception context</a></h3>
 * <p>
 * Besides standard {@link DimensionMismatchException}, this class might throw{@link NonPositiveDefiniteOperatorException} if the linear operator or
 * the preconditioner are not positive definite. In this case, the{@link ExceptionContext} provides some more information
 * <ul>
 * <li>key {@code "operator"} points to the offending linear operator, say L,</li>
 * <li>key {@code "vector"} points to the offending vector, say x, such that
 * x<sup>T</sup> &middot; L &middot; x < 0.</li>
 * </ul>
 * </p>
 * <h3>References</h3>
 * <dl>
 * <dt><a id="BARR1994">Barret et al. (1994)</a></dt>
 * <dd>R. Barrett, M. Berry, T. F. Chan, J. Demmel, J. M. Donato, J. Dongarra,
 * V. Eijkhout, R. Pozo, C. Romine and H. Van der Vorst,
 * <a href="http://www.netlib.org/linalg/html_templates/Templates.html"><em>
 * Templates for the Solution of Linear Systems: Building Blocks for Iterative
 * Methods</em></a>, SIAM</dd>
 * <dt><a id="STRA2002">Strakos and Tichy (2002)
 * <dt>
 * <dd>Z. Strakos and P. Tichy, <a
 * href="http://etna.mcs.kent.edu/vol.13.2002/pp56-80.dir/pp56-80.pdf">
 * <em>On error estimation in the conjugate gradient method and why it works
 * in finite precision computations</em></a>, Electronic Transactions on
 * Numerical Analysis 13: 56-80, 2002</dd>
 * </dl></text>
      <version>$Id: ConjugateGradient.java 1416643 2012-12-03 19:37:14Z tn $</version>
      <since>3.0</since>
    </javadoc>
    <javadoc>
      <text>* Key for the <a href="#context">exception context</a>.</text>
    </javadoc>
    <declaration type="String" name="OPERATOR" />
    <javadoc>
      <text>* Key for the <a href="#context">exception context</a>.</text>
    </javadoc>
    <declaration type="String" name="VECTOR" />
    <javadoc>
      <text>* {@code true} if positive-definiteness of matrix and preconditioner should
 * be checked.</text>
    </javadoc>
    <declaration type="boolean" name="check" />
    <javadoc>
      <text>* The value of &delta;, for the default stopping criterion.</text>
    </javadoc>
    <declaration type="double" name="delta" />
    <javadoc>
      <text>* Creates a new instance of this class, with <a href="#stopcrit">default
 * stopping criterion</a>.</text>
      <param>maxIterations the maximum number of iterations</param>
      <param>delta the &delta; parameter for the default stopping criterion</param>
      <param>check {@code true} if positive definiteness of both matrix and
 * preconditioner should be checked</param>
    </javadoc>
    <method type="constructor" name="ConjugateGradient" startLine="107" endLine="111" />
    <javadoc>
      <text>* Creates a new instance of this class, with <a href="#stopcrit">default
 * stopping criterion</a> and custom iteration manager.</text>
      <param>manager the custom iteration manager</param>
      <param>delta the &delta; parameter for the default stopping criterion</param>
      <param>check {@code true} if positive definiteness of both matrix and
 * preconditioner should be checked</param>
      <throws>NullArgumentException if {@code manager} is {@code null}</throws>
    </javadoc>
    <method type="constructor" name="ConjugateGradient" startLine="125" endLine="129" />
    <javadoc>
      <text>* Returns {@code true} if positive-definiteness should be checked for both
 * matrix and preconditioner.</text>
      <return>{@code true} if the tests are to be performed</return>
    </javadoc>
    <method type="boolean" name="getCheck" startLine="137" endLine="139" />
    <javadoc>
      <text>* {@inheritDoc}</text>
      <throws>NonPositiveDefiniteOperatorException if {@code a} or {@code m} is
 * not positive definite</throws>
    </javadoc>
    <method type="RealVector" name="solveInPlace" startLine="154" endLine="235">
      <declaration type="IterationManager" name="manager" />
      <declaration type="double" name="rmax" />
      <declaration type="RealVector" name="bro" />
      <declaration type="RealVector" name="x" />
      <declaration type="RealVector" name="xro" />
      <declaration type="RealVector" name="p" />
      <declaration type="RealVector" name="q" />
      <declaration type="RealVector" name="r" />
      <declaration type="RealVector" name="rro" />
      <declaration type="double" name="rnorm" />
      <declaration type="RealVector" name="z" />
      <scope startLine="176" endLine="178" />
      <scope startLine="178" endLine="180" />
      <declaration type="IterativeLinearSolverEvent" name="evt" />
      <scope startLine="185" endLine="188" />
      <declaration type="double" name="rhoPrev" />
      <scope startLine="190" endLine="234">
        <scope startLine="195" endLine="197" />
        <declaration type="double" name="rhoNext" />
        <scope startLine="199" endLine="206">
          <declaration type="NonPositiveDefiniteOperatorException" name="e" />
          <declaration type="ExceptionContext" name="context" />
        </scope>
        <scope startLine="207" endLine="209" />
        <scope startLine="209" endLine="211" />
        <declaration type="double" name="pq" />
        <scope startLine="214" endLine="221">
          <declaration type="NonPositiveDefiniteOperatorException" name="e" />
          <declaration type="ExceptionContext" name="context" />
        </scope>
        <declaration type="double" name="alpha" />
        <scope startLine="230" endLine="233" />
      </scope>
      <comment>Initialization of default stopping criterion</comment>
      <comment>Initialization phase counts as one iteration.</comment>
      <comment>p and x are constructed as copies of x0, since presumably, the type</comment>
      <comment>of x is optimized for the calculation of the matrix-vector product</comment>
      <comment>A.x.</comment>
    </method>
  </class>
</source>
