<?xml version="1.0" encoding="UTF-8"?>
<source package="org.apache.commons.math3.stat.correlation">
  <import name="org.apache.commons.math3.exception.NumberIsTooSmallException" />
  <import name="org.apache.commons.math3.exception.util.LocalizedFormats" />
  <class name="StorelessBivariateCovariance" startLine="22">
    <javadoc>
      <text>* Bivariate Covariance implementation that does not require input data to be
 * stored in memory.
 * <p>This class is based on a paper written by Philippe P&eacute;bay:
 * <a href="http://prod.sandia.gov/techlib/access-control.cgi/2008/086212.pdf">
 * Formulas for Robust, One-Pass Parallel Computation of Covariances and
 * Arbitrary-Order Statistical Moments</a>, 2008, Technical Report SAND2008-6212,
 * Sandia National Laboratories. It computes the covariance for a pair of variables.
 * Use {@link StorelessCovariance} to estimate an entire covariance matrix.</p>
 * <p>Note: This class is package private as it is only used internally in
 * the {@link StorelessCovariance} class.</p></text>
      <version>$Id: StorelessBivariateCovariance.java 1410238 2012-11-16 07:58:49Z luc $</version>
      <since>3.0</since>
    </javadoc>
    <javadoc>
      <text>* the mean of variable x</text>
    </javadoc>
    <declaration type="double" name="meanX" />
    <javadoc>
      <text>* the mean of variable y</text>
    </javadoc>
    <declaration type="double" name="meanY" />
    <javadoc>
      <text>* number of observations</text>
    </javadoc>
    <declaration type="double" name="n" />
    <javadoc>
      <text>* the running covariance estimate</text>
    </javadoc>
    <declaration type="double" name="covarianceNumerator" />
    <javadoc>
      <text>* flag for bias correction</text>
    </javadoc>
    <declaration type="boolean" name="biasCorrected" />
    <javadoc>
      <text>* Create an empty {@link StorelessBivariateCovariance} instance with
 * bias correction.</text>
    </javadoc>
    <method type="constructor" name="StorelessBivariateCovariance" startLine="60" endLine="62" />
    <javadoc>
      <text>* Create an empty {@link StorelessBivariateCovariance} instance.</text>
      <param>biasCorrection if <code>true</code> the covariance estimate is corrected
 * for bias, i.e. n-1 in the denominator, otherwise there is no bias correction,
 * i.e. n in the denominator.</param>
    </javadoc>
    <method type="constructor" name="StorelessBivariateCovariance" startLine="71" endLine="76" />
    <javadoc>
      <text>* Update the covariance estimation with a pair of variables (x, y).</text>
      <param>x the x value</param>
      <param>y the y value</param>
    </javadoc>
    <method type="void" name="increment" startLine="84" endLine="91">
      <declaration type="double" name="deltaX" />
      <declaration type="double" name="deltaY" />
    </method>
    <javadoc>
      <text>* Returns the number of observations.</text>
      <return>number of observations</return>
    </javadoc>
    <method type="double" name="getN" startLine="98" endLine="100" />
    <javadoc>
      <text>* Return the current covariance estimate.</text>
      <return>the current covariance</return>
      <throws>NumberIsTooSmallException if the number of observations
 * is &lt; 2</throws>
    </javadoc>
    <method type="double" name="getResult" startLine="109" endLine="119">
      <scope startLine="110" endLine="113" />
      <scope startLine="114" endLine="116" />
      <scope startLine="116" endLine="118" />
    </method>
  </class>
</source>
