<?xml version="1.0" encoding="UTF-8"?>
<source package="org.apache.commons.math3.stat.descriptive.moment">
  <import name="java.io.Serializable" />
  <import name="org.apache.commons.math3.exception.NullArgumentException" />
  <import name="org.apache.commons.math3.stat.descriptive.AbstractStorelessUnivariateStatistic" />
  <import name="org.apache.commons.math3.util.MathUtils" />
  <class name="FirstMoment" extends="AbstractStorelessUnivariateStatistic" startLine="25">
    <implements name="Serializable" />
    <javadoc>
      <text>* Computes the first moment (arithmetic mean).  Uses the definitional formula:
 * <p>
 * mean = sum(x_i) / n </p>
 * <p>
 * where <code>n</code> is the number of observations. </p>
 * <p>
 * To limit numeric errors, the value of the statistic is computed using the
 * following recursive updating algorithm: </p>
 * <p>
 * <ol>
 * <li>Initialize <code>m = </code> the first value</li>
 * <li>For each additional value, update using <br>
 * <code>m = m + (new value - m) / (number of observations)</code></li>
 * </ol></p>
 * <p>
 * Returns <code>Double.NaN</code> if the dataset is empty.</p>
 * <p>
 * <strong>Note that this implementation is not synchronized.</strong> If
 * multiple threads access an instance of this class concurrently, and at least
 * one of the threads invokes the <code>increment()</code> or
 * <code>clear()</code> method, it must be synchronized externally.</p></text>
      <version>$Id: FirstMoment.java 1416643 2012-12-03 19:37:14Z tn $</version>
    </javadoc>
    <javadoc>
      <text>* Serializable version identifier</text>
    </javadoc>
    <declaration type="long" name="serialVersionUID" />
    <javadoc>
      <text>* Count of values that have been added</text>
    </javadoc>
    <declaration type="long" name="n" />
    <javadoc>
      <text>* First moment of values that have been added</text>
    </javadoc>
    <declaration type="double" name="m1" />
    <javadoc>
      <text>* Deviation of most recently added value from previous first moment.
 * Retained to prevent repeated computation in higher order moments.</text>
    </javadoc>
    <declaration type="double" name="dev" />
    <javadoc>
      <text>* Deviation of most recently added value from previous first moment,
 * normalized by previous sample size.  Retained to prevent repeated
 * computation in higher order moments</text>
    </javadoc>
    <declaration type="double" name="nDev" />
    <javadoc>
      <text>* Create a FirstMoment instance</text>
    </javadoc>
    <method type="constructor" name="FirstMoment" startLine="79" endLine="84" />
    <javadoc>
      <text>* Copy constructor, creates a new {@code FirstMoment} identical
 * to the {@code original}</text>
      <param>original the {@code FirstMoment} instance to copy</param>
      <throws>NullArgumentException if original is null</throws>
    </javadoc>
    <method type="constructor" name="FirstMoment" startLine="93" endLine="96" />
    <javadoc>
      <text>* {@inheritDoc}</text>
    </javadoc>
    <method type="void" name="increment" startLine="102" endLine="111">
      <scope startLine="103" endLine="105" />
      <declaration type="double" name="n0" />
    </method>
    <javadoc>
      <text>* {@inheritDoc}</text>
    </javadoc>
    <method type="void" name="clear" startLine="117" endLine="122" />
    <javadoc>
      <text>* {@inheritDoc}</text>
    </javadoc>
    <method type="double" name="getResult" startLine="128" endLine="130" />
    <javadoc>
      <text>* {@inheritDoc}</text>
    </javadoc>
    <method type="long" name="getN" startLine="135" endLine="137" />
    <javadoc>
      <text>* {@inheritDoc}</text>
    </javadoc>
    <method type="FirstMoment" name="copy" startLine="143" endLine="148">
      <declaration type="FirstMoment" name="result" />
      <comment>No try-catch or advertised exception because args are guaranteed non-null</comment>
    </method>
    <javadoc>
      <text>* Copies source to dest.
 * <p>Neither source nor dest can be null.</p></text>
      <param>source FirstMoment to copy</param>
      <param>dest FirstMoment to copy to</param>
      <throws>NullArgumentException if either source or dest is null</throws>
    </javadoc>
    <method type="void" name="copy" startLine="159" endLine="167" />
  </class>
</source>
