<?xml version="1.0" encoding="UTF-8"?>
<source package="org.apache.commons.math3.linear">
  <import name="java.util.ArrayList" />
  <import name="org.apache.commons.math3.Field" />
  <import name="org.apache.commons.math3.FieldElement" />
  <import name="org.apache.commons.math3.exception.DimensionMismatchException" />
  <import name="org.apache.commons.math3.exception.NoDataException" />
  <import name="org.apache.commons.math3.exception.NotPositiveException" />
  <import name="org.apache.commons.math3.exception.NotStrictlyPositiveException" />
  <import name="org.apache.commons.math3.exception.NullArgumentException" />
  <import name="org.apache.commons.math3.exception.NumberIsTooSmallException" />
  <import name="org.apache.commons.math3.exception.OutOfRangeException" />
  <import name="org.apache.commons.math3.exception.util.LocalizedFormats" />
  <import name="org.apache.commons.math3.util.MathArrays" />
  <class name="AbstractFieldMatrix" startLine="34">
    <implements name="FieldMatrix<T>" />
    <javadoc>
      <text>* Basic implementation of {@link FieldMatrix} methods regardless of the underlying storage.
 * <p>All the methods implemented here use {@link #getEntry(int,int)} to access
 * matrix elements. Derived class can provide faster implementations. </p></text>
      <param><T>
 *  Type of the field elements.</param>
      <version>$Id: AbstractFieldMatrix.java 1454876 2013-03-10 16:41:08Z luc $</version>
      <since>2.0</since>
    </javadoc>
    <javadoc>
      <text>* Field to which the elements belong.</text>
    </javadoc>
    <declaration type="Field<T>" name="field" />
    <javadoc>
      <text>* Constructor for use with Serializable</text>
    </javadoc>
    <method type="constructor" name="AbstractFieldMatrix" startLine="52" endLine="54" />
    <javadoc>
      <text>* Creates a matrix with no data</text>
      <param>field field to which the elements belong</param>
    </javadoc>
    <method type="constructor" name="AbstractFieldMatrix" startLine="60" endLine="62" />
    <javadoc>
      <text>* Create a new FieldMatrix<T> with the supplied row and column dimensions.</text>
      <param>field Field to which the elements belong.</param>
      <param>rowDimension Number of rows in the new matrix.</param>
      <param>columnDimension Number of columns in the new matrix.</param>
      <throws>NotStrictlyPositiveException if row or column dimension is not
 * positive.</throws>
    </javadoc>
    <method type="constructor" name="AbstractFieldMatrix" startLine="76" endLine="86">
      <scope startLine="77" endLine="80" />
      <scope startLine="81" endLine="84" />
    </method>
    <javadoc>
      <text>* Get the elements type from an array.</text>
      <param><T>
 *  Type of the field elements.</param>
      <param>d Data array.</param>
      <return>the field to which the array elements belong.</return>
      <throws>NullArgumentException if the array is {@code null}.</throws>
      <throws>NoDataException if the array is empty.</throws>
    </javadoc>
    <method type="Field<T>" name="extractField" startLine="98" endLine="109">
      <scope startLine="99" endLine="101" />
      <scope startLine="102" endLine="104" />
      <scope startLine="105" endLine="107" />
    </method>
    <javadoc>
      <text>* Get the elements type from an array.</text>
      <param><T>
 *  Type of the field elements.</param>
      <param>d Data array.</param>
      <return>the field to which the array elements belong.</return>
      <throws>NoDataException if array is empty.</throws>
    </javadoc>
    <method type="Field<T>" name="extractField" startLine="120" endLine="125">
      <scope startLine="121" endLine="123" />
    </method>
    <javadoc>
      <text>* Build an array of elements.
 * <p>
 * Complete arrays are filled with field.getZero()
 * </p></text>
      <param><T>
 *  Type of the field elements</param>
      <param>field field to which array elements belong</param>
      <param>rows number of rows</param>
      <param>columns number of columns (may be negative to build partial
 * arrays in the same way <code>new Field[rows][]</code> works)</param>
      <return>a new array</return>
      <deprecated>as of 3.2, replaced by {@link MathArrays#buildArray(Field,int,int)}</deprecated>
    </javadoc>
    <method type="T[][]" name="buildArray" startLine="142" endLine="144" />
    <javadoc>
      <text>* Build an array of elements.
 * <p>
 * Arrays are filled with field.getZero()
 * </p></text>
      <param><T>
 *  the type of the field elements</param>
      <param>field field to which array elements belong</param>
      <param>length of the array</param>
      <return>a new array</return>
      <deprecated>as of 3.2, replaced by {@link MathArrays#buildArray(Field,int)}</deprecated>
    </javadoc>
    <method type="T[]" name="buildArray" startLine="158" endLine="160" />
    <javadoc>
      <text>* {@inheritDoc}</text>
    </javadoc>
    <method type="Field<T>" name="getField" startLine="163" endLine="165" />
    <method name="createMatrix" type="FieldMatrix<T>" startLine="167" endLine="170" />
    <javadoc>
      <text>* {@inheritDoc}</text>
    </javadoc>
    <method name="copy" type="FieldMatrix<T>" startLine="172" endLine="173" />
    <javadoc>
      <text>* {@inheritDoc}</text>
    </javadoc>
    <javadoc>
      <text>* {@inheritDoc}</text>
    </javadoc>
    <method type="FieldMatrix<T>" name="add" startLine="177" endLine="191">
      <declaration type="int" name="rowCount" />
      <declaration type="int" name="columnCount" />
      <declaration type="FieldMatrix<T>" name="out" />
      <scope startLine="184" endLine="188">
        <scope startLine="185" endLine="187" />
      </scope>
      <comment>safety check</comment>
    </method>
    <javadoc>
      <text>* {@inheritDoc}</text>
    </javadoc>
    <method type="FieldMatrix<T>" name="subtract" startLine="195" endLine="209">
      <declaration type="int" name="rowCount" />
      <declaration type="int" name="columnCount" />
      <declaration type="FieldMatrix<T>" name="out" />
      <scope startLine="202" endLine="206">
        <scope startLine="203" endLine="205" />
      </scope>
      <comment>safety check</comment>
    </method>
    <javadoc>
      <text>* {@inheritDoc}</text>
    </javadoc>
    <method type="FieldMatrix<T>" name="scalarAdd" startLine="212" endLine="224">
      <declaration type="int" name="rowCount" />
      <declaration type="int" name="columnCount" />
      <declaration type="FieldMatrix<T>" name="out" />
      <scope startLine="217" endLine="221">
        <scope startLine="218" endLine="220" />
      </scope>
    </method>
    <javadoc>
      <text>* {@inheritDoc}</text>
    </javadoc>
    <method type="FieldMatrix<T>" name="scalarMultiply" startLine="227" endLine="238">
      <declaration type="int" name="rowCount" />
      <declaration type="int" name="columnCount" />
      <declaration type="FieldMatrix<T>" name="out" />
      <scope startLine="231" endLine="235">
        <scope startLine="232" endLine="234" />
      </scope>
    </method>
    <javadoc>
      <text>* {@inheritDoc}</text>
    </javadoc>
    <method type="FieldMatrix<T>" name="multiply" startLine="242" endLine="261">
      <declaration type="int" name="nRows" />
      <declaration type="int" name="nCols" />
      <declaration type="int" name="nSum" />
      <declaration type="FieldMatrix<T>" name="out" />
      <scope startLine="250" endLine="258">
        <scope startLine="251" endLine="257">
          <declaration type="T" name="sum" />
          <scope startLine="253" endLine="255" />
        </scope>
      </scope>
      <comment>safety check</comment>
    </method>
    <javadoc>
      <text>* {@inheritDoc}</text>
    </javadoc>
    <method type="FieldMatrix<T>" name="preMultiply" startLine="265" endLine="267" />
    <javadoc>
      <text>* {@inheritDoc}</text>
    </javadoc>
    <method type="FieldMatrix<T>" name="power" startLine="271" endLine="326">
      <scope startLine="272" endLine="274" />
      <scope startLine="276" endLine="278" />
      <scope startLine="280" endLine="282" />
      <scope startLine="284" endLine="286" />
      <declaration type="int" name="power" />
      <declaration type="char[]" name="binaryRepresentation" />
      <declaration type="ArrayList<Integer>" name="nonZeroPositions" />
      <scope startLine="301" endLine="306">
        <scope startLine="302" endLine="305">
          <declaration type="int" name="pos" />
        </scope>
      </scope>
      <declaration type="ArrayList<FieldMatrix<T>>" name="results" />
      <scope startLine="313" endLine="317">
        <declaration type="FieldMatrix<T>" name="s" />
        <declaration type="FieldMatrix<T>" name="r" />
      </scope>
      <declaration type="FieldMatrix<T>" name="result" />
      <scope startLine="321" endLine="323" />
      <comment>Only log_2(p) operations is used by doing as follows:
 5^214 = 5^128  5^64  5^16  5^4  5^2

 In general, the same approach is used for A^p.</comment>
    </method>
    <javadoc>
      <text>* {@inheritDoc}</text>
    </javadoc>
    <method type="T[][]" name="getData" startLine="329" endLine="340">
      <declaration type="T[][]" name="data" />
      <scope startLine="332" endLine="337">
        <declaration type="T[]" name="dataI" />
        <scope startLine="334" endLine="336" />
      </scope>
    </method>
    <javadoc>
      <text>* {@inheritDoc}</text>
    </javadoc>
    <method type="FieldMatrix<T>" name="getSubMatrix" startLine="345" endLine="358">
      <declaration type="FieldMatrix<T>" name="subMatrix" />
      <scope startLine="350" endLine="354">
        <scope startLine="351" endLine="353" />
      </scope>
    </method>
    <javadoc>
      <text>* {@inheritDoc}</text>
    </javadoc>
    <method type="FieldMatrix<T>" name="getSubMatrix" startLine="363" endLine="383">
      <declaration type="FieldMatrix<T>" name="subMatrix" />
      <javadoc>
        <text>* {@inheritDoc}</text>
      </javadoc>
      <method type="T" name="visit" startLine="375" endLine="377" />
      <comment>safety checks</comment>
      <comment>copy entries</comment>
    </method>
    <javadoc>
      <text>* {@inheritDoc}</text>
    </javadoc>
    <method type="void" name="copySubMatrix" startLine="390" endLine="428">
      <declaration type="int" name="rowsCount" />
      <declaration type="int" name="columnsCount" />
      <scope startLine="395" endLine="400" />
      <javadoc>
        <text>* Initial row index.</text>
      </javadoc>
      <declaration type="int" name="startRow" />
      <javadoc>
        <text>* Initial column index.</text>
      </javadoc>
      <declaration type="int" name="startColumn" />
      <javadoc>
        <text>* {@inheritDoc}</text>
      </javadoc>
      <method type="void" name="start" startLine="415" endLine="418" />
      <javadoc>
        <text>* {@inheritDoc}</text>
      </javadoc>
      <method type="void" name="visit" startLine="422" endLine="424" />
      <comment>safety checks</comment>
      <comment>copy entries</comment>
    </method>
    <javadoc>
      <text>* {@inheritDoc}</text>
    </javadoc>
    <method type="void" name="copySubMatrix" startLine="433" endLine="452">
      <scope startLine="437" endLine="442" />
      <scope startLine="445" endLine="450">
        <declaration type="T[]" name="destinationI" />
        <scope startLine="447" endLine="449" />
      </scope>
      <comment>safety checks</comment>
      <comment>copy entries</comment>
    </method>
    <javadoc>
      <text>* {@inheritDoc}</text>
    </javadoc>
    <method type="void" name="setSubMatrix" startLine="458" endLine="488">
      <scope startLine="459" endLine="461" />
      <declaration type="int" name="nRows" />
      <scope startLine="463" endLine="465" />
      <declaration type="int" name="nCols" />
      <scope startLine="468" endLine="470" />
      <scope startLine="472" endLine="476">
        <scope startLine="473" endLine="475" />
      </scope>
      <scope startLine="483" endLine="487">
        <scope startLine="484" endLine="486" />
      </scope>
    </method>
    <javadoc>
      <text>* {@inheritDoc}</text>
    </javadoc>
    <method type="FieldMatrix<T>" name="getRowMatrix" startLine="491" endLine="501">
      <declaration type="int" name="nCols" />
      <declaration type="FieldMatrix<T>" name="out" />
      <scope startLine="495" endLine="497" />
    </method>
    <javadoc>
      <text>* {@inheritDoc}</text>
    </javadoc>
    <method type="void" name="setRowMatrix" startLine="505" endLine="518">
      <declaration type="int" name="nCols" />
      <scope startLine="509" endLine="513" />
      <scope startLine="514" endLine="516" />
    </method>
    <javadoc>
      <text>* {@inheritDoc}</text>
    </javadoc>
    <method type="FieldMatrix<T>" name="getColumnMatrix" startLine="522" endLine="533">
      <declaration type="int" name="nRows" />
      <declaration type="FieldMatrix<T>" name="out" />
      <scope startLine="527" endLine="529" />
    </method>
    <javadoc>
      <text>* {@inheritDoc}</text>
    </javadoc>
    <method type="void" name="setColumnMatrix" startLine="537" endLine="550">
      <declaration type="int" name="nRows" />
      <scope startLine="541" endLine="545" />
      <scope startLine="546" endLine="548" />
    </method>
    <javadoc>
      <text>* {@inheritDoc}</text>
    </javadoc>
    <method type="FieldVector<T>" name="getRowVector" startLine="554" endLine="556" />
    <javadoc>
      <text>* {@inheritDoc}</text>
    </javadoc>
    <method type="void" name="setRowVector" startLine="560" endLine="571">
      <declaration type="int" name="nCols" />
      <scope startLine="563" endLine="566" />
      <scope startLine="567" endLine="569" />
    </method>
    <javadoc>
      <text>* {@inheritDoc}</text>
    </javadoc>
    <method type="FieldVector<T>" name="getColumnVector" startLine="575" endLine="577" />
    <javadoc>
      <text>* {@inheritDoc}</text>
    </javadoc>
    <method type="void" name="setColumnVector" startLine="581" endLine="593">
      <declaration type="int" name="nRows" />
      <scope startLine="585" endLine="588" />
      <scope startLine="589" endLine="591" />
    </method>
    <javadoc>
      <text>* {@inheritDoc}</text>
    </javadoc>
    <method type="T[]" name="getRow" startLine="596" endLine="606">
      <declaration type="int" name="nCols" />
      <declaration type="T[]" name="out" />
      <scope startLine="600" endLine="602" />
    </method>
    <javadoc>
      <text>* {@inheritDoc}</text>
    </javadoc>
    <method type="void" name="setRow" startLine="610" endLine="620">
      <declaration type="int" name="nCols" />
      <scope startLine="613" endLine="615" />
      <scope startLine="616" endLine="618" />
    </method>
    <javadoc>
      <text>* {@inheritDoc}</text>
    </javadoc>
    <method type="T[]" name="getColumn" startLine="623" endLine="633">
      <declaration type="int" name="nRows" />
      <declaration type="T[]" name="out" />
      <scope startLine="627" endLine="629" />
    </method>
    <javadoc>
      <text>* {@inheritDoc}</text>
    </javadoc>
    <method type="void" name="setColumn" startLine="637" endLine="646">
      <declaration type="int" name="nRows" />
      <scope startLine="640" endLine="642" />
      <scope startLine="643" endLine="645" />
    </method>
    <method name="getEntry" type="T" startLine="648" endLine="649" />
    <javadoc>
      <text>* {@inheritDoc}</text>
    </javadoc>
    <method name="setEntry" type="void" startLine="651" endLine="652" />
    <javadoc>
      <text>* {@inheritDoc}</text>
    </javadoc>
    <method name="addToEntry" type="void" startLine="654" endLine="655" />
    <javadoc>
      <text>* {@inheritDoc}</text>
    </javadoc>
    <method name="multiplyEntry" type="void" startLine="657" endLine="658" />
    <javadoc>
      <text>* {@inheritDoc}</text>
    </javadoc>
    <javadoc>
      <text>* {@inheritDoc}</text>
    </javadoc>
    <method type="FieldMatrix<T>" name="transpose" startLine="661" endLine="674">
      <declaration type="int" name="nRows" />
      <declaration type="int" name="nCols" />
      <declaration type="FieldMatrix<T>" name="out" />
      <javadoc>
        <text>* {@inheritDoc}</text>
      </javadoc>
      <method type="void" name="visit" startLine="668" endLine="670" />
    </method>
    <javadoc>
      <text>* {@inheritDoc}</text>
    </javadoc>
    <method type="boolean" name="isSquare" startLine="677" endLine="679" />
    <method name="getRowDimension" type="int" startLine="681" endLine="682" />
    <javadoc>
      <text>* {@inheritDoc}</text>
    </javadoc>
    <method name="getColumnDimension" type="int" startLine="684" endLine="685" />
    <javadoc>
      <text>* {@inheritDoc}</text>
    </javadoc>
    <javadoc>
      <text>* {@inheritDoc}</text>
    </javadoc>
    <method type="T" name="getTrace" startLine="688" endLine="699">
      <declaration type="int" name="nRows" />
      <declaration type="int" name="nCols" />
      <scope startLine="691" endLine="693" />
      <declaration type="T" name="trace" />
      <scope startLine="695" endLine="697" />
    </method>
    <javadoc>
      <text>* {@inheritDoc}</text>
    </javadoc>
    <method type="T[]" name="operate" startLine="702" endLine="720">
      <declaration type="int" name="nRows" />
      <declaration type="int" name="nCols" />
      <scope startLine="706" endLine="708" />
      <declaration type="T[]" name="out" />
      <scope startLine="711" endLine="717">
        <declaration type="T" name="sum" />
        <scope startLine="713" endLine="715" />
      </scope>
    </method>
    <javadoc>
      <text>* {@inheritDoc}</text>
    </javadoc>
    <method type="FieldVector<T>" name="operate" startLine="724" endLine="745">
      <scope startLine="725" endLine="727" />
      <scope startLine="727" endLine="744">
        <declaration type="int" name="nRows" />
        <declaration type="int" name="nCols" />
        <scope startLine="730" endLine="732" />
        <declaration type="T[]" name="out" />
        <scope startLine="735" endLine="741">
          <declaration type="T" name="sum" />
          <scope startLine="737" endLine="739" />
        </scope>
      </scope>
    </method>
    <javadoc>
      <text>* {@inheritDoc}</text>
    </javadoc>
    <method type="T[]" name="preMultiply" startLine="748" endLine="766">
      <declaration type="int" name="nRows" />
      <declaration type="int" name="nCols" />
      <scope startLine="752" endLine="754" />
      <declaration type="T[]" name="out" />
      <scope startLine="757" endLine="763">
        <declaration type="T" name="sum" />
        <scope startLine="759" endLine="761" />
      </scope>
    </method>
    <javadoc>
      <text>* {@inheritDoc}</text>
    </javadoc>
    <method type="FieldVector<T>" name="preMultiply" startLine="770" endLine="791">
      <scope startLine="771" endLine="773" />
      <scope startLine="773" endLine="790">
        <declaration type="int" name="nRows" />
        <declaration type="int" name="nCols" />
        <scope startLine="776" endLine="778" />
        <declaration type="T[]" name="out" />
        <scope startLine="781" endLine="787">
          <declaration type="T" name="sum" />
          <scope startLine="783" endLine="785" />
        </scope>
      </scope>
    </method>
    <javadoc>
      <text>* {@inheritDoc}</text>
    </javadoc>
    <method type="T" name="walkInRowOrder" startLine="794" endLine="806">
      <declaration type="int" name="rows" />
      <declaration type="int" name="columns" />
      <scope startLine="798" endLine="804">
        <scope startLine="799" endLine="803">
          <declaration type="T" name="oldValue" />
          <declaration type="T" name="newValue" />
        </scope>
      </scope>
    </method>
    <javadoc>
      <text>* {@inheritDoc}</text>
    </javadoc>
    <method type="T" name="walkInRowOrder" startLine="809" endLine="819">
      <declaration type="int" name="rows" />
      <declaration type="int" name="columns" />
      <scope startLine="813" endLine="817">
        <scope startLine="814" endLine="816" />
      </scope>
    </method>
    <javadoc>
      <text>* {@inheritDoc}</text>
    </javadoc>
    <method type="T" name="walkInRowOrder" startLine="825" endLine="837">
      <scope startLine="829" endLine="835">
        <scope startLine="830" endLine="834">
          <declaration type="T" name="oldValue" />
          <declaration type="T" name="newValue" />
        </scope>
      </scope>
    </method>
    <javadoc>
      <text>* {@inheritDoc}</text>
    </javadoc>
    <method type="T" name="walkInRowOrder" startLine="843" endLine="853">
      <scope startLine="847" endLine="851">
        <scope startLine="848" endLine="850" />
      </scope>
    </method>
    <javadoc>
      <text>* {@inheritDoc}</text>
    </javadoc>
    <method type="T" name="walkInColumnOrder" startLine="856" endLine="868">
      <declaration type="int" name="rows" />
      <declaration type="int" name="columns" />
      <scope startLine="860" endLine="866">
        <scope startLine="861" endLine="865">
          <declaration type="T" name="oldValue" />
          <declaration type="T" name="newValue" />
        </scope>
      </scope>
    </method>
    <javadoc>
      <text>* {@inheritDoc}</text>
    </javadoc>
    <method type="T" name="walkInColumnOrder" startLine="871" endLine="881">
      <declaration type="int" name="rows" />
      <declaration type="int" name="columns" />
      <scope startLine="875" endLine="879">
        <scope startLine="876" endLine="878" />
      </scope>
    </method>
    <javadoc>
      <text>* {@inheritDoc}</text>
    </javadoc>
    <method type="T" name="walkInColumnOrder" startLine="887" endLine="899">
      <scope startLine="891" endLine="897">
        <scope startLine="892" endLine="896">
          <declaration type="T" name="oldValue" />
          <declaration type="T" name="newValue" />
        </scope>
      </scope>
    </method>
    <javadoc>
      <text>* {@inheritDoc}</text>
    </javadoc>
    <method type="T" name="walkInColumnOrder" startLine="905" endLine="915">
      <scope startLine="909" endLine="913">
        <scope startLine="910" endLine="912" />
      </scope>
    </method>
    <javadoc>
      <text>* {@inheritDoc}</text>
    </javadoc>
    <method type="T" name="walkInOptimizedOrder" startLine="918" endLine="920" />
    <javadoc>
      <text>* {@inheritDoc}</text>
    </javadoc>
    <method type="T" name="walkInOptimizedOrder" startLine="923" endLine="925" />
    <javadoc>
      <text>* {@inheritDoc}</text>
    </javadoc>
    <method type="T" name="walkInOptimizedOrder" startLine="931" endLine="933" />
    <javadoc>
      <text>* {@inheritDoc}</text>
    </javadoc>
    <method type="T" name="walkInOptimizedOrder" startLine="939" endLine="941" />
    <javadoc>
      <text>* Get a string representation for this matrix.</text>
      <return>a string representation for this matrix</return>
    </javadoc>
    <method type="String" name="toString" startLine="948" endLine="972">
      <declaration type="int" name="nRows" />
      <declaration type="int" name="nCols" />
      <declaration type="StringBuffer" name="res" />
      <declaration type="String" name="fullClassName" />
      <declaration type="String" name="shortClassName" />
      <scope startLine="956" endLine="968">
        <scope startLine="957" endLine="959" />
        <scope startLine="961" endLine="966">
          <scope startLine="962" endLine="964" />
        </scope>
      </scope>
    </method>
    <javadoc>
      <text>* Returns true iff <code>object</code> is a
 * <code>FieldMatrix</code> instance with the same dimensions as this
 * and all corresponding matrix entries are equal.</text>
      <param>object the object to test equality against.</param>
      <return>true if object equals this</return>
    </javadoc>
    <method type="boolean" name="equals" startLine="983" endLine="1004">
      <scope startLine="984" endLine="986" />
      <scope startLine="987" endLine="989" />
      <declaration type="FieldMatrix<?>" name="m" />
      <declaration type="int" name="nRows" />
      <declaration type="int" name="nCols" />
      <scope startLine="993" endLine="995" />
      <scope startLine="996" endLine="1002">
        <scope startLine="997" endLine="1001">
          <scope startLine="998" endLine="1000" />
        </scope>
      </scope>
    </method>
    <javadoc>
      <text>* Computes a hashcode for the matrix.</text>
      <return>hashcode for matrix</return>
    </javadoc>
    <method type="int" name="hashCode" startLine="1012" endLine="1024">
      <declaration type="int" name="ret" />
      <declaration type="int" name="nRows" />
      <declaration type="int" name="nCols" />
      <scope startLine="1018" endLine="1022">
        <scope startLine="1019" endLine="1021" />
      </scope>
    </method>
    <javadoc>
      <text>* Check if a row index is valid.</text>
      <param>row Row index to check.</param>
      <throws>OutOfRangeException if {@code index} is not valid.</throws>
    </javadoc>
    <method type="void" name="checkRowIndex" startLine="1032" endLine="1037">
      <scope startLine="1033" endLine="1036" />
    </method>
    <javadoc>
      <text>* Check if a column index is valid.</text>
      <param>column Column index to check.</param>
      <throws>OutOfRangeException if {@code index} is not valid.</throws>
    </javadoc>
    <method type="void" name="checkColumnIndex" startLine="1046" endLine="1051">
      <scope startLine="1047" endLine="1050" />
    </method>
    <javadoc>
      <text>* Check if submatrix ranges indices are valid.
 * Rows and columns are indicated counting from 0 to n-1.</text>
      <param>startRow Initial row index.</param>
      <param>endRow Final row index.</param>
      <param>startColumn Initial column index.</param>
      <param>endColumn Final column index.</param>
      <throws>OutOfRangeException if the indices are not valid.</throws>
      <throws>NumberIsTooSmallException if {@code endRow < startRow} or{@code endColumn < startColumn}.</throws>
    </javadoc>
    <method type="void" name="checkSubMatrixIndex" startLine="1067" endLine="1081">
      <scope startLine="1070" endLine="1073" />
      <scope startLine="1077" endLine="1080" />
    </method>
    <javadoc>
      <text>* Check if submatrix ranges indices are valid.
 * Rows and columns are indicated counting from 0 to n-1.</text>
      <param>selectedRows Array of row indices.</param>
      <param>selectedColumns Array of column indices.</param>
      <throws>NullArgumentException if the arrays are {@code null}.</throws>
      <throws>NoDataException if the arrays have zero length.</throws>
      <throws>OutOfRangeException if row or column selections are not valid.</throws>
    </javadoc>
    <method type="void" name="checkSubMatrixIndex" startLine="1094" endLine="1110">
      <scope startLine="1096" endLine="1098" />
      <scope startLine="1100" endLine="1102" />
      <scope startLine="1104" endLine="1106" />
      <scope startLine="1107" endLine="1109" />
    </method>
    <javadoc>
      <text>* Check if a matrix is addition compatible with the instance.</text>
      <param>m Matrix to check.</param>
      <throws>MatrixDimensionMismatchException if the matrix is not
 * addition-compatible with instance.</throws>
    </javadoc>
    <method type="void" name="checkAdditionCompatible" startLine="1120" endLine="1126">
      <scope startLine="1122" endLine="1125" />
    </method>
    <javadoc>
      <text>* Check if a matrix is subtraction compatible with the instance.</text>
      <param>m Matrix to check.</param>
      <throws>MatrixDimensionMismatchException if the matrix is not
 * subtraction-compatible with instance.</throws>
    </javadoc>
    <method type="void" name="checkSubtractionCompatible" startLine="1136" endLine="1142">
      <scope startLine="1138" endLine="1141" />
    </method>
    <javadoc>
      <text>* Check if a matrix is multiplication compatible with the instance.</text>
      <param>m Matrix to check.</param>
      <throws>DimensionMismatchException if the matrix is not
 * multiplication-compatible with instance.</throws>
    </javadoc>
    <method type="void" name="checkMultiplicationCompatible" startLine="1152" endLine="1156">
      <scope startLine="1153" endLine="1155" />
    </method>
  </class>
</source>
