<?xml version="1.0" encoding="UTF-8"?>
<source package="org.apache.commons.math3.analysis.interpolation">
  <import name="org.apache.commons.math3.analysis.MultivariateFunction" />
  <import name="org.apache.commons.math3.exception.NotPositiveException" />
  <import name="org.apache.commons.math3.exception.NotStrictlyPositiveException" />
  <import name="org.apache.commons.math3.exception.NoDataException" />
  <import name="org.apache.commons.math3.exception.DimensionMismatchException" />
  <import name="org.apache.commons.math3.exception.NullArgumentException" />
  <import name="org.apache.commons.math3.random.UnitSphereRandomVectorGenerator" />
  <class name="MicrosphereInterpolator" startLine="27">
    <implements name="MultivariateInterpolator" />
    <javadoc>
      <text>* Interpolator that implements the algorithm described in
 * <em>William Dudziak</em>'s
 * <a href="http://www.dudziak.com/microsphere.pdf">MS thesis</a>.</text>
      <since>2.1</since>
      <version>$Id: MicrosphereInterpolator.java 1379904 2012-09-01 23:54:52Z erans $</version>
    </javadoc>
    <javadoc>
      <text>* Default number of surface elements that composes the microsphere.</text>
    </javadoc>
    <declaration type="int" name="DEFAULT_MICROSPHERE_ELEMENTS" />
    <javadoc>
      <text>* Default exponent used the weights calculation.</text>
    </javadoc>
    <declaration type="int" name="DEFAULT_BRIGHTNESS_EXPONENT" />
    <javadoc>
      <text>* Number of surface elements of the microsphere.</text>
    </javadoc>
    <declaration type="int" name="microsphereElements" />
    <javadoc>
      <text>* Exponent used in the power law that computes the weights of the
 * sample data.</text>
    </javadoc>
    <declaration type="int" name="brightnessExponent" />
    <javadoc>
      <text>* Create a microsphere interpolator with default settings.
 * Calling this constructor is equivalent to call {@link #MicrosphereInterpolator(int,int)MicrosphereInterpolator(MicrosphereInterpolator.DEFAULT_MICROSPHERE_ELEMENTS,
 * MicrosphereInterpolator.DEFAULT_BRIGHTNESS_EXPONENT)}.</text>
    </javadoc>
    <method type="constructor" name="MicrosphereInterpolator" startLine="62" endLine="64" />
    <javadoc>
      <text>* Create a microsphere interpolator.</text>
      <param>elements Number of surface elements of the microsphere.</param>
      <param>exponent Exponent used in the power law that computes the
 * weights (distance dimming factor) of the sample data.</param>
      <throws>NotPositiveException if {@code exponent < 0}.</throws>
      <throws>NotStrictlyPositiveException if {@code elements <= 0}.</throws>
    </javadoc>
    <method type="constructor" name="MicrosphereInterpolator" startLine="76" endLine="86">
      <scope startLine="77" endLine="79" />
      <scope startLine="80" endLine="82" />
    </method>
    <javadoc>
      <text>* {@inheritDoc}</text>
    </javadoc>
    <method type="MultivariateFunction" name="interpolate" startLine="95" endLine="102">
      <declaration type="UnitSphereRandomVectorGenerator" name="rand" />
    </method>
  </class>
</source>
