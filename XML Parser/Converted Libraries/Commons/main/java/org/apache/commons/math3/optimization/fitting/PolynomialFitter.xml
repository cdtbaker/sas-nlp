<?xml version="1.0" encoding="UTF-8"?>
<source package="org.apache.commons.math3.optimization.fitting">
  <import name="org.apache.commons.math3.analysis.polynomials.PolynomialFunction" />
  <import name="org.apache.commons.math3.optimization.DifferentiableMultivariateVectorOptimizer" />
  <class name="PolynomialFitter" extends="CurveFitter<PolynomialFunction.Parametric>" startLine="23">
    <javadoc>
      <text>* Polynomial fitting is a very simple case of {@link CurveFitter curve fitting}.
 * The estimated coefficients are the polynomial coefficients (see the{@link #fit(double[]) fit} method).</text>
      <version>$Id: PolynomialFitter.java 1422313 2012-12-15 18:53:41Z psteitz $</version>
      <deprecated>As of 3.1 (to be removed in 4.0).</deprecated>
      <since>2.0</since>
    </javadoc>
    <javadoc>
      <text>* Polynomial degree.</text>
      <deprecated />
    </javadoc>
    <declaration type="int" name="degree" />
    <javadoc>
      <text>* Simple constructor.
 * <p>The polynomial fitter built this way are complete polynomials,
 * ie. a n-degree polynomial has n+1 coefficients.</p></text>
      <param>degree Maximal degree of the polynomial.</param>
      <param>optimizer Optimizer to use for the fitting.</param>
      <deprecated>Since 3.1 (to be removed in 4.0). Please use{@link #PolynomialFitter(DifferentiableMultivariateVectorOptimizer)} instead.</deprecated>
    </javadoc>
    <method type="constructor" name="PolynomialFitter" startLine="51" endLine="54" />
    <javadoc>
      <text>* Simple constructor.</text>
      <param>optimizer Optimizer to use for the fitting.</param>
      <since>3.1</since>
    </javadoc>
    <method type="constructor" name="PolynomialFitter" startLine="62" endLine="65">
      <comment>To avoid compilation error until the instance variable is removed.</comment>
    </method>
    <javadoc>
      <text>* Get the polynomial fitting the weighted (x, y) points.</text>
      <return>the coefficients of the polynomial that best fits the observed points.</return>
      <throws>org.apache.commons.math3.exception.ConvergenceExceptionif the algorithm failed to converge.</throws>
      <deprecated>Since 3.1 (to be removed in 4.0). Please use {@link #fit(double[])} instead.</deprecated>
    </javadoc>
    <method type="double[]" name="fit" startLine="76" endLine="78" />
    <javadoc>
      <text>* Get the coefficients of the polynomial fitting the weighted data points.
 * The degree of the fitting polynomial is {@code guess.length - 1}.</text>
      <param>guess First guess for the coefficients. They must be sorted in
 * increasing order of the polynomial's degree.</param>
      <param>maxEval Maximum number of evaluations of the polynomial.</param>
      <return>the coefficients of the polynomial that best fits the observed points.</return>
      <throws>org.apache.commons.math3.exception.TooManyEvaluationsException if
 * the number of evaluations exceeds {@code maxEval}.</throws>
      <throws>org.apache.commons.math3.exception.ConvergenceExceptionif the algorithm failed to converge.</throws>
      <since>3.1</since>
    </javadoc>
    <method type="double[]" name="fit" startLine="94" endLine="96" />
    <javadoc>
      <text>* Get the coefficients of the polynomial fitting the weighted data points.
 * The degree of the fitting polynomial is {@code guess.length - 1}.</text>
      <param>guess First guess for the coefficients. They must be sorted in
 * increasing order of the polynomial's degree.</param>
      <return>the coefficients of the polynomial that best fits the observed points.</return>
      <throws>org.apache.commons.math3.exception.ConvergenceExceptionif the algorithm failed to converge.</throws>
      <since>3.1</since>
    </javadoc>
    <method type="double[]" name="fit" startLine="109" endLine="111" />
  </class>
</source>
