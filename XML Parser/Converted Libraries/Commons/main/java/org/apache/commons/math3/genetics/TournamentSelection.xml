<?xml version="1.0" encoding="UTF-8"?>
<source package="org.apache.commons.math3.genetics">
  <import name="java.util.ArrayList" />
  <import name="java.util.List" />
  <import name="org.apache.commons.math3.exception.MathIllegalArgumentException" />
  <import name="org.apache.commons.math3.exception.util.LocalizedFormats" />
  <class name="TournamentSelection" startLine="25">
    <implements name="SelectionPolicy" />
    <javadoc>
      <text>* Tournament selection scheme. Each of the two selected chromosomes is selected
 * based on n-ary tournament -- this is done by drawing {@link #arity} random
 * chromosomes without replacement from the population, and then selecting the
 * fittest chromosome among them.</text>
      <since>2.0</since>
      <version>$Id: TournamentSelection.java 1416643 2012-12-03 19:37:14Z tn $</version>
    </javadoc>
    <javadoc>
      <text>* number of chromosomes included in the tournament selections</text>
    </javadoc>
    <declaration type="int" name="arity" />
    <javadoc>
      <text>* Creates a new TournamentSelection instance.</text>
      <param>arity how many chromosomes will be drawn to the tournament</param>
    </javadoc>
    <method type="constructor" name="TournamentSelection" startLine="44" endLine="46" />
    <javadoc>
      <text>* Select two chromosomes from the population. Each of the two selected
 * chromosomes is selected based on n-ary tournament -- this is done by
 * drawing {@link #arity} random chromosomes without replacement from the
 * population, and then selecting the fittest chromosome among them.</text>
      <param>population the population from which the chromosomes are chosen.</param>
      <return>the selected chromosomes.</return>
      <throws>MathIllegalArgumentException if the tournament arity is bigger than the population size</throws>
    </javadoc>
    <method type="ChromosomePair" name="select" startLine="58" endLine="61" />
    <javadoc>
      <text>* Helper for {@link #select(Population)}. Draw {@link #arity} random chromosomes without replacement from the
 * population, and then select the fittest chromosome among them.</text>
      <param>population the population from which the chromosomes are choosen.</param>
      <return>the selected chromosome.</return>
      <throws>MathIllegalArgumentException if the tournament arity is bigger than the population size</throws>
    </javadoc>
    <method type="Chromosome" name="tournament" startLine="71" endLine="95">
      <scope startLine="72" endLine="75" />
      <declaration type="ListPopulation" name="tournamentPopulation" />
      <method type="Population" name="nextGeneration" startLine="78" endLine="81" />
      <declaration type="List<Chromosome>" name="chromosomes" />
      <scope startLine="86" endLine="92">
        <declaration type="int" name="rind" />
        <comment>select a random individual and add it to the tournament</comment>
        <comment>do not select it again</comment>
      </scope>
      <comment>auxiliary population</comment>
      <comment>not useful here</comment>
      <comment>create a copy of the chromosome list</comment>
      <comment>the winner takes it all</comment>
    </method>
    <javadoc>
      <text>* Gets the arity (number of chromosomes drawn to the tournament).</text>
      <return>arity of the tournament</return>
    </javadoc>
    <method type="int" name="getArity" startLine="102" endLine="104" />
    <javadoc>
      <text>* Sets the arity (number of chromosomes drawn to the tournament).</text>
      <param>arity arity of the tournament</param>
    </javadoc>
    <method type="void" name="setArity" startLine="111" endLine="113" />
  </class>
</source>
