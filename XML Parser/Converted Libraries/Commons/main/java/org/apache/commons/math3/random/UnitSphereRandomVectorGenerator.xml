<?xml version="1.0" encoding="UTF-8"?>
<source package="org.apache.commons.math3.random">
  <import name="org.apache.commons.math3.util.FastMath" />
  <class name="UnitSphereRandomVectorGenerator" startLine="23">
    <implements name="RandomVectorGenerator" />
    <javadoc>
      <text>* Generate random vectors isotropically located on the surface of a sphere.</text>
      <since>2.1</since>
      <version>$Id: UnitSphereRandomVectorGenerator.java 1444500 2013-02-10 08:10:40Z tn $</version>
    </javadoc>
    <javadoc>
      <text>* RNG used for generating the individual components of the vectors.</text>
    </javadoc>
    <declaration type="RandomGenerator" name="rand" />
    <javadoc>
      <text>* Space dimension.</text>
    </javadoc>
    <declaration type="int" name="dimension" />
    <javadoc>
      <param>dimension Space dimension.</param>
      <param>rand RNG for the individual components of the vectors.</param>
    </javadoc>
    <method type="constructor" name="UnitSphereRandomVectorGenerator" startLine="46" endLine="49" />
    <javadoc>
      <text>* Create an object that will use a default RNG ({@link MersenneTwister}),
 * in order to generate the individual components.</text>
      <param>dimension Space dimension.</param>
    </javadoc>
    <method type="constructor" name="UnitSphereRandomVectorGenerator" startLine="56" endLine="58" />
    <javadoc>
      <text>* {@inheritDoc}</text>
    </javadoc>
    <method type="double[]" name="nextVector" startLine="61" endLine="80">
      <declaration type="double[]" name="v" />
      <declaration type="double" name="normSq" />
      <scope startLine="68" endLine="72">
        <declaration type="double" name="comp" />
      </scope>
      <declaration type="double" name="f" />
      <scope startLine="75" endLine="77" />
      <comment>See http:mathworld.wolfram.com/SpherePointPicking.html for example.</comment>
      <comment>Pick a point by choosing a standard Gaussian for each element, and then</comment>
      <comment>normalizing to unit length.</comment>
    </method>
  </class>
</source>
