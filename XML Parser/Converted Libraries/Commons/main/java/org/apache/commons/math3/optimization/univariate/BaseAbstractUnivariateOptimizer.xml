<?xml version="1.0" encoding="UTF-8"?>
<source package="org.apache.commons.math3.optimization.univariate">
  <import name="org.apache.commons.math3.util.Incrementor" />
  <import name="org.apache.commons.math3.exception.MaxCountExceededException" />
  <import name="org.apache.commons.math3.exception.TooManyEvaluationsException" />
  <import name="org.apache.commons.math3.exception.NullArgumentException" />
  <import name="org.apache.commons.math3.analysis.UnivariateFunction" />
  <import name="org.apache.commons.math3.optimization.GoalType" />
  <import name="org.apache.commons.math3.optimization.ConvergenceChecker" />
  <class name="BaseAbstractUnivariateOptimizer" startLine="28">
    <implements name="UnivariateOptimizer" />
    <javadoc>
      <text>* Provide a default implementation for several functions useful to generic
 * optimizers.</text>
      <version>$Id: BaseAbstractUnivariateOptimizer.java 1422230 2012-12-15 12:11:13Z erans $</version>
      <deprecated>As of 3.1 (to be removed in 4.0).</deprecated>
      <since>2.0</since>
    </javadoc>
    <javadoc>
      <text>* Convergence checker.</text>
    </javadoc>
    <declaration type="ConvergenceChecker<UnivariatePointValuePair>" name="checker" />
    <javadoc>
      <text>* Evaluations counter.</text>
    </javadoc>
    <declaration type="Incrementor" name="evaluations" />
    <javadoc>
      <text>* Optimization type</text>
    </javadoc>
    <declaration type="GoalType" name="goal" />
    <javadoc>
      <text>* Lower end of search interval.</text>
    </javadoc>
    <declaration type="double" name="searchMin" />
    <javadoc>
      <text>* Higher end of search interval.</text>
    </javadoc>
    <declaration type="double" name="searchMax" />
    <javadoc>
      <text>* Initial guess .</text>
    </javadoc>
    <declaration type="double" name="searchStart" />
    <javadoc>
      <text>* Function to optimize.</text>
    </javadoc>
    <declaration type="UnivariateFunction" name="function" />
    <javadoc>
      <param>checker Convergence checking procedure.</param>
    </javadoc>
    <method type="constructor" name="BaseAbstractUnivariateOptimizer" startLine="57" endLine="59" />
    <javadoc>
      <text>* {@inheritDoc}</text>
    </javadoc>
    <method type="int" name="getMaxEvaluations" startLine="62" endLine="64" />
    <javadoc>
      <text>* {@inheritDoc}</text>
    </javadoc>
    <method type="int" name="getEvaluations" startLine="67" endLine="69" />
    <javadoc>
      <return>the optimization type.</return>
    </javadoc>
    <method type="GoalType" name="getGoalType" startLine="74" endLine="76" />
    <javadoc>
      <return>the lower end of the search interval.</return>
    </javadoc>
    <method type="double" name="getMin" startLine="80" endLine="82" />
    <javadoc>
      <return>the higher end of the search interval.</return>
    </javadoc>
    <method type="double" name="getMax" startLine="86" endLine="88" />
    <javadoc>
      <return>the initial guess.</return>
    </javadoc>
    <method type="double" name="getStartValue" startLine="92" endLine="94" />
    <javadoc>
      <text>* Compute the objective function value.</text>
      <param>point Point at which the objective function must be evaluated.</param>
      <return>the objective function value at specified point.</return>
      <throws>TooManyEvaluationsException if the maximal number of evaluations
 * is exceeded.</throws>
    </javadoc>
    <method type="double" name="computeObjectiveValue" startLine="104" endLine="111">
      <scope startLine="105" endLine="107" />
      <scope startLine="107" endLine="109" />
    </method>
    <javadoc>
      <text>* {@inheritDoc}</text>
    </javadoc>
    <method type="UnivariatePointValuePair" name="optimize" startLine="117" endLine="137">
      <scope startLine="119" endLine="121" />
      <scope startLine="122" endLine="124" />
      <comment>Checks.</comment>
      <comment>Reset.</comment>
      <comment>Perform computation.</comment>
    </method>
    <javadoc>
      <text>* {@inheritDoc}</text>
    </javadoc>
    <method type="UnivariatePointValuePair" name="optimize" startLine="143" endLine="145" />
    <javadoc>
      <text>* {@inheritDoc}</text>
    </javadoc>
    <method type="ConvergenceChecker<UnivariatePointValuePair>" name="getConvergenceChecker" startLine="150" endLine="152" />
    <method name="doOptimize" type="UnivariatePointValuePair" startLine="154" endLine="162" />
    <javadoc>
      <text>* Method for implementing actual optimization algorithms in derived
 * classes.</text>
      <return>the optimum and its corresponding function value.</return>
      <throws>TooManyEvaluationsException if the maximal number of evaluations
 * is exceeded.</throws>
    </javadoc>
  </class>
</source>
