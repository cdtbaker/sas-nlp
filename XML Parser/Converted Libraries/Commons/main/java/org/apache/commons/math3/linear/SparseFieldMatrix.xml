<?xml version="1.0" encoding="UTF-8"?>
<source package="org.apache.commons.math3.linear">
  <import name="org.apache.commons.math3.Field" />
  <import name="org.apache.commons.math3.FieldElement" />
  <import name="org.apache.commons.math3.util.OpenIntToFieldHashMap" />
  <class name="SparseFieldMatrix" extends="AbstractFieldMatrix<T>" startLine="23">
    <javadoc>
      <text>* Sparse matrix implementation based on an open addressed map.</text>
      <param><T>
 *  the type of the field elements</param>
      <version>$Id: SparseFieldMatrix.java 1416643 2012-12-03 19:37:14Z tn $</version>
      <since>2.0</since>
      <deprecated>As of version 3.1, this class is deprecated, for reasons exposed
 * in this JIRA
 * <a href="https://issues.apache.org/jira/browse/MATH-870">ticket</a>. This
 * class will be removed in version 4.0.</deprecated>
    </javadoc>
    <javadoc>
      <text>* Storage for (sparse) matrix elements.</text>
    </javadoc>
    <declaration type="OpenIntToFieldHashMap<T>" name="entries" />
    <javadoc>
      <text>* Row dimension.</text>
    </javadoc>
    <declaration type="int" name="rows" />
    <javadoc>
      <text>* Column dimension.</text>
    </javadoc>
    <declaration type="int" name="columns" />
    <javadoc>
      <text>* Create a matrix with no data.</text>
      <param>field Field to which the elements belong.</param>
    </javadoc>
    <method type="constructor" name="SparseFieldMatrix" startLine="50" endLine="55" />
    <javadoc>
      <text>* Create a new SparseFieldMatrix<T> with the supplied row and column
 * dimensions.</text>
      <param>field Field to which the elements belong.</param>
      <param>rowDimension Number of rows in the new matrix.</param>
      <param>columnDimension Number of columns in the new matrix.</param>
      <throws>org.apache.commons.math3.exception.NotStrictlyPositiveExceptionif row or column dimension is not positive.</throws>
    </javadoc>
    <method type="constructor" name="SparseFieldMatrix" startLine="68" endLine="73" />
    <javadoc>
      <text>* Copy constructor.</text>
      <param>other Instance to copy.</param>
    </javadoc>
    <method type="constructor" name="SparseFieldMatrix" startLine="80" endLine="85" />
    <javadoc>
      <text>* Generic copy constructor.</text>
      <param>other Instance to copy.</param>
    </javadoc>
    <method type="constructor" name="SparseFieldMatrix" startLine="92" endLine="102">
      <scope startLine="97" endLine="101">
        <scope startLine="98" endLine="100" />
      </scope>
    </method>
    <javadoc>
      <text>* {@inheritDoc}</text>
    </javadoc>
    <method type="void" name="addToEntry" startLine="106" endLine="116">
      <declaration type="int" name="key" />
      <declaration type="T" name="value" />
      <scope startLine="111" endLine="113" />
      <scope startLine="113" endLine="115" />
    </method>
    <javadoc>
      <text>* {@inheritDoc}</text>
    </javadoc>
    <method type="FieldMatrix<T>" name="copy" startLine="120" endLine="122" />
    <javadoc>
      <text>* {@inheritDoc}</text>
    </javadoc>
    <method type="FieldMatrix<T>" name="createMatrix" startLine="126" endLine="128" />
    <javadoc>
      <text>* {@inheritDoc}</text>
    </javadoc>
    <method type="int" name="getColumnDimension" startLine="132" endLine="134" />
    <javadoc>
      <text>* {@inheritDoc}</text>
    </javadoc>
    <method type="T" name="getEntry" startLine="138" endLine="142" />
    <javadoc>
      <text>* {@inheritDoc}</text>
    </javadoc>
    <method type="int" name="getRowDimension" startLine="146" endLine="148" />
    <javadoc>
      <text>* {@inheritDoc}</text>
    </javadoc>
    <method type="void" name="multiplyEntry" startLine="152" endLine="163">
      <declaration type="int" name="key" />
      <declaration type="T" name="value" />
      <scope startLine="157" endLine="159" />
      <scope startLine="159" endLine="161" />
    </method>
    <javadoc>
      <text>* {@inheritDoc}</text>
    </javadoc>
    <method type="void" name="setEntry" startLine="167" endLine="175">
      <scope startLine="170" endLine="172" />
      <scope startLine="172" endLine="174" />
    </method>
    <javadoc>
      <text>* Compute the key to access a matrix element.</text>
      <param>row Row index of the matrix element.</param>
      <param>column Column index of the matrix element.</param>
      <return>the key within the map to access the matrix element.</return>
    </javadoc>
    <method type="int" name="computeKey" startLine="184" endLine="186" />
  </class>
</source>
