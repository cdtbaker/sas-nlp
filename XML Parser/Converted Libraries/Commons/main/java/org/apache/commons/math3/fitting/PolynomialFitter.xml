<?xml version="1.0" encoding="UTF-8"?>
<source package="org.apache.commons.math3.fitting">
  <import name="org.apache.commons.math3.analysis.polynomials.PolynomialFunction" />
  <import name="org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer" />
  <class name="PolynomialFitter" extends="CurveFitter<PolynomialFunction.Parametric>" startLine="22">
    <javadoc>
      <text>* Polynomial fitting is a very simple case of {@link CurveFitter curve fitting}.
 * The estimated coefficients are the polynomial coefficients (see the{@link #fit(double[]) fit} method).</text>
      <version>$Id: PolynomialFitter.java 1416643 2012-12-03 19:37:14Z tn $</version>
      <since>2.0</since>
    </javadoc>
    <javadoc>
      <text>* Simple constructor.</text>
      <param>optimizer Optimizer to use for the fitting.</param>
    </javadoc>
    <method type="constructor" name="PolynomialFitter" startLine="36" endLine="38" />
    <javadoc>
      <text>* Get the coefficients of the polynomial fitting the weighted data points.
 * The degree of the fitting polynomial is {@code guess.length - 1}.</text>
      <param>guess First guess for the coefficients. They must be sorted in
 * increasing order of the polynomial's degree.</param>
      <param>maxEval Maximum number of evaluations of the polynomial.</param>
      <return>the coefficients of the polynomial that best fits the observed points.</return>
      <throws>org.apache.commons.math3.exception.TooManyEvaluationsException if
 * the number of evaluations exceeds {@code maxEval}.</throws>
      <throws>org.apache.commons.math3.exception.ConvergenceExceptionif the algorithm failed to converge.</throws>
    </javadoc>
    <method type="double[]" name="fit" startLine="53" endLine="55" />
    <javadoc>
      <text>* Get the coefficients of the polynomial fitting the weighted data points.
 * The degree of the fitting polynomial is {@code guess.length - 1}.</text>
      <param>guess First guess for the coefficients. They must be sorted in
 * increasing order of the polynomial's degree.</param>
      <return>the coefficients of the polynomial that best fits the observed points.</return>
      <throws>org.apache.commons.math3.exception.ConvergenceExceptionif the algorithm failed to converge.</throws>
    </javadoc>
    <method type="double[]" name="fit" startLine="67" endLine="69" />
  </class>
</source>
