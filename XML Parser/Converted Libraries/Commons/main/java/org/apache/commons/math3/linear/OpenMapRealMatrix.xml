<?xml version="1.0" encoding="UTF-8"?>
<source package="org.apache.commons.math3.linear">
  <import name="java.io.Serializable" />
  <import name="org.apache.commons.math3.exception.DimensionMismatchException" />
  <import name="org.apache.commons.math3.exception.NotStrictlyPositiveException" />
  <import name="org.apache.commons.math3.exception.NumberIsTooLargeException" />
  <import name="org.apache.commons.math3.exception.OutOfRangeException" />
  <import name="org.apache.commons.math3.util.OpenIntToDoubleHashMap" />
  <class name="OpenMapRealMatrix" extends="AbstractRealMatrix" startLine="28">
    <implements name="SparseRealMatrix" />
    <implements name="Serializable" />
    <javadoc>
      <text>* Sparse matrix implementation based on an open addressed map.</text>
      <version>$Id: OpenMapRealMatrix.java 1416643 2012-12-03 19:37:14Z tn $</version>
      <since>2.0</since>
      <deprecated>As of version 3.1, this class is deprecated, for reasons exposed
 * in this JIRA
 * <a href="https://issues.apache.org/jira/browse/MATH-870">ticket</a>. This
 * class will be removed in version 4.0.</deprecated>
    </javadoc>
    <javadoc>
      <text>* Serializable version identifier.</text>
    </javadoc>
    <declaration type="long" name="serialVersionUID" />
    <javadoc>
      <text>* Number of rows of the matrix.</text>
    </javadoc>
    <declaration type="int" name="rows" />
    <javadoc>
      <text>* Number of columns of the matrix.</text>
    </javadoc>
    <declaration type="int" name="columns" />
    <javadoc>
      <text>* Storage for (sparse) matrix elements.</text>
    </javadoc>
    <declaration type="OpenIntToDoubleHashMap" name="entries" />
    <javadoc>
      <text>* Build a sparse matrix with the supplied row and column dimensions.</text>
      <param>rowDimension Number of rows of the matrix.</param>
      <param>columnDimension Number of columns of the matrix.</param>
      <throws>NotStrictlyPositiveException if row or column dimension is not
 * positive.</throws>
      <throws>NumberIsTooLargeException if the total number of entries of the
 * matrix is larger than {@code Integer.MAX_VALUE}.</throws>
    </javadoc>
    <method type="constructor" name="OpenMapRealMatrix" startLine="62" endLine="72">
      <declaration type="long" name="lRow" />
      <declaration type="long" name="lCol" />
      <scope startLine="66" endLine="68" />
    </method>
    <javadoc>
      <text>* Build a matrix by copying another one.</text>
      <param>matrix matrix to copy.</param>
    </javadoc>
    <method type="constructor" name="OpenMapRealMatrix" startLine="79" endLine="83" />
    <javadoc>
      <text>* {@inheritDoc}</text>
    </javadoc>
    <method type="OpenMapRealMatrix" name="copy" startLine="87" endLine="89" />
    <javadoc>
      <text>* {@inheritDoc}</text>
      <throws>NumberIsTooLargeException if the total number of entries of the
 * matrix is larger than {@code Integer.MAX_VALUE}.</throws>
    </javadoc>
    <method type="OpenMapRealMatrix" name="createMatrix" startLine="99" endLine="101" />
    <javadoc>
      <text>* {@inheritDoc}</text>
    </javadoc>
    <method type="int" name="getColumnDimension" startLine="105" endLine="107" />
    <javadoc>
      <text>* Compute the sum of this matrix and {@code m}.</text>
      <param>m Matrix to be added.</param>
      <return>{@code this} + {@code m}.</return>
      <throws>MatrixDimensionMismatchException if {@code m} is not the same
 * size as {@code this}.</throws>
    </javadoc>
    <method type="OpenMapRealMatrix" name="add" startLine="118" endLine="132">
      <declaration type="OpenMapRealMatrix" name="out" />
      <scope startLine="123" endLine="128">
        <declaration type="int" name="row" />
        <declaration type="int" name="col" />
      </scope>
    </method>
    <javadoc>
      <text>* {@inheritDoc}</text>
    </javadoc>
    <method type="OpenMapRealMatrix" name="subtract" startLine="137" endLine="143">
      <scope startLine="138" endLine="140" />
      <scope startLine="140" endLine="142" />
    </method>
    <javadoc>
      <text>* Subtract {@code m} from this matrix.</text>
      <param>m Matrix to be subtracted.</param>
      <return>{@code this} - {@code m}.</return>
      <throws>MatrixDimensionMismatchException if {@code m} is not the same
 * size as {@code this}.</throws>
    </javadoc>
    <method type="OpenMapRealMatrix" name="subtract" startLine="154" endLine="166">
      <declaration type="OpenMapRealMatrix" name="out" />
      <scope startLine="158" endLine="163">
        <declaration type="int" name="row" />
        <declaration type="int" name="col" />
      </scope>
    </method>
    <javadoc>
      <text>* {@inheritDoc}</text>
      <throws>NumberIsTooLargeException if {@code m} is an{@code OpenMapRealMatrix}, and the total number of entries of the product
 * is larger than {@code Integer.MAX_VALUE}.</throws>
    </javadoc>
    <method type="RealMatrix" name="multiply" startLine="177" endLine="199">
      <scope startLine="178" endLine="180" />
      <scope startLine="180" endLine="198">
        <declaration type="int" name="outCols" />
        <declaration type="BlockRealMatrix" name="out" />
        <scope startLine="186" endLine="195">
          <declaration type="double" name="value" />
          <declaration type="int" name="key" />
          <declaration type="int" name="i" />
          <declaration type="int" name="k" />
          <scope startLine="192" endLine="194" />
        </scope>
      </scope>
    </method>
    <javadoc>
      <text>* Postmultiply this matrix by {@code m}.</text>
      <param>m Matrix to postmultiply by.</param>
      <return>{@code this} * {@code m}.</return>
      <throws>DimensionMismatchException if the number of rows of {@code m}differ from the number of columns of {@code this} matrix.</throws>
      <throws>NumberIsTooLargeException if the total number of entries of the
 * product is larger than {@code Integer.MAX_VALUE}.</throws>
    </javadoc>
    <method type="OpenMapRealMatrix" name="multiply" startLine="212" endLine="240">
      <declaration type="int" name="outCols" />
      <declaration type="OpenMapRealMatrix" name="out" />
      <scope startLine="218" endLine="237">
        <declaration type="double" name="value" />
        <declaration type="int" name="key" />
        <declaration type="int" name="i" />
        <declaration type="int" name="k" />
        <scope startLine="224" endLine="236">
          <declaration type="int" name="rightKey" />
          <scope startLine="226" endLine="235">
            <declaration type="int" name="outKey" />
            <declaration type="double" name="outValue" />
            <scope startLine="230" endLine="232" />
            <scope startLine="232" endLine="234" />
          </scope>
        </scope>
      </scope>
      <comment>Safety check.</comment>
    </method>
    <javadoc>
      <text>* {@inheritDoc}</text>
    </javadoc>
    <method type="double" name="getEntry" startLine="244" endLine="248" />
    <javadoc>
      <text>* {@inheritDoc}</text>
    </javadoc>
    <method type="int" name="getRowDimension" startLine="252" endLine="254" />
    <javadoc>
      <text>* {@inheritDoc}</text>
    </javadoc>
    <method type="void" name="setEntry" startLine="259" endLine="267">
      <scope startLine="262" endLine="264" />
      <scope startLine="264" endLine="266" />
    </method>
    <javadoc>
      <text>* {@inheritDoc}</text>
    </javadoc>
    <method type="void" name="addToEntry" startLine="272" endLine="282">
      <declaration type="int" name="key" />
      <declaration type="double" name="value" />
      <scope startLine="277" endLine="279" />
      <scope startLine="279" endLine="281" />
    </method>
    <javadoc>
      <text>* {@inheritDoc}</text>
    </javadoc>
    <method type="void" name="multiplyEntry" startLine="287" endLine="297">
      <declaration type="int" name="key" />
      <declaration type="double" name="value" />
      <scope startLine="292" endLine="294" />
      <scope startLine="294" endLine="296" />
    </method>
    <javadoc>
      <text>* Compute the key to access a matrix element</text>
      <param>row row index of the matrix element</param>
      <param>column column index of the matrix element</param>
      <return>key within the map to access the matrix element</return>
    </javadoc>
    <method type="int" name="computeKey" startLine="305" endLine="307" />
  </class>
</source>
