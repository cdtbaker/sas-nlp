<?xml version="1.0" encoding="UTF-8"?>
<source package="org.apache.commons.math3.linear">
  <import name="org.apache.commons.math3.exception.DimensionMismatchException" />
  <import name="org.apache.commons.math3.exception.MaxCountExceededException" />
  <import name="org.apache.commons.math3.exception.NullArgumentException" />
  <import name="org.apache.commons.math3.util.IterationManager" />
  <import name="org.apache.commons.math3.util.MathUtils" />
  <class name="IterativeLinearSolver" startLine="25">
    <javadoc>
      <text>* This abstract class defines an iterative solver for the linear system A
 * &middot; x = b. In what follows, the <em>residual</em> r is defined as r = b
 * - A &middot; x, where A is the linear operator of the linear system, b is the
 * right-hand side vector, and x the current estimate of the solution.</text>
      <version>$Id: IterativeLinearSolver.java 1416643 2012-12-03 19:37:14Z tn $</version>
      <since>3.0</since>
    </javadoc>
    <javadoc>
      <text>* The object in charge of managing the iterations.</text>
    </javadoc>
    <declaration type="IterationManager" name="manager" />
    <javadoc>
      <text>* Creates a new instance of this class, with default iteration manager.</text>
      <param>maxIterations the maximum number of iterations</param>
    </javadoc>
    <method type="constructor" name="IterativeLinearSolver" startLine="44" endLine="46" />
    <javadoc>
      <text>* Creates a new instance of this class, with custom iteration manager.</text>
      <param>manager the custom iteration manager</param>
      <throws>NullArgumentException if {@code manager} is {@code null}</throws>
    </javadoc>
    <method type="constructor" name="IterativeLinearSolver" startLine="55" endLine="58" />
    <javadoc>
      <text>* Performs all dimension checks on the parameters of{@link #solve(RealLinearOperator,RealVector,RealVector) solve} and{@link #solveInPlace(RealLinearOperator,RealVector,RealVector) solveInPlace},
 * and throws an exception if one of the checks fails.</text>
      <param>a the linear operator A of the system</param>
      <param>b the right-hand side vector</param>
      <param>x0 the initial guess of the solution</param>
      <throws>NullArgumentException if one of the parameters is {@code null}</throws>
      <throws>NonSquareOperatorException if {@code a} is not square</throws>
      <throws>DimensionMismatchException if {@code b} or {@code x0} have
 * dimensions inconsistent with {@code a}</throws>
    </javadoc>
    <method type="void" name="checkParameters" startLine="77" endLine="93">
      <scope startLine="81" endLine="84" />
      <scope startLine="85" endLine="88" />
      <scope startLine="89" endLine="92" />
    </method>
    <javadoc>
      <text>* Returns the iteration manager attached to this solver.</text>
      <return>the manager</return>
    </javadoc>
    <method type="IterationManager" name="getIterationManager" startLine="100" endLine="102" />
    <javadoc>
      <text>* Returns an estimate of the solution to the linear system A &middot; x =
 * b.</text>
      <param>a the linear operator A of the system</param>
      <param>b the right-hand side vector</param>
      <return>a new vector containing the solution</return>
      <throws>NullArgumentException if one of the parameters is {@code null}</throws>
      <throws>NonSquareOperatorException if {@code a} is not square</throws>
      <throws>DimensionMismatchException if {@code b} has dimensions
 * inconsistent with {@code a}</throws>
      <throws>MaxCountExceededException at exhaustion of the iteration count,
 * unless a custom{@link org.apache.commons.math3.util.Incrementor.MaxCountExceededCallback callback}has been set at construction of the {@link IterationManager}</throws>
    </javadoc>
    <method type="RealVector" name="solve" startLine="122" endLine="127">
      <declaration type="RealVector" name="x" />
    </method>
    <javadoc>
      <text>* Returns an estimate of the solution to the linear system A &middot; x =
 * b.</text>
      <param>a the linear operator A of the system</param>
      <param>b the right-hand side vector</param>
      <param>x0 the initial guess of the solution</param>
      <return>a new vector containing the solution</return>
      <throws>NullArgumentException if one of the parameters is {@code null}</throws>
      <throws>NonSquareOperatorException if {@code a} is not square</throws>
      <throws>DimensionMismatchException if {@code b} or {@code x0} have
 * dimensions inconsistent with {@code a}</throws>
      <throws>MaxCountExceededException at exhaustion of the iteration count,
 * unless a custom{@link org.apache.commons.math3.util.Incrementor.MaxCountExceededCallback callback}has been set at construction of the {@link IterationManager}</throws>
    </javadoc>
    <method type="RealVector" name="solve" startLine="148" endLine="151" />
    <method name="solveInPlace" type="RealVector" startLine="153" endLine="173" />
    <javadoc>
      <text>* Returns an estimate of the solution to the linear system A &middot; x =
 * b. The solution is computed in-place (initial guess is modified).</text>
      <param>a the linear operator A of the system</param>
      <param>b the right-hand side vector</param>
      <param>x0 initial guess of the solution</param>
      <return>a reference to {@code x0} (shallow copy) updated with the
 * solution</return>
      <throws>NullArgumentException if one of the parameters is {@code null}</throws>
      <throws>NonSquareOperatorException if {@code a} is not square</throws>
      <throws>DimensionMismatchException if {@code b} or {@code x0} have
 * dimensions inconsistent with {@code a}</throws>
      <throws>MaxCountExceededException at exhaustion of the iteration count,
 * unless a custom{@link org.apache.commons.math3.util.Incrementor.MaxCountExceededCallback callback}has been set at construction of the {@link IterationManager}</throws>
    </javadoc>
  </class>
</source>
