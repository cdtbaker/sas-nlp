<?xml version="1.0" encoding="UTF-8"?>
<source package="org.apache.commons.math3.analysis.integration">
  <import name="org.apache.commons.math3.exception.MaxCountExceededException" />
  <import name="org.apache.commons.math3.exception.NotStrictlyPositiveException" />
  <import name="org.apache.commons.math3.exception.NumberIsTooLargeException" />
  <import name="org.apache.commons.math3.exception.NumberIsTooSmallException" />
  <import name="org.apache.commons.math3.exception.TooManyEvaluationsException" />
  <import name="org.apache.commons.math3.util.FastMath" />
  <class name="SimpsonIntegrator" extends="BaseAbstractUnivariateIntegrator" startLine="26">
    <javadoc>
      <text>* Implements <a href="http://mathworld.wolfram.com/SimpsonsRule.html">
 * Simpson's Rule</a> for integration of real univariate functions. For
 * reference, see <b>Introduction to Numerical Analysis</b>, ISBN 038795452X,
 * chapter 3.
 * <p>
 * This implementation employs the basic trapezoid rule to calculate Simpson's
 * rule.</p></text>
      <version>$Id: SimpsonIntegrator.java 1364387 2012-07-22 18:14:11Z tn $</version>
      <since>1.2</since>
    </javadoc>
    <javadoc>
      <text>* Maximal number of iterations for Simpson.</text>
    </javadoc>
    <declaration type="int" name="SIMPSON_MAX_ITERATIONS_COUNT" />
    <javadoc>
      <text>* Build a Simpson integrator with given accuracies and iterations counts.</text>
      <param>relativeAccuracy relative accuracy of the result</param>
      <param>absoluteAccuracy absolute accuracy of the result</param>
      <param>minimalIterationCount minimum number of iterations</param>
      <param>maximalIterationCount maximum number of iterations
 * (must be less than or equal to {@link #SIMPSON_MAX_ITERATIONS_COUNT})</param>
      <exception>NotStrictlyPositiveException if minimal number of iterations
 * is not strictly positive</exception>
      <exception>NumberIsTooSmallException if maximal number of iterations
 * is lesser than or equal to the minimal number of iterations</exception>
      <exception>NumberIsTooLargeException if maximal number of iterations
 * is greater than {@link #SIMPSON_MAX_ITERATIONS_COUNT}</exception>
    </javadoc>
    <method type="constructor" name="SimpsonIntegrator" startLine="61" endLine="67">
      <scope startLine="63" endLine="66" />
    </method>
    <javadoc>
      <text>* Build a Simpson integrator with given iteration counts.</text>
      <param>minimalIterationCount minimum number of iterations</param>
      <param>maximalIterationCount maximum number of iterations
 * (must be less than or equal to {@link #SIMPSON_MAX_ITERATIONS_COUNT})</param>
      <exception>NotStrictlyPositiveException if minimal number of iterations
 * is not strictly positive</exception>
      <exception>NumberIsTooSmallException if maximal number of iterations
 * is lesser than or equal to the minimal number of iterations</exception>
      <exception>NumberIsTooLargeException if maximal number of iterations
 * is greater than {@link #SIMPSON_MAX_ITERATIONS_COUNT}</exception>
    </javadoc>
    <method type="constructor" name="SimpsonIntegrator" startLine="83" endLine="89">
      <scope startLine="85" endLine="88" />
    </method>
    <javadoc>
      <text>* Construct an integrator with default settings.
 * (max iteration count set to {@link #SIMPSON_MAX_ITERATIONS_COUNT})</text>
    </javadoc>
    <method type="constructor" name="SimpsonIntegrator" startLine="95" endLine="97" />
    <javadoc>
      <text>* {@inheritDoc}</text>
    </javadoc>
    <method type="double" name="doIntegrate" startLine="102" endLine="128">
      <declaration type="TrapezoidIntegrator" name="qtrap" />
      <scope startLine="105" endLine="107" />
      <declaration type="double" name="olds" />
      <declaration type="double" name="oldt" />
      <scope startLine="112" endLine="126">
        <declaration type="double" name="t" />
        <declaration type="double" name="s" />
        <scope startLine="116" endLine="123">
          <declaration type="double" name="delta" />
          <declaration type="double" name="rLimit" />
          <scope startLine="120" endLine="122" />
        </scope>
      </scope>
      <comment>Simpson's rule requires at least two trapezoid stages.</comment>
    </method>
  </class>
</source>
