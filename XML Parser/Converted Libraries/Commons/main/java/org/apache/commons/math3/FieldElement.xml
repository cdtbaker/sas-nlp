<?xml version="1.0" encoding="UTF-8"?>
<source package="org.apache.commons.math3">
  <import name="org.apache.commons.math3.exception.MathArithmeticException" />
  <import name="org.apache.commons.math3.exception.NullArgumentException" />
  <interface name="FieldElement" startLine="23">
    <javadoc>
      <text>* Interface representing <a href="http://mathworld.wolfram.com/Field.html">field</a> elements.</text>
      <param><T>
 *  the type of the field elements</param>
      <see>Field</see>
      <version>$Id: FieldElement.java 1416643 2012-12-03 19:37:14Z tn $</version>
      <since>2.0</since>
    </javadoc>
    <method name="add" type="T" startLine="32" endLine="37" />
    <javadoc>
      <text>* Compute this + a.</text>
      <param>a element to add</param>
      <return>a new element representing this + a</return>
      <throws>NullArgumentException if {@code addend} is {@code null}.</throws>
    </javadoc>
    <method name="subtract" type="T" startLine="39" endLine="44" />
    <javadoc>
      <text>* Compute this - a.</text>
      <param>a element to subtract</param>
      <return>a new element representing this - a</return>
      <throws>NullArgumentException if {@code a} is {@code null}.</throws>
    </javadoc>
    <method name="negate" type="T" startLine="46" endLine="50" />
    <javadoc>
      <text>* Returns the additive inverse of {@code this} element.</text>
      <return>the opposite of {@code this}.</return>
    </javadoc>
    <method name="multiply" type="T" startLine="52" endLine="60" />
    <javadoc>
      <text>* Compute n &times; this. Multiplication by an integer number is defined
 * as the following sum
 * <center>
 * n &times; this = &sum;<sub>i=1</sub><sup>n</sup> this.
 * </center></text>
      <param>n Number of times {@code this} must be added to itself.</param>
      <return>A new element representing n &times; this.</return>
    </javadoc>
    <method name="multiply" type="T" startLine="62" endLine="67" />
    <javadoc>
      <text>* Compute this &times; a.</text>
      <param>a element to multiply</param>
      <return>a new element representing this &times; a</return>
      <throws>NullArgumentException if {@code a} is {@code null}.</throws>
    </javadoc>
    <method name="divide" type="T" startLine="69" endLine="75" />
    <javadoc>
      <text>* Compute this &divide; a.</text>
      <param>a element to add</param>
      <return>a new element representing this &divide; a</return>
      <throws>NullArgumentException if {@code a} is {@code null}.</throws>
      <throws>MathArithmeticException if {@code a} is zero</throws>
    </javadoc>
    <method name="reciprocal" type="T" startLine="77" endLine="82" />
    <javadoc>
      <text>* Returns the multiplicative inverse of {@code this} element.</text>
      <return>the inverse of {@code this}.</return>
      <throws>MathArithmeticException if {@code this} is zero</throws>
    </javadoc>
    <method name="getField" type="Field<T>" startLine="84" endLine="87" />
    <javadoc>
      <text>* Get the {@link Field} to which the instance belongs.</text>
      <return>{@link Field} to which the instance belongs</return>
    </javadoc>
  </interface>
</source>
