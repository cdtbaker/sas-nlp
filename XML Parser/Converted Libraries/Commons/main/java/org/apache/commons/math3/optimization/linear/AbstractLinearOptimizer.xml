<?xml version="1.0" encoding="UTF-8"?>
<source package="org.apache.commons.math3.optimization.linear">
  <import name="java.util.Collection" />
  <import name="java.util.Collections" />
  <import name="org.apache.commons.math3.exception.MathIllegalStateException" />
  <import name="org.apache.commons.math3.exception.MaxCountExceededException" />
  <import name="org.apache.commons.math3.optimization.GoalType" />
  <import name="org.apache.commons.math3.optimization.PointValuePair" />
  <class name="AbstractLinearOptimizer" startLine="28">
    <implements name="LinearOptimizer" />
    <javadoc>
      <text>* Base class for implementing linear optimizers.
 * <p>
 * This base class handles the boilerplate methods associated to thresholds
 * settings and iterations counters.</text>
      <version>$Id: AbstractLinearOptimizer.java 1422230 2012-12-15 12:11:13Z erans $</version>
      <deprecated>As of 3.1 (to be removed in 4.0).</deprecated>
      <since>2.0</since>
    </javadoc>
    <javadoc>
      <text>* Default maximal number of iterations allowed.</text>
    </javadoc>
    <declaration type="int" name="DEFAULT_MAX_ITERATIONS" />
    <javadoc>
      <text>* Linear objective function.</text>
      <since>2.1</since>
    </javadoc>
    <declaration type="LinearObjectiveFunction" name="function" />
    <javadoc>
      <text>* Linear constraints.</text>
      <since>2.1</since>
    </javadoc>
    <declaration type="Collection<LinearConstraint>" name="linearConstraints" />
    <javadoc>
      <text>* Type of optimization goal: either {@link GoalType#MAXIMIZE} or {@link GoalType#MINIMIZE}.</text>
      <since>2.1</since>
    </javadoc>
    <declaration type="GoalType" name="goal" />
    <javadoc>
      <text>* Whether to restrict the variables to non-negative values.</text>
      <since>2.1</since>
    </javadoc>
    <declaration type="boolean" name="nonNegative" />
    <javadoc>
      <text>* Maximal number of iterations allowed.</text>
    </javadoc>
    <declaration type="int" name="maxIterations" />
    <javadoc>
      <text>* Number of iterations already performed.</text>
    </javadoc>
    <declaration type="int" name="iterations" />
    <javadoc>
      <text>* Simple constructor with default settings.
 * <p>The maximal number of evaluation is set to its default value.</p></text>
    </javadoc>
    <method type="constructor" name="AbstractLinearOptimizer" startLine="78" endLine="80" />
    <javadoc>
      <return>{@code true} if the variables are restricted to non-negative values.</return>
    </javadoc>
    <method type="boolean" name="restrictToNonNegative" startLine="85" endLine="87" />
    <javadoc>
      <return>the optimization type.</return>
    </javadoc>
    <method type="GoalType" name="getGoalType" startLine="92" endLine="94" />
    <javadoc>
      <return>the optimization type.</return>
    </javadoc>
    <method type="LinearObjectiveFunction" name="getFunction" startLine="99" endLine="101" />
    <javadoc>
      <return>the optimization type.</return>
    </javadoc>
    <method type="Collection<LinearConstraint>" name="getConstraints" startLine="106" endLine="108" />
    <javadoc>
      <text>* {@inheritDoc}</text>
    </javadoc>
    <method type="void" name="setMaxIterations" startLine="111" endLine="113" />
    <javadoc>
      <text>* {@inheritDoc}</text>
    </javadoc>
    <method type="int" name="getMaxIterations" startLine="116" endLine="118" />
    <javadoc>
      <text>* {@inheritDoc}</text>
    </javadoc>
    <method type="int" name="getIterations" startLine="121" endLine="123" />
    <javadoc>
      <text>* Increment the iterations counter by 1.</text>
      <exception>MaxCountExceededException if the maximal number of iterations is exceeded</exception>
    </javadoc>
    <method type="void" name="incrementIterationsCounter" startLine="130" endLine="134">
      <scope startLine="131" endLine="133" />
    </method>
    <javadoc>
      <text>* {@inheritDoc}</text>
    </javadoc>
    <method type="PointValuePair" name="optimize" startLine="140" endLine="153">
      <comment>store linear problem characteristics</comment>
      <comment>solve the problem</comment>
    </method>
    <method name="doOptimize" type="PointValuePair" startLine="155" endLine="161" />
    <javadoc>
      <text>* Perform the bulk of optimization algorithm.</text>
      <return>the point/value pair giving the optimal value for objective function</return>
      <exception>MathIllegalStateException if no solution fulfilling the constraints
 * can be found in the allowed number of iterations</exception>
    </javadoc>
  </class>
</source>
