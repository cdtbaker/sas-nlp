<?xml version="1.0" encoding="UTF-8"?>
<source package="org.apache.commons.math3.stat.inference">
  <import name="java.util.Collection" />
  <import name="org.apache.commons.math3.exception.ConvergenceException" />
  <import name="org.apache.commons.math3.exception.DimensionMismatchException" />
  <import name="org.apache.commons.math3.exception.MaxCountExceededException" />
  <import name="org.apache.commons.math3.exception.NoDataException" />
  <import name="org.apache.commons.math3.exception.NotPositiveException" />
  <import name="org.apache.commons.math3.exception.NotStrictlyPositiveException" />
  <import name="org.apache.commons.math3.exception.NullArgumentException" />
  <import name="org.apache.commons.math3.exception.NumberIsTooSmallException" />
  <import name="org.apache.commons.math3.exception.OutOfRangeException" />
  <import name="org.apache.commons.math3.exception.ZeroException" />
  <import name="org.apache.commons.math3.stat.descriptive.StatisticalSummary" />
  <class name="TestUtils" startLine="32">
    <javadoc>
      <text>* A collection of static methods to create inference test instances or to
 * perform inference tests.</text>
      <since>1.1</since>
      <version>$Id: TestUtils.java 1422313 2012-12-15 18:53:41Z psteitz $</version>
    </javadoc>
    <javadoc>
      <text>* Singleton TTest instance.</text>
    </javadoc>
    <declaration type="TTest" name="T_TEST" />
    <javadoc>
      <text>* Singleton ChiSquareTest instance.</text>
    </javadoc>
    <declaration type="ChiSquareTest" name="CHI_SQUARE_TEST" />
    <javadoc>
      <text>* Singleton OneWayAnova instance.</text>
    </javadoc>
    <declaration type="OneWayAnova" name="ONE_WAY_ANANOVA" />
    <javadoc>
      <text>* Singleton G-Test instance.</text>
    </javadoc>
    <declaration type="GTest" name="G_TEST" />
    <javadoc>
      <text>* Prevent instantiation.</text>
    </javadoc>
    <method type="constructor" name="TestUtils" startLine="56" endLine="58" />
    <javadoc>
      <see>org.apache.commons.math3.stat.inference.TTest#homoscedasticT(double[],double[])</see>
    </javadoc>
    <method type="double" name="homoscedasticT" startLine="66" endLine="68" />
    <javadoc>
      <see>org.apache.commons.math3.stat.inference.TTest#homoscedasticT(org.apache.commons.math3.stat.descriptive.StatisticalSummary,org.apache.commons.math3.stat.descriptive.StatisticalSummary)</see>
    </javadoc>
    <method type="double" name="homoscedasticT" startLine="75" endLine="77" />
    <javadoc>
      <see>org.apache.commons.math3.stat.inference.TTest#homoscedasticTTest(double[],double[],double)</see>
    </javadoc>
    <method type="boolean" name="homoscedasticTTest" startLine="85" endLine="87" />
    <javadoc>
      <see>org.apache.commons.math3.stat.inference.TTest#homoscedasticTTest(double[],double[])</see>
    </javadoc>
    <method type="double" name="homoscedasticTTest" startLine="93" endLine="95" />
    <javadoc>
      <see>org.apache.commons.math3.stat.inference.TTest#homoscedasticTTest(org.apache.commons.math3.stat.descriptive.StatisticalSummary,org.apache.commons.math3.stat.descriptive.StatisticalSummary)</see>
    </javadoc>
    <method type="double" name="homoscedasticTTest" startLine="102" endLine="104" />
    <javadoc>
      <see>org.apache.commons.math3.stat.inference.TTest#pairedT(double[],double[])</see>
    </javadoc>
    <method type="double" name="pairedT" startLine="111" endLine="113" />
    <javadoc>
      <see>org.apache.commons.math3.stat.inference.TTest#pairedTTest(double[],double[],double)</see>
    </javadoc>
    <method type="boolean" name="pairedTTest" startLine="121" endLine="123" />
    <javadoc>
      <see>org.apache.commons.math3.stat.inference.TTest#pairedTTest(double[],double[])</see>
    </javadoc>
    <method type="double" name="pairedTTest" startLine="130" endLine="132" />
    <javadoc>
      <see>org.apache.commons.math3.stat.inference.TTest#t(double,double[])</see>
    </javadoc>
    <method type="double" name="t" startLine="138" endLine="140" />
    <javadoc>
      <see>org.apache.commons.math3.stat.inference.TTest#t(double,org.apache.commons.math3.stat.descriptive.StatisticalSummary)</see>
    </javadoc>
    <method type="double" name="t" startLine="146" endLine="148" />
    <javadoc>
      <see>org.apache.commons.math3.stat.inference.TTest#t(double[],double[])</see>
    </javadoc>
    <method type="double" name="t" startLine="154" endLine="156" />
    <javadoc>
      <see>org.apache.commons.math3.stat.inference.TTest#t(org.apache.commons.math3.stat.descriptive.StatisticalSummary,org.apache.commons.math3.stat.descriptive.StatisticalSummary)</see>
    </javadoc>
    <method type="double" name="t" startLine="163" endLine="165" />
    <javadoc>
      <see>org.apache.commons.math3.stat.inference.TTest#tTest(double,double[],double)</see>
    </javadoc>
    <method type="boolean" name="tTest" startLine="172" endLine="174" />
    <javadoc>
      <see>org.apache.commons.math3.stat.inference.TTest#tTest(double,double[])</see>
    </javadoc>
    <method type="double" name="tTest" startLine="181" endLine="183" />
    <javadoc>
      <see>org.apache.commons.math3.stat.inference.TTest#tTest(double,org.apache.commons.math3.stat.descriptive.StatisticalSummary,double)</see>
    </javadoc>
    <method type="boolean" name="tTest" startLine="191" endLine="193" />
    <javadoc>
      <see>org.apache.commons.math3.stat.inference.TTest#tTest(double,org.apache.commons.math3.stat.descriptive.StatisticalSummary)</see>
    </javadoc>
    <method type="double" name="tTest" startLine="200" endLine="202" />
    <javadoc>
      <see>org.apache.commons.math3.stat.inference.TTest#tTest(double[],double[],double)</see>
    </javadoc>
    <method type="boolean" name="tTest" startLine="210" endLine="212" />
    <javadoc>
      <see>org.apache.commons.math3.stat.inference.TTest#tTest(double[],double[])</see>
    </javadoc>
    <method type="double" name="tTest" startLine="219" endLine="221" />
    <javadoc>
      <see>org.apache.commons.math3.stat.inference.TTest#tTest(org.apache.commons.math3.stat.descriptive.StatisticalSummary,org.apache.commons.math3.stat.descriptive.StatisticalSummary,double)</see>
    </javadoc>
    <method type="boolean" name="tTest" startLine="230" endLine="232" />
    <javadoc>
      <see>org.apache.commons.math3.stat.inference.TTest#tTest(org.apache.commons.math3.stat.descriptive.StatisticalSummary,org.apache.commons.math3.stat.descriptive.StatisticalSummary)</see>
    </javadoc>
    <method type="double" name="tTest" startLine="240" endLine="242" />
    <javadoc>
      <see>org.apache.commons.math3.stat.inference.ChiSquareTest#chiSquare(double[],long[])</see>
    </javadoc>
    <method type="double" name="chiSquare" startLine="249" endLine="251" />
    <javadoc>
      <see>org.apache.commons.math3.stat.inference.ChiSquareTest#chiSquare(long[][])</see>
    </javadoc>
    <method type="double" name="chiSquare" startLine="258" endLine="260" />
    <javadoc>
      <see>org.apache.commons.math3.stat.inference.ChiSquareTest#chiSquareTest(double[],long[],double)</see>
    </javadoc>
    <method type="boolean" name="chiSquareTest" startLine="268" endLine="270" />
    <javadoc>
      <see>org.apache.commons.math3.stat.inference.ChiSquareTest#chiSquareTest(double[],long[])</see>
    </javadoc>
    <method type="double" name="chiSquareTest" startLine="277" endLine="279" />
    <javadoc>
      <see>org.apache.commons.math3.stat.inference.ChiSquareTest#chiSquareTest(long[][],double)</see>
    </javadoc>
    <method type="boolean" name="chiSquareTest" startLine="286" endLine="288" />
    <javadoc>
      <see>org.apache.commons.math3.stat.inference.ChiSquareTest#chiSquareTest(long[][])</see>
    </javadoc>
    <method type="double" name="chiSquareTest" startLine="295" endLine="297" />
    <javadoc>
      <see>org.apache.commons.math3.stat.inference.ChiSquareTest#chiSquareDataSetsComparison(long[],long[])</see>
      <since>1.2</since>
    </javadoc>
    <method type="double" name="chiSquareDataSetsComparison" startLine="306" endLine="308" />
    <javadoc>
      <see>org.apache.commons.math3.stat.inference.ChiSquareTest#chiSquareTestDataSetsComparison(long[],long[])</see>
      <since>1.2</since>
    </javadoc>
    <method type="double" name="chiSquareTestDataSetsComparison" startLine="318" endLine="320" />
    <javadoc>
      <see>org.apache.commons.math3.stat.inference.ChiSquareTest#chiSquareTestDataSetsComparison(long[],long[],double)</see>
      <since>1.2</since>
    </javadoc>
    <method type="boolean" name="chiSquareTestDataSetsComparison" startLine="331" endLine="333" />
    <javadoc>
      <see>org.apache.commons.math3.stat.inference.OneWayAnova#anovaFValue(Collection)</see>
      <since>1.2</since>
    </javadoc>
    <method type="double" name="oneWayAnovaFValue" startLine="341" endLine="343" />
    <javadoc>
      <see>org.apache.commons.math3.stat.inference.OneWayAnova#anovaPValue(Collection)</see>
      <since>1.2</since>
    </javadoc>
    <method type="double" name="oneWayAnovaPValue" startLine="352" endLine="354" />
    <javadoc>
      <see>org.apache.commons.math3.stat.inference.OneWayAnova#anovaTest(Collection,double)</see>
      <since>1.2</since>
    </javadoc>
    <method type="boolean" name="oneWayAnovaTest" startLine="364" endLine="366" />
    <javadoc>
      <see>org.apache.commons.math3.stat.inference.GTest#g(double[],long[])</see>
      <since>3.1</since>
    </javadoc>
    <method type="double" name="g" startLine="374" endLine="376" />
    <javadoc>
      <see>org.apache.commons.math3.stat.inference.GTest#gTest(double[],long[])</see>
      <since>3.1</since>
    </javadoc>
    <method type="double" name="gTest" startLine="384" endLine="386" />
    <javadoc>
      <see>org.apache.commons.math3.stat.inference.GTest#gTestIntrinsic(double[],long[])</see>
      <since>3.1</since>
    </javadoc>
    <method type="double" name="gTestIntrinsic" startLine="394" endLine="396" />
    <javadoc>
      <see>org.apache.commons.math3.stat.inference.GTest#gTest(double[],long[],double)</see>
      <since>3.1</since>
    </javadoc>
    <method type="boolean" name="gTest" startLine="405" endLine="407" />
    <javadoc>
      <see>org.apache.commons.math3.stat.inference.GTest#gDataSetsComparison(long[],long[])</see>
      <since>3.1</since>
    </javadoc>
    <method type="double" name="gDataSetsComparison" startLine="415" endLine="417" />
    <javadoc>
      <see>org.apache.commons.math3.stat.inference.GTest#rootLogLikelihoodRatio(long,long,long,long)</see>
      <since>3.1</since>
    </javadoc>
    <method type="double" name="rootLogLikelihoodRatio" startLine="424" endLine="426" />
    <javadoc>
      <see>org.apache.commons.math3.stat.inference.GTest#gTestDataSetsComparison(long[],long[])</see>
      <since>3.1</since>
    </javadoc>
    <method type="double" name="gTestDataSetsComparison" startLine="436" endLine="438" />
    <javadoc>
      <see>org.apache.commons.math3.stat.inference.GTest#gTestDataSetsComparison(long[],long[],double)</see>
      <since>3.1</since>
    </javadoc>
    <method type="boolean" name="gTestDataSetsComparison" startLine="448" endLine="450" />
    <comment>CHECKSTYLE: stop JavadocMethodCheck</comment>
    <comment>CHECKSTYLE: resume JavadocMethodCheck</comment>
  </class>
</source>
