<?xml version="1.0" encoding="UTF-8"?>
<source package="org.apache.commons.math3.exception">
  <import name="org.apache.commons.math3.exception.util.Localizable" />
  <import name="org.apache.commons.math3.exception.util.ExceptionContext" />
  <import name="org.apache.commons.math3.exception.util.ExceptionContextProvider" />
  <class name="MathIllegalArgumentException" extends="IllegalArgumentException" startLine="23">
    <implements name="ExceptionContextProvider" />
    <javadoc>
      <text>* Base class for all preconditions violation exceptions.
 * In most cases, this class should not be instantiated directly: it should
 * serve as a base class to create all the exceptions that have the semantics
 * of the standard {@link IllegalArgumentException}.</text>
      <since>2.2</since>
      <version>$Id: MathIllegalArgumentException.java 1364378 2012-07-22 17:42:38Z tn $</version>
    </javadoc>
    <javadoc>
      <text>* Serializable version Id.</text>
    </javadoc>
    <declaration type="long" name="serialVersionUID" />
    <javadoc>
      <text>* Context.</text>
    </javadoc>
    <declaration type="ExceptionContext" name="context" />
    <javadoc>
      <param>pattern Message pattern explaining the cause of the error.</param>
      <param>args Arguments.</param>
    </javadoc>
    <method type="constructor" name="MathIllegalArgumentException" startLine="44" endLine="47" />
    <javadoc>
      <text>* {@inheritDoc}</text>
    </javadoc>
    <method type="ExceptionContext" name="getContext" startLine="50" endLine="52" />
    <javadoc>
      <text>* {@inheritDoc}</text>
    </javadoc>
    <method type="String" name="getMessage" startLine="56" endLine="58" />
    <javadoc>
      <text>* {@inheritDoc}</text>
    </javadoc>
    <method type="String" name="getLocalizedMessage" startLine="62" endLine="64" />
  </class>
</source>
