<?xml version="1.0" encoding="UTF-8"?>
<source package="org.apache.commons.math3.optim">
  <import name="java.util.Arrays" />
  <class name="SimpleBounds" startLine="21">
    <implements name="OptimizationData" />
    <javadoc>
      <text>* Simple optimization constraints: lower and upper bounds.
 * The valid range of the parameters is an interval that can be infinite
 * (in one or both directions).
 * <br/>
 * Immutable class.</text>
      <version>$Id: SimpleBounds.java 1435539 2013-01-19 13:27:24Z tn $</version>
      <since>3.1</since>
    </javadoc>
    <javadoc>
      <text>* Lower bounds.</text>
    </javadoc>
    <declaration type="double[]" name="lower" />
    <javadoc>
      <text>* Upper bounds.</text>
    </javadoc>
    <declaration type="double[]" name="upper" />
    <javadoc>
      <param>lB Lower bounds.</param>
      <param>uB Upper bounds.</param>
    </javadoc>
    <method type="constructor" name="SimpleBounds" startLine="42" endLine="45" />
    <javadoc>
      <text>* Gets the lower bounds.</text>
      <return>the lower bounds.</return>
    </javadoc>
    <method type="double[]" name="getLower" startLine="52" endLine="54" />
    <javadoc>
      <text>* Gets the upper bounds.</text>
      <return>the upper bounds.</return>
    </javadoc>
    <method type="double[]" name="getUpper" startLine="60" endLine="62" />
    <javadoc>
      <text>* Factory method that creates instance of this class that represents
 * unbounded ranges.</text>
      <param>dim Number of parameters.</param>
      <return>a new instance suitable for passing to an optimizer that
 * requires bounds specification.</return>
    </javadoc>
    <method type="SimpleBounds" name="unbounded" startLine="72" endLine="79">
      <declaration type="double[]" name="lB" />
      <declaration type="double[]" name="uB" />
    </method>
  </class>
</source>
