<?xml version="1.0" encoding="UTF-8"?>
<source package="org.apache.commons.math3.ode.nonstiff">
  <import name="org.apache.commons.math3.ode.sampling.StepInterpolator" />
  <class name="HighamHall54StepInterpolator" extends="RungeKuttaStepInterpolator" startLine="22">
    <javadoc>
      <text>* This class represents an interpolator over the last step during an
 * ODE integration for the 5(4) Higham and Hall integrator.</text>
      <see>HighamHall54Integrator</see>
      <version>$Id: HighamHall54StepInterpolator.java 1416643 2012-12-03 19:37:14Z tn $</version>
      <since>1.2</since>
    </javadoc>
    <javadoc>
      <text>* Serializable version identifier</text>
    </javadoc>
    <declaration type="long" name="serialVersionUID" />
    <javadoc>
      <text>* Simple constructor.
 * This constructor builds an instance that is not usable yet, the{@link org.apache.commons.math3.ode.sampling.AbstractStepInterpolator#reinitialize}method should be called before using the instance in order to
 * initialize the internal arrays. This constructor is used only
 * in order to delay the initialization in some cases. The {@link EmbeddedRungeKuttaIntegrator} uses the prototyping design pattern
 * to create the step interpolators by cloning an uninitialized model
 * and later initializing the copy.</text>
    </javadoc>
    <method type="constructor" name="HighamHall54StepInterpolator" startLine="49" endLine="51" />
    <javadoc>
      <text>* Copy constructor.</text>
      <param>interpolator interpolator to copy from. The copy is a deep
 * copy: its arrays are separated from the original arrays of the
 * instance</param>
    </javadoc>
    <method type="constructor" name="HighamHall54StepInterpolator" startLine="58" endLine="60" />
    <javadoc>
      <text>* {@inheritDoc}</text>
    </javadoc>
    <method type="StepInterpolator" name="doCopy" startLine="64" endLine="66" />
    <javadoc>
      <text>* {@inheritDoc}</text>
    </javadoc>
    <method type="void" name="computeInterpolatedStateAndDerivatives" startLine="72" endLine="118">
      <declaration type="double" name="bDot0" />
      <declaration type="double" name="bDot2" />
      <declaration type="double" name="bDot3" />
      <declaration type="double" name="bDot4" />
      <declaration type="double" name="bDot5" />
      <scope startLine="80" endLine="98">
        <declaration type="double" name="hTheta" />
        <declaration type="double" name="b0" />
        <declaration type="double" name="b2" />
        <declaration type="double" name="b3" />
        <declaration type="double" name="b4" />
        <declaration type="double" name="b5" />
        <scope startLine="87" endLine="97">
          <declaration type="double" name="yDot0" />
          <declaration type="double" name="yDot2" />
          <declaration type="double" name="yDot3" />
          <declaration type="double" name="yDot4" />
          <declaration type="double" name="yDot5" />
        </scope>
      </scope>
      <scope startLine="98" endLine="116">
        <declaration type="double" name="theta2" />
        <declaration type="double" name="b0" />
        <declaration type="double" name="b2" />
        <declaration type="double" name="b3" />
        <declaration type="double" name="b4" />
        <declaration type="double" name="b5" />
        <scope startLine="105" endLine="115">
          <declaration type="double" name="yDot0" />
          <declaration type="double" name="yDot2" />
          <declaration type="double" name="yDot3" />
          <declaration type="double" name="yDot4" />
          <declaration type="double" name="yDot5" />
        </scope>
      </scope>
    </method>
  </class>
</source>
