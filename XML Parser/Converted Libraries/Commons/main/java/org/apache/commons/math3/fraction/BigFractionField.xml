<?xml version="1.0" encoding="UTF-8"?>
<source package="org.apache.commons.math3.fraction">
  <import name="java.io.Serializable" />
  <import name="org.apache.commons.math3.Field" />
  <import name="org.apache.commons.math3.FieldElement" />
  <class name="BigFractionField" startLine="25">
    <implements name="Field<BigFraction>" />
    <implements name="Serializable" />
    <javadoc>
      <text>* Representation of the fractional numbers  without any overflow field.
 * <p>
 * This class is a singleton.
 * </p></text>
      <see>Fraction</see>
      <version>$Id: BigFractionField.java 1416643 2012-12-03 19:37:14Z tn $</version>
      <since>2.0</since>
    </javadoc>
    <javadoc>
      <text>* Serializable version identifier</text>
    </javadoc>
    <declaration type="long" name="serialVersionUID" />
    <javadoc>
      <text>* Private constructor for the singleton.</text>
    </javadoc>
    <method type="constructor" name="BigFractionField" startLine="41" endLine="42" />
    <javadoc>
      <text>* Get the unique instance.</text>
      <return>the unique instance</return>
    </javadoc>
    <method type="BigFractionField" name="getInstance" startLine="47" endLine="49" />
    <javadoc>
      <text>* {@inheritDoc}</text>
    </javadoc>
    <method type="BigFraction" name="getOne" startLine="52" endLine="54" />
    <javadoc>
      <text>* {@inheritDoc}</text>
    </javadoc>
    <method type="BigFraction" name="getZero" startLine="57" endLine="59" />
    <javadoc>
      <text>* {@inheritDoc}</text>
    </javadoc>
    <method type="Class<? extends FieldElement<BigFraction>>" name="getRuntimeClass" startLine="62" endLine="64" />
    <class name="LazyHolder" startLine="66">
      <javadoc>
        <text>* Holder for the instance.
 * <p>We use here the Initialization On Demand Holder Idiom.</p></text>
      </javadoc>
      <javadoc>
        <text>* Cached field instance.</text>
      </javadoc>
      <declaration type="BigFractionField" name="INSTANCE" />
      <javadoc>
        <text>* Handle deserialization of the singleton.</text>
        <return>the singleton instance</return>
      </javadoc>
      <method type="Object" name="readResolve" startLine="78" endLine="81">
        <comment>return the singleton instance</comment>
      </method>
    </class>
    <comment>CHECKSTYLE: stop HideUtilityClassConstructor</comment>
    <comment>CHECKSTYLE: resume HideUtilityClassConstructor</comment>
  </class>
</source>
