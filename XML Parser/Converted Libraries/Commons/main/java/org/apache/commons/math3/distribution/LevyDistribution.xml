<?xml version="1.0" encoding="UTF-8"?>
<source package="org.apache.commons.math3.distribution">
  <import name="org.apache.commons.math3.exception.OutOfRangeException" />
  <import name="org.apache.commons.math3.random.RandomGenerator" />
  <import name="org.apache.commons.math3.special.Erf" />
  <import name="org.apache.commons.math3.util.FastMath" />
  <class name="LevyDistribution" extends="AbstractRealDistribution" startLine="24">
    <javadoc>
      <text>* This class implements the <a href="http://en.wikipedia.org/wiki/L%C3%A9vy_distribution">
 * L&eacute;vy distribution</a>.</text>
      <version>$Id: LevyDistribution.java 1456957 2013-03-15 13:54:52Z luc $</version>
      <since>3.2</since>
    </javadoc>
    <javadoc>
      <text>* Serializable UID.</text>
    </javadoc>
    <declaration type="long" name="serialVersionUID" />
    <javadoc>
      <text>* Location parameter.</text>
    </javadoc>
    <declaration type="double" name="mu" />
    <javadoc>
      <text>* Scale parameter.</text>
    </javadoc>
    <declaration type="double" name="c" />
    <javadoc>
      <text>* Half of c (for calculations).</text>
    </javadoc>
    <declaration type="double" name="halfC" />
    <javadoc>
      <text>* Creates a LevyDistribution.</text>
      <param>rng random generator to be used for sampling</param>
      <param>mu location</param>
      <param>c scale parameter</param>
    </javadoc>
    <method type="constructor" name="LevyDistribution" startLine="51" endLine="56" />
    <javadoc>
      <text>* {@inheritDoc}<p>
 * From Wikipedia: The probability density function of the L&eacute;vy distribution
 * over the domain is
 * </p>
 * <pre>
 * f(x; &mu;, c) = &radic;(c / 2&pi;) * e<sup>-c / 2 (x - &mu;)</sup> / (x - &mu;)<sup>3/2</sup>
 * </pre>
 * <p>
 * For this distribution, {@code X}, this method returns {@code P(X < x)}.
 * If {@code x} is less than location parameter &mu;, {@code Double.NaN} is
 * returned, as in these cases the distribution is not defined.
 * </p></text>
    </javadoc>
    <method type="double" name="density" startLine="72" endLine="80">
      <scope startLine="73" endLine="75" />
      <declaration type="double" name="delta" />
      <declaration type="double" name="f" />
    </method>
    <javadoc>
      <text>* {@inheritDoc}<p>
 * From Wikipedia: the cumulative distribution function is
 * </p>
 * <pre>
 * f(x; u, c) = erfc (&radic; (c / 2 (x - u )))
 * </pre></text>
    </javadoc>
    <method type="double" name="cumulativeProbability" startLine="90" endLine="95">
      <scope startLine="91" endLine="93" />
    </method>
    <javadoc>
      <text>* {@inheritDoc}</text>
    </javadoc>
    <method type="double" name="inverseCumulativeProbability" startLine="99" endLine="105">
      <scope startLine="100" endLine="102" />
      <declaration type="double" name="t" />
    </method>
    <javadoc>
      <text>* Get the scale parameter of the distribution.</text>
      <return>scale parameter of the distribution</return>
    </javadoc>
    <method type="double" name="getScale" startLine="110" endLine="112" />
    <javadoc>
      <text>* Get the location parameter of the distribution.</text>
      <return>location parameter of the distribution</return>
    </javadoc>
    <method type="double" name="getLocation" startLine="117" endLine="119" />
    <javadoc>
      <text>* {@inheritDoc}</text>
    </javadoc>
    <method type="double" name="getNumericalMean" startLine="122" endLine="124" />
    <javadoc>
      <text>* {@inheritDoc}</text>
    </javadoc>
    <method type="double" name="getNumericalVariance" startLine="127" endLine="129" />
    <javadoc>
      <text>* {@inheritDoc}</text>
    </javadoc>
    <method type="double" name="getSupportLowerBound" startLine="132" endLine="134" />
    <javadoc>
      <text>* {@inheritDoc}</text>
    </javadoc>
    <method type="double" name="getSupportUpperBound" startLine="137" endLine="139" />
    <javadoc>
      <text>* {@inheritDoc}</text>
    </javadoc>
    <method type="boolean" name="isSupportLowerBoundInclusive" startLine="142" endLine="146">
      <comment>there is a division by x-mu in the computation, so density</comment>
      <comment>is not finite at lower bound, bound must be excluded</comment>
    </method>
    <javadoc>
      <text>* {@inheritDoc}</text>
    </javadoc>
    <method type="boolean" name="isSupportUpperBoundInclusive" startLine="149" endLine="152">
      <comment>upper bound is infinite, so it must be excluded</comment>
    </method>
    <javadoc>
      <text>* {@inheritDoc}</text>
    </javadoc>
    <method type="boolean" name="isSupportConnected" startLine="155" endLine="157" />
    <comment>Setting this to 1 returns a cumProb of 1.0</comment>
  </class>
</source>
