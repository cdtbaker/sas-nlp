<?xml version="1.0" encoding="UTF-8"?>
<source package="org.apache.commons.math3.linear">
  <import name="java.util.ArrayList" />
  <import name="java.util.Locale" />
  <import name="org.apache.commons.math3.exception.NoDataException" />
  <import name="org.apache.commons.math3.exception.NotPositiveException" />
  <import name="org.apache.commons.math3.exception.NotStrictlyPositiveException" />
  <import name="org.apache.commons.math3.exception.DimensionMismatchException" />
  <import name="org.apache.commons.math3.exception.NullArgumentException" />
  <import name="org.apache.commons.math3.exception.NumberIsTooSmallException" />
  <import name="org.apache.commons.math3.exception.OutOfRangeException" />
  <import name="org.apache.commons.math3.exception.util.LocalizedFormats" />
  <import name="org.apache.commons.math3.util.MathUtils" />
  <import name="org.apache.commons.math3.util.FastMath" />
  <class name="AbstractRealMatrix" extends="RealLinearOperator" startLine="34">
    <implements name="RealMatrix" />
    <javadoc>
      <text>* Basic implementation of RealMatrix methods regardless of the underlying storage.
 * <p>All the methods implemented here use {@link #getEntry(int,int)} to access
 * matrix elements. Derived class can provide faster implementations.</p></text>
      <version>$Id: AbstractRealMatrix.java 1459534 2013-03-21 21:24:45Z tn $</version>
      <since>2.0</since>
    </javadoc>
    <javadoc>
      <text>* Default format.</text>
    </javadoc>
    <declaration type="RealMatrixFormat" name="DEFAULT_FORMAT" />
    <scope startLine="48" endLine="51">
      <comment>set the minimum fraction digits to 1 to keep compatibility</comment>
    </scope>
    <javadoc>
      <text>* Creates a matrix with no data</text>
    </javadoc>
    <method type="constructor" name="AbstractRealMatrix" startLine="56" endLine="56" />
    <javadoc>
      <text>* Create a new RealMatrix with the supplied row and column dimensions.</text>
      <param>rowDimension  the number of rows in the new matrix</param>
      <param>columnDimension  the number of columns in the new matrix</param>
      <throws>NotStrictlyPositiveException if row or column dimension is not positive</throws>
    </javadoc>
    <method type="constructor" name="AbstractRealMatrix" startLine="67" endLine="74">
      <scope startLine="68" endLine="70" />
      <scope startLine="71" endLine="73" />
    </method>
    <javadoc>
      <text>* {@inheritDoc}</text>
    </javadoc>
    <method type="RealMatrix" name="add" startLine="78" endLine="91">
      <declaration type="int" name="rowCount" />
      <declaration type="int" name="columnCount" />
      <declaration type="RealMatrix" name="out" />
      <scope startLine="84" endLine="88">
        <scope startLine="85" endLine="87" />
      </scope>
    </method>
    <javadoc>
      <text>* {@inheritDoc}</text>
    </javadoc>
    <method type="RealMatrix" name="subtract" startLine="95" endLine="108">
      <declaration type="int" name="rowCount" />
      <declaration type="int" name="columnCount" />
      <declaration type="RealMatrix" name="out" />
      <scope startLine="101" endLine="105">
        <scope startLine="102" endLine="104" />
      </scope>
    </method>
    <javadoc>
      <text>* {@inheritDoc}</text>
    </javadoc>
    <method type="RealMatrix" name="scalarAdd" startLine="111" endLine="122">
      <declaration type="int" name="rowCount" />
      <declaration type="int" name="columnCount" />
      <declaration type="RealMatrix" name="out" />
      <scope startLine="115" endLine="119">
        <scope startLine="116" endLine="118" />
      </scope>
    </method>
    <javadoc>
      <text>* {@inheritDoc}</text>
    </javadoc>
    <method type="RealMatrix" name="scalarMultiply" startLine="125" endLine="136">
      <declaration type="int" name="rowCount" />
      <declaration type="int" name="columnCount" />
      <declaration type="RealMatrix" name="out" />
      <scope startLine="129" endLine="133">
        <scope startLine="130" endLine="132" />
      </scope>
    </method>
    <javadoc>
      <text>* {@inheritDoc}</text>
    </javadoc>
    <method type="RealMatrix" name="multiply" startLine="140" endLine="158">
      <declaration type="int" name="nRows" />
      <declaration type="int" name="nCols" />
      <declaration type="int" name="nSum" />
      <declaration type="RealMatrix" name="out" />
      <scope startLine="147" endLine="155">
        <scope startLine="148" endLine="154">
          <declaration type="double" name="sum" />
          <scope startLine="150" endLine="152" />
        </scope>
      </scope>
    </method>
    <javadoc>
      <text>* {@inheritDoc}</text>
    </javadoc>
    <method type="RealMatrix" name="preMultiply" startLine="162" endLine="164" />
    <javadoc>
      <text>* {@inheritDoc}</text>
    </javadoc>
    <method type="RealMatrix" name="power" startLine="168" endLine="224">
      <scope startLine="169" endLine="171" />
      <scope startLine="173" endLine="175" />
      <scope startLine="177" endLine="179" />
      <scope startLine="181" endLine="183" />
      <declaration type="int" name="power" />
      <declaration type="char[]" name="binaryRepresentation" />
      <declaration type="ArrayList<Integer>" name="nonZeroPositions" />
      <declaration type="int" name="maxI" />
      <scope startLine="198" endLine="208">
        <scope startLine="199" endLine="207">
          <declaration type="int" name="pos" />
          <scope startLine="204" endLine="206" />
        </scope>
        <comment>The positions are taken in turn, so maxI is only changed once</comment>
      </scope>
      <declaration type="RealMatrix[]" name="results" />
      <scope startLine="213" endLine="215" />
      <declaration type="RealMatrix" name="result" />
      <scope startLine="219" endLine="221" />
      <comment>Only log_2(p) operations is used by doing as follows:
 5^214 = 5^128  5^64  5^16  5^4  5^2

 In general, the same approach is used for A^p.</comment>
    </method>
    <javadoc>
      <text>* {@inheritDoc}</text>
    </javadoc>
    <method type="double[][]" name="getData" startLine="227" endLine="238">
      <declaration type="double[][]" name="data" />
      <scope startLine="230" endLine="235">
        <declaration type="double[]" name="dataI" />
        <scope startLine="232" endLine="234" />
      </scope>
    </method>
    <javadoc>
      <text>* {@inheritDoc}</text>
    </javadoc>
    <method type="double" name="getNorm" startLine="241" endLine="276">
      <javadoc>
        <text>* Last row index.</text>
      </javadoc>
      <declaration type="double" name="endRow" />
      <javadoc>
        <text>* Sum of absolute values on one column.</text>
      </javadoc>
      <declaration type="double" name="columnSum" />
      <javadoc>
        <text>* Maximal sum across all columns.</text>
      </javadoc>
      <declaration type="double" name="maxColSum" />
      <javadoc>
        <text>* {@inheritDoc}</text>
      </javadoc>
      <method type="void" name="start" startLine="256" endLine="260" />
      <javadoc>
        <text>* {@inheritDoc}</text>
      </javadoc>
      <method type="void" name="visit" startLine="263" endLine="269">
        <scope startLine="265" endLine="268" />
      </method>
      <javadoc>
        <text>* {@inheritDoc}</text>
      </javadoc>
      <method type="double" name="end" startLine="272" endLine="274" />
    </method>
    <javadoc>
      <text>* {@inheritDoc}</text>
    </javadoc>
    <method type="double" name="getFrobeniusNorm" startLine="279" endLine="302">
      <javadoc>
        <text>* Sum of squared entries.</text>
      </javadoc>
      <declaration type="double" name="sum" />
      <javadoc>
        <text>* {@inheritDoc}</text>
      </javadoc>
      <method type="void" name="start" startLine="288" endLine="290" />
      <javadoc>
        <text>* {@inheritDoc}</text>
      </javadoc>
      <method type="void" name="visit" startLine="293" endLine="295" />
      <javadoc>
        <text>* {@inheritDoc}</text>
      </javadoc>
      <method type="double" name="end" startLine="298" endLine="300" />
    </method>
    <javadoc>
      <text>* {@inheritDoc}</text>
    </javadoc>
    <method type="RealMatrix" name="getSubMatrix" startLine="307" endLine="319">
      <declaration type="RealMatrix" name="subMatrix" />
      <scope startLine="312" endLine="316">
        <scope startLine="313" endLine="315" />
      </scope>
    </method>
    <javadoc>
      <text>* {@inheritDoc}</text>
    </javadoc>
    <method type="RealMatrix" name="getSubMatrix" startLine="324" endLine="340">
      <declaration type="RealMatrix" name="subMatrix" />
      <javadoc>
        <text>* {@inheritDoc}</text>
      </javadoc>
      <method type="double" name="visit" startLine="333" endLine="335" />
    </method>
    <javadoc>
      <text>* {@inheritDoc}</text>
    </javadoc>
    <method type="void" name="copySubMatrix" startLine="347" endLine="387">
      <declaration type="int" name="rowsCount" />
      <declaration type="int" name="columnsCount" />
      <scope startLine="351" endLine="354" />
      <scope startLine="356" endLine="361">
        <scope startLine="357" endLine="360" />
      </scope>
      <javadoc>
        <text>* Initial row index.</text>
      </javadoc>
      <declaration type="int" name="startRow" />
      <javadoc>
        <text>* Initial column index.</text>
      </javadoc>
      <declaration type="int" name="startColumn" />
      <javadoc>
        <text>* {@inheritDoc}</text>
      </javadoc>
      <method type="void" name="start" startLine="375" endLine="378" />
      <javadoc>
        <text>* {@inheritDoc}</text>
      </javadoc>
      <method type="void" name="visit" startLine="382" endLine="384" />
    </method>
    <javadoc>
      <text>* {@inheritDoc}</text>
    </javadoc>
    <method type="void" name="copySubMatrix" startLine="393" endLine="412">
      <declaration type="int" name="nCols" />
      <scope startLine="397" endLine="400" />
      <scope startLine="402" endLine="411">
        <declaration type="double[]" name="destinationI" />
        <scope startLine="404" endLine="407" />
        <scope startLine="408" endLine="410" />
      </scope>
    </method>
    <javadoc>
      <text>* {@inheritDoc}</text>
    </javadoc>
    <method type="void" name="setSubMatrix" startLine="417" endLine="445">
      <declaration type="int" name="nRows" />
      <scope startLine="420" endLine="422" />
      <declaration type="int" name="nCols" />
      <scope startLine="425" endLine="427" />
      <scope startLine="429" endLine="433">
        <scope startLine="430" endLine="432" />
      </scope>
      <scope startLine="440" endLine="444">
        <scope startLine="441" endLine="443" />
      </scope>
    </method>
    <javadoc>
      <text>* {@inheritDoc}</text>
    </javadoc>
    <method type="RealMatrix" name="getRowMatrix" startLine="448" endLine="457">
      <declaration type="int" name="nCols" />
      <declaration type="RealMatrix" name="out" />
      <scope startLine="452" endLine="454" />
    </method>
    <javadoc>
      <text>* {@inheritDoc}</text>
    </javadoc>
    <method type="void" name="setRowMatrix" startLine="461" endLine="473">
      <declaration type="int" name="nCols" />
      <scope startLine="465" endLine="469" />
      <scope startLine="470" endLine="472" />
    </method>
    <javadoc>
      <text>* {@inheritDoc}</text>
    </javadoc>
    <method type="RealMatrix" name="getColumnMatrix" startLine="477" endLine="486">
      <declaration type="int" name="nRows" />
      <declaration type="RealMatrix" name="out" />
      <scope startLine="481" endLine="483" />
    </method>
    <javadoc>
      <text>* {@inheritDoc}</text>
    </javadoc>
    <method type="void" name="setColumnMatrix" startLine="490" endLine="502">
      <declaration type="int" name="nRows" />
      <scope startLine="494" endLine="498" />
      <scope startLine="499" endLine="501" />
    </method>
    <javadoc>
      <text>* {@inheritDoc}</text>
    </javadoc>
    <method type="RealVector" name="getRowVector" startLine="506" endLine="508" />
    <javadoc>
      <text>* {@inheritDoc}</text>
    </javadoc>
    <method type="void" name="setRowVector" startLine="512" endLine="522">
      <declaration type="int" name="nCols" />
      <scope startLine="515" endLine="518" />
      <scope startLine="519" endLine="521" />
    </method>
    <javadoc>
      <text>* {@inheritDoc}</text>
    </javadoc>
    <method type="RealVector" name="getColumnVector" startLine="526" endLine="528" />
    <javadoc>
      <text>* {@inheritDoc}</text>
    </javadoc>
    <method type="void" name="setColumnVector" startLine="532" endLine="542">
      <declaration type="int" name="nRows" />
      <scope startLine="535" endLine="538" />
      <scope startLine="539" endLine="541" />
    </method>
    <javadoc>
      <text>* {@inheritDoc}</text>
    </javadoc>
    <method type="double[]" name="getRow" startLine="545" endLine="554">
      <declaration type="int" name="nCols" />
      <declaration type="double[]" name="out" />
      <scope startLine="549" endLine="551" />
    </method>
    <javadoc>
      <text>* {@inheritDoc}</text>
    </javadoc>
    <method type="void" name="setRow" startLine="558" endLine="567">
      <declaration type="int" name="nCols" />
      <scope startLine="561" endLine="563" />
      <scope startLine="564" endLine="566" />
    </method>
    <javadoc>
      <text>* {@inheritDoc}</text>
    </javadoc>
    <method type="double[]" name="getColumn" startLine="570" endLine="579">
      <declaration type="int" name="nRows" />
      <declaration type="double[]" name="out" />
      <scope startLine="574" endLine="576" />
    </method>
    <javadoc>
      <text>* {@inheritDoc}</text>
    </javadoc>
    <method type="void" name="setColumn" startLine="583" endLine="592">
      <declaration type="int" name="nRows" />
      <scope startLine="586" endLine="588" />
      <scope startLine="589" endLine="591" />
    </method>
    <javadoc>
      <text>* {@inheritDoc}</text>
    </javadoc>
    <method type="void" name="addToEntry" startLine="596" endLine="599" />
    <javadoc>
      <text>* {@inheritDoc}</text>
    </javadoc>
    <method type="void" name="multiplyEntry" startLine="603" endLine="606" />
    <javadoc>
      <text>* {@inheritDoc}</text>
    </javadoc>
    <method type="RealMatrix" name="transpose" startLine="609" endLine="624">
      <declaration type="int" name="nRows" />
      <declaration type="int" name="nCols" />
      <declaration type="RealMatrix" name="out" />
      <javadoc>
        <text>* {@inheritDoc}</text>
      </javadoc>
      <method type="void" name="visit" startLine="617" endLine="619" />
    </method>
    <javadoc>
      <text>* {@inheritDoc}</text>
    </javadoc>
    <method type="boolean" name="isSquare" startLine="627" endLine="629" />
    <method name="getRowDimension" type="int" startLine="631" endLine="637" />
    <javadoc>
      <text>* Returns the number of rows of this matrix.</text>
      <return>the number of rows.</return>
    </javadoc>
    <method name="getColumnDimension" type="int" startLine="639" endLine="645" />
    <javadoc>
      <text>* Returns the number of columns of this matrix.</text>
      <return>the number of columns.</return>
    </javadoc>
    <javadoc>
      <text>* {@inheritDoc}</text>
    </javadoc>
    <method type="double" name="getTrace" startLine="648" endLine="659">
      <declaration type="int" name="nRows" />
      <declaration type="int" name="nCols" />
      <scope startLine="651" endLine="653" />
      <declaration type="double" name="trace" />
      <scope startLine="655" endLine="657" />
    </method>
    <javadoc>
      <text>* {@inheritDoc}</text>
    </javadoc>
    <method type="double[]" name="operate" startLine="663" endLine="680">
      <declaration type="int" name="nRows" />
      <declaration type="int" name="nCols" />
      <scope startLine="666" endLine="668" />
      <declaration type="double[]" name="out" />
      <scope startLine="671" endLine="677">
        <declaration type="double" name="sum" />
        <scope startLine="673" endLine="675" />
      </scope>
    </method>
    <javadoc>
      <text>* {@inheritDoc}</text>
    </javadoc>
    <method type="RealVector" name="operate" startLine="685" endLine="706">
      <scope startLine="686" endLine="688" />
      <scope startLine="688" endLine="705">
        <declaration type="int" name="nRows" />
        <declaration type="int" name="nCols" />
        <scope startLine="691" endLine="693" />
        <declaration type="double[]" name="out" />
        <scope startLine="696" endLine="702">
          <declaration type="double" name="sum" />
          <scope startLine="698" endLine="700" />
        </scope>
      </scope>
    </method>
    <javadoc>
      <text>* {@inheritDoc}</text>
    </javadoc>
    <method type="double[]" name="preMultiply" startLine="709" endLine="727">
      <declaration type="int" name="nRows" />
      <declaration type="int" name="nCols" />
      <scope startLine="713" endLine="715" />
      <declaration type="double[]" name="out" />
      <scope startLine="718" endLine="724">
        <declaration type="double" name="sum" />
        <scope startLine="720" endLine="722" />
      </scope>
    </method>
    <javadoc>
      <text>* {@inheritDoc}</text>
    </javadoc>
    <method type="RealVector" name="preMultiply" startLine="730" endLine="752">
      <scope startLine="731" endLine="733" />
      <scope startLine="733" endLine="751">
        <declaration type="int" name="nRows" />
        <declaration type="int" name="nCols" />
        <scope startLine="737" endLine="739" />
        <declaration type="double[]" name="out" />
        <scope startLine="742" endLine="748">
          <declaration type="double" name="sum" />
          <scope startLine="744" endLine="746" />
        </scope>
      </scope>
    </method>
    <javadoc>
      <text>* {@inheritDoc}</text>
    </javadoc>
    <method type="double" name="walkInRowOrder" startLine="755" endLine="767">
      <declaration type="int" name="rows" />
      <declaration type="int" name="columns" />
      <scope startLine="759" endLine="765">
        <scope startLine="760" endLine="764">
          <declaration type="double" name="oldValue" />
          <declaration type="double" name="newValue" />
        </scope>
      </scope>
    </method>
    <javadoc>
      <text>* {@inheritDoc}</text>
    </javadoc>
    <method type="double" name="walkInRowOrder" startLine="770" endLine="780">
      <declaration type="int" name="rows" />
      <declaration type="int" name="columns" />
      <scope startLine="774" endLine="778">
        <scope startLine="775" endLine="777" />
      </scope>
    </method>
    <javadoc>
      <text>* {@inheritDoc}</text>
    </javadoc>
    <method type="double" name="walkInRowOrder" startLine="786" endLine="798">
      <scope startLine="790" endLine="796">
        <scope startLine="791" endLine="795">
          <declaration type="double" name="oldValue" />
          <declaration type="double" name="newValue" />
        </scope>
      </scope>
    </method>
    <javadoc>
      <text>* {@inheritDoc}</text>
    </javadoc>
    <method type="double" name="walkInRowOrder" startLine="804" endLine="814">
      <scope startLine="808" endLine="812">
        <scope startLine="809" endLine="811" />
      </scope>
    </method>
    <javadoc>
      <text>* {@inheritDoc}</text>
    </javadoc>
    <method type="double" name="walkInColumnOrder" startLine="817" endLine="829">
      <declaration type="int" name="rows" />
      <declaration type="int" name="columns" />
      <scope startLine="821" endLine="827">
        <scope startLine="822" endLine="826">
          <declaration type="double" name="oldValue" />
          <declaration type="double" name="newValue" />
        </scope>
      </scope>
    </method>
    <javadoc>
      <text>* {@inheritDoc}</text>
    </javadoc>
    <method type="double" name="walkInColumnOrder" startLine="832" endLine="842">
      <declaration type="int" name="rows" />
      <declaration type="int" name="columns" />
      <scope startLine="836" endLine="840">
        <scope startLine="837" endLine="839" />
      </scope>
    </method>
    <javadoc>
      <text>* {@inheritDoc}</text>
    </javadoc>
    <method type="double" name="walkInColumnOrder" startLine="848" endLine="860">
      <scope startLine="852" endLine="858">
        <scope startLine="853" endLine="857">
          <declaration type="double" name="oldValue" />
          <declaration type="double" name="newValue" />
        </scope>
      </scope>
    </method>
    <javadoc>
      <text>* {@inheritDoc}</text>
    </javadoc>
    <method type="double" name="walkInColumnOrder" startLine="866" endLine="876">
      <scope startLine="870" endLine="874">
        <scope startLine="871" endLine="873" />
      </scope>
    </method>
    <javadoc>
      <text>* {@inheritDoc}</text>
    </javadoc>
    <method type="double" name="walkInOptimizedOrder" startLine="879" endLine="881" />
    <javadoc>
      <text>* {@inheritDoc}</text>
    </javadoc>
    <method type="double" name="walkInOptimizedOrder" startLine="884" endLine="886" />
    <javadoc>
      <text>* {@inheritDoc}</text>
    </javadoc>
    <method type="double" name="walkInOptimizedOrder" startLine="893" endLine="895" />
    <javadoc>
      <text>* {@inheritDoc}</text>
    </javadoc>
    <method type="double" name="walkInOptimizedOrder" startLine="902" endLine="904" />
    <javadoc>
      <text>* Get a string representation for this matrix.</text>
      <return>a string representation for this matrix</return>
    </javadoc>
    <method type="String" name="toString" startLine="911" endLine="918">
      <declaration type="StringBuilder" name="res" />
      <declaration type="String" name="fullClassName" />
      <declaration type="String" name="shortClassName" />
    </method>
    <javadoc>
      <text>* Returns true iff <code>object</code> is a
 * <code>RealMatrix</code> instance with the same dimensions as this
 * and all corresponding matrix entries are equal.</text>
      <param>object the object to test equality against.</param>
      <return>true if object equals this</return>
    </javadoc>
    <method type="boolean" name="equals" startLine="929" endLine="950">
      <scope startLine="930" endLine="932" />
      <scope startLine="933" endLine="935" />
      <declaration type="RealMatrix" name="m" />
      <declaration type="int" name="nRows" />
      <declaration type="int" name="nCols" />
      <scope startLine="939" endLine="941" />
      <scope startLine="942" endLine="948">
        <scope startLine="943" endLine="947">
          <scope startLine="944" endLine="946" />
        </scope>
      </scope>
    </method>
    <javadoc>
      <text>* Computes a hashcode for the matrix.</text>
      <return>hashcode for matrix</return>
    </javadoc>
    <method type="int" name="hashCode" startLine="958" endLine="971">
      <declaration type="int" name="ret" />
      <declaration type="int" name="nRows" />
      <declaration type="int" name="nCols" />
      <scope startLine="964" endLine="969">
        <scope startLine="965" endLine="968" />
      </scope>
    </method>
    <method name="createMatrix" type="RealMatrix" startLine="979" endLine="981" />
    <javadoc>
      <text>* {@inheritDoc}</text>
    </javadoc>
    <method name="copy" type="RealMatrix" startLine="983" endLine="984" />
    <javadoc>
      <text>* {@inheritDoc}</text>
    </javadoc>
    <method name="getEntry" type="double" startLine="986" endLine="988" />
    <javadoc>
      <text>* {@inheritDoc}</text>
    </javadoc>
    <method name="setEntry" type="void" startLine="990" endLine="992" />
    <javadoc>
      <text>* {@inheritDoc}</text>
    </javadoc>
    <comment>Empty implementations of these methods are provided in order to allow for
 the use of the @Override tag with Java 1.5.</comment>
  </class>
</source>
