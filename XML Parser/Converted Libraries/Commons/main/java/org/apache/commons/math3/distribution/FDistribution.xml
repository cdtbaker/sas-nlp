<?xml version="1.0" encoding="UTF-8"?>
<source package="org.apache.commons.math3.distribution">
  <import name="org.apache.commons.math3.exception.NotStrictlyPositiveException" />
  <import name="org.apache.commons.math3.exception.util.LocalizedFormats" />
  <import name="org.apache.commons.math3.special.Beta" />
  <import name="org.apache.commons.math3.util.FastMath" />
  <import name="org.apache.commons.math3.random.RandomGenerator" />
  <import name="org.apache.commons.math3.random.Well19937c" />
  <class name="FDistribution" extends="AbstractRealDistribution" startLine="27">
    <javadoc>
      <text>* Implementation of the F-distribution.</text>
      <see><a href="http://en.wikipedia.org/wiki/F-distribution">F-distribution (Wikipedia)</a></see>
      <see><a href="http://mathworld.wolfram.com/F-Distribution.html">F-distribution (MathWorld)</a></see>
      <version>$Id: FDistribution.java 1416643 2012-12-03 19:37:14Z tn $</version>
    </javadoc>
    <javadoc>
      <text>* Default inverse cumulative probability accuracy.</text>
      <since>2.1</since>
    </javadoc>
    <declaration type="double" name="DEFAULT_INVERSE_ABSOLUTE_ACCURACY" />
    <javadoc>
      <text>* Serializable version identifier.</text>
    </javadoc>
    <declaration type="long" name="serialVersionUID" />
    <javadoc>
      <text>* The numerator degrees of freedom.</text>
    </javadoc>
    <declaration type="double" name="numeratorDegreesOfFreedom" />
    <javadoc>
      <text>* The numerator degrees of freedom.</text>
    </javadoc>
    <declaration type="double" name="denominatorDegreesOfFreedom" />
    <javadoc>
      <text>* Inverse cumulative probability accuracy.</text>
    </javadoc>
    <declaration type="double" name="solverAbsoluteAccuracy" />
    <javadoc>
      <text>* Cached numerical variance</text>
    </javadoc>
    <declaration type="double" name="numericalVariance" />
    <javadoc>
      <text>* Whether or not the numerical variance has been calculated</text>
    </javadoc>
    <declaration type="boolean" name="numericalVarianceIsCalculated" />
    <javadoc>
      <text>* Creates an F distribution using the given degrees of freedom.</text>
      <param>numeratorDegreesOfFreedom Numerator degrees of freedom.</param>
      <param>denominatorDegreesOfFreedom Denominator degrees of freedom.</param>
      <throws>NotStrictlyPositiveException if{@code numeratorDegreesOfFreedom <= 0} or{@code denominatorDegreesOfFreedom <= 0}.</throws>
    </javadoc>
    <method type="constructor" name="FDistribution" startLine="64" endLine="67" />
    <javadoc>
      <text>* Creates an F distribution using the given degrees of freedom
 * and inverse cumulative probability accuracy.</text>
      <param>numeratorDegreesOfFreedom Numerator degrees of freedom.</param>
      <param>denominatorDegreesOfFreedom Denominator degrees of freedom.</param>
      <param>inverseCumAccuracy the maximum absolute error in inverse
 * cumulative probability estimates.</param>
      <throws>NotStrictlyPositiveException if{@code numeratorDegreesOfFreedom <= 0} or{@code denominatorDegreesOfFreedom <= 0}.</throws>
      <since>2.1</since>
    </javadoc>
    <method type="constructor" name="FDistribution" startLine="85" endLine="88" />
    <javadoc>
      <text>* Creates an F distribution.</text>
      <param>rng Random number generator.</param>
      <param>numeratorDegreesOfFreedom Numerator degrees of freedom.</param>
      <param>denominatorDegreesOfFreedom Denominator degrees of freedom.</param>
      <param>inverseCumAccuracy the maximum absolute error in inverse
 * cumulative probability estimates.</param>
      <throws>NotStrictlyPositiveException if{@code numeratorDegreesOfFreedom <= 0} or{@code denominatorDegreesOfFreedom <= 0}.</throws>
      <since>3.1</since>
    </javadoc>
    <method type="constructor" name="FDistribution" startLine="107" endLine="121">
      <scope startLine="110" endLine="113" />
      <scope startLine="114" endLine="117" />
    </method>
    <javadoc>
      <text>* {@inheritDoc}</text>
      <since>2.1</since>
    </javadoc>
    <method type="double" name="density" startLine="128" endLine="139">
      <declaration type="double" name="nhalf" />
      <declaration type="double" name="mhalf" />
      <declaration type="double" name="logx" />
      <declaration type="double" name="logn" />
      <declaration type="double" name="logm" />
      <declaration type="double" name="lognxm" />
    </method>
    <javadoc>
      <text>* {@inheritDoc}The implementation of this method is based on
 * <ul>
 * <li>
 * <a href="http://mathworld.wolfram.com/F-Distribution.html">
 * F-Distribution</a>, equation (4).
 * </li>
 * </ul></text>
    </javadoc>
    <method type="double" name="cumulativeProbability" startLine="152" endLine="165">
      <declaration type="double" name="ret" />
      <scope startLine="154" endLine="156" />
      <scope startLine="156" endLine="163">
        <declaration type="double" name="n" />
        <declaration type="double" name="m" />
      </scope>
    </method>
    <javadoc>
      <text>* Access the numerator degrees of freedom.</text>
      <return>the numerator degrees of freedom.</return>
    </javadoc>
    <method type="double" name="getNumeratorDegreesOfFreedom" startLine="172" endLine="174" />
    <javadoc>
      <text>* Access the denominator degrees of freedom.</text>
      <return>the denominator degrees of freedom.</return>
    </javadoc>
    <method type="double" name="getDenominatorDegreesOfFreedom" startLine="181" endLine="183" />
    <javadoc>
      <text>* {@inheritDoc}</text>
    </javadoc>
    <method type="double" name="getSolverAbsoluteAccuracy" startLine="187" endLine="189" />
    <javadoc>
      <text>* {@inheritDoc}For denominator degrees of freedom parameter {@code b}, the mean is
 * <ul>
 * <li>if {@code b > 2} then {@code b / (b - 2)},</li>
 * <li>else undefined ({@code Double.NaN}).
 * </ul></text>
    </javadoc>
    <method type="double" name="getNumericalMean" startLine="200" endLine="208">
      <declaration type="double" name="denominatorDF" />
      <scope startLine="203" endLine="205" />
    </method>
    <javadoc>
      <text>* {@inheritDoc}For numerator degrees of freedom parameter {@code a} and denominator
 * degrees of freedom parameter {@code b}, the variance is
 * <ul>
 * <li>
 * if {@code b > 4} then{@code [2 * b^2 * (a + b - 2)] / [a * (b - 2)^2 * (b - 4)]},
 * </li>
 * <li>else undefined ({@code Double.NaN}).
 * </ul></text>
    </javadoc>
    <method type="double" name="getNumericalVariance" startLine="223" endLine="229">
      <scope startLine="224" endLine="227" />
    </method>
    <javadoc>
      <text>* used by {@link #getNumericalVariance()}</text>
      <return>the variance of this distribution</return>
    </javadoc>
    <method type="double" name="calculateNumericalVariance" startLine="236" endLine="248">
      <declaration type="double" name="denominatorDF" />
      <scope startLine="239" endLine="245">
        <declaration type="double" name="numeratorDF" />
        <declaration type="double" name="denomDFMinusTwo" />
      </scope>
    </method>
    <javadoc>
      <text>* {@inheritDoc}The lower bound of the support is always 0 no matter the parameters.</text>
      <return>lower bound of the support (always 0)</return>
    </javadoc>
    <method type="double" name="getSupportLowerBound" startLine="257" endLine="259" />
    <javadoc>
      <text>* {@inheritDoc}The upper bound of the support is always positive infinity
 * no matter the parameters.</text>
      <return>upper bound of the support (always Double.POSITIVE_INFINITY)</return>
    </javadoc>
    <method type="double" name="getSupportUpperBound" startLine="269" endLine="271" />
    <javadoc>
      <text>* {@inheritDoc}</text>
    </javadoc>
    <method type="boolean" name="isSupportLowerBoundInclusive" startLine="274" endLine="276" />
    <javadoc>
      <text>* {@inheritDoc}</text>
    </javadoc>
    <method type="boolean" name="isSupportUpperBoundInclusive" startLine="279" endLine="281" />
    <javadoc>
      <text>* {@inheritDoc}The support of this distribution is connected.</text>
      <return>{@code true}</return>
    </javadoc>
    <method type="boolean" name="isSupportConnected" startLine="290" endLine="292" />
  </class>
</source>
