<?xml version="1.0" encoding="UTF-8"?>
<source package="org.apache.commons.math3.optimization">
  <import name="java.io.Serializable" />
  <import name="org.apache.commons.math3.util.Pair" />
  <class name="PointValuePair" extends="Pair<double[],Double>" startLine="24">
    <implements name="Serializable" />
    <javadoc>
      <text>* This class holds a point and the value of an objective function at
 * that point.</text>
      <see>PointVectorValuePair</see>
      <see>org.apache.commons.math3.analysis.MultivariateFunction</see>
      <version>$Id: PointValuePair.java 1422230 2012-12-15 12:11:13Z erans $</version>
      <deprecated>As of 3.1 (to be removed in 4.0).</deprecated>
      <since>3.0</since>
    </javadoc>
    <javadoc>
      <text>* Serializable UID.</text>
    </javadoc>
    <declaration type="long" name="serialVersionUID" />
    <javadoc>
      <text>* Builds a point/objective function value pair.</text>
      <param>point Point coordinates. This instance will store
 * a copy of the array, not the array passed as argument.</param>
      <param>value Value of the objective function at the point.</param>
    </javadoc>
    <method type="constructor" name="PointValuePair" startLine="48" endLine="50" />
    <javadoc>
      <text>* Builds a point/objective function value pair.</text>
      <param>point Point coordinates.</param>
      <param>value Value of the objective function at the point.</param>
      <param>copyArray if {@code true}, the input array will be copied,
 * otherwise it will be referenced.</param>
    </javadoc>
    <method type="constructor" name="PointValuePair" startLine="62" endLine="67" />
    <javadoc>
      <text>* Gets the point.</text>
      <return>a copy of the stored point.</return>
    </javadoc>
    <method type="double[]" name="getPoint" startLine="74" endLine="77">
      <declaration type="double[]" name="p" />
    </method>
    <javadoc>
      <text>* Gets a reference to the point.</text>
      <return>a reference to the internal array storing the point.</return>
    </javadoc>
    <method type="double[]" name="getPointRef" startLine="84" endLine="86" />
    <javadoc>
      <text>* Replace the instance with a data transfer object for serialization.</text>
      <return>data transfer object that will be serialized</return>
    </javadoc>
    <method type="Object" name="writeReplace" startLine="92" endLine="94" />
    <class name="DataTransferObject" startLine="96">
      <implements name="Serializable" />
      <javadoc>
        <text>* Internal class used only for serialization.</text>
      </javadoc>
      <javadoc>
        <text>* Serializable UID.</text>
      </javadoc>
      <declaration type="long" name="serialVersionUID" />
      <javadoc>
        <text>* Point coordinates.</text>
        <Serial />
      </javadoc>
      <declaration type="double[]" name="point" />
      <javadoc>
        <text>* Value of the objective function at the point.</text>
        <Serial />
      </javadoc>
      <declaration type="double" name="value" />
      <javadoc>
        <text>* Simple constructor.</text>
        <param>point Point coordinates.</param>
        <param>value Value of the objective function at the point.</param>
      </javadoc>
      <method type="constructor" name="DataTransferObject" startLine="115" endLine="118" />
      <javadoc>
        <text>* Replace the deserialized data transfer object with a {@link PointValuePair}.</text>
        <return>replacement {@link PointValuePair}</return>
      </javadoc>
      <method type="Object" name="readResolve" startLine="123" endLine="125" />
    </class>
  </class>
</source>
