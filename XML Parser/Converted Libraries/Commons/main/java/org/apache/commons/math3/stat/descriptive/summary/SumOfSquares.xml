<?xml version="1.0" encoding="UTF-8"?>
<source package="org.apache.commons.math3.stat.descriptive.summary">
  <import name="java.io.Serializable" />
  <import name="org.apache.commons.math3.exception.MathIllegalArgumentException" />
  <import name="org.apache.commons.math3.exception.NullArgumentException" />
  <import name="org.apache.commons.math3.stat.descriptive.AbstractStorelessUnivariateStatistic" />
  <import name="org.apache.commons.math3.util.MathUtils" />
  <class name="SumOfSquares" extends="AbstractStorelessUnivariateStatistic" startLine="26">
    <implements name="Serializable" />
    <javadoc>
      <text>* Returns the sum of the squares of the available values.
 * <p>
 * If there are no values in the dataset, then 0 is returned.
 * If any of the values are
 * <code>NaN</code>, then <code>NaN</code> is returned.</p>
 * <p>
 * <strong>Note that this implementation is not synchronized.</strong> If
 * multiple threads access an instance of this class concurrently, and at least
 * one of the threads invokes the <code>increment()</code> or
 * <code>clear()</code> method, it must be synchronized externally.</p></text>
      <version>$Id: SumOfSquares.java 1416643 2012-12-03 19:37:14Z tn $</version>
    </javadoc>
    <javadoc>
      <text>* Serializable version identifier</text>
    </javadoc>
    <declaration type="long" name="serialVersionUID" />
    <javadoc />
    <declaration type="long" name="n" />
    <javadoc>
      <text>* The currently running sumSq</text>
    </javadoc>
    <declaration type="double" name="value" />
    <javadoc>
      <text>* Create a SumOfSquares instance</text>
    </javadoc>
    <method type="constructor" name="SumOfSquares" startLine="56" endLine="59" />
    <javadoc>
      <text>* Copy constructor, creates a new {@code SumOfSquares} identical
 * to the {@code original}</text>
      <param>original the {@code SumOfSquares} instance to copy</param>
      <throws>NullArgumentException if original is null</throws>
    </javadoc>
    <method type="constructor" name="SumOfSquares" startLine="68" endLine="70" />
    <javadoc>
      <text>* {@inheritDoc}</text>
    </javadoc>
    <method type="void" name="increment" startLine="76" endLine="79" />
    <javadoc>
      <text>* {@inheritDoc}</text>
    </javadoc>
    <method type="double" name="getResult" startLine="85" endLine="87" />
    <javadoc>
      <text>* {@inheritDoc}</text>
    </javadoc>
    <method type="long" name="getN" startLine="92" endLine="94" />
    <javadoc>
      <text>* {@inheritDoc}</text>
    </javadoc>
    <method type="void" name="clear" startLine="100" endLine="103" />
    <javadoc>
      <text>* Returns the sum of the squares of the entries in the specified portion of
 * the input array, or <code>Double.NaN</code> if the designated subarray
 * is empty.
 * <p>
 * Throws <code>MathIllegalArgumentException</code> if the array is null.</p></text>
      <param>values the input array</param>
      <param>begin index of the first array element to include</param>
      <param>length the number of elements to include</param>
      <return>the sum of the squares of the values or 0 if length = 0</return>
      <throws>MathIllegalArgumentException if the array is null or the array index
 * parameters are not valid</throws>
    </javadoc>
    <method type="double" name="evaluate" startLine="121" endLine="130">
      <declaration type="double" name="sumSq" />
      <scope startLine="123" endLine="128">
        <scope startLine="125" endLine="127" />
      </scope>
    </method>
    <javadoc>
      <text>* {@inheritDoc}</text>
    </javadoc>
    <method type="SumOfSquares" name="copy" startLine="136" endLine="141">
      <declaration type="SumOfSquares" name="result" />
      <comment>no try-catch or advertised exception here because args are valid</comment>
    </method>
    <javadoc>
      <text>* Copies source to dest.
 * <p>Neither source nor dest can be null.</p></text>
      <param>source SumOfSquares to copy</param>
      <param>dest SumOfSquares to copy to</param>
      <throws>NullArgumentException if either source or dest is null</throws>
    </javadoc>
    <method type="void" name="copy" startLine="152" endLine="158" />
  </class>
</source>
