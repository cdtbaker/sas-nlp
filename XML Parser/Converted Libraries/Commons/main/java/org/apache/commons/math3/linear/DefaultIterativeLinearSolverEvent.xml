<?xml version="1.0" encoding="UTF-8"?>
<source package="org.apache.commons.math3.linear">
  <import name="org.apache.commons.math3.exception.MathUnsupportedOperationException" />
  <class name="DefaultIterativeLinearSolverEvent" extends="IterativeLinearSolverEvent" startLine="21">
    <javadoc>
      <text>* A default concrete implementation of the abstract class{@link IterativeLinearSolverEvent}.</text>
      <version>$Id: DefaultIterativeLinearSolverEvent.java 1416643 2012-12-03 19:37:14Z tn $</version>
    </javadoc>
    <javadoc />
    <declaration type="long" name="serialVersionUID" />
    <javadoc>
      <text>* The right-hand side vector.</text>
    </javadoc>
    <declaration type="RealVector" name="b" />
    <javadoc>
      <text>* The current estimate of the residual.</text>
    </javadoc>
    <declaration type="RealVector" name="r" />
    <javadoc>
      <text>* The current estimate of the norm of the residual.</text>
    </javadoc>
    <declaration type="double" name="rnorm" />
    <javadoc>
      <text>* The current estimate of the solution.</text>
    </javadoc>
    <declaration type="RealVector" name="x" />
    <javadoc>
      <text>* Creates a new instance of this class. This implementation does
 * <em>not</em> deep copy the specified vectors {@code x}, {@code b},{@code r}. Therefore the user must make sure that these vectors are
 * either unmodifiable views or deep copies of the same vectors actually
 * used by the {@code source}. Failure to do so may compromise subsequent
 * iterations of the {@code source}. If the residual vector {@code r} is{@code null}, then {@link #getResidual()} throws a{@link MathUnsupportedOperationException}, and{@link #providesResidual()} returns {@code false}.</text>
      <param>source the iterative solver which fired this event</param>
      <param>iterations the number of iterations performed at the time{@code this} event is created</param>
      <param>x the current estimate of the solution</param>
      <param>b the right-hand side vector</param>
      <param>r the current estimate of the residual (can be {@code null})</param>
      <param>rnorm the norm of the current estimate of the residual</param>
    </javadoc>
    <method type="constructor" name="DefaultIterativeLinearSolverEvent" startLine="65" endLine="71" />
    <javadoc>
      <text>* Creates a new instance of this class. This implementation does
 * <em>not</em> deep copy the specified vectors {@code x}, {@code b}.
 * Therefore the user must make sure that these vectors are either
 * unmodifiable views or deep copies of the same vectors actually used by
 * the {@code source}. Failure to do so may compromise subsequent iterations
 * of the {@code source}. Callling {@link #getResidual()} on instances
 * returned by this constructor throws a{@link MathUnsupportedOperationException}, while{@link #providesResidual()} returns {@code false}.</text>
      <param>source the iterative solver which fired this event</param>
      <param>iterations the number of iterations performed at the time{@code this} event is created</param>
      <param>x the current estimate of the solution</param>
      <param>b the right-hand side vector</param>
      <param>rnorm the norm of the current estimate of the residual</param>
    </javadoc>
    <method type="constructor" name="DefaultIterativeLinearSolverEvent" startLine="92" endLine="98" />
    <javadoc>
      <text>* {@inheritDoc}</text>
    </javadoc>
    <method type="double" name="getNormOfResidual" startLine="102" endLine="104" />
    <javadoc>
      <text>* {@inheritDoc}This implementation throws an {@link MathUnsupportedOperationException}if no residual vector {@code r} was provided at construction time.</text>
    </javadoc>
    <method type="RealVector" name="getResidual" startLine="113" endLine="118">
      <scope startLine="114" endLine="116" />
    </method>
    <javadoc>
      <text>* {@inheritDoc}</text>
    </javadoc>
    <method type="RealVector" name="getRightHandSideVector" startLine="122" endLine="124" />
    <javadoc>
      <text>* {@inheritDoc}</text>
    </javadoc>
    <method type="RealVector" name="getSolution" startLine="128" endLine="130" />
    <javadoc>
      <text>* {@inheritDoc}This implementation returns {@code true} if a non-{@code null} value was
 * specified for the residual vector {@code r} at construction time.</text>
      <return>{@code true} if {@code r != null}</return>
    </javadoc>
    <method type="boolean" name="providesResidual" startLine="141" endLine="143" />
  </class>
</source>
