<?xml version="1.0" encoding="UTF-8"?>
<source package="org.apache.commons.math3.filter">
  <import name="org.apache.commons.math3.linear.RealMatrix" />
  <import name="org.apache.commons.math3.linear.RealVector" />
  <interface name="ProcessModel" startLine="22">
    <javadoc>
      <text>* Defines the process dynamics model for the use with a {@link KalmanFilter}.</text>
      <since>3.0</since>
      <version>$Id: ProcessModel.java 1416643 2012-12-03 19:37:14Z tn $</version>
    </javadoc>
    <method name="getStateTransitionMatrix" type="RealMatrix" startLine="29" endLine="34" />
    <javadoc>
      <text>* Returns the state transition matrix.</text>
      <return>the state transition matrix</return>
    </javadoc>
    <method name="getControlMatrix" type="RealMatrix" startLine="36" endLine="41" />
    <javadoc>
      <text>* Returns the control matrix.</text>
      <return>the control matrix</return>
    </javadoc>
    <method name="getProcessNoise" type="RealMatrix" startLine="43" endLine="53" />
    <javadoc>
      <text>* Returns the process noise matrix. This method is called by the {@link KalmanFilter} every
 * prediction step, so implementations of this interface may return a modified process noise
 * depending on the current iteration step.</text>
      <return>the process noise matrix</return>
      <see>KalmanFilter#predict()</see>
      <see>KalmanFilter#predict(double[])</see>
      <see>KalmanFilter#predict(RealVector)</see>
    </javadoc>
    <method name="getInitialStateEstimate" type="RealVector" startLine="55" endLine="63" />
    <javadoc>
      <text>* Returns the initial state estimation vector.
 * <p>
 * <b>Note:</b> if the return value is zero, the Kalman filter will initialize the
 * state estimation with a zero vector.</text>
      <return>the initial state estimation vector</return>
    </javadoc>
    <method name="getInitialErrorCovariance" type="RealMatrix" startLine="65" endLine="73" />
    <javadoc>
      <text>* Returns the initial error covariance matrix.
 * <p>
 * <b>Note:</b> if the return value is zero, the Kalman filter will initialize the
 * error covariance with the process noise matrix.</text>
      <return>the initial error covariance matrix</return>
    </javadoc>
  </interface>
</source>
