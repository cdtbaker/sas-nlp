<?xml version="1.0" encoding="UTF-8"?>
<source package="org.apache.commons.math3.exception.util">
  <import name="java.util.List" />
  <import name="java.util.ArrayList" />
  <import name="java.util.Set" />
  <import name="java.util.Map" />
  <import name="java.io.IOException" />
  <import name="java.io.Serializable" />
  <import name="java.io.ObjectOutputStream" />
  <import name="java.io.ObjectInputStream" />
  <import name="java.util.HashMap" />
  <import name="java.text.MessageFormat" />
  <import name="java.util.Locale" />
  <class name="ExceptionContext" startLine="31">
    <implements name="Serializable" />
    <javadoc>
      <text>* Class that contains the actual implementation of the functionality mandated
 * by the {@link ExceptionContext} interface.
 * All Commons Math exceptions delegate the interface's methods to this class.</text>
      <since>3.0</since>
      <version>$Id: ExceptionContext.java 1364388 2012-07-22 18:16:43Z tn $</version>
    </javadoc>
    <javadoc>
      <text>* Serializable version Id.</text>
    </javadoc>
    <declaration type="long" name="serialVersionUID" />
    <javadoc>
      <text>* The throwable to which this context refers to.</text>
    </javadoc>
    <declaration type="Throwable" name="throwable" />
    <javadoc>
      <text>* Various informations that enrich the informative message.</text>
    </javadoc>
    <declaration type="List<Localizable>" name="msgPatterns" />
    <javadoc>
      <text>* Various informations that enrich the informative message.
 * The arguments will replace the corresponding place-holders in{@link #msgPatterns}.</text>
    </javadoc>
    <declaration type="List<Object[]>" name="msgArguments" />
    <javadoc>
      <text>* Arbitrary context information.</text>
    </javadoc>
    <declaration type="Map<String,Object>" name="context" />
    <javadoc>
      <text>* Simple constructor.</text>
      <param>throwable the exception this context refers too</param>
    </javadoc>
    <method type="constructor" name="ExceptionContext" startLine="64" endLine="69" />
    <javadoc>
      <text>* Get a reference to the exception to which the context relates.</text>
      <return>a reference to the exception to which the context relates</return>
    </javadoc>
    <method type="Throwable" name="getThrowable" startLine="74" endLine="76" />
    <javadoc>
      <text>* Adds a message.</text>
      <param>pattern Message pattern.</param>
      <param>arguments Values for replacing the placeholders in the message
 * pattern.</param>
    </javadoc>
    <method type="void" name="addMessage" startLine="86" endLine="89" />
    <javadoc>
      <text>* Sets the context (key, value) pair.
 * Keys are assumed to be unique within an instance. If the same key is
 * assigned a new value, the previous one will be lost.</text>
      <param>key Context key (not null).</param>
      <param>value Context value.</param>
    </javadoc>
    <method type="void" name="setValue" startLine="99" endLine="101" />
    <javadoc>
      <text>* Gets the value associated to the given context key.</text>
      <param>key Context key.</param>
      <return>the context value or {@code null} if the key does not exist.</return>
    </javadoc>
    <method type="Object" name="getValue" startLine="109" endLine="111" />
    <javadoc>
      <text>* Gets all the keys stored in the exception</text>
      <return>the set of keys.</return>
    </javadoc>
    <method type="Set<String>" name="getKeys" startLine="118" endLine="120" />
    <javadoc>
      <text>* Gets the default message.</text>
      <return>the message.</return>
    </javadoc>
    <method type="String" name="getMessage" startLine="127" endLine="129" />
    <javadoc>
      <text>* Gets the message in the default locale.</text>
      <return>the localized message.</return>
    </javadoc>
    <method type="String" name="getLocalizedMessage" startLine="136" endLine="138" />
    <javadoc>
      <text>* Gets the message in a specified locale.</text>
      <param>locale Locale in which the message should be translated.</param>
      <return>the localized message.</return>
    </javadoc>
    <method type="String" name="getMessage" startLine="146" endLine="148" />
    <javadoc>
      <text>* Gets the message in a specified locale.</text>
      <param>locale Locale in which the message should be translated.</param>
      <param>separator Separator inserted between the message parts.</param>
      <return>the localized message.</return>
    </javadoc>
    <method type="String" name="getMessage" startLine="158" endLine="160" />
    <javadoc>
      <text>* Builds a message string.</text>
      <param>locale Locale in which the message should be translated.</param>
      <param>separator Message separator.</param>
      <return>a localized message string.</return>
    </javadoc>
    <method type="String" name="buildMessage" startLine="170" endLine="187">
      <declaration type="StringBuilder" name="sb" />
      <declaration type="int" name="count" />
      <declaration type="int" name="len" />
      <scope startLine="174" endLine="184">
        <declaration type="Localizable" name="pat" />
        <declaration type="Object[]" name="args" />
        <declaration type="MessageFormat" name="fmt" />
        <scope startLine="180" endLine="183" />
        <comment>Add a separator if there are other messages.</comment>
      </scope>
    </method>
    <javadoc>
      <text>* Serialize this object to the given stream.</text>
      <param>out Stream.</param>
      <throws>IOException This should never happen.</throws>
    </javadoc>
    <method type="void" name="writeObject" startLine="196" endLine="200" />
    <javadoc>
      <text>* Deserialize this object from the given stream.</text>
      <param>in Stream.</param>
      <throws>IOException This should never happen.</throws>
      <throws>ClassNotFoundException This should never happen.</throws>
    </javadoc>
    <method type="void" name="readObject" startLine="210" endLine="214" />
    <javadoc>
      <text>* Serialize  {@link #msgPatterns} and {@link #msgArguments}.</text>
      <param>out Stream.</param>
      <throws>IOException This should never happen.</throws>
    </javadoc>
    <method type="void" name="serializeMessages" startLine="223" endLine="246">
      <declaration type="int" name="len" />
      <scope startLine="228" endLine="245">
        <declaration type="Localizable" name="pat" />
        <declaration type="Object[]" name="args" />
        <declaration type="int" name="aLen" />
        <scope startLine="236" endLine="244">
          <scope startLine="237" endLine="240" />
          <scope startLine="240" endLine="243" />
        </scope>
        <comment>Step 3.</comment>
        <comment>Step 4.</comment>
        <comment>Step 5a.</comment>
        <comment>Step 5b.</comment>
      </scope>
      <comment>Step 1.</comment>
      <comment>Step 2.</comment>
    </method>
    <javadoc>
      <text>* Deserialize {@link #msgPatterns} and {@link #msgArguments}.</text>
      <param>in Stream.</param>
      <throws>IOException This should never happen.</throws>
      <throws>ClassNotFoundException This should never happen.</throws>
    </javadoc>
    <method type="void" name="deSerializeMessages" startLine="257" endLine="276">
      <declaration type="int" name="len" />
      <scope startLine="263" endLine="275">
        <declaration type="Localizable" name="pat" />
        <declaration type="int" name="aLen" />
        <declaration type="Object[]" name="args" />
        <scope startLine="270" endLine="273" />
        <comment>Step 3.</comment>
        <comment>Step 4.</comment>
        <comment>Step 5.</comment>
      </scope>
      <comment>Step 1.</comment>
      <comment>Step 2.</comment>
    </method>
    <javadoc>
      <text>* Serialize {@link #context}.</text>
      <param>out Stream.</param>
      <throws>IOException This should never happen.</throws>
    </javadoc>
    <method type="void" name="serializeContext" startLine="285" endLine="301">
      <declaration type="int" name="len" />
      <scope startLine="289" endLine="300">
        <declaration type="Object" name="value" />
        <scope startLine="293" endLine="296" />
        <scope startLine="296" endLine="299" />
        <comment>Step 2.</comment>
        <comment>Step 3a.</comment>
        <comment>Step 3b.</comment>
      </scope>
      <comment>Step 1.</comment>
    </method>
    <javadoc>
      <text>* Deserialize {@link #context}.</text>
      <param>in Stream.</param>
      <throws>IOException This should never happen.</throws>
      <throws>ClassNotFoundException This should never happen.</throws>
    </javadoc>
    <method type="void" name="deSerializeContext" startLine="312" endLine="323">
      <declaration type="int" name="len" />
      <scope startLine="316" endLine="322">
        <declaration type="String" name="key" />
        <declaration type="Object" name="value" />
        <comment>Step 2.</comment>
        <comment>Step 3.</comment>
      </scope>
      <comment>Step 1.</comment>
    </method>
    <javadoc>
      <text>* Replaces a non-serializable object with an error message string.</text>
      <param>obj Object that does not implement the {@code Serializable}interface.</param>
      <return>a string that mentions which class could not be serialized.</return>
    </javadoc>
    <method type="String" name="nonSerializableReplacement" startLine="332" endLine="334" />
  </class>
</source>
