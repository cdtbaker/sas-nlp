<?xml version="1.0" encoding="UTF-8"?>
<source package="org.apache.commons.math3.analysis.interpolation">
  <import name="java.io.Serializable" />
  <import name="org.apache.commons.math3.analysis.polynomials.PolynomialFunctionLagrangeForm" />
  <import name="org.apache.commons.math3.exception.DimensionMismatchException" />
  <import name="org.apache.commons.math3.exception.NumberIsTooSmallException" />
  <import name="org.apache.commons.math3.exception.NonMonotonicSequenceException" />
  <class name="NevilleInterpolator" startLine="26">
    <implements name="UnivariateInterpolator" />
    <implements name="Serializable" />
    <javadoc>
      <text>* Implements the <a href="http://mathworld.wolfram.com/NevillesAlgorithm.html">
 * Neville's Algorithm</a> for interpolation of real univariate functions. For
 * reference, see <b>Introduction to Numerical Analysis</b>, ISBN 038795452X,
 * chapter 2.
 * <p>
 * The actual code of Neville's algorithm is in PolynomialFunctionLagrangeForm,
 * this class provides an easy-to-use interface to it.</p></text>
      <version>$Id: NevilleInterpolator.java 1379904 2012-09-01 23:54:52Z erans $</version>
      <since>1.2</since>
    </javadoc>
    <javadoc>
      <text>* serializable version identifier</text>
    </javadoc>
    <declaration type="long" name="serialVersionUID" />
    <javadoc>
      <text>* Computes an interpolating function for the data set.</text>
      <param>x Interpolating points.</param>
      <param>y Interpolating values.</param>
      <return>a function which interpolates the data set</return>
      <throws>DimensionMismatchException if the array lengths are different.</throws>
      <throws>NumberIsTooSmallException if the number of points is less than 2.</throws>
      <throws>NonMonotonicSequenceException if two abscissae have the same
 * value.</throws>
    </javadoc>
    <method type="PolynomialFunctionLagrangeForm" name="interpolate" startLine="58" endLine="60" />
  </class>
</source>
