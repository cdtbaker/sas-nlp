<?xml version="1.0" encoding="UTF-8"?>
<source package="org.apache.commons.math3.genetics">
  <class name="Chromosome" startLine="19">
    <implements name="Comparable<Chromosome>" />
    <implements name="Fitness" />
    <javadoc>
      <text>* Individual in a population. Chromosomes are compared based on their fitness.
 * <p>
 * The chromosomes are IMMUTABLE, and so their fitness is also immutable and
 * therefore it can be cached.</text>
      <since>2.0</since>
      <version>$Id: Chromosome.java 1416643 2012-12-03 19:37:14Z tn $</version>
    </javadoc>
    <javadoc>
      <text>* Value assigned when no fitness has been computed yet.</text>
    </javadoc>
    <declaration type="double" name="NO_FITNESS" />
    <javadoc>
      <text>* Cached value of the fitness of this chromosome.</text>
    </javadoc>
    <declaration type="double" name="fitness" />
    <javadoc>
      <text>* Access the fitness of this chromosome. The bigger the fitness, the better the chromosome.
 * <p>
 * Computation of fitness is usually very time-consuming task, therefore the fitness is cached.</text>
      <return>the fitness</return>
    </javadoc>
    <method type="double" name="getFitness" startLine="42" endLine="48">
      <scope startLine="43" endLine="46">
        <comment>no cache - compute the fitness</comment>
      </scope>
    </method>
    <javadoc>
      <text>* Compares two chromosomes based on their fitness. The bigger the fitness, the better the chromosome.</text>
      <param>another another chromosome to compare</param>
      <return><ul>
 * <li>-1 if <code>another</code> is better than <code>this</code></li>
 * <li>1 if <code>another</code> is worse than <code>this</code></li>
 * <li>0 if the two chromosomes have the same fitness</li>
 * </ul></return>
    </javadoc>
    <method type="int" name="compareTo" startLine="61" endLine="63" />
    <javadoc>
      <text>* Returns <code>true</code> iff <code>another</code> has the same representation and therefore the same fitness. By
 * default, it returns false -- override it in your implementation if you need it.</text>
      <param>another chromosome to compare</param>
      <return>true if <code>another</code> is equivalent to this chromosome</return>
    </javadoc>
    <method type="boolean" name="isSame" startLine="72" endLine="74" />
    <javadoc>
      <text>* Searches the <code>population</code> for another chromosome with the same representation. If such chromosome is
 * found, it is returned, if no such chromosome exists, returns <code>null</code>.</text>
      <param>population Population to search</param>
      <return>Chromosome with the same representation, or <code>null</code> if no such chromosome exists.</return>
    </javadoc>
    <method type="Chromosome" name="findSameChromosome" startLine="83" endLine="90">
      <scope startLine="84" endLine="88">
        <scope startLine="85" endLine="87" />
      </scope>
    </method>
    <javadoc>
      <text>* Searches the population for a chromosome representing the same solution, and if it finds one,
 * updates the fitness to its value.</text>
      <param>population Population to search</param>
    </javadoc>
    <method type="void" name="searchForFitnessUpdate" startLine="98" endLine="103">
      <declaration type="Chromosome" name="sameChromosome" />
      <scope startLine="100" endLine="102" />
    </method>
  </class>
</source>
