<?xml version="1.0" encoding="UTF-8"?>
<source package="org.apache.commons.math3.analysis.integration.gauss">
  <import name="java.math.BigDecimal" />
  <import name="org.apache.commons.math3.exception.DimensionMismatchException" />
  <import name="org.apache.commons.math3.exception.NotStrictlyPositiveException" />
  <import name="org.apache.commons.math3.util.Pair" />
  <class name="GaussIntegratorFactory" startLine="25">
    <javadoc>
      <text>* Class that provides different ways to compute the nodes and weights to be
 * used by the {@link GaussIntegrator Gaussian integration rule}.</text>
      <since>3.1</since>
      <version>$Id: GaussIntegratorFactory.java 1455194 2013-03-11 15:45:54Z luc $</version>
    </javadoc>
    <javadoc>
      <text>* Generator of Gauss-Legendre integrators.</text>
    </javadoc>
    <declaration type="BaseRuleFactory<Double>" name="legendre" />
    <javadoc>
      <text>* Generator of Gauss-Legendre integrators.</text>
    </javadoc>
    <declaration type="BaseRuleFactory<BigDecimal>" name="legendreHighPrecision" />
    <javadoc>
      <text>* Creates an integrator of the given order, and whose call to the{@link GaussIntegrator#integrate(org.apache.commons.math3.analysis.UnivariateFunction)integrate} method will perform an integration on the natural interval{@code [-1 , 1]}.</text>
      <param>numberOfPoints Order of the integration rule.</param>
      <return>a Gauss-Legendre integrator.</return>
    </javadoc>
    <method type="GaussIntegrator" name="legendre" startLine="47" endLine="49" />
    <javadoc>
      <text>* Creates an integrator of the given order, and whose call to the{@link GaussIntegrator#integrate(org.apache.commons.math3.analysis.UnivariateFunction)integrate} method will perform an integration on the given interval.</text>
      <param>numberOfPoints Order of the integration rule.</param>
      <param>lowerBound Lower bound of the integration interval.</param>
      <param>upperBound Upper bound of the integration interval.</param>
      <return>a Gauss-Legendre integrator.</return>
      <throws>NotStrictlyPositiveException if number of points is not positive</throws>
    </javadoc>
    <method type="GaussIntegrator" name="legendre" startLine="65" endLine="68" />
    <javadoc>
      <text>* Creates an integrator of the given order, and whose call to the{@link GaussIntegrator#integrate(org.apache.commons.math3.analysis.UnivariateFunction)integrate} method will perform an integration on the natural interval{@code [-1 , 1]}.</text>
      <param>numberOfPoints Order of the integration rule.</param>
      <return>a Gauss-Legendre integrator.</return>
      <throws>NotStrictlyPositiveException if number of points is not positive</throws>
    </javadoc>
    <method type="GaussIntegrator" name="legendreHighPrecision" startLine="81" endLine="83" />
    <javadoc>
      <text>* Creates an integrator of the given order, and whose call to the{@link GaussIntegrator#integrate(org.apache.commons.math3.analysis.UnivariateFunction)integrate} method will perform an integration on the given interval.</text>
      <param>numberOfPoints Order of the integration rule.</param>
      <param>lowerBound Lower bound of the integration interval.</param>
      <param>upperBound Upper bound of the integration interval.</param>
      <return>a Gauss-Legendre integrator.</return>
      <throws>NotStrictlyPositiveException if number of points is not positive</throws>
    </javadoc>
    <method type="GaussIntegrator" name="legendreHighPrecision" startLine="99" endLine="102" />
    <javadoc>
      <param>factory Integration rule factory.</param>
      <param>numberOfPoints Order of the integration rule.</param>
      <return>the integration nodes and weights.</return>
      <throws>NotStrictlyPositiveException if number of points is not positive</throws>
      <throws>DimensionMismatchException if the elements of the rule pair do not
 * have the same length.</throws>
    </javadoc>
    <method type="Pair<double[],double[]>" name="getRule" startLine="114" endLine="116" />
    <javadoc>
      <text>* Performs a change of variable so that the integration can be performed
 * on an arbitrary interval {@code [a, b]}.
 * It is assumed that the natural interval is {@code [-1, 1]}.</text>
      <param>rule Original points and weights.</param>
      <param>a Lower bound of the integration interval.</param>
      <param>b Lower bound of the integration interval.</param>
      <return>the points and weights adapted to the new interval.</return>
    </javadoc>
    <method type="Pair<double[],double[]>" name="transform" startLine="130" endLine="144">
      <declaration type="double[]" name="points" />
      <declaration type="double[]" name="weights" />
      <declaration type="double" name="scale" />
      <declaration type="double" name="shift" />
      <scope startLine="138" endLine="141" />
      <comment>Scaling</comment>
    </method>
  </class>
</source>
