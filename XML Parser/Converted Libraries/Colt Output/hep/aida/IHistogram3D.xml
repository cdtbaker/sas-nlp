<?xml version="1.0" encoding="UTF-8"?>
<class name="IHistogram3D">
  <javadoc>
    <text>A Java interface corresponding to the AIDA 3D Histogram.
 * &lt;p&gt; 
 * &lt;b&gt;Note&lt;/b&gt; All methods that accept a bin number as an argument will
 * also accept the constants OVERFLOW or UNDERFLOW as the argument, and 
 * as a result give the contents of the resulting OVERFLOW or UNDERFLOW
 * bin.</text>
    <see>&lt;a href="http://wwwinfo.cern.ch/asd/lhc++/AIDA/"&gt;AIDA&lt;/a&gt;</see>
    <author>Pavel Binko, Dino Ferrero Merlino, Wolfgang Hoschek, Tony Johnson, Andreas Pfeiffer, and others.</author>
    <version>1.0, 23/03/2000</version>
  </javadoc>
  <method name="binEntries" type="int" />
  <javadoc>
    <text>The number of entries (ie the number of times fill was called for this bin).</text>
    <param>indexX the x bin number (0...Nx-1) or OVERFLOW or UNDERFLOW.</param>
    <param>indexY the y bin number (0...Ny-1) or OVERFLOW or UNDERFLOW.</param>
    <param>indexZ the z bin number (0...Nz-1) or OVERFLOW or UNDERFLOW.</param>
  </javadoc>
  <method name="binError" type="double" />
  <javadoc>
    <text>The error on this bin.</text>
    <param>indexX the x bin number (0...Nx-1) or OVERFLOW or UNDERFLOW.</param>
    <param>indexY the y bin number (0...Ny-1) or OVERFLOW or UNDERFLOW.</param>
    <param>indexZ the z bin number (0...Nz-1) or OVERFLOW or UNDERFLOW.</param>
  </javadoc>
  <method name="binHeight" type="double" />
  <javadoc>
    <text>Total height of the corresponding bin (ie the sum of the weights in this bin).</text>
    <param>indexX the x bin number (0...Nx-1) or OVERFLOW or UNDERFLOW.</param>
    <param>indexY the y bin number (0...Ny-1) or OVERFLOW or UNDERFLOW.</param>
    <param>indexZ the z bin number (0...Nz-1) or OVERFLOW or UNDERFLOW.</param>
  </javadoc>
  <method name="fill" type="void" />
  <javadoc>
    <text>Fill the histogram with weight 1; equivalent to &lt;tt&gt;fill(x,y,z,1)&lt;/tt&gt;..</text>
  </javadoc>
  <method name="fill" type="void" />
  <javadoc>
    <text>Fill the histogram with specified weight.</text>
  </javadoc>
  <method name="meanX" type="double" />
  <javadoc>
    <text>Returns the mean of the histogram, as calculated on filling-time projected on the X axis.</text>
  </javadoc>
  <method name="meanY" type="double" />
  <javadoc>
    <text>Returns the mean of the histogram, as calculated on filling-time projected on the Y axis.</text>
  </javadoc>
  <method name="meanZ" type="double" />
  <javadoc>
    <text>Returns the mean of the histogram, as calculated on filling-time projected on the Z axis.</text>
  </javadoc>
  <method name="minMaxBins" type="int[]" />
  <javadoc>
    <text>Indexes of the in-range bins containing the smallest and largest binHeight(), respectively.</text>
    <return>&lt;tt&gt;{minBinX,minBinY,minBinZ, maxBinX,maxBinY,maxBinZ}&lt;/tt&gt;.</return>
  </javadoc>
  <method name="projectionXY" type="IHistogram2D" />
  <javadoc>
    <text>Create a projection parallel to the XY plane.
 * Equivalent to &lt;tt&gt;sliceXY(UNDERFLOW,OVERFLOW)&lt;/tt&gt;.</text>
  </javadoc>
  <method name="projectionXZ" type="IHistogram2D" />
  <javadoc>
    <text>Create a projection parallel to the XZ plane.
 * Equivalent to &lt;tt&gt;sliceXZ(UNDERFLOW,OVERFLOW)&lt;/tt&gt;.</text>
  </javadoc>
  <method name="projectionYZ" type="IHistogram2D" />
  <javadoc>
    <text>Create a projection parallel to the YZ plane.
 * Equivalent to &lt;tt&gt;sliceYZ(UNDERFLOW,OVERFLOW)&lt;/tt&gt;.</text>
  </javadoc>
  <method name="rmsX" type="double" />
  <javadoc>
    <text>Returns the rms of the histogram as calculated on filling-time projected on the X axis.</text>
  </javadoc>
  <method name="rmsY" type="double" />
  <javadoc>
    <text>Returns the rms of the histogram as calculated on filling-time projected on the Y axis.</text>
  </javadoc>
  <method name="rmsZ" type="double" />
  <javadoc>
    <text>Returns the rms of the histogram as calculated on filling-time projected on the Z axis.</text>
  </javadoc>
  <method name="sliceXY" type="IHistogram2D" />
  <javadoc>
    <text>Create a slice parallel to the XY plane at bin indexZ and one bin wide.
 * Equivalent to &lt;tt&gt;sliceXY(indexZ,indexZ)&lt;/tt&gt;.</text>
  </javadoc>
  <method name="sliceXY" type="IHistogram2D" />
  <javadoc>
    <text>Create a slice parallel to the XY plane, between "indexZ1" and "indexZ2" (inclusive).
 * The returned IHistogram2D represents an instantaneous snapshot of the
 * histogram at the time the slice was created.</text>
  </javadoc>
  <method name="sliceXZ" type="IHistogram2D" />
  <javadoc>
    <text>Create a slice parallel to the XZ plane at bin indexY and one bin wide.
 * Equivalent to &lt;tt&gt;sliceXZ(indexY,indexY)&lt;/tt&gt;.</text>
  </javadoc>
  <method name="sliceXZ" type="IHistogram2D" />
  <javadoc>
    <text>Create a slice parallel to the XZ plane, between "indexY1" and "indexY2" (inclusive).
 * The returned IHistogram2D represents an instantaneous snapshot of the
 * histogram at the time the slice was created.</text>
  </javadoc>
  <method name="sliceYZ" type="IHistogram2D" />
  <javadoc>
    <text>Create a slice parallel to the YZ plane at bin indexX and one bin wide.
 * Equivalent to &lt;tt&gt;sliceYZ(indexX,indexX)&lt;/tt&gt;.</text>
  </javadoc>
  <method name="sliceYZ" type="IHistogram2D" />
  <javadoc>
    <text>Create a slice parallel to the YZ plane, between "indexX1" and "indexX2" (inclusive).
 * The returned IHistogram2D represents an instantaneous snapshot of the
 * histogram at the time the slice was created.</text>
  </javadoc>
  <method name="xAxis" type="IAxis" />
  <javadoc>
    <text>Return the X axis.</text>
  </javadoc>
  <method name="yAxis" type="IAxis" />
  <javadoc>
    <text>Return the Y axis.</text>
  </javadoc>
  <method name="zAxis" type="IAxis" />
  <javadoc>
    <text>Return the Z axis.</text>
  </javadoc>
</class>
