<?xml version="1.0" encoding="UTF-8"?>
<class name="HashFunctions">
  <javadoc>
    <text>Provides various hash functions.</text>
    <author>wolfgang.hoschek@cern.ch</author>
    <version>1.0, 09/24/99</version>
  </javadoc>
  <javadoc>
    <text>Makes this class non instantiable, but still let's others inherit from it.</text>
  </javadoc>
  <method type="constructor" name="HashFunctions" />
  <javadoc>
    <text>Returns a hashcode for the specified value.</text>
    <return>a hash code value for the specified value.</return>
  </javadoc>
  <method type="int" name="hash" />
  <javadoc>
    <text>Returns a hashcode for the specified value.</text>
    <return>a hash code value for the specified value.</return>
  </javadoc>
  <method type="int" name="hash">
    <declaration type="long" name="bits" />
    <comment>return (int) Double.doubleToLongBits(value*663608941.737);</comment>
    <comment>this avoids excessive hashCollisions in the case values are of the form (1.0, 2.0, 3.0, ...)</comment>
  </method>
  <javadoc>
    <text>Returns a hashcode for the specified value.</text>
    <return>a hash code value for the specified value.</return>
  </javadoc>
  <method type="int" name="hash">
    <comment>this avoids excessive hashCollisions in the case values are of the form (1.0, 2.0, 3.0, ...)</comment>
  </method>
  <javadoc>
    <text>Returns a hashcode for the specified value.</text>
    <return>a hash code value for the specified value.</return>
  </javadoc>
  <method type="int" name="hash">
    <comment>return value * 0x278DDE6D;  see cern.jet.random.engine.DRand</comment>
    <comment>value &amp;= 0x7FFFFFFF;  make it &gt;=0
int hashCode = 0;
do hashCode = 31hashCode + value%10;
while ((value = 10) &gt; 0);

return 28629151hashCode;  spread even further; h31^5</comment>
  </method>
  <javadoc>
    <text>Returns a hashcode for the specified value.</text>
    <return>a hash code value for the specified value.</return>
  </javadoc>
  <method type="int" name="hash">
    <comment>value &amp;= 0x7FFFFFFFFFFFFFFFL;  make it &gt;=0 (0x7FFFFFFFFFFFFFFFL==Long.MAX_VALUE)
int hashCode = 0;
do hashCode = 31hashCode + (int) (value%10);
while ((value = 10) &gt; 0);

return 28629151hashCode;  spread even further; h31^5</comment>
  </method>
  <javadoc>
    <text>Returns a hashcode for the specified object.</text>
    <return>a hash code value for the specified object.</return>
  </javadoc>
  <method type="int" name="hash" />
  <javadoc>
    <text>Returns a hashcode for the specified value.</text>
    <return>a hash code value for the specified value.</return>
  </javadoc>
  <method type="int" name="hash" />
  <javadoc>
    <text>Returns a hashcode for the specified value.</text>
    <return>a hash code value for the specified value.</return>
  </javadoc>
  <method type="int" name="hash" />
  <comment>Copyright ï¿½ 1999 CERN - European Organization for Nuclear Research.
Permission to use, copy, modify, distribute and sell this software and its documentation for any purpose
is hereby granted without fee, provided that the above copyright notice appear in all copies and
that both that copyright notice and this permission notice appear in supporting documentation.
CERN makes no representations about the suitability of this software for any purpose.
It is provided "as is" without expressed or implied warranty.</comment>
</class>
