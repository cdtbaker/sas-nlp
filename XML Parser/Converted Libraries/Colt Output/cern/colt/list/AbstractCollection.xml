<?xml version="1.0" encoding="UTF-8"?>
<class name="AbstractCollection">
  <javadoc>
    <text>Abstract base class for resizable collections holding objects or primitive data types such as &lt;code&gt;int&lt;/code&gt;, &lt;code&gt;float&lt;/code&gt;, etc.
 * First see the &lt;a href="package-summary.html"&gt;package summary&lt;/a&gt; and javadoc &lt;a href="package-tree.html"&gt;tree view&lt;/a&gt; to get the broad picture.
 * &lt;p&gt;
 * &lt;b&gt;Note that this implementation is not synchronized.&lt;/b&gt;</text>
    <author>wolfgang.hoschek@cern.ch</author>
    <version>1.0, 09/24/99</version>
    <see>java.util.ArrayList</see>
    <see>java.util.Vector</see>
    <see>java.util.Arrays</see>
  </javadoc>
  <javadoc>
    <text>Makes this class non instantiable, but still let's others inherit from it.</text>
  </javadoc>
  <method type="constructor" name="AbstractCollection" />
  <method name="clear" type="void" />
  <javadoc>
    <text>Removes all elements from the receiver.  The receiver will
 * be empty after this call returns.</text>
  </javadoc>
  <javadoc>
    <text>Tests if the receiver has no elements.</text>
    <return>&lt;code&gt;true&lt;/code&gt; if the receiver has no elements;
 * &lt;code&gt;false&lt;/code&gt; otherwise.</return>
  </javadoc>
  <method type="boolean" name="isEmpty" />
  <method name="size" type="int" />
  <javadoc>
    <text>Returns the number of elements contained in the receiver.</text>
    <returns>the number of elements contained in the receiver.</returns>
  </javadoc>
  <method name="toList" type="java.util.ArrayList" />
  <javadoc>
    <text>Returns a &lt;code&gt;java.util.ArrayList&lt;/code&gt; containing all the elements in the receiver.</text>
  </javadoc>
  <javadoc>
    <text>Returns a string representation of the receiver, containing
 * the String representation of each element.</text>
  </javadoc>
  <method type="String" name="toString" />
  <comment>Copyright ï¿½ 1999 CERN - European Organization for Nuclear Research.
Permission to use, copy, modify, distribute and sell this software and its documentation for any purpose
is hereby granted without fee, provided that the above copyright notice appear in all copies and
that both that copyright notice and this permission notice appear in supporting documentation.
CERN makes no representations about the suitability of this software for any purpose.
It is provided "as is" without expressed or implied warranty.</comment>
  <comment>public abstract class AbstractCollection extends Object implements Cloneable, java.io.Serializable {</comment>
</class>
