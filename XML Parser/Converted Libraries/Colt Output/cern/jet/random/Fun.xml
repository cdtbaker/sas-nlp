<?xml version="1.0" encoding="UTF-8"?>
<class name="Fun">
  <javadoc>
    <text>Contains various mathematical helper methods.
 * &lt;b&gt;Implementation:&lt;/b&gt; High performance implementation.
 * &lt;dt&gt;This is a port of &lt;tt&gt;gen_fun.cpp&lt;/tt&gt; from the &lt;A HREF="http://www.cis.tu-graz.ac.at/stat/stadl/random.html"&gt;C-RAND / WIN-RAND&lt;/A&gt; library.</text>
    <author>wolfgang.hoschek@cern.ch</author>
    <version>1.0, 09/24/99</version>
  </javadoc>
  <javadoc>
    <text>Makes this class non instantiable, but still let's others inherit from it.</text>
  </javadoc>
  <method type="constructor" name="Fun" />
  <method type="double" name="_fkt_value">
    <declaration type="double" name="y_value" />
  </method>
  <method type="double" name="bessel2_fkt">
    <declaration type="double" name="pi" />
    <declaration type="double" name="sum" />
    <declaration type="double" name="epsilon" />
    <declaration type="double" name="y" />
    <declaration type="double" name="period" />
    <declaration type="double" name="my" />
    <declaration type="int" name="i" />
    <declaration type="double[]" name="b0" />
    <declaration type="double[]" name="b05" />
    <declaration type="double[]" name="b1" />
    <declaration type="double[]" name="b2" />
    <declaration type="double[]" name="b3" />
    <declaration type="double[]" name="b5" />
    <declaration type="double[]" name="b8" />
    <scope />
    <scope />
    <scope />
    <scope />
    <scope />
    <scope />
    <scope />
    <scope>
      <scope>
        <scope />
      </scope>
    </scope>
    <scope>
      <scope />
      <scope />
    </scope>
    <scope>
      <scope />
      <scope />
    </scope>
    <scope>
      <scope>
        <scope />
      </scope>
      <scope />
      <scope />
    </scope>
    <comment>while (!NULL) {</comment>
    <comment>otherwise numerical integration of the function defined above</comment>
    <comment>while (!NULL) {</comment>
    <comment>while (!NULL) {</comment>
  </method>
  <javadoc>
    <text>Modified Bessel Functions of First Kind - Order 0.</text>
  </javadoc>
  <method type="double" name="bessi0">
    <declaration type="double" name="ax" />
    <declaration type="double" name="y" />
    <scope />
    <scope />
  </method>
  <javadoc>
    <text>Modified Bessel Functions of First Kind - Order 1.</text>
  </javadoc>
  <method type="double" name="bessi1">
    <declaration type="double" name="ax" />
    <declaration type="double" name="y" />
    <scope />
    <scope />
  </method>
  <javadoc>
    <text>Returns &lt;tt&gt;n!&lt;/tt&gt;.</text>
  </javadoc>
  <method type="long" name="factorial">
    <comment>long i,prod;

prod = 1;
if (n != 0) {
for (i = 2; i &lt;= n; i++) prod = i;
}
return prod;</comment>
  </method>
  <method type="double" name="fkt2_value">
    <declaration type="double" name="y_value" />
  </method>
  <method type="double" name="cosh" />
  <javadoc>
    <text>Returns the gamma function &lt;tt&gt;gamma(x)&lt;/tt&gt;.</text>
  </javadoc>
  <method type="double" name="gamma">
    <comment>if (x &gt; Math.log(Double.MAX_VALUE)) return Double.MAX_VALUE;</comment>
  </method>
  <javadoc>
    <text>Returns a quick approximation of &lt;tt&gt;log(gamma(x))&lt;/tt&gt;.</text>
  </javadoc>
  <method type="double" name="logGamma">
    <declaration type="double" name="c0" />
    <declaration type="double" name="g" />
    <comment>if (x &lt;= 0.0  || x &gt; 1.3e19  ) return -999;</comment>
  </method>
  <comment>Copyright ï¿½ 1999 CERN - European Organization for Nuclear Research.
Permission to use, copy, modify, distribute and sell this software and its documentation for any purpose
is hereby granted without fee, provided that the above copyright notice appear in all copies and
that both that copyright notice and this permission notice appear in supporting documentation.
CERN makes no representations about the suitability of this software for any purpose.
It is provided "as is" without expressed or implied warranty.</comment>
</class>
