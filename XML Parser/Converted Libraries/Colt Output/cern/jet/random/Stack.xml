<?xml version="1.0" encoding="UTF-8"?>
<class name="Stack">
  <javadoc>
    <text>Not yet commented.</text>
  </javadoc>
  <declaration type="int" name="N" />
  <declaration type="int[]" name="v" />
  <declaration type="int" name="i" />
  <javadoc>
    <text>Constructs a new stack with the given capacity.</text>
  </javadoc>
  <method type="constructor" name="Stack">
    <comment>indicates stack is empty</comment>
    <comment>static stack_t 
new_stack(int N) {
stack_t s;
s = (stack_t )malloc(sizeof(stack_t));
s-&gt;N = N;
s-&gt;i = -1;                   indicates stack is empty
s-&gt;v = (int )malloc(sizeof(int)N);
return s;
}
static void
push_stack(stack_t s, int v)
{
s-&gt;i += 1;
if ((s-&gt;i) &gt;= (s-&gt;N)) {
fprintf(stderr,"Cannot push stack!\n");
exit(0);                 fatal!!
}
(s-&gt;v)[s-&gt;i] = v;
}
static int pop_stack(stack_t s)
{
if ((s-&gt;i) &lt; 0) {
fprintf(stderr,"Cannot pop stack!\n");
exit(0);
}
s-&gt;i -= 1;
return ((s-&gt;v)[s-&gt;i + 1]);
}
static inline int size_stack(const stack_t s)
{
return s-&gt;i + 1;
}
static void free_stack(stack_t s)
{
free((char )(s-&gt;v));
free((char )s);
}</comment>
  </method>
  <javadoc>
    <text>Returns the topmost element.</text>
  </javadoc>
  <method type="int" name="pop" />
  <javadoc>
    <text>Places the given value on top of the stack.</text>
  </javadoc>
  <method type="void" name="push" />
  <javadoc>
    <text>Returns the number of elements contained.</text>
  </javadoc>
  <method type="int" name="size" />
  <comment>Copyright ï¿½ 1999 CERN - European Organization for Nuclear Research.
Permission to use, copy, modify, distribute and sell this software and its documentation for any purpose
is hereby granted without fee, provided that the above copyright notice appear in all copies and
that both that copyright notice and this permission notice appear in supporting documentation.
CERN makes no representations about the suitability of this software for any purpose.
It is provided "as is" without expressed or implied warranty.</comment>
  <comment>int N;                       max number of elts on stack</comment>
  <comment>int[]v;                      array of values on the stack</comment>
  <comment>int i;                       index of top of stack</comment>
</class>
