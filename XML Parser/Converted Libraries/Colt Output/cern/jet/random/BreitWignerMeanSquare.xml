<?xml version="1.0" encoding="UTF-8"?>
<class name="BreitWignerMeanSquare">
  <javadoc>
    <text>Mean-square BreitWigner distribution; See the &lt;A HREF="http://www.cern.ch/RD11/rkb/AN16pp/node23.html#SECTION000230000000000000000"&gt; math definition&lt;/A&gt;.
 * &lt;p&gt;
 * Instance methods operate on a user supplied uniform random number generator; they are unsynchronized.
 * &lt;dt&gt;
 * Static methods operate on a default uniform random number generator; they are synchronized. 
 * &lt;p&gt;
 * &lt;b&gt;Implementation:&lt;/b&gt; This is a port of &lt;A HREF="http://wwwinfo.cern.ch/asd/lhc++/clhep/manual/RefGuide/Random/RandBreitWigner.html"&gt;RandBreitWigner&lt;/A&gt; used in &lt;A HREF="http://wwwinfo.cern.ch/asd/lhc++/clhep"&gt;CLHEP 1.4.0&lt;/A&gt; (C++).</text>
    <author>wolfgang.hoschek@cern.ch</author>
    <version>1.0, 09/24/99</version>
  </javadoc>
  <declaration type="Uniform" name="uniform" />
  <declaration type="BreitWigner" name="shared" />
  <javadoc>
    <text>Constructs a mean-squared BreitWigner distribution.</text>
    <param>cut &lt;/tt&gt;cut==Double.NEGATIVE_INFINITY&lt;/tt&gt; indicates "don't cut".</param>
  </javadoc>
  <method type="constructor" name="BreitWignerMeanSquare" />
  <javadoc>
    <text>Returns a deep copy of the receiver; the copy will produce identical sequences.
 * After this call has returned, the copy and the receiver have equal but separate state.</text>
    <return>a copy of the receiver.</return>
  </javadoc>
  <method type="Object" name="clone">
    <declaration type="BreitWignerMeanSquare" name="copy" />
  </method>
  <javadoc>
    <text>Returns a mean-squared random number from the distribution; bypasses the internal state.</text>
    <param>cut &lt;/tt&gt;cut==Double.NEGATIVE_INFINITY&lt;/tt&gt; indicates "don't cut".</param>
  </javadoc>
  <method type="double" name="nextDouble">
    <scope>
      <declaration type="double" name="val" />
      <declaration type="double" name="rval" />
      <declaration type="double" name="displ" />
    </scope>
    <scope>
      <declaration type="double" name="tmp" />
      <declaration type="double" name="lower" />
      <declaration type="double" name="upper" />
      <declaration type="double" name="rval" />
      <declaration type="double" name="displ" />
    </scope>
    <comment>don't cut</comment>
  </method>
  <javadoc>
    <text>Returns a random number from the distribution.</text>
    <param>cut &lt;/tt&gt;cut==Double.NEGATIVE_INFINITY&lt;/tt&gt; indicates "don't cut".</param>
  </javadoc>
  <method type="double" name="staticNextDouble">
    <scope />
  </method>
  <javadoc>
    <text>Sets the uniform random number generated shared by all &lt;b&gt;static&lt;/b&gt; methods.</text>
    <param>randomGenerator the new uniform random number generator to be shared.</param>
  </javadoc>
  <method type="void" name="xstaticSetRandomGenerator">
    <scope />
  </method>
  <comment>Copyright ï¿½ 1999 CERN - European Organization for Nuclear Research.
Permission to use, copy, modify, distribute and sell this software and its documentation for any purpose
is hereby granted without fee, provided that the above copyright notice appear in all copies and
that both that copyright notice and this permission notice appear in supporting documentation.
CERN makes no representations about the suitability of this software for any purpose.
It is provided "as is" without expressed or implied warranty.</comment>
  <comment>helper</comment>
  <comment>The uniform random number generated shared by all &lt;b&gt;static&lt;/b&gt; methods.</comment>
</class>
