<?xml version="1.0" encoding="UTF-8"?>
<class name="Hyperbolic">
  <javadoc>
    <text>Hyperbolic distribution. 
 * &lt;p&gt;
 * Valid parameter ranges: &lt;tt&gt;alpha &amp;gt; 0&lt;/tt&gt; and &lt;tt&gt;beta &amp;gt; 0&lt;/tt&gt;.            
 * &lt;p&gt;
 * Instance methods operate on a user supplied uniform random number generator; they are unsynchronized.
 * &lt;dt&gt;
 * Static methods operate on a default uniform random number generator; they are synchronized.
 * &lt;p&gt;
 * &lt;b&gt;Implementation:&lt;/b&gt;
 * &lt;dt&gt;Method: Non-Universal Rejection.
 * High performance implementation.
 * &lt;dt&gt;This is a port of &lt;tt&gt;hyplc.c&lt;/tt&gt; from the &lt;A HREF="http://www.cis.tu-graz.ac.at/stat/stadl/random.html"&gt;C-RAND / WIN-RAND&lt;/A&gt; library.
 * C-RAND's implementation, in turn, is based upon
 * &lt;p&gt;
 * L. Devroye (1986): Non-Uniform Random Variate Generation, Springer Verlag, New York.</text>
    <author>wolfgang.hoschek@cern.ch</author>
    <version>1.0, 09/24/99</version>
  </javadoc>
  <declaration type="double" name="alpha" />
  <declaration type="double" name="beta" />
  <declaration type="double" name="a_setup" />
  <declaration type="double" name="x" />
  <declaration type="double" name="hr" />
  <declaration type="Hyperbolic" name="shared" />
  <javadoc>
    <text>Constructs a Beta distribution.</text>
  </javadoc>
  <method type="constructor" name="Hyperbolic" />
  <javadoc>
    <text>Returns a random number from the distribution.</text>
  </javadoc>
  <method type="double" name="nextDouble" />
  <javadoc>
    <text>Returns a hyperbolic distributed random number; bypasses the internal state.</text>
  </javadoc>
  <method type="double" name="nextDouble">
    <declaration type="double" name="a" />
    <declaration type="double" name="b" />
    <scope>
      <declaration type="double" name="mpa" />
      <declaration type="double" name="amb" />
      <declaration type="double" name="a_" />
      <declaration type="double" name="help_1" />
    </scope>
    <scope>
      <scope />
      <scope>
        <scope />
        <scope />
      </scope>
    </scope>
    <javadoc>
      <text>*
 * Hyperbolic Distribution - Non-Universal Rejection       
 * *
 * *
 * FUNCTION   : - hyplc.c samples a random number from the        
 * hyperbolic distribution with shape parameter a  
 * and b valid for a&gt;0 and |b|&lt;a using the         
 * non-universal rejection method for log-concave  
 * densities.                                      
 * REFERENCE :  - L. Devroye (1986): Non-Uniform Random Variate   
 * Generation, Springer Verlag, New York.          
 * SUBPROGRAM : - drand(seed) ... (0,1)-Uniform generator with    
 * unsigned long integer *seed.                    
 * *</text>
    </javadoc>
    <comment>SET-UP</comment>
    <comment>a^2 - b^2</comment>
    <comment>-log(f(mode))</comment>
    <comment>mode</comment>
    <comment>fr^-1(exp(-sqrt(a^2 - b^2) - 1.0))</comment>
    <comment>fl^-1(exp(-sqrt(a^2 - b^2) - 1.0))</comment>
    <comment>lower border</comment>
    <comment>upper border</comment>
    <comment>GENERATOR</comment>
    <comment>Rejection with a uniform majorizing function</comment>
    <comment>over the body of the distribution</comment>
    <comment>Rejection with an exponential envelope on the</comment>
    <comment>right side of the mode</comment>
    <comment>Rejection with an exponential envelope on the</comment>
    <comment>left side of the mode</comment>
  </method>
  <javadoc>
    <text>Sets the parameters.</text>
  </javadoc>
  <method type="void" name="setState" />
  <javadoc>
    <text>Returns a random number from the distribution.</text>
  </javadoc>
  <method type="double" name="staticNextDouble">
    <scope />
  </method>
  <javadoc>
    <text>Returns a String representation of the receiver.</text>
  </javadoc>
  <method type="String" name="toString" />
  <javadoc>
    <text>Sets the uniform random number generated shared by all &lt;b&gt;static&lt;/b&gt; methods.</text>
    <param>randomGenerator the new uniform random number generator to be shared.</param>
  </javadoc>
  <method type="void" name="xstaticSetRandomGenerator">
    <scope />
  </method>
  <comment>Copyright ï¿½ 1999 CERN - European Organization for Nuclear Research.
Permission to use, copy, modify, distribute and sell this software and its documentation for any purpose
is hereby granted without fee, provided that the above copyright notice appear in all copies and
that both that copyright notice and this permission notice appear in supporting documentation.
CERN makes no representations about the suitability of this software for any purpose.
It is provided "as is" without expressed or implied warranty.</comment>
  <comment>cached values shared for generateHyperbolic(...)</comment>
  <comment>The uniform random number generated shared by all &lt;b&gt;static&lt;/b&gt; methods.</comment>
</class>
