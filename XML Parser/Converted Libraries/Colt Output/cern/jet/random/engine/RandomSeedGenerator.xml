<?xml version="1.0" encoding="UTF-8"?>
<class name="RandomSeedGenerator">
  <javadoc>
    <text>Deterministic seed generator for pseudo-random number generators.
 * The sole purpose of this class is to decorrelate seeds and uniform random number generators.
 * (If a generator would be used to generate seeds for itself, the result could be correlations.)
 * &lt;p&gt;
 * This class has entirelly deterministic behaviour:
 * Constructing two instances with the same parameters at any two distinct points in time will produce identical seed sequences.
 * However, it does not (at all) generate uniformly distributed numbers. Do not use it as a uniformly distributed random number generator! 
 * &lt;p&gt;
 * Each generated sequence of seeds has a period of 10&lt;sup&gt;9&lt;/sup&gt; numbers.
 * Internally uses {@link RandomSeedTable}.</text>
    <author>wolfgang.hoschek@cern.ch</author>
    <version>1.0, 09/24/99</version>
  </javadoc>
  <declaration type="int" name="row" />
  <declaration type="int" name="column" />
  <javadoc>
    <text>Constructs and returns a new seed generator.</text>
  </javadoc>
  <method type="constructor" name="RandomSeedGenerator" />
  <javadoc>
    <text>Constructs and returns a new seed generator; you normally won't need to use this method.
 * &lt;p&gt;
 * The position &lt;tt&gt;[row,column]&lt;/tt&gt; indicates the iteration starting point within a (virtual) seed matrix.
 * The seed matrix is a n*m matrix with &lt;tt&gt;1 + Integer.MAX_VALUE&lt;/tt&gt; (virtual) rows and &lt;tt&gt;RandomSeedTable.COLUMNS&lt;/tt&gt; columns.
 * Successive calls to method &lt;tt&gt;nextSeed()&lt;/tt&gt; will cycle over the given column, in ascending order:
 * &lt;tt&gt;nextSeed()&lt;/tt&gt; returns the seed &lt;tt&gt;s[row,column], s[row+1,column], ... s[Integer.MAX_VALUE,column], s[0,column], s[1,column], ...&lt;/tt&gt;</text>
    <param>row should be in &lt;tt&gt;[0,Integer.MAX_VALUE]&lt;/tt&gt;.</param>
    <param>column should be in &lt;tt&gt;[0,RandomSeedTable.COLUMNS - 1]&lt;/tt&gt;.</param>
  </javadoc>
  <method type="constructor" name="RandomSeedGenerator" />
  <javadoc>
    <text>Prints the generated seeds for the given input parameters.</text>
  </javadoc>
  <method type="void" name="main">
    <declaration type="int" name="row" />
    <declaration type="int" name="column" />
    <declaration type="int" name="size" />
  </method>
  <javadoc>
    <text>Returns the next seed.</text>
  </javadoc>
  <method type="int" name="nextSeed" />
  <javadoc>
    <text>Prints the next &lt;tt&gt;size&lt;/tt&gt; generated seeds.</text>
  </javadoc>
  <method type="void" name="print">
    <declaration type="RandomSeedGenerator" name="copy" />
    <scope>
      <declaration type="int" name="seed" />
    </scope>
  </method>
  <comment>Copyright ï¿½ 1999 CERN - European Organization for Nuclear Research.
Permission to use, copy, modify, distribute and sell this software and its documentation for any purpose
is hereby granted without fee, provided that the above copyright notice appear in all copies and
that both that copyright notice and this permission notice appear in supporting documentation.
CERN makes no representations about the suitability of this software for any purpose.
It is provided "as is" without expressed or implied warranty.</comment>
</class>
