<?xml version="1.0" encoding="UTF-8"?>
<class name="Polynomial">
  <javadoc>
    <text>Polynomial functions.</text>
  </javadoc>
  <javadoc>
    <text>Makes this class non instantiable, but still let's others inherit from it.</text>
  </javadoc>
  <method type="constructor" name="Polynomial" />
  <javadoc>
    <text>Evaluates the given polynomial of degree &lt;tt&gt;N&lt;/tt&gt; at &lt;tt&gt;x&lt;/tt&gt;, assuming coefficient of N is 1.0.
 * Otherwise same as &lt;tt&gt;polevl()&lt;/tt&gt;.
 * &lt;pre&gt;
 * 2          N
 * y  =  C  + C x + C x  +...+ C x
 * 0    1     2          N
 * where C  = 1 and hence is omitted from the array.
 * N
 * Coefficients are stored in reverse order:
 * coef[0] = C  , ..., coef[N-1] = C  .
 * N-1                   0
 * Calling arguments are otherwise the same as polevl().
 * &lt;/pre&gt;
 * In the interest of speed, there are no checks for out of bounds arithmetic.</text>
    <param>x argument to the polynomial.</param>
    <param>coef the coefficients of the polynomial.</param>
    <param>N the degree of the polynomial.</param>
  </javadoc>
  <method type="double" name="p1evl">
    <declaration type="double" name="ans" />
    <scope />
  </method>
  <javadoc>
    <text>Evaluates the given polynomial of degree &lt;tt&gt;N&lt;/tt&gt; at &lt;tt&gt;x&lt;/tt&gt;.
 * &lt;pre&gt;
 * 2          N
 * y  =  C  + C x + C x  +...+ C x
 * 0    1     2          N
 * Coefficients are stored in reverse order:
 * coef[0] = C  , ..., coef[N] = C  .
 * N                   0
 * &lt;/pre&gt;
 * In the interest of speed, there are no checks for out of bounds arithmetic.</text>
    <param>x argument to the polynomial.</param>
    <param>coef the coefficients of the polynomial.</param>
    <param>N the degree of the polynomial.</param>
  </javadoc>
  <method type="double" name="polevl">
    <declaration type="double" name="ans" />
  </method>
  <comment>Copyright ï¿½ 1999 CERN - European Organization for Nuclear Research.
Permission to use, copy, modify, distribute and sell this software and its documentation for any purpose
is hereby granted without fee, provided that the above copyright notice appear in all copies and
that both that copyright notice and this permission notice appear in supporting documentation.
CERN makes no representations about the suitability of this software for any purpose.
It is provided "as is" without expressed or implied warranty.</comment>
</class>
