<?xml version="1.0" encoding="UTF-8"?>
<class name="Bessel">
  <javadoc>
    <text>Bessel and Airy functions.</text>
  </javadoc>
  <javadoc>
    <text>Chebyshev coefficients for exp(-x) I0(x)
 * in the interval [0,8].
 * lim(x-&gt;0){ exp(-x) I0(x) } = 1.</text>
  </javadoc>
  <declaration type="double[]" name="A_i0" />
  <javadoc>
    <text>Chebyshev coefficients for exp(-x) sqrt(x) I0(x)
 * in the inverted interval [8,infinity].
 * lim(x-&gt;inf){ exp(-x) sqrt(x) I0(x) } = 1/sqrt(2pi).</text>
  </javadoc>
  <declaration type="double[]" name="B_i0" />
  <javadoc>
    <text>Chebyshev coefficients for exp(-x) I1(x) / x
 * in the interval [0,8].
 * lim(x-&gt;0){ exp(-x) I1(x) / x } = 1/2.</text>
  </javadoc>
  <declaration type="double[]" name="A_i1" />
  <declaration type="double[]" name="B_i1" />
  <javadoc>
    <text>COEFFICIENTS FOR METHODS k0, k0e</text>
  </javadoc>
  <declaration type="double[]" name="A_k0" />
  <declaration type="double[]" name="B_k0" />
  <javadoc>
    <text>COEFFICIENTS FOR METHODS k1, k1e</text>
  </javadoc>
  <declaration type="double[]" name="A_k1" />
  <declaration type="double[]" name="B_k1" />
  <javadoc>
    <text>Makes this class non instantiable, but still let's others inherit from it.</text>
  </javadoc>
  <method type="constructor" name="Bessel" />
  <javadoc>
    <text>Returns the modified Bessel function of order 0 of the
 * argument.
 * &lt;p&gt;
 * The function is defined as &lt;tt&gt;i0(x) = j0( ix )&lt;/tt&gt;.
 * &lt;p&gt;
 * The range is partitioned into the two intervals [0,8] and
 * (8, infinity).  Chebyshev polynomial expansions are employed
 * in each interval.</text>
    <param>x the value to compute the bessel function of.</param>
  </javadoc>
  <method type="double" name="i0">
    <declaration type="double" name="y" />
    <scope />
  </method>
  <javadoc>
    <text>Returns the exponentially scaled modified Bessel function
 * of order 0 of the argument.
 * &lt;p&gt;
 * The function is defined as &lt;tt&gt;i0e(x) = exp(-|x|) j0( ix )&lt;/tt&gt;.</text>
    <param>x the value to compute the bessel function of.</param>
  </javadoc>
  <method type="double" name="i0e">
    <declaration type="double" name="y" />
    <scope />
  </method>
  <javadoc>
    <text>Returns the modified Bessel function of order 1 of the
 * argument.
 * &lt;p&gt;
 * The function is defined as &lt;tt&gt;i1(x) = -i j1( ix )&lt;/tt&gt;.
 * &lt;p&gt;
 * The range is partitioned into the two intervals [0,8] and
 * (8, infinity).  Chebyshev polynomial expansions are employed
 * in each interval.</text>
    <param>x the value to compute the bessel function of.</param>
  </javadoc>
  <method type="double" name="i1">
    <declaration type="double" name="y" />
    <scope />
    <scope />
  </method>
  <javadoc>
    <text>Returns the exponentially scaled modified Bessel function
 * of order 1 of the argument.
 * &lt;p&gt;
 * The function is defined as &lt;tt&gt;i1(x) = -i exp(-|x|) j1( ix )&lt;/tt&gt;.</text>
    <param>x the value to compute the bessel function of.</param>
  </javadoc>
  <method type="double" name="i1e">
    <declaration type="double" name="y" />
    <scope />
    <scope />
  </method>
  <javadoc>
    <text>Returns the Bessel function of the first kind of order 0 of the argument.</text>
    <param>x the value to compute the bessel function of.</param>
  </javadoc>
  <method type="double" name="j0">
    <declaration type="double" name="ax" />
    <scope>
      <declaration type="double" name="y" />
      <declaration type="double" name="ans1" />
      <declaration type="double" name="ans2" />
    </scope>
    <scope>
      <declaration type="double" name="z" />
      <declaration type="double" name="y" />
      <declaration type="double" name="xx" />
      <declaration type="double" name="ans1" />
      <declaration type="double" name="ans2" />
    </scope>
  </method>
  <javadoc>
    <text>Returns the Bessel function of the first kind of order 1 of the argument.</text>
    <param>x the value to compute the bessel function of.</param>
  </javadoc>
  <method type="double" name="j1">
    <declaration type="double" name="ax" />
    <declaration type="double" name="y" />
    <declaration type="double" name="ans1" />
    <scope />
    <scope>
      <declaration type="double" name="z" />
      <declaration type="double" name="xx" />
      <declaration type="double" name="ans" />
    </scope>
  </method>
  <javadoc>
    <text>Returns the Bessel function of the first kind of order &lt;tt&gt;n&lt;/tt&gt; of the argument.</text>
    <param>n the order of the Bessel function.</param>
    <param>x the value to compute the bessel function of.</param>
  </javadoc>
  <method type="double" name="jn">
    <declaration type="int" name="j" />
    <declaration type="double" name="ax" />
    <declaration type="boolean" name="jsum" />
    <declaration type="double" name="ACC" />
    <declaration type="double" name="BIGNO" />
    <declaration type="double" name="BIGNI" />
    <scope>
      <scope />
    </scope>
    <scope>
      <scope>
        <scope />
      </scope>
    </scope>
  </method>
  <javadoc>
    <text>Returns the modified Bessel function of the third kind
 * of order 0 of the argument.
 * &lt;p&gt;
 * The range is partitioned into the two intervals [0,8] and
 * (8, infinity).  Chebyshev polynomial expansions are employed
 * in each interval.</text>
    <param>x the value to compute the bessel function of.</param>
  </javadoc>
  <method type="double" name="k0">
    <declaration type="double" name="y" />
    <scope />
  </method>
  <javadoc>
    <text>Returns the exponentially scaled modified Bessel function
 * of the third kind of order 0 of the argument.</text>
    <param>x the value to compute the bessel function of.</param>
  </javadoc>
  <method type="double" name="k0e">
    <declaration type="double" name="y" />
    <scope />
  </method>
  <javadoc>
    <text>Returns the modified Bessel function of the third kind
 * of order 1 of the argument.
 * &lt;p&gt;
 * The range is partitioned into the two intervals [0,2] and
 * (2, infinity).  Chebyshev polynomial expansions are employed
 * in each interval.</text>
    <param>x the value to compute the bessel function of.</param>
  </javadoc>
  <method type="double" name="k1">
    <declaration type="double" name="y" />
    <scope />
  </method>
  <javadoc>
    <text>Returns the exponentially scaled modified Bessel function
 * of the third kind of order 1 of the argument.
 * &lt;p&gt;
 * &lt;tt&gt;k1e(x) = exp(x) * k1(x)&lt;/tt&gt;.</text>
    <param>x the value to compute the bessel function of.</param>
  </javadoc>
  <method type="double" name="k1e">
    <declaration type="double" name="y" />
    <scope />
  </method>
  <javadoc>
    <text>Returns the modified Bessel function of the third kind
 * of order &lt;tt&gt;nn&lt;/tt&gt; of the argument.
 * &lt;p&gt;
 * The range is partitioned into the two intervals [0,9.55] and
 * (9.55, infinity).  An ascending power series is used in the
 * low range, and an asymptotic expansion in the high range.</text>
    <param>nn the order of the Bessel function.</param>
    <param>x the value to compute the bessel function of.</param>
  </javadoc>
  <method type="double" name="kn">
    <declaration type="double" name="EUL" />
    <declaration type="double" name="MAXNUM" />
    <declaration type="int" name="MAXFAC" />
    <declaration type="double" name="k" />
    <declaration type="double" name="ans" />
    <declaration type="int" name="i" />
    <scope>
      <scope>
        <scope />
        <scope />
        <scope>
          <scope />
        </scope>
      </scope>
      <scope />
      <scope />
      <scope />
    </scope>
    <scope>
      <scope />
    </scope>
    <comment>Algorithm for Kn.
n-1
-n   -  (n-k-1)!    2   k
K (x)  =  0.5 (x2)     &gt;  -------- (-x 4)
n                      -     k!
k=0

inf.                                   2   k
n         n   -                                   (x 4)
+ (-1)  0.5(x2)    &gt;  {p(k+1) + p(n+k+1) - 2log(x2)} ---------
-                                  k! (n+k)!
k=0

where  p(m) is the psi function: p(1) = -EUL and

m-1
-
p(m)  =  -EUL +  &gt;  1k
-
k=1

For large x,
2        2     2
u-1     (u-1 )(u-3 )
K (z)  =  sqrt(pi2z) exp(-z) { 1 + ------- + ------------ + ...}
v                                        1            2
1! (8z)     2! (8z)
asymptotically, where

2
u = 4 v .</comment>
    <comment>compute factorial of n and psi(n)</comment>
    <comment>Asymptotic expansion for Kn(x)</comment>
    <comment>Converges to 1.4e-17 for x &gt; 18.4</comment>
  </method>
  <javadoc>
    <text>Returns the Bessel function of the second kind of order 0 of the argument.</text>
    <param>x the value to compute the bessel function of.</param>
  </javadoc>
  <method type="double" name="y0">
    <scope>
      <declaration type="double" name="y" />
      <declaration type="double" name="ans1" />
      <declaration type="double" name="ans2" />
    </scope>
    <scope>
      <declaration type="double" name="z" />
      <declaration type="double" name="y" />
      <declaration type="double" name="xx" />
      <declaration type="double" name="ans1" />
      <declaration type="double" name="ans2" />
    </scope>
  </method>
  <javadoc>
    <text>Returns the Bessel function of the second kind of order 1 of the argument.</text>
    <param>x the value to compute the bessel function of.</param>
  </javadoc>
  <method type="double" name="y1">
    <scope>
      <declaration type="double" name="y" />
      <declaration type="double" name="ans1" />
      <declaration type="double" name="ans2" />
    </scope>
    <scope>
      <declaration type="double" name="z" />
      <declaration type="double" name="y" />
      <declaration type="double" name="xx" />
      <declaration type="double" name="ans1" />
      <declaration type="double" name="ans2" />
    </scope>
  </method>
  <javadoc>
    <text>Returns the Bessel function of the second kind of order &lt;tt&gt;n&lt;/tt&gt; of the argument.</text>
    <param>n the order of the Bessel function.</param>
    <param>x the value to compute the bessel function of.</param>
  </javadoc>
  <method type="double" name="yn">
    <declaration type="double" name="by" />
    <scope />
  </method>
  <comment>Copyright � 1999 CERN - European Organization for Nuclear Research.
Permission to use, copy, modify, distribute and sell this software and its documentation for any purpose
is hereby granted without fee, provided that the above copyright notice appear in all copies and
that both that copyright notice and this permission notice appear in supporting documentation.
CERN makes no representations about the suitability of this software for any purpose.
It is provided "as is" without expressed or implied warranty.</comment>
  <javadoc>
    <text>COEFFICIENTS FOR METHODS i0, i0e</text>
  </javadoc>
  <javadoc>
    <text>COEFFICIENTS FOR METHODS i1, i1e</text>
  </javadoc>
  <comment>Chebyshev coefficients for exp(-x) sqrt(x) I1(x)
 in the inverted interval [8,infinity].

 lim(x-&gt;inf){ exp(-x) sqrt(x) I1(x) } = 1sqrt(2pi).</comment>
  <comment>Chebyshev coefficients for K0(x) + log(x2) I0(x)
 in the interval [0,2].  The odd order coefficients are all
 zero; only the even order coefficients are listed.

 lim(x-&gt;0){ K0(x) + log(x2) I0(x) } = -EUL.</comment>
  <comment>Chebyshev coefficients for exp(x) sqrt(x) K0(x)
 in the inverted interval [2,infinity].

 lim(x-&gt;inf){ exp(x) sqrt(x) K0(x) } = sqrt(pi2).</comment>
  <comment>Chebyshev coefficients for x(K1(x) - log(x2) I1(x))
 in the interval [0,2].

 lim(x-&gt;0){ x(K1(x) - log(x2) I1(x)) } = 1.</comment>
  <comment>Chebyshev coefficients for exp(x) sqrt(x) K1(x)
 in the interval [2,infinity].

 lim(x-&gt;inf){ exp(x) sqrt(x) K1(x) } = sqrt(pi2).</comment>
</class>
