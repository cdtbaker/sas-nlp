<?xml version="1.0" encoding="UTF-8"?>
<class name="LinearSolverLuKJI">
  <javadoc>
    <text>To avoid cpu cache issues the order in which the arrays are traversed have been changed.
 * There seems to be no performance benit relative to {@link LinearSolverLu} in this approach
 * and b and x can't be the same instance, which means it has slightly less functionality.</text>
    <author>Peter Abeles</author>
  </javadoc>
  <declaration type="double[]" name="dataLU" />
  <declaration type="int[]" name="pivot" />
  <method type="constructor" name="LinearSolverLuKJI" />
  <method type="boolean" name="setA">
    <declaration type="boolean" name="ret" />
  </method>
  <javadoc>
    <text>An other implementation of solve() that processes the matrices in a different order.
 * It seems to have the same runtime performance as {@link #solve} and is more complicated.
 * It is being kept around to avoid future replication of work.</text>
    <param>b A matrix that is n by m.  Not modified.</param>
    <param>x An n by m matrix where the solution is writen to.  Modified.</param>
  </javadoc>
  <method type="void" name="solve">
    <scope />
    <scope />
    <scope />
    <declaration type="int" name="nx" />
    <declaration type="double[]" name="dataX" />
    <scope>
      <scope>
        <scope />
      </scope>
    </scope>
    <scope>
      <scope />
      <scope>
        <scope />
      </scope>
    </scope>
    <comment>Copy right hand side with pivoting</comment>
    <comment>Solve L*Y = B(piv,:)</comment>
    <comment>Solve U*X = Y;</comment>
  </method>
  <comment>Copyright (c) 2009-2013, Peter Abeles. All Rights Reserved.

 This file is part of Efficient Java Matrix Library (EJML).

 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at

   http:www.apache.orglicensesLICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.</comment>
</class>
