<?xml version="1.0" encoding="UTF-8"?>
<class name="AdjustableLinearSolver">
  <javadoc>
    <text>In many situations solutions to linear systems that share many of the same data points are needed.
 * This can happen when solving using the most recent data or when rejecting outliers.  In these situations
 * it is possible to solve these related systems much faster than solving the entire data set again.</text>
    <see>org.ejml.factory.LinearSolver</see>
    <author>Peter Abeles</author>
  </javadoc>
  <method name="addRowToA" type="boolean" />
  <javadoc>
    <text>Adds a row to A.  This has the same effect as creating a new A and calling {@link #setA}.</text>
    <param>A_row The row in A.</param>
    <param>rowIndex Where the row appears in A.</param>
    <return>if it succeeded or not.</return>
  </javadoc>
  <method name="removeRowFromA" type="boolean" />
  <javadoc>
    <text>Removes a row from A.  This has the same effect as creating a new A and calling {@link #setA}.</text>
    <param>index which row is removed from A.</param>
    <return>If it succeeded or not.</return>
  </javadoc>
  <comment>Copyright (c) 2009-2013, Peter Abeles. All Rights Reserved.

 This file is part of Efficient Java Matrix Library (EJML).

 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at

   http:www.apache.orglicensesLICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.</comment>
</class>
