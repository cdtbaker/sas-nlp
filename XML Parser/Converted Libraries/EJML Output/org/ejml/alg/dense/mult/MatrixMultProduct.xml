<?xml version="1.0" encoding="UTF-8"?>
<class name="MatrixMultProduct">
  <javadoc>
    <text>&lt;p&gt;
 * Specialized operations for performing inner and outer products for matrices.
 * &lt;/p&gt;
 * &lt;p&gt;
 * inner product: B=A&lt;sup&gt;T&lt;/sup&gt;*A&lt;br&gt;
 * outer product: B=A*A&lt;sup&gt;T&lt;/sup&gt;
 * &lt;/p&gt;</text>
    <author>Peter Abeles</author>
  </javadoc>
  <method type="void" name="outer">
    <scope>
      <declaration type="int" name="indexC1" />
      <declaration type="int" name="indexC2" />
      <scope>
        <declaration type="int" name="indexA" />
        <declaration type="int" name="indexB" />
        <declaration type="double" name="sum" />
        <declaration type="int" name="end" />
        <scope />
      </scope>
    </scope>
    <comment>for( int i = 0; i &lt; a.numRows; i++ ) {</comment>
    <comment>for( int j = 0; j &lt; a.numRows; j++ ) {</comment>
    <comment>double sum = 0;</comment>
    <comment>for( int k = 0; k &lt; a.numCols; k++ ) {</comment>
    <comment>sum += a.get(i,k)*a.get(j,k);</comment>
    <comment>}</comment>
    <comment>c.set(i,j,sum);</comment>
    <comment>}</comment>
    <comment>}</comment>
  </method>
  <method type="void" name="inner_small">
    <scope>
      <scope>
        <declaration type="int" name="indexC1" />
        <declaration type="int" name="indexC2" />
        <declaration type="int" name="indexA" />
        <declaration type="int" name="indexB" />
        <declaration type="double" name="sum" />
        <declaration type="int" name="end" />
        <scope />
      </scope>
    </scope>
    <comment>for( int i = 0; i &lt; a.numCols; i++ ) {</comment>
    <comment>for( int j = i; j &lt; a.numCols; j++ ) {</comment>
    <comment>double sum = 0;</comment>
    <comment>for( int k = 0; k &lt; a.numRows; k++ ) {</comment>
    <comment>sum += a.get(k,i)*a.get(k,j);</comment>
    <comment>}</comment>
    <comment>c.set(i,j,sum);</comment>
    <comment>c.set(j,i,sum);</comment>
    <comment>}</comment>
    <comment>}</comment>
  </method>
  <method type="void" name="inner_reorder">
    <scope>
      <declaration type="int" name="indexC" />
      <declaration type="double" name="valAi" />
      <scope />
      <scope>
        <declaration type="int" name="indexB" />
        <scope />
      </scope>
      <declaration type="int" name="indexC2" />
      <scope />
    </scope>
    <comment>for( int i = 0; i &lt; a.numCols; i++ ) {</comment>
    <comment>for( int j = i; j &lt; a.numCols; j++ ) {</comment>
    <comment>c.set(i,j,a.get(0,i)*a.get(0,j));</comment>
    <comment>}</comment>
    <comment />
    <comment>for( int k = 1; k &lt; a.numRows; k++ ) {</comment>
    <comment>for( int j = i; j &lt; a.numCols; j++ ) {</comment>
    <comment>c.set(i,j, c.get(i,j)+ a.get(k,i)*a.get(k,j));</comment>
    <comment>}</comment>
    <comment>}</comment>
    <comment>for( int j = i; j &lt; a.numCols; j++ ) {</comment>
    <comment>c.set(j,i,c.get(i,j));</comment>
    <comment>}</comment>
    <comment>}</comment>
  </method>
  <method type="void" name="inner_reorder_upper">
    <scope>
      <declaration type="int" name="indexC" />
      <declaration type="double" name="valAi" />
      <scope />
      <scope>
        <declaration type="int" name="indexB" />
        <scope />
      </scope>
    </scope>
  </method>
  <comment>Copyright (c) 2009-2013, Peter Abeles. All Rights Reserved.

 This file is part of Efficient Java Matrix Library (EJML).

 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at

   http:www.apache.orglicensesLICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.</comment>
</class>
