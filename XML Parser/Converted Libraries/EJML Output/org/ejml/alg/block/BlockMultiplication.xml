<?xml version="1.0" encoding="UTF-8"?>
<class name="BlockMultiplication">
  <javadoc>
    <text>&lt;p&gt;
 * Matrix multiplication for {@link org.ejml.data.BlockMatrix64F}.  All sub-matrices must be
 * block aligned.
 * &lt;/p&gt;</text>
    <author>Peter Abeles</author>
  </javadoc>
  <javadoc>
    <text>&lt;p&gt;
 * Performs a matrix multiplication on {@link org.ejml.data.BlockMatrix64F} submatrices.&lt;br&gt;
 * &lt;br&gt;
 * c = a * b &lt;br&gt;
 * &lt;br&gt;
 * &lt;/p&gt;
 * &lt;p&gt;
 * It is assumed that all submatrices start at the beginning of a block and end at the end of a block.
 * &lt;/p&gt;</text>
    <param>blockLength Size of the blocks in the submatrix.</param>
    <param>A A submatrix.  Not modified.</param>
    <param>B A submatrix.  Not modified.</param>
    <param>C Result of the operation.  Modified,</param>
  </javadoc>
  <method type="void" name="mult">
    <scope>
      <declaration type="int" name="heightA" />
      <scope>
        <declaration type="int" name="widthB" />
        <declaration type="int" name="indexC" />
        <scope>
          <declaration type="int" name="widthA" />
          <declaration type="int" name="indexA" />
          <declaration type="int" name="indexB" />
        </scope>
      </scope>
    </scope>
  </method>
  <javadoc>
    <text>&lt;p&gt;
 * Performs a matrix multiplication on {@link org.ejml.data.BlockMatrix64F} submatrices.&lt;br&gt;
 * &lt;br&gt;
 * c = c + a * b &lt;br&gt;
 * &lt;br&gt;
 * &lt;/p&gt;
 * &lt;p&gt;
 * It is assumed that all submatrices start at the beginning of a block and end at the end of a block.
 * &lt;/p&gt;</text>
    <param>blockLength Size of the blocks in the submatrix.</param>
    <param>A A submatrix.  Not modified.</param>
    <param>B A submatrix.  Not modified.</param>
    <param>C Result of the operation.  Modified,</param>
  </javadoc>
  <method type="void" name="multPlus">
    <scope>
      <declaration type="int" name="heightA" />
      <scope>
        <declaration type="int" name="widthB" />
        <declaration type="int" name="indexC" />
        <scope>
          <declaration type="int" name="widthA" />
          <declaration type="int" name="indexA" />
          <declaration type="int" name="indexB" />
        </scope>
      </scope>
    </scope>
    <comment>checkInput( blockLength,A,B,C);</comment>
  </method>
  <javadoc>
    <text>&lt;p&gt;
 * Performs a matrix multiplication on {@link org.ejml.data.BlockMatrix64F} submatrices.&lt;br&gt;
 * &lt;br&gt;
 * c = c - a * b &lt;br&gt;
 * &lt;br&gt;
 * &lt;/p&gt;
 * &lt;p&gt;
 * It is assumed that all submatrices start at the beginning of a block and end at the end of a block.
 * &lt;/p&gt;</text>
    <param>blockLength Size of the blocks in the submatrix.</param>
    <param>A A submatrix.  Not modified.</param>
    <param>B A submatrix.  Not modified.</param>
    <param>C Result of the operation.  Modified,</param>
  </javadoc>
  <method type="void" name="multMinus">
    <scope>
      <declaration type="int" name="heightA" />
      <scope>
        <declaration type="int" name="widthB" />
        <declaration type="int" name="indexC" />
        <scope>
          <declaration type="int" name="widthA" />
          <declaration type="int" name="indexA" />
          <declaration type="int" name="indexB" />
        </scope>
      </scope>
    </scope>
  </method>
  <method type="void" name="checkInput">
    <declaration type="int" name="Arow" />
    <declaration type="int" name="Acol" />
    <declaration type="int" name="Brow" />
    <declaration type="int" name="Bcol" />
    <declaration type="int" name="Crow" />
    <declaration type="int" name="Ccol" />
  </method>
  <javadoc>
    <text>&lt;p&gt;
 * Performs a matrix multiplication with a transpose on {@link org.ejml.data.BlockMatrix64F} submatrices.&lt;br&gt;
 * &lt;br&gt;
 * c = a&lt;sup&gt;T&lt;/sup&gt; * b &lt;br&gt;
 * &lt;br&gt;
 * &lt;/p&gt;
 * &lt;p&gt;
 * It is assumed that all submatrices start at the beginning of a block and end at the end of a block.
 * &lt;/p&gt;</text>
    <param>blockLength Size of the blocks in the submatrix.</param>
    <param>A A submatrix.  Not modified.</param>
    <param>B A submatrix.  Not modified.</param>
    <param>C Result of the operation.  Modified,</param>
  </javadoc>
  <method type="void" name="multTransA">
    <scope>
      <declaration type="int" name="widthA" />
      <scope>
        <declaration type="int" name="widthB" />
        <declaration type="int" name="indexC" />
        <scope>
          <declaration type="int" name="heightA" />
          <declaration type="int" name="indexA" />
          <declaration type="int" name="indexB" />
        </scope>
      </scope>
    </scope>
  </method>
  <method type="void" name="multPlusTransA">
    <scope>
      <declaration type="int" name="widthA" />
      <scope>
        <declaration type="int" name="widthB" />
        <declaration type="int" name="indexC" />
        <scope>
          <declaration type="int" name="heightA" />
          <declaration type="int" name="indexA" />
          <declaration type="int" name="indexB" />
        </scope>
      </scope>
    </scope>
  </method>
  <method type="void" name="multMinusTransA">
    <scope>
      <declaration type="int" name="widthA" />
      <scope>
        <declaration type="int" name="widthB" />
        <declaration type="int" name="indexC" />
        <scope>
          <declaration type="int" name="heightA" />
          <declaration type="int" name="indexA" />
          <declaration type="int" name="indexB" />
        </scope>
      </scope>
    </scope>
  </method>
  <javadoc>
    <text>&lt;p&gt;
 * Performs a matrix multiplication with a transpose on {@link org.ejml.data.BlockMatrix64F} submatrices.&lt;br&gt;
 * &lt;br&gt;
 * c = a * b &lt;sup&gt;T&lt;/sup&gt; &lt;br&gt;
 * &lt;br&gt;
 * &lt;/p&gt;
 * &lt;p&gt;
 * It is assumed that all submatrices start at the beginning of a block and end at the end of a block.
 * &lt;/p&gt;</text>
    <param>blockLength Length of the blocks in the submatrix.</param>
    <param>A A submatrix.  Not modified.</param>
    <param>B A submatrix.  Not modified.</param>
    <param>C Result of the operation.  Modified,</param>
  </javadoc>
  <method type="void" name="multTransB">
    <scope>
      <declaration type="int" name="heightA" />
      <scope>
        <declaration type="int" name="widthC" />
        <declaration type="int" name="indexC" />
        <scope>
          <declaration type="int" name="widthA" />
          <declaration type="int" name="indexA" />
          <declaration type="int" name="indexB" />
        </scope>
      </scope>
    </scope>
  </method>
  <comment>Copyright (c) 2009-2013, Peter Abeles. All Rights Reserved.

 This file is part of Efficient Java Matrix Library (EJML).

 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at

   http:www.apache.orglicensesLICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.</comment>
</class>
