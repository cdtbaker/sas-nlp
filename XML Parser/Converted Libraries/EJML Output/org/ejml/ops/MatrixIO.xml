<?xml version="1.0" encoding="UTF-8"?>
<class name="MatrixIO">
  <javadoc>
    <text>Provides simple to use routines for reading and writing matrices to and from files.</text>
    <author>Peter Abeles</author>
  </javadoc>
  <javadoc>
    <text>Saves a matrix to disk using Java binary serialization.</text>
    <param>A The matrix being saved.</param>
    <param>fileName Name of the file its being saved at.</param>
    <throws>java.io.IOException</throws>
  </javadoc>
  <method type="void" name="saveBin">
    <declaration type="FileOutputStream" name="fileStream" />
    <declaration type="ObjectOutputStream" name="stream" />
    <scope />
    <scope>
      <scope />
      <scope />
    </scope>
    <comment>clean up</comment>
  </method>
  <javadoc>
    <text>Loads a DeneMatrix64F which has been saved to file using Java binary
 * serialization.</text>
    <param>fileName The file being loaded.</param>
    <return>DenseMatrix64F</return>
    <throws>IOException</throws>
  </javadoc>
  <method type="T" name="loadBin">
    <declaration type="FileInputStream" name="fileStream" />
    <declaration type="ObjectInputStream" name="stream" />
    <declaration type="T" name="ret" />
    <scope>
      <scope />
    </scope>
    <scope />
  </method>
  <javadoc>
    <text>Saves a matrix to disk using in a Column Space Value (CSV) format. For a 
 * description of the format see {@link MatrixIO#loadCSV(String)}.</text>
    <param>A The matrix being saved.</param>
    <param>fileName Name of the file its being saved at.</param>
    <throws>java.io.IOException</throws>
  </javadoc>
  <method type="void" name="saveCSV">
    <declaration type="PrintStream" name="fileStream" />
    <scope>
      <scope />
    </scope>
  </method>
  <javadoc>
    <text>Reads a matrix in which has been encoded using a Column Space Value (CSV)
 * file format. The number of rows and columns are read in on the first line. Then
 * each row is read in the subsequent lines.</text>
    <param>fileName The file being loaded.</param>
    <return>DenseMatrix64F</return>
    <throws>IOException</throws>
  </javadoc>
  <method type="DenseMatrix64F" name="loadCSV">
    <declaration type="FileInputStream" name="fileStream" />
    <declaration type="ReadMatrixCsv" name="csv" />
    <declaration type="DenseMatrix64F" name="ret" />
  </method>
  <javadoc>
    <text>Reads a matrix in which has been encoded using a Column Space Value (CSV)
 * file format.  For a description of the format see {@link MatrixIO#loadCSV(String)}.</text>
    <param>fileName The file being loaded.</param>
    <param>numRows number of rows in the matrix.</param>
    <param>numCols number of columns in the matrix.</param>
    <return>DenseMatrix64F</return>
    <throws>IOException</throws>
  </javadoc>
  <method type="DenseMatrix64F" name="loadCSV">
    <declaration type="FileInputStream" name="fileStream" />
    <declaration type="ReadMatrixCsv" name="csv" />
    <declaration type="DenseMatrix64F" name="ret" />
  </method>
  <method type="void" name="print" />
  <method type="void" name="print">
    <declaration type="String" name="format" />
  </method>
  <method type="void" name="print">
    <declaration type="String" name="type" />
    <scope>
      <scope />
    </scope>
  </method>
  <method type="void" name="print">
    <scope>
      <scope />
    </scope>
  </method>
  <comment>Copyright (c) 2009-2013, Peter Abeles. All Rights Reserved.

 This file is part of Efficient Java Matrix Library (EJML).

 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at

   http:www.apache.orglicensesLICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.</comment>
  <comment>public static void main( String []args ) {</comment>
  <comment>Random rand = new Random(234234);</comment>
  <comment>DenseMatrix64F A = RandomMatrices.createRandom(50,70,rand);</comment>
  <comment />
  <comment>SingularValueDecomposition decomp = DecompositionFactory.svd();</comment>
  <comment />
  <comment>decomp.decompose(A);</comment>
  <comment />
  <comment>displayMatrix(A,"Original");</comment>
  <comment>displayMatrix(decomp.getU(false),"U");</comment>
  <comment>displayMatrix(decomp.getV(false),"V");</comment>
  <comment>displayMatrix(decomp.getW(null),"W");</comment>
  <comment>}</comment>
</class>
