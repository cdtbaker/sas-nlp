<?xml version="1.0" encoding="UTF-8"?>
<class name="MatrixIterator">
  <javadoc>
    <text>This is a matrix iterator for traversing through a submatrix.  For speed it is recommended
 * that you directly access the elements in the matrix, but there are some situations where this
 * can be a better design.</text>
    <author>Peter Abeles</author>
  </javadoc>
  <declaration type="ReshapeMatrix64F" name="a" />
  <declaration type="boolean" name="rowMajor" />
  <declaration type="int" name="minCol" />
  <declaration type="int" name="minRow" />
  <declaration type="int" name="index" />
  <declaration type="int" name="size" />
  <declaration type="int" name="submatrixStride" />
  <declaration type="int" name="subRow" />
  <javadoc>
    <text>Creates a new iterator for traversing through a submatrix inside this matrix.  It can be traversed
 * by row or by column.  Range of elements is inclusive, e.g. minRow = 0 and maxRow = 1 will include rows
 * 0 and 1.  The iteration starts at (minRow,minCol) and ends at (maxRow,maxCol)</text>
    <param>a the matrix it is iterating through</param>
    <param>rowMajor true means it will traverse through the submatrix by row first, false by columns.</param>
    <param>minRow first row it will start at.</param>
    <param>minCol first column it will start at.</param>
    <param>maxRow last row it will stop at.</param>
    <param>maxCol last column it will stop at.</param>
    <return>A new MatrixIterator</return>
  </javadoc>
  <method type="constructor" name="MatrixIterator" />
  <method type="boolean" name="hasNext" />
  <method type="Double" name="next">
    <scope />
    <scope />
  </method>
  <method type="void" name="remove" />
  <javadoc>
    <text>Which element in the submatrix was returned by next()</text>
    <return>Submatrix element's index.</return>
  </javadoc>
  <method type="int" name="getIndex" />
  <javadoc>
    <text>True if it is iterating through the matrix by rows and false if by columns.</text>
    <return>row major or column major</return>
  </javadoc>
  <method type="boolean" name="isRowMajor" />
  <javadoc>
    <text>Sets the value of the current element.</text>
    <param>value The element's new value.</param>
  </javadoc>
  <method type="void" name="set" />
  <comment>Copyright (c) 2009-2013, Peter Abeles. All Rights Reserved.

 This file is part of Efficient Java Matrix Library (EJML).

 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at

   http:www.apache.orglicensesLICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.</comment>
  <comment>the matrix which is being iterated through</comment>
  <comment>should it iterate through by row or by column</comment>
  <comment>the first row and column it returns</comment>
  <comment>where in the iteration it is</comment>
  <comment>how many elements inside will it return</comment>
  <comment>how wide the submatrix is</comment>
  <comment>the current element</comment>
</class>
