<?xml version="1.0" encoding="UTF-8"?>
<class name="Matrix64F">
  <javadoc>
    <text>Interface for all 64 bit floating point rectangular matrices.</text>
    <author>Peter Abeles</author>
  </javadoc>
  <method name="get" type="double" />
  <javadoc>
    <text>Returns the value of value of the specified matrix element.</text>
    <param>row Matrix element's row index..</param>
    <param>col Matrix element's column index.</param>
    <return>The specified element's value.</return>
  </javadoc>
  <method name="unsafe_get" type="double" />
  <javadoc>
    <text>Same as {@link #get} but does not perform bounds check on input parameters.  This results in about a 25%
 * speed increase but potentially sacrifices stability and makes it more difficult to track down simple errors.
 * It is not recommended that this function be used, except in highly optimized code where the bounds are
 * implicitly being checked.</text>
    <param>row Matrix element's row index..</param>
    <param>col Matrix element's column index.</param>
    <return>The specified element's value.</return>
  </javadoc>
  <method name="set" type="void" />
  <javadoc>
    <text>Sets the value of the specified matrix element.</text>
    <param>row Matrix element's row index..</param>
    <param>col Matrix element's column index.</param>
    <param>val  The element's new value.</param>
  </javadoc>
  <method name="unsafe_set" type="void" />
  <javadoc>
    <text>Same as {@link #set} but does not perform bounds check on input parameters.  This results in about a 25%
 * speed increase but potentially sacrifices stability and makes it more difficult to track down simple errors.
 * It is not recommended that this function be used, except in highly optimized code where the bounds are
 * implicitly being checked.</text>
    <param>row Matrix element's row index..</param>
    <param>col Matrix element's column index.</param>
    <param>val  The element's new value.</param>
  </javadoc>
  <method name="getNumRows" type="int" />
  <javadoc>
    <text>Returns the number of rows in this matrix.</text>
    <return>Number of rows.</return>
  </javadoc>
  <method name="getNumCols" type="int" />
  <javadoc>
    <text>Returns the number of columns in this matrix.</text>
    <return>Number of columns.</return>
  </javadoc>
  <method name="getNumElements" type="int" />
  <javadoc>
    <text>Returns the number of elements in this matrix, which is the number of rows
 * times the number of columns.</text>
    <return>Number of elements in this matrix.</return>
  </javadoc>
  <method name="copy" type="T" />
  <method name="print" type="void" />
  <comment>Copyright (c) 2009-2013, Peter Abeles. All Rights Reserved.

 This file is part of Efficient Java Matrix Library (EJML).

 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at

   http:www.apache.orglicensesLICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.</comment>
</class>
