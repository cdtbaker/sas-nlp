<?xml version="1.0" encoding="UTF-8"?>
<class name="ReshapeMatrix64F">
  <javadoc>
    <text>An abstract class for all 64 bit floating point rectangular matrices which can be reshaped.</text>
    <author>Peter Abeles</author>
  </javadoc>
  <declaration type="long" name="serialVersionUID" />
  <javadoc>
    <text>Number of rows in the matrix.</text>
  </javadoc>
  <declaration type="int" name="numRows" />
  <javadoc>
    <text>Number of columns in the matrix.</text>
  </javadoc>
  <declaration type="int" name="numCols" />
  <method name="reshape" type="void" />
  <javadoc>
    <text>&lt;p&gt;
 * Changes the number of rows and columns in the matrix, allowing its size to grow or shrink.
 * If the saveValues flag is set to true, then the previous values will be maintained, but
 * reassigned to new elements in a row-major ordering.  If saveValues is false values will only
 * be maintained when the requested size is less than or equal to the internal array size.
 * The primary use for this function is to encourage data reuse and avoid unnecessarily declaring
 * and initialization of new memory.
 * &lt;/p&gt;
 * &lt;p&gt;
 * Examples:&lt;br&gt;
 * [ 1 2 ; 3 4 ] -&gt; reshape( 2 , 3 , true ) = [ 1 2 3 ; 4 0 0 ]&lt;br&gt;
 * [ 1 2 ; 3 4 ] -&gt; reshape( 1 , 2 , true ) = [ 1 2 ]&lt;br&gt;
 * [ 1 2 ; 3 4 ] -&gt; reshape( 1 , 2 , false ) = [ 1 2 ]&lt;br&gt;
 * [ 1 2 ; 3 4 ] -&gt; reshape( 2 , 3 , false ) = [ 0 0 0 ; 0 0 0 ]
 * &lt;/p&gt;</text>
    <param>numRows The new number of rows in the matrix.</param>
    <param>numCols The new number of columns in the matrix.</param>
    <param>saveValues If true then the value of each element will be save using a row-major reordering.  Typically this should be false.</param>
  </javadoc>
  <javadoc>
    <text>Equivalent to invoking reshape(numRows,numCols,false);</text>
    <param>numRows The new number of rows in the matrix.</param>
    <param>numCols The new number of columns in the matrix.</param>
  </javadoc>
  <method type="void" name="reshape" />
  <javadoc>
    <text>Creates a new iterator for traversing through a submatrix inside this matrix.  It can be traversed
 * by row or by column.  Range of elements is inclusive, e.g. minRow = 0 and maxRow = 1 will include rows
 * 0 and 1.  The iteration starts at (minRow,minCol) and ends at (maxRow,maxCol)</text>
    <param>rowMajor true means it will traverse through the submatrix by row first, false by columns.</param>
    <param>minRow first row it will start at.</param>
    <param>minCol first column it will start at.</param>
    <param>maxRow last row it will stop at.</param>
    <param>maxCol last column it will stop at.</param>
    <return>A new MatrixIterator</return>
  </javadoc>
  <method type="MatrixIterator" name="iterator" />
  <javadoc>
    <text>{@inheritDoc}</text>
  </javadoc>
  <method type="int" name="getNumRows" />
  <javadoc>
    <text>{@inheritDoc}</text>
  </javadoc>
  <method type="int" name="getNumCols" />
  <javadoc>
    <text>Sets the number of rows.</text>
    <param>numRows Number of rows</param>
  </javadoc>
  <method type="void" name="setNumRows" />
  <javadoc>
    <text>Sets the number of columns.</text>
    <param>numCols Number of columns</param>
  </javadoc>
  <method type="void" name="setNumCols" />
  <javadoc>
    <text>Assigns the value of 'this' matrix to be the same as 'A'.  The shape of
 * both matrices must be the same.</text>
    <param>A The matrix whose value is to be copied into 'this'.</param>
  </javadoc>
  <method type="void" name="set">
    <scope>
      <scope />
    </scope>
  </method>
  <comment>Copyright (c) 2009-2013, Peter Abeles. All Rights Reserved.

 This file is part of Efficient Java Matrix Library (EJML).

 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at

   http:www.apache.orglicensesLICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.</comment>
</class>
