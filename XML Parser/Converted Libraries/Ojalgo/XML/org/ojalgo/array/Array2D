<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.ojalgo.array">
        <import package="java.io.Serializable"/>
        <import package="java.math.BigDecimal"/>
        <import package="java.util.Iterator"/>
        <import package="java.util.List"/>
        <import package="org.ojalgo.access.Access1D"/>
        <import package="org.ojalgo.access.Access2D"/>
        <import package="org.ojalgo.access.ColumnsIterator"/>
        <import package="org.ojalgo.access.Iterator1D"/>
        <import package="org.ojalgo.access.RowsIterator"/>
        <import package="org.ojalgo.function.BinaryFunction"/>
        <import package="org.ojalgo.function.ParameterFunction"/>
        <import package="org.ojalgo.function.UnaryFunction"/>
        <import package="org.ojalgo.function.VoidFunction"/>
        <import package="org.ojalgo.matrix.store.BigDenseStore"/>
        <import package="org.ojalgo.matrix.store.ComplexDenseStore"/>
        <import package="org.ojalgo.matrix.store.PrimitiveDenseStore"/>
        <import package="org.ojalgo.random.RandomNumber"/>
        <import package="org.ojalgo.scalar.ComplexNumber"/>
        <import package="org.ojalgo.scalar.Scalar"/>
        <class name="Array2D" line="45">
            <type_params>
                <type_param name="N"/>
            </type_params>
            <implements interface="Access2D">
                <type_params>
                    <type_param name="N"/>
                </type_params>
            </implements>
            <implements interface="Access2D.Elements"/>
            <implements interface="Access2D.Fillable">
                <type_params>
                    <type_param name="N"/>
                </type_params>
            </implements>
            <implements interface="Access2D.Iterable2D">
                <type_params>
                    <type_param name="N"/>
                </type_params>
            </implements>
            <implements interface="Access2D.Modifiable">
                <type_params>
                    <type_param name="N"/>
                </type_params>
            </implements>
            <implements interface="Access2D.Visitable">
                <type_params>
                    <type_param name="N"/>
                </type_params>
            </implements>
            <implements interface="Serializable"/>
            <javadoc line="45">
                Array2D                
                <@author>
                    r apete                    
                </@author>
            </javadoc>
            <declaration name="BIG" type="Access2D.Factory&lt;Array2D&lt;BigDecimal&gt;&gt;" line="53"/>
            <anonymous_class line="53">
                <method name="columns" type="Array2D<BigDecimal>" line="55">
                    <params>
                        <param name="source" type="Access1D<?>"/>
                    </params>
                </method>
                <method name="columns" type="Array2D<BigDecimal>" line="59">
                    <params>
                        <param name="source" type="double[]"/>
                    </params>
                </method>
                <method name="columns" type="Array2D<BigDecimal>" line="63">
                    <params>
                        <param name="source" type="List<? extends Number>"/>
                    </params>
                </method>
                <method name="columns" type="Array2D<BigDecimal>" line="67">
                    <params>
                        <param name="source" type="Number[]"/>
                    </params>
                </method>
                <method name="copy" type="Array2D<BigDecimal>" line="71">
                    <params>
                        <param name="source" type="Access2D<?>"/>
                    </params>
                </method>
                <method name="makeEye" type="Array2D<BigDecimal>" line="75">
                    <params>
                        <param name="rows" type="long"/>
                        <param name="columns" type="long"/>
                    </params>
                </method>
                <method name="makeRandom" type="Array2D<BigDecimal>" line="79">
                    <params>
                        <param name="rows" type="long"/>
                        <param name="columns" type="long"/>
                        <param name="distribution" type="RandomNumber"/>
                    </params>
                </method>
                <method name="makeZero" type="Array2D<BigDecimal>" line="83">
                    <params>
                        <param name="rows" type="long"/>
                        <param name="columns" type="long"/>
                    </params>
                </method>
                <method name="rows" type="Array2D<BigDecimal>" line="87">
                    <params>
                        <param name="source" type="Access1D<?>"/>
                    </params>
                </method>
                <method name="rows" type="Array2D<BigDecimal>" line="91">
                    <params>
                        <param name="source" type="double[]"/>
                    </params>
                </method>
                <method name="rows" type="Array2D<BigDecimal>" line="95">
                    <params>
                        <param name="source" type="List<? extends Number>"/>
                    </params>
                </method>
                <method name="rows" type="Array2D<BigDecimal>" line="99">
                    <params>
                        <param name="source" type="Number[]"/>
                    </params>
                </method>
            </anonymous_class>
            <declaration name="COMPLEX" type="Factory&lt;Array2D&lt;ComplexNumber&gt;&gt;" line="105"/>
            <anonymous_class line="105">
                <method name="columns" type="Array2D<ComplexNumber>" line="107">
                    <params>
                        <param name="source" type="Access1D<?>"/>
                    </params>
                </method>
                <method name="columns" type="Array2D<ComplexNumber>" line="111">
                    <params>
                        <param name="source" type="double[]"/>
                    </params>
                </method>
                <method name="columns" type="Array2D<ComplexNumber>" line="115">
                    <params>
                        <param name="source" type="List<? extends Number>"/>
                    </params>
                </method>
                <method name="columns" type="Array2D<ComplexNumber>" line="119">
                    <params>
                        <param name="source" type="Number[]"/>
                    </params>
                </method>
                <method name="copy" type="Array2D<ComplexNumber>" line="123">
                    <params>
                        <param name="source" type="Access2D<?>"/>
                    </params>
                </method>
                <method name="makeEye" type="Array2D<ComplexNumber>" line="127">
                    <params>
                        <param name="rows" type="long"/>
                        <param name="columns" type="long"/>
                    </params>
                </method>
                <method name="makeRandom" type="Array2D<ComplexNumber>" line="131">
                    <params>
                        <param name="rows" type="long"/>
                        <param name="columns" type="long"/>
                        <param name="distribution" type="RandomNumber"/>
                    </params>
                </method>
                <method name="makeZero" type="Array2D<ComplexNumber>" line="135">
                    <params>
                        <param name="rows" type="long"/>
                        <param name="columns" type="long"/>
                    </params>
                </method>
                <method name="rows" type="Array2D<ComplexNumber>" line="139">
                    <params>
                        <param name="source" type="Access1D<?>"/>
                    </params>
                </method>
                <method name="rows" type="Array2D<ComplexNumber>" line="143">
                    <params>
                        <param name="source" type="double[]"/>
                    </params>
                </method>
                <method name="rows" type="Array2D<ComplexNumber>" line="147">
                    <params>
                        <param name="source" type="List<? extends Number>"/>
                    </params>
                </method>
                <method name="rows" type="Array2D<ComplexNumber>" line="151">
                    <params>
                        <param name="source" type="Number[]"/>
                    </params>
                </method>
            </anonymous_class>
            <declaration name="PRIMITIVE" type="Access2D.Factory&lt;Array2D&lt;Double&gt;&gt;" line="157"/>
            <anonymous_class line="157">
                <method name="columns" type="Array2D<Double>" line="159">
                    <params>
                        <param name="source" type="Access1D<?>"/>
                    </params>
                </method>
                <method name="columns" type="Array2D<Double>" line="163">
                    <params>
                        <param name="source" type="double[]"/>
                    </params>
                </method>
                <method name="columns" type="Array2D<Double>" line="167">
                    <params>
                        <param name="source" type="List<? extends Number>"/>
                    </params>
                </method>
                <method name="columns" type="Array2D<Double>" line="171">
                    <params>
                        <param name="source" type="Number[]"/>
                    </params>
                </method>
                <method name="copy" type="Array2D<Double>" line="175">
                    <params>
                        <param name="source" type="Access2D<?>"/>
                    </params>
                </method>
                <method name="makeEye" type="Array2D<Double>" line="179">
                    <params>
                        <param name="rows" type="long"/>
                        <param name="columns" type="long"/>
                    </params>
                </method>
                <method name="makeRandom" type="Array2D<Double>" line="183">
                    <params>
                        <param name="rows" type="long"/>
                        <param name="columns" type="long"/>
                        <param name="distribution" type="RandomNumber"/>
                    </params>
                </method>
                <method name="makeZero" type="Array2D<Double>" line="187">
                    <params>
                        <param name="rows" type="long"/>
                        <param name="columns" type="long"/>
                    </params>
                </method>
                <method name="rows" type="Array2D<Double>" line="191">
                    <params>
                        <param name="source" type="Access1D<?>"/>
                    </params>
                </method>
                <method name="rows" type="Array2D<Double>" line="195">
                    <params>
                        <param name="source" type="double[]"/>
                    </params>
                </method>
                <method name="rows" type="Array2D<Double>" line="199">
                    <params>
                        <param name="source" type="List<? extends Number>"/>
                    </params>
                </method>
                <method name="rows" type="Array2D<Double>" line="203">
                    <params>
                        <param name="source" type="Number[]"/>
                    </params>
                </method>
            </anonymous_class>
            <declaration name="myColDim" type="int" line="209"/>
            <declaration name="myDelegate" type="BasicArray&lt;N&gt;" line="211"/>
            <declaration name="myRowDim" type="int" line="212"/>
            <method name="Array2D" type="constructor" line="215"/>
            <method name="Array2D" type="constructor" line="219">
                <params>
                    <param name="aDelegate" type="BasicArray<N>"/>
                    <param name="aRowDim" type="int"/>
                    <param name="aColDim" type="int"/>
                </params>
            </method>
            <javadoc line="229">
                Flattens this two dimensional array to a one dimensional array. The (internal/actual) array is not copied, it is
                  just accessed through a different adaptor.                
            </javadoc>
            <method name="asArray1D" type="Array1D<N>" line="233"/>
            <method name="columns" type="Iterable<Access1D<N>>" line="237"/>
            <method name="count" type="long" line="241"/>
            <method name="countColumns" type="long" line="245"/>
            <method name="countRows" type="long" line="249"/>
            <method name="doubleValue" type="double" line="253">
                <params>
                    <param name="index" type="long"/>
                </params>
            </method>
            <method name="doubleValue" type="double" line="257">
                <params>
                    <param name="row" type="long"/>
                    <param name="column" type="long"/>
                </params>
            </method>
            <method name="equals" type="boolean" line="263">
                <params>
                    <param name="obj" type="Object"/>
                </params>
                <scope line="264">
                    <declaration name="tmpObj" type="Array2D&lt;N&gt;" line="265"/>
                </scope>
                <scope line="267"/>
            </method>
            <method name="exchangeColumns" type="void" line="272">
                <params>
                    <param name="aColA" type="int"/>
                    <param name="aColB" type="int"/>
                </params>
            </method>
            <method name="exchangeRows" type="void" line="276">
                <params>
                    <param name="aRowA" type="int"/>
                    <param name="aRowB" type="int"/>
                </params>
            </method>
            <method name="fillAll" type="void" line="280">
                <params>
                    <param name="value" type="N"/>
                </params>
            </method>
            <method name="fillColumn" type="void" line="284">
                <params>
                    <param name="row" type="long"/>
                    <param name="column" type="long"/>
                    <param name="value" type="N"/>
                </params>
                <declaration name="tmpFirst" type="int" line="285"/>
                <declaration name="tmpLimit" type="int" line="286"/>
            </method>
            <method name="fillDiagonal" type="void" line="290">
                <params>
                    <param name="row" type="long"/>
                    <param name="column" type="long"/>
                    <param name="value" type="N"/>
                </params>
                <declaration name="tmpCount" type="long" line="292"/>
                <declaration name="tmpFirst" type="int" line="294"/>
                <declaration name="tmpLimit" type="int" line="295"/>
                <declaration name="tmpStep" type="int" line="296"/>
            </method>
            <method name="fillMatching" type="void" line="301">
                <params>
                    <param name="aLeftArg" type="Array2D<N>"/>
                    <param name="aFunc" type="BinaryFunction<N>"/>
                    <param name="aRightArg" type="Array2D<N>"/>
                </params>
            </method>
            <method name="fillRange" type="void" line="305">
                <params>
                    <param name="first" type="long"/>
                    <param name="limit" type="long"/>
                    <param name="value" type="N"/>
                </params>
            </method>
            <method name="fillRow" type="void" line="309">
                <params>
                    <param name="row" type="long"/>
                    <param name="column" type="long"/>
                    <param name="value" type="N"/>
                </params>
                <declaration name="tmpFirst" type="int" line="310"/>
                <declaration name="tmpLimit" type="int" line="311"/>
            </method>
            <method name="get" type="N" line="315">
                <params>
                    <param name="index" type="long"/>
                </params>
            </method>
            <method name="get" type="N" line="319">
                <params>
                    <param name="row" type="long"/>
                    <param name="column" type="long"/>
                </params>
            </method>
            <method name="getColDim" type="int" line="323"/>
            <method name="getIndexOfLargestInColumn" type="int" line="327">
                <params>
                    <param name="row" type="int"/>
                    <param name="column" type="int"/>
                </params>
            </method>
            <method name="getIndexOfLargestInRow" type="int" line="331">
                <params>
                    <param name="row" type="int"/>
                    <param name="column" type="int"/>
                </params>
            </method>
            <method name="getMaxDim" type="int" line="335"/>
            <method name="getMinDim" type="int" line="339"/>
            <method name="getRowDim" type="int" line="343"/>
            <method name="hashCode" type="int" line="348"/>
            <method name="isAbsolute" type="boolean" line="352">
                <params>
                    <param name="index" type="long"/>
                </params>
            </method>
            <javadoc line="356">
                @see Scalar#isAbsolute()                
            </javadoc>
            <method name="isAbsolute" type="boolean" line="359">
                <params>
                    <param name="row" type="long"/>
                    <param name="column" type="long"/>
                </params>
            </method>
            <method name="isAllZeros" type="boolean" line="363"/>
            <method name="isColumnZeros" type="boolean" line="367">
                <params>
                    <param name="row" type="int"/>
                    <param name="column" type="int"/>
                </params>
            </method>
            <method name="isDiagonalZeros" type="boolean" line="371">
                <params>
                    <param name="row" type="int"/>
                    <param name="column" type="int"/>
                </params>
                <declaration name="tmpCount" type="int" line="373"/>
            </method>
            <method name="isInfinite" type="boolean" line="378">
                <params>
                    <param name="index" type="long"/>
                </params>
            </method>
            <method name="isInfinite" type="boolean" line="382">
                <params>
                    <param name="row" type="long"/>
                    <param name="column" type="long"/>
                </params>
            </method>
            <method name="isNaN" type="boolean" line="386">
                <params>
                    <param name="index" type="long"/>
                </params>
            </method>
            <method name="isNaN" type="boolean" line="390">
                <params>
                    <param name="row" type="long"/>
                    <param name="column" type="long"/>
                </params>
            </method>
            <method name="isPositive" type="boolean" line="394">
                <params>
                    <param name="index" type="long"/>
                </params>
            </method>
            <method name="isPositive" type="boolean" line="398">
                <params>
                    <param name="row" type="long"/>
                    <param name="column" type="long"/>
                </params>
            </method>
            <method name="isReal" type="boolean" line="402">
                <params>
                    <param name="row" type="int"/>
                    <param name="column" type="int"/>
                </params>
            </method>
            <method name="isReal" type="boolean" line="406">
                <params>
                    <param name="index" type="long"/>
                </params>
            </method>
            <method name="isReal" type="boolean" line="410">
                <params>
                    <param name="row" type="long"/>
                    <param name="column" type="long"/>
                </params>
            </method>
            <method name="isRowZeros" type="boolean" line="414">
                <params>
                    <param name="row" type="int"/>
                    <param name="column" type="int"/>
                </params>
            </method>
            <method name="isZero" type="boolean" line="418">
                <params>
                    <param name="row" type="int"/>
                    <param name="column" type="int"/>
                </params>
            </method>
            <method name="isZero" type="boolean" line="422">
                <params>
                    <param name="index" type="long"/>
                </params>
            </method>
            <method name="isZero" type="boolean" line="426">
                <params>
                    <param name="row" type="long"/>
                    <param name="column" type="long"/>
                </params>
            </method>
            <method name="iterator" type="Iterator<N>" line="430"/>
            <method name="modifyAll" type="void" line="434">
                <params>
                    <param name="aFunc" type="BinaryFunction<N>"/>
                    <param name="value" type="N"/>
                </params>
            </method>
            <method name="modifyAll" type="void" line="438">
                <params>
                    <param name="value" type="N"/>
                    <param name="aFunc" type="BinaryFunction<N>"/>
                </params>
            </method>
            <method name="modifyAll" type="void" line="442">
                <params>
                    <param name="aFunc" type="ParameterFunction<N>"/>
                    <param name="aParam" type="int"/>
                </params>
            </method>
            <method name="modifyAll" type="void" line="446">
                <params>
                    <param name="aFunc" type="UnaryFunction<N>"/>
                </params>
            </method>
            <method name="modifyColumn" type="void" line="450">
                <params>
                    <param name="row" type="int"/>
                    <param name="column" type="int"/>
                    <param name="aFunc" type="BinaryFunction<N>"/>
                    <param name="value" type="N"/>
                </params>
            </method>
            <method name="modifyColumn" type="void" line="454">
                <params>
                    <param name="row" type="int"/>
                    <param name="column" type="int"/>
                    <param name="value" type="N"/>
                    <param name="aFunc" type="BinaryFunction<N>"/>
                </params>
            </method>
            <method name="modifyColumn" type="void" line="458">
                <params>
                    <param name="row" type="int"/>
                    <param name="column" type="int"/>
                    <param name="aFunc" type="ParameterFunction<N>"/>
                    <param name="aParam" type="int"/>
                </params>
            </method>
            <method name="modifyColumn" type="void" line="462">
                <params>
                    <param name="row" type="long"/>
                    <param name="column" type="long"/>
                    <param name="function" type="UnaryFunction<N>"/>
                </params>
                <declaration name="tmpFirst" type="int" line="463"/>
                <declaration name="tmpLimit" type="int" line="464"/>
            </method>
            <method name="modifyDiagonal" type="void" line="468">
                <params>
                    <param name="row" type="int"/>
                    <param name="column" type="int"/>
                    <param name="aFunc" type="BinaryFunction<N>"/>
                    <param name="value" type="N"/>
                </params>
                <declaration name="tmpCount" type="int" line="470"/>
            </method>
            <method name="modifyDiagonal" type="void" line="475">
                <params>
                    <param name="row" type="int"/>
                    <param name="column" type="int"/>
                    <param name="value" type="N"/>
                    <param name="aFunc" type="BinaryFunction<N>"/>
                </params>
                <declaration name="tmpCount" type="int" line="477"/>
            </method>
            <method name="modifyDiagonal" type="void" line="482">
                <params>
                    <param name="row" type="int"/>
                    <param name="column" type="int"/>
                    <param name="aFunc" type="ParameterFunction<N>"/>
                    <param name="aParam" type="int"/>
                </params>
                <declaration name="tmpCount" type="int" line="484"/>
            </method>
            <method name="modifyDiagonal" type="void" line="489">
                <params>
                    <param name="row" type="long"/>
                    <param name="column" type="long"/>
                    <param name="function" type="UnaryFunction<N>"/>
                </params>
                <declaration name="tmpCount" type="long" line="491"/>
                <declaration name="tmpFirst" type="int" line="493"/>
                <declaration name="tmpLimit" type="int" line="494"/>
                <declaration name="tmpStep" type="int" line="495"/>
            </method>
            <method name="modifyMatching" type="void" line="500">
                <params>
                    <param name="aLeftArg" type="Array2D<N>"/>
                    <param name="aFunc" type="BinaryFunction<N>"/>
                </params>
            </method>
            <method name="modifyMatching" type="void" line="504">
                <params>
                    <param name="aFunc" type="BinaryFunction<N>"/>
                    <param name="aRightArg" type="Array2D<N>"/>
                </params>
            </method>
            <method name="modifyRange" type="void" line="508">
                <params>
                    <param name="first" type="long"/>
                    <param name="limit" type="long"/>
                    <param name="function" type="UnaryFunction<N>"/>
                </params>
            </method>
            <method name="modifyRow" type="void" line="512">
                <params>
                    <param name="row" type="int"/>
                    <param name="column" type="int"/>
                    <param name="aFunc" type="BinaryFunction<N>"/>
                    <param name="value" type="N"/>
                </params>
            </method>
            <method name="modifyRow" type="void" line="516">
                <params>
                    <param name="row" type="int"/>
                    <param name="column" type="int"/>
                    <param name="value" type="N"/>
                    <param name="aFunc" type="BinaryFunction<N>"/>
                </params>
            </method>
            <method name="modifyRow" type="void" line="520">
                <params>
                    <param name="row" type="int"/>
                    <param name="column" type="int"/>
                    <param name="aFunc" type="ParameterFunction<N>"/>
                    <param name="aParam" type="int"/>
                </params>
            </method>
            <method name="modifyRow" type="void" line="524">
                <params>
                    <param name="row" type="long"/>
                    <param name="column" type="long"/>
                    <param name="function" type="UnaryFunction<N>"/>
                </params>
                <declaration name="tmpFirst" type="int" line="526"/>
                <declaration name="tmpLimit" type="int" line="527"/>
            </method>
            <method name="rows" type="Iterable<Access1D<N>>" line="532"/>
            <method name="set" type="N" line="536">
                <params>
                    <param name="index" type="int"/>
                    <param name="value" type="Number"/>
                </params>
            </method>
            <method name="set" type="void" line="540">
                <params>
                    <param name="index" type="long"/>
                    <param name="value" type="double"/>
                </params>
            </method>
            <method name="set" type="void" line="544">
                <params>
                    <param name="row" type="long"/>
                    <param name="column" type="long"/>
                    <param name="value" type="double"/>
                </params>
            </method>
            <method name="set" type="void" line="548">
                <params>
                    <param name="row" type="long"/>
                    <param name="column" type="long"/>
                    <param name="value" type="Number"/>
                </params>
            </method>
            <method name="set" type="void" line="552">
                <params>
                    <param name="index" type="long"/>
                    <param name="value" type="Number"/>
                </params>
            </method>
            <method name="size" type="int" line="556"/>
            <method name="sliceColumn" type="Array1D<N>" line="560">
                <params>
                    <param name="row" type="int"/>
                    <param name="column" type="int"/>
                </params>
            </method>
            <method name="sliceDiagonal" type="Array1D<N>" line="564">
                <params>
                    <param name="row" type="int"/>
                    <param name="column" type="int"/>
                </params>
                <declaration name="tmpCount" type="int" line="566"/>
            </method>
            <method name="sliceRow" type="Array1D<N>" line="571">
                <params>
                    <param name="row" type="int"/>
                    <param name="column" type="int"/>
                </params>
            </method>
            <javadoc line="575">
                @return An array of arrays of doubles                
            </javadoc>
            <method name="toRawCopy" type="double[][]" line="578"/>
            <method name="toScalar" type="Scalar<N>" line="582">
                <params>
                    <param name="row" type="int"/>
                    <param name="column" type="int"/>
                </params>
            </method>
            <method name="toString" type="String" line="587"/>
            <method name="visitAll" type="void" line="591">
                <params>
                    <param name="visitor" type="VoidFunction<N>"/>
                </params>
            </method>
            <method name="visitColumn" type="void" line="595">
                <params>
                    <param name="row" type="int"/>
                    <param name="column" type="int"/>
                    <param name="visitor" type="VoidFunction<N>"/>
                </params>
            </method>
            <method name="visitColumn" type="void" line="599">
                <params>
                    <param name="row" type="long"/>
                    <param name="column" type="long"/>
                    <param name="visitor" type="VoidFunction<N>"/>
                </params>
                <declaration name="tmpFirst" type="int" line="600"/>
                <declaration name="tmpLimit" type="int" line="601"/>
            </method>
            <method name="visitDiagonal" type="void" line="605">
                <params>
                    <param name="row" type="int"/>
                    <param name="column" type="int"/>
                    <param name="visitor" type="VoidFunction<N>"/>
                </params>
                <declaration name="tmpCount" type="int" line="607"/>
            </method>
            <method name="visitDiagonal" type="void" line="612">
                <params>
                    <param name="row" type="long"/>
                    <param name="column" type="long"/>
                    <param name="visitor" type="VoidFunction<N>"/>
                </params>
                <declaration name="tmpCount" type="long" line="614"/>
                <declaration name="tmpFirst" type="int" line="616"/>
                <declaration name="tmpLimit" type="int" line="617"/>
            </method>
            <method name="visitRange" type="void" line="621">
                <params>
                    <param name="first" type="long"/>
                    <param name="limit" type="long"/>
                    <param name="visitor" type="VoidFunction<N>"/>
                </params>
            </method>
            <method name="visitRow" type="void" line="625">
                <params>
                    <param name="row" type="int"/>
                    <param name="column" type="int"/>
                    <param name="visitor" type="VoidFunction<N>"/>
                </params>
            </method>
            <method name="visitRow" type="void" line="629">
                <params>
                    <param name="row" type="long"/>
                    <param name="column" type="long"/>
                    <param name="visitor" type="VoidFunction<N>"/>
                </params>
                <declaration name="tmpFirst" type="int" line="630"/>
                <declaration name="tmpLimit" type="int" line="631"/>
            </method>
            <method name="getDelegate" type="BasicArray<N>" line="635"/>
        </class>
    </source>