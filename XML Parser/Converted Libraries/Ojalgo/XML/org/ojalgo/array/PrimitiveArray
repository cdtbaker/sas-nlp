<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.ojalgo.array">
        <import package="org.ojalgo.constant.PrimitiveMath"/>
        <import package="java.util.Arrays"/>
        <import package="org.ojalgo.access.Access1D"/>
        <import package="org.ojalgo.function.BinaryFunction"/>
        <import package="org.ojalgo.function.BinaryFunction.FixedFirst"/>
        <import package="org.ojalgo.function.BinaryFunction.FixedSecond"/>
        <import package="org.ojalgo.function.ParameterFunction"/>
        <import package="org.ojalgo.function.ParameterFunction.FixedParameter"/>
        <import package="org.ojalgo.function.PrimitiveFunction"/>
        <import package="org.ojalgo.function.UnaryFunction"/>
        <import package="org.ojalgo.function.VoidFunction"/>
        <import package="org.ojalgo.scalar.PrimitiveScalar"/>
        <import package="org.ojalgo.scalar.Scalar"/>
        <import package="org.ojalgo.type.TypeUtils"/>
        <class name="PrimitiveArray" extends="BasicArray<Double>" line="41">
            <javadoc line="41">
                &lt;p&gt;
                 * A one- and/or arbitrary-dimensional array of double.
                 * &lt;/p&gt;
                 * &lt;p&gt;
                 * You cannot instantiate a PrimitiveArray directly. You have to either subclass it and implement instantiation code in
                 * that subclass, or use one of the static factory methods in {@linkplain Array1D}, {@linkplain Array2D} or{@linkplain ArrayAnyD}.
                 * &lt;/p&gt;                
                <@author>
                    r apete                    
                </@author>
            </javadoc>
            <method name="add" type="void" line="55">
                <scope line="56"/>
            </method>
            <method name="add" type="void" line="61">
                <scope line="62"/>
            </method>
            <method name="add" type="void" line="67">
                <scope line="68"/>
            </method>
            <method name="divide" type="void" line="73">
                <scope line="74"/>
            </method>
            <method name="divide" type="void" line="79">
                <scope line="80"/>
            </method>
            <method name="divide" type="void" line="85">
                <scope line="86"/>
            </method>
            <method name="multiply" type="void" line="91">
                <scope line="92"/>
            </method>
            <method name="multiply" type="void" line="97">
                <scope line="98"/>
            </method>
            <method name="multiply" type="void" line="103">
                <scope line="104"/>
            </method>
            <method name="negate" type="void" line="109">
                <scope line="110"/>
            </method>
            <method name="subtract" type="void" line="115">
                <scope line="116"/>
            </method>
            <method name="subtract" type="void" line="121">
                <scope line="122"/>
            </method>
            <method name="subtract" type="void" line="127">
                <scope line="128"/>
            </method>
            <method name="exchange" type="void" line="133">
                <declaration name="tmpIndexA" type="int" line="135"/>
                <declaration name="tmpIndexB" type="int" line="136"/>
                <declaration name="tmpVal" type="double" line="138"/>
                <scope line="140"/>
            </method>
            <method name="fill" type="void" line="151">
                <declaration name="tmpLimit" type="int" line="152"/>
                <scope line="153"/>
            </method>
            <method name="fill" type="void" line="158">
                <scope line="159"/>
            </method>
            <method name="invoke" type="void" line="165">
                <scope line="166"/>
                <scope line="168">
                    <scope line="169"/>
                </scope>
            </method>
            <method name="invoke" type="void" line="176">
                <scope line="177"/>
                <scope line="179">
                    <scope line="180"/>
                </scope>
            </method>
            <method name="invoke" type="void" line="187">
                <scope line="188"/>
                <scope line="190">
                    <scope line="191"/>
                </scope>
            </method>
            <method name="invoke" type="void" line="198">
                <scope line="199"/>
                <scope line="201">
                    <scope line="202"/>
                </scope>
            </method>
            <method name="invoke" type="void" line="209">
                <scope line="210"/>
                <scope line="212">
                    <scope line="213"/>
                </scope>
            </method>
            <method name="invoke" type="void" line="219">
                <scope line="220"/>
            </method>
            <method name="invoke" type="void" line="226">
                <scope line="227"/>
                <scope line="229"/>
                <scope line="231"/>
                <scope line="233"/>
                <scope line="235">
                    <scope line="236"/>
                </scope>
            </method>
            <method name="invoke" type="void" line="243">
                <scope line="244"/>
                <scope line="246"/>
                <scope line="248"/>
                <scope line="250"/>
                <scope line="252">
                    <scope line="253"/>
                </scope>
            </method>
            <method name="invoke" type="void" line="260">
                <scope line="261"/>
                <scope line="263"/>
                <scope line="265"/>
                <scope line="267"/>
                <scope line="269">
                    <scope line="270"/>
                </scope>
            </method>
            <method name="invoke" type="void" line="277">
                <scope line="278"/>
            </method>
            <method name="invoke" type="void" line="283">
                <scope line="284"/>
                <scope line="286">
                    <declaration name="tmpFunc" type="FixedFirst&lt;Double&gt;" line="287"/>
                </scope>
                <scope line="289">
                    <declaration name="tmpFunc" type="FixedSecond&lt;Double&gt;" line="290"/>
                </scope>
                <scope line="292">
                    <declaration name="tmpFunc" type="FixedParameter&lt;Double&gt;" line="293"/>
                </scope>
                <scope line="295">
                    <scope line="296"/>
                </scope>
            </method>
            <declaration name="myData" type="double[]" line="302"/>
            <javadoc line="304">
                Array not copied! No checking!                
            </javadoc>
            <method name="PrimitiveArray" type="constructor" line="307"/>
            <method name="PrimitiveArray" type="constructor" line="314"/>
            <method name="doubleValue" type="double" line="321"/>
            <method name="equals" type="boolean" line="326">
                <scope line="327"/>
                <scope line="329"/>
            </method>
            <method name="fillAll" type="void" line="334"/>
            <method name="fillRange" type="void" line="338"/>
            <method name="get" type="Double" line="342"/>
            <method name="hashCode" type="int" line="347"/>
            <method name="isAbsolute" type="boolean" line="351"/>
            <method name="isInfinite" type="boolean" line="355"/>
            <method name="isNaN" type="boolean" line="359"/>
            <method name="isPositive" type="boolean" line="363"/>
            <method name="isReal" type="boolean" line="367"/>
            <method name="isZero" type="boolean" line="371"/>
            <method name="set" type="Double" line="376">
                <declaration name="retVal" type="double" line="377"/>
            </method>
            <method name="set" type="void" line="382"/>
            <method name="set" type="void" line="386"/>
            <method name="copyOfData" type="double[]" line="390"/>
            <method name="data" type="double[]" line="394"/>
            <method name="exchange" type="void" line="399"/>
            <method name="fill" type="void" line="404"/>
            <method name="fill" type="void" line="410"/>
            <method name="fill" type="void" line="415"/>
            <method name="fill" type="void" line="420"/>
            <method name="fill" type="void" line="425"/>
            <method name="getIndexOfLargest" type="int" line="430">
                <declaration name="retVal" type="int" line="432"/>
                <declaration name="tmpLargest" type="double" line="433"/>
                <declaration name="tmpValue" type="double" line="434"/>
                <scope line="436">
                    <scope line="438"/>
                </scope>
            </method>
            <method name="isReal" type="boolean" line="448"/>
            <method name="isZero" type="boolean" line="453"/>
            <method name="isZeros" type="boolean" line="458">
                <declaration name="retVal" type="boolean" line="460"/>
                <scope line="462"/>
            </method>
            <method name="modify" type="void" line="470"/>
            <method name="modify" type="void" line="475"/>
            <method name="modify" type="void" line="480"/>
            <method name="modify" type="void" line="485"/>
            <method name="modify" type="void" line="490"/>
            <method name="modify" type="void" line="495"/>
            <method name="searchAscending" type="int" line="500"/>
            <method name="sortAscending" type="void" line="505"/>
            <method name="toScalar" type="Scalar<Double>" line="510"/>
            <method name="visit" type="void" line="515"/>
        </class>
    </source>