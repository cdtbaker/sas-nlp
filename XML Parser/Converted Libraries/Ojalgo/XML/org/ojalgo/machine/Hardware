<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.ojalgo.machine">
        <import package="java.util.Arrays"/>
        <import package="java.util.TreeSet"/>
        <import package="org.ojalgo.ProgrammingError"/>
        <import package="org.ojalgo.array.ArrayUtils"/>
        <import package="org.ojalgo.netio.ASCII"/>
        <class name="Hardware" extends="AbstractMachine" line="31">
            <implements interface="Comparable&lt;Hardware&gt;"/>
            <javadoc line="31">
                &lt;ul&gt;
                 * &lt;li&gt;The first element in the array should correspond to total system resources; the total amount of RAM and the total
                 * number of threads (Typically the same as what is returned by {@linkplain Runtime#availableProcessors()}).&lt;/li&gt;
                 * &lt;li&gt;The last element in the array should describe the L1 cache. Typically Intel processors have 32k L1 cache and AMD
                 * 64k. 1 or maybe 2 threads use/share this cache.&lt;/li&gt;
                 * &lt;li&gt;Caches, all levels except L1, are described between the first and last elements in descending order (L3 cache
                 * comes before L2 cache). Specify the size of the cache and the number of threads using/sharing the cache. (Do not
                 * worry about how many cache units there are - describe one unit.)&lt;/li&gt;
                 * &lt;li&gt;The array must have at least 2 elements. You must describe the total system resources and the L1 cache. It is
                 * strongly recommended to also describe the L2 cache. The L3 cache, if it exists, is less important to describe. The
                 * derived attributes &lt;code&gt;processors&lt;/code&gt;, &lt;code&gt;cores&lt;/code&gt; and &lt;code&gt;units&lt;/code&gt; may be incorrectly calculated
                 * if you fail to specify the caches. Known issue: If you have more than one processor, nut no L3 cache; the
                 * &lt;code&gt;processors&lt;/code&gt; attribute will be incorrectly set 1. A workaround that currently works is to define an L3
                 * cache anyway and set the memory/size of that cache to 0bytes. This workoround may stop working in the future.&lt;/li&gt;
                 * &lt;li&gt;
                 * &lt;code&gt;new MemoryThreads[] { SYSTEM, L3, L2, L1 }&lt;/code&gt; or &lt;code&gt;new MemoryThreads[] { SYSTEM, L2, L1 }&lt;/code&gt; or
                 * &lt;code&gt;new MemoryThreads[] { SYSTEM, L1 }&lt;/code&gt;&lt;/li&gt;
                 * &lt;ul&gt;                
                <@author>
                    r apete                    
                </@author>
            </javadoc>
            <declaration name="PREDEFINED" type="TreeSet&lt;Hardware&gt;" line="55"/>
            <javadoc line="55">
                Should contain all available hardware in ascending &quot;power&quot; order.                
            </javadoc>
            <declaration name="PPC__01" type="Hardware" line="60"/>
            <javadoc line="60">
                &lt;ul&gt;
                 * &lt;li&gt;CLAM / PowerBook6,5
                 * &lt;ul&gt;
                 * &lt;li&gt;&lt;/li&gt;
                 * &lt;li&gt;1 processor&lt;/li&gt;
                 * &lt;li&gt;1 core per processor&lt;/li&gt;
                 * &lt;li&gt;1 thread per core&lt;/li&gt;
                 * &lt;li&gt;==&gt;&gt; Total 2 threads&lt;/li&gt;
                 * &lt;li&gt;&lt;/li&gt;
                 * &lt;li&gt;1.25GB system RAM&lt;/li&gt;
                 * &lt;li&gt;512kB L2 cache per processor&lt;/li&gt;
                 * &lt;li&gt;64kB L1 cache per core&lt;/li&gt;
                 * &lt;/ul&gt;
                 * &lt;/li&gt;
                 * &lt;/ul&gt;                
            </javadoc>
            <declaration name="X86__01" type="Hardware" line="80"/>
            <javadoc line="80">
                &lt;ul&gt;
                 * &lt;li&gt;INTEL1
                 * &lt;ul&gt;
                 * &lt;li&gt;&lt;/li&gt;
                 * &lt;li&gt;1 processor&lt;/li&gt;
                 * &lt;li&gt;1 core per processor&lt;/li&gt;
                 * &lt;li&gt;1 thread per core&lt;/li&gt;
                 * &lt;li&gt;==&gt;&gt; Total 2 threads&lt;/li&gt;
                 * &lt;li&gt;&lt;/li&gt;
                 * &lt;li&gt;1GB system RAM&lt;/li&gt;
                 * &lt;li&gt;1MB L2 cache per processor&lt;/li&gt;
                 * &lt;li&gt;32kB L1 cache per core&lt;/li&gt;
                 * &lt;/ul&gt;
                 * &lt;/li&gt;
                 * &lt;/ul&gt;                
            </javadoc>
            <declaration name="X86__02" type="Hardware" line="100"/>
            <javadoc line="100">
                &lt;ul&gt;
                 * &lt;li&gt;B5950053
                 * &lt;ul&gt;
                 * &lt;li&gt;&lt;/li&gt;
                 * &lt;li&gt;1 processor&lt;/li&gt;
                 * &lt;li&gt;2 cores per processor&lt;/li&gt;
                 * &lt;li&gt;1 thread per core&lt;/li&gt;
                 * &lt;li&gt;==&gt;&gt; Total 2 threads&lt;/li&gt;
                 * &lt;li&gt;&lt;/li&gt;
                 * &lt;li&gt;3.5GB system RAM&lt;/li&gt;
                 * &lt;li&gt;6MB L2 cache per processor (2 cores)&lt;/li&gt;
                 * &lt;li&gt;32kB L1 cache per core&lt;/li&gt;
                 * &lt;/ul&gt;
                 * &lt;/li&gt;
                 * &lt;/ul&gt;                
            </javadoc>
            <declaration name="X86_64__02" type="Hardware" line="120"/>
            <javadoc line="120">
                &lt;ul&gt;
                 * &lt;li&gt;MANTA / iMac7,1
                 * &lt;ul&gt;
                 * &lt;li&gt;&lt;/li&gt;
                 * &lt;li&gt;1 processor&lt;/li&gt;
                 * &lt;li&gt;2 cores per processor&lt;/li&gt;
                 * &lt;li&gt;1 thread per core&lt;/li&gt;
                 * &lt;li&gt;==&gt;&gt; Total 2 threads&lt;/li&gt;
                 * &lt;li&gt;&lt;/li&gt;
                 * &lt;li&gt;3GB system RAM&lt;/li&gt;
                 * &lt;li&gt;4MB L2 cache per processor (2 cores)&lt;/li&gt;
                 * &lt;li&gt;32kB L1 cache per core&lt;/li&gt;
                 * &lt;/ul&gt;
                 * &lt;/li&gt;
                 * &lt;/ul&gt;                
            </javadoc>
            <declaration name="X86_64__04" type="Hardware" line="140"/>
            <javadoc line="140">
                &lt;ul&gt;
                 * &lt;li&gt;BUBBLE / MacBookAir4,2
                 * &lt;ul&gt;
                 * &lt;li&gt;&lt;/li&gt;
                 * &lt;li&gt;1 processors&lt;/li&gt;
                 * &lt;li&gt;2 cores per processor&lt;/li&gt;
                 * &lt;li&gt;2 threads per core&lt;/li&gt;
                 * &lt;li&gt;==&gt;&gt; Total 4 threads&lt;/li&gt;
                 * &lt;li&gt;&lt;/li&gt;
                 * &lt;li&gt;4GB system RAM&lt;/li&gt;
                 * &lt;li&gt;3MB L3 cache per processor&lt;/li&gt;
                 * &lt;li&gt;256kB L2 cache per core&lt;/li&gt;
                 * &lt;li&gt;32kB L1 cache per core&lt;/li&gt;
                 * &lt;/ul&gt;
                 * &lt;/li&gt;
                 * &lt;li&gt;Peter Abeles&apos;s (EJML) Intel Core i7-620M laptop
                 * &lt;ul&gt;
                 * &lt;li&gt;&lt;/li&gt;
                 * &lt;li&gt;1 processors&lt;/li&gt;
                 * &lt;li&gt;2 cores per processor&lt;/li&gt;
                 * &lt;li&gt;2 threads per core&lt;/li&gt;
                 * &lt;li&gt;==&gt;&gt; Total 4 threads&lt;/li&gt;
                 * &lt;li&gt;&lt;/li&gt;
                 * &lt;li&gt;8GB system RAM&lt;/li&gt;
                 * &lt;li&gt;4MB L3 cache per processor&lt;/li&gt;
                 * &lt;li&gt;256kB L2 cache per core&lt;/li&gt;
                 * &lt;li&gt;32kB L1 cache per core&lt;/li&gt;
                 * &lt;/ul&gt;
                 * &lt;/li&gt;
                 * &lt;li&gt;Peter Abeles&apos; (EJML) Q9400
                 * &lt;ul&gt;
                 * &lt;li&gt;&lt;/li&gt;
                 * &lt;li&gt;1 processors&lt;/li&gt;
                 * &lt;li&gt;4 cores per processor&lt;/li&gt;
                 * &lt;li&gt;1 thread per core&lt;/li&gt;
                 * &lt;li&gt;==&gt;&gt; Total 4 threads&lt;/li&gt;
                 * &lt;li&gt;&lt;/li&gt;
                 * &lt;li&gt;3GB system RAM&lt;/li&gt;
                 * &lt;li&gt;3MB L2 cache per 2 cores&lt;/li&gt;
                 * &lt;li&gt;32kB L1 cache per core&lt;/li&gt;
                 * &lt;/ul&gt;
                 * &lt;/li&gt;
                 * &lt;li&gt;Peter Abeles&apos; (EJML) Q6600
                 * &lt;ul&gt;
                 * &lt;li&gt;&lt;/li&gt;
                 * &lt;li&gt;1 processors&lt;/li&gt;
                 * &lt;li&gt;4 cores per processor&lt;/li&gt;
                 * &lt;li&gt;1 thread per core&lt;/li&gt;
                 * &lt;li&gt;==&gt;&gt; Total 4 threads&lt;/li&gt;
                 * &lt;li&gt;&lt;/li&gt;
                 * &lt;li&gt;8GB system RAM&lt;/li&gt;
                 * &lt;li&gt;4MB L2 cache per 2 cores&lt;/li&gt;
                 * &lt;li&gt;32kB L1 cache per core&lt;/li&gt;
                 * &lt;/ul&gt;
                 * &lt;/li&gt;
                 * &lt;/ul&gt;                
            </javadoc>
            <declaration name="X86_64__08" type="Hardware" line="201"/>
            <javadoc line="201">
                &lt;ul&gt;
                 * &lt;li&gt;Holger Arndt&apos;s (UJMP) Intel Core i7-920 server
                 * &lt;ul&gt;
                 * &lt;li&gt;&lt;/li&gt;
                 * &lt;li&gt;1 processor&lt;/li&gt;
                 * &lt;li&gt;4 cores per processor&lt;/li&gt;
                 * &lt;li&gt;2 threads per core&lt;/li&gt;
                 * &lt;li&gt;==&gt;&gt; Total 8 threads&lt;/li&gt;
                 * &lt;li&gt;&lt;/li&gt;
                 * &lt;li&gt;8GB system RAM&lt;/li&gt;
                 * &lt;li&gt;8MB L3 cache per processor&lt;/li&gt;
                 * &lt;li&gt;256kB L2 cache per core&lt;/li&gt;
                 * &lt;li&gt;32kB L1 cache per core&lt;/li&gt;
                 * &lt;/ul&gt;
                 * &lt;/li&gt;
                 * &lt;li&gt;Core i7-2600 3.4 GHz - 4 cores - 8 threads from Java Matrix Benchmark
                 * &lt;ul&gt;
                 * &lt;li&gt;&lt;/li&gt;
                 * &lt;li&gt;1 processor&lt;/li&gt;
                 * &lt;li&gt;4 cores per processor&lt;/li&gt;
                 * &lt;li&gt;2 threads per core&lt;/li&gt;
                 * &lt;li&gt;==&gt;&gt; Total 8 threads&lt;/li&gt;
                 * &lt;li&gt;&lt;/li&gt;
                 * &lt;li&gt;11GB system RAM&lt;/li&gt;
                 * &lt;li&gt;8MB L3 cache per processor&lt;/li&gt;
                 * &lt;li&gt;256kB L2 cache per core&lt;/li&gt;
                 * &lt;li&gt;32kB L1 cache per core&lt;/li&gt;
                 * &lt;/ul&gt;
                 * &lt;/li&gt;
                 * &lt;/ul&gt;                
            </javadoc>
            <declaration name="X86_64__12" type="Hardware" line="236"/>
            <javadoc line="236">
                &lt;pre&gt;
                 * &quot;Gulftown&quot; (32 nm) Model: SLBUZ (B1) 
                 * Intel Core i7-980 3.33GHz
                 * 8/25/2010
                 * ref: http://ark.intel.com/products/47932
                 * https://en.wikipedia.org/wiki/List_of_Intel_Core_i7_microprocessors
                 * Device Manager
                 * &lt;/pre&gt;
                 * &lt;ul&gt;
                 * &lt;li&gt;Intel Core i7-980
                 * &lt;ul&gt;
                 * &lt;li&gt;1 processor&lt;/li&gt;
                 * &lt;li&gt;6 cores per processor&lt;/li&gt;
                 * &lt;li&gt;2 threads per core&lt;/li&gt;
                 * &lt;li&gt;==&gt;&gt; Total 12 threads&lt;/li&gt;
                 * &lt;li&gt;&lt;/li&gt;
                 * &lt;li&gt;12GB system RAM&lt;/li&gt;
                 * &lt;li&gt;12MB L3 cache per processor&lt;/li&gt;
                 * &lt;li&gt;256kB L2 cache per core (x6)&lt;/li&gt;
                 * &lt;li&gt;32kB L1 cache per core (x6)&lt;/li&gt;
                 * &lt;/ul&gt;
                 * &lt;/li&gt;
                 * &lt;/ul&gt;                
            </javadoc>
            <declaration name="X86_64__16" type="Hardware" line="264"/>
            <javadoc line="264">
                &lt;ul&gt;
                 * &lt;li&gt;SAILFISH / MacPro4,1
                 * &lt;ul&gt;
                 * &lt;li&gt;&lt;/li&gt;
                 * &lt;li&gt;2 processors&lt;/li&gt;
                 * &lt;li&gt;4 cores per processor&lt;/li&gt;
                 * &lt;li&gt;2 threads per core&lt;/li&gt;
                 * &lt;li&gt;==&gt;&gt; Total 16 threads&lt;/li&gt;
                 * &lt;li&gt;&lt;/li&gt;
                 * &lt;li&gt;12GB system RAM&lt;/li&gt;
                 * &lt;li&gt;8MB L3 cache per processor&lt;/li&gt;
                 * &lt;li&gt;256kB L2 cache per core&lt;/li&gt;
                 * &lt;li&gt;32kB L1 cache per core&lt;/li&gt;
                 * &lt;/ul&gt;
                 * &lt;/li&gt;
                 * &lt;/ul&gt;                
            </javadoc>
            <scope line="285"/>
            <method name="makeSimple" type="Hardware" line="296"/>
            <method name="makeSimple" type="Hardware" line="300">
                <scope line="302">
                    <declaration name="tmpL1Machine" type="BasicMachine" line="305"/>
                    <declaration name="tmpL2Machine" type="BasicMachine" line="307"/>
                    <declaration name="tmpL3Machine" type="BasicMachine" line="309"/>
                    <declaration name="tmpSystemMachine" type="BasicMachine" line="311"/>
                </scope>
                <scope line="315">
                    <declaration name="tmpL1Machine" type="BasicMachine" line="318"/>
                    <declaration name="tmpL2Machine" type="BasicMachine" line="320"/>
                    <declaration name="tmpL3Machine" type="BasicMachine" line="322"/>
                    <declaration name="tmpSystemMachine" type="BasicMachine" line="324"/>
                </scope>
                <scope line="328">
                    <declaration name="tmpL1Machine" type="BasicMachine" line="331"/>
                    <declaration name="tmpL2Machine" type="BasicMachine" line="333"/>
                    <declaration name="tmpSystemMachine" type="BasicMachine" line="335"/>
                </scope>
            </method>
            <declaration name="myLevels" type="BasicMachine[]" line="341"/>
            <javadoc line="343">
                &lt;code&gt;new BasicMachine[] { SYSTEM, L3, L2, L1 }&lt;/code&gt; or &lt;code&gt;new BasicMachine[] { SYSTEM, L2, L1 }&lt;/code&gt; or
                 * in worst case &lt;code&gt;new BasicMachine[] { SYSTEM, L1 }&lt;/code&gt;                
            </javadoc>
            <method name="Hardware" type="constructor" line="347">
                <scope line="351"/>
            </method>
            <method name="Hardware" type="constructor" line="358"/>
            <method name="compareTo" type="int" line="367">
                <scope line="368"/>
                <scope line="370"/>
                <scope line="372"/>
                <scope line="374"/>
                <scope line="376"/>
                <scope line="378"/>
            </method>
            <method name="equals" type="boolean" line="384">
                <scope line="385"/>
                <scope line="388"/>
                <scope line="391"/>
                <declaration name="other" type="Hardware" line="394"/>
                <scope line="395"/>
            </method>
            <method name="hashCode" type="int" line="402">
                <declaration name="prime" type="int" line="403"/>
                <declaration name="result" type="int" line="404"/>
            </method>
            <method name="isL2Specified" type="boolean" line="409"/>
            <method name="isL3Specified" type="boolean" line="413"/>
            <method name="toString" type="String" line="418">
                <declaration name="retVal" type="StringBuilder" line="420"/>
                <scope line="423"/>
                <scope line="425"/>
            </method>
            <method name="virtualise" type="VirtualMachine" line="433"/>
        </class>
    </source>