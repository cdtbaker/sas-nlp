<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.ojalgo.finance">
        <import package="org.ojalgo.constant.PrimitiveMath"/>
        <import package="java.math.BigDecimal"/>
        <import package="java.util.ArrayList"/>
        <import package="java.util.Calendar"/>
        <import package="java.util.Collection"/>
        <import package="java.util.Date"/>
        <import package="java.util.Map.Entry"/>
        <import package="org.ojalgo.access.Access1D"/>
        <import package="org.ojalgo.access.Access2D"/>
        <import package="org.ojalgo.access.Access2D.Builder"/>
        <import package="org.ojalgo.array.Array1D"/>
        <import package="org.ojalgo.array.ArrayUtils"/>
        <import package="org.ojalgo.constant.PrimitiveMath"/>
        <import package="org.ojalgo.function.PrimitiveFunction"/>
        <import package="org.ojalgo.matrix.BasicMatrix"/>
        <import package="org.ojalgo.matrix.PrimitiveMatrix"/>
        <import package="org.ojalgo.matrix.decomposition.Eigenvalue"/>
        <import package="org.ojalgo.matrix.decomposition.EigenvalueDecomposition"/>
        <import package="org.ojalgo.matrix.store.MatrixStore"/>
        <import package="org.ojalgo.matrix.store.PhysicalStore"/>
        <import package="org.ojalgo.random.Deterministic"/>
        <import package="org.ojalgo.random.RandomNumber"/>
        <import package="org.ojalgo.random.RandomUtils"/>
        <import package="org.ojalgo.random.SampleSet"/>
        <import package="org.ojalgo.random.process.GeometricBrownianMotion"/>
        <import package="org.ojalgo.series.CalendarDateSeries"/>
        <import package="org.ojalgo.series.CoordinationSet"/>
        <import package="org.ojalgo.type.CalendarDate"/>
        <import package="org.ojalgo.type.CalendarDateUnit"/>
        <class name="FinanceUtils" line="56">
            <method name="calculateValueAtRisk" type="double" line="58">
                <params>
                    <param name="aReturn" type="double"/>
                    <param name="aStdDev" type="double"/>
                    <param name="aConfidence" type="double"/>
                    <param name="aTime" type="double"/>
                </params>
                <declaration name="tmpConfidenceScale" type="double" line="60"/>
            </method>
            <method name="estimateExcessDiffusionProcess" type="GeometricBrownianMotion" line="66">
                <params>
                    <param name="aPriceSeries" type="CalendarDateSeries<?>"/>
                    <param name="aRiskFreeInterestRateSeries" type="CalendarDateSeries<?>"/>
                    <param name="aTimeUnit" type="CalendarDateUnit"/>
                </params>
                <comment line="67">
                    The average number of millis between to subsequent keys in the series.                    
                </comment>
                <comment line="67">
                    The time between to keys expressed in terms of the specified time meassure and unit.                    
                </comment>
                <declaration name="tmpSampleSet" type="SampleSet" line="68"/>
                <declaration name="tmpStepSize" type="double" line="71"/>
                <declaration name="tmpExp" type="double" line="75"/>
                <declaration name="tmpVar" type="double" line="76"/>
                <declaration name="tmpDiff" type="double" line="78"/>
                <declaration name="tmpDrift" type="double" line="79"/>
                <declaration name="retVal" type="GeometricBrownianMotion" line="81"/>
            </method>
            <method name="forecast" type="CalendarDateSeries<RandomNumber>" line="87">
                <params>
                    <param name="aSeries" type="CalendarDateSeries<? extends Number>"/>
                    <param name="aPointCount" type="int"/>
                    <param name="aTimeUnit" type="CalendarDateUnit"/>
                    <param name="includeOriginalSeries" type="boolean"/>
                </params>
                <declaration name="retVal" type="CalendarDateSeries&lt;RandomNumber&gt;" line="89"/>
                <declaration name="tmpSamplePeriod" type="double" line="92"/>
                <declaration name="tmpProcess" type="GeometricBrownianMotion" line="93"/>
                <scope line="95">
                    <scope line="96"/>
                </scope>
                <declaration name="tmpLastKey" type="CalendarDate" line="101"/>
                <declaration name="tmpLastValue" type="double" line="102"/>
                <scope line="106"/>
            </method>
            <method name="makeCalendarPriceSeries" type="CalendarDateSeries<BigDecimal>" line="114">
                <params>
                    <param name="somePrices" type="double[]"/>
                    <param name="aStartCalendar" type="Calendar"/>
                    <param name="aResolution" type="CalendarDateUnit"/>
                </params>
                <declaration name="retVal" type="CalendarDateSeries&lt;BigDecimal&gt;" line="116"/>
            </method>
            <javadoc line="123">
                @param timeSeriesCollection                
                <@return>
                    n Annualised covariances                    
                </@return>
            </javadoc>
            <method name="makeCovarianceMatrix" type="BasicMatrix<?>" line="127">
                <params>
                    <param name="timeSeriesCollection" type="Collection<CalendarDateSeries<V>>"/>
                </params>
                <declaration name="tmpCoordinator" type="CoordinationSet&lt;V&gt;" line="129"/>
                <declaration name="tmpSampleSets" type="ArrayList&lt;SampleSet&gt;" line="131"/>
                <scope line="132">
                    <declaration name="someValues" type="double[]" line="133"/>
                    <declaration name="tmpSize1" type="int" line="134"/>
                    <declaration name="retVal" type="double[]" line="136"/>
                    <scope line="138"/>
                    <declaration name="tmpMakeUsingLogarithmicChanges" type="SampleSet" line="141"/>
                </scope>
                <declaration name="tmpSize" type="int" line="145"/>
                <declaration name="retValStore" type="Access2D.Builder&lt;PrimitiveMatrix&gt;" line="147"/>
                <declaration name="tmpToYearFactor" type="double" line="149"/>
                <declaration name="tmpRowSet" type="SampleSet" line="151"/>
                <declaration name="tmpColSet" type="SampleSet" line="152"/>
                <scope line="154">
                    <scope line="158"/>
                </scope>
            </method>
            <method name="makeDatePriceSeries" type="CalendarDateSeries<BigDecimal>" line="169">
                <params>
                    <param name="somePrices" type="double[]"/>
                    <param name="aStartDate" type="Date"/>
                    <param name="aResolution" type="CalendarDateUnit"/>
                </params>
                <declaration name="retVal" type="CalendarDateSeries&lt;BigDecimal&gt;" line="171"/>
            </method>
            <javadoc line="178">
                @param aPriceSeries A series of prices                
                <@param>
                    m aRiskFreeInterestRateSeries A series of interest rates (risk free return expressed in %, 5.0 means 5.0%
                      annualized risk free return)                    
                </@param>
                <@return>
                    n A sample set of price growth rates adjusted for risk free return                    
                </@return>
            </javadoc>
            <method name="makeExcessGrowthRateSampleSet" type="SampleSet" line="184">
                <params>
                    <param name="aPriceSeries" type="CalendarDateSeries<?>"/>
                    <param name="aRiskFreeInterestRateSeries" type="CalendarDateSeries<?>"/>
                </params>
                <scope line="186"/>
                <scope line="190"/>
                <scope line="194"/>
                <declaration name="tmpPrices" type="double[]" line="198"/>
                <declaration name="tmpRiskFreeInterestRates" type="double[]" line="199"/>
                <declaration name="retVal" type="Array1D&lt;Double&gt;" line="201"/>
                <declaration name="tmpUnit" type="CalendarDateUnit" line="203"/>
                <declaration name="tmpThisRiskFree" type="double" line="204"/>
                <scope line="206"/>
            </method>
            <javadoc line="226">
                @param aPriceSeries A series of prices                
                <@param>
                    m aRiskFreeInterestRateSeries A series of interest rates (risk free return expressed in %, 5.0 means 5.0%
                      annualized risk free return)                    
                </@param>
                <@return>
                    n A sample set of price growth rates adjusted for risk free return                    
                </@return>
            </javadoc>
            <method name="makeNormalisedExcessPrice" type="CalendarDateSeries<Double>" line="233">
                <params>
                    <param name="aPriceSeries" type="CalendarDateSeries<?>"/>
                    <param name="aRiskFreeInterestRateSeries" type="CalendarDateSeries<?>"/>
                </params>
                <scope line="235"/>
                <scope line="239"/>
                <scope line="243"/>
                <declaration name="tmpDates" type="long[]" line="247"/>
                <declaration name="tmpPrices" type="double[]" line="248"/>
                <declaration name="tmpRiskFreeInterestRates" type="double[]" line="249"/>
                <declaration name="tmpResolution" type="CalendarDateUnit" line="251"/>
                <declaration name="retVal" type="CalendarDateSeries&lt;Double&gt;" line="253"/>
                <declaration name="tmpThisRiskFree" type="double" line="255"/>
                <declaration name="tmpAggregatedExcessPrice" type="double" line="257"/>
                <scope line="259"/>
            </method>
            <javadoc line="280">
                GrowthRate = ln(GrowthFactor)                
                <@param>
                    m growthFactor A growth factor per unit (day, week, month, year...)                    
                </@param>
                <@param>
                    m growthFactorUnit A growth factor unit                    
                </@param>
                <@return>
                    n Annualised return (percentage per year)                    
                </@return>
            </javadoc>
            <method name="toAnnualReturnFromGrowthFactor" type="double" line="287">
                <params>
                    <param name="growthFactor" type="double"/>
                    <param name="growthFactorUnit" type="CalendarDateUnit"/>
                </params>
                <declaration name="tmpGrowthFactorUnitsPerYear" type="double" line="288"/>
            </method>
            <javadoc line="292">
                AnnualReturn = exp(GrowthRate  GrowthRateUnitsPerYear) - 1.0                
                <@param>
                    m growthRate A growth rate per unit (day, week, month, year...)                    
                </@param>
                <@param>
                    m growthRateUnit A growth rate unit                    
                </@param>
                <@return>
                    n Annualised return (percentage per year)                    
                </@return>
            </javadoc>
            <method name="toAnnualReturnFromGrowthRate" type="double" line="299">
                <params>
                    <param name="growthRate" type="double"/>
                    <param name="growthRateUnit" type="CalendarDateUnit"/>
                </params>
                <declaration name="tmpGrowthRateUnitsPerYear" type="double" line="300"/>
            </method>
            <method name="toAssetVolatilities" type="PrimitiveMatrix" line="304">
                <params>
                    <param name="covariances" type="Access2D<?>"/>
                </params>
                <declaration name="tmpSize" type="int" line="306"/>
                <declaration name="retVal" type="Builder&lt;PrimitiveMatrix&gt;" line="308"/>
                <scope line="310"/>
            </method>
            <method name="toCorrelations" type="PrimitiveMatrix" line="317">
                <params>
                    <param name="covariances" type="Access2D<?>"/>
                    <param name="clean" type="boolean"/>
                </params>
                <declaration name="tmpSize" type="int" line="319"/>
                <declaration name="tmpCovariances" type="Access2D&lt;?&gt;" line="321"/>
                <scope line="323">
                    <declaration name="tmpEvD" type="Eigenvalue&lt;Double&gt;" line="325"/>
                    <declaration name="tmpV" type="MatrixStore&lt;Double&gt;" line="328"/>
                    <declaration name="tmpD" type="PhysicalStore&lt;Double&gt;" line="329"/>
                    <declaration name="tmpLargest" type="double" line="331"/>
                    <declaration name="tmpLimit" type="double" line="332"/>
                    <scope line="334">
                        <scope line="335"/>
                    </scope>
                    <declaration name="tmpLeft" type="MatrixStore&lt;Double&gt;" line="340"/>
                    <declaration name="tmpMiddle" type="MatrixStore&lt;Double&gt;" line="341"/>
                    <declaration name="tmpRight" type="MatrixStore&lt;Double&gt;" line="342"/>
                </scope>
                <declaration name="retVal" type="Builder&lt;PrimitiveMatrix&gt;" line="347"/>
                <declaration name="tmpVolatilities" type="double[]" line="349"/>
                <scope line="350"/>
                <scope line="354">
                    <declaration name="tmpColVol" type="double" line="355"/>
                    <scope line="357">
                        <declaration name="tmpCovariance" type="double" line="358"/>
                        <declaration name="tmpCorrelation" type="double" line="359"/>
                    </scope>
                </scope>
            </method>
            <method name="toCovariances" type="PrimitiveMatrix" line="368">
                <params>
                    <param name="assetVolatilities" type="Access1D<?>"/>
                    <param name="correlations" type="Access2D<?>"/>
                </params>
                <declaration name="tmpSize" type="int" line="370"/>
                <declaration name="retVal" type="Builder&lt;PrimitiveMatrix&gt;" line="372"/>
                <scope line="374">
                    <declaration name="tmpColumnVolatility" type="double" line="375"/>
                    <scope line="377">
                        <declaration name="tmpCovariance" type="double" line="378"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="387">
                GrowthFactor = exp(GrowthRate)                
                <@param>
                    m annualReturn Annualised return (percentage per year)                    
                </@param>
                <@param>
                    m growthFactorUnit A growth factor unit                    
                </@param>
                <@return>
                    n A growth factor per unit (day, week, month, year...)                    
                </@return>
            </javadoc>
            <method name="toGrowthFactorFromAnnualReturn" type="double" line="394">
                <params>
                    <param name="annualReturn" type="double"/>
                    <param name="growthFactorUnit" type="CalendarDateUnit"/>
                </params>
                <declaration name="tmpAnnualGrowthFactor" type="double" line="395"/>
                <declaration name="tmpYearsPerGrowthFactorUnit" type="double" line="396"/>
            </method>
            <javadoc line="400">
                GrowthRate = ln(1.0 + InterestRate) / GrowthRateUnitsPerYear                
                <@param>
                    m annualReturn Annualised return (percentage per year)                    
                </@param>
                <@param>
                    m growthRateUnit A growth rate unit                    
                </@param>
                <@return>
                    n A growth rate per unit (day, week, month, year...)                    
                </@return>
            </javadoc>
            <method name="toGrowthRateFromAnnualReturn" type="double" line="407">
                <params>
                    <param name="annualReturn" type="double"/>
                    <param name="growthRateUnit" type="CalendarDateUnit"/>
                </params>
                <declaration name="tmpAnnualGrowthRate" type="double" line="408"/>
                <declaration name="tmpYearsPerGrowthRateUnit" type="double" line="409"/>
            </method>
            <method name="copyValues" type="void" line="414">
                <params>
                    <param name="aSeries" type="CalendarDateSeries<BigDecimal>"/>
                    <param name="aFirstKey" type="CalendarDate"/>
                    <param name="someValues" type="double[]"/>
                </params>
                <declaration name="tmpKey" type="CalendarDate" line="416"/>
                <scope line="418"/>
            </method>
            <method name="FinanceUtils" type="constructor" line="426"/>
        </class>
    </source>