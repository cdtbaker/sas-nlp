<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.ojalgo.matrix.store">
        <import package="java.math.BigDecimal"/>
        <import package="org.ojalgo.ProgrammingError"/>
        <import package="org.ojalgo.access.Access1D"/>
        <import package="org.ojalgo.constant.PrimitiveMath"/>
        <import package="org.ojalgo.scalar.ComplexNumber"/>
        <import package="org.ojalgo.scalar.Scalar"/>
        <class name="ZeroStore" extends="FactoryStore<N>" line="32">
            <javadoc line="32">
                ZeroStore                
                <@author>
                    r apete                    
                </@author>
            </javadoc>
            <interface name="Factory">
                <method name="make" type="ZeroStore<N>" line="41"/>
            </interface>
            <declaration name="PRIMITIVE" type="ZeroStore.Factory&lt;Double&gt;" line="45"/>
            <anonymous_class line="45">
                <method name="make" type="ZeroStore<Double>" line="47"/>
            </anonymous_class>
            <declaration name="BIG" type="ZeroStore.Factory&lt;BigDecimal&gt;" line="53"/>
            <anonymous_class line="53">
                <method name="make" type="ZeroStore<BigDecimal>" line="55"/>
            </anonymous_class>
            <declaration name="COMPLEX" type="ZeroStore.Factory&lt;ComplexNumber&gt;" line="61"/>
            <anonymous_class line="61">
                <method name="make" type="ZeroStore<ComplexNumber>" line="63"/>
            </anonymous_class>
            <method name="makeBig" type="ZeroStore<BigDecimal>" line="69"/>
            <method name="makeComplex" type="ZeroStore<ComplexNumber>" line="73"/>
            <method name="makePrimitive" type="ZeroStore<Double>" line="78"/>
            <declaration name="myNumberZero" type="N" line="82"/>
            <declaration name="myScalarZero" type="Scalar&lt;N&gt;" line="83"/>
            <method name="ZeroStore" type="constructor" line="85"/>
            <method name="ZeroStore" type="constructor" line="94"/>
            <method name="conjugate" type="PhysicalStore<N>" line="102"/>
            <method name="copy" type="PhysicalStore<N>" line="107"/>
            <method name="doubleValue" type="double" line="112"/>
            <method name="doubleValue" type="double" line="116"/>
            <method name="get" type="N" line="120"/>
            <method name="isLowerLeftShaded" type="boolean" line="124"/>
            <method name="isUpperRightShaded" type="boolean" line="128"/>
            <method name="multiplyLeft" type="ZeroStore<N>" line="133"/>
            <method name="multiplyRight" type="ZeroStore<N>" line="138"/>
            <method name="toScalar" type="Scalar<N>" line="142"/>
            <method name="transpose" type="PhysicalStore<N>" line="147"/>
        </class>
    </source>