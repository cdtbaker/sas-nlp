<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.ojalgo.matrix.store.operation">
        <import package="java.math.BigDecimal"/>
        <import package="org.ojalgo.access.Access1D"/>
        <import package="org.ojalgo.concurrent.DivideAndConquer"/>
        <import package="org.ojalgo.constant.BigMath"/>
        <import package="org.ojalgo.constant.PrimitiveMath"/>
        <import package="org.ojalgo.function.BigFunction"/>
        <import package="org.ojalgo.matrix.store.BigDenseStore.BigMultiplyLeft"/>
        <import package="org.ojalgo.matrix.store.ComplexDenseStore.ComplexMultiplyLeft"/>
        <import package="org.ojalgo.matrix.store.PrimitiveDenseStore.PrimitiveMultiplyLeft"/>
        <import package="org.ojalgo.scalar.ComplexNumber"/>
        <class name="MultiplyLeft" extends="MatrixOperation" line="36">
            <declaration name="THRESHOLD" type="int" line="38"/>
            <declaration name="BIG" type="BigMultiplyLeft" line="40"/>
            <anonymous_class line="40">
                <method name="invoke" type="void" line="42"/>
            </anonymous_class>
            <declaration name="BIG_MT" type="BigMultiplyLeft" line="48"/>
            <anonymous_class line="48">
                <method name="invoke" type="void" line="50">
                    <anonymous_class line="52">
                        <method name="conquer" type="void" line="55"/>
                    </anonymous_class>
                    <declaration name="tmpConquerer" type="DivideAndConquer" line="52"/>
                </method>
            </anonymous_class>
            <declaration name="COMPLEX" type="ComplexMultiplyLeft" line="65"/>
            <anonymous_class line="65">
                <method name="invoke" type="void" line="67"/>
            </anonymous_class>
            <declaration name="COMPLEX_MT" type="ComplexMultiplyLeft" line="73"/>
            <anonymous_class line="73">
                <method name="invoke" type="void" line="75">
                    <anonymous_class line="77">
                        <method name="conquer" type="void" line="80"/>
                    </anonymous_class>
                    <declaration name="tmpConquerer" type="DivideAndConquer" line="77"/>
                </method>
            </anonymous_class>
            <declaration name="PRIMITIVE" type="PrimitiveMultiplyLeft" line="90"/>
            <anonymous_class line="90">
                <method name="invoke" type="void" line="92"/>
            </anonymous_class>
            <declaration name="PRIMITIVE_1X1" type="PrimitiveMultiplyLeft" line="98"/>
            <anonymous_class line="98">
                <method name="invoke" type="void" line="100">
                    <comment line="101">
                        nal int tmpLeftStruct = ((int) left.count()) / complexity; // The number of rows in the product- and left-matrix.                        
                    </comment>
                    <declaration name="tmp00" type="double" line="102"/>
                    <declaration name="tmpLeftStruct" type="int" line="104"/>
                    <scope line="106"/>
                </method>
            </anonymous_class>
            <declaration name="PRIMITIVE_2X2" type="PrimitiveMultiplyLeft" line="115"/>
            <anonymous_class line="115">
                <method name="invoke" type="void" line="117">
                    <comment line="118">
                        nal long tmpLeftStruct = left.count() / complexity; // The number of rows in the product- and left-matrix.                        
                    </comment>
                    <declaration name="tmp00" type="double" line="119"/>
                    <declaration name="tmp10" type="double" line="120"/>
                    <declaration name="tmp01" type="double" line="121"/>
                    <declaration name="tmp11" type="double" line="122"/>
                    <declaration name="tmpLeftStruct" type="long" line="124"/>
                    <declaration name="tmpIndex" type="int" line="126"/>
                    <scope line="127">
                        <declaration name="tmpLeft0" type="double" line="130"/>
                        <declaration name="tmpLeft1" type="double" line="132"/>
                        <declaration name="tmpRight0" type="double" line="134"/>
                        <declaration name="tmpRight1" type="double" line="136"/>
                    </scope>
                </method>
            </anonymous_class>
            <declaration name="PRIMITIVE_3X3" type="PrimitiveMultiplyLeft" line="152"/>
            <anonymous_class line="152">
                <method name="invoke" type="void" line="154">
                    <comment line="155">
                        nal long tmpLeftStruct = left.count() / complexity; // The number of rows in the product- and left-matrix.                        
                    </comment>
                    <declaration name="tmp00" type="double" line="156"/>
                    <declaration name="tmp10" type="double" line="157"/>
                    <declaration name="tmp20" type="double" line="158"/>
                    <declaration name="tmp01" type="double" line="159"/>
                    <declaration name="tmp11" type="double" line="160"/>
                    <declaration name="tmp21" type="double" line="161"/>
                    <declaration name="tmp02" type="double" line="162"/>
                    <declaration name="tmp12" type="double" line="163"/>
                    <declaration name="tmp22" type="double" line="164"/>
                    <declaration name="tmpLeftStruct" type="long" line="166"/>
                    <declaration name="tmpIndex" type="int" line="168"/>
                    <scope line="169">
                        <declaration name="tmpLeft0" type="double" line="172"/>
                        <declaration name="tmpLeft1" type="double" line="174"/>
                        <declaration name="tmpLeft2" type="double" line="176"/>
                        <declaration name="tmpRight0" type="double" line="178"/>
                        <declaration name="tmpRight1" type="double" line="180"/>
                        <declaration name="tmpRight2" type="double" line="182"/>
                    </scope>
                </method>
            </anonymous_class>
            <declaration name="PRIMITIVE_4X4" type="PrimitiveMultiplyLeft" line="208"/>
            <anonymous_class line="208">
                <method name="invoke" type="void" line="210">
                    <comment line="211">
                        nal long tmpLeftStruct = left.count() / complexity; // The number of rows in the product- and left-matrix.                        
                    </comment>
                    <declaration name="tmp00" type="double" line="212"/>
                    <declaration name="tmp10" type="double" line="213"/>
                    <declaration name="tmp20" type="double" line="214"/>
                    <declaration name="tmp30" type="double" line="215"/>
                    <declaration name="tmp01" type="double" line="216"/>
                    <declaration name="tmp11" type="double" line="217"/>
                    <declaration name="tmp21" type="double" line="218"/>
                    <declaration name="tmp31" type="double" line="219"/>
                    <declaration name="tmp02" type="double" line="220"/>
                    <declaration name="tmp12" type="double" line="221"/>
                    <declaration name="tmp22" type="double" line="222"/>
                    <declaration name="tmp32" type="double" line="223"/>
                    <declaration name="tmp03" type="double" line="224"/>
                    <declaration name="tmp13" type="double" line="225"/>
                    <declaration name="tmp23" type="double" line="226"/>
                    <declaration name="tmp33" type="double" line="227"/>
                    <declaration name="tmpLeftStruct" type="long" line="229"/>
                    <declaration name="tmpIndex" type="int" line="231"/>
                    <scope line="232">
                        <declaration name="tmpLeft0" type="double" line="235"/>
                        <declaration name="tmpLeft1" type="double" line="237"/>
                        <declaration name="tmpLeft2" type="double" line="239"/>
                        <declaration name="tmpLeft3" type="double" line="241"/>
                        <declaration name="tmpRight0" type="double" line="243"/>
                        <declaration name="tmpRight1" type="double" line="245"/>
                        <declaration name="tmpRight2" type="double" line="247"/>
                        <declaration name="tmpRight3" type="double" line="249"/>
                    </scope>
                </method>
            </anonymous_class>
            <declaration name="PRIMITIVE_5X5" type="PrimitiveMultiplyLeft" line="289"/>
            <anonymous_class line="289">
                <method name="invoke" type="void" line="291">
                    <comment line="292">
                        nal long tmpLeftStruct = left.count() / complexity; // The number of rows in the product- and left-matrix.                        
                    </comment>
                    <declaration name="tmp00" type="double" line="293"/>
                    <declaration name="tmp10" type="double" line="294"/>
                    <declaration name="tmp20" type="double" line="295"/>
                    <declaration name="tmp30" type="double" line="296"/>
                    <declaration name="tmp40" type="double" line="297"/>
                    <declaration name="tmp01" type="double" line="298"/>
                    <declaration name="tmp11" type="double" line="299"/>
                    <declaration name="tmp21" type="double" line="300"/>
                    <declaration name="tmp31" type="double" line="301"/>
                    <declaration name="tmp41" type="double" line="302"/>
                    <declaration name="tmp02" type="double" line="303"/>
                    <declaration name="tmp12" type="double" line="304"/>
                    <declaration name="tmp22" type="double" line="305"/>
                    <declaration name="tmp32" type="double" line="306"/>
                    <declaration name="tmp42" type="double" line="307"/>
                    <declaration name="tmp03" type="double" line="308"/>
                    <declaration name="tmp13" type="double" line="309"/>
                    <declaration name="tmp23" type="double" line="310"/>
                    <declaration name="tmp33" type="double" line="311"/>
                    <declaration name="tmp43" type="double" line="312"/>
                    <declaration name="tmp04" type="double" line="313"/>
                    <declaration name="tmp14" type="double" line="314"/>
                    <declaration name="tmp24" type="double" line="315"/>
                    <declaration name="tmp34" type="double" line="316"/>
                    <declaration name="tmp44" type="double" line="317"/>
                    <declaration name="tmpLeftStruct" type="long" line="319"/>
                    <declaration name="tmpIndex" type="int" line="321"/>
                    <scope line="322">
                        <declaration name="tmpLeft0" type="double" line="325"/>
                        <declaration name="tmpLeft1" type="double" line="327"/>
                        <declaration name="tmpLeft2" type="double" line="329"/>
                        <declaration name="tmpLeft3" type="double" line="331"/>
                        <declaration name="tmpLeft4" type="double" line="333"/>
                        <declaration name="tmpRight0" type="double" line="335"/>
                        <declaration name="tmpRight1" type="double" line="337"/>
                        <declaration name="tmpRight2" type="double" line="339"/>
                        <declaration name="tmpRight3" type="double" line="341"/>
                        <declaration name="tmpRight4" type="double" line="343"/>
                    </scope>
                </method>
            </anonymous_class>
            <declaration name="PRIMITIVE_MT" type="PrimitiveMultiplyLeft" line="401"/>
            <anonymous_class line="401">
                <method name="invoke" type="void" line="403">
                    <anonymous_class line="405">
                        <method name="conquer" type="void" line="408"/>
                    </anonymous_class>
                    <declaration name="tmpConquerer" type="DivideAndConquer" line="405"/>
                </method>
            </anonymous_class>
            <method name="getBig" type="BigMultiplyLeft" line="418">
                <scope line="419"/>
                <scope line="421"/>
            </method>
            <method name="getComplex" type="ComplexMultiplyLeft" line="426">
                <scope line="427"/>
                <scope line="429"/>
            </method>
            <method name="getPrimitive" type="PrimitiveMultiplyLeft" line="434">
                <scope line="435"/>
                <scope line="437"/>
                <scope line="439"/>
                <scope line="441"/>
                <scope line="443"/>
                <scope line="445"/>
                <scope line="447"/>
            </method>
            <method name="invoke" type="void" line="453">
                <declaration name="tmpRowDim" type="int" line="455"/>
                <declaration name="tmpColDim" type="int" line="456"/>
                <declaration name="tmpLeftRow" type="BigDecimal[]" line="458"/>
                <declaration name="tmpIndex" type="int" line="459"/>
                <declaration name="tmpVal" type="BigDecimal" line="460"/>
                <scope line="462">
                    <scope line="464"/>
                    <scope line="468">
                        <scope line="471"/>
                    </scope>
                </scope>
            </method>
            <method name="invoke" type="void" line="480">
                <declaration name="tmpRowDim" type="int" line="482"/>
                <declaration name="tmpColDim" type="int" line="483"/>
                <declaration name="tmpLeftRow" type="ComplexNumber[]" line="485"/>
                <declaration name="tmpIndex" type="int" line="486"/>
                <declaration name="tmpVal" type="ComplexNumber" line="487"/>
                <scope line="489">
                    <scope line="491"/>
                    <scope line="495">
                        <scope line="498"/>
                    </scope>
                </scope>
            </method>
            <method name="invoke" type="void" line="506">
                <declaration name="tmpRowDim" type="int" line="508"/>
                <declaration name="tmpColDim" type="int" line="509"/>
                <declaration name="tmpLeftRow" type="double[]" line="511"/>
                <declaration name="tmpIndex" type="int" line="512"/>
                <declaration name="tmpVal" type="double" line="513"/>
                <scope line="515">
                    <scope line="517"/>
                    <scope line="521">
                        <scope line="524"/>
                    </scope>
                </scope>
            </method>
            <method name="MultiplyLeft" type="constructor" line="532"/>
        </class>
    </source>