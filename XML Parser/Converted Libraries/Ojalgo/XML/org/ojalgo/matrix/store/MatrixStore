<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.ojalgo.matrix.store">
        <import package="org.ojalgo.ProgrammingError"/>
        <import package="org.ojalgo.access.Access1D"/>
        <import package="org.ojalgo.access.Access2D"/>
        <import package="org.ojalgo.function.UnaryFunction"/>
        <import package="org.ojalgo.function.VoidFunction"/>
        <import package="org.ojalgo.function.aggregator.Aggregator"/>
        <import package="org.ojalgo.scalar.Scalar"/>
        <import package="org.ojalgo.type.context.NumberContext"/>
        <interface name="MatrixStore">
            <implements interface="Access2D&lt;N&gt;"/>
            <javadoc line="33">
                &lt;p&gt;
                 * A {@linkplain MatrixStore} extends {@linkplain Access2D} (as well as {@linkplain Access2D.Visitable} and{@linkplain Access2D.Elements}) and defines matrix addition and matrix multiplication.
                 * &lt;/p&gt;
                 * &lt;p&gt;
                 * A {@linkplain MatrixStore} is a matrix (two-dimensional) store of numbers/scalars.
                 * &lt;/p&gt;
                 * &lt;p&gt;
                 * This interface does not define any methods that require implementations to alter the matrix. Either the methods
                 * return matrix elements, some meta data or produce new instances.
                 * &lt;/p&gt;
                 * &lt;p&gt;
                 * The methods {@linkplain #conjugate()}, {@linkplain #copy()} and {@linkplain #transpose()} return{@linkplain PhysicalStore} instances. {@linkplain PhysicalStore} extends {@linkplain MatrixStore}. It defines
                 * additional methods, and is mutable.
                 * &lt;/p&gt;                
                <@author>
                    r apete                    
                </@author>
            </javadoc>
            <class name="Builder" line="55">
                <method name="buildColumn" type="MatrixStore<N>" line="57">
                    <declaration name="retVal" type="MatrixStore&lt;N&gt;" line="58"/>
                    <scope line="59"/>
                    <declaration name="tmpRowDim" type="int" line="62"/>
                    <scope line="63"/>
                </method>
                <method name="buildColumn" type="MatrixStore<N>" line="69">
                    <declaration name="retVal" type="MatrixStore&lt;N&gt;" line="70"/>
                    <declaration name="tmpRowDim" type="int" line="71"/>
                    <scope line="72"/>
                </method>
                <method name="buildRow" type="MatrixStore<N>" line="78">
                    <declaration name="retVal" type="MatrixStore&lt;N&gt;" line="79"/>
                    <scope line="80"/>
                    <declaration name="tmpColDim" type="int" line="83"/>
                    <scope line="84"/>
                </method>
                <method name="buildRow" type="MatrixStore<N>" line="90">
                    <declaration name="retVal" type="MatrixStore&lt;N&gt;" line="91"/>
                    <declaration name="tmpColDim" type="int" line="92"/>
                    <scope line="93"/>
                </method>
                <declaration name="myStore" type="MatrixStore&lt;N&gt;" line="99"/>
                <method name="Builder" type="constructor" line="101"/>
                <method name="Builder" type="constructor" line="109"/>
                <method name="above" type="Builder<N>" line="116">
                    <declaration name="tmpUpperStore" type="ZeroStore&lt;N&gt;" line="117"/>
                </method>
                <method name="above" type="Builder<N>" line="122">
                    <declaration name="tmpUpperStore" type="MatrixStore&lt;N&gt;" line="123"/>
                </method>
                <method name="above" type="Builder<N>" line="128">
                    <declaration name="tmpUpperStore" type="MatrixStore&lt;N&gt;" line="129"/>
                </method>
                <method name="below" type="Builder<N>" line="134">
                    <declaration name="tmpLowerStore" type="ZeroStore&lt;N&gt;" line="135"/>
                </method>
                <method name="below" type="Builder<N>" line="140">
                    <declaration name="tmpLowerStore" type="MatrixStore&lt;N&gt;" line="141"/>
                </method>
                <method name="below" type="Builder<N>" line="146">
                    <declaration name="tmpLowerStore" type="MatrixStore&lt;N&gt;" line="147"/>
                </method>
                <method name="bidiagonal" type="Builder<N>" line="152">
                    <scope line="153"/>
                    <scope line="155"/>
                </method>
                <method name="build" type="MatrixStore<N>" line="161"/>
                <method name="column" type="Builder<N>" line="165"/>
                <method name="columns" type="Builder<N>" line="170"/>
                <method name="conjugate" type="Builder<N>" line="175">
                    <scope line="176"/>
                    <scope line="178"/>
                </method>
                <method name="diagonal" type="Builder<N>" line="184"/>
                <method name="diagonally" type="Builder<N>" line="189">
                    <declaration name="tmpFactory" type="PhysicalStore.Factory&lt;N,?&gt;" line="191"/>
                    <declaration name="tmpDiagonalStore" type="MatrixStore&lt;N&gt;" line="193"/>
                    <scope line="194">
                        <declaration name="tmpBaseRowDim" type="int" line="198"/>
                        <declaration name="tmpBaseColDim" type="int" line="199"/>
                        <declaration name="tmpDiagRowDim" type="int" line="201"/>
                        <declaration name="tmpDiagColDim" type="int" line="202"/>
                        <declaration name="tmpRightStore" type="MatrixStore&lt;N&gt;" line="204"/>
                        <declaration name="tmpAboveStore" type="MatrixStore&lt;N&gt;" line="205"/>
                        <declaration name="tmpLeftStore" type="MatrixStore&lt;N&gt;" line="207"/>
                        <declaration name="tmpBelowStore" type="MatrixStore&lt;N&gt;" line="208"/>
                    </scope>
                </method>
                <method name="hessenberg" type="Builder<N>" line="216">
                    <scope line="217"/>
                    <scope line="219"/>
                </method>
                <method name="left" type="Builder<N>" line="225">
                    <declaration name="tmpLeftStore" type="MatrixStore&lt;N&gt;" line="226"/>
                </method>
                <method name="left" type="Builder<N>" line="231">
                    <declaration name="tmpLeftStore" type="MatrixStore&lt;N&gt;" line="232"/>
                </method>
                <method name="left" type="Builder<N>" line="237">
                    <declaration name="tmpLeftStore" type="MatrixStore&lt;N&gt;" line="238"/>
                </method>
                <method name="modify" type="Builder<N>" line="243"/>
                <method name="right" type="Builder<N>" line="248">
                    <declaration name="tmpRightStore" type="MatrixStore&lt;N&gt;" line="249"/>
                </method>
                <method name="right" type="Builder<N>" line="254">
                    <declaration name="tmpRightStore" type="MatrixStore&lt;N&gt;" line="255"/>
                </method>
                <method name="right" type="Builder<N>" line="260">
                    <declaration name="tmpRightStore" type="MatrixStore&lt;N&gt;" line="261"/>
                </method>
                <method name="row" type="Builder<N>" line="266"/>
                <method name="rows" type="Builder<N>" line="271"/>
                <method name="superimpose" type="Builder<N>" line="276"/>
                <method name="superimpose" type="Builder<N>" line="281"/>
                <method name="transpose" type="Builder<N>" line="286">
                    <scope line="287"/>
                    <scope line="289"/>
                </method>
                <method name="triangular" type="Builder<N>" line="295">
                    <scope line="296"/>
                    <scope line="298"/>
                </method>
                <method name="tridiagonal" type="Builder<N>" line="304"/>
            </class>
            <method name="aggregateAll" type="N" line="311"/>
            <method name="builder" type="MatrixStore.Builder<N>" line="313"/>
            <method name="conjugate" type="PhysicalStore<N>" line="315"/>
            <javadoc line="315">
                Each call must produce a new instance.                
                <@return>
                    n A new conjugated {@linkplain PhysicalStore} copy.                    
                </@return>
            </javadoc>
            <method name="copy" type="PhysicalStore<N>" line="322"/>
            <javadoc line="322">
                Each call must produce a new instance.                
                <@return>
                    n A new {@linkplain PhysicalStore} copy.                    
                </@return>
            </javadoc>
            <method name="equals" type="boolean" line="329"/>
            <method name="factory" type="PhysicalStore.Factory<N,?>" line="331"/>
            <method name="getMinDim" type="int" line="333"/>
            <javadoc line="333">
                @deprecated v35                
            </javadoc>
            <method name="isAbsolute" type="boolean" line="339"/>
            <javadoc line="339">
                @see Scalar#isAbsolute()                
            </javadoc>
            <method name="isLowerLeftShaded" type="boolean" line="344"/>
            <javadoc line="344">
                The entries below (left of) the first subdiagonal are zero - effectively an upper Hessenberg matrix.                
                <@see>
                    e #isUpperRightShaded()                    
                </@see>
            </javadoc>
            <method name="isPositive" type="boolean" line="351"/>
            <javadoc line="351">
                @see Scalar#isPositive()                
            </javadoc>
            <method name="isReal" type="boolean" line="356"/>
            <javadoc line="356">
                @see Scalar#isReal()                
            </javadoc>
            <method name="isUpperRightShaded" type="boolean" line="361"/>
            <javadoc line="361">
                The entries above (right of) the first superdiagonal are zero - effectively a lower Hessenberg matrix.                
                <@see>
                    e #isLowerLeftShaded()                    
                </@see>
            </javadoc>
            <method name="isZero" type="boolean" line="368"/>
            <javadoc line="368">
                @see Scalar#isZero()                
            </javadoc>
            <method name="multiplyLeft" type="MatrixStore<N>" line="373"/>
            <method name="multiplyRight" type="MatrixStore<N>" line="375"/>
            <method name="toScalar" type="Scalar<N>" line="377"/>
            <method name="transpose" type="PhysicalStore<N>" line="379"/>
            <javadoc line="379">
                Each call must produce a new instance.                
                <@return>
                    n A new transposed {@linkplain PhysicalStore} copy.                    
                </@return>
            </javadoc>
            <method name="visitAll" type="void" line="386"/>
            <method name="visitColumn" type="void" line="388"/>
            <method name="visitDiagonal" type="void" line="390"/>
            <method name="visitRow" type="void" line="392"/>
        </interface>
    </source>