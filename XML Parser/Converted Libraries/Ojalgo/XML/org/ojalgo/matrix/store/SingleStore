<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.ojalgo.matrix.store">
        <import package="java.math.BigDecimal"/>
        <import package="org.ojalgo.ProgrammingError"/>
        <import package="org.ojalgo.access.Access1D"/>
        <import package="org.ojalgo.scalar.ComplexNumber"/>
        <import package="org.ojalgo.scalar.Scalar"/>
        <class name="SingleStore" extends="FactoryStore<N>" line="31">
            <interface name="Factory">
                <method name="make" type="SingleStore<N>" line="35"/>
            </interface>
            <declaration name="BIG" type="Factory&lt;BigDecimal&gt;" line="39"/>
            <anonymous_class line="39">
                <method name="make" type="SingleStore<BigDecimal>" line="41"/>
            </anonymous_class>
            <declaration name="COMPLEX" type="Factory&lt;ComplexNumber&gt;" line="47"/>
            <anonymous_class line="47">
                <method name="make" type="SingleStore<ComplexNumber>" line="49"/>
            </anonymous_class>
            <declaration name="PRIMITIVE" type="Factory&lt;Double&gt;" line="55"/>
            <anonymous_class line="55">
                <method name="make" type="SingleStore<Double>" line="57"/>
            </anonymous_class>
            <method name="makeBig" type="SingleStore<BigDecimal>" line="63"/>
            <method name="makeComplex" type="SingleStore<ComplexNumber>" line="67"/>
            <method name="makePrimitive" type="SingleStore<Double>" line="71"/>
            <declaration name="myNumber" type="N" line="75"/>
            <declaration name="myValue" type="double" line="76"/>
            <method name="SingleStore" type="constructor" line="78"/>
            <method name="SingleStore" type="constructor" line="87"/>
            <method name="conjugate" type="PhysicalStore<N>" line="95">
                <declaration name="retVal" type="PhysicalStore&lt;N&gt;" line="97"/>
            </method>
            <method name="copy" type="PhysicalStore<N>" line="105">
                <declaration name="retVal" type="PhysicalStore&lt;N&gt;" line="107"/>
            </method>
            <method name="doubleValue" type="double" line="115"/>
            <method name="doubleValue" type="double" line="119"/>
            <method name="get" type="N" line="123"/>
            <method name="isLowerLeftShaded" type="boolean" line="127"/>
            <method name="isUpperRightShaded" type="boolean" line="131"/>
            <method name="multiplyLeft" type="MatrixStore<N>" line="136">
                <declaration name="tmpRowDim" type="int" line="138"/>
                <declaration name="tmpColDim" type="int" line="139"/>
                <declaration name="tmpFactory" type="PhysicalStore.Factory&lt;N,?&gt;" line="141"/>
                <declaration name="retVal" type="PhysicalStore&lt;N&gt;" line="143"/>
            </method>
            <method name="multiplyRight" type="MatrixStore<N>" line="151">
                <declaration name="tmpRowDim" type="int" line="153"/>
                <declaration name="tmpColDim" type="int" line="154"/>
                <declaration name="tmpFactory" type="PhysicalStore.Factory&lt;N,?&gt;" line="156"/>
                <declaration name="retVal" type="PhysicalStore&lt;N&gt;" line="158"/>
            </method>
            <method name="toScalar" type="Scalar<N>" line="165"/>
            <method name="transpose" type="PhysicalStore<N>" line="170"/>
        </class>
    </source>