<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.ojalgo.matrix">
        <import package="java.lang.reflect.Constructor"/>
        <import package="java.lang.reflect.InvocationTargetException"/>
        <import package="java.util.List"/>
        <import package="org.ojalgo.ProgrammingError"/>
        <import package="org.ojalgo.access.Access1D"/>
        <import package="org.ojalgo.access.Access2D"/>
        <import package="org.ojalgo.access.Access2D.Builder"/>
        <import package="org.ojalgo.matrix.store.AboveBelowStore"/>
        <import package="org.ojalgo.matrix.store.IdentityStore"/>
        <import package="org.ojalgo.matrix.store.LeftRightStore"/>
        <import package="org.ojalgo.matrix.store.MatrixStore"/>
        <import package="org.ojalgo.matrix.store.PhysicalStore"/>
        <import package="org.ojalgo.matrix.store.ZeroStore"/>
        <import package="org.ojalgo.random.RandomNumber"/>
        <class name="MatrixFactory" line="40">
            <implements interface="BasicMatrix.Factory&lt;I&gt;"/>
            <javadoc line="40">
                MatrixFactory creates instances of classes that implement the{@linkplain org.ojalgo.matrix.BasicMatrix} interface and have a 
                 * constructor that takes a MatrixStore as input.                
                <@author>
                    r apete                    
                </@author>
            </javadoc>
            <class name="MatrixBuilder" line="49">
                <implements interface="Access2D.Builder&lt;I&gt;"/>
                <declaration name="myPhysicalStore" type="PhysicalStore&lt;N&gt;" line="51"/>
                <declaration name="myFactory" type="PhysicalStore.Factory&lt;N,?&gt;" line="52"/>
                <method name="MatrixBuilder" type="constructor" line="55"/>
                <method name="MatrixBuilder" type="constructor" line="59"/>
                <method name="MatrixBuilder" type="constructor" line="67"/>
                <method name="build" type="I" line="76"/>
                <method name="count" type="long" line="80"/>
                <method name="countColumns" type="long" line="84"/>
                <method name="countRows" type="long" line="88"/>
                <method name="fillAll" type="MatrixBuilder" line="92"/>
                <method name="fillColumn" type="MatrixBuilder" line="97"/>
                <method name="fillDiagonal" type="MatrixBuilder" line="102"/>
                <method name="fillRow" type="MatrixBuilder" line="107"/>
                <method name="getColDim" type="int" line="112"/>
                <method name="getRowDim" type="int" line="116"/>
                <method name="set" type="MatrixBuilder" line="120"/>
                <method name="set" type="MatrixBuilder" line="125"/>
                <method name="set" type="MatrixBuilder" line="130"/>
                <method name="set" type="MatrixBuilder" line="135"/>
                <method name="size" type="int" line="140"/>
            </class>
            <method name="getConstructor" type="Constructor<? extends BasicMatrix>" line="145">
                <scope line="146">
                    <declaration name="retVal" type="Constructor&lt;? extends BasicMatrix&gt;" line="147"/>
                </scope>
                <scope line="150"/>
                <scope line="152"/>
            </method>
            <declaration name="myConstructor" type="Constructor&lt;I&gt;" line="157"/>
            <declaration name="myPhysicalFactory" type="PhysicalStore.Factory&lt;N,?&gt;" line="158"/>
            <method name="MatrixFactory" type="constructor" line="161"/>
            <method name="MatrixFactory" type="constructor" line="168"/>
            <method name="columns" type="I" line="176"/>
            <method name="columns" type="I" line="180"/>
            <method name="columns" type="I" line="184"/>
            <method name="columns" type="I" line="188"/>
            <method name="copy" type="I" line="192"/>
            <method name="getBuilder" type="Builder<I>" line="196"/>
            <method name="getBuilder" type="Builder<I>" line="200"/>
            <method name="makeEye" type="I" line="204">
                <declaration name="tmpMinDim" type="int" line="206"/>
                <declaration name="retVal" type="MatrixStore&lt;N&gt;" line="208"/>
                <scope line="210"/>
                <scope line="212"/>
            </method>
            <method name="makeRandom" type="I" line="219"/>
            <method name="makeZero" type="I" line="223"/>
            <method name="rows" type="I" line="227"/>
            <method name="rows" type="I" line="231"/>
            <method name="rows" type="I" line="235"/>
            <method name="rows" type="I" line="239"/>
            <method name="getPhysicalFactory" type="PhysicalStore.Factory<N,?>" line="243"/>
            <javadoc line="247">
                This method is for internal use only - YOU should NOT use it!                
            </javadoc>
            <method name="instantiate" type="I" line="250">
                <scope line="251"/>
                <scope line="253"/>
                <scope line="255"/>
                <scope line="257"/>
                <scope line="259"/>
            </method>
            <method name="wrap" type="MatrixBuilder" line="264"/>
        </class>
    </source>