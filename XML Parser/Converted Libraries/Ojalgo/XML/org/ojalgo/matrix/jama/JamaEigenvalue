<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.ojalgo.matrix.jama">
        <import package="org.ojalgo.access.Access1D"/>
        <import package="org.ojalgo.access.Access2D"/>
        <import package="org.ojalgo.array.Array1D"/>
        <import package="org.ojalgo.constant.PrimitiveMath"/>
        <import package="org.ojalgo.function.aggregator.AggregatorFunction"/>
        <import package="org.ojalgo.function.aggregator.ComplexAggregator"/>
        <import package="org.ojalgo.matrix.MatrixUtils"/>
        <import package="org.ojalgo.matrix.decomposition.Eigenvalue"/>
        <import package="org.ojalgo.matrix.store.MatrixStore"/>
        <import package="org.ojalgo.scalar.ComplexNumber"/>
        <import package="org.ojalgo.type.TypeUtils"/>
        <import package="org.ojalgo.type.context.NumberContext"/>
        <class name="JamaEigenvalue" extends="JamaAbstractDecomposition" line="37">
            <implements interface="Eigenvalue&lt;Double&gt;"/>
            <javadoc line="37">
                This class adapts JAMA&apos;s EigenvalueDecomposition to ojAlgo&apos;s {@linkplain Eigenvalue} interface.                
                <@author>
                    r apete                    
                </@author>
            </javadoc>
            <class name="General" extends="JamaEigenvalue" line="44">
                <method name="General" type="constructor" line="46"/>
                <method name="compute" type="boolean" line="51"/>
            </class>
            <class name="Nonsymmetric" extends="JamaEigenvalue" line="59">
                <method name="Nonsymmetric" type="constructor" line="61"/>
                <method name="compute" type="boolean" line="66"/>
            </class>
            <class name="Symmetric" extends="JamaEigenvalue" line="74">
                <method name="Symmetric" type="constructor" line="76"/>
                <method name="compute" type="boolean" line="81"/>
            </class>
            <declaration name="myDelegate" type="EigenvalueDecomposition" line="89"/>
            <declaration name="myInverse" type="JamaMatrix" line="91"/>
            <javadoc line="93">
                Not recommended to use this constructor directly. Consider using the static factory method{@linkplain org.ojalgo.matrix.decomposition.EigenvalueDecomposition#makeJama()} instead.                
            </javadoc>
            <method name="JamaEigenvalue" type="constructor" line="98"/>
            <method name="calculateDeterminant" type="Double" line="102"/>
            <method name="compute" type="boolean" line="107"/>
            <method name="equals" type="boolean" line="111"/>
            <method name="getD" type="JamaMatrix" line="115"/>
            <method name="getDeterminant" type="Double" line="119">
                <declaration name="tmpVisitor" type="AggregatorFunction&lt;ComplexNumber&gt;" line="121"/>
            </method>
            <method name="getEigenvalues" type="Array1D<ComplexNumber>" line="128">
                <declaration name="tmpRe" type="double[]" line="130"/>
                <declaration name="tmpIm" type="double[]" line="131"/>
                <declaration name="retVal" type="Array1D&lt;ComplexNumber&gt;" line="133"/>
                <scope line="135"/>
            </method>
            <method name="getInverse" type="JamaMatrix" line="145">
                <scope line="147">
                    <declaration name="tmpQ1" type="double[][]" line="149"/>
                    <declaration name="tmpEigen" type="double[]" line="150"/>
                    <declaration name="tmpMtrx" type="Matrix" line="152"/>
                    <scope line="154">
                        <scope line="155">
                            <scope line="156"/>
                        </scope>
                        <scope line="159">
                            <scope line="160"/>
                        </scope>
                    </scope>
                </scope>
            </method>
            <method name="getTrace" type="ComplexNumber" line="172">
                <declaration name="tmpVisitor" type="AggregatorFunction&lt;ComplexNumber&gt;" line="174"/>
            </method>
            <method name="getV" type="JamaMatrix" line="181"/>
            <method name="isAspectRatioNormal" type="boolean" line="185"/>
            <method name="isComputed" type="boolean" line="189"/>
            <method name="isFullSize" type="boolean" line="193"/>
            <method name="isHermitian" type="boolean" line="197"/>
            <method name="isOrdered" type="boolean" line="201"/>
            <method name="isSolvable" type="boolean" line="205"/>
            <method name="reconstruct" type="MatrixStore<Double>" line="209"/>
            <method name="reset" type="void" line="213"/>
            <method name="solve" type="JamaMatrix" line="219"/>
            <method name="toString" type="String" line="224"/>
            <method name="setDelegate" type="void" line="228"/>
            <method name="solve" type="Matrix" line="233">
                <comment line="234">
                    TODO Auto-generated method stub                    
                </comment>
            </method>
        </class>
    </source>