<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.ojalgo.matrix.decomposition">
        <import package="java.math.BigDecimal"/>
        <import package="org.ojalgo.access.Access2D"/>
        <import package="org.ojalgo.array.Array1D"/>
        <import package="org.ojalgo.array.Array2D"/>
        <import package="org.ojalgo.constant.PrimitiveMath"/>
        <import package="org.ojalgo.matrix.MatrixUtils"/>
        <import package="org.ojalgo.matrix.store.BigDenseStore"/>
        <import package="org.ojalgo.matrix.store.ComplexDenseStore"/>
        <import package="org.ojalgo.matrix.store.MatrixStore"/>
        <import package="org.ojalgo.matrix.store.PhysicalStore"/>
        <import package="org.ojalgo.matrix.store.PrimitiveDenseStore"/>
        <import package="org.ojalgo.matrix.transformation.Householder"/>
        <import package="org.ojalgo.scalar.ComplexNumber"/>
        <import package="org.ojalgo.type.TypeUtils"/>
        <import package="org.ojalgo.type.context.NumberContext"/>
        <class name="BidiagonalDecomposition" extends="InPlaceDecomposition<N>" line="41">
            <implements interface="Bidiagonal&lt;N&gt;"/>
            <javadoc line="41">
                You create instances of (some subclass of) this class by calling one
                 * of the static factory methods: {@linkplain #makeBig()},{@linkplain #makeComplex()} or {@linkplain #makePrimitive()}.                
                <@author>
                    r apete                    
                </@author>
            </javadoc>
            <class name="Big" extends="BidiagonalDecomposition<BigDecimal>" line="50">
                <method name="Big" type="constructor" line="52"/>
                <method name="makeReal" type="Array1D<BigDecimal>[]" line="57"/>
            </class>
            <class name="Complex" extends="BidiagonalDecomposition<ComplexNumber>" line="63">
                <method name="Complex" type="constructor" line="65"/>
                <method name="makeReal" type="Array1D<ComplexNumber>[]" line="70">
                    <declaration name="tmpDiagonalAccessD" type="DiagonalAccess&lt;ComplexNumber&gt;" line="72"/>
                    <declaration name="tmpInitDiagQ1" type="Array1D&lt;ComplexNumber&gt;" line="74"/>
                    <declaration name="tmpInitDiagQ2" type="Array1D&lt;ComplexNumber&gt;" line="77"/>
                    <declaration name="tmpUpper" type="boolean" line="80"/>
                    <scope line="82">
                        <declaration name="tmpMainDiagonal" type="Array1D&lt;ComplexNumber&gt;" line="84"/>
                        <declaration name="tmpSuperdiagonal" type="Array1D&lt;ComplexNumber&gt;" line="85"/>
                        <declaration name="tmpLimit" type="int" line="87"/>
                        <scope line="88">
                            <scope line="90">
                                <declaration name="tmpSignum" type="ComplexNumber" line="91"/>
                            </scope>
                            <scope line="97">
                                <declaration name="tmpSignum" type="ComplexNumber" line="98"/>
                            </scope>
                        </scope>
                        <scope line="105">
                            <declaration name="tmpSignum" type="ComplexNumber" line="106"/>
                        </scope>
                    </scope>
                    <scope line="111">
                        <declaration name="tmpMainDiagonal" type="Array1D&lt;ComplexNumber&gt;" line="113"/>
                        <declaration name="tmpSubdiagonal" type="Array1D&lt;ComplexNumber&gt;" line="114"/>
                        <declaration name="tmpLimit" type="int" line="116"/>
                        <scope line="117">
                            <scope line="119">
                                <declaration name="tmpSignum" type="ComplexNumber" line="120"/>
                            </scope>
                            <scope line="126">
                                <declaration name="tmpSignum" type="ComplexNumber" line="127"/>
                            </scope>
                        </scope>
                        <scope line="134">
                            <declaration name="tmpSignum" type="ComplexNumber" line="135"/>
                        </scope>
                    </scope>
                </method>
            </class>
            <class name="Primitive" extends="BidiagonalDecomposition<Double>" line="147">
                <method name="Primitive" type="constructor" line="149"/>
                <method name="makeReal" type="Array1D<Double>[]" line="154"/>
            </class>
            <method name="make" type="Bidiagonal<N>" line="161">
                <declaration name="tmpNumber" type="N" line="163"/>
                <scope line="165"/>
                <scope line="167"/>
                <scope line="169"/>
                <scope line="171"/>
            </method>
            <method name="makeBig" type="Bidiagonal<BigDecimal>" line="176"/>
            <method name="makeComplex" type="Bidiagonal<ComplexNumber>" line="180"/>
            <method name="makePrimitive" type="Bidiagonal<Double>" line="184"/>
            <declaration name="myDiagonalAccessD" type="DiagonalAccess&lt;N&gt;" line="188"/>
            <declaration name="myFullSize" type="boolean" line="190"/>
            <declaration name="myInitDiagQ1" type="Array1D&lt;N&gt;" line="192"/>
            <declaration name="myInitDiagQ2" type="Array1D&lt;N&gt;" line="193"/>
            <declaration name="myQ1" type="DecompositionStore&lt;N&gt;" line="195"/>
            <declaration name="myQ2" type="DecompositionStore&lt;N&gt;" line="196"/>
            <method name="BidiagonalDecomposition" type="constructor" line="198"/>
            <method name="compute" type="boolean" line="202"/>
            <method name="compute" type="boolean" line="206">
                <declaration name="tmpStore" type="DecompositionStore&lt;N&gt;" line="212"/>
                <declaration name="tmpRowDim" type="int" line="214"/>
                <declaration name="tmpColDim" type="int" line="215"/>
                <declaration name="tmpLimit" type="int" line="217"/>
                <declaration name="tmpHouseholderRow" type="Householder&lt;N&gt;" line="219"/>
                <declaration name="tmpHouseholderCol" type="Householder&lt;N&gt;" line="220"/>
                <scope line="222">
                    <scope line="224">
                        <scope line="226"/>
                        <scope line="230"/>
                    </scope>
                    <declaration name="tmpInitDiags" type="Array1D&lt;N&gt;[]" line="235"/>
                    <scope line="236"/>
                </scope>
                <scope line="241">
                    <scope line="243">
                        <scope line="245"/>
                        <scope line="249"/>
                    </scope>
                    <declaration name="tmpInitDiags" type="Array1D&lt;N&gt;[]" line="254"/>
                    <scope line="255"/>
                </scope>
            </method>
            <method name="equals" type="boolean" line="265"/>
            <method name="getD" type="MatrixStore<N>" line="269"/>
            <method name="getQ1" type="MatrixStore<N>" line="273">
                <scope line="274"/>
            </method>
            <method name="getQ2" type="MatrixStore<N>" line="280">
                <scope line="281"/>
            </method>
            <method name="isFullSize" type="boolean" line="287"/>
            <method name="isSolvable" type="boolean" line="291"/>
            <method name="isUpper" type="boolean" line="295"/>
            <method name="reconstruct" type="MatrixStore<N>" line="299"/>
            <method name="reset" type="void" line="304"/>
            <method name="makeDiagonalAccessD" type="DiagonalAccess<N>" line="318">
                <declaration name="tmpArray2D" type="Array2D&lt;N&gt;" line="320"/>
                <declaration name="tmpMain" type="Array1D&lt;N&gt;" line="322"/>
                <declaration name="tmpSuper" type="Array1D&lt;N&gt;" line="323"/>
                <declaration name="tmpSub" type="Array1D&lt;N&gt;" line="324"/>
                <scope line="326"/>
                <scope line="329"/>
            </method>
            <javadoc line="337">
                Will solve the equation system [aMtrxV][aMtrxD][X]=[aMtrxSimilar]&lt;sup&gt;T&lt;/sup&gt; and overwrite the solution [X] to [aV].                
            </javadoc>
            <method name="solve" type="void" line="340">
                <declaration name="tmpDim" type="int" line="342"/>
                <declaration name="tmpLim" type="int" line="343"/>
                <declaration name="tmpSingular" type="double" line="345"/>
                <scope line="346">
                    <scope line="348">
                        <scope line="349"/>
                    </scope>
                    <scope line="352">
                        <scope line="353"/>
                    </scope>
                </scope>
            </method>
            <method name="solve2" type="DecompositionStore<N>" line="363">
                <declaration name="tmpDim" type="int" line="365"/>
                <declaration name="tmpLim" type="int" line="366"/>
                <declaration name="retVal" type="DecompositionStore&lt;N&gt;" line="368"/>
                <declaration name="tmpSingular" type="double" line="370"/>
                <scope line="371">
                    <scope line="373">
                        <scope line="374"/>
                    </scope>
                    <scope line="377">
                        <scope line="378"/>
                    </scope>
                </scope>
            </method>
            <method name="makeQ1" type="DecompositionStore<N>" line="390">
                <declaration name="tmpHouseholderReference" type="DecompositionStore.HouseholderReference&lt;N&gt;" line="392"/>
                <declaration name="tmpRowDim" type="int" line="394"/>
                <declaration name="tmpMinDim" type="int" line="395"/>
                <declaration name="retVal" type="DecompositionStore&lt;N&gt;" line="397"/>
                <scope line="398">
                    <scope line="400"/>
                </scope>
                <scope line="403"/>
                <declaration name="tmpUpper" type="boolean" line="407"/>
                <scope line="408">
                    <scope line="413"/>
                </scope>
            </method>
            <method name="makeQ2" type="DecompositionStore<N>" line="421">
                <declaration name="tmpHouseholderReference" type="DecompositionStore.HouseholderReference&lt;N&gt;" line="423"/>
                <declaration name="tmpMinDim" type="int" line="425"/>
                <declaration name="tmpColDim" type="int" line="426"/>
                <declaration name="retVal" type="DecompositionStore&lt;N&gt;" line="428"/>
                <scope line="429">
                    <scope line="431"/>
                </scope>
                <scope line="434"/>
                <declaration name="tmpUpper" type="boolean" line="438"/>
                <scope line="439">
                    <scope line="444"/>
                </scope>
            </method>
            <method name="getDiagonalAccessD" type="DiagonalAccess<N>" line="452">
                <scope line="453"/>
            </method>
            <method name="makeReal" type="Array1D<N>[]" line="459"/>
        </class>
    </source>