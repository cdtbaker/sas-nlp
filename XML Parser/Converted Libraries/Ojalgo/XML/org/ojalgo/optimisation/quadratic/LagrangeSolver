<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.ojalgo.optimisation.quadratic">
        <import package="org.ojalgo.constant.PrimitiveMath"/>
        <import package="org.ojalgo.function.PrimitiveFunction"/>
        <import package="org.ojalgo.function.UnaryFunction"/>
        <import package="org.ojalgo.function.aggregator.Aggregator"/>
        <import package="org.ojalgo.function.aggregator.AggregatorFunction"/>
        <import package="org.ojalgo.function.aggregator.PrimitiveAggregator"/>
        <import package="org.ojalgo.matrix.decomposition"/>
        <import package="org.ojalgo.matrix.store.AboveBelowStore"/>
        <import package="org.ojalgo.matrix.store.LeftRightStore"/>
        <import package="org.ojalgo.matrix.store.MatrixStore"/>
        <import package="org.ojalgo.matrix.store.PhysicalStore"/>
        <import package="org.ojalgo.matrix.store.ZeroStore"/>
        <import package="org.ojalgo.optimisation.ExpressionsBasedModel"/>
        <import package="org.ojalgo.optimisation.Optimisation"/>
        <class name="LagrangeSolver" line="40">
            <extends class="QuadraticSolver"/>
            <javadoc line="40">
                @author apete                
            </javadoc>
            <declaration name="myLU" type="LU&lt;Double&gt;" line="45"/>
            <declaration name="mySingularValue" type="SingularValue&lt;Double&gt;" line="46"/>
            <method name="LagrangeSolver" type="constructor" line="48">
                <params>
                    <param name="aModel" type="ExpressionsBasedModel"/>
                    <param name="solverOptions" type="Optimisation.Options"/>
                    <param name="matrices" type="QuadraticSolver.Builder"/>
                </params>
            </method>
            <method name="extractSolution" type="void" line="52">
                <params>
                    <param name="aSolver" type="Builder"/>
                </params>
                <declaration name="tmpSolutionX" type="MatrixStore&lt;Double&gt;" line="54"/>
                <declaration name="tmpCountVariables" type="int" line="56"/>
                <declaration name="tmpCountEqualityConstraints" type="int" line="57"/>
                <scope line="59"/>
                <scope line="63"/>
            </method>
            <method name="makeBuilder" type="Builder" line="68">
                <params>
                    <param name="addSmallDiagonal" type="boolean"/>
                </params>
                <declaration name="tmpBuilder" type="Builder" line="69"/>
                <declaration name="tmpQ" type="MatrixStore&lt;Double&gt;" line="71"/>
                <declaration name="tmpC" type="MatrixStore&lt;Double&gt;" line="72"/>
                <scope line="74">
                    <declaration name="tmpCopyQ" type="PhysicalStore&lt;Double&gt;" line="76"/>
                    <declaration name="tmpLargest" type="double" line="78"/>
                    <declaration name="tmpRelativelySmall" type="double" line="79"/>
                    <declaration name="tmpPracticalLimit" type="double" line="80"/>
                    <declaration name="tmpSmallToAdd" type="double" line="81"/>
                    <declaration name="tmpFunc" type="UnaryFunction&lt;Double&gt;" line="83"/>
                </scope>
                <scope line="89">
                    <declaration name="tmpAE" type="MatrixStore&lt;Double&gt;" line="91"/>
                    <declaration name="tmpBE" type="MatrixStore&lt;Double&gt;" line="92"/>
                    <declaration name="tmpZeroSize" type="int" line="94"/>
                    <declaration name="tmpUpperLeftAE" type="MatrixStore&lt;Double&gt;" line="96"/>
                    <declaration name="tmpUpperRightAE" type="MatrixStore&lt;Double&gt;" line="97"/>
                    <declaration name="tmpLowerLefAE" type="MatrixStore&lt;Double&gt;" line="98"/>
                    <declaration name="tmpLowerRightAE" type="MatrixStore&lt;Double&gt;" line="99"/>
                    <declaration name="tmpSubAE" type="MatrixStore&lt;Double&gt;" line="101"/>
                    <declaration name="tmpUpperBE" type="MatrixStore&lt;Double&gt;" line="104"/>
                    <declaration name="tmpLowerBE" type="MatrixStore&lt;Double&gt;" line="105"/>
                    <declaration name="tmpSubBE" type="MatrixStore&lt;Double&gt;" line="107"/>
                </scope>
                <scope line="111"/>
            </method>
            <method name="performIteration" type="void" line="118">
                <params>
                    <param name="builder" type="Builder"/>
                </params>
                <declaration name="tmpAE" type="MatrixStore&lt;Double&gt;" line="120"/>
                <declaration name="tmpBE" type="MatrixStore&lt;Double&gt;" line="121"/>
                <declaration name="tmpX" type="DecompositionStore&lt;Double&gt;" line="123"/>
                <scope line="127">
                    <scope line="129"/>
                    <declaration name="tmpSolution" type="MatrixStore&lt;Double&gt;" line="133"/>
                    <scope line="135"/>
                </scope>
                <scope line="139">
                    <scope line="141"/>
                    <scope line="147">
                        <scope line="149"/>
                        <declaration name="tmpSolution" type="MatrixStore&lt;Double&gt;" line="153"/>
                        <scope line="155"/>
                        <declaration name="tmpFrobNormCalc" type="AggregatorFunction&lt;Double&gt;" line="159"/>
                        <declaration name="tmpSlack" type="MatrixStore&lt;Double&gt;" line="160"/>
                        <scope line="163">
                            <scope line="165"/>
                        </scope>
                    </scope>
                    <scope line="173">
                        <scope line="175"/>
                    </scope>
                </scope>
            </method>
            <method name="initialise" type="boolean" line="188">
                <params>
                    <param name="kickStart" type="Result"/>
                </params>
            </method>
            <method name="needsAnotherIteration" type="boolean" line="195"/>
            <method name="performIteration" type="void" line="200">
                <declaration name="tmpBuilder" type="Builder" line="202"/>
                <scope line="206"/>
                <scope line="212">
                    <scope line="218"/>
                    <scope line="224"/>
                </scope>
            </method>
            <method name="validate" type="boolean" line="233">
                <declaration name="retVal" type="boolean" line="235"/>
                <scope line="238">
                    <declaration name="tmpQ" type="MatrixStore&lt;Double&gt;" line="240"/>
                    <declaration name="tmpCholesky" type="Cholesky&lt;Double&gt;" line="242"/>
                    <scope line="245">
                        <declaration name="tmpEigenvalue" type="Eigenvalue&lt;Double&gt;" line="248"/>
                        <declaration name="tmpD" type="MatrixStore&lt;Double&gt;" line="251"/>
                        <scope line="253">
                            <scope line="254"/>
                        </scope>
                    </scope>
                    <scope line="262"/>
                </scope>
                <scope line="276"/>
            </method>
        </class>
    </source>