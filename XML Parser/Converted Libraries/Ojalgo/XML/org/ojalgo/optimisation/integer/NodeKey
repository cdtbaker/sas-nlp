<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.ojalgo.optimisation.integer">
        <import package="java.io.Serializable"/>
        <import package="java.math.BigDecimal"/>
        <import package="java.util.Arrays"/>
        <import package="java.util.List"/>
        <import package="org.ojalgo.array.ArrayUtils"/>
        <import package="org.ojalgo.constant.PrimitiveMath"/>
        <import package="org.ojalgo.optimisation.ExpressionsBasedModel"/>
        <import package="org.ojalgo.optimisation.Variable"/>
        <class name="NodeKey" line="34">
            <implements interface="Serializable"/>
            <implements interface="Comparable">
                <type_params>
                    <type_param name="NodeKey"/>
                </type_params>
            </implements>
            <declaration name="myLowerBounds" type="int[]" line="36"/>
            <declaration name="myUpperBounds" type="int[]" line="37"/>
            <declaration name="myParentValue" type="double" line="39"/>
            <javadoc line="39">
                The parent node objective function value                
            </javadoc>
            <method name="NodeKey" type="constructor" line="44">
                <params>
                    <param name="lowerBounds" type="int[]"/>
                    <param name="upperBounds" type="int[]"/>
                    <param name="parentValue" type="double"/>
                </params>
            </method>
            <method name="NodeKey" type="constructor" line="54">
                <params>
                    <param name="integerModel" type="ExpressionsBasedModel"/>
                </params>
                <declaration name="tmpIntegerVariables" type="List&lt;Variable&gt;" line="58"/>
                <declaration name="tmpLength" type="int" line="59"/>
                <scope line="66">
                    <declaration name="tmpVariable" type="Variable" line="68"/>
                    <declaration name="tmpLowerLimit" type="BigDecimal" line="70"/>
                    <scope line="71"/>
                    <declaration name="tmpUpperLimit" type="BigDecimal" line="75"/>
                    <scope line="76"/>
                </scope>
                <scope line="81"/>
                <scope line="83"/>
            </method>
            <method name="compareTo" type="int" line="88">
                <params>
                    <param name="ref" type="NodeKey"/>
                </params>
            </method>
            <method name="equals" type="boolean" line="93">
                <params>
                    <param name="obj" type="Object"/>
                </params>
                <scope line="94"/>
                <scope line="97"/>
                <scope line="100"/>
                <declaration name="other" type="NodeKey" line="103"/>
                <scope line="104"/>
                <scope line="107"/>
            </method>
            <method name="hashCode" type="int" line="114">
                <declaration name="prime" type="int" line="115"/>
                <declaration name="result" type="int" line="116"/>
            </method>
            <method name="toString" type="String" line="123">
                <declaration name="retVal" type="StringBuilder" line="125"/>
                <scope line="131"/>
                <scope line="135"/>
            </method>
            <method name="append" type="void" line="144">
                <params>
                    <param name="builder" type="StringBuilder"/>
                    <param name="index" type="int"/>
                </params>
            </method>
            <method name="getLowerBounds" type="int[]" line="152"/>
            <method name="getUpperBounds" type="int[]" line="156"/>
            <method name="calculateTreeSize" type="long" line="160">
                <declaration name="retVal" type="long" line="162"/>
                <declaration name="tmpLength" type="int" line="164"/>
                <scope line="165"/>
            </method>
            <method name="createLowerBranch" type="NodeKey" line="172">
                <params>
                    <param name="index" type="int"/>
                    <param name="value" type="double"/>
                    <param name="parentValue" type="double"/>
                </params>
                <declaration name="tmpLBs" type="int[]" line="174"/>
                <declaration name="tmpUBs" type="int[]" line="175"/>
                <declaration name="tmpFloor" type="int" line="177"/>
                <scope line="179"/>
                <scope line="181"/>
            </method>
            <method name="createUpperBranch" type="NodeKey" line="188">
                <params>
                    <param name="index" type="int"/>
                    <param name="value" type="double"/>
                    <param name="parentValue" type="double"/>
                </params>
                <declaration name="tmpLBs" type="int[]" line="190"/>
                <declaration name="tmpUBs" type="int[]" line="191"/>
                <declaration name="tmpCeil" type="int" line="193"/>
                <scope line="195"/>
                <scope line="197"/>
            </method>
            <method name="getIntegerFraction" type="double" line="204">
                <params>
                    <param name="index" type="int"/>
                    <param name="value" type="double"/>
                </params>
                <declaration name="tmpFeasibleValue" type="double" line="206"/>
            </method>
            <method name="getLowerBound" type="BigDecimal" line="211">
                <params>
                    <param name="index" type="int"/>
                </params>
            </method>
            <method name="getParentValue" type="double" line="215"/>
            <method name="getUpperBound" type="BigDecimal" line="219">
                <params>
                    <param name="index" type="int"/>
                </params>
            </method>
        </class>
    </source>