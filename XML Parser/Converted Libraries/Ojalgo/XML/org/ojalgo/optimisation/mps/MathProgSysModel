<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.ojalgo.optimisation.mps">
        <import package="org.ojalgo.constant.BigMath"/>
        <import package="java.io.BufferedReader"/>
        <import package="java.io.File"/>
        <import package="java.io.FileNotFoundException"/>
        <import package="java.io.FileReader"/>
        <import package="java.io.IOException"/>
        <import package="java.math.BigDecimal"/>
        <import package="java.util.Collection"/>
        <import package="java.util.HashMap"/>
        <import package="java.util.HashSet"/>
        <import package="java.util.Set"/>
        <import package="org.ojalgo.optimisation.AbstractModel"/>
        <import package="org.ojalgo.optimisation.ExpressionsBasedModel"/>
        <import package="org.ojalgo.optimisation.GenericSolver"/>
        <import package="org.ojalgo.optimisation.ModelEntity"/>
        <import package="org.ojalgo.optimisation.Optimisation"/>
        <class name="MathProgSysModel" line="43">
            <extends class="AbstractModel">
                <type_params>
                    <type_param name="GenericSolver"/>
                </type_params>
            </extends>
            <javadoc line="43">
                Mathematical Programming System (MPS) Model                
                <@author>
                    r apete                    
                </@author>
            </javadoc>
            <class name="Column" line="50">
                <extends class="ModelEntity">
                    <type_params>
                        <type_param name="MathProgSysModel.Column"/>
                    </type_params>
                </extends>
                <declaration name="myActivator" type="boolean" line="52"/>
                <declaration name="myElements" type="HashMap&lt;String,BigDecimal&gt;" line="54"/>
                <declaration name="myInteger" type="boolean" line="55"/>
                <method name="Column" type="constructor" line="57">
                    <params>
                        <param name="aName" type="String"/>
                    </params>
                </method>
                <method name="Column" type="constructor" line="64">
                    <params>
                        <param name="entityToCopy" type="Column"/>
                    </params>
                </method>
                <method name="bound" type="Column" line="74">
                    <params>
                        <param name="aType" type="BoundType"/>
                        <param name="aValue" type="BigDecimal"/>
                    </params>
                    <scope line="88"/>
                    <scope line="110"/>
                    <scope line="120"/>
                    <scope line="145"/>
                    <scope line="157"/>
                </method>
                <method name="getElementKeys" type="Set<String>" line="171"/>
                <method name="getNameForActivator" type="String" line="175"/>
                <method name="getNameForNegativePart" type="String" line="179">
                    <scope line="180"/>
                    <scope line="182"/>
                </method>
                <method name="getNameForPositivePart" type="String" line="187">
                    <scope line="188"/>
                    <scope line="190"/>
                </method>
                <method name="getRowValue" type="BigDecimal" line="195">
                    <params>
                        <param name="aRowName" type="String"/>
                    </params>
                </method>
                <method name="hasNegativePart" type="boolean" line="199">
                    <declaration name="tmpLowerLimit" type="BigDecimal" line="200"/>
                </method>
                <method name="hasPositivePart" type="boolean" line="204">
                    <declaration name="tmpUpperLimit" type="BigDecimal" line="205"/>
                </method>
                <method name="isInteger" type="boolean" line="209"/>
                <method name="needsActivator" type="boolean" line="213"/>
                <method name="setInteger" type="void" line="217">
                    <params>
                        <param name="someInteger" type="boolean"/>
                    </params>
                </method>
                <method name="setRowValue" type="BigDecimal" line="221">
                    <params>
                        <param name="aRowName" type="String"/>
                        <param name="aValue" type="BigDecimal"/>
                    </params>
                </method>
                <method name="getAdjustmentExponent" type="int" line="226"/>
            </class>
            <class name="Row" line="232">
                <extends class="ModelEntity">
                    <type_params>
                        <type_param name="MathProgSysModel.Row"/>
                    </type_params>
                </extends>
                <declaration name="type" type="RowType" line="234"/>
                <method name="Row" type="constructor" line="236">
                    <params>
                        <param name="aName" type="String"/>
                        <param name="aType" type="RowType"/>
                    </params>
                    <comment line="237">
                        0.0 is the default RHS value                        
                    </comment>
                    <scope line="242"/>
                    <scope line="244"/>
                </method>
                <method name="Row" type="constructor" line="252">
                    <params>
                        <param name="aName" type="String"/>
                    </params>
                </method>
                <method name="Row" type="constructor" line="259">
                    <params>
                        <param name="entityToCopy" type="Row"/>
                    </params>
                </method>
                <method name="range" type="Row" line="266">
                    <params>
                        <param name="aValue" type="BigDecimal"/>
                    </params>
                    <declaration name="tmpSignum" type="int" line="272"/>
                    <scope line="273"/>
                    <scope line="275"/>
                </method>
                <method name="rhs" type="Row" line="308">
                    <params>
                        <param name="aValue" type="BigDecimal"/>
                    </params>
                </method>
                <method name="getAdjustmentExponent" type="int" line="346"/>
            </class>
            <declaration name="COMMENT" type="String" line="352"/>
            <declaration name="EMPTY" type="String" line="353"/>
            <declaration name="SPACE" type="String" line="354"/>
            <method name="makeFromFile" type="MathProgSysModel" line="356">
                <params>
                    <param name="aFile" type="File"/>
                </params>
                <declaration name="tmpLine" type="String" line="358"/>
                <declaration name="tmpSection" type="FileSection" line="359"/>
                <declaration name="retVal" type="MathProgSysModel" line="360"/>
                <scope line="362">
                    <declaration name="tmpBufferedFileReader" type="BufferedReader" line="364"/>
                    <scope line="370">
                        <scope line="374"/>
                        <scope line="376"/>
                        <scope line="378"/>
                    </scope>
                </scope>
                <scope line="385"/>
                <scope line="387"/>
            </method>
            <declaration name="myColumns" type="HashMap&lt;String,Column&gt;" line="394"/>
            <declaration name="myFieldLimits" type="int[]" line="395"/>
            <declaration name="myFields" type="String[]" line="396"/>
            <declaration name="myIntegerMarker" type="boolean" line="397"/>
            <declaration name="myNameInFile" type="String" line="398"/>
            <declaration name="myRows" type="HashMap&lt;String,Row&gt;" line="399"/>
            <method name="MathProgSysModel" type="constructor" line="401"/>
            <method name="destroy" type="void" line="409">
                <comment line="410">
                    TODO Auto-generated method stub                    
                </comment>
            </method>
            <javadoc line="414">
                @see #getActivatorVariableColumns()                
                <@see>
                    e #getNegativeVariableColumns()                    
                </@see>
                <@see>
                    e #getPositiveVariableColumns()                    
                </@see>
            </javadoc>
            <method name="getActivatorVariableColumns" type="Column[]" line="419">
                <declaration name="tmpSelection" type="HashSet&lt;Column&gt;" line="421"/>
                <scope line="423">
                    <scope line="424"/>
                </scope>
            </method>
            <method name="getConstraintRows" type="Row[]" line="432">
                <declaration name="tmpSelection" type="HashSet&lt;Row&gt;" line="434"/>
                <declaration name="tmpValues" type="Collection&lt;Row&gt;" line="436"/>
                <scope line="437">
                    <scope line="438"/>
                </scope>
            </method>
            <method name="getDefaultSolver" type="GenericSolver" line="446"/>
            <method name="getExpressionRows" type="Row[]" line="450">
                <declaration name="tmpValues" type="Collection&lt;Row&gt;" line="452"/>
            </method>
            <method name="getName" type="String" line="457"/>
            <javadoc line="461">
                @see #getActivatorVariableColumns()                
                <@see>
                    e #getNegativeVariableColumns()                    
                </@see>
                <@see>
                    e #getPositiveVariableColumns()                    
                </@see>
            </javadoc>
            <method name="getNegativeVariableColumns" type="Column[]" line="466">
                <declaration name="tmpSelection" type="HashSet&lt;Column&gt;" line="468"/>
                <scope line="470">
                    <scope line="471"/>
                </scope>
            </method>
            <method name="getObjectiveRow" type="Row" line="479">
                <scope line="481">
                    <scope line="482"/>
                </scope>
            </method>
            <javadoc line="490">
                @see #getActivatorVariableColumns()                
                <@see>
                    e #getNegativeVariableColumns()                    
                </@see>
                <@see>
                    e #getPositiveVariableColumns()                    
                </@see>
            </javadoc>
            <method name="getPositiveVariableColumns" type="Column[]" line="495">
                <declaration name="tmpSelection" type="HashSet&lt;Column&gt;" line="497"/>
                <scope line="499">
                    <scope line="500"/>
                </scope>
            </method>
            <method name="maximise" type="Optimisation.Result" line="508"/>
            <method name="minimise" type="Optimisation.Result" line="512"/>
            <method name="validate" type="boolean" line="516"/>
            <method name="extractFields" type="void" line="520">
                <params>
                    <param name="aLine" type="String"/>
                </params>
                <declaration name="tmpLength" type="int" line="522"/>
                <declaration name="tmpFirst" type="int" line="524"/>
                <declaration name="tmpLimit" type="int" line="525"/>
                <scope line="526"/>
            </method>
            <method name="identifySection" type="FileSection" line="533">
                <params>
                    <param name="aLine" type="String"/>
                </params>
                <comment line="534">
                    BasicLogger.logDebug(&quot;Section: {},\tArgument: {}.&quot;, tmpSection, tmpArgument);                    
                </comment>
                <declaration name="tmpSplit" type="int" line="535"/>
                <declaration name="tmpSection" type="String" line="536"/>
                <declaration name="tmpArgument" type="String" line="537"/>
                <scope line="538"/>
                <scope line="541"/>
                <declaration name="retVal" type="FileSection" line="548"/>
            </method>
            <method name="parseSectionLine" type="void" line="566">
                <params>
                    <param name="aSection" type="FileSection"/>
                    <param name="aLine" type="String"/>
                </params>
                <comment line="567">
                    BasicLogger.logDebug(&quot;{}: {}.&quot;, aSection, Arrays.toString(myFields));                    
                </comment>
                <scope line="580"/>
                <declaration name="aConstraint" type="Row" line="591"/>
                <scope line="599">
                    <scope line="601"/>
                    <scope line="603"/>
                </scope>
                <scope line="607">
                    <scope line="609"/>
                    <declaration name="tmpColumn" type="Column" line="613"/>
                    <scope line="616"/>
                    <scope line="620"/>
                </scope>
                <scope line="632"/>
                <scope line="642"/>
            </method>
        </class>
    </source>