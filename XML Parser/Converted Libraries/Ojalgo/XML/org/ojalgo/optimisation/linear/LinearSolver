<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.ojalgo.optimisation.linear">
        <import package="org.ojalgo.constant.PrimitiveMath"/>
        <import package="java.util.List"/>
        <import package="java.util.Set"/>
        <import package="org.ojalgo.matrix.MatrixUtils"/>
        <import package="org.ojalgo.matrix.store.MatrixStore"/>
        <import package="org.ojalgo.matrix.store.PhysicalStore"/>
        <import package="org.ojalgo.matrix.store.PhysicalStore.Factory"/>
        <import package="org.ojalgo.matrix.store.PrimitiveDenseStore"/>
        <import package="org.ojalgo.matrix.store.ZeroStore"/>
        <import package="org.ojalgo.optimisation.BaseSolver"/>
        <import package="org.ojalgo.optimisation.Expression"/>
        <import package="org.ojalgo.optimisation.Expression.Index"/>
        <import package="org.ojalgo.optimisation.ExpressionsBasedModel"/>
        <import package="org.ojalgo.optimisation.Optimisation"/>
        <import package="org.ojalgo.optimisation.Variable"/>
        <import package="org.ojalgo.type.IndexSelector"/>
        <class name="LinearSolver" extends="BaseSolver" line="43">
            <javadoc line="43">
                LinearSolver solves optimisation problems of the (LP standard) form:
                 * &lt;p&gt;
                 * min [C]&lt;sup&gt;T&lt;/sup&gt;[X]&lt;br&gt;
                 * when [AE][X] == [BE]&lt;br&gt;
                 * and 0 &lt;= [X]&lt;br&gt;
                 * and 0 &lt;= [BE]
                 * &lt;/p&gt;
                 * A Linear Program is in Standard Form if:
                 * &lt;ul&gt;
                 * &lt;li&gt;All constraints are equality constraints.&lt;/li&gt;
                 * &lt;li&gt;All variables have a nonnegativity sign restriction.&lt;/li&gt;
                 * &lt;/ul&gt;
                 * &lt;p&gt;
                 * Further it is required here that the constraint right hand sides are
                 * nonnegative (nonnegative elements in [BE]).
                 * &lt;/p&gt;&lt;p&gt;
                 * You construct instances by using the {@linkplain Builder} class. It
                 * will return an appropriate subclass for you. It&apos;s recommended that
                 * you first create a {@linkplain ExpressionsBasedModel} and feed that to the{@linkplain Builder}. Alternatively you can directly call{@linkplain ExpressionsBasedModel#getDefaultSolver()} or even{@linkplain ExpressionsBasedModel#minimise()} or{@linkplain ExpressionsBasedModel#maximise()} on the model.
                 * &lt;/p&gt;                
                <@author>
                    r apete                    
                </@author>
            </javadoc>
            <class name="Builder" extends="AbstractBuilder<LinearSolver.Builder,LinearSolver>" line="73">
                <method name="Builder" type="constructor" line="75"/>
                <method name="Builder" type="constructor" line="81"/>
                <method name="Builder" type="constructor" line="87"/>
                <method name="Builder" type="constructor" line="93"/>
                <method name="Builder" type="constructor" line="100"/>
                <method name="Builder" type="constructor" line="106"/>
                <method name="build" type="LinearSolver" line="113">
                    <declaration name="tmpModel" type="ExpressionsBasedModel" line="115"/>
                </method>
                <method name="equalities" type="Builder" line="121"/>
                <method name="objective" type="Builder" line="126"/>
            </class>
            <declaration name="FACTORY" type="Factory&lt;Double,PrimitiveDenseStore&gt;" line="131"/>
            <method name="make" type="LinearSolver" line="133">
                <declaration name="tmpBuilder" type="LinearSolver.Builder" line="135"/>
            </method>
            <method name="copy" type="void" line="140">
                <declaration name="tmpMaximisation" type="boolean" line="142"/>
                <declaration name="tmpPosVariables" type="List&lt;Variable&gt;" line="144"/>
                <declaration name="tmpNegVariables" type="List&lt;Variable&gt;" line="145"/>
                <declaration name="tmpFixVariables" type="Set&lt;Index&gt;" line="146"/>
                <declaration name="tmpObjFunc" type="Expression" line="148"/>
                <declaration name="tmpExprsEq" type="List&lt;Expression&gt;" line="150"/>
                <declaration name="tmpExprsLo" type="List&lt;Expression&gt;" line="151"/>
                <declaration name="tmpExprsUp" type="List&lt;Expression&gt;" line="152"/>
                <declaration name="tmpVarsPosLo" type="List&lt;Variable&gt;" line="154"/>
                <declaration name="tmpVarsPosUp" type="List&lt;Variable&gt;" line="155"/>
                <declaration name="tmpVarsNegLo" type="List&lt;Variable&gt;" line="157"/>
                <declaration name="tmpVarsNegUp" type="List&lt;Variable&gt;" line="158"/>
                <declaration name="tmpConstraiCount" type="int" line="160"/>
                <declaration name="tmpProblVarCount" type="int" line="162"/>
                <declaration name="tmpSlackVarCount" type="int" line="163"/>
                <declaration name="tmpTotalVarCount" type="int" line="165"/>
                <declaration name="tmpBasis" type="int[]" line="167"/>
                <declaration name="tmpKickStarter" type="Optimisation.Result" line="169"/>
                <declaration name="tmpC" type="PhysicalStore&lt;Double&gt;" line="173"/>
                <declaration name="tmpAE" type="PhysicalStore&lt;Double&gt;" line="174"/>
                <declaration name="tmpBE" type="PhysicalStore&lt;Double&gt;" line="175"/>
                <declaration name="tmpPosVarsBaseIndex" type="int" line="180"/>
                <declaration name="tmpNegVarsBaseIndex" type="int" line="181"/>
                <declaration name="tmpSlaVarsBaseIndex" type="int" line="182"/>
                <scope line="184">
                    <declaration name="tmpFactor" type="double" line="186"/>
                    <declaration name="tmpPosInd" type="int" line="188"/>
                    <scope line="189"/>
                    <declaration name="tmpNegInd" type="int" line="193"/>
                    <scope line="194"/>
                </scope>
                <declaration name="tmpConstrBaseIndex" type="int" line="199"/>
                <declaration name="tmpCurrentSlackVarIndex" type="int" line="200"/>
                <declaration name="tmpExprsEqLength" type="int" line="202"/>
                <scope line="203">
                    <declaration name="tmpExpr" type="Expression" line="205"/>
                    <declaration name="tmpRHS" type="double" line="206"/>
                    <scope line="208">
                        <scope line="212">
                            <declaration name="tmpFactor" type="double" line="214"/>
                            <declaration name="tmpPosInd" type="int" line="216"/>
                            <scope line="217"/>
                            <declaration name="tmpNegInd" type="int" line="221"/>
                            <scope line="222"/>
                        </scope>
                    </scope>
                    <scope line="227">
                        <scope line="231">
                            <declaration name="tmpFactor" type="double" line="233"/>
                            <declaration name="tmpPosInd" type="int" line="235"/>
                            <scope line="236"/>
                            <declaration name="tmpNegInd" type="int" line="240"/>
                            <scope line="241"/>
                        </scope>
                    </scope>
                </scope>
                <declaration name="tmpExprsLoLength" type="int" line="249"/>
                <scope line="250">
                    <declaration name="tmpExpr" type="Expression" line="252"/>
                    <declaration name="tmpRHS" type="double" line="253"/>
                    <scope line="255">
                        <scope line="261">
                            <declaration name="tmpFactor" type="double" line="263"/>
                            <declaration name="tmpPosInd" type="int" line="265"/>
                            <scope line="266"/>
                            <declaration name="tmpNegInd" type="int" line="270"/>
                            <scope line="271"/>
                        </scope>
                    </scope>
                    <scope line="276">
                        <scope line="281">
                            <declaration name="tmpFactor" type="double" line="283"/>
                            <declaration name="tmpPosInd" type="int" line="285"/>
                            <scope line="286"/>
                            <declaration name="tmpNegInd" type="int" line="290"/>
                            <scope line="291"/>
                        </scope>
                    </scope>
                </scope>
                <declaration name="tmpExprsUpLength" type="int" line="299"/>
                <scope line="300">
                    <declaration name="tmpExpr" type="Expression" line="302"/>
                    <declaration name="tmpRHS" type="double" line="303"/>
                    <scope line="305">
                        <scope line="310">
                            <declaration name="tmpFactor" type="double" line="312"/>
                            <declaration name="tmpPosInd" type="int" line="314"/>
                            <scope line="315"/>
                            <declaration name="tmpNegInd" type="int" line="319"/>
                            <scope line="320"/>
                        </scope>
                    </scope>
                    <scope line="325">
                        <scope line="331">
                            <declaration name="tmpFactor" type="double" line="333"/>
                            <declaration name="tmpPosInd" type="int" line="335"/>
                            <scope line="336"/>
                            <declaration name="tmpNegInd" type="int" line="340"/>
                            <scope line="341"/>
                        </scope>
                    </scope>
                </scope>
                <declaration name="tmpVarsPosLoLength" type="int" line="349"/>
                <scope line="350">
                    <declaration name="tmpVar" type="Variable" line="352"/>
                    <declaration name="tmpKey" type="int" line="357"/>
                    <declaration name="tmpFactor" type="double" line="359"/>
                    <declaration name="tmpPosInd" type="int" line="361"/>
                    <scope line="362"/>
                    <declaration name="tmpNegInd" type="int" line="366"/>
                    <scope line="367"/>
                </scope>
                <declaration name="tmpVarsPosUpLength" type="int" line="374"/>
                <scope line="375">
                    <declaration name="tmpVar" type="Variable" line="377"/>
                    <declaration name="tmpKey" type="int" line="383"/>
                    <declaration name="tmpFactor" type="double" line="385"/>
                    <declaration name="tmpPosInd" type="int" line="387"/>
                    <scope line="388"/>
                    <declaration name="tmpNegInd" type="int" line="392"/>
                    <scope line="393"/>
                </scope>
                <declaration name="tmpVarsNegLoLength" type="int" line="400"/>
                <scope line="401">
                    <declaration name="tmpVar" type="Variable" line="403"/>
                    <declaration name="tmpKey" type="int" line="409"/>
                    <declaration name="tmpFactor" type="double" line="411"/>
                    <declaration name="tmpPosInd" type="int" line="413"/>
                    <scope line="414"/>
                    <declaration name="tmpNegInd" type="int" line="418"/>
                    <scope line="419"/>
                </scope>
                <declaration name="tmpVarsNegUpLength" type="int" line="426"/>
                <scope line="427">
                    <declaration name="tmpVar" type="Variable" line="429"/>
                    <declaration name="tmpKey" type="int" line="434"/>
                    <declaration name="tmpFactor" type="double" line="436"/>
                    <declaration name="tmpPosInd" type="int" line="438"/>
                    <scope line="439"/>
                    <declaration name="tmpNegInd" type="int" line="443"/>
                    <scope line="444"/>
                </scope>
            </method>
            <declaration name="mySelector" type="IndexSelector" line="454"/>
            <method name="LinearSolver" type="constructor" line="457"/>
            <method name="countBasisDeficit" type="int" line="464"/>
            <method name="countConstraints" type="int" line="468"/>
            <method name="exclude" type="void" line="472"/>
            <method name="excludeAll" type="void" line="476"/>
            <method name="getExcluded" type="int[]" line="480"/>
            <method name="getIncluded" type="int[]" line="484"/>
            <method name="hasConstraints" type="boolean" line="488"/>
            <method name="include" type="void" line="492"/>
            <method name="include" type="void" line="496"/>
        </class>
    </source>