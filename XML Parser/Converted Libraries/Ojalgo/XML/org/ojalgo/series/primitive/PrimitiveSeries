<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.ojalgo.series.primitive">
        <import package="org.ojalgo.function.PrimitiveFunction"/>
        <import package="java.util.Arrays"/>
        <import package="java.util.Iterator"/>
        <import package="org.ojalgo.access.Access1D"/>
        <import package="org.ojalgo.access.Iterator1D"/>
        <import package="org.ojalgo.array.Array1D"/>
        <import package="org.ojalgo.array.SimpleArray"/>
        <class name="PrimitiveSeries" line="34">
            <implements interface="Access1D&lt;Double&gt;"/>
            <method name="copy" type="PrimitiveSeries" line="36"/>
            <method name="wrap" type="PrimitiveSeries" line="40"/>
            <method name="PrimitiveSeries" type="constructor" line="44"/>
            <method name="add" type="PrimitiveSeries" line="48"/>
            <method name="add" type="PrimitiveSeries" line="52"/>
            <method name="copy" type="PrimitiveSeries" line="56"/>
            <method name="count" type="long" line="60"/>
            <javadoc line="64">
                period == 1                
            </javadoc>
            <method name="differences" type="PrimitiveSeries" line="67"/>
            <method name="differences" type="PrimitiveSeries" line="71"/>
            <method name="divide" type="PrimitiveSeries" line="75"/>
            <method name="divide" type="PrimitiveSeries" line="79"/>
            <method name="doubleValue" type="double" line="83"/>
            <method name="exp" type="PrimitiveSeries" line="87"/>
            <method name="get" type="Double" line="91"/>
            <method name="get" type="Double" line="95"/>
            <method name="iterator" type="Iterator<Double>" line="99"/>
            <method name="log" type="PrimitiveSeries" line="103"/>
            <method name="multiply" type="PrimitiveSeries" line="107"/>
            <method name="multiply" type="PrimitiveSeries" line="111"/>
            <javadoc line="115">
                A positive valued shift will prune that many elements off the head of the series. A negative valued shift will
                 * prune that many elements off the tail of the series.                
                <@param>
                    m aShift                    
                </@param>
                <@return>
                    n                    
                </@return>
            </javadoc>
            <method name="prune" type="PrimitiveSeries" line="122"/>
            <javadoc line="126">
                period == 1                
            </javadoc>
            <method name="quotients" type="PrimitiveSeries" line="129"/>
            <method name="quotients" type="PrimitiveSeries" line="133"/>
            <method name="runningProduct" type="PrimitiveSeries" line="137">
                <declaration name="tmpNewSize" type="int" line="139"/>
                <declaration name="tmpValues" type="double[]" line="141"/>
                <declaration name="tmpAggrVal" type="double" line="143"/>
                <scope line="144"/>
            </method>
            <method name="runningSum" type="PrimitiveSeries" line="151">
                <declaration name="tmpNewSize" type="int" line="153"/>
                <declaration name="tmpValues" type="double[]" line="155"/>
                <declaration name="tmpAggrVal" type="double" line="157"/>
                <scope line="158"/>
            </method>
            <method name="sample" type="PrimitiveSeries" line="165">
                <scope line="167"/>
                <scope line="171">
                    <declaration name="tmpSampleSize" type="int" line="173"/>
                    <declaration name="tmpLastIndex" type="int" line="174"/>
                    <declaration name="tmpValues" type="SimpleArray.Primitive" line="176"/>
                    <scope line="178"/>
                </scope>
            </method>
            <method name="subtract" type="PrimitiveSeries" line="186"/>
            <method name="subtract" type="PrimitiveSeries" line="190"/>
            <method name="toDataSeries" type="DataSeries" line="194"/>
            <method name="toString" type="String" line="199"/>
            <method name="value" type="double" line="203"/>
            <method name="values" type="double[]" line="205">
                <declaration name="tmpSize" type="int" line="207"/>
                <declaration name="retVal" type="double[]" line="208"/>
                <scope line="210"/>
            </method>
        </class>
    </source>