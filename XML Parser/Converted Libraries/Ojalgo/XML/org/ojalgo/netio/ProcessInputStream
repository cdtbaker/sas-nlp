<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.ojalgo.netio">
        <import package="java.io.DataInputStream"/>
        <import package="java.io.EOFException"/>
        <import package="java.io.IOException"/>
        <import package="java.io.InputStream"/>
        <import package="java.util.List"/>
        <class name="ProcessInputStream" extends="DataInputStream" line="30">
            <declaration name="EMPTY" type="String" line="32"/>
            <declaration name="myLastArgument" type="String" line="34"/>
            <declaration name="myLastCommand" type="String" line="35"/>
            <declaration name="myLastCommandPrefix" type="String" line="36"/>
            <declaration name="myWaitTime" type="long" line="37"/>
            <method name="ProcessInputStream" type="constructor" line="39"/>
            <method name="ProcessInputStream" type="constructor" line="47"/>
            <method name="collectMessages" type="List<Message>" line="54">
                <declaration name="retVal" type="List&lt;Message&gt;" line="56"/>
                <declaration name="tmpMessage" type="Message" line="58"/>
                <declaration name="tmpReadOneMore" type="boolean" line="60"/>
                <scope line="61">
                    <scope line="65"/>
                </scope>
            </method>
            <method name="getLastArgument" type="String" line="76"/>
            <method name="getLastCommand" type="String" line="80"/>
            <method name="constructMessage" type="Message" line="84">
                <declaration name="retVal" type="Message" line="86"/>
                <declaration name="tmpString" type="String" line="88"/>
                <scope line="90">
                    <declaration name="tmpFirst" type="int" line="92"/>
                    <declaration name="tmpLast" type="int" line="93"/>
                    <declaration name="tmpCommand" type="String" line="95"/>
                    <declaration name="tmpArgument" type="String" line="100"/>
                </scope>
                <scope line="107">
                    <scope line="109"/>
                    <scope line="111"/>
                </scope>
            </method>
            <javadoc line="121">
                Creates a &lt;code&gt;String&lt;/code&gt; from the stream of bytes.
                 * Each &lt;code&gt;byte&lt;/code&gt; (8 bit) is converted to a &lt;code&gt;char&lt;/code&gt;. The chars
                 * are meged to form a &lt;code&gt;String&lt;/code&gt;. The first bytes, describing the count
                 * of bytes to come, as well as any &apos;\r&apos; character are discarded. Everything else
                 * is converted and merged.                
            </javadoc>
            <method name="readString" type="String" line="128">
                <comment line="129">
                    BasicLogger.logDebug(&quot;Reading in new characters.&quot;);                    
                </comment>
                <comment line="129">
                    BasicLogger.logDebug(&quot;String is done: {}&quot;, retVal);                    
                </comment>
                <declaration name="retVal" type="StringBuilder" line="132"/>
                <scope line="134">
                    <declaration name="tmpInt" type="int" line="136"/>
                    <declaration name="tmpChar" type="char" line="137"/>
                    <declaration name="tmpByteCount" type="int" line="138"/>
                    <scope line="140"/>
                    <scope line="151">
                        <scope line="156"/>
                    </scope>
                </scope>
                <scope line="161"/>
            </method>
            <javadoc line="171">
                @see java.io.DataInput#readByte()                
            </javadoc>
            <method name="readByteAsChar" type="char" line="174">
                <declaration name="retVal" type="int" line="176"/>
                <scope line="178"/>
            </method>
            <javadoc line="185">
                @see java.io.DataInput#readByte()                
            </javadoc>
            <method name="readByteAsInt" type="int" line="188">
                <declaration name="retVal" type="int" line="190"/>
                <scope line="192"/>
            </method>
        </class>
    </source>