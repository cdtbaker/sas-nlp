<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.ojalgo.random.process">
        <import package="org.ojalgo.constant.PrimitiveMath"/>
        <import package="org.ojalgo.function.PrimitiveFunction"/>
        <import package="java.util.ArrayList"/>
        <import package="java.util.Collection"/>
        <import package="java.util.List"/>
        <import package="java.util.TreeSet"/>
        <import package="org.ojalgo.constant.PrimitiveMath"/>
        <import package="org.ojalgo.matrix.decomposition.Eigenvalue"/>
        <import package="org.ojalgo.matrix.decomposition.EigenvalueDecomposition"/>
        <import package="org.ojalgo.matrix.decomposition.MatrixDecomposition"/>
        <import package="org.ojalgo.matrix.decomposition.SingularValue"/>
        <import package="org.ojalgo.matrix.decomposition.SingularValueDecomposition"/>
        <import package="org.ojalgo.matrix.store.MatrixStore"/>
        <import package="org.ojalgo.matrix.store.PhysicalStore"/>
        <import package="org.ojalgo.matrix.store.PhysicalStore.Factory"/>
        <import package="org.ojalgo.matrix.store.PrimitiveDenseStore"/>
        <import package="org.ojalgo.random.Normal1D"/>
        <import package="org.ojalgo.type.keyvalue.ComparableToDouble"/>
        <class name="GaussianField" line="45">
            <javadoc line="45">
                A Gaussian process is a stochastic process whose realizations consist of
                 * random values associated with every point in a range of times (or of space)
                 * such that each such random variable has a normal distribution. Moreover,
                 * every finite collection of those random variables has a multivariate normal
                 * distribution.
                 * A random field is a generalization of a stochastic process such that the
                 * underlying parameter need no longer be a simple real or integer valued &quot;time&quot;,
                 * but can instead take values that are multidimensional vectors, or points on
                 * some manifold.
                 * This GaussianField class is a generalization, as well as the underlying
                 * implementation, of {@linkplain GaussianProcess}.
                 * Prior to calling {@linkplain #getDistribution(boolean,double)} you must call{@linkplain #addObservation(double,double)} one or more times.                
                <@author>
                    r apete                    
                </@author>
            </javadoc>
            <interface name="Covariance">
                <method name="calibrate" type="void" line="69"/>
                <method name="invoke" type="double" line="71"/>
            </interface>
            <interface name="Mean">
                <method name="calibrate" type="void" line="77"/>
                <method name="invoke" type="double" line="79"/>
            </interface>
            <declaration name="FACTORY" type="Factory&lt;Double,PrimitiveDenseStore&gt;" line="83"/>
            <method name="mean" type="Mean<K>" line="85">
                <anonymous_class line="86">
                    <method name="calibrate" type="void" line="88"/>
                    <method name="invoke" type="double" line="92"/>
                </anonymous_class>
            </method>
            <declaration name="myCovarianceFunction" type="Covariance&lt;K&gt;" line="98"/>
            <declaration name="myMeanFunction" type="Mean&lt;K&gt;" line="99"/>
            <declaration name="myObservations" type="TreeSet&lt;ComparableToDouble&lt;K&gt;&gt;" line="101"/>
            <method name="GaussianField" type="constructor" line="104"/>
            <method name="GaussianField" type="constructor" line="108"/>
            <method name="GaussianField" type="constructor" line="113"/>
            <method name="GaussianField" type="constructor" line="118"/>
            <method name="GaussianField" type="constructor" line="122"/>
            <method name="addObservation" type="void" line="131"/>
            <method name="calibrate" type="void" line="135"/>
            <method name="getDistribution" type="Normal1D" line="140">
                <declaration name="tmpRegCoef" type="MatrixStore&lt;Double&gt;" line="142"/>
                <declaration name="tmpM1" type="MatrixStore&lt;Double&gt;" line="144"/>
                <declaration name="tmpM2differenses" type="MatrixStore&lt;Double&gt;" line="145"/>
                <declaration name="tmpLocations" type="PrimitiveDenseStore" line="147"/>
                <declaration name="tmpC11" type="MatrixStore&lt;Double&gt;" line="150"/>
                <declaration name="tmpC21" type="MatrixStore&lt;Double&gt;" line="151"/>
                <declaration name="tmpCovariances" type="PrimitiveDenseStore" line="153"/>
                <scope line="156">
                    <declaration name="tmpEvD" type="Eigenvalue&lt;Double&gt;" line="158"/>
                    <declaration name="tmpV" type="MatrixStore&lt;Double&gt;" line="161"/>
                    <declaration name="tmpD" type="PhysicalStore&lt;Double&gt;" line="162"/>
                    <declaration name="tmpLargest" type="double" line="164"/>
                    <declaration name="tmpLimit" type="double" line="165"/>
                    <scope line="167">
                        <scope line="168"/>
                    </scope>
                </scope>
            </method>
            <method name="getDistribution" type="Normal1D" line="179"/>
            <method name="getC11" type="MatrixStore<Double>" line="183">
                <declaration name="tmpLength" type="int" line="185"/>
                <declaration name="retVal" type="PrimitiveDenseStore" line="187"/>
                <scope line="189">
                    <scope line="190"/>
                </scope>
            </method>
            <method name="getC12" type="MatrixStore<Double>" line="198">
                <declaration name="tmpObservations" type="List&lt;ComparableToDouble&lt;K&gt;&gt;" line="200"/>
                <declaration name="tmpRowDim" type="int" line="202"/>
                <declaration name="tmpColDim" type="int" line="203"/>
                <declaration name="retVal" type="PrimitiveDenseStore" line="205"/>
                <scope line="207">
                    <scope line="208"/>
                </scope>
            </method>
            <method name="getC21" type="MatrixStore<Double>" line="216">
                <declaration name="tmpObservations" type="List&lt;ComparableToDouble&lt;K&gt;&gt;" line="218"/>
                <declaration name="tmpRowDim" type="int" line="220"/>
                <declaration name="tmpColDim" type="int" line="221"/>
                <declaration name="retVal" type="PrimitiveDenseStore" line="223"/>
                <scope line="225">
                    <scope line="226"/>
                </scope>
            </method>
            <method name="getC22" type="MatrixDecomposition<Double>" line="234">
                <declaration name="tmpObservations" type="List&lt;ComparableToDouble&lt;K&gt;&gt;" line="236"/>
                <declaration name="tmpSize" type="int" line="238"/>
                <declaration name="tmpMatrix" type="PrimitiveDenseStore" line="240"/>
                <scope line="242">
                    <declaration name="tmpColumnKey" type="K" line="243"/>
                    <scope line="244"/>
                </scope>
                <declaration name="retVal" type="SingularValue&lt;Double&gt;" line="249"/>
            </method>
            <method name="getM1" type="MatrixStore<Double>" line="256">
                <declaration name="tmpLength" type="int" line="258"/>
                <declaration name="retVal" type="PrimitiveDenseStore" line="260"/>
                <scope line="262"/>
            </method>
            <method name="getM2" type="MatrixStore<Double>" line="269">
                <declaration name="tmpObservations" type="List&lt;ComparableToDouble&lt;K&gt;&gt;" line="271"/>
                <declaration name="tmpSize" type="int" line="273"/>
                <declaration name="retVal" type="PrimitiveDenseStore" line="275"/>
                <scope line="277"/>
            </method>
            <method name="getM2differenses" type="MatrixStore<Double>" line="284">
                <declaration name="tmpObservations" type="List&lt;ComparableToDouble&lt;K&gt;&gt;" line="286"/>
                <declaration name="tmpSize" type="int" line="288"/>
                <declaration name="retVal" type="PrimitiveDenseStore" line="290"/>
                <declaration name="tmpObservation" type="ComparableToDouble&lt;K&gt;" line="292"/>
                <declaration name="tmpDiff" type="double" line="293"/>
                <scope line="294"/>
            </method>
            <method name="getObservations" type="List<ComparableToDouble<K>>" line="303"/>
            <method name="getRegressionCoefficients" type="MatrixStore<Double>" line="307"/>
        </class>
    </source>