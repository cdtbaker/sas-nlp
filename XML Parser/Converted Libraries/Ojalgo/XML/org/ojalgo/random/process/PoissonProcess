<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.ojalgo.random.process">
        <import package="org.ojalgo.constant.PrimitiveMath"/>
        <import package="org.ojalgo.random.Exponential"/>
        <import package="org.ojalgo.random.Poisson"/>
        <class name="PoissonProcess" extends="AbstractProcess<Poisson>" line="29">
            <comment line="30">
                ivate final double myRate; // lambda, intensity                
            </comment>
            <javadoc line="29">
                A Poisson process is a stochastic process which counts the number of events
                 * in a given time interval. The time between each pair of consecutive events
                 * has an exponential distribution with parameter Î» and each of these
                 * inter-arrival times is assumed to be independent of other inter-arrival times.
                 * The process is a good model of radioactive decay, telephone calls and requests
                 * for a particular document on a web server, among many other phenomena.                
                <@author>
                    r apete                    
                </@author>
            </javadoc>
            <declaration name="myRate" type="double" line="41"/>
            <declaration name="GENERATOR" type="Poisson" line="43"/>
            <method name="PoissonProcess" type="constructor" line="45"/>
            <method name="getDistribution" type="Poisson" line="54"/>
            <method name="getTimeBetweenConsecutiveEvents" type="Exponential" line="58"/>
            <method name="getNormalisedRandomIncrement" type="double" line="63"/>
            <method name="step" type="double" line="68">
                <declaration name="retVal" type="double" line="69"/>
            </method>
            <method name="getExpected" type="double" line="75"/>
            <method name="getLowerConfidenceQuantile" type="double" line="80"/>
            <method name="getStandardDeviation" type="double" line="85"/>
            <method name="getUpperConfidenceQuantile" type="double" line="90"/>
            <method name="getVariance" type="double" line="95"/>
        </class>
    </source>