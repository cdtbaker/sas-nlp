<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.ojalgo.access">
        <import package="java.util.List"/>
        <import package="org.ojalgo.function.UnaryFunction"/>
        <import package="org.ojalgo.function.VoidFunction"/>
        <import package="org.ojalgo.random.RandomNumber"/>
        <import package="org.ojalgo.scalar.Scalar"/>
        <interface name="Access2D">
            <implements interface="Structure2D"/>
            <implements interface="Access1D&lt;N&gt;"/>
            <interface name="Builder">
                <implements interface="Structure2D"/>
                <implements interface="Access1D.Builder&lt;I&gt;"/>
                <javadoc line="33">
                    This interface mimics {@linkplain Fillable}, but methods return the builder instance instead, and then adds the{@link #build()} method.                    
                    <@author>
                        r apete                        
                    </@author>
                </javadoc>
                <method name="build" type="I" line="41"/>
                <method name="fillColumn" type="Builder<I>" line="43"/>
                <method name="fillDiagonal" type="Builder<I>" line="45"/>
                <method name="fillRow" type="Builder<I>" line="47"/>
                <method name="set" type="Builder<I>" line="49"/>
                <method name="set" type="Builder<I>" line="51"/>
            </interface>
            <interface name="Elements">
                <implements interface="Structure2D"/>
                <implements interface="Access1D.Elements"/>
                <method name="isAbsolute" type="boolean" line="57"/>
                <javadoc line="57">
                    @see Scalar#isAbsolute()                    
                </javadoc>
                <method name="isInfinite" type="boolean" line="62"/>
                <javadoc line="62">
                    @see Scalar#isInfinite()                    
                </javadoc>
                <method name="isNaN" type="boolean" line="67"/>
                <javadoc line="67">
                    @see Scalar#isNaN()                    
                </javadoc>
                <method name="isPositive" type="boolean" line="72"/>
                <javadoc line="72">
                    @see Scalar#isPositive()                    
                </javadoc>
                <method name="isReal" type="boolean" line="77"/>
                <javadoc line="77">
                    @see Scalar#isReal()                    
                </javadoc>
                <method name="isZero" type="boolean" line="82"/>
                <javadoc line="82">
                    @see Scalar#isZero()                    
                </javadoc>
            </interface>
            <interface name="Factory">
                <method name="columns" type="I" line="91"/>
                <method name="columns" type="I" line="93"/>
                <method name="columns" type="I" line="95"/>
                <method name="columns" type="I" line="98"/>
                <method name="copy" type="I" line="100"/>
                <method name="makeEye" type="I" line="102"/>
                <method name="makeRandom" type="I" line="104"/>
                <method name="makeZero" type="I" line="106"/>
                <method name="rows" type="I" line="108"/>
                <method name="rows" type="I" line="110"/>
                <method name="rows" type="I" line="112"/>
                <method name="rows" type="I" line="115"/>
            </interface>
            <interface name="Fillable">
                <implements interface="Structure2D"/>
                <implements interface="Access1D.Fillable&lt;N&gt;"/>
                <method name="fillColumn" type="void" line="121"/>
                <method name="fillDiagonal" type="void" line="123"/>
                <method name="fillRow" type="void" line="125"/>
                <method name="set" type="void" line="127"/>
                <method name="set" type="void" line="129"/>
            </interface>
            <interface name="Iterable2D">
                <method name="columns" type="Iterable<Access1D<N>>" line="135"/>
                <method name="rows" type="Iterable<Access1D<N>>" line="137"/>
            </interface>
            <interface name="Modifiable">
                <implements interface="Structure2D"/>
                <implements interface="Access1D.Modifiable&lt;N&gt;"/>
                <method name="modifyColumn" type="void" line="142"/>
                <method name="modifyDiagonal" type="void" line="144"/>
                <method name="modifyRow" type="void" line="146"/>
            </interface>
            <interface name="Visitable">
                <implements interface="Structure2D"/>
                <implements interface="Access1D.Visitable&lt;N&gt;"/>
                <method name="visitColumn" type="void" line="152"/>
                <method name="visitDiagonal" type="void" line="154"/>
                <method name="visitRow" type="void" line="156"/>
            </interface>
            <method name="doubleValue" type="double" line="160"/>
            <javadoc line="160">
                Extracts one element of this matrix as a double.                
                <@param>
                    m row A row index.                    
                </@param>
                <@param>
                    m column A column index.                    
                </@param>
                <@return>
                    n One matrix element                    
                </@return>
            </javadoc>
            <method name="get" type="N" line="169"/>
        </interface>
    </source>