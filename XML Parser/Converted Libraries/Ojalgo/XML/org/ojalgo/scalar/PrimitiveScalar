<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.ojalgo.scalar">
        <import package="java.math.BigDecimal"/>
        <import package="java.math.MathContext"/>
        <import package="org.ojalgo.constant.PrimitiveMath"/>
        <import package="org.ojalgo.type.TypeUtils"/>
        <import package="org.ojalgo.type.context.NumberContext"/>
        <import package="org.ojalgo.type.context.NumberContext.Enforceable"/>
        <class name="PrimitiveScalar" extends="AbstractScalar<Double>" line="32">
            <implements interface="Enforceable&lt;PrimitiveScalar&gt;"/>
            <declaration name="FACTORY" type="Scalar.Factory&lt;Double&gt;" line="34"/>
            <anonymous_class line="34">
                <method name="cast" type="Double" line="36"/>
                <method name="cast" type="Double" line="40"/>
                <method name="convert" type="PrimitiveScalar" line="44"/>
                <method name="convert" type="PrimitiveScalar" line="48"/>
                <method name="one" type="PrimitiveScalar" line="52"/>
                <method name="zero" type="PrimitiveScalar" line="56"/>
            </anonymous_class>
            <declaration name="IS_REAL" type="boolean" line="62"/>
            <declaration name="NaN" type="PrimitiveScalar" line="64"/>
            <declaration name="NEGATIVE_INFINITY" type="PrimitiveScalar" line="65"/>
            <declaration name="ONE" type="PrimitiveScalar" line="66"/>
            <declaration name="POSITIVE_INFINITY" type="PrimitiveScalar" line="67"/>
            <declaration name="ZERO" type="PrimitiveScalar" line="68"/>
            <method name="isAbsolute" type="boolean" line="70"/>
            <method name="isInfinite" type="boolean" line="74"/>
            <method name="isNaN" type="boolean" line="78"/>
            <method name="isPositive" type="boolean" line="82"/>
            <method name="isZero" type="boolean" line="86"/>
            <declaration name="myValue" type="double" line="90"/>
            <method name="PrimitiveScalar" type="constructor" line="92"/>
            <method name="PrimitiveScalar" type="constructor" line="99"/>
            <method name="PrimitiveScalar" type="constructor" line="107"/>
            <method name="add" type="Scalar<Double>" line="114"/>
            <method name="add" type="PrimitiveScalar" line="118"/>
            <method name="compareTo" type="int" line="122"/>
            <method name="conjugate" type="PrimitiveScalar" line="126"/>
            <method name="divide" type="PrimitiveScalar" line="130"/>
            <method name="divide" type="PrimitiveScalar" line="134"/>
            <method name="doubleValue" type="double" line="139"/>
            <method name="enforce" type="PrimitiveScalar" line="143"/>
            <method name="equals" type="boolean" line="148">
                <scope line="149"/>
                <scope line="152"/>
                <scope line="155"/>
                <declaration name="other" type="double" line="158"/>
                <scope line="159"/>
            </method>
            <method name="floatValue" type="float" line="166"/>
            <method name="getNumber" type="Double" line="170"/>
            <method name="hashCode" type="int" line="175">
                <declaration name="prime" type="int" line="176"/>
                <declaration name="result" type="int" line="177"/>
                <declaration name="temp" type="long" line="178"/>
            </method>
            <method name="intValue" type="int" line="185"/>
            <method name="invert" type="PrimitiveScalar" line="189"/>
            <method name="isAbsolute" type="boolean" line="193"/>
            <method name="isInfinite" type="boolean" line="197"/>
            <method name="isNaN" type="boolean" line="201"/>
            <method name="isPositive" type="boolean" line="205"/>
            <method name="isReal" type="boolean" line="209"/>
            <method name="isZero" type="boolean" line="213"/>
            <method name="longValue" type="long" line="218"/>
            <method name="multiply" type="PrimitiveScalar" line="222"/>
            <method name="multiply" type="PrimitiveScalar" line="226"/>
            <method name="negate" type="PrimitiveScalar" line="230"/>
            <method name="norm" type="double" line="234"/>
            <method name="signum" type="PrimitiveScalar" line="238"/>
            <method name="subtract" type="PrimitiveScalar" line="242"/>
            <method name="subtract" type="PrimitiveScalar" line="246"/>
            <method name="toBigDecimal" type="BigDecimal" line="250"/>
            <method name="toString" type="String" line="255"/>
            <method name="toString" type="String" line="259"/>
        </class>
    </source>