<?xml version="1.0" encoding="UTF-8"?>
<source package="org.ojalgo.matrix.store">
  <import name="static org.ojalgo.constant.PrimitiveMath.*" />
  <import name="static org.ojalgo.function.PrimitiveFunction.*" />
  <import name="java.util.List" />
  <import name="org.ojalgo.access.Access1D" />
  <import name="org.ojalgo.access.Access2D" />
  <import name="org.ojalgo.access.AccessUtils" />
  <import name="org.ojalgo.array.Array1D" />
  <import name="org.ojalgo.array.Array2D" />
  <import name="org.ojalgo.array.PrimitiveArray" />
  <import name="org.ojalgo.array.SimpleArray" />
  <import name="org.ojalgo.concurrent.DivideAndConquer" />
  <import name="org.ojalgo.constant.PrimitiveMath" />
  <import name="org.ojalgo.function.BinaryFunction" />
  <import name="org.ojalgo.function.FunctionSet" />
  <import name="org.ojalgo.function.PrimitiveFunction" />
  <import name="org.ojalgo.function.UnaryFunction" />
  <import name="org.ojalgo.function.VoidFunction" />
  <import name="org.ojalgo.function.aggregator.Aggregator" />
  <import name="org.ojalgo.function.aggregator.AggregatorCollection" />
  <import name="org.ojalgo.function.aggregator.AggregatorFunction" />
  <import name="org.ojalgo.function.aggregator.PrimitiveAggregator" />
  <import name="org.ojalgo.machine.JavaType" />
  <import name="org.ojalgo.machine.MemoryEstimator" />
  <import name="org.ojalgo.matrix.MatrixUtils" />
  <import name="org.ojalgo.matrix.decomposition.DecompositionStore" />
  <import name="org.ojalgo.matrix.decomposition.LUDecomposition.Pivot" />
  <import name="org.ojalgo.matrix.store.operation.*" />
  <import name="org.ojalgo.matrix.transformation.Householder" />
  <import name="org.ojalgo.matrix.transformation.Rotation" />
  <import name="org.ojalgo.random.RandomNumber" />
  <import name="org.ojalgo.scalar.ComplexNumber" />
  <import name="org.ojalgo.scalar.PrimitiveScalar" />
  <import name="org.ojalgo.scalar.Scalar" />
  <import name="org.ojalgo.type.context.NumberContext" />
  <class name="PrimitiveDenseStore" extends="PrimitiveArray" startLine="61">
    <implements name="PhysicalStore<Double>" />
    <implements name="DecompositionStore<Double>" />
    <javadoc>
      <text>* A {@linkplain Double} (actually double) implementation of {@linkplain PhysicalStore}.</text>
      <author>apete</author>
    </javadoc>
    <interface name="PrimitiveMultiplyBoth" startLine="68">
      <method name="invoke" type="void" startLine="70" endLine="70" />
      <interface name="PrimitiveMultiplyLeft" startLine="74">
        <method name="invoke" type="void" startLine="76" endLine="76" />
        <interface name="PrimitiveMultiplyRight" startLine="80">
          <method name="invoke" type="void" startLine="82" endLine="82" />
          <method type="AggregatorCollection<Double>" name="aggregator" startLine="88" endLine="90" />
          <method type="PrimitiveDenseStore" name="columns" startLine="92" endLine="108">
            <declaration type="int" name="tmpRowDim" />
            <declaration type="int" name="tmpColDim" />
            <declaration type="double[]" name="tmpData" />
            <declaration type="Access1D<?>" name="tmpColumn" />
            <scope startLine="100" endLine="105">
              <scope startLine="102" endLine="104" />
            </scope>
          </method>
          <method type="PrimitiveDenseStore" name="columns" startLine="110" endLine="126">
            <declaration type="int" name="tmpRowDim" />
            <declaration type="int" name="tmpColDim" />
            <declaration type="double[]" name="tmpData" />
            <declaration type="double[]" name="tmpColumn" />
            <scope startLine="118" endLine="123">
              <scope startLine="120" endLine="122" />
            </scope>
          </method>
          <method type="PrimitiveDenseStore" name="columns" startLine="128" endLine="144">
            <declaration type="int" name="tmpRowDim" />
            <declaration type="int" name="tmpColDim" />
            <declaration type="double[]" name="tmpData" />
            <declaration type="List<? extends Number>" name="tmpColumn" />
            <scope startLine="136" endLine="141">
              <scope startLine="138" endLine="140" />
            </scope>
          </method>
          <method type="PrimitiveDenseStore" name="columns" startLine="146" endLine="162">
            <declaration type="int" name="tmpRowDim" />
            <declaration type="int" name="tmpColDim" />
            <declaration type="double[]" name="tmpData" />
            <declaration type="Number[]" name="tmpColumn" />
            <scope startLine="154" endLine="159">
              <scope startLine="156" endLine="158" />
            </scope>
          </method>
          <method type="PrimitiveDenseStore" name="conjugate" startLine="164" endLine="166" />
          <method type="PrimitiveDenseStore" name="copy" startLine="168" endLine="175">
            <declaration type="PrimitiveDenseStore" name="retVal" />
          </method>
          <method type="FunctionSet<Double>" name="function" startLine="177" endLine="179" />
          <javadoc>
            <deprecated>Use {@link #aggregator()} instead</deprecated>
          </javadoc>
          <method type="AggregatorCollection<Double>" name="getAggregatorCollection" startLine="185" endLine="187" />
          <javadoc>
            <deprecated>Use {@link #function()} instead</deprecated>
          </javadoc>
          <method type="FunctionSet<Double>" name="getFunctionSet" startLine="193" endLine="195" />
          <javadoc>
            <deprecated>v35 Use {@link #scalar()} instead.</deprecated>
          </javadoc>
          <method type="Double" name="getNumber" startLine="201" endLine="203" />
          <javadoc>
            <deprecated>v35 Use {@link #scalar()} instead.</deprecated>
          </javadoc>
          <method type="Double" name="getNumber" startLine="209" endLine="211" />
          <javadoc>
            <deprecated>v35 Use {@link #scalar()} instead.</deprecated>
          </javadoc>
          <method type="Scalar<Double>" name="getStaticOne" startLine="217" endLine="219" />
          <javadoc>
            <deprecated>v35 Use {@link #scalar()} instead.</deprecated>
          </javadoc>
          <method type="Scalar<Double>" name="getStaticZero" startLine="225" endLine="227" />
          <method type="SimpleArray.Primitive" name="makeArray" startLine="229" endLine="231" />
          <method type="PrimitiveDenseStore" name="makeEye" startLine="233" endLine="240">
            <declaration type="PrimitiveDenseStore" name="retVal" />
          </method>
          <method type="Householder.Primitive" name="makeHouseholder" startLine="242" endLine="244" />
          <method type="PrimitiveDenseStore" name="makeRandom" startLine="246" endLine="260">
            <declaration type="int" name="tmpRowDim" />
            <declaration type="int" name="tmpColDim" />
            <declaration type="int" name="tmpLength" />
            <declaration type="double[]" name="tmpData" />
            <scope startLine="255" endLine="257" />
          </method>
          <method type="Rotation.Primitive" name="makeRotation" startLine="262" endLine="264" />
          <method type="Rotation.Primitive" name="makeRotation" startLine="266" endLine="268" />
          <method type="PrimitiveDenseStore" name="makeZero" startLine="270" endLine="272" />
          <method type="PrimitiveDenseStore" name="rows" startLine="274" endLine="290">
            <declaration type="int" name="tmpRowDim" />
            <declaration type="int" name="tmpColDim" />
            <declaration type="double[]" name="tmpData" />
            <declaration type="Access1D<?>" name="tmpRow" />
            <scope startLine="282" endLine="287">
              <scope startLine="284" endLine="286" />
            </scope>
          </method>
          <method type="PrimitiveDenseStore" name="rows" startLine="292" endLine="308">
            <declaration type="int" name="tmpRowDim" />
            <declaration type="int" name="tmpColDim" />
            <declaration type="double[]" name="tmpData" />
            <declaration type="double[]" name="tmpRow" />
            <scope startLine="300" endLine="305">
              <scope startLine="302" endLine="304" />
            </scope>
          </method>
          <method type="PrimitiveDenseStore" name="rows" startLine="310" endLine="326">
            <declaration type="int" name="tmpRowDim" />
            <declaration type="int" name="tmpColDim" />
            <declaration type="double[]" name="tmpData" />
            <declaration type="List<? extends Number>" name="tmpRow" />
            <scope startLine="318" endLine="323">
              <scope startLine="320" endLine="322" />
            </scope>
          </method>
          <method type="PrimitiveDenseStore" name="rows" startLine="328" endLine="344">
            <declaration type="int" name="tmpRowDim" />
            <declaration type="int" name="tmpColDim" />
            <declaration type="double[]" name="tmpData" />
            <declaration type="Number[]" name="tmpRow" />
            <scope startLine="336" endLine="341">
              <scope startLine="338" endLine="340" />
            </scope>
          </method>
          <method type="Scalar.Factory<Double>" name="scalar" startLine="346" endLine="348" />
          <javadoc>
            <deprecated>v35 Use {@link #scalar()} instead.</deprecated>
          </javadoc>
          <method type="Scalar<Double>" name="toScalar" startLine="354" endLine="356" />
          <javadoc>
            <deprecated>v35 Use {@link #scalar()} instead.</deprecated>
          </javadoc>
          <method type="Scalar<Double>" name="toScalar" startLine="362" endLine="364" />
          <method type="PrimitiveDenseStore" name="transpose" startLine="366" endLine="373">
            <declaration type="PrimitiveDenseStore" name="retVal" />
          </method>
          <declaration type="DecompositionStore.Factory<Double,PrimitiveDenseStore>" name="FACTORY" />
          <declaration type="long" name="ELEMENT_SIZE" />
          <declaration type="long" name="SHALLOW_SIZE" />
          <method type="PrimitiveDenseStore" name="cast" startLine="380" endLine="388">
            <scope startLine="381" endLine="383" />
            <scope startLine="383" endLine="385" />
            <scope startLine="385" endLine="387" />
          </method>
          <method type="Householder.Primitive" name="cast" startLine="390" endLine="398">
            <scope startLine="391" endLine="393" />
            <scope startLine="393" endLine="395" />
            <scope startLine="395" endLine="397" />
          </method>
          <method type="Rotation.Primitive" name="cast" startLine="400" endLine="406">
            <scope startLine="401" endLine="403" />
            <scope startLine="403" endLine="405" />
          </method>
          <method type="void" name="doAfter" startLine="409" endLine="578">
            <declaration type="int" name="tmpDiagDim" />
            <declaration type="int" name="tmpDiagDimMinusOne" />
            <declaration type="double" name="p" />
            <declaration type="double" name="q" />
            <declaration type="double" name="t" />
            <declaration type="double" name="w" />
            <declaration type="double" name="x" />
            <declaration type="double" name="y" />
            <scope startLine="423" endLine="566">
              <scope startLine="429" endLine="475">
                <declaration type="int" name="l" />
                <scope startLine="432" endLine="472">
                  <scope startLine="435" endLine="437" />
                  <scope startLine="438" endLine="441" />
                  <scope startLine="441" endLine="471">
                    <scope startLine="443" endLine="451">
                      <scope startLine="444" endLine="446" />
                      <scope startLine="446" endLine="448" />
                    </scope>
                    <scope startLine="451" endLine="462">
                      <scope startLine="457" endLine="459" />
                      <scope startLine="459" endLine="461" />
                    </scope>
                    <scope startLine="466" endLine="470">
                      <scope startLine="467" endLine="469" />
                    </scope>
                  </scope>
                </scope>
              </scope>
              <scope startLine="475" endLine="565">
                <declaration type="int" name="l" />
                <scope startLine="479" endLine="482" />
                <scope startLine="482" endLine="491">
                  <declaration type="ComplexNumber" name="tmpX" />
                  <declaration type="ComplexNumber" name="tmpY" />
                  <declaration type="ComplexNumber" name="tmpZ" />
                </scope>
                <scope startLine="494" endLine="564">
                  <declaration type="double" name="ra" />
                  <scope startLine="498" endLine="501" />
                  <scope startLine="504" endLine="508" />
                  <scope startLine="508" endLine="563">
                    <scope startLine="510" endLine="518">
                      <declaration type="ComplexNumber" name="tmpX" />
                      <declaration type="ComplexNumber" name="tmpY" />
                      <declaration type="ComplexNumber" name="tmpZ" />
                    </scope>
                    <scope startLine="518" endLine="553">
                      <scope startLine="525" endLine="527" />
                      <declaration type="ComplexNumber" name="tmpX" />
                      <declaration type="ComplexNumber" name="tmpY" />
                      <declaration type="ComplexNumber" name="tmpZ" />
                      <scope startLine="537" endLine="543" />
                      <scope startLine="543" endLine="552">
                        <declaration type="ComplexNumber" name="tmpX1" />
                        <declaration type="ComplexNumber" name="tmpY1" />
                        <declaration type="ComplexNumber" name="tmpZ1" />
                      </scope>
                    </scope>
                    <scope startLine="557" endLine="562">
                      <scope startLine="558" endLine="561" />
                    </scope>
                  </scope>
                </scope>
              </scope>
              <comment>Real vector</comment>
              <comment>Solve real equations</comment>
              <comment>Overflow control</comment>
              <comment>Complex vector</comment>
              <comment>Last vector component imaginary so matrix is triangular</comment>
              <comment>Solve complex equations</comment>
              <comment>Overflow control</comment>
            </scope>
            <scope startLine="569" endLine="577">
              <scope startLine="570" endLine="576">
                <scope startLine="572" endLine="574" />
              </scope>
            </scope>
            <comment>BasicLogger.logDebug("r={}, s={}, z={}", r, s, z);</comment>
            <comment>Back transformation to get eigenvectors of original matrix</comment>
          </method>
          <method type="int" name="doHessenberg" startLine="580" endLine="670">
            <declaration type="int" name="tmpDiagDim" />
            <declaration type="int" name="tmpDiagDimMinusTwo" />
            <declaration type="double[]" name="tmpWorkCopy" />
            <scope startLine="587" endLine="637">
              <declaration type="double" name="tmpColNorm1" />
              <scope startLine="591" endLine="593" />
              <scope startLine="595" endLine="636">
                <declaration type="double" name="tmpInvBeta" />
                <scope startLine="599" endLine="602" />
                <declaration type="double" name="g" />
                <scope startLine="604" endLine="606" />
                <scope startLine="612" endLine="621">
                  <declaration type="double" name="f" />
                  <scope startLine="614" endLine="616" />
                  <scope startLine="618" endLine="620" />
                </scope>
                <scope startLine="623" endLine="632">
                  <declaration type="double" name="f" />
                  <scope startLine="625" endLine="627" />
                  <scope startLine="629" endLine="631" />
                </scope>
              </scope>
              <comment>Scale column.</comment>
              <comment>Compute Householder transformation.</comment>
              <comment>Apply Householder similarity transformation</comment>
              <comment>H = (I-u*u'/h)*H*(I-u*u')/h)</comment>
            </scope>
            <scope startLine="645" endLine="665">
              <declaration type="int" name="tmpIndex" />
              <scope startLine="647" endLine="662">
                <scope startLine="648" endLine="650" />
                <scope startLine="651" endLine="661">
                  <declaration type="double" name="g" />
                  <scope startLine="653" endLine="655" />
                  <scope startLine="658" endLine="660" />
                </scope>
              </scope>
              <scope startLine="662" endLine="664" />
              <comment>Double division avoids possible underflow</comment>
              <comment>BasicLogger.logDebug("Iter V", new PrimitiveDenseStore(tmpDiagDim, tmpDiagDim, aMtrxV));</comment>
            </scope>
            <comment>BasicLogger.logDebug("Jama H", new PrimitiveDenseStore(tmpDiagDim, tmpDiagDim, aMtrxH));</comment>
            <comment>Här borde Hessenberg vara klar</comment>
            <comment>Nedan börjar uträkningen av Q</comment>
            <comment>Accumulate transformations (Algol's ortran).</comment>
            <comment>BasicLogger.logDebug("Jama V", new PrimitiveDenseStore(tmpDiagDim, tmpDiagDim, aMtrxV));</comment>
          </method>
          <method type="double[][]" name="doSchur" startLine="672" endLine="934">
            <declaration type="int" name="tmpDiagDim" />
            <declaration type="int" name="tmpDiagDimMinusOne" />
            <declaration type="double" name="tmpVal" />
            <scope startLine="679" endLine="683">
              <scope startLine="680" endLine="682" />
            </scope>
            <declaration type="double" name="tmpNorm1" />
            <declaration type="double[]" name="tmpMainDiagonal" />
            <declaration type="double[]" name="tmpOffDiagonal" />
            <declaration type="double" name="exshift" />
            <declaration type="double" name="p" />
            <declaration type="double" name="w" />
            <declaration type="int" name="tmpIterCount" />
            <declaration type="int" name="tmpMainIterIndex" />
            <scope startLine="696" endLine="926">
              <declaration type="int" name="l" />
              <scope startLine="700" endLine="709">
                <scope startLine="702" endLine="704" />
                <scope startLine="705" endLine="707" />
              </scope>
              <scope startLine="713" endLine="721" />
              <scope startLine="721" endLine="785">
                <scope startLine="732" endLine="775">
                  <scope startLine="733" endLine="735" />
                  <scope startLine="735" endLine="737" />
                  <scope startLine="740" endLine="742" />
                  <scope startLine="754" endLine="758" />
                  <scope startLine="761" endLine="765" />
                  <scope startLine="768" endLine="772" />
                </scope>
                <scope startLine="775" endLine="780" />
              </scope>
              <scope startLine="785" endLine="925">
                <scope startLine="791" endLine="794" />
                <scope startLine="797" endLine="806">
                  <scope startLine="799" endLine="801" />
                </scope>
                <scope startLine="809" endLine="824">
                  <scope startLine="812" endLine="823">
                    <scope startLine="814" endLine="816" />
                    <scope startLine="818" endLine="820" />
                  </scope>
                </scope>
                <declaration type="int" name="m" />
                <scope startLine="830" endLine="849">
                  <scope startLine="841" endLine="843" />
                  <scope startLine="845" endLine="847" />
                </scope>
                <scope startLine="851" endLine="856">
                  <scope startLine="853" endLine="855" />
                </scope>
                <scope startLine="859" endLine="924">
                  <declaration type="boolean" name="notlast" />
                  <scope startLine="861" endLine="872">
                    <scope startLine="866" endLine="868" />
                  </scope>
                  <scope startLine="875" endLine="877" />
                  <scope startLine="878" endLine="923">
                    <scope startLine="879" endLine="881" />
                    <scope startLine="881" endLine="883" />
                    <scope startLine="892" endLine="900">
                      <scope startLine="894" endLine="897" />
                    </scope>
                    <scope startLine="903" endLine="911">
                      <scope startLine="905" endLine="908" />
                    </scope>
                    <scope startLine="914" endLine="922">
                      <scope startLine="916" endLine="919" />
                    </scope>
                  </scope>
                </scope>
              </scope>
              <comment>Look for single small sub-diagonal element</comment>
              <comment>Check for convergence</comment>
              <comment>One root found</comment>
              <comment>Two roots found</comment>
              <comment>Real pair</comment>
              <comment>Row modification</comment>
              <comment>Column modification</comment>
              <comment>Accumulate transformations</comment>
              <comment>Complex pair</comment>
              <comment>No convergence yet</comment>
              <comment>Form shift</comment>
              <comment>Wilkinson's original ad hoc shift</comment>
              <comment>MATLAB's new ad hoc shift</comment>
              <comment>(Could check iteration count here.)</comment>
              <comment>Look for two consecutive small sub-diagonal elements</comment>
              <comment>Double QR step involving rows l:n and columns m:n</comment>
              <comment>Row modification</comment>
              <comment>Column modification</comment>
              <comment>Accumulate transformations</comment>
              <comment>(s != 0)</comment>
              <comment>k loop</comment>
              <comment>check convergence</comment>
              <comment>while (n >= low)</comment>
            </scope>
            <scope startLine="929" endLine="931" />
            <comment>Store roots isolated by balanc and compute matrix norm</comment>
            <comment>Outer loop over eigenvalue index</comment>
            <comment>Backsubstitute to find vectors of upper triangular form</comment>
          </method>
          <declaration type="PrimitiveMultiplyBoth" name="multiplyBoth" />
          <declaration type="PrimitiveMultiplyLeft" name="multiplyLeft" />
          <declaration type="PrimitiveMultiplyRight" name="multiplyRight" />
          <declaration type="int" name="myColDim" />
          <declaration type="int" name="myRowDim" />
          <declaration type="Array2D<Double>" name="myUtility" />
          <method type="constructor" name="PrimitiveDenseStore" startLine="946" endLine="958" />
          <method type="constructor" name="PrimitiveDenseStore" startLine="960" endLine="972" />
          <method type="constructor" name="PrimitiveDenseStore" startLine="974" endLine="986" />
          <method type="constructor" name="PrimitiveDenseStore" startLine="988" endLine="1000" />
          <method type="Double" name="aggregateAll" startLine="1002" endLine="1034">
            <declaration type="int" name="tmpRowDim" />
            <declaration type="int" name="tmpColDim" />
            <declaration type="AggregatorFunction<Double>" name="tmpMainAggr" />
            <scope startLine="1009" endLine="1028">
              <declaration type="DivideAndConquer" name="tmpConquerer" />
              <method type="void" name="conquer" startLine="1014" endLine="1023">
                <declaration type="AggregatorFunction<Double>" name="tmpPartAggr" />
                <scope startLine="1020" endLine="1022" />
              </method>
            </scope>
            <scope startLine="1028" endLine="1031" />
          </method>
          <method type="void" name="applyCholesky" startLine="1036" endLine="1057">
            <declaration type="double[]" name="tmpData" />
            <declaration type="double[]" name="tmpColumn" />
            <scope startLine="1041" endLine="1053">
              <declaration type="DivideAndConquer" name="tmpConquerer" />
              <method type="void" name="conquer" startLine="1046" endLine="1048" />
            </scope>
            <scope startLine="1053" endLine="1056" />
          </method>
          <method type="void" name="applyLU" startLine="1059" endLine="1080">
            <declaration type="double[]" name="tmpData" />
            <declaration type="double[]" name="tmpColumn" />
            <scope startLine="1064" endLine="1076">
              <declaration type="DivideAndConquer" name="tmpConquerer" />
              <method type="void" name="conquer" startLine="1069" endLine="1071" />
            </scope>
            <scope startLine="1076" endLine="1079" />
          </method>
          <method type="Array2D<Double>" name="asArray2D" startLine="1082" endLine="1084" />
          <method type="Array1D<Double>" name="asList" startLine="1086" endLine="1088" />
          <method type="MatrixStore.Builder<Double>" name="builder" startLine="1090" endLine="1092" />
          <method type="void" name="caxpy" startLine="1094" endLine="1096" />
          <method type="void" name="caxpy" startLine="1098" endLine="1100" />
          <method type="Pivot" name="computeInPlaceLU" startLine="1102" endLine="1150">
            <declaration type="int" name="tmpRowDim" />
            <declaration type="int" name="tmpColDim" />
            <declaration type="int" name="tmpMinDim" />
            <declaration type="Pivot" name="retVal" />
            <declaration type="double[]" name="tmpData" />
            <declaration type="double[]" name="tmpMultipliers" />
            <scope startLine="1114" endLine="1147">
              <declaration type="int" name="tmpPivotRow" />
              <scope startLine="1119" endLine="1122" />
              <scope startLine="1125" endLine="1142">
                <declaration type="int" name="tmpIndex" />
                <declaration type="double" name="tmpDenominator" />
                <scope startLine="1132" endLine="1134" />
                <scope startLine="1138" endLine="1140" />
              </scope>
              <scope startLine="1142" endLine="1145" />
              <comment>Find next pivot row</comment>
              <comment>Pivot?</comment>
              <comment>Do the calculations...</comment>
              <comment>Calculate multipliers and copy to local column</comment>
              <comment>Current column, below the diagonal</comment>
              <comment>Apply transformations to everything below and to the right of the pivot element</comment>
              <comment>ApplyLU.invoke(tmpData, tmpRowDim, ij + 1, tmpColDim, tmpMultipliers, ij);</comment>
            </scope>
            <comment>Main loop - along the diagonal</comment>
          </method>
          <method type="Array1D<ComplexNumber>" name="computeInPlaceSchur" startLine="1152" endLine="1183">
            <declaration type="double[]" name="tmpData" />
            <declaration type="double[]" name="tmpCollectorData" />
            <declaration type="double[][]" name="tmpDiags" />
            <declaration type="double[]" name="aRawReal" />
            <declaration type="double[]" name="aRawImag" />
            <declaration type="int" name="tmpLength" />
            <declaration type="SimpleArray.Complex" name="retVal" />
            <declaration type="ComplexNumber[]" name="tmpRaw" />
            <scope startLine="1178" endLine="1180" />
            <comment>final PrimitiveDenseStore tmpThisCopy = this.copy();</comment>
            <comment>final PrimitiveDenseStore tmpCollCopy = (PrimitiveDenseStore) aTransformationCollector.copy();</comment>
            <comment />
            <comment>tmpThisCopy.computeInPlaceHessenberg(true);</comment>
            <comment>Actual</comment>
            <comment>BasicLogger.logDebug("Schur Step", this);</comment>
            <comment>BasicLogger.logDebug("Hessenberg", tmpThisCopy);</comment>
          </method>
          <method type="PrimitiveDenseStore" name="conjugate" startLine="1185" endLine="1187" />
          <method type="PrimitiveDenseStore" name="copy" startLine="1189" endLine="1191" />
          <method type="long" name="countColumns" startLine="1193" endLine="1195" />
          <method type="long" name="countRows" startLine="1197" endLine="1199" />
          <method type="void" name="divideAndCopyColumn" startLine="1201" endLine="1214">
            <declaration type="double[]" name="tmpData" />
            <declaration type="int" name="tmpRowDim" />
            <declaration type="double[]" name="tmpDestination" />
            <declaration type="int" name="tmpIndex" />
            <declaration type="double" name="tmpDenominator" />
            <scope startLine="1211" endLine="1213" />
          </method>
          <method type="double" name="doubleValue" startLine="1216" endLine="1218" />
          <method type="boolean" name="equals" startLine="1220" endLine="1222" />
          <method type="boolean" name="equals" startLine="1226" endLine="1232">
            <scope startLine="1227" endLine="1229" />
            <scope startLine="1229" endLine="1231" />
          </method>
          <method type="void" name="exchangeColumns" startLine="1234" endLine="1236" />
          <method type="void" name="exchangeRows" startLine="1238" endLine="1240" />
          <method type="PhysicalStore.Factory<Double,PrimitiveDenseStore>" name="factory" startLine="1242" endLine="1244" />
          <method type="void" name="fillByMultiplying" startLine="1246" endLine="1259">
            <declaration type="int" name="tmpComplexity" />
            <declaration type="double[]" name="tmpProductData" />
            <scope startLine="1252" endLine="1254" />
            <scope startLine="1254" endLine="1256" />
            <scope startLine="1256" endLine="1258" />
          </method>
          <method type="void" name="fillColumn" startLine="1261" endLine="1263" />
          <method type="void" name="fillConjugated" startLine="1265" endLine="1267" />
          <method type="void" name="fillDiagonal" startLine="1269" endLine="1271" />
          <method type="void" name="fillMatching" startLine="1273" endLine="1295">
            <declaration type="int" name="tmpRowDim" />
            <declaration type="int" name="tmpColDim" />
            <scope startLine="1278" endLine="1291">
              <declaration type="DivideAndConquer" name="tmpConquerer" />
              <method type="void" name="conquer" startLine="1283" endLine="1285" />
            </scope>
            <scope startLine="1291" endLine="1294" />
          </method>
          <method type="void" name="fillMatching" startLine="1297" endLine="1319">
            <declaration type="int" name="tmpRowDim" />
            <declaration type="int" name="tmpColDim" />
            <scope startLine="1302" endLine="1315">
              <declaration type="DivideAndConquer" name="tmpConquerer" />
              <method type="void" name="conquer" startLine="1307" endLine="1309" />
            </scope>
            <scope startLine="1315" endLine="1318" />
          </method>
          <method type="void" name="fillMatching" startLine="1321" endLine="1343">
            <declaration type="int" name="tmpRowDim" />
            <declaration type="int" name="tmpColDim" />
            <scope startLine="1326" endLine="1339">
              <declaration type="DivideAndConquer" name="tmpConquerer" />
              <method type="void" name="conquer" startLine="1331" endLine="1333" />
            </scope>
            <scope startLine="1339" endLine="1342" />
          </method>
          <method type="void" name="fillMatching" startLine="1345" endLine="1367">
            <declaration type="int" name="tmpRowDim" />
            <declaration type="int" name="tmpColDim" />
            <scope startLine="1350" endLine="1363">
              <declaration type="DivideAndConquer" name="tmpConquerer" />
              <method type="void" name="conquer" startLine="1355" endLine="1357" />
            </scope>
            <scope startLine="1363" endLine="1366" />
          </method>
          <method type="void" name="fillRow" startLine="1369" endLine="1371" />
          <method type="void" name="fillTransposed" startLine="1373" endLine="1395">
            <declaration type="int" name="tmpRowDim" />
            <declaration type="int" name="tmpColDim" />
            <scope startLine="1378" endLine="1391">
              <declaration type="DivideAndConquer" name="tmpConquerer" />
              <method type="void" name="conquer" startLine="1383" endLine="1385" />
            </scope>
            <scope startLine="1391" endLine="1394" />
          </method>
          <method type="boolean" name="generateApplyAndCopyHouseholderColumn" startLine="1397" endLine="1399" />
          <method type="boolean" name="generateApplyAndCopyHouseholderRow" startLine="1401" endLine="1403" />
          <method type="Double" name="get" startLine="1405" endLine="1407" />
          <method type="int" name="getColDim" startLine="1409" endLine="1411" />
          <method type="int" name="getIndexOfLargestInColumn" startLine="1413" endLine="1415" />
          <method type="int" name="getMaxDim" startLine="1417" endLine="1419" />
          <method type="int" name="getMinDim" startLine="1421" endLine="1423" />
          <method type="int" name="getRowDim" startLine="1425" endLine="1427" />
          <method type="int" name="hashCode" startLine="1430" endLine="1432" />
          <method type="boolean" name="isAbsolute" startLine="1434" endLine="1436" />
          <method type="boolean" name="isAbsolute" startLine="1438" endLine="1440" />
          <method type="boolean" name="isInfinite" startLine="1442" endLine="1444" />
          <method type="boolean" name="isLowerLeftShaded" startLine="1446" endLine="1448" />
          <method type="boolean" name="isNaN" startLine="1450" endLine="1452" />
          <method type="boolean" name="isPositive" startLine="1454" endLine="1456" />
          <method type="boolean" name="isPositive" startLine="1458" endLine="1460" />
          <method type="boolean" name="isReal" startLine="1462" endLine="1464" />
          <method type="boolean" name="isReal" startLine="1466" endLine="1468" />
          <method type="boolean" name="isUpperRightShaded" startLine="1470" endLine="1472" />
          <method type="boolean" name="isZero" startLine="1474" endLine="1476" />
          <method type="boolean" name="isZero" startLine="1478" endLine="1480" />
          <method type="void" name="maxpy" startLine="1482" endLine="1504">
            <declaration type="int" name="tmpRowDim" />
            <declaration type="int" name="tmpColDim" />
            <scope startLine="1487" endLine="1500">
              <declaration type="DivideAndConquer" name="tmpConquerer" />
              <method type="void" name="conquer" startLine="1492" endLine="1494" />
            </scope>
            <scope startLine="1500" endLine="1503" />
          </method>
          <method type="void" name="modifyAll" startLine="1507" endLine="1529">
            <declaration type="int" name="tmpRowDim" />
            <declaration type="int" name="tmpColDim" />
            <scope startLine="1512" endLine="1525">
              <declaration type="DivideAndConquer" name="tmpConquerer" />
              <method type="void" name="conquer" startLine="1517" endLine="1519" />
            </scope>
            <scope startLine="1525" endLine="1528" />
          </method>
          <method type="void" name="modifyColumn" startLine="1531" endLine="1533" />
          <method type="void" name="modifyColumn" startLine="1535" endLine="1537" />
          <method type="void" name="modifyDiagonal" startLine="1539" endLine="1541" />
          <method type="void" name="modifyDiagonal" startLine="1543" endLine="1545" />
          <method type="void" name="modifyOne" startLine="1547" endLine="1554">
            <declaration type="double" name="tmpValue" />
          </method>
          <method type="void" name="modifyRow" startLine="1556" endLine="1558" />
          <method type="void" name="modifyRow" startLine="1560" endLine="1562" />
          <method type="MatrixStore<Double>" name="multiplyLeft" startLine="1564" endLine="1571">
            <declaration type="PrimitiveDenseStore" name="retVal" />
          </method>
          <method type="MatrixStore<Double>" name="multiplyRight" startLine="1573" endLine="1580">
            <declaration type="PrimitiveDenseStore" name="retVal" />
          </method>
          <method type="void" name="negateColumn" startLine="1582" endLine="1584" />
          <method type="void" name="raxpy" startLine="1586" endLine="1588" />
          <method type="void" name="rotateRight" startLine="1590" endLine="1592" />
          <method type="void" name="set" startLine="1594" endLine="1596" />
          <method type="void" name="set" startLine="1598" endLine="1600" />
          <method type="void" name="setToIdentity" startLine="1602" endLine="1605" />
          <method type="void" name="substituteBackwards" startLine="1607" endLine="1629">
            <declaration type="int" name="tmpRowDim" />
            <declaration type="int" name="tmpColDim" />
            <scope startLine="1612" endLine="1625">
              <declaration type="DivideAndConquer" name="tmpConquerer" />
              <method type="void" name="conquer" startLine="1617" endLine="1619" />
            </scope>
            <scope startLine="1625" endLine="1628" />
          </method>
          <method type="void" name="substituteForwards" startLine="1631" endLine="1653">
            <declaration type="int" name="tmpRowDim" />
            <declaration type="int" name="tmpColDim" />
            <scope startLine="1636" endLine="1649">
              <declaration type="DivideAndConquer" name="tmpConquerer" />
              <method type="void" name="conquer" startLine="1641" endLine="1643" />
            </scope>
            <scope startLine="1649" endLine="1652" />
          </method>
          <method type="PrimitiveScalar" name="toScalar" startLine="1655" endLine="1657" />
          <method type="String" name="toString" startLine="1660" endLine="1662" />
          <method type="void" name="transformLeft" startLine="1664" endLine="1690">
            <declaration type="Householder.Primitive" name="tmpTransf" />
            <declaration type="double[]" name="tmpData" />
            <declaration type="int" name="tmpRowDim" />
            <declaration type="int" name="tmpColDim" />
            <scope startLine="1673" endLine="1686">
              <declaration type="DivideAndConquer" name="tmpConquerer" />
              <method type="void" name="conquer" startLine="1678" endLine="1680" />
            </scope>
            <scope startLine="1686" endLine="1689" />
          </method>
          <method type="void" name="transformLeft" startLine="1692" endLine="1714">
            <declaration type="Rotation.Primitive" name="tmpTransf" />
            <declaration type="int" name="tmpLow" />
            <declaration type="int" name="tmpHigh" />
            <scope startLine="1699" endLine="1705">
              <scope startLine="1700" endLine="1702" />
              <scope startLine="1702" endLine="1704" />
            </scope>
            <scope startLine="1705" endLine="1713">
              <scope startLine="1706" endLine="1708" />
              <scope startLine="1708" endLine="1710" />
              <scope startLine="1710" endLine="1712" />
            </scope>
          </method>
          <method type="void" name="transformRight" startLine="1716" endLine="1742">
            <declaration type="Householder.Primitive" name="tmpTransf" />
            <declaration type="double[]" name="tmpData" />
            <declaration type="int" name="tmpRowDim" />
            <declaration type="int" name="tmpColDim" />
            <scope startLine="1725" endLine="1738">
              <declaration type="DivideAndConquer" name="tmpConquerer" />
              <method type="void" name="conquer" startLine="1730" endLine="1732" />
            </scope>
            <scope startLine="1738" endLine="1741" />
          </method>
          <method type="void" name="transformRight" startLine="1744" endLine="1766">
            <declaration type="Rotation.Primitive" name="tmpTransf" />
            <declaration type="int" name="tmpLow" />
            <declaration type="int" name="tmpHigh" />
            <scope startLine="1751" endLine="1757">
              <scope startLine="1752" endLine="1754" />
              <scope startLine="1754" endLine="1756" />
            </scope>
            <scope startLine="1757" endLine="1765">
              <scope startLine="1758" endLine="1760" />
              <scope startLine="1760" endLine="1762" />
              <scope startLine="1762" endLine="1764" />
            </scope>
          </method>
          <method type="void" name="transformSymmetric" startLine="1768" endLine="1770" />
          <method type="PrimitiveDenseStore" name="transpose" startLine="1772" endLine="1779">
            <declaration type="PrimitiveDenseStore" name="retVal" />
          </method>
          <method type="void" name="tred2" startLine="1781" endLine="1783" />
          <method type="void" name="visitAll" startLine="1786" endLine="1788" />
          <method type="void" name="visitColumn" startLine="1790" endLine="1792" />
          <method type="void" name="visitColumn" startLine="1794" endLine="1796" />
          <method type="void" name="visitDiagonal" startLine="1798" endLine="1800" />
          <method type="void" name="visitDiagonal" startLine="1802" endLine="1804" />
          <method type="void" name="visitRow" startLine="1806" endLine="1808" />
          <method type="void" name="visitRow" startLine="1810" endLine="1812" />
        </interface>
      </interface>
    </interface>
  </class>
</source>
