<?xml version="1.0" encoding="UTF-8"?>
<source package="org.ojalgo.matrix.store.operation">
  <import name="static org.ojalgo.constant.PrimitiveMath.*" />
  <import name="java.math.BigDecimal" />
  <import name="org.ojalgo.constant.BigMath" />
  <import name="org.ojalgo.scalar.ComplexNumber" />
  <class name="MultiplyHermitianAndVector" extends="MatrixOperation" startLine="31">
    <javadoc>
      <text>* Multiplies an hermitian (square symmetric) matrix with a vector.
 * Will only read from the lower/left triangular part of the matrix,
 * and will only calculate the lower/left part of the results.</text>
      <author>apete</author>
    </javadoc>
    <declaration type="int" name="THRESHOLD" />
    <method type="void" name="invoke" startLine="43" endLine="60">
      <declaration type="int" name="tmpRowDim" />
      <declaration type="BigDecimal" name="tmpVal" />
      <scope startLine="48" endLine="59">
        <scope startLine="50" endLine="53" />
        <scope startLine="54" endLine="57" />
        <comment>tmpVal += aSymmetric[i + c * tmpRowDim] * aVector[c];</comment>
        <comment>tmpVal += aSymmetric[c + i * tmpRowDim] * aVector[c];</comment>
      </scope>
    </method>
    <method type="void" name="invoke" startLine="63" endLine="80">
      <declaration type="int" name="tmpRowDim" />
      <declaration type="ComplexNumber" name="tmpVal" />
      <scope startLine="68" endLine="79">
        <scope startLine="70" endLine="73" />
        <scope startLine="74" endLine="77" />
        <comment>tmpVal += aSymmetric[i + c * tmpRowDim] * aVector[c];</comment>
        <comment>tmpVal += aSymmetric[c + i * tmpRowDim] * aVector[c];</comment>
      </scope>
    </method>
    <method type="void" name="invoke" startLine="83" endLine="98">
      <declaration type="int" name="tmpRowDim" />
      <declaration type="double" name="tmpVal" />
      <scope startLine="88" endLine="97">
        <scope startLine="90" endLine="92" />
        <scope startLine="93" endLine="95" />
      </scope>
    </method>
    <method type="constructor" name="MultiplyHermitianAndVector" startLine="100" endLine="102" />
  </class>
</source>
