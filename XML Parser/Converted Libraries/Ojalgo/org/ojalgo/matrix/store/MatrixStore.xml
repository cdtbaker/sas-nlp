<?xml version="1.0" encoding="UTF-8"?>
<source package="org.ojalgo.matrix.store">
  <import name="org.ojalgo.ProgrammingError" />
  <import name="org.ojalgo.access.Access1D" />
  <import name="org.ojalgo.access.Access2D" />
  <import name="org.ojalgo.function.UnaryFunction" />
  <import name="org.ojalgo.function.VoidFunction" />
  <import name="org.ojalgo.function.aggregator.Aggregator" />
  <import name="org.ojalgo.scalar.Scalar" />
  <import name="org.ojalgo.type.context.NumberContext" />
  <interface name="MatrixStore" startLine="33">
    <implements name="Access2D<N>" />
    <javadoc>
      <text>* <p>
 * A {@linkplain MatrixStore} extends {@linkplain Access2D} (as well as {@linkplain Access2D.Visitable} and{@linkplain Access2D.Elements}) and defines matrix addition and matrix multiplication.
 * </p>
 * <p>
 * A {@linkplain MatrixStore} is a matrix (two-dimensional) store of numbers/scalars.
 * </p>
 * <p>
 * This interface does not define any methods that require implementations to alter the matrix. Either the methods
 * return matrix elements, some meta data or produce new instances.
 * </p>
 * <p>
 * The methods {@linkplain #conjugate()}, {@linkplain #copy()} and {@linkplain #transpose()} return{@linkplain PhysicalStore} instances. {@linkplain PhysicalStore} extends {@linkplain MatrixStore}. It defines
 * additional methods, and is mutable.
 * </p></text>
      <author>apete</author>
    </javadoc>
    <class name="Builder" startLine="55">
      <method type="MatrixStore<N>" name="buildColumn" startLine="57" endLine="67">
        <declaration type="MatrixStore<N>" name="retVal" />
        <scope startLine="59" endLine="61" />
        <declaration type="int" name="tmpRowDim" />
        <scope startLine="63" endLine="65" />
      </method>
      <method type="MatrixStore<N>" name="buildColumn" startLine="69" endLine="76">
        <declaration type="MatrixStore<N>" name="retVal" />
        <declaration type="int" name="tmpRowDim" />
        <scope startLine="72" endLine="74" />
      </method>
      <method type="MatrixStore<N>" name="buildRow" startLine="78" endLine="88">
        <declaration type="MatrixStore<N>" name="retVal" />
        <scope startLine="80" endLine="82" />
        <declaration type="int" name="tmpColDim" />
        <scope startLine="84" endLine="86" />
      </method>
      <method type="MatrixStore<N>" name="buildRow" startLine="90" endLine="97">
        <declaration type="MatrixStore<N>" name="retVal" />
        <declaration type="int" name="tmpColDim" />
        <scope startLine="93" endLine="95" />
      </method>
      <declaration type="MatrixStore<N>" name="myStore" />
      <method type="constructor" name="Builder" startLine="101" endLine="106" />
      <method type="constructor" name="Builder" startLine="109" endLine="114" />
      <method type="Builder<N>" name="above" startLine="116" endLine="120">
        <declaration type="ZeroStore<N>" name="tmpUpperStore" />
      </method>
      <method type="Builder<N>" name="above" startLine="122" endLine="126">
        <declaration type="MatrixStore<N>" name="tmpUpperStore" />
      </method>
      <method type="Builder<N>" name="above" startLine="128" endLine="132">
        <declaration type="MatrixStore<N>" name="tmpUpperStore" />
      </method>
      <method type="Builder<N>" name="below" startLine="134" endLine="138">
        <declaration type="ZeroStore<N>" name="tmpLowerStore" />
      </method>
      <method type="Builder<N>" name="below" startLine="140" endLine="144">
        <declaration type="MatrixStore<N>" name="tmpLowerStore" />
      </method>
      <method type="Builder<N>" name="below" startLine="146" endLine="150">
        <declaration type="MatrixStore<N>" name="tmpLowerStore" />
      </method>
      <method type="Builder<N>" name="bidiagonal" startLine="152" endLine="159">
        <scope startLine="153" endLine="155" />
        <scope startLine="155" endLine="157" />
      </method>
      <method type="MatrixStore<N>" name="build" startLine="161" endLine="163" />
      <method type="Builder<N>" name="column" startLine="165" endLine="168" />
      <method type="Builder<N>" name="columns" startLine="170" endLine="173" />
      <method type="Builder<N>" name="conjugate" startLine="175" endLine="182">
        <scope startLine="176" endLine="178" />
        <scope startLine="178" endLine="180" />
      </method>
      <method type="Builder<N>" name="diagonal" startLine="184" endLine="187" />
      <method type="Builder<N>" name="diagonally" startLine="189" endLine="214">
        <declaration type="PhysicalStore.Factory<N,?>" name="tmpFactory" />
        <declaration type="MatrixStore<N>" name="tmpDiagonalStore" />
        <scope startLine="194" endLine="211">
          <declaration type="int" name="tmpBaseRowDim" />
          <declaration type="int" name="tmpBaseColDim" />
          <declaration type="int" name="tmpDiagRowDim" />
          <declaration type="int" name="tmpDiagColDim" />
          <declaration type="MatrixStore<N>" name="tmpRightStore" />
          <declaration type="MatrixStore<N>" name="tmpAboveStore" />
          <declaration type="MatrixStore<N>" name="tmpLeftStore" />
          <declaration type="MatrixStore<N>" name="tmpBelowStore" />
        </scope>
      </method>
      <method type="Builder<N>" name="hessenberg" startLine="216" endLine="223">
        <scope startLine="217" endLine="219" />
        <scope startLine="219" endLine="221" />
      </method>
      <method type="Builder<N>" name="left" startLine="225" endLine="229">
        <declaration type="MatrixStore<N>" name="tmpLeftStore" />
      </method>
      <method type="Builder<N>" name="left" startLine="231" endLine="235">
        <declaration type="MatrixStore<N>" name="tmpLeftStore" />
      </method>
      <method type="Builder<N>" name="left" startLine="237" endLine="241">
        <declaration type="MatrixStore<N>" name="tmpLeftStore" />
      </method>
      <method type="Builder<N>" name="modify" startLine="243" endLine="246" />
      <method type="Builder<N>" name="right" startLine="248" endLine="252">
        <declaration type="MatrixStore<N>" name="tmpRightStore" />
      </method>
      <method type="Builder<N>" name="right" startLine="254" endLine="258">
        <declaration type="MatrixStore<N>" name="tmpRightStore" />
      </method>
      <method type="Builder<N>" name="right" startLine="260" endLine="264">
        <declaration type="MatrixStore<N>" name="tmpRightStore" />
      </method>
      <method type="Builder<N>" name="row" startLine="266" endLine="269" />
      <method type="Builder<N>" name="rows" startLine="271" endLine="274" />
      <method type="Builder<N>" name="superimpose" startLine="276" endLine="279" />
      <method type="Builder<N>" name="superimpose" startLine="281" endLine="284" />
      <method type="Builder<N>" name="transpose" startLine="286" endLine="293">
        <scope startLine="287" endLine="289" />
        <scope startLine="289" endLine="291" />
      </method>
      <method type="Builder<N>" name="triangular" startLine="295" endLine="302">
        <scope startLine="296" endLine="298" />
        <scope startLine="298" endLine="300" />
      </method>
      <method type="Builder<N>" name="tridiagonal" startLine="304" endLine="307" />
      <method name="aggregateAll" type="N" startLine="311" endLine="311" />
      <method name="builder" type="MatrixStore.Builder<N>" startLine="313" endLine="313" />
      <method name="conjugate" type="PhysicalStore<N>" startLine="315" endLine="320" />
      <javadoc>
        <text>* Each call must produce a new instance.</text>
        <return>A new conjugated {@linkplain PhysicalStore} copy.</return>
      </javadoc>
      <method name="copy" type="PhysicalStore<N>" startLine="322" endLine="327" />
      <javadoc>
        <text>* Each call must produce a new instance.</text>
        <return>A new {@linkplain PhysicalStore} copy.</return>
      </javadoc>
      <method name="equals" type="boolean" startLine="329" endLine="329" />
      <method name="factory" type="PhysicalStore.Factory<N,?>" startLine="331" endLine="331" />
      <method name="getMinDim" type="int" startLine="333" endLine="337" />
      <javadoc>
        <deprecated>v35</deprecated>
      </javadoc>
      <method name="isAbsolute" type="boolean" startLine="339" endLine="342" />
      <javadoc>
        <see>Scalar#isAbsolute()</see>
      </javadoc>
      <method name="isLowerLeftShaded" type="boolean" startLine="344" endLine="349" />
      <javadoc>
        <text>* The entries below (left of) the first subdiagonal are zero - effectively an upper Hessenberg matrix.</text>
        <see>#isUpperRightShaded()</see>
      </javadoc>
      <method name="isPositive" type="boolean" startLine="351" endLine="354" />
      <javadoc>
        <see>Scalar#isPositive()</see>
      </javadoc>
      <method name="isReal" type="boolean" startLine="356" endLine="359" />
      <javadoc>
        <see>Scalar#isReal()</see>
      </javadoc>
      <method name="isUpperRightShaded" type="boolean" startLine="361" endLine="366" />
      <javadoc>
        <text>* The entries above (right of) the first superdiagonal are zero - effectively a lower Hessenberg matrix.</text>
        <see>#isLowerLeftShaded()</see>
      </javadoc>
      <method name="isZero" type="boolean" startLine="368" endLine="371" />
      <javadoc>
        <see>Scalar#isZero()</see>
      </javadoc>
      <method name="multiplyLeft" type="MatrixStore<N>" startLine="373" endLine="373" />
      <method name="multiplyRight" type="MatrixStore<N>" startLine="375" endLine="375" />
      <method name="toScalar" type="Scalar<N>" startLine="377" endLine="377" />
      <method name="transpose" type="PhysicalStore<N>" startLine="379" endLine="384" />
      <javadoc>
        <text>* Each call must produce a new instance.</text>
        <return>A new transposed {@linkplain PhysicalStore} copy.</return>
      </javadoc>
      <method name="visitAll" type="void" startLine="386" endLine="386" />
      <method name="visitColumn" type="void" startLine="388" endLine="388" />
      <method name="visitDiagonal" type="void" startLine="390" endLine="390" />
      <method name="visitRow" type="void" startLine="392" endLine="392" />
    </class>
  </interface>
</source>
