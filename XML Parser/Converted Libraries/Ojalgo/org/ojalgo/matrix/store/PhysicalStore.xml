<?xml version="1.0" encoding="UTF-8"?>
<source package="org.ojalgo.matrix.store">
  <import name="java.io.Serializable" />
  <import name="java.util.List" />
  <import name="org.ojalgo.access.Access1D" />
  <import name="org.ojalgo.access.Access2D" />
  <import name="org.ojalgo.array.SimpleArray" />
  <import name="org.ojalgo.function.BinaryFunction" />
  <import name="org.ojalgo.function.FunctionSet" />
  <import name="org.ojalgo.function.UnaryFunction" />
  <import name="org.ojalgo.function.aggregator.AggregatorCollection" />
  <import name="org.ojalgo.matrix.transformation.Householder" />
  <import name="org.ojalgo.matrix.transformation.Rotation" />
  <import name="org.ojalgo.random.RandomNumber" />
  <import name="org.ojalgo.scalar.Scalar" />
  <interface name="PhysicalStore" startLine="39">
    <implements name="MatrixStore<N>" />
    <implements name="Access2D.Elements" />
    <implements name="Access2D.Fillable<N>" />
    <implements name="Access2D.Modifiable<N>" />
    <implements name="Access2D.Visitable<N>" />
    <javadoc>
      <text>* <p>
 * PhysicalStore:s, as opposed to MatrixStore:s, are mutable. The vast majorty of the methods defined here return void
 * and none return {@linkplain PhysicalStore} or {@linkplain MatrixStore}.
 * </p>
 * <p>
 * This interface and its implementations are central to ojAlgo.
 * </p></text>
      <author>apete</author>
    </javadoc>
    <interface name="Factory" startLine="52">
      <implements name="Access2D.Factory<I>" />
      <implements name="Serializable" />
      <method name="aggregator" type="AggregatorCollection<N>" startLine="54" endLine="54" />
      <method name="conjugate" type="I" startLine="56" endLine="56" />
      <method name="function" type="FunctionSet<N>" startLine="58" endLine="58" />
      <method name="getAggregatorCollection" type="AggregatorCollection<N>" startLine="60" endLine="64" />
      <javadoc>
        <deprecated>v35 Use {@link #aggregator()} instead</deprecated>
      </javadoc>
      <method name="getFunctionSet" type="FunctionSet<N>" startLine="66" endLine="70" />
      <javadoc>
        <deprecated>v35 Use {@link #function()} instead</deprecated>
      </javadoc>
      <method name="getNumber" type="N" startLine="72" endLine="76" />
      <javadoc>
        <deprecated>v35 Use {@link #scalar()} instead.</deprecated>
      </javadoc>
      <method name="getNumber" type="N" startLine="78" endLine="82" />
      <javadoc>
        <deprecated>v35 Use {@link #scalar()} instead.</deprecated>
      </javadoc>
      <method name="getStaticOne" type="Scalar<N>" startLine="84" endLine="88" />
      <javadoc>
        <deprecated>v35 Use {@link #scalar()} instead.</deprecated>
      </javadoc>
      <method name="getStaticZero" type="Scalar<N>" startLine="90" endLine="94" />
      <javadoc>
        <deprecated>v35 Use {@link #scalar()} instead.</deprecated>
      </javadoc>
      <method name="makeArray" type="SimpleArray<N>" startLine="96" endLine="96" />
      <method name="makeHouseholder" type="Householder<N>" startLine="98" endLine="98" />
      <method name="makeRotation" type="Rotation<N>" startLine="100" endLine="100" />
      <method name="makeRotation" type="Rotation<N>" startLine="102" endLine="102" />
      <method name="scalar" type="Scalar.Factory<N>" startLine="104" endLine="104" />
      <method name="toScalar" type="Scalar<N>" startLine="106" endLine="110" />
      <javadoc>
        <deprecated>v35 Use {@link #scalar()} instead.</deprecated>
      </javadoc>
      <method name="toScalar" type="Scalar<N>" startLine="112" endLine="116" />
      <javadoc>
        <deprecated>v35 Use {@link #scalar()} instead.</deprecated>
      </javadoc>
      <method name="transpose" type="I" startLine="118" endLine="118" />
      <method type="AggregatorCollection<Double>" name="aggregator" startLine="124" endLine="126" />
      <method type="PhysicalStore<Double>" name="columns" startLine="128" endLine="130" />
      <method type="PhysicalStore<Double>" name="columns" startLine="132" endLine="135">
        <comment>TODO Auto-generated method stub</comment>
      </method>
      <method type="PhysicalStore<Double>" name="columns" startLine="137" endLine="140">
        <comment>TODO Auto-generated method stub</comment>
      </method>
      <method type="PhysicalStore<Double>" name="columns" startLine="142" endLine="145">
        <comment>TODO Auto-generated method stub</comment>
      </method>
      <method type="PhysicalStore<Double>" name="conjugate" startLine="147" endLine="150">
        <comment>TODO Auto-generated method stub</comment>
      </method>
      <method type="PhysicalStore<Double>" name="copy" startLine="152" endLine="155">
        <comment>TODO Auto-generated method stub</comment>
      </method>
      <method type="FunctionSet<Double>" name="function" startLine="157" endLine="160">
        <comment>TODO Auto-generated method stub</comment>
      </method>
      <method type="AggregatorCollection<Double>" name="getAggregatorCollection" startLine="162" endLine="165">
        <comment>TODO Auto-generated method stub</comment>
      </method>
      <method type="FunctionSet<Double>" name="getFunctionSet" startLine="167" endLine="170">
        <comment>TODO Auto-generated method stub</comment>
      </method>
      <method type="Double" name="getNumber" startLine="172" endLine="175">
        <comment>TODO Auto-generated method stub</comment>
      </method>
      <method type="Double" name="getNumber" startLine="177" endLine="180">
        <comment>TODO Auto-generated method stub</comment>
      </method>
      <method type="Scalar<Double>" name="getStaticOne" startLine="182" endLine="185">
        <comment>TODO Auto-generated method stub</comment>
      </method>
      <method type="Scalar<Double>" name="getStaticZero" startLine="187" endLine="190">
        <comment>TODO Auto-generated method stub</comment>
      </method>
      <method type="SimpleArray<Double>" name="makeArray" startLine="192" endLine="195">
        <comment>TODO Auto-generated method stub</comment>
      </method>
      <method type="PhysicalStore<Double>" name="makeEye" startLine="197" endLine="200">
        <comment>TODO Auto-generated method stub</comment>
      </method>
      <method type="Householder<Double>" name="makeHouseholder" startLine="202" endLine="205">
        <comment>TODO Auto-generated method stub</comment>
      </method>
      <method type="PhysicalStore<Double>" name="makeRandom" startLine="207" endLine="210">
        <comment>TODO Auto-generated method stub</comment>
      </method>
      <method type="Rotation<Double>" name="makeRotation" startLine="212" endLine="215">
        <comment>TODO Auto-generated method stub</comment>
      </method>
      <method type="Rotation<Double>" name="makeRotation" startLine="217" endLine="220">
        <comment>TODO Auto-generated method stub</comment>
      </method>
      <method type="PhysicalStore<Double>" name="makeZero" startLine="222" endLine="225">
        <comment>TODO Auto-generated method stub</comment>
      </method>
      <method type="PhysicalStore<Double>" name="rows" startLine="227" endLine="230">
        <comment>TODO Auto-generated method stub</comment>
      </method>
      <method type="PhysicalStore<Double>" name="rows" startLine="232" endLine="235">
        <comment>TODO Auto-generated method stub</comment>
      </method>
      <method type="PhysicalStore<Double>" name="rows" startLine="237" endLine="240">
        <comment>TODO Auto-generated method stub</comment>
      </method>
      <method type="PhysicalStore<Double>" name="rows" startLine="242" endLine="245">
        <comment>TODO Auto-generated method stub</comment>
      </method>
      <method type="org.ojalgo.scalar.Scalar.Factory<Double>" name="scalar" startLine="247" endLine="250">
        <comment>TODO Auto-generated method stub</comment>
      </method>
      <method type="Scalar<Double>" name="toScalar" startLine="252" endLine="255">
        <comment>TODO Auto-generated method stub</comment>
      </method>
      <method type="Scalar<Double>" name="toScalar" startLine="257" endLine="260">
        <comment>TODO Auto-generated method stub</comment>
      </method>
      <method type="PhysicalStore<Double>" name="transpose" startLine="262" endLine="265">
        <comment>TODO Auto-generated method stub</comment>
      </method>
      <declaration type="Factory<Double,PhysicalStore<Double>>" name="PRIMITIVE" />
      <method name="asList" type="List<N>" startLine="268" endLine="272" />
      <javadoc>
        <return>The elements of the physical store as a fixed size (1 dimensional) list. The elements may be accessed
 * either row or colomn major.</return>
      </javadoc>
      <method name="caxpy" type="void" startLine="274" endLine="283" />
      <javadoc>
        <text>* <p>
 * <b>c</b>olumn <b>a</b> * <b>x</b> <b>p</b>lus <b>y</b>
 * </p>
 * [this(*,aColY)] = aSclrA [this(*,aColX)] + [this(*,aColY)]</text>
        <deprecated>v32 Let me know if you need this</deprecated>
      </javadoc>
      <method name="exchangeColumns" type="void" startLine="285" endLine="285" />
      <method name="exchangeRows" type="void" startLine="287" endLine="287" />
      <method name="fillByMultiplying" type="void" startLine="289" endLine="289" />
      <method name="fillConjugated" type="void" startLine="291" endLine="291" />
      <method name="fillMatching" type="void" startLine="293" endLine="293" />
      <method name="fillMatching" type="void" startLine="295" endLine="301" />
      <javadoc>
        <text>* <p>
 * Will replace the elements of [this] with the results of element wise invocation of the input binary funtion:
 * </p>
 * <code>this(i,j) = aFunc.invoke(aLeftArg(i,j),aRightArg(i,j))</code></text>
      </javadoc>
      <method name="fillMatching" type="void" startLine="303" endLine="309" />
      <javadoc>
        <text>* <p>
 * Will replace the elements of [this] with the results of element wise invocation of the input binary funtion:
 * </p>
 * <code>this(i,j) = aFunc.invoke(aLeftArg(i,j),aRightArg))</code></text>
      </javadoc>
      <method name="fillMatching" type="void" startLine="311" endLine="317" />
      <javadoc>
        <text>* <p>
 * Will replace the elements of [this] with the results of element wise invocation of the input binary funtion:
 * </p>
 * <code>this(i,j) = aFunc.invoke(aLeftArg,aRightArg(i,j))</code></text>
      </javadoc>
      <method name="fillTransposed" type="void" startLine="319" endLine="319" />
      <method name="maxpy" type="void" startLine="321" endLine="330" />
      <javadoc>
        <text>* <p>
 * <b>m</b>atrix <b>a</b> * <b>x</b> <b>p</b>lus <b>y</b>
 * </p>
 * [this] = aSclrA [aMtrxX] + [this]</text>
        <deprecated>v32 Let me know if you need this</deprecated>
      </javadoc>
      <method name="modifyOne" type="void" startLine="332" endLine="332" />
      <method name="raxpy" type="void" startLine="334" endLine="343" />
      <javadoc>
        <text>* <p>
 * <b>r</b>ow <b>a</b> * <b>x</b> <b>p</b>lus <b>y</b>
 * </p>
 * [this(aRowY,*)] = aSclrA [this(aRowX,*)] + [this(aRowY,*)]</text>
        <deprecated>v32 Let me know if you need this</deprecated>
      </javadoc>
      <method name="transformLeft" type="void" startLine="345" endLine="345" />
      <method name="transformLeft" type="void" startLine="347" endLine="362" />
      <javadoc>
        <text>* <p>
 * As in {@link MatrixStore#multiplyLeft(MatrixStore)} where the left/parameter matrix is a plane rotation.
 * </p>
 * <p>
 * Multiplying by a plane rotation from the left means that [this] gets two of its rows updated to new combinations
 * of those two (current) rows.
 * </p>
 * <p>
 * There are two ways to transpose/invert a rotation. Either you negate the angle or you interchange the two indeces
 * that define the rotation plane.
 * </p></text>
        <see>#transformRight(Rotation)</see>
      </javadoc>
      <method name="transformRight" type="void" startLine="364" endLine="364" />
      <method name="transformRight" type="void" startLine="366" endLine="380" />
      <javadoc>
        <text>* <p>
 * As in {@link MatrixStore#multiplyRight(MatrixStore)} where the right/parameter matrix is a plane rotation.
 * </p>
 * <p>
 * Multiplying by a plane rotation from the right means that [this] gets two of its columns updated to new
 * combinations of those two (current) columns.
 * </p>
 * <p>
 * There result is undefined if the two input indeces are the same (in which case the rotation plane is undefined).
 * </p></text>
        <see>#transformLeft(Rotation)</see>
      </javadoc>
    </interface>
  </interface>
</source>
