<?xml version="1.0" encoding="UTF-8"?>
<source package="org.ojalgo.matrix.transformation">
  <import name="java.math.BigDecimal" />
  <import name="org.ojalgo.ProgrammingError" />
  <import name="org.ojalgo.constant.PrimitiveMath" />
  <import name="org.ojalgo.function.BigFunction" />
  <import name="org.ojalgo.function.ComplexFunction" />
  <import name="org.ojalgo.function.PrimitiveFunction" />
  <import name="org.ojalgo.scalar.ComplexNumber" />
  <class name="Rotation" extends="Object" startLine="33">
    <class name="Big" extends="Rotation<BigDecimal>" startLine="35">
      <declaration type="BigDecimal" name="cos" />
      <declaration type="BigDecimal" name="sin" />
      <method type="constructor" name="Big" startLine="40" endLine="42" />
      <method type="constructor" name="Big" startLine="44" endLine="46" />
      <method type="constructor" name="Big" startLine="48" endLine="54" />
      <method type="constructor" name="Big" startLine="56" endLine="62" />
      <method type="double" name="doubleCosineValue" startLine="65" endLine="67" />
      <method type="double" name="doubleSineValue" startLine="70" endLine="72" />
      <method type="BigDecimal" name="getCosine" startLine="75" endLine="77" />
      <method type="BigDecimal" name="getSine" startLine="80" endLine="82" />
      <method type="Big" name="invert" startLine="85" endLine="87" />
      <class name="Complex" extends="Rotation<ComplexNumber>" startLine="91">
        <declaration type="ComplexNumber" name="cos" />
        <declaration type="ComplexNumber" name="sin" />
        <method type="constructor" name="Complex" startLine="96" endLine="98" />
        <method type="constructor" name="Complex" startLine="100" endLine="102" />
        <method type="constructor" name="Complex" startLine="104" endLine="110" />
        <method type="constructor" name="Complex" startLine="112" endLine="118" />
        <method type="double" name="doubleCosineValue" startLine="121" endLine="123" />
        <method type="double" name="doubleSineValue" startLine="126" endLine="128" />
        <method type="ComplexNumber" name="getCosine" startLine="131" endLine="133" />
        <method type="ComplexNumber" name="getSine" startLine="136" endLine="138" />
        <method type="Complex" name="invert" startLine="141" endLine="143" />
        <class name="Primitive" extends="Rotation<Double>" startLine="147">
          <declaration type="double" name="cos" />
          <declaration type="double" name="sin" />
          <method type="constructor" name="Primitive" startLine="152" endLine="154" />
          <method type="constructor" name="Primitive" startLine="156" endLine="158" />
          <method type="constructor" name="Primitive" startLine="160" endLine="166" />
          <method type="constructor" name="Primitive" startLine="168" endLine="183">
            <scope startLine="172" endLine="174" />
            <scope startLine="174" endLine="176" />
            <scope startLine="178" endLine="180" />
            <scope startLine="180" endLine="182" />
          </method>
          <method type="double" name="doubleCosineValue" startLine="186" endLine="188" />
          <method type="double" name="doubleSineValue" startLine="191" endLine="193" />
          <method type="Double" name="getCosine" startLine="196" endLine="198" />
          <method type="Double" name="getSine" startLine="201" endLine="203" />
          <method type="Primitive" name="invert" startLine="206" endLine="208" />
          <method type="Big" name="makeBig" startLine="212" endLine="214" />
          <method type="Complex" name="makeComplex" startLine="216" endLine="218" />
          <method type="Primitive" name="makePrimitive" startLine="220" endLine="222" />
          <declaration type="int" name="high" />
          <declaration type="int" name="low" />
          <method type="constructor" name="Rotation" startLine="229" endLine="234" />
          <method type="constructor" name="Rotation" startLine="236" endLine="242" />
          <method name="doubleCosineValue" type="double" startLine="244" endLine="244" />
          <method name="doubleSineValue" type="double" startLine="246" endLine="246" />
          <method name="getCosine" type="N" startLine="248" endLine="248" />
          <method name="getSine" type="N" startLine="250" endLine="250" />
          <method name="invert" type="Rotation<N>" startLine="252" endLine="252" />
          <method type="String" name="toString" startLine="255" endLine="257" />
        </class>
      </class>
    </class>
  </class>
</source>
