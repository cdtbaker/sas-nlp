<?xml version="1.0" encoding="UTF-8"?>
<source package="org.ojalgo.matrix.transformation">
  <import name="java.math.BigDecimal" />
  <import name="java.util.Iterator" />
  <import name="org.ojalgo.access.Access1D" />
  <import name="org.ojalgo.access.Iterator1D" />
  <import name="org.ojalgo.constant.BigMath" />
  <import name="org.ojalgo.constant.PrimitiveMath" />
  <import name="org.ojalgo.function.BigFunction" />
  <import name="org.ojalgo.scalar.ComplexNumber" />
  <interface name="Householder" startLine="34">
    <implements name="Access1D<N>" />
    <class name="Big" extends="Object" startLine="36">
      <implements name="Householder<BigDecimal>" />
      <declaration type="BigDecimal" name="beta" />
      <declaration type="int" name="first" />
      <declaration type="BigDecimal[]" name="vector" />
      <method type="constructor" name="Big" startLine="42" endLine="47" />
      <method type="constructor" name="Big" startLine="49" endLine="56" />
      <method type="constructor" name="Big" startLine="59" endLine="61" />
      <method type="Householder.Big" name="copy" startLine="63" endLine="79">
        <declaration type="BigDecimal[]" name="tmpVector" />
        <declaration type="BigDecimal" name="tmpVal" />
        <declaration type="int" name="tmpSize" />
        <scope startLine="70" endLine="74" />
      </method>
      <method type="Householder.Big" name="copy" startLine="81" endLine="95">
        <declaration type="BigDecimal[]" name="tmpVector" />
        <declaration type="int" name="tmpSize" />
        <scope startLine="88" endLine="90" />
      </method>
      <method type="long" name="count" startLine="97" endLine="99" />
      <method type="double" name="doubleValue" startLine="101" endLine="103" />
      <method type="int" name="first" startLine="105" endLine="107" />
      <method type="BigDecimal" name="get" startLine="109" endLine="111" />
      <method type="BigDecimal" name="get" startLine="113" endLine="115" />
      <method type="Iterator<BigDecimal>" name="iterator" startLine="117" endLine="119" />
      <method type="int" name="size" startLine="121" endLine="123" />
      <method type="String" name="toString" startLine="126" endLine="145">
        <declaration type="StringBuilder" name="retVal" />
        <declaration type="int" name="tmpFirst" />
        <declaration type="int" name="tmpLength" />
        <scope startLine="132" endLine="135" />
        <scope startLine="136" endLine="141">
          <scope startLine="138" endLine="140" />
        </scope>
      </method>
      <class name="Complex" extends="Object" startLine="149">
        <implements name="Householder<ComplexNumber>" />
        <declaration type="ComplexNumber" name="beta" />
        <declaration type="int" name="first" />
        <declaration type="ComplexNumber[]" name="vector" />
        <method type="constructor" name="Complex" startLine="155" endLine="160" />
        <method type="constructor" name="Complex" startLine="162" endLine="169" />
        <method type="constructor" name="Complex" startLine="172" endLine="174" />
        <method type="Householder.Complex" name="copy" startLine="176" endLine="194">
          <declaration type="ComplexNumber[]" name="tmpVector" />
          <declaration type="ComplexNumber" name="tmpNmbr" />
          <declaration type="double" name="tmpVal" />
          <declaration type="int" name="tmpSize" />
          <scope startLine="184" endLine="189" />
        </method>
        <method type="Householder.Complex" name="copy" startLine="196" endLine="210">
          <declaration type="ComplexNumber[]" name="tmpVector" />
          <declaration type="int" name="tmpSize" />
          <scope startLine="203" endLine="205" />
        </method>
        <method type="long" name="count" startLine="212" endLine="214" />
        <method type="double" name="doubleValue" startLine="216" endLine="218" />
        <method type="int" name="first" startLine="220" endLine="222" />
        <method type="ComplexNumber" name="get" startLine="224" endLine="226" />
        <method type="ComplexNumber" name="get" startLine="228" endLine="230" />
        <method type="Iterator<ComplexNumber>" name="iterator" startLine="232" endLine="234" />
        <method type="int" name="size" startLine="236" endLine="238" />
        <method type="String" name="toString" startLine="241" endLine="260">
          <declaration type="StringBuilder" name="retVal" />
          <declaration type="int" name="tmpFirst" />
          <declaration type="int" name="tmpLength" />
          <scope startLine="247" endLine="250" />
          <scope startLine="251" endLine="256">
            <scope startLine="253" endLine="255" />
          </scope>
        </method>
        <class name="Primitive" extends="Object" startLine="264">
          <implements name="Householder<Double>" />
          <declaration type="double" name="beta" />
          <declaration type="int" name="first" />
          <declaration type="double[]" name="vector" />
          <method type="constructor" name="Primitive" startLine="270" endLine="275" />
          <method type="constructor" name="Primitive" startLine="277" endLine="284" />
          <method type="constructor" name="Primitive" startLine="287" endLine="289" />
          <method type="Householder.Primitive" name="copy" startLine="291" endLine="307">
            <declaration type="double[]" name="tmpVector" />
            <declaration type="double" name="tmpVal" />
            <declaration type="int" name="tmpSize" />
            <scope startLine="298" endLine="302" />
          </method>
          <method type="Householder.Primitive" name="copy" startLine="309" endLine="323">
            <declaration type="double[]" name="tmpVector" />
            <declaration type="int" name="tmpSize" />
            <scope startLine="316" endLine="318" />
          </method>
          <method type="long" name="count" startLine="325" endLine="327" />
          <method type="double" name="doubleValue" startLine="329" endLine="331" />
          <method type="int" name="first" startLine="333" endLine="335" />
          <method type="Double" name="get" startLine="337" endLine="339" />
          <method type="Double" name="get" startLine="341" endLine="343" />
          <method type="Iterator<Double>" name="iterator" startLine="345" endLine="347" />
          <method type="int" name="size" startLine="349" endLine="351" />
          <method type="String" name="toString" startLine="354" endLine="368">
            <declaration type="StringBuilder" name="retVal" />
            <declaration type="int" name="tmpLastIndex" />
            <scope startLine="359" endLine="362" />
          </method>
          <method name="first" type="int" startLine="372" endLine="376" />
          <javadoc>
            <text>* Regardless of what is actually returned by {@linkplain #doubleValue(long)} and/or {@linkplain #get(long)} vector
 * elements with indeces less than 'first' should be assumed to be, and treated as if they are, zero.</text>
          </javadoc>
        </class>
      </class>
    </class>
  </interface>
</source>
