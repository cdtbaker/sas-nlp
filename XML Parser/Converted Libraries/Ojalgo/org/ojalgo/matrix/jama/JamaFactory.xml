<?xml version="1.0" encoding="UTF-8"?>
<source package="org.ojalgo.matrix.jama">
  <import name="java.util.List" />
  <import name="org.ojalgo.access.Access1D" />
  <import name="org.ojalgo.access.Access2D" />
  <import name="org.ojalgo.access.Access2D.Builder" />
  <import name="org.ojalgo.array.SimpleArray" />
  <import name="org.ojalgo.function.FunctionSet" />
  <import name="org.ojalgo.function.PrimitiveFunction" />
  <import name="org.ojalgo.function.aggregator.AggregatorCollection" />
  <import name="org.ojalgo.function.aggregator.PrimitiveAggregator" />
  <import name="org.ojalgo.matrix.BasicMatrix" />
  <import name="org.ojalgo.matrix.store.PhysicalStore" />
  <import name="org.ojalgo.matrix.transformation.Householder" />
  <import name="org.ojalgo.matrix.transformation.Rotation" />
  <import name="org.ojalgo.random.RandomNumber" />
  <import name="org.ojalgo.scalar.PrimitiveScalar" />
  <import name="org.ojalgo.scalar.Scalar" />
  <import name="org.ojalgo.scalar.Scalar.Factory" />
  <class name="JamaFactory" extends="Object" startLine="43">
    <implements name="BasicMatrix.Factory<JamaMatrix>" />
    <implements name="PhysicalStore.Factory<Double,JamaMatrix>" />
    <javadoc>
      <text>* Implements both {@linkplain BasicMatrix.Factory} and{@linkplain PhysicalStore.Factory}, and creates{@linkplain JamaMatrix} instances.</text>
      <author>apete</author>
    </javadoc>
    <method type="constructor" name="JamaFactory" startLine="52" endLine="54" />
    <method type="JamaMatrix" name="columns" startLine="56" endLine="72">
      <declaration type="int" name="tmpRowDim" />
      <declaration type="int" name="tmpColDim" />
      <declaration type="double[][]" name="retVal" />
      <declaration type="Access1D<?>" name="tmpColumn" />
      <scope startLine="64" endLine="69">
        <scope startLine="66" endLine="68" />
      </scope>
    </method>
    <method type="JamaMatrix" name="columns" startLine="74" endLine="90">
      <declaration type="int" name="tmpRowDim" />
      <declaration type="int" name="tmpColDim" />
      <declaration type="double[][]" name="retVal" />
      <declaration type="double[]" name="tmpColumn" />
      <scope startLine="82" endLine="87">
        <scope startLine="84" endLine="86" />
      </scope>
    </method>
    <method type="JamaMatrix" name="columns" startLine="92" endLine="108">
      <declaration type="int" name="tmpRowDim" />
      <declaration type="int" name="tmpColDim" />
      <declaration type="double[][]" name="retVal" />
      <declaration type="List<? extends Number>" name="tmpColumn" />
      <scope startLine="100" endLine="105">
        <scope startLine="102" endLine="104" />
      </scope>
    </method>
    <method type="JamaMatrix" name="columns" startLine="110" endLine="126">
      <declaration type="int" name="tmpRowDim" />
      <declaration type="int" name="tmpColDim" />
      <declaration type="double[][]" name="retVal" />
      <declaration type="Number[]" name="tmpColumn" />
      <scope startLine="118" endLine="123">
        <scope startLine="120" endLine="122" />
      </scope>
    </method>
    <method type="JamaMatrix" name="conjugate" startLine="128" endLine="130" />
    <method type="JamaMatrix" name="copy" startLine="132" endLine="146">
      <declaration type="int" name="tmpRowDim" />
      <declaration type="int" name="tmpColDim" />
      <declaration type="double[][]" name="retVal" />
      <scope startLine="139" endLine="143">
        <scope startLine="140" endLine="142" />
      </scope>
    </method>
    <javadoc>
      <deprecated>Use {@link #aggregator()} instead</deprecated>
    </javadoc>
    <method type="AggregatorCollection<Double>" name="getAggregatorCollection" startLine="151" endLine="153" />
    <method type="AggregatorCollection<Double>" name="aggregator" startLine="155" endLine="157" />
    <method type="Access2D.Builder<JamaMatrix>" name="getBuilder" startLine="159" endLine="161" />
    <method type="Access2D.Builder<JamaMatrix>" name="getBuilder" startLine="163" endLine="238">
      <declaration type="JamaMatrix" name="tmpDelegate" />
      <method type="JamaMatrix" name="build" startLine="169" endLine="171" />
      <method type="long" name="count" startLine="173" endLine="175" />
      <method type="long" name="countColumns" startLine="177" endLine="179" />
      <method type="long" name="countRows" startLine="181" endLine="183" />
      <method type="Access1D.Builder<JamaMatrix>" name="fillAll" startLine="185" endLine="188" />
      <method type="Builder<JamaMatrix>" name="fillColumn" startLine="190" endLine="193" />
      <method type="Builder<JamaMatrix>" name="fillDiagonal" startLine="195" endLine="198" />
      <method type="Builder<JamaMatrix>" name="fillRow" startLine="200" endLine="203" />
      <method type="int" name="getColDim" startLine="205" endLine="207" />
      <method type="int" name="getRowDim" startLine="209" endLine="211" />
      <method type="Builder<JamaMatrix>" name="set" startLine="213" endLine="216" />
      <method type="Builder<JamaMatrix>" name="set" startLine="218" endLine="221" />
      <method type="Builder<JamaMatrix>" name="set" startLine="223" endLine="226" />
      <method type="Builder<JamaMatrix>" name="set" startLine="228" endLine="231" />
      <method type="int" name="size" startLine="233" endLine="235" />
    </method>
    <javadoc>
      <deprecated>Use {@link #function()} instead</deprecated>
    </javadoc>
    <method type="FunctionSet<Double>" name="getFunctionSet" startLine="243" endLine="245" />
    <method type="FunctionSet<Double>" name="function" startLine="247" endLine="249" />
    <javadoc>
      <deprecated>v35 Use {@link #scalar()} instead.</deprecated>
    </javadoc>
    <method type="Double" name="getNumber" startLine="255" endLine="257" />
    <javadoc>
      <deprecated>v35 Use {@link #scalar()} instead.</deprecated>
    </javadoc>
    <method type="Double" name="getNumber" startLine="263" endLine="265" />
    <javadoc>
      <deprecated>v35 Use {@link #scalar()} instead.</deprecated>
    </javadoc>
    <method type="Scalar<Double>" name="getStaticOne" startLine="271" endLine="273" />
    <javadoc>
      <deprecated>v35 Use {@link #scalar()} instead.</deprecated>
    </javadoc>
    <method type="Scalar<Double>" name="getStaticZero" startLine="279" endLine="281" />
    <method type="SimpleArray<Double>" name="makeArray" startLine="283" endLine="285" />
    <method type="JamaMatrix" name="makeEye" startLine="287" endLine="294">
      <declaration type="JamaMatrix" name="retVal" />
    </method>
    <method type="Householder<Double>" name="makeHouseholder" startLine="296" endLine="298" />
    <method type="JamaMatrix" name="makeRandom" startLine="300" endLine="311">
      <declaration type="double[][]" name="retVal" />
      <scope startLine="304" endLine="308">
        <scope startLine="305" endLine="307" />
      </scope>
    </method>
    <method type="Rotation<Double>" name="makeRotation" startLine="313" endLine="315" />
    <method type="Rotation<Double>" name="makeRotation" startLine="317" endLine="319" />
    <method type="JamaMatrix" name="makeZero" startLine="321" endLine="323" />
    <method type="JamaMatrix" name="rows" startLine="325" endLine="343">
      <declaration type="int" name="tmpRowDim" />
      <declaration type="int" name="tmpColDim" />
      <declaration type="double[][]" name="retVal" />
      <declaration type="Access1D<?>" name="tmpSource" />
      <declaration type="double[]" name="tmpDestination" />
      <scope startLine="334" endLine="340">
        <scope startLine="337" endLine="339" />
      </scope>
    </method>
    <method type="JamaMatrix" name="rows" startLine="345" endLine="363">
      <declaration type="int" name="tmpRowDim" />
      <declaration type="int" name="tmpColDim" />
      <declaration type="double[][]" name="retVal" />
      <declaration type="double[]" name="tmpSource" />
      <declaration type="double[]" name="tmpDestination" />
      <scope startLine="354" endLine="360">
        <scope startLine="357" endLine="359" />
      </scope>
    </method>
    <method type="JamaMatrix" name="rows" startLine="365" endLine="383">
      <declaration type="int" name="tmpRowDim" />
      <declaration type="int" name="tmpColDim" />
      <declaration type="double[][]" name="retVal" />
      <declaration type="List<? extends Number>" name="tmpSource" />
      <declaration type="double[]" name="tmpDestination" />
      <scope startLine="374" endLine="380">
        <scope startLine="377" endLine="379" />
      </scope>
    </method>
    <method type="JamaMatrix" name="rows" startLine="385" endLine="403">
      <declaration type="int" name="tmpRowDim" />
      <declaration type="int" name="tmpColDim" />
      <declaration type="double[][]" name="retVal" />
      <declaration type="Number[]" name="tmpSource" />
      <declaration type="double[]" name="tmpDestination" />
      <scope startLine="394" endLine="400">
        <scope startLine="397" endLine="399" />
      </scope>
    </method>
    <method type="Factory<Double>" name="scalar" startLine="405" endLine="407" />
    <javadoc>
      <deprecated>v35 Use {@link #scalar()} instead.</deprecated>
    </javadoc>
    <method type="Scalar<Double>" name="toScalar" startLine="413" endLine="415" />
    <javadoc>
      <deprecated>v35 Use {@link #scalar()} instead.</deprecated>
    </javadoc>
    <method type="Scalar<Double>" name="toScalar" startLine="421" endLine="423" />
    <method type="JamaMatrix" name="transpose" startLine="425" endLine="439">
      <declaration type="int" name="tmpRowDim" />
      <declaration type="int" name="tmpColDim" />
      <declaration type="double[][]" name="retVal" />
      <scope startLine="432" endLine="436">
        <scope startLine="433" endLine="435" />
      </scope>
    </method>
  </class>
</source>
