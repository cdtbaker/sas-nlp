<?xml version="1.0" encoding="UTF-8"?>
<source package="org.ojalgo.matrix.jama">
  <import name="org.ojalgo.access.Access1D" />
  <import name="org.ojalgo.access.Access2D" />
  <import name="org.ojalgo.array.Array1D" />
  <import name="org.ojalgo.constant.PrimitiveMath" />
  <import name="org.ojalgo.function.aggregator.AggregatorFunction" />
  <import name="org.ojalgo.function.aggregator.ComplexAggregator" />
  <import name="org.ojalgo.matrix.MatrixUtils" />
  <import name="org.ojalgo.matrix.decomposition.Eigenvalue" />
  <import name="org.ojalgo.matrix.store.MatrixStore" />
  <import name="org.ojalgo.scalar.ComplexNumber" />
  <import name="org.ojalgo.type.TypeUtils" />
  <import name="org.ojalgo.type.context.NumberContext" />
  <class name="JamaEigenvalue" extends="JamaAbstractDecomposition" startLine="37">
    <implements name="Eigenvalue<Double>" />
    <javadoc>
      <text>* This class adapts JAMA's EigenvalueDecomposition to ojAlgo's {@linkplain Eigenvalue} interface.</text>
      <author>apete</author>
    </javadoc>
    <class name="General" extends="JamaEigenvalue" startLine="44">
      <method type="constructor" name="General" startLine="46" endLine="48" />
      <method type="boolean" name="compute" startLine="51" endLine="56" />
      <class name="Nonsymmetric" extends="JamaEigenvalue" startLine="59">
        <method type="constructor" name="Nonsymmetric" startLine="61" endLine="63" />
        <method type="boolean" name="compute" startLine="66" endLine="71" />
        <class name="Symmetric" extends="JamaEigenvalue" startLine="74">
          <method type="constructor" name="Symmetric" startLine="76" endLine="78" />
          <method type="boolean" name="compute" startLine="81" endLine="86" />
          <declaration type="EigenvalueDecomposition" name="myDelegate" />
          <declaration type="JamaMatrix" name="myInverse" />
          <javadoc>
            <text>* Not recommended to use this constructor directly. Consider using the static factory method{@linkplain org.ojalgo.matrix.decomposition.EigenvalueDecomposition#makeJama()} instead.</text>
          </javadoc>
          <method type="constructor" name="JamaEigenvalue" startLine="98" endLine="100" />
          <method type="Double" name="calculateDeterminant" startLine="102" endLine="105" />
          <method type="boolean" name="compute" startLine="107" endLine="109" />
          <method type="boolean" name="equals" startLine="111" endLine="113" />
          <method type="JamaMatrix" name="getD" startLine="115" endLine="117" />
          <method type="Double" name="getDeterminant" startLine="119" endLine="126">
            <declaration type="AggregatorFunction<ComplexNumber>" name="tmpVisitor" />
          </method>
          <method type="Array1D<ComplexNumber>" name="getEigenvalues" startLine="128" endLine="142">
            <declaration type="double[]" name="tmpRe" />
            <declaration type="double[]" name="tmpIm" />
            <declaration type="Array1D<ComplexNumber>" name="retVal" />
            <scope startLine="135" endLine="137" />
          </method>
          <method type="JamaMatrix" name="getInverse" startLine="145" endLine="170">
            <scope startLine="147" endLine="167">
              <declaration type="double[][]" name="tmpQ1" />
              <declaration type="double[]" name="tmpEigen" />
              <declaration type="Matrix" name="tmpMtrx" />
              <scope startLine="154" endLine="164">
                <scope startLine="155" endLine="159">
                  <scope startLine="156" endLine="158" />
                </scope>
                <scope startLine="159" endLine="163">
                  <scope startLine="160" endLine="162" />
                </scope>
              </scope>
            </scope>
          </method>
          <method type="ComplexNumber" name="getTrace" startLine="172" endLine="179">
            <declaration type="AggregatorFunction<ComplexNumber>" name="tmpVisitor" />
          </method>
          <method type="JamaMatrix" name="getV" startLine="181" endLine="183" />
          <method type="boolean" name="isAspectRatioNormal" startLine="185" endLine="187" />
          <method type="boolean" name="isComputed" startLine="189" endLine="191" />
          <method type="boolean" name="isFullSize" startLine="193" endLine="195" />
          <method type="boolean" name="isHermitian" startLine="197" endLine="199" />
          <method type="boolean" name="isOrdered" startLine="201" endLine="203" />
          <method type="boolean" name="isSolvable" startLine="205" endLine="207" />
          <method type="MatrixStore<Double>" name="reconstruct" startLine="209" endLine="211" />
          <method type="void" name="reset" startLine="213" endLine="216" />
          <method type="JamaMatrix" name="solve" startLine="219" endLine="221" />
          <method type="String" name="toString" startLine="224" endLine="226" />
          <method type="void" name="setDelegate" startLine="228" endLine="230" />
          <method type="Matrix" name="solve" startLine="233" endLine="236">
            <comment>TODO Auto-generated method stub</comment>
          </method>
        </class>
      </class>
    </class>
  </class>
</source>
