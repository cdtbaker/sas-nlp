<?xml version="1.0" encoding="UTF-8"?>
<source package="org.ojalgo.matrix.jama">
  <import name="org.ojalgo.access.Access2D" />
  <import name="org.ojalgo.matrix.MatrixUtils" />
  <import name="org.ojalgo.matrix.decomposition.Cholesky" />
  <import name="org.ojalgo.matrix.store.MatrixStore" />
  <import name="org.ojalgo.scalar.Scalar" />
  <import name="org.ojalgo.type.context.NumberContext" />
  <class name="JamaCholesky" extends="JamaAbstractDecomposition" startLine="31">
    <implements name="Cholesky<Double>" />
    <javadoc>
      <text>* This class adapts JAMA's CholeskyDecomposition to ojAlgo's {@linkplain Cholesky} interface.</text>
      <author>apete</author>
    </javadoc>
    <declaration type="CholeskyDecomposition" name="myDelegate" />
    <javadoc>
      <text>* Not recommended to use this constructor directly. Consider using the static factory method{@linkplain org.ojalgo.matrix.decomposition.CholeskyDecomposition#makeJama()} instead.</text>
    </javadoc>
    <method type="constructor" name="JamaCholesky" startLine="44" endLine="46" />
    <method type="Double" name="calculateDeterminant" startLine="48" endLine="51" />
    <method type="boolean" name="compute" startLine="53" endLine="55" />
    <method type="boolean" name="computeWithCheck" startLine="57" endLine="59" />
    <method type="boolean" name="equals" startLine="61" endLine="63" />
    <method type="JamaMatrix" name="getD" startLine="65" endLine="82">
      <declaration type="Matrix" name="tmpL" />
      <declaration type="int" name="tmpRowDim" />
      <declaration type="int" name="tmpColDim" />
      <declaration type="int" name="tmpMinDim" />
      <declaration type="JamaMatrix" name="retVal" />
      <declaration type="double" name="tmpVal" />
      <scope startLine="76" endLine="79" />
    </method>
    <method type="Double" name="getDeterminant" startLine="84" endLine="95">
      <declaration type="MatrixStore<Double>" name="tmpD" />
      <declaration type="int" name="tmpMinDim" />
      <declaration type="Scalar<Double>" name="retVal" />
      <scope startLine="90" endLine="92" />
    </method>
    <method type="JamaMatrix" name="getInverse" startLine="98" endLine="100" />
    <method type="JamaMatrix" name="getL" startLine="102" endLine="104" />
    <method type="JamaMatrix" name="getOldL" startLine="106" endLine="124">
      <declaration type="Matrix" name="tmpL" />
      <declaration type="int" name="tmpRowDim" />
      <declaration type="int" name="tmpColDim" />
      <declaration type="JamaMatrix" name="retVal" />
      <declaration type="double" name="tmpDiagVal" />
      <scope startLine="116" endLine="121">
        <scope startLine="118" endLine="120" />
      </scope>
    </method>
    <method type="JamaMatrix" name="getOldU" startLine="126" endLine="128" />
    <method type="JamaMatrix" name="getP" startLine="130" endLine="133">
      <comment>return MatrixUtils.makeIdentity(PrimitiveDenseStore.FACTORY, myDelegate.getL().getRowDimension());</comment>
    </method>
    <method type="int[]" name="getPivotOrder" startLine="135" endLine="137" />
    <method type="JamaMatrix" name="getR" startLine="139" endLine="141" />
    <method type="int" name="getRank" startLine="143" endLine="157">
      <declaration type="int" name="retVal" />
      <declaration type="MatrixStore<Double>" name="tmpD" />
      <declaration type="int" name="tmpMinDim" />
      <scope startLine="150" endLine="154">
        <scope startLine="151" endLine="153" />
      </scope>
    </method>
    <method type="JamaMatrix" name="getRowEchelonForm" startLine="159" endLine="161" />
    <method type="boolean" name="isAspectRatioNormal" startLine="163" endLine="165" />
    <method type="boolean" name="isComputed" startLine="167" endLine="169" />
    <method type="boolean" name="isFullSize" startLine="171" endLine="173" />
    <method type="boolean" name="isSingular" startLine="175" endLine="187">
      <declaration type="boolean" name="retVal" />
      <declaration type="MatrixStore<Double>" name="tmpD" />
      <declaration type="int" name="tmpMinDim" />
      <scope startLine="182" endLine="184" />
    </method>
    <method type="boolean" name="isSolvable" startLine="189" endLine="191" />
    <method type="boolean" name="isSPD" startLine="193" endLine="195" />
    <method type="boolean" name="isSquareAndNotSingular" startLine="197" endLine="209">
      <declaration type="boolean" name="retVal" />
      <declaration type="MatrixStore<Double>" name="tmpD" />
      <declaration type="int" name="tmpMinDim" />
      <scope startLine="204" endLine="206" />
    </method>
    <method type="MatrixStore<Double>" name="reconstruct" startLine="211" endLine="213" />
    <method type="void" name="reset" startLine="215" endLine="217" />
    <method type="String" name="toString" startLine="220" endLine="222" />
    <method type="boolean" name="compute" startLine="225" endLine="228" />
    <method type="Matrix" name="solve" startLine="231" endLine="233" />
  </class>
</source>
