<?xml version="1.0" encoding="UTF-8"?>
<source package="org.ojalgo.matrix.jama">
  <import name="java.io.BufferedReader" />
  <import name="java.io.FileInputStream" />
  <import name="java.io.FileOutputStream" />
  <import name="java.io.FileReader" />
  <import name="java.io.ObjectInputStream" />
  <import name="java.io.ObjectOutputStream" />
  <import name="java.io.PrintWriter" />
  <import name="java.text.DecimalFormat" />
  <import name="java.text.DecimalFormatSymbols" />
  <import name="java.util.Locale" />
  <class name="TestMatrix" startLine="14">
    <javadoc>
      <text>* TestMatrix tests the functionality of the Jama Matrix class and associated decompositions.
 * <P>
 * Run the test from the command line using
 * <BLOCKQUOTE><PRE><CODE>
 * java Jama.test.TestMatrix 
 * </CODE></PRE></BLOCKQUOTE>
 * Detailed output is provided indicating the functionality being tested
 * and whether the functionality is correctly implemented.   Exception handling
 * is also tested.  
 * <P>
 * The test is designed to run to completion and give a summary of any implementation errors
 * encountered. The final output should be:
 * <BLOCKQUOTE><PRE><CODE>
 * TestMatrix completed.
 * Total errors reported: n1
 * Total warning reported: n2
 * </CODE></PRE></BLOCKQUOTE>
 * If the test does not run to completion, this indicates that there is a 
 * substantial problem within the implementation that was not anticipated in the test design.  
 * The stopping point should give an indication of where the problem exists.</text>
    </javadoc>
    <method type="void" name="main" startLine="37" endLine="885">
      <declaration type="Matrix" name="A" />
      <declaration type="int" name="errorCount" />
      <declaration type="int" name="warningCount" />
      <declaration type="double" name="tmp" />
      <declaration type="double" name="s" />
      <declaration type="double[]" name="columnwise" />
      <declaration type="double[]" name="rowwise" />
      <declaration type="double[][]" name="avals" />
      <declaration type="double[][]" name="rankdef" />
      <declaration type="double[][]" name="tvals" />
      <declaration type="double[][]" name="subavals" />
      <declaration type="double[][]" name="rvals" />
      <declaration type="double[][]" name="pvals" />
      <declaration type="double[][]" name="ivals" />
      <declaration type="double[][]" name="evals" />
      <declaration type="double[][]" name="square" />
      <declaration type="double[][]" name="sqSolution" />
      <declaration type="double[][]" name="condmat" />
      <declaration type="double[][]" name="badeigs" />
      <declaration type="int" name="rows" />
      <declaration type="int" name="invalidld" />
      <declaration type="int" name="raggedr" />
      <declaration type="int" name="raggedc" />
      <declaration type="int" name="validld" />
      <declaration type="int" name="nonconformld" />
      <declaration type="int" name="ib" />
      <declaration type="int[]" name="rowindexset" />
      <declaration type="int[]" name="badrowindexset" />
      <declaration type="int[]" name="columnindexset" />
      <declaration type="int[]" name="badcolumnindexset" />
      <declaration type="double" name="columnsummax" />
      <declaration type="double" name="rowsummax" />
      <declaration type="double" name="sumofdiagonals" />
      <declaration type="double" name="sumofsquares" />
      <scope startLine="88" endLine="92">
        <javadoc>
          <text>* check that exception is thrown in packed constructor with invalid length</text>
        </javadoc>
      </scope>
      <scope startLine="92" endLine="94" />
      <scope startLine="95" endLine="100">
        <javadoc>
          <text>* check that exception is thrown in default constructor
 * if input array is 'ragged'</text>
        </javadoc>
      </scope>
      <scope startLine="100" endLine="102" />
      <scope startLine="102" endLine="105" />
      <scope startLine="106" endLine="111">
        <javadoc>
          <text>* check that exception is thrown in constructWithCopy
 * if input array is 'ragged'</text>
        </javadoc>
      </scope>
      <scope startLine="111" endLine="113" />
      <scope startLine="113" endLine="116" />
      <scope startLine="127" endLine="130">
        <javadoc>
          <text>* check that constructWithCopy behaves properly</text>
        </javadoc>
      </scope>
      <scope startLine="130" endLine="132" />
      <scope startLine="135" endLine="138" />
      <scope startLine="138" endLine="140" />
      <scope startLine="169" endLine="171" />
      <scope startLine="171" endLine="173" />
      <scope startLine="174" endLine="176" />
      <scope startLine="176" endLine="178" />
      <declaration type="double[][]" name="barray" />
      <scope startLine="181" endLine="183" />
      <scope startLine="183" endLine="185" />
      <scope startLine="187" endLine="189" />
      <scope startLine="190" endLine="193" />
      <scope startLine="193" endLine="195" />
      <declaration type="double[]" name="bpacked" />
      <scope startLine="197" endLine="200" />
      <scope startLine="200" endLine="202" />
      <scope startLine="204" endLine="207" />
      <scope startLine="207" endLine="209" />
      <scope startLine="210" endLine="213" />
      <scope startLine="213" endLine="220">
        <scope startLine="214" endLine="217" />
        <scope startLine="217" endLine="219" />
      </scope>
      <scope startLine="220" endLine="222" />
      <scope startLine="223" endLine="229">
        <scope startLine="224" endLine="226" />
        <scope startLine="226" endLine="228" />
      </scope>
      <scope startLine="229" endLine="231" />
      <scope startLine="233" endLine="236" />
      <scope startLine="236" endLine="243">
        <scope startLine="237" endLine="240" />
        <scope startLine="240" endLine="242" />
      </scope>
      <scope startLine="243" endLine="245" />
      <scope startLine="246" endLine="254">
        <scope startLine="248" endLine="251" />
        <scope startLine="251" endLine="253" />
      </scope>
      <scope startLine="254" endLine="256" />
      <scope startLine="258" endLine="261" />
      <scope startLine="261" endLine="268">
        <scope startLine="262" endLine="265" />
        <scope startLine="265" endLine="267" />
      </scope>
      <scope startLine="268" endLine="270" />
      <scope startLine="271" endLine="279">
        <scope startLine="273" endLine="276" />
        <scope startLine="276" endLine="278" />
      </scope>
      <scope startLine="279" endLine="281" />
      <scope startLine="282" endLine="285" />
      <scope startLine="285" endLine="292">
        <scope startLine="286" endLine="289" />
        <scope startLine="289" endLine="291" />
      </scope>
      <scope startLine="292" endLine="294" />
      <scope startLine="295" endLine="303">
        <scope startLine="297" endLine="300" />
        <scope startLine="300" endLine="302" />
      </scope>
      <scope startLine="303" endLine="305" />
      <scope startLine="306" endLine="309" />
      <scope startLine="309" endLine="316">
        <scope startLine="310" endLine="313" />
        <scope startLine="313" endLine="315" />
      </scope>
      <scope startLine="316" endLine="318" />
      <scope startLine="319" endLine="327">
        <scope startLine="321" endLine="324" />
        <scope startLine="324" endLine="326" />
      </scope>
      <scope startLine="327" endLine="329" />
      <scope startLine="335" endLine="338" />
      <scope startLine="338" endLine="345">
        <scope startLine="339" endLine="342" />
        <scope startLine="342" endLine="344" />
      </scope>
      <scope startLine="345" endLine="347" />
      <scope startLine="348" endLine="357">
        <scope startLine="351" endLine="354" />
        <scope startLine="354" endLine="356" />
      </scope>
      <scope startLine="357" endLine="359" />
      <scope startLine="361" endLine="364" />
      <scope startLine="364" endLine="372">
        <scope startLine="365" endLine="369" />
        <scope startLine="369" endLine="371" />
      </scope>
      <scope startLine="372" endLine="374" />
      <scope startLine="375" endLine="384">
        <scope startLine="377" endLine="380" />
        <scope startLine="380" endLine="382" />
      </scope>
      <scope startLine="384" endLine="386" />
      <scope startLine="387" endLine="390" />
      <scope startLine="390" endLine="398">
        <scope startLine="391" endLine="395" />
        <scope startLine="395" endLine="397" />
      </scope>
      <scope startLine="398" endLine="400" />
      <scope startLine="401" endLine="410">
        <scope startLine="403" endLine="406" />
        <scope startLine="406" endLine="408" />
      </scope>
      <scope startLine="410" endLine="412" />
      <scope startLine="413" endLine="416" />
      <scope startLine="416" endLine="424">
        <scope startLine="417" endLine="421" />
        <scope startLine="421" endLine="423" />
      </scope>
      <scope startLine="424" endLine="426" />
      <scope startLine="427" endLine="436">
        <scope startLine="429" endLine="432" />
        <scope startLine="432" endLine="434" />
      </scope>
      <scope startLine="436" endLine="438" />
      <scope startLine="439" endLine="442" />
      <scope startLine="442" endLine="449">
        <scope startLine="443" endLine="446" />
        <scope startLine="446" endLine="448" />
      </scope>
      <scope startLine="449" endLine="451" />
      <scope startLine="452" endLine="460">
        <scope startLine="454" endLine="457" />
        <scope startLine="457" endLine="459" />
      </scope>
      <scope startLine="460" endLine="462" />
      <scope startLine="483" endLine="486" />
      <scope startLine="486" endLine="488" />
      <scope startLine="489" endLine="492" />
      <scope startLine="492" endLine="494" />
      <scope startLine="498" endLine="501" />
      <scope startLine="501" endLine="503" />
      <scope startLine="504" endLine="507" />
      <scope startLine="507" endLine="509" />
      <scope startLine="514" endLine="517" />
      <scope startLine="517" endLine="519" />
      <scope startLine="520" endLine="523" />
      <scope startLine="523" endLine="525" />
      <scope startLine="528" endLine="531" />
      <scope startLine="531" endLine="533" />
      <scope startLine="534" endLine="537" />
      <scope startLine="537" endLine="539" />
      <scope startLine="541" endLine="544" />
      <scope startLine="544" endLine="546" />
      <scope startLine="550" endLine="553" />
      <scope startLine="553" endLine="555" />
      <scope startLine="556" endLine="559" />
      <scope startLine="559" endLine="561" />
      <scope startLine="562" endLine="565" />
      <scope startLine="565" endLine="567" />
      <scope startLine="569" endLine="572" />
      <scope startLine="572" endLine="574" />
      <scope startLine="576" endLine="579" />
      <scope startLine="579" endLine="581" />
      <scope startLine="583" endLine="586" />
      <scope startLine="586" endLine="588" />
      <scope startLine="589" endLine="592" />
      <scope startLine="592" endLine="594" />
      <scope startLine="596" endLine="599" />
      <scope startLine="599" endLine="601" />
      <scope startLine="604" endLine="607" />
      <scope startLine="607" endLine="609" />
      <scope startLine="611" endLine="614" />
      <scope startLine="614" endLine="616" />
      <scope startLine="617" endLine="620" />
      <scope startLine="620" endLine="622" />
      <scope startLine="624" endLine="627" />
      <scope startLine="627" endLine="629" />
      <scope startLine="640" endLine="653">
        <declaration type="DecimalFormat" name="fmt" />
        <declaration type="PrintWriter" name="FILE" />
        <scope startLine="648" endLine="650" />
        <scope startLine="650" endLine="652" />
      </scope>
      <scope startLine="653" endLine="656" />
      <scope startLine="656" endLine="675">
        <scope startLine="657" endLine="671">
          <declaration type="DecimalFormat" name="fmt" />
          <declaration type="PrintWriter" name="FILE" />
          <scope startLine="665" endLine="667" />
          <scope startLine="667" endLine="670" />
        </scope>
        <scope startLine="671" endLine="674" />
      </scope>
      <declaration type="String" name="tmpname" />
      <scope startLine="679" endLine="691">
        <declaration type="ObjectOutputStream" name="out" />
        <declaration type="ObjectInputStream" name="sin" />
        <scope startLine="685" endLine="688" />
        <scope startLine="688" endLine="690" />
      </scope>
      <scope startLine="691" endLine="694" />
      <scope startLine="694" endLine="696" />
      <scope startLine="724" endLine="727" />
      <scope startLine="727" endLine="729" />
      <scope startLine="731" endLine="734" />
      <scope startLine="734" endLine="736" />
      <scope startLine="737" endLine="740" />
      <scope startLine="740" endLine="742" />
      <scope startLine="743" endLine="746" />
      <scope startLine="746" endLine="748" />
      <scope startLine="749" endLine="752" />
      <scope startLine="752" endLine="754" />
      <scope startLine="755" endLine="758" />
      <scope startLine="758" endLine="760" />
      <scope startLine="762" endLine="765" />
      <scope startLine="765" endLine="767" />
      <scope startLine="768" endLine="771" />
      <scope startLine="771" endLine="773" />
      <declaration type="QRDecomposition" name="QR" />
      <scope startLine="778" endLine="781" />
      <scope startLine="781" endLine="783" />
      <declaration type="SingularValueDecomposition" name="SVD" />
      <scope startLine="785" endLine="788" />
      <scope startLine="788" endLine="790" />
      <scope startLine="792" endLine="795" />
      <scope startLine="795" endLine="797" />
      <declaration type="double[]" name="singularvalues" />
      <scope startLine="801" endLine="804" />
      <scope startLine="804" endLine="806" />
      <declaration type="int" name="n" />
      <declaration type="LUDecomposition" name="LU" />
      <scope startLine="811" endLine="814" />
      <scope startLine="814" endLine="816" />
      <scope startLine="818" endLine="821" />
      <scope startLine="821" endLine="823" />
      <scope startLine="827" endLine="830" />
      <scope startLine="830" endLine="832" />
      <scope startLine="832" endLine="834" />
      <declaration type="CholeskyDecomposition" name="Chol" />
      <declaration type="Matrix" name="L" />
      <scope startLine="838" endLine="841" />
      <scope startLine="841" endLine="843" />
      <scope startLine="845" endLine="848" />
      <scope startLine="848" endLine="850" />
      <declaration type="EigenvalueDecomposition" name="Eig" />
      <declaration type="Matrix" name="D" />
      <declaration type="Matrix" name="V" />
      <scope startLine="854" endLine="857" />
      <scope startLine="857" endLine="860" />
      <scope startLine="865" endLine="868" />
      <scope startLine="868" endLine="871" />
      <scope startLine="873" endLine="878">
        <declaration type="Matrix" name="bA" />
        <declaration type="EigenvalueDecomposition" name="bEig" />
      </scope>
      <scope startLine="878" endLine="880" />
      <comment>Uncomment this to test IO in a different locale.</comment>
      <comment>Locale.setDefault(Locale.GERMAN);</comment>
      <comment>final int invalidld = 5; should trigger bad shape for construction with val</comment>
      <comment>final int raggedr = 0;  (raggedr,raggedc) should be out of bounds in ragged array</comment>
      <comment>final int validld = 3;  leading dimension of intended test Matrices</comment>
      <comment>final int nonconformld = 4;  leading dimension which is valid, but nonconforming</comment>
      <comment>final int ib = 1, ie = 2, jb = 1, je = 3;  index ranges for sub Matrix</comment>
      <javadoc>
        <text>* Constructors and constructor-like methods:
 * double[], int
 * double[][]  
 * int, int
 * int, int, double
 * int, int, double[][]
 * constructWithCopy(double[][])
 * random(int,int)
 * identity(int)</text>
      </javadoc>
      <javadoc>
        <text>* Access Methods:
 * getColumnDimension()
 * getRowDimension()
 * getArray()
 * getArrayCopy()
 * getColumnPackedCopy()
 * getRowPackedCopy()
 * get(int,int)
 * getMatrix(int,int,int,int)
 * getMatrix(int,int,int[])
 * getMatrix(int[],int,int)
 * getMatrix(int[],int[])
 * set(int,int,double)
 * setMatrix(int,int,int,int,Matrix)
 * setMatrix(int,int,int[],Matrix)
 * setMatrix(int[],int,int,Matrix)
 * setMatrix(int[],int[],Matrix)</text>
      </javadoc>
      <javadoc>
        <text>* Various get methods:</text>
      </javadoc>
      <javadoc>
        <text>* Various set methods:</text>
      </javadoc>
      <javadoc>
        <text>* Array-like methods:
 * minus
 * minusEquals
 * plus
 * plusEquals
 * arrayLeftDivide
 * arrayLeftDivideEquals
 * arrayRightDivide
 * arrayRightDivideEquals
 * arrayTimes
 * arrayTimesEquals
 * uminus</text>
      </javadoc>
      <javadoc>
        <text>* I/O methods:
 * read
 * print
 * serializable:
 * writeObject
 * readObject</text>
      </javadoc>
      <javadoc>
        <text>* LA methods:
 * transpose
 * times
 * cond
 * rank
 * det
 * trace
 * norm1
 * norm2
 * normF
 * normInf
 * solve
 * solveTranspose
 * inverse
 * chol
 * eig
 * lu
 * qr
 * svd</text>
      </javadoc>
    </method>
    <javadoc>
      <text>* Check magnitude of difference of scalars.</text>
    </javadoc>
    <method type="void" name="check" startLine="891" endLine="902">
      <declaration type="double" name="eps" />
      <scope startLine="893" endLine="895" />
      <scope startLine="896" endLine="898" />
      <scope startLine="899" endLine="901" />
    </method>
    <javadoc>
      <text>* Check norm of difference of "vectors".</text>
    </javadoc>
    <method type="void" name="check" startLine="906" endLine="914">
      <scope startLine="907" endLine="911">
        <scope startLine="908" endLine="910" />
      </scope>
      <scope startLine="911" endLine="913" />
    </method>
    <javadoc>
      <text>* Check norm of difference of arrays.</text>
    </javadoc>
    <method type="void" name="check" startLine="918" endLine="922">
      <declaration type="Matrix" name="A" />
      <declaration type="Matrix" name="B" />
    </method>
    <javadoc>
      <text>* Check norm of difference of Matrices.</text>
    </javadoc>
    <method type="void" name="check" startLine="926" endLine="937">
      <declaration type="double" name="eps" />
      <scope startLine="928" endLine="930" />
      <scope startLine="931" endLine="933" />
      <scope startLine="934" endLine="936" />
    </method>
    <javadoc>
      <text>* Print a row vector.</text>
    </javadoc>
    <method type="void" name="print" startLine="941" endLine="946">
      <comment>Use format Fw.d for all elements.</comment>
    </method>
    <javadoc>
      <text>* Shorten spelling of print.</text>
    </javadoc>
    <method type="void" name="print" startLine="950" endLine="952" />
    <javadoc>
      <text>* Print appropriate messages for unsuccessful outcome try</text>
    </javadoc>
    <method type="int" name="try_failure" startLine="956" endLine="959" />
    <javadoc>
      <text>* Print appropriate messages for successful outcome try</text>
    </javadoc>
    <method type="void" name="try_success" startLine="963" endLine="968">
      <scope startLine="965" endLine="967" />
    </method>
    <javadoc>
      <text>* Print appropriate messages for unsuccessful outcome try</text>
    </javadoc>
    <method type="int" name="try_warning" startLine="972" endLine="975" />
    <javadoc>
      <text>* private utility routines</text>
    </javadoc>
  </class>
</source>
