<?xml version="1.0" encoding="UTF-8"?>
<source package="org.ojalgo.matrix.jama">
  <class name="QRDecomposition" startLine="3">
    <implements name="java.io.Serializable" />
    <javadoc>
      <text>* QR Decomposition.
 * <P>
 * For an m-by-n matrix A with m >= n, the QR decomposition is an m-by-n
 * orthogonal matrix Q and an n-by-n upper triangular matrix R so that
 * A = Q*R.
 * <P>
 * The QR decompostion always exists, even if the matrix does not have
 * full rank, so the constructor will never fail.  The primary use of the
 * QR decomposition is in the least squares solution of nonsquare systems
 * of simultaneous linear equations.  This will fail if isFullRank()
 * returns false.</text>
    </javadoc>
    <javadoc>
      <text>* Array for internal storage of decomposition.</text>
      <serial>internal array storage.</serial>
    </javadoc>
    <declaration type="double[][]" name="QR" />
    <javadoc>
      <text>* Row and column dimensions.</text>
      <serial>column dimension.</serial>
      <serial>row dimension.</serial>
    </javadoc>
    <declaration type="int" name="m" />
    <javadoc>
      <text>* Array for internal storage of diagonal of R.</text>
      <serial>diagonal of R.</serial>
    </javadoc>
    <declaration type="double[]" name="Rdiag" />
    <declaration type="long" name="serialVersionUID" />
    <javadoc>
      <text>* QR Decomposition, computed by Householder reflections.
 * Structure to access R and the Householder vectors and compute Q.</text>
      <param>A    Rectangular matrix</param>
    </javadoc>
    <method type="constructor" name="QRDecomposition" startLine="53" endLine="92">
      <scope startLine="61" endLine="91">
        <declaration type="double" name="nrm" />
        <scope startLine="64" endLine="66" />
        <scope startLine="68" endLine="89">
          <scope startLine="70" endLine="72" />
          <scope startLine="73" endLine="75" />
          <scope startLine="79" endLine="88">
            <declaration type="double" name="s" />
            <scope startLine="81" endLine="83" />
            <scope startLine="85" endLine="87" />
          </scope>
        </scope>
        <comment>Compute 2-norm of k-th column without under/overflow.</comment>
        <comment>Form k-th Householder vector.</comment>
        <comment>Apply transformation to remaining columns.</comment>
      </scope>
      <comment>Initialize.</comment>
      <comment>Main loop.</comment>
    </method>
    <javadoc>
      <text>* Return the Householder vectors</text>
      <return>Lower trapezoidal matrix whose columns define the reflections</return>
    </javadoc>
    <method type="Matrix" name="getH" startLine="98" endLine="111">
      <declaration type="Matrix" name="X" />
      <declaration type="double[][]" name="H" />
      <scope startLine="101" endLine="109">
        <scope startLine="102" endLine="108">
          <scope startLine="103" endLine="105" />
          <scope startLine="105" endLine="107" />
        </scope>
      </scope>
    </method>
    <javadoc>
      <text>* Generate and return the (economy-sized) orthogonal factor</text>
      <return>Q</return>
    </javadoc>
    <method type="Matrix" name="getQ" startLine="117" endLine="139">
      <declaration type="Matrix" name="X" />
      <declaration type="double[][]" name="Q" />
      <scope startLine="120" endLine="137">
        <scope startLine="121" endLine="123" />
        <scope startLine="125" endLine="136">
          <scope startLine="126" endLine="135">
            <declaration type="double" name="s" />
            <scope startLine="128" endLine="130" />
            <scope startLine="132" endLine="134" />
          </scope>
        </scope>
      </scope>
    </method>
    <javadoc>
      <text>* Return the upper triangular factor</text>
      <return>R</return>
    </javadoc>
    <method type="Matrix" name="getR" startLine="145" endLine="160">
      <declaration type="Matrix" name="X" />
      <declaration type="double[][]" name="R" />
      <scope startLine="148" endLine="158">
        <scope startLine="149" endLine="157">
          <scope startLine="150" endLine="152" />
          <scope startLine="152" endLine="154" />
          <scope startLine="154" endLine="156" />
        </scope>
      </scope>
    </method>
    <javadoc>
      <text>* Is the matrix full rank?</text>
      <return>true if R, and hence A, has full rank.</return>
    </javadoc>
    <method type="boolean" name="isFullRank" startLine="166" endLine="173">
      <scope startLine="167" endLine="171">
        <scope startLine="168" endLine="170" />
      </scope>
    </method>
    <javadoc>
      <text>* Least squares solution of A*X = B</text>
      <param>B    A Matrix with as many rows as A and any number of columns.</param>
      <return>X that minimizes the two norm of Q*R*X-B.</return>
      <exception>IllegalArgumentException  Matrix row dimensions must agree.</exception>
      <exception>RuntimeException  Matrix is rank deficient.</exception>
    </javadoc>
    <method type="Matrix" name="solve" startLine="182" endLine="219">
      <scope startLine="183" endLine="185" />
      <scope startLine="186" endLine="188" />
      <declaration type="int" name="nx" />
      <declaration type="double[][]" name="X" />
      <scope startLine="195" endLine="206">
        <scope startLine="196" endLine="205">
          <declaration type="double" name="s" />
          <scope startLine="198" endLine="200" />
          <scope startLine="202" endLine="204" />
        </scope>
      </scope>
      <scope startLine="208" endLine="217">
        <scope startLine="209" endLine="211" />
        <scope startLine="212" endLine="216">
          <scope startLine="213" endLine="215" />
        </scope>
      </scope>
      <comment>Copy right hand side</comment>
      <comment>Compute Y = transpose(Q)*B</comment>
      <comment>Solve R*X = Y;</comment>
    </method>
    <comment>------------------------
Class variables
 ------------------------</comment>
    <comment>------------------------
Constructor
 ------------------------</comment>
    <comment>------------------------
Public Methods
 ------------------------</comment>
  </class>
</source>
