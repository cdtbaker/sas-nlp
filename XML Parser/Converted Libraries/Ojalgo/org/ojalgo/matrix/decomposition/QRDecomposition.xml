<?xml version="1.0" encoding="UTF-8"?>
<source package="org.ojalgo.matrix.decomposition">
  <import name="java.math.BigDecimal" />
  <import name="org.ojalgo.access.Access2D" />
  <import name="org.ojalgo.function.aggregator.AggregatorFunction" />
  <import name="org.ojalgo.matrix.MatrixUtils" />
  <import name="org.ojalgo.matrix.jama.JamaQR" />
  <import name="org.ojalgo.matrix.store.BigDenseStore" />
  <import name="org.ojalgo.matrix.store.ComplexDenseStore" />
  <import name="org.ojalgo.matrix.store.MatrixStore" />
  <import name="org.ojalgo.matrix.store.PrimitiveDenseStore" />
  <import name="org.ojalgo.matrix.store.UpperTriangularStore" />
  <import name="org.ojalgo.matrix.transformation.Householder" />
  <import name="org.ojalgo.scalar.ComplexNumber" />
  <import name="org.ojalgo.scalar.Scalar" />
  <import name="org.ojalgo.type.context.NumberContext" />
  <class name="QRDecomposition" extends="InPlaceDecomposition<N>" startLine="40">
    <implements name="QR<N>" />
    <javadoc>
      <text>* You create instances of (some subclass of) this class by calling one of the static factory methods:{@linkplain #makeBig()}, {@linkplain #makeComplex()}, {@linkplain #makePrimitive()} or {@linkplain #makeJama()}.</text>
      <author>apete</author>
    </javadoc>
    <class name="Big" extends="QRDecomposition<BigDecimal>" startLine="48">
      <method type="constructor" name="Big" startLine="50" endLine="52" />
      <class name="Complex" extends="QRDecomposition<ComplexNumber>" startLine="56">
        <method type="constructor" name="Complex" startLine="58" endLine="60" />
        <class name="Primitive" extends="QRDecomposition<Double>" startLine="64">
          <method type="constructor" name="Primitive" startLine="66" endLine="68" />
          <method type="QR<N>" name="make" startLine="73" endLine="93">
            <declaration type="N" name="tmpNumber" />
            <scope startLine="77" endLine="79" />
            <scope startLine="79" endLine="81" />
            <scope startLine="81" endLine="90">
              <declaration type="int" name="tmpMaxDim" />
              <scope startLine="85" endLine="87" />
              <scope startLine="87" endLine="89" />
              <comment>16,16,8</comment>
            </scope>
            <scope startLine="90" endLine="92" />
          </method>
          <method type="QR<BigDecimal>" name="makeBig" startLine="95" endLine="97" />
          <method type="QR<ComplexNumber>" name="makeComplex" startLine="99" endLine="101" />
          <method type="QR<Double>" name="makeJama" startLine="103" endLine="105" />
          <method type="QR<Double>" name="makePrimitive" startLine="107" endLine="109" />
          <declaration type="boolean" name="myFullSize" />
          <method type="constructor" name="QRDecomposition" startLine="113" endLine="115" />
          <method type="N" name="calculateDeterminant" startLine="117" endLine="120" />
          <method type="boolean" name="compute" startLine="122" endLine="124" />
          <method type="boolean" name="compute" startLine="126" endLine="148">
            <declaration type="DecompositionStore<N>" name="tmpStore" />
            <declaration type="int" name="tmpRowDim" />
            <declaration type="int" name="tmpColDim" />
            <declaration type="Householder<N>" name="tmpHouseholder" />
            <declaration type="int" name="tmpLimit" />
            <scope startLine="141" endLine="145">
              <scope startLine="142" endLine="144" />
            </scope>
          </method>
          <method type="boolean" name="equals" startLine="150" endLine="152" />
          <method type="N" name="getDeterminant" startLine="154" endLine="161">
            <declaration type="AggregatorFunction<N>" name="tmpAggrFunc" />
          </method>
          <method type="MatrixStore<N>" name="getInverse" startLine="164" endLine="166" />
          <method type="MatrixStore<N>" name="getInverse" startLine="169" endLine="171" />
          <method type="MatrixStore<N>" name="getQ" startLine="173" endLine="190">
            <declaration type="DecompositionStore<N>" name="retVal" />
            <declaration type="DecompositionStore.HouseholderReference<N>" name="tmpReference" />
            <scope startLine="179" endLine="187">
              <scope startLine="184" endLine="186" />
            </scope>
          </method>
          <method type="MatrixStore<N>" name="getR" startLine="192" endLine="201">
            <declaration type="MatrixStore<N>" name="retVal" />
            <scope startLine="196" endLine="198" />
          </method>
          <method type="int" name="getRank" startLine="203" endLine="216">
            <declaration type="int" name="retVal" />
            <declaration type="Scalar<N>" name="tmpVal" />
            <scope startLine="208" endLine="213">
              <scope startLine="210" endLine="212" />
            </scope>
          </method>
          <javadoc>
            <see>org.ojalgo.matrix.decomposition.QR#isFullColumnRank()</see>
          </javadoc>
          <method type="boolean" name="isFullColumnRank" startLine="221" endLine="223" />
          <method type="boolean" name="isFullSize" startLine="225" endLine="227" />
          <method type="boolean" name="isSolvable" startLine="229" endLine="231" />
          <method type="MatrixStore<N>" name="reconstruct" startLine="233" endLine="235" />
          <method type="void" name="reset" startLine="238" endLine="243" />
          <javadoc>
            <text>* Solve [A]*[X]=[B] by first solving [Q]*[Y]=[B] and then [R]*[X]=[Y]. [X] minimises the 2-norm of [Q]*[R]*[X]-[B].</text>
            <param>rhs The right hand side [B]</param>
            <return>[X] "preallocated" is used to form the results, but the solution is in the returned MatrixStore.</return>
            <see>org.ojalgo.matrix.decomposition.AbstractDecomposition#solve(Access2D,org.ojalgo.matrix.decomposition.DecompositionStore)</see>
          </javadoc>
          <method type="MatrixStore<N>" name="solve" startLine="254" endLine="284">
            <declaration type="DecompositionStore<N>" name="tmpStore" />
            <declaration type="int" name="tmpRowDim" />
            <declaration type="int" name="tmpColDim" />
            <declaration type="DecompositionStore.HouseholderReference<N>" name="tmpReference" />
            <declaration type="int" name="tmpLimit" />
            <scope startLine="265" endLine="273">
              <scope startLine="270" endLine="272" />
            </scope>
            <scope startLine="277" endLine="279" />
            <scope startLine="279" endLine="281" />
            <scope startLine="281" endLine="283" />
          </method>
          <javadoc>
            <return>L as in R<sup>T</sup>.</return>
          </javadoc>
          <method type="DecompositionStore<N>" name="getL" startLine="289" endLine="304">
            <declaration type="int" name="tmpRowDim" />
            <declaration type="int" name="tmpColDim" />
            <declaration type="DecompositionStore<N>" name="retVal" />
            <declaration type="DecompositionStore<N>" name="tmpStore" />
            <scope startLine="297" endLine="301">
              <scope startLine="298" endLine="300" />
            </scope>
          </method>
        </class>
      </class>
    </class>
  </class>
</source>
