<?xml version="1.0" encoding="UTF-8"?>
<source package="org.ojalgo.matrix.decomposition">
  <import name="java.math.BigDecimal" />
  <import name="org.ojalgo.access.Access2D" />
  <import name="org.ojalgo.array.Array1D" />
  <import name="org.ojalgo.constant.PrimitiveMath" />
  <import name="org.ojalgo.matrix.MatrixUtils" />
  <import name="org.ojalgo.matrix.jama.JamaSingularValue" />
  <import name="org.ojalgo.matrix.store.MatrixStore" />
  <import name="org.ojalgo.matrix.store.PhysicalStore" />
  <import name="org.ojalgo.netio.BasicLogger" />
  <import name="org.ojalgo.scalar.ComplexNumber" />
  <import name="org.ojalgo.type.TypeUtils" />
  <class name="SingularValueDecomposition" extends="AbstractDecomposition<N>" startLine="37">
    <implements name="SingularValue<N>" />
    <javadoc>
      <text>* You create instances of (some subclass of) this class by calling one of the static factory methods:{@linkplain #makeBig()}, {@linkplain #makeComplex()}, {@linkplain #makePrimitive()}, {@linkplain #makeAlternative()}or {@linkplain #makeJama()}.</text>
      <author>apete</author>
    </javadoc>
    <method type="SingularValue<N>" name="make" startLine="47" endLine="76">
      <declaration type="N" name="tmpNumber" />
      <scope startLine="51" endLine="55" />
      <scope startLine="55" endLine="59" />
      <scope startLine="59" endLine="72">
        <declaration type="int" name="tmpMaxDim" />
        <scope startLine="63" endLine="67" />
        <scope startLine="67" endLine="70" />
      </scope>
      <scope startLine="72" endLine="75" />
    </method>
    <method type="SingularValue<Double>" name="makeAlternative" startLine="78" endLine="80" />
    <method type="SingularValue<BigDecimal>" name="makeBig" startLine="82" endLine="84" />
    <method type="SingularValue<ComplexNumber>" name="makeComplex" startLine="86" endLine="88" />
    <method type="SingularValue<Double>" name="makeJama" startLine="90" endLine="92" />
    <method type="SingularValue<Double>" name="makePrimitive" startLine="94" endLine="96" />
    <declaration type="BidiagonalDecomposition<N>" name="myBidiagonal" />
    <declaration type="MatrixStore<N>" name="myD" />
    <declaration type="MatrixStore<N>" name="myQ1" />
    <declaration type="MatrixStore<N>" name="myQ2" />
    <declaration type="Array1D<Double>" name="mySingularValues" />
    <declaration type="boolean" name="mySingularValuesOnly" />
    <declaration type="boolean" name="myTransposed" />
    <declaration type="MatrixStore<N>" name="myInverse" />
    <declaration type="boolean" name="myFullSize" />
    <method type="constructor" name="SingularValueDecomposition" startLine="109" endLine="111" />
    <method type="constructor" name="SingularValueDecomposition" startLine="114" endLine="119" />
    <method type="boolean" name="compute" startLine="121" endLine="123" />
    <method type="boolean" name="compute" startLine="125" endLine="154">
      <scope startLine="129" endLine="131" />
      <scope startLine="131" endLine="133" />
      <declaration type="boolean" name="retVal" />
      <scope startLine="140" endLine="144" />
      <scope startLine="144" endLine="151" />
    </method>
    <method type="double" name="getCondition" startLine="156" endLine="161">
      <declaration type="Array1D<Double>" name="tmpSingularValues" />
    </method>
    <method type="MatrixStore<N>" name="getD" startLine="163" endLine="170">
      <scope startLine="165" endLine="167" />
    </method>
    <method type="double" name="getFrobeniusNorm" startLine="172" endLine="185">
      <declaration type="double" name="retVal" />
      <declaration type="Array1D<Double>" name="tmpSingularValues" />
      <declaration type="double" name="tmpVal" />
      <scope startLine="179" endLine="182" />
    </method>
    <method type="MatrixStore<N>" name="getInverse" startLine="187" endLine="217">
      <scope startLine="189" endLine="214">
        <declaration type="MatrixStore<N>" name="tmpQ1" />
        <declaration type="MatrixStore<N>" name="tmpD" />
        <declaration type="int" name="tmpRowDim" />
        <declaration type="int" name="tmpColDim" />
        <declaration type="PhysicalStore<N>" name="tmpMtrx" />
        <declaration type="double" name="tmpSingularValue" />
        <scope startLine="202" endLine="211">
          <scope startLine="203" endLine="205" />
          <scope startLine="205" endLine="210">
            <scope startLine="207" endLine="209" />
          </scope>
        </scope>
        <comment>final N tmpZero = this.getStaticZero();</comment>
        <comment>tmpMtrx.fillRow(i, 0, tmpZero);</comment>
      </scope>
    </method>
    <method type="MatrixStore<N>" name="getInverse" startLine="219" endLine="249">
      <scope startLine="221" endLine="246">
        <declaration type="MatrixStore<N>" name="tmpQ1" />
        <declaration type="MatrixStore<N>" name="tmpD" />
        <declaration type="int" name="tmpRowDim" />
        <declaration type="int" name="tmpColDim" />
        <declaration type="PhysicalStore<N>" name="tmpMtrx" />
        <declaration type="N" name="tmpZero" />
        <declaration type="N" name="tmpSingularValue" />
        <scope startLine="234" endLine="243">
          <scope startLine="235" endLine="237" />
          <scope startLine="237" endLine="242">
            <scope startLine="239" endLine="241" />
          </scope>
        </scope>
      </scope>
    </method>
    <method type="double" name="getKyFanNorm" startLine="251" endLine="262">
      <declaration type="Array1D<Double>" name="tmpSingularValues" />
      <declaration type="double" name="retVal" />
      <scope startLine="257" endLine="259" />
    </method>
    <method type="double" name="getOperatorNorm" startLine="264" endLine="266" />
    <method type="MatrixStore<N>" name="getQ1" startLine="268" endLine="279">
      <scope startLine="270" endLine="276">
        <scope startLine="271" endLine="273" />
        <scope startLine="273" endLine="275" />
      </scope>
    </method>
    <method type="MatrixStore<N>" name="getQ2" startLine="281" endLine="292">
      <scope startLine="283" endLine="289">
        <scope startLine="284" endLine="286" />
        <scope startLine="286" endLine="288" />
      </scope>
    </method>
    <method type="int" name="getRank" startLine="294" endLine="311">
      <declaration type="Array1D<Double>" name="tmpSingularValues" />
      <declaration type="int" name="retVal" />
      <declaration type="double" name="tmpTolerance" />
      <scope startLine="302" endLine="308">
        <scope startLine="303" endLine="305" />
        <scope startLine="305" endLine="307" />
      </scope>
      <comment>Tolerance based on min-dim but should be max-dim</comment>
    </method>
    <method type="Array1D<Double>" name="getSingularValues" startLine="313" endLine="320">
      <scope startLine="315" endLine="317" />
    </method>
    <method type="double" name="getTraceNorm" startLine="322" endLine="324" />
    <method type="boolean" name="isAspectRatioNormal" startLine="327" endLine="329" />
    <method type="boolean" name="isFullSize" startLine="331" endLine="333" />
    <method type="DecompositionStore<N>" name="preallocate" startLine="335" endLine="337" />
    <method type="MatrixStore<N>" name="reconstruct" startLine="339" endLine="341" />
    <method type="void" name="reset" startLine="344" endLine="359" />
    <method type="MatrixStore<N>" name="solve" startLine="361" endLine="363" />
    <method type="MatrixStore<N>" name="solve" startLine="365" endLine="368" />
    <method type="boolean" name="computeBidiagonal" startLine="370" endLine="372" />
    <method name="doCompute" type="boolean" startLine="374" endLine="374" />
    <method type="DiagonalAccess<N>" name="getBidiagonalAccessD" startLine="376" endLine="378" />
    <method type="DecompositionStore<N>" name="getBidiagonalQ1" startLine="380" endLine="382" />
    <method type="DecompositionStore<N>" name="getBidiagonalQ2" startLine="384" endLine="386" />
    <method type="boolean" name="isTransposed" startLine="388" endLine="390" />
    <method name="makeD" type="MatrixStore<N>" startLine="392" endLine="392" />
    <method name="makeQ1" type="MatrixStore<N>" startLine="394" endLine="394" />
    <method name="makeQ2" type="MatrixStore<N>" startLine="396" endLine="396" />
    <method name="makeSingularValues" type="Array1D<Double>" startLine="398" endLine="398" />
    <method type="void" name="setD" startLine="400" endLine="402" />
    <method type="void" name="setQ1" startLine="404" endLine="406" />
    <method type="void" name="setQ2" startLine="408" endLine="410" />
    <method type="void" name="setSingularValues" startLine="412" endLine="414" />
  </class>
</source>
