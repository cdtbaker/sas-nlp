<?xml version="1.0" encoding="UTF-8"?>
<source package="org.ojalgo.matrix.decomposition.task">
  <import name="java.math.BigDecimal" />
  <import name="org.ojalgo.access.Access2D" />
  <import name="org.ojalgo.matrix.BasicMatrix" />
  <import name="org.ojalgo.matrix.MatrixUtils" />
  <import name="org.ojalgo.matrix.decomposition.CholeskyDecomposition" />
  <import name="org.ojalgo.matrix.decomposition.DecompositionStore" />
  <import name="org.ojalgo.matrix.decomposition.LUDecomposition" />
  <import name="org.ojalgo.matrix.store.MatrixStore" />
  <import name="org.ojalgo.scalar.ComplexNumber" />
  <interface name="InverterTask" startLine="35">
    <implements name="DecompositionTask<N>" />
    <class name="Factory" startLine="37">
      <method type="InverterTask<N>" name="make" startLine="39" endLine="41" />
      <method name="make" type="InverterTask<N>" startLine="43" endLine="43" />
      <method type="InverterTask<BigDecimal>" name="make" startLine="50" endLine="56">
        <scope startLine="51" endLine="53" />
        <scope startLine="53" endLine="55" />
      </method>
      <declaration type="Factory<BigDecimal>" name="BIG" />
      <method type="InverterTask<ComplexNumber>" name="make" startLine="63" endLine="69">
        <scope startLine="64" endLine="66" />
        <scope startLine="66" endLine="68" />
      </method>
      <declaration type="Factory<ComplexNumber>" name="COMPLEX" />
      <method type="InverterTask<Double>" name="make" startLine="76" endLine="105">
        <declaration type="long" name="tmpDim" />
        <scope startLine="78" endLine="80" />
        <scope startLine="80" endLine="92">
          <scope startLine="81" endLine="83" />
          <scope startLine="83" endLine="85" />
          <scope startLine="85" endLine="87" />
          <scope startLine="87" endLine="89" />
          <scope startLine="89" endLine="91" />
        </scope>
        <scope startLine="92" endLine="104">
          <scope startLine="93" endLine="95" />
          <scope startLine="95" endLine="97" />
          <scope startLine="97" endLine="99" />
          <scope startLine="99" endLine="101" />
          <scope startLine="101" endLine="103" />
        </scope>
      </method>
      <declaration type="Factory<Double>" name="PRIMITIVE" />
      <method name="invert" type="MatrixStore<N>" startLine="109" endLine="114" />
      <javadoc>
        <text>* The output must be a "right inverse" and a "generalised inverse".</text>
        <see>BasicMatrix#invert()</see>
      </javadoc>
      <method name="invert" type="MatrixStore<N>" startLine="116" endLine="133" />
      <javadoc>
        <text>* <p>
 * Implementiong this method is optional.
 * </p>
 * <p>
 * Exactly how a specific implementation makes use of <code>preallocated</code> is not specified by this interface.
 * It must be documented for each implementation.
 * </p>
 * <p>
 * Should produce the same results as calling {@link #getInverse()}.
 * </p></text>
        <param>preallocated Preallocated memory for the results, possibly some intermediate results. You must assume this
 * is modified, but you cannot assume it will contain the full/final/correct solution.</param>
        <return>The inverse</return>
        <throws>UnsupportedOperationException When/if this feature is not implemented</throws>
      </javadoc>
      <method name="preallocate" type="DecompositionStore<N>" startLine="135" endLine="148" />
      <javadoc>
        <text>* <p>
 * Implementiong this method is optional.
 * </p>
 * Will create a {@linkplain DecompositionStore} instance suitable for use with{@link #solve(Access2D,DecompositionStore)}. When solving an equation system [A][X]=[B] ([mxn][nxb]=[mxb]) the
 * preallocated memory/matrix will typically be either mxb or nxb (if A is square then there is no doubt).</text>
        <param>templateBody</param>
        <param>templateRHS</param>
        <return />
        <throws>UnsupportedOperationException When/if this feature is not implemented</throws>
      </javadoc>
    </class>
  </interface>
</source>
