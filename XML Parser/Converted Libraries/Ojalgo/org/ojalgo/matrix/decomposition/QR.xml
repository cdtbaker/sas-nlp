<?xml version="1.0" encoding="UTF-8"?>
<source package="org.ojalgo.matrix.decomposition">
  <import name="org.ojalgo.access.Access2D" />
  <import name="org.ojalgo.matrix.decomposition.task.DeterminantTask" />
  <import name="org.ojalgo.matrix.store.MatrixStore" />
  <interface name="QR" startLine="28">
    <implements name="MatrixDecomposition<N>" />
    <implements name="DeterminantTask<N>" />
    <javadoc>
      <text>* QR: [A] = [Q][R] Decomposes [this] into [Q] and [R] where:
 * <ul>
 * <li>[Q] is an orthogonal matrix (orthonormal columns). It has the same number of rows as [this].</li>
 * <li>[R] is a right (upper) triangular matrix. It has the same number of columns as [this].</li>
 * <li>[this] = [Q][R]</li>
 * </ul>
 * Note: Either Q or R will be square. The interface does not specify which.</text>
      <author>apete</author>
    </javadoc>
    <method name="compute" type="boolean" startLine="41" endLine="45" />
    <javadoc>
      <param>matrix A matrix to decompose</param>
      <return>true if the computation suceeded; false if not</return>
    </javadoc>
    <method name="getDeterminant" type="N" startLine="47" endLine="47" />
    <method name="getQ" type="MatrixStore<N>" startLine="49" endLine="49" />
    <method name="getR" type="MatrixStore<N>" startLine="51" endLine="51" />
    <method name="getRank" type="int" startLine="53" endLine="53" />
    <method name="isFullColumnRank" type="boolean" startLine="55" endLine="61" />
    <javadoc>
      <text>* The QR decompostion always exists, even if the matrix does not have full column rank, so the compute method will
 * never fail. The primary use of the QR decomposition is in the least squares solution of overdetermined systems of
 * simultaneous linear equations. This will fail if the matrix does not have full column rank. The rank must be
 * equal to the number of columns.</text>
    </javadoc>
  </interface>
</source>
