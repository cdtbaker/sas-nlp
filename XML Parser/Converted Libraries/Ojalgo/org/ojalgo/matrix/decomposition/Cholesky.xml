<?xml version="1.0" encoding="UTF-8"?>
<source package="org.ojalgo.matrix.decomposition">
  <import name="org.ojalgo.access.Access2D" />
  <import name="org.ojalgo.matrix.decomposition.task.DeterminantTask" />
  <import name="org.ojalgo.matrix.store.MatrixStore" />
  <interface name="Cholesky" startLine="28">
    <implements name="MatrixDecomposition<N>" />
    <implements name="DeterminantTask<N>" />
    <javadoc>
      <text>* Cholesky: [A] = [L][L]<sup>T</sup>
 * <p>
 * If [A] is symmetric and positive definite then the general LU decomposition - [P][L][D][U] - becomes
 * [I][L][D][L]<sup>T</sup> (or [I][U]<sup>T</sup>[D][U]). [I] can be left out and [D] is normally split in halves and
 * merged with [L] (and/or [U]). We'll express it as [A] = [R]<sup>T</sup>[R].
 * </p>
 * <p>
 * A cholesky decomposition is still/also an LU decomposition where [P][L][D][U] => [R]<sup>T</sup>[R].
 * </p></text>
      <author>apete</author>
    </javadoc>
    <method name="isSPD" type="boolean" startLine="43" endLine="51" />
    <javadoc>
      <text>* To use the Cholesky decomposition rather than the LU decomposition the matrix must be symmetric and positive
 * definite. It is recommended that the decomposition algorithm checks for this during calculation. Possibly the
 * matrix could be assumed to be symmetric (to improve performance) but tests should be made to assure the matrix is
 * positive definite.</text>
      <return>true if the tests did not fail.</return>
    </javadoc>
    <method name="compute" type="boolean" startLine="53" endLine="53" />
    <method name="getDeterminant" type="N" startLine="55" endLine="55" />
    <method name="getL" type="MatrixStore<N>" startLine="57" endLine="57" />
  </interface>
</source>
