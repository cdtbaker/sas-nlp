<?xml version="1.0" encoding="UTF-8"?>
<source package="org.ojalgo.matrix">
  <import name="java.io.Serializable" />
  <import name="java.math.BigDecimal" />
  <import name="java.util.ArrayList" />
  <import name="java.util.Iterator" />
  <import name="java.util.List" />
  <import name="org.ojalgo.ProgrammingError" />
  <import name="org.ojalgo.access.Access1D" />
  <import name="org.ojalgo.access.Access2D" />
  <import name="org.ojalgo.access.AccessUtils" />
  <import name="org.ojalgo.access.Iterator1D" />
  <import name="org.ojalgo.constant.PrimitiveMath" />
  <import name="org.ojalgo.function.UnaryFunction" />
  <import name="org.ojalgo.function.aggregator.Aggregator" />
  <import name="org.ojalgo.function.aggregator.AggregatorFunction" />
  <import name="org.ojalgo.matrix.decomposition.Eigenvalue" />
  <import name="org.ojalgo.matrix.decomposition.EigenvalueDecomposition" />
  <import name="org.ojalgo.matrix.decomposition.LU" />
  <import name="org.ojalgo.matrix.decomposition.LUDecomposition" />
  <import name="org.ojalgo.matrix.decomposition.QR" />
  <import name="org.ojalgo.matrix.decomposition.QRDecomposition" />
  <import name="org.ojalgo.matrix.decomposition.SingularValue" />
  <import name="org.ojalgo.matrix.decomposition.SingularValueDecomposition" />
  <import name="org.ojalgo.matrix.store.*" />
  <import name="org.ojalgo.scalar.ComplexNumber" />
  <import name="org.ojalgo.scalar.Scalar" />
  <import name="org.ojalgo.type.context.NumberContext" />
  <class name="AbstractMatrix" extends="Object" startLine="52">
    <implements name="BasicMatrix<N>" />
    <implements name="Serializable" />
    <javadoc>
      <text>* ArbitraryMatrix</text>
      <author>apete</author>
    </javadoc>
    <declaration type="Eigenvalue<N>" name="myEigenvalue" />
    <declaration type="int" name="myHashCode" />
    <declaration type="LU<N>" name="myLU" />
    <declaration type="PhysicalStore.Factory<N,? extends PhysicalStore<N>>" name="myPhysicalFactory" />
    <declaration type="QR<N>" name="myQR" />
    <declaration type="SingularValue<N>" name="mySingularValue" />
    <declaration type="MatrixStore<N>" name="myStore" />
    <method type="constructor" name="AbstractMatrix" startLine="68" endLine="73" />
    <method type="constructor" name="AbstractMatrix" startLine="75" endLine="81" />
    <method type="I" name="add" startLine="83" endLine="92">
      <declaration type="PhysicalStore<N>" name="retVal" />
    </method>
    <method type="I" name="add" startLine="94" endLine="99">
      <declaration type="MatrixStore<N>" name="tmpDiff" />
    </method>
    <method type="I" name="add" startLine="101" endLine="108">
      <declaration type="PhysicalStore.Factory<N,?>" name="tmpPhysicalFactory" />
      <declaration type="SingleStore<N>" name="tmpDiff" />
    </method>
    <method type="I" name="add" startLine="110" endLine="117">
      <declaration type="PhysicalStore<N>" name="retVal" />
    </method>
    <method type="I" name="conjugate" startLine="119" endLine="130">
      <declaration type="MatrixStore<N>" name="retVal" />
      <scope startLine="123" endLine="125" />
      <scope startLine="125" endLine="127" />
    </method>
    <method type="Access2D.Builder<I>" name="copyToBuilder" startLine="132" endLine="134" />
    <method type="long" name="count" startLine="136" endLine="138" />
    <method type="long" name="countColumns" startLine="140" endLine="142" />
    <method type="long" name="countRows" startLine="144" endLine="146" />
    <method type="I" name="divide" startLine="148" endLine="155">
      <declaration type="PhysicalStore<N>" name="retVal" />
    </method>
    <method type="I" name="divideElements" startLine="157" endLine="166">
      <declaration type="PhysicalStore<N>" name="retVal" />
    </method>
    <method type="double" name="doubleValue" startLine="168" endLine="170" />
    <method type="double" name="doubleValue" startLine="172" endLine="174" />
    <method type="boolean" name="equals" startLine="176" endLine="178" />
    <method type="boolean" name="equals" startLine="181" endLine="187">
      <scope startLine="182" endLine="184" />
      <scope startLine="184" endLine="186" />
    </method>
    <method type="void" name="flushCache" startLine="189" endLine="197" />
    <method type="N" name="get" startLine="199" endLine="201" />
    <method type="N" name="get" startLine="203" endLine="205" />
    <method type="N" name="get" startLine="207" endLine="209" />
    <method type="int" name="getColDim" startLine="211" endLine="214">
      <comment>TODO Make protected when no longer in interface</comment>
    </method>
    <method type="I" name="getColumnsRange" startLine="216" endLine="218" />
    <method type="Scalar<N>" name="getCondition" startLine="220" endLine="222" />
    <method type="Scalar<N>" name="getDeterminant" startLine="224" endLine="226" />
    <method type="List<ComplexNumber>" name="getEigenvalues" startLine="228" endLine="230" />
    <javadoc>
      <see>org.ojalgo.matrix.BasicMatrix#getFrobeniusNorm()</see>
    </javadoc>
    <method type="Scalar<N>" name="getFrobeniusNorm" startLine="235" endLine="245">
      <scope startLine="237" endLine="241" />
      <scope startLine="241" endLine="244" />
    </method>
    <method type="Scalar<N>" name="getInfinityNorm" startLine="247" endLine="260">
      <declaration type="double" name="retVal" />
      <declaration type="AggregatorFunction<N>" name="tmpRowSumAggr" />
      <declaration type="int" name="tmpRowDim" />
      <scope startLine="253" endLine="257" />
    </method>
    <method type="Scalar<N>" name="getKyFanNorm" startLine="262" endLine="264" />
    <method type="Scalar<N>" name="getOneNorm" startLine="266" endLine="279">
      <declaration type="double" name="retVal" />
      <declaration type="AggregatorFunction<N>" name="tmpColSumAggr" />
      <declaration type="int" name="tmpColDim" />
      <scope startLine="272" endLine="276" />
    </method>
    <method type="Scalar<N>" name="getOperatorNorm" startLine="281" endLine="283" />
    <method type="int" name="getRank" startLine="285" endLine="293">
      <scope startLine="286" endLine="288" />
      <scope startLine="288" endLine="290" />
      <scope startLine="290" endLine="292" />
    </method>
    <method type="int" name="getRowDim" startLine="295" endLine="298">
      <comment>TODO Make protected when no longer in interface</comment>
    </method>
    <method type="I" name="getRowsRange" startLine="300" endLine="302" />
    <method type="List<Double>" name="getSingularValues" startLine="304" endLine="306" />
    <method type="Scalar<N>" name="getTrace" startLine="308" endLine="315">
      <declaration type="AggregatorFunction<N>" name="tmpAggr" />
    </method>
    <method type="Scalar<N>" name="getTraceNorm" startLine="317" endLine="319" />
    <method type="Scalar<N>" name="getVectorNorm" startLine="321" endLine="341" />
    <method type="int" name="hashCode" startLine="344" endLine="349">
      <scope startLine="345" endLine="347" />
    </method>
    <method type="I" name="invert" startLine="351" endLine="364">
      <declaration type="MatrixStore<N>" name="retVal" />
      <scope startLine="355" endLine="357" />
      <scope startLine="357" endLine="359" />
      <scope startLine="359" endLine="361" />
    </method>
    <method type="boolean" name="isEmpty" startLine="366" endLine="368" />
    <method type="boolean" name="isFat" startLine="370" endLine="372" />
    <method type="boolean" name="isFullRank" startLine="374" endLine="376" />
    <method type="boolean" name="isHermitian" startLine="378" endLine="380" />
    <method type="boolean" name="isScalar" startLine="382" endLine="384" />
    <method type="boolean" name="isSquare" startLine="386" endLine="388" />
    <method type="boolean" name="isSymmetric" startLine="390" endLine="392" />
    <method type="boolean" name="isTall" startLine="394" endLine="396" />
    <method type="boolean" name="isVector" startLine="398" endLine="400" />
    <method type="Iterator<N>" name="iterator" startLine="402" endLine="404" />
    <method type="I" name="mergeColumns" startLine="406" endLine="411" />
    <method type="I" name="mergeRows" startLine="413" endLine="418" />
    <method type="I" name="modify" startLine="420" endLine="427">
      <declaration type="PhysicalStore<N>" name="retVal" />
    </method>
    <method type="I" name="multiply" startLine="429" endLine="436">
      <declaration type="PhysicalStore<N>" name="retVal" />
    </method>
    <method type="I" name="multiplyElements" startLine="438" endLine="447">
      <declaration type="PhysicalStore<N>" name="retVal" />
    </method>
    <method type="I" name="multiplyLeft" startLine="449" endLine="454" />
    <method type="I" name="multiplyRight" startLine="456" endLine="461" />
    <method type="Scalar<N>" name="multiplyVectors" startLine="463" endLine="471">
      <scope startLine="464" endLine="466" />
      <scope startLine="466" endLine="468" />
      <scope startLine="468" endLine="470" />
    </method>
    <method type="I" name="negate" startLine="473" endLine="480">
      <declaration type="PhysicalStore<N>" name="retVal" />
    </method>
    <method type="I" name="selectColumns" startLine="482" endLine="484" />
    <method type="I" name="selectRows" startLine="486" endLine="488" />
    <method type="int" name="size" startLine="490" endLine="492" />
    <method type="I" name="solve" startLine="494" endLine="507">
      <declaration type="MatrixStore<N>" name="retVal" />
      <scope startLine="498" endLine="500" />
      <scope startLine="500" endLine="502" />
      <scope startLine="502" endLine="504" />
    </method>
    <method type="I" name="subtract" startLine="509" endLine="518">
      <declaration type="PhysicalStore<N>" name="retVal" />
    </method>
    <method type="I" name="subtract" startLine="520" endLine="527">
      <declaration type="PhysicalStore<N>" name="retVal" />
    </method>
    <method type="PhysicalStore<BigDecimal>" name="toBigStore" startLine="529" endLine="531" />
    <method type="PhysicalStore<ComplexNumber>" name="toComplexStore" startLine="533" endLine="535" />
    <method type="List<BasicMatrix<N>>" name="toListOfColumns" startLine="537" endLine="548">
      <declaration type="int" name="tmpColDim" />
      <declaration type="List<BasicMatrix<N>>" name="retVal" />
      <scope startLine="543" endLine="545" />
    </method>
    <method type="List<N>" name="toListOfElements" startLine="550" endLine="552" />
    <method type="List<BasicMatrix<N>>" name="toListOfRows" startLine="554" endLine="565">
      <declaration type="int" name="tmpRowDim" />
      <declaration type="List<BasicMatrix<N>>" name="retVal" />
      <scope startLine="560" endLine="562" />
    </method>
    <method type="PhysicalStore<Double>" name="toPrimitiveStore" startLine="567" endLine="569" />
    <method type="Scalar<N>" name="toScalar" startLine="571" endLine="573" />
    <method type="String" name="toString" startLine="576" endLine="578" />
    <method type="I" name="transpose" startLine="580" endLine="591">
      <declaration type="MatrixStore<N>" name="retVal" />
      <scope startLine="584" endLine="586" />
      <scope startLine="586" endLine="588" />
    </method>
    <method type="Eigenvalue<N>" name="getComputedEigenvalue" startLine="593" endLine="602">
      <declaration type="Eigenvalue<N>" name="retVal" />
      <scope startLine="597" endLine="599" />
    </method>
    <method type="LU<N>" name="getComputedLU" startLine="604" endLine="613">
      <declaration type="LU<N>" name="retVal" />
      <scope startLine="608" endLine="610" />
    </method>
    <method type="QR<N>" name="getComputedQR" startLine="615" endLine="624">
      <declaration type="QR<N>" name="retVal" />
      <scope startLine="619" endLine="621" />
    </method>
    <method type="SingularValue<N>" name="getComputedSingularValue" startLine="626" endLine="635">
      <declaration type="SingularValue<N>" name="retVal" />
      <scope startLine="630" endLine="632" />
    </method>
    <method type="Eigenvalue<N>" name="getEigenvalue" startLine="637" endLine="644">
      <scope startLine="639" endLine="641" />
    </method>
    <method type="LU<N>" name="getLU" startLine="646" endLine="651">
      <scope startLine="647" endLine="649" />
    </method>
    <method type="QR<N>" name="getQR" startLine="653" endLine="658">
      <scope startLine="654" endLine="656" />
    </method>
    <method type="SingularValue<N>" name="getSingularValue" startLine="660" endLine="665">
      <scope startLine="661" endLine="663" />
    </method>
    <method name="getFactory" type="MatrixFactory<N,I>" startLine="667" endLine="667" />
    <method type="PhysicalStore.Factory<N,? extends PhysicalStore<N>>" name="getPhysicalFactory" startLine="669" endLine="671" />
    <method type="MatrixStore<N>" name="getStore" startLine="673" endLine="675" />
    <method name="getStoreFrom" type="MatrixStore<N>" startLine="677" endLine="677" />
  </class>
</source>
