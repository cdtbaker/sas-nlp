<?xml version="1.0" encoding="UTF-8"?>
<source package="org.ojalgo.function.multiary">
  <import name="java.math.BigDecimal" />
  <import name="org.ojalgo.access.Access1D" />
  <import name="org.ojalgo.access.Access2D" />
  <import name="org.ojalgo.matrix.store.MatrixStore" />
  <import name="org.ojalgo.matrix.store.PhysicalStore" />
  <import name="org.ojalgo.matrix.store.PhysicalStore.Factory" />
  <import name="org.ojalgo.scalar.ComplexNumber" />
  <import name="org.ojalgo.scalar.Scalar" />
  <class name="CompoundFunction" extends="AbstractMultiary<N,CompoundFunction<N>>" startLine="34">
    <implements name="MultiaryFunction.Linear<N>" />
    <implements name="MultiaryFunction.Quadratic<N>" />
    <javadoc>
      <text>* [x]<sup>T</sup>[Q][x] + [c]<sup>T</sup>[x] + b</text>
      <author>apete</author>
    </javadoc>
    <method type="CompoundFunction<BigDecimal>" name="makeBig" startLine="42" endLine="46">
      <declaration type="QuadraticFunction<BigDecimal>" name="tmpQuadratic" />
      <declaration type="LinearFunction<BigDecimal>" name="tmpLinear" />
    </method>
    <method type="CompoundFunction<BigDecimal>" name="makeBig" startLine="48" endLine="52">
      <declaration type="QuadraticFunction<BigDecimal>" name="tmpQuadratic" />
      <declaration type="LinearFunction<BigDecimal>" name="tmpLinear" />
    </method>
    <method type="CompoundFunction<ComplexNumber>" name="makeComplex" startLine="54" endLine="58">
      <declaration type="QuadraticFunction<ComplexNumber>" name="tmpQuadratic" />
      <declaration type="LinearFunction<ComplexNumber>" name="tmpLinear" />
    </method>
    <method type="CompoundFunction<ComplexNumber>" name="makeComplex" startLine="60" endLine="64">
      <declaration type="QuadraticFunction<ComplexNumber>" name="tmpQuadratic" />
      <declaration type="LinearFunction<ComplexNumber>" name="tmpLinear" />
    </method>
    <method type="CompoundFunction<Double>" name="makePrimitive" startLine="66" endLine="70">
      <declaration type="QuadraticFunction<Double>" name="tmpQuadratic" />
      <declaration type="LinearFunction<Double>" name="tmpLinear" />
    </method>
    <method type="CompoundFunction<Double>" name="makePrimitive" startLine="72" endLine="76">
      <declaration type="QuadraticFunction<Double>" name="tmpQuadratic" />
      <declaration type="LinearFunction<Double>" name="tmpLinear" />
    </method>
    <declaration type="LinearFunction<N>" name="myLinear" />
    <declaration type="QuadraticFunction<N>" name="myQuadratic" />
    <method type="constructor" name="CompoundFunction" startLine="82" endLine="84" />
    <method type="constructor" name="CompoundFunction" startLine="86" endLine="96">
      <scope startLine="93" endLine="95" />
    </method>
    <method type="int" name="arity" startLine="98" endLine="100" />
    <method type="MatrixStore<N>" name="getGradient" startLine="103" endLine="105" />
    <method type="MatrixStore<N>" name="getHessian" startLine="108" endLine="110" />
    <method type="N" name="invoke" startLine="113" endLine="122">
      <declaration type="Scalar<N>" name="retVal" />
    </method>
    <method type="PhysicalStore<N>" name="linear" startLine="124" endLine="126" />
    <method type="PhysicalStore<N>" name="quadratic" startLine="128" endLine="130" />
    <method type="Factory<N,?>" name="factory" startLine="133" endLine="135" />
  </class>
</source>
