<?xml version="1.0" encoding="UTF-8"?>
<source package="org.ojalgo.function">
  <import name="org.ojalgo.constant.PrimitiveMath" />
  <import name="org.ojalgo.scalar.ComplexNumber" />
  <import name="org.ojalgo.type.TypeUtils" />
  <class name="ComplexFunction" extends="FunctionSet<ComplexNumber>" startLine="28">
    <class name="Binary" extends="BinaryFunction<ComplexNumber>" startLine="30">
      <method type="double" name="invoke" startLine="33" endLine="35" />
      <class name="Parameter" extends="ParameterFunction<ComplexNumber>" startLine="39">
        <method type="double" name="invoke" startLine="42" endLine="44" />
        <class name="Unary" startLine="48">
          <implements name="UnaryFunction<ComplexNumber>" />
          <method type="double" name="invoke" startLine="50" endLine="52" />
          <method type="ComplexNumber" name="invoke" startLine="58" endLine="60" />
          <declaration type="UnaryFunction<ComplexNumber>" name="ABS" />
          <method type="ComplexNumber" name="invoke" startLine="66" endLine="73">
            <declaration type="ComplexNumber" name="tmpNmbr" />
          </method>
          <declaration type="UnaryFunction<ComplexNumber>" name="ACOS" />
          <method type="ComplexNumber" name="invoke" startLine="79" endLine="84">
            <declaration type="ComplexNumber" name="tmpNmbr" />
          </method>
          <declaration type="UnaryFunction<ComplexNumber>" name="ACOSH" />
          <method type="ComplexNumber" name="invoke" startLine="91" endLine="93" />
          <declaration type="BinaryFunction<ComplexNumber>" name="ADD" />
          <method type="ComplexNumber" name="invoke" startLine="99" endLine="106">
            <declaration type="ComplexNumber" name="tmpNmbr" />
          </method>
          <declaration type="UnaryFunction<ComplexNumber>" name="ASIN" />
          <method type="ComplexNumber" name="invoke" startLine="112" endLine="117">
            <declaration type="ComplexNumber" name="tmpNmbr" />
          </method>
          <declaration type="UnaryFunction<ComplexNumber>" name="ASINH" />
          <method type="ComplexNumber" name="invoke" startLine="123" endLine="128">
            <declaration type="ComplexNumber" name="tmpNmbr" />
          </method>
          <declaration type="UnaryFunction<ComplexNumber>" name="ATAN" />
          <method type="ComplexNumber" name="invoke" startLine="134" endLine="139">
            <declaration type="ComplexNumber" name="tmpNmbr" />
          </method>
          <declaration type="UnaryFunction<ComplexNumber>" name="ATANH" />
          <method type="ComplexNumber" name="invoke" startLine="145" endLine="147" />
          <declaration type="UnaryFunction<ComplexNumber>" name="CARDINALITY" />
          <method type="ComplexNumber" name="invoke" startLine="153" endLine="155" />
          <declaration type="UnaryFunction<ComplexNumber>" name="CONJUGATE" />
          <method type="ComplexNumber" name="invoke" startLine="161" endLine="163" />
          <declaration type="UnaryFunction<ComplexNumber>" name="COS" />
          <method type="ComplexNumber" name="invoke" startLine="169" endLine="171" />
          <declaration type="UnaryFunction<ComplexNumber>" name="COSH" />
          <method type="ComplexNumber" name="invoke" startLine="178" endLine="180" />
          <declaration type="BinaryFunction<ComplexNumber>" name="DIVIDE" />
          <method type="ComplexNumber" name="invoke" startLine="186" endLine="192">
            <declaration type="double" name="retMod" />
            <declaration type="double" name="retArg" />
          </method>
          <declaration type="UnaryFunction<ComplexNumber>" name="EXP" />
          <method type="ComplexNumber" name="invoke" startLine="198" endLine="204">
            <declaration type="double" name="retMod" />
            <declaration type="double" name="retArg" />
          </method>
          <declaration type="UnaryFunction<ComplexNumber>" name="EXPM1" />
          <method type="ComplexNumber" name="invoke" startLine="211" endLine="213" />
          <declaration type="BinaryFunction<ComplexNumber>" name="HYPOT" />
          <method type="ComplexNumber" name="invoke" startLine="219" endLine="221" />
          <declaration type="UnaryFunction<ComplexNumber>" name="INVERT" />
          <method type="ComplexNumber" name="invoke" startLine="227" endLine="229" />
          <declaration type="UnaryFunction<ComplexNumber>" name="SQRT1PX2" />
          <method type="ComplexNumber" name="invoke" startLine="235" endLine="241">
            <declaration type="double" name="retRe" />
            <declaration type="double" name="retIm" />
          </method>
          <declaration type="UnaryFunction<ComplexNumber>" name="LOG" />
          <method type="ComplexNumber" name="invoke" startLine="247" endLine="253">
            <declaration type="double" name="retRe" />
            <declaration type="double" name="retIm" />
          </method>
          <declaration type="UnaryFunction<ComplexNumber>" name="LOG10" />
          <method type="ComplexNumber" name="invoke" startLine="259" endLine="265">
            <declaration type="double" name="retRe" />
            <declaration type="double" name="retIm" />
          </method>
          <declaration type="UnaryFunction<ComplexNumber>" name="LOG1P" />
          <method type="ComplexNumber" name="invoke" startLine="272" endLine="283">
            <declaration type="ComplexNumber" name="retVal" />
            <scope startLine="276" endLine="278" />
            <scope startLine="278" endLine="280" />
          </method>
          <declaration type="BinaryFunction<ComplexNumber>" name="MAX" />
          <method type="ComplexNumber" name="invoke" startLine="290" endLine="301">
            <declaration type="ComplexNumber" name="retVal" />
            <scope startLine="294" endLine="296" />
            <scope startLine="296" endLine="298" />
          </method>
          <declaration type="BinaryFunction<ComplexNumber>" name="MIN" />
          <method type="ComplexNumber" name="invoke" startLine="308" endLine="310" />
          <declaration type="BinaryFunction<ComplexNumber>" name="MULTIPLY" />
          <method type="ComplexNumber" name="invoke" startLine="316" endLine="318" />
          <declaration type="UnaryFunction<ComplexNumber>" name="NEGATE" />
          <method type="ComplexNumber" name="invoke" startLine="325" endLine="327" />
          <declaration type="BinaryFunction<ComplexNumber>" name="POW" />
          <method type="ComplexNumber" name="invoke" startLine="334" endLine="340">
            <declaration type="double" name="retMod" />
            <declaration type="double" name="retArg" />
          </method>
          <declaration type="ParameterFunction<ComplexNumber>" name="POWER" />
          <method type="ComplexNumber" name="invoke" startLine="347" endLine="362">
            <scope startLine="349" endLine="358">
              <declaration type="double" name="tmpExp" />
              <declaration type="double" name="retMod" />
              <declaration type="double" name="retArg" />
            </scope>
            <scope startLine="358" endLine="361" />
          </method>
          <declaration type="ParameterFunction<ComplexNumber>" name="ROOT" />
          <method type="ComplexNumber" name="invoke" startLine="369" endLine="373">
            <declaration type="double" name="tmpRe" />
            <declaration type="double" name="tmpIm" />
          </method>
          <declaration type="ParameterFunction<ComplexNumber>" name="SCALE" />
          <method type="ComplexNumber" name="invoke" startLine="379" endLine="381" />
          <declaration type="UnaryFunction<ComplexNumber>" name="SIGNUM" />
          <method type="ComplexNumber" name="invoke" startLine="387" endLine="389" />
          <declaration type="UnaryFunction<ComplexNumber>" name="SIN" />
          <method type="ComplexNumber" name="invoke" startLine="395" endLine="397" />
          <declaration type="UnaryFunction<ComplexNumber>" name="SINH" />
          <method type="ComplexNumber" name="invoke" startLine="403" endLine="409">
            <declaration type="double" name="retMod" />
            <declaration type="double" name="retArg" />
          </method>
          <declaration type="UnaryFunction<ComplexNumber>" name="SQRT" />
          <method type="ComplexNumber" name="invoke" startLine="416" endLine="418" />
          <declaration type="BinaryFunction<ComplexNumber>" name="SUBTRACT" />
          <method type="ComplexNumber" name="invoke" startLine="424" endLine="426" />
          <declaration type="UnaryFunction<ComplexNumber>" name="TAN" />
          <method type="ComplexNumber" name="invoke" startLine="432" endLine="451">
            <declaration type="ComplexNumber" name="retVal" />
            <declaration type="ComplexNumber" name="tmpPlus" />
            <declaration type="ComplexNumber" name="tmpMinus" />
            <declaration type="ComplexNumber" name="tmpDividend" />
            <declaration type="ComplexNumber" name="tmpDivisor" />
            <scope startLine="442" endLine="444" />
            <scope startLine="444" endLine="446" />
            <scope startLine="446" endLine="448" />
          </method>
          <declaration type="UnaryFunction<ComplexNumber>" name="TANH" />
          <method type="ComplexNumber" name="invoke" startLine="457" endLine="459" />
          <declaration type="UnaryFunction<ComplexNumber>" name="VALUE" />
          <declaration type="ComplexFunction" name="SET" />
          <method type="ComplexFunction" name="getSet" startLine="465" endLine="467" />
          <method type="ComplexNumber" name="doInvSinAndCosPart1" startLine="469" endLine="471" />
          <method type="ComplexNumber" name="doInvSinAndCosPart2" startLine="473" endLine="475" />
          <method type="constructor" name="ComplexFunction" startLine="477" endLine="479" />
          <method type="UnaryFunction<ComplexNumber>" name="abs" startLine="482" endLine="484" />
          <method type="UnaryFunction<ComplexNumber>" name="acos" startLine="487" endLine="489" />
          <method type="UnaryFunction<ComplexNumber>" name="acosh" startLine="492" endLine="494" />
          <method type="BinaryFunction<ComplexNumber>" name="add" startLine="497" endLine="499" />
          <method type="UnaryFunction<ComplexNumber>" name="asin" startLine="502" endLine="504" />
          <method type="UnaryFunction<ComplexNumber>" name="asinh" startLine="507" endLine="509" />
          <method type="UnaryFunction<ComplexNumber>" name="atan" startLine="512" endLine="514" />
          <method type="UnaryFunction<ComplexNumber>" name="atanh" startLine="517" endLine="519" />
          <method type="UnaryFunction<ComplexNumber>" name="cardinality" startLine="522" endLine="524" />
          <method type="UnaryFunction<ComplexNumber>" name="conjugate" startLine="527" endLine="529" />
          <method type="UnaryFunction<ComplexNumber>" name="cos" startLine="532" endLine="534" />
          <method type="UnaryFunction<ComplexNumber>" name="cosh" startLine="537" endLine="539" />
          <method type="BinaryFunction<ComplexNumber>" name="divide" startLine="542" endLine="544" />
          <method type="UnaryFunction<ComplexNumber>" name="exp" startLine="547" endLine="549" />
          <method type="UnaryFunction<ComplexNumber>" name="expm1" startLine="552" endLine="554" />
          <method type="BinaryFunction<ComplexNumber>" name="hypot" startLine="557" endLine="559" />
          <method type="UnaryFunction<ComplexNumber>" name="invert" startLine="562" endLine="564" />
          <method type="UnaryFunction<ComplexNumber>" name="log" startLine="567" endLine="569" />
          <method type="UnaryFunction<ComplexNumber>" name="log10" startLine="572" endLine="574" />
          <method type="UnaryFunction<ComplexNumber>" name="log1p" startLine="577" endLine="579" />
          <method type="BinaryFunction<ComplexNumber>" name="max" startLine="582" endLine="584" />
          <method type="BinaryFunction<ComplexNumber>" name="min" startLine="587" endLine="589" />
          <method type="BinaryFunction<ComplexNumber>" name="multiply" startLine="592" endLine="594" />
          <method type="UnaryFunction<ComplexNumber>" name="negate" startLine="597" endLine="599" />
          <method type="BinaryFunction<ComplexNumber>" name="pow" startLine="602" endLine="604" />
          <method type="ParameterFunction<ComplexNumber>" name="power" startLine="607" endLine="609" />
          <method type="ParameterFunction<ComplexNumber>" name="root" startLine="612" endLine="614" />
          <method type="ParameterFunction<ComplexNumber>" name="scale" startLine="617" endLine="619" />
          <method type="UnaryFunction<ComplexNumber>" name="signum" startLine="622" endLine="624" />
          <method type="UnaryFunction<ComplexNumber>" name="sin" startLine="627" endLine="629" />
          <method type="UnaryFunction<ComplexNumber>" name="sinh" startLine="632" endLine="634" />
          <method type="UnaryFunction<ComplexNumber>" name="sqrt" startLine="637" endLine="639" />
          <method type="UnaryFunction<ComplexNumber>" name="sqrt1px2" startLine="642" endLine="644" />
          <method type="BinaryFunction<ComplexNumber>" name="subtract" startLine="647" endLine="649" />
          <method type="UnaryFunction<ComplexNumber>" name="tan" startLine="652" endLine="654" />
          <method type="UnaryFunction<ComplexNumber>" name="tanh" startLine="657" endLine="659" />
          <method type="UnaryFunction<ComplexNumber>" name="value" startLine="662" endLine="664" />
        </class>
      </class>
    </class>
  </class>
</source>
