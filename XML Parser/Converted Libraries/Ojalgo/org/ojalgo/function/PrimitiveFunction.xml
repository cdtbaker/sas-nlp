<?xml version="1.0" encoding="UTF-8"?>
<source package="org.ojalgo.function">
  <import name="static org.ojalgo.constant.PrimitiveMath.*" />
  <import name="org.ojalgo.ProgrammingError" />
  <import name="org.ojalgo.type.TypeUtils" />
  <class name="PrimitiveFunction" extends="FunctionSet<Double>" startLine="29">
    <javadoc>
      <text>* Only the primitive parameter (double) methods are actually implemented.
 * The methods with the reference type parameters (Double) should delegate
 * to the primitive methods (and do nothing else).
 * The various implementations should delegate as much as possible to{@link java.lang.Math} and/or built-in Java operators.</text>
      <author>apete</author>
    </javadoc>
    <class name="Binary" extends="BinaryFunction<Double>" startLine="41">
      <method type="Double" name="invoke" startLine="44" endLine="46" />
      <class name="Parameter" extends="ParameterFunction<Double>" startLine="50">
        <method type="Double" name="invoke" startLine="53" endLine="55" />
        <class name="Unary" startLine="59">
          <implements name="UnaryFunction<Double>" />
          <method type="Double" name="invoke" startLine="61" endLine="63" />
          <method type="double" name="invoke" startLine="69" endLine="71" />
          <declaration type="UnaryFunction<Double>" name="ABS" />
          <method type="double" name="invoke" startLine="77" endLine="79" />
          <declaration type="UnaryFunction<Double>" name="ACOS" />
          <method type="double" name="invoke" startLine="85" endLine="87" />
          <declaration type="UnaryFunction<Double>" name="ACOSH" />
          <method type="double" name="invoke" startLine="94" endLine="96" />
          <declaration type="BinaryFunction<Double>" name="ADD" />
          <method type="double" name="invoke" startLine="102" endLine="104" />
          <declaration type="UnaryFunction<Double>" name="ASIN" />
          <method type="double" name="invoke" startLine="110" endLine="112" />
          <declaration type="UnaryFunction<Double>" name="ASINH" />
          <method type="double" name="invoke" startLine="118" endLine="120" />
          <declaration type="UnaryFunction<Double>" name="ATAN" />
          <method type="double" name="invoke" startLine="126" endLine="128" />
          <declaration type="UnaryFunction<Double>" name="ATANH" />
          <method type="double" name="invoke" startLine="134" endLine="136" />
          <declaration type="UnaryFunction<Double>" name="CARDINALITY" />
          <method type="double" name="invoke" startLine="142" endLine="144" />
          <declaration type="UnaryFunction<Double>" name="CONJUGATE" />
          <method type="double" name="invoke" startLine="150" endLine="152" />
          <declaration type="UnaryFunction<Double>" name="SQRT1PX2" />
          <method type="double" name="invoke" startLine="158" endLine="160" />
          <declaration type="UnaryFunction<Double>" name="COS" />
          <method type="double" name="invoke" startLine="166" endLine="168" />
          <declaration type="UnaryFunction<Double>" name="COSH" />
          <method type="double" name="invoke" startLine="175" endLine="177" />
          <declaration type="BinaryFunction<Double>" name="DIVIDE" />
          <method type="double" name="invoke" startLine="183" endLine="185" />
          <declaration type="UnaryFunction<Double>" name="EXP" />
          <method type="double" name="invoke" startLine="191" endLine="193" />
          <declaration type="UnaryFunction<Double>" name="EXPM1" />
          <method type="double" name="invoke" startLine="200" endLine="202" />
          <declaration type="BinaryFunction<Double>" name="HYPOT" />
          <method type="double" name="invoke" startLine="208" endLine="210" />
          <declaration type="UnaryFunction<Double>" name="INVERT" />
          <method type="double" name="invoke" startLine="216" endLine="218" />
          <declaration type="UnaryFunction<Double>" name="LOG" />
          <method type="double" name="invoke" startLine="224" endLine="226" />
          <declaration type="UnaryFunction<Double>" name="LOG10" />
          <method type="double" name="invoke" startLine="232" endLine="234" />
          <declaration type="UnaryFunction<Double>" name="LOG1P" />
          <method type="double" name="invoke" startLine="241" endLine="243" />
          <declaration type="BinaryFunction<Double>" name="MAX" />
          <method type="double" name="invoke" startLine="250" endLine="252" />
          <declaration type="BinaryFunction<Double>" name="MIN" />
          <method type="double" name="invoke" startLine="259" endLine="261" />
          <declaration type="BinaryFunction<Double>" name="MULTIPLY" />
          <method type="double" name="invoke" startLine="267" endLine="269" />
          <declaration type="UnaryFunction<Double>" name="NEGATE" />
          <method type="double" name="invoke" startLine="276" endLine="278" />
          <declaration type="BinaryFunction<Double>" name="POW" />
          <method type="double" name="invoke" startLine="285" endLine="304">
            <declaration type="double" name="retVal" />
            <scope startLine="289" endLine="293" />
            <scope startLine="293" endLine="301">
              <scope startLine="295" endLine="300" />
            </scope>
          </method>
          <declaration type="ParameterFunction<Double>" name="POWER" />
          <method type="double" name="invoke" startLine="311" endLine="318">
            <scope startLine="313" endLine="315" />
            <scope startLine="315" endLine="317" />
          </method>
          <declaration type="ParameterFunction<Double>" name="ROOT" />
          <method type="double" name="invoke" startLine="325" endLine="340">
            <scope startLine="327" endLine="329" />
            <declaration type="long" name="tmpFactor" />
            <declaration type="long" name="tmp10" />
            <scope startLine="334" endLine="337" />
          </method>
          <declaration type="ParameterFunction<Double>" name="SCALE" />
          <method type="double" name="invoke" startLine="346" endLine="348" />
          <declaration type="UnaryFunction<Double>" name="SIGNUM" />
          <method type="double" name="invoke" startLine="354" endLine="356" />
          <declaration type="UnaryFunction<Double>" name="SIN" />
          <method type="double" name="invoke" startLine="362" endLine="364" />
          <declaration type="UnaryFunction<Double>" name="SINH" />
          <method type="double" name="invoke" startLine="370" endLine="372" />
          <declaration type="UnaryFunction<Double>" name="SQRT" />
          <method type="double" name="invoke" startLine="379" endLine="381" />
          <declaration type="BinaryFunction<Double>" name="SUBTRACT" />
          <method type="double" name="invoke" startLine="387" endLine="389" />
          <declaration type="UnaryFunction<Double>" name="TAN" />
          <method type="double" name="invoke" startLine="395" endLine="397" />
          <declaration type="UnaryFunction<Double>" name="TANH" />
          <method type="double" name="invoke" startLine="403" endLine="405" />
          <declaration type="UnaryFunction<Double>" name="VALUE" />
          <declaration type="PrimitiveFunction" name="SET" />
          <method type="PrimitiveFunction" name="getSet" startLine="411" endLine="413" />
          <method type="constructor" name="PrimitiveFunction" startLine="415" endLine="417" />
          <method type="UnaryFunction<Double>" name="abs" startLine="420" endLine="422" />
          <method type="UnaryFunction<Double>" name="acos" startLine="425" endLine="427" />
          <method type="UnaryFunction<Double>" name="acosh" startLine="430" endLine="432" />
          <method type="BinaryFunction<Double>" name="add" startLine="435" endLine="437" />
          <method type="UnaryFunction<Double>" name="asin" startLine="440" endLine="442" />
          <method type="UnaryFunction<Double>" name="asinh" startLine="445" endLine="447" />
          <method type="UnaryFunction<Double>" name="atan" startLine="450" endLine="452" />
          <method type="UnaryFunction<Double>" name="atanh" startLine="455" endLine="457" />
          <method type="UnaryFunction<Double>" name="cardinality" startLine="460" endLine="462" />
          <method type="UnaryFunction<Double>" name="conjugate" startLine="465" endLine="467" />
          <method type="UnaryFunction<Double>" name="cos" startLine="470" endLine="472" />
          <method type="UnaryFunction<Double>" name="cosh" startLine="475" endLine="477" />
          <method type="BinaryFunction<Double>" name="divide" startLine="480" endLine="482" />
          <method type="UnaryFunction<Double>" name="exp" startLine="485" endLine="487" />
          <method type="UnaryFunction<Double>" name="expm1" startLine="490" endLine="492" />
          <method type="BinaryFunction<Double>" name="hypot" startLine="495" endLine="497" />
          <method type="UnaryFunction<Double>" name="invert" startLine="500" endLine="502" />
          <method type="UnaryFunction<Double>" name="log" startLine="505" endLine="507" />
          <method type="UnaryFunction<Double>" name="log10" startLine="510" endLine="512" />
          <method type="UnaryFunction<Double>" name="log1p" startLine="515" endLine="517" />
          <method type="BinaryFunction<Double>" name="max" startLine="520" endLine="522" />
          <method type="BinaryFunction<Double>" name="min" startLine="525" endLine="527" />
          <method type="BinaryFunction<Double>" name="multiply" startLine="530" endLine="532" />
          <method type="UnaryFunction<Double>" name="negate" startLine="535" endLine="537" />
          <method type="BinaryFunction<Double>" name="pow" startLine="540" endLine="542" />
          <method type="ParameterFunction<Double>" name="power" startLine="545" endLine="547" />
          <method type="ParameterFunction<Double>" name="root" startLine="550" endLine="552" />
          <method type="ParameterFunction<Double>" name="scale" startLine="555" endLine="557" />
          <method type="UnaryFunction<Double>" name="signum" startLine="560" endLine="562" />
          <method type="UnaryFunction<Double>" name="sin" startLine="565" endLine="567" />
          <method type="UnaryFunction<Double>" name="sinh" startLine="570" endLine="572" />
          <method type="UnaryFunction<Double>" name="sqrt" startLine="575" endLine="577" />
          <method type="UnaryFunction<Double>" name="sqrt1px2" startLine="580" endLine="582" />
          <method type="BinaryFunction<Double>" name="subtract" startLine="585" endLine="587" />
          <method type="UnaryFunction<Double>" name="tan" startLine="590" endLine="592" />
          <method type="UnaryFunction<Double>" name="tanh" startLine="595" endLine="597" />
          <method type="UnaryFunction<Double>" name="value" startLine="600" endLine="602" />
        </class>
      </class>
    </class>
  </class>
</source>
