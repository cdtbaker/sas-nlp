<?xml version="1.0" encoding="UTF-8"?>
<source package="org.ojalgo.finance">
  <import name="static org.ojalgo.constant.PrimitiveMath.*" />
  <import name="java.math.BigDecimal" />
  <import name="java.util.ArrayList" />
  <import name="java.util.Calendar" />
  <import name="java.util.Collection" />
  <import name="java.util.Date" />
  <import name="java.util.Map.Entry" />
  <import name="org.ojalgo.access.Access1D" />
  <import name="org.ojalgo.access.Access2D" />
  <import name="org.ojalgo.access.Access2D.Builder" />
  <import name="org.ojalgo.array.Array1D" />
  <import name="org.ojalgo.array.ArrayUtils" />
  <import name="org.ojalgo.constant.PrimitiveMath" />
  <import name="org.ojalgo.function.PrimitiveFunction" />
  <import name="org.ojalgo.matrix.BasicMatrix" />
  <import name="org.ojalgo.matrix.PrimitiveMatrix" />
  <import name="org.ojalgo.matrix.decomposition.Eigenvalue" />
  <import name="org.ojalgo.matrix.decomposition.EigenvalueDecomposition" />
  <import name="org.ojalgo.matrix.store.MatrixStore" />
  <import name="org.ojalgo.matrix.store.PhysicalStore" />
  <import name="org.ojalgo.random.Deterministic" />
  <import name="org.ojalgo.random.RandomNumber" />
  <import name="org.ojalgo.random.RandomUtils" />
  <import name="org.ojalgo.random.SampleSet" />
  <import name="org.ojalgo.random.process.GeometricBrownianMotion" />
  <import name="org.ojalgo.series.CalendarDateSeries" />
  <import name="org.ojalgo.series.CoordinationSet" />
  <import name="org.ojalgo.type.CalendarDate" />
  <import name="org.ojalgo.type.CalendarDateUnit" />
  <class name="FinanceUtils" startLine="56">
    <method type="double" name="calculateValueAtRisk" startLine="58" endLine="63">
      <declaration type="double" name="tmpConfidenceScale" />
    </method>
    <method type="GeometricBrownianMotion" name="estimateExcessDiffusionProcess" startLine="66" endLine="84">
      <declaration type="SampleSet" name="tmpSampleSet" />
      <declaration type="double" name="tmpStepSize" />
      <declaration type="double" name="tmpExp" />
      <declaration type="double" name="tmpVar" />
      <declaration type="double" name="tmpDiff" />
      <declaration type="double" name="tmpDrift" />
      <declaration type="GeometricBrownianMotion" name="retVal" />
      <comment>The average number of millis between to subsequent keys in the series.</comment>
      <comment>The time between to keys expressed in terms of the specified time meassure and unit.</comment>
    </method>
    <method type="CalendarDateSeries<RandomNumber>" name="forecast" startLine="87" endLine="111">
      <declaration type="CalendarDateSeries<RandomNumber>" name="retVal" />
      <declaration type="double" name="tmpSamplePeriod" />
      <declaration type="GeometricBrownianMotion" name="tmpProcess" />
      <scope startLine="95" endLine="99">
        <scope startLine="96" endLine="98" />
      </scope>
      <declaration type="CalendarDate" name="tmpLastKey" />
      <declaration type="double" name="tmpLastValue" />
      <scope startLine="106" endLine="108" />
    </method>
    <method type="CalendarDateSeries<BigDecimal>" name="makeCalendarPriceSeries" startLine="114" endLine="121">
      <declaration type="CalendarDateSeries<BigDecimal>" name="retVal" />
    </method>
    <javadoc>
      <param>timeSeriesCollection</param>
      <return>Annualised covariances</return>
    </javadoc>
    <method type="BasicMatrix<?>" name="makeCovarianceMatrix" startLine="127" endLine="167">
      <declaration type="CoordinationSet<V>" name="tmpCoordinator" />
      <declaration type="ArrayList<SampleSet>" name="tmpSampleSets" />
      <scope startLine="132" endLine="143">
        <declaration type="double[]" name="someValues" />
        <declaration type="int" name="tmpSize1" />
        <declaration type="double[]" name="retVal" />
        <scope startLine="138" endLine="140" />
        <declaration type="SampleSet" name="tmpMakeUsingLogarithmicChanges" />
      </scope>
      <declaration type="int" name="tmpSize" />
      <declaration type="Access2D.Builder<PrimitiveMatrix>" name="retValStore" />
      <declaration type="double" name="tmpToYearFactor" />
      <declaration type="SampleSet" name="tmpRowSet" />
      <declaration type="SampleSet" name="tmpColSet" />
      <scope startLine="154" endLine="164">
        <scope startLine="158" endLine="163" />
      </scope>
    </method>
    <method type="CalendarDateSeries<BigDecimal>" name="makeDatePriceSeries" startLine="169" endLine="176">
      <declaration type="CalendarDateSeries<BigDecimal>" name="retVal" />
    </method>
    <javadoc>
      <param>aPriceSeries A series of prices</param>
      <param>aRiskFreeInterestRateSeries A series of interest rates (risk free return expressed in %, 5.0 means 5.0%
 * annualized risk free return)</param>
      <return>A sample set of price growth rates adjusted for risk free return</return>
    </javadoc>
    <method type="SampleSet" name="makeExcessGrowthRateSampleSet" startLine="184" endLine="224">
      <scope startLine="186" endLine="188" />
      <scope startLine="190" endLine="192" />
      <scope startLine="194" endLine="196" />
      <declaration type="double[]" name="tmpPrices" />
      <declaration type="double[]" name="tmpRiskFreeInterestRates" />
      <declaration type="Array1D<Double>" name="retVal" />
      <declaration type="CalendarDateUnit" name="tmpUnit" />
      <declaration type="double" name="tmpThisRiskFree" />
      <scope startLine="206" endLine="221" />
    </method>
    <javadoc>
      <param>aPriceSeries A series of prices</param>
      <param>aRiskFreeInterestRateSeries A series of interest rates (risk free return expressed in %, 5.0 means 5.0%
 * annualized risk free return)</param>
      <return>A sample set of price growth rates adjusted for risk free return</return>
    </javadoc>
    <method type="CalendarDateSeries<Double>" name="makeNormalisedExcessPrice" startLine="233" endLine="278">
      <scope startLine="235" endLine="237" />
      <scope startLine="239" endLine="241" />
      <scope startLine="243" endLine="245" />
      <declaration type="long[]" name="tmpDates" />
      <declaration type="double[]" name="tmpPrices" />
      <declaration type="double[]" name="tmpRiskFreeInterestRates" />
      <declaration type="CalendarDateUnit" name="tmpResolution" />
      <declaration type="CalendarDateSeries<Double>" name="retVal" />
      <declaration type="double" name="tmpThisRiskFree" />
      <declaration type="double" name="tmpAggregatedExcessPrice" />
      <scope startLine="259" endLine="275" />
    </method>
    <javadoc>
      <text>* GrowthRate = ln(GrowthFactor)</text>
      <param>growthFactor A growth factor per unit (day, week, month, year...)</param>
      <param>growthFactorUnit A growth factor unit</param>
      <return>Annualised return (percentage per year)</return>
    </javadoc>
    <method type="double" name="toAnnualReturnFromGrowthFactor" startLine="287" endLine="290">
      <declaration type="double" name="tmpGrowthFactorUnitsPerYear" />
    </method>
    <javadoc>
      <text>* AnnualReturn = exp(GrowthRate * GrowthRateUnitsPerYear) - 1.0</text>
      <param>growthRate A growth rate per unit (day, week, month, year...)</param>
      <param>growthRateUnit A growth rate unit</param>
      <return>Annualised return (percentage per year)</return>
    </javadoc>
    <method type="double" name="toAnnualReturnFromGrowthRate" startLine="299" endLine="302">
      <declaration type="double" name="tmpGrowthRateUnitsPerYear" />
    </method>
    <method type="PrimitiveMatrix" name="toAssetVolatilities" startLine="304" endLine="315">
      <declaration type="int" name="tmpSize" />
      <declaration type="Builder<PrimitiveMatrix>" name="retVal" />
      <scope startLine="310" endLine="312" />
    </method>
    <method type="PrimitiveMatrix" name="toCorrelations" startLine="317" endLine="366">
      <declaration type="int" name="tmpSize" />
      <declaration type="Access2D<?>" name="tmpCovariances" />
      <scope startLine="323" endLine="345">
        <declaration type="Eigenvalue<Double>" name="tmpEvD" />
        <declaration type="MatrixStore<Double>" name="tmpV" />
        <declaration type="PhysicalStore<Double>" name="tmpD" />
        <declaration type="double" name="tmpLargest" />
        <declaration type="double" name="tmpLimit" />
        <scope startLine="334" endLine="338">
          <scope startLine="335" endLine="337" />
        </scope>
        <declaration type="MatrixStore<Double>" name="tmpLeft" />
        <declaration type="MatrixStore<Double>" name="tmpMiddle" />
        <declaration type="MatrixStore<Double>" name="tmpRight" />
      </scope>
      <declaration type="Builder<PrimitiveMatrix>" name="retVal" />
      <declaration type="double[]" name="tmpVolatilities" />
      <scope startLine="350" endLine="352" />
      <scope startLine="354" endLine="363">
        <declaration type="double" name="tmpColVol" />
        <scope startLine="357" endLine="362">
          <declaration type="double" name="tmpCovariance" />
          <declaration type="double" name="tmpCorrelation" />
        </scope>
      </scope>
    </method>
    <method type="PrimitiveMatrix" name="toCovariances" startLine="368" endLine="385">
      <declaration type="int" name="tmpSize" />
      <declaration type="Builder<PrimitiveMatrix>" name="retVal" />
      <scope startLine="374" endLine="382">
        <declaration type="double" name="tmpColumnVolatility" />
        <scope startLine="377" endLine="381">
          <declaration type="double" name="tmpCovariance" />
        </scope>
      </scope>
    </method>
    <javadoc>
      <text>* GrowthFactor = exp(GrowthRate)</text>
      <param>annualReturn Annualised return (percentage per year)</param>
      <param>growthFactorUnit A growth factor unit</param>
      <return>A growth factor per unit (day, week, month, year...)</return>
    </javadoc>
    <method type="double" name="toGrowthFactorFromAnnualReturn" startLine="394" endLine="398">
      <declaration type="double" name="tmpAnnualGrowthFactor" />
      <declaration type="double" name="tmpYearsPerGrowthFactorUnit" />
    </method>
    <javadoc>
      <text>* GrowthRate = ln(1.0 + InterestRate) / GrowthRateUnitsPerYear</text>
      <param>annualReturn Annualised return (percentage per year)</param>
      <param>growthRateUnit A growth rate unit</param>
      <return>A growth rate per unit (day, week, month, year...)</return>
    </javadoc>
    <method type="double" name="toGrowthRateFromAnnualReturn" startLine="407" endLine="411">
      <declaration type="double" name="tmpAnnualGrowthRate" />
      <declaration type="double" name="tmpYearsPerGrowthRateUnit" />
    </method>
    <method type="void" name="copyValues" startLine="414" endLine="424">
      <declaration type="CalendarDate" name="tmpKey" />
      <scope startLine="418" endLine="423" />
    </method>
    <method type="constructor" name="FinanceUtils" startLine="426" endLine="428" />
  </class>
</source>
