<?xml version="1.0" encoding="UTF-8"?>
<source package="org.ojalgo.type">
  <import name="java.awt.Color" />
  <import name="java.math.BigDecimal" />
  <import name="java.sql.Date" />
  <import name="java.sql.Time" />
  <import name="java.sql.Timestamp" />
  <import name="java.util.Calendar" />
  <import name="java.util.GregorianCalendar" />
  <import name="org.ojalgo.constant.BigMath" />
  <import name="org.ojalgo.constant.PrimitiveMath" />
  <import name="org.ojalgo.netio.ASCII" />
  <import name="org.ojalgo.scalar.ComplexNumber" />
  <import name="org.ojalgo.scalar.Quaternion" />
  <import name="org.ojalgo.scalar.RationalNumber" />
  <import name="org.ojalgo.scalar.Scalar" />
  <import name="org.ojalgo.type.context.NumberContext" />
  <class name="TypeUtils" startLine="41">
    <declaration type="long" name="HOURS_PER_CENTURY" />
    <declaration type="long" name="MILLIS_PER_HOUR" />
    <declaration type="String" name="HEX" />
    <declaration type="char" name="START" />
    <javadoc>
      <text>* Compatible with slf4j. {} in the message pattern will be replaced by the arguments.</text>
    </javadoc>
    <method type="String" name="format" startLine="52" endLine="83">
      <scope startLine="54" endLine="56" />
      <declaration type="int" name="tmpPatternSize" />
      <declaration type="int" name="tmpArgsCount" />
      <declaration type="int" name="tmpFirst" />
      <declaration type="int" name="tmpLimit" />
      <declaration type="StringBuilder" name="retVal" />
      <scope startLine="66" endLine="78">
        <scope startLine="70" endLine="73" />
        <scope startLine="73" endLine="77" />
      </scope>
    </method>
    <method type="GregorianCalendar" name="getHundredYearsAgo" startLine="85" endLine="92">
      <declaration type="GregorianCalendar" name="retVal" />
    </method>
    <method type="GregorianCalendar" name="getThousandYearsAgo" startLine="94" endLine="101">
      <declaration type="GregorianCalendar" name="retVal" />
    </method>
    <method type="GregorianCalendar" name="getThousandYearsFromNow" startLine="103" endLine="110">
      <declaration type="GregorianCalendar" name="retVal" />
    </method>
    <method type="boolean" name="isZero" startLine="112" endLine="114" />
    <method type="boolean" name="isZero" startLine="116" endLine="118" />
    <method type="Date" name="makeSqlDate" startLine="120" endLine="122" />
    <method type="Time" name="makeSqlTime" startLine="124" endLine="126" />
    <method type="Timestamp" name="makeSqlTimestamp" startLine="128" endLine="130" />
    <javadoc>
      <text>* If the input {@linkplain java.lang.Number} is a {@linkplain java.math.BigDecimal} it is passed through unaltered.
 * Otherwise an equivalent BigDecimal is created.</text>
      <param>number Any Number</param>
      <return>A corresponding BigDecimal</return>
    </javadoc>
    <method type="BigDecimal" name="toBigDecimal" startLine="139" endLine="177">
      <declaration type="BigDecimal" name="retVal" />
      <scope startLine="143" endLine="174">
        <scope startLine="145" endLine="149" />
        <scope startLine="149" endLine="153" />
        <scope startLine="153" endLine="173">
          <scope startLine="155" endLine="159" />
          <scope startLine="159" endLine="172">
            <declaration type="double" name="tmpVal" />
            <scope startLine="163" endLine="165" />
            <scope startLine="165" endLine="167" />
            <scope startLine="167" endLine="169" />
            <scope startLine="169" endLine="171" />
          </scope>
        </scope>
      </scope>
    </method>
    <method type="BigDecimal" name="toBigDecimal" startLine="179" endLine="181" />
    <method type="ComplexNumber" name="toComplexNumber" startLine="183" endLine="200">
      <declaration type="ComplexNumber" name="retVal" />
      <scope startLine="187" endLine="197">
        <scope startLine="189" endLine="193" />
        <scope startLine="193" endLine="196" />
      </scope>
    </method>
    <javadoc>
      <text>* The way colours are specified in html pages.</text>
    </javadoc>
    <method type="String" name="toHexString" startLine="205" endLine="207" />
    <method type="Quaternion" name="toQuaternion" startLine="209" endLine="230">
      <declaration type="Quaternion" name="retVal" />
      <scope startLine="213" endLine="227">
        <scope startLine="215" endLine="219" />
        <scope startLine="219" endLine="223" />
        <scope startLine="223" endLine="226" />
      </scope>
    </method>
    <method type="RationalNumber" name="toRationalNumber" startLine="232" endLine="249">
      <declaration type="RationalNumber" name="retVal" />
      <scope startLine="236" endLine="246">
        <scope startLine="238" endLine="242" />
        <scope startLine="242" endLine="245" />
      </scope>
    </method>
    <method type="boolean" name="isSameDate" startLine="251" endLine="260">
      <declaration type="boolean" name="retVal" />
    </method>
    <method type="boolean" name="isSameTime" startLine="262" endLine="271">
      <declaration type="boolean" name="retVal" />
    </method>
    <method type="constructor" name="TypeUtils" startLine="273" endLine="275" />
    <comment>365.2425 * 24 * 100 = 876582)</comment>
  </class>
</source>
