<?xml version="1.0" encoding="UTF-8"?>
<source package="org.ojalgo.array">
  <import name="static org.ojalgo.constant.BigMath.*" />
  <import name="java.math.BigDecimal" />
  <import name="java.util.Arrays" />
  <import name="java.util.Iterator" />
  <import name="org.ojalgo.access.Access1D" />
  <import name="org.ojalgo.access.Iterator1D" />
  <import name="org.ojalgo.scalar.ComplexNumber" />
  <import name="org.ojalgo.scalar.RationalNumber" />
  <import name="org.ojalgo.type.TypeUtils" />
  <class name="SimpleArray" startLine="36">
    <implements name="Access1D<N>" />
    <implements name="Access1D.Fillable<N>" />
    <javadoc>
      <text>* The purpose of (use case for) this class is to provide a minimal class
 * that implements the {@link Access1D} interface and is mutable. Further
 * the user can assume that an ArrayAccess<BigDecimal> instance really
 * is an ArrayAccess.Big instance (and correspondingly for Double,
 * ComplexNumber and RationalNumber). Therefore it is safe to type cast and
 * reference the data attribute. Further this class allows you to,
 * with generics, mix primitive value arrays and object reference arrays.</text>
      <author>apete</author>
    </javadoc>
    <class name="Big" extends="SimpleArray<BigDecimal>" startLine="49">
      <declaration type="BigDecimal[]" name="data" />
      <method type="constructor" name="Big" startLine="53" endLine="58" />
      <method type="constructor" name="Big" startLine="60" endLine="66" />
      <method type="double" name="doubleValue" startLine="68" endLine="70" />
      <method type="void" name="fillAll" startLine="72" endLine="74" />
      <method type="void" name="fillRange" startLine="76" endLine="80">
        <scope startLine="77" endLine="79" />
      </method>
      <method type="BigDecimal" name="get" startLine="82" endLine="84" />
      <method type="BigDecimal" name="set" startLine="86" endLine="90">
        <declaration type="BigDecimal" name="retVal" />
      </method>
      <method type="void" name="set" startLine="92" endLine="94" />
      <method type="void" name="set" startLine="96" endLine="98" />
      <class name="Complex" extends="SimpleArray<ComplexNumber>" startLine="102">
        <declaration type="ComplexNumber[]" name="data" />
        <method type="constructor" name="Complex" startLine="106" endLine="111" />
        <method type="constructor" name="Complex" startLine="113" endLine="119" />
        <method type="double" name="doubleValue" startLine="121" endLine="123" />
        <method type="void" name="fillAll" startLine="125" endLine="127" />
        <method type="void" name="fillRange" startLine="129" endLine="133">
          <scope startLine="130" endLine="132" />
        </method>
        <method type="ComplexNumber" name="get" startLine="135" endLine="137" />
        <method type="ComplexNumber" name="set" startLine="139" endLine="143">
          <declaration type="ComplexNumber" name="retVal" />
        </method>
        <method type="void" name="set" startLine="145" endLine="147" />
        <method type="void" name="set" startLine="149" endLine="151" />
        <class name="Primitive" extends="SimpleArray<Double>" startLine="155">
          <declaration type="double[]" name="data" />
          <method type="constructor" name="Primitive" startLine="159" endLine="164" />
          <method type="constructor" name="Primitive" startLine="166" endLine="171" />
          <method type="double" name="doubleValue" startLine="173" endLine="175" />
          <method type="void" name="fillAll" startLine="177" endLine="179" />
          <method type="void" name="fillRange" startLine="181" endLine="185">
            <scope startLine="182" endLine="184" />
          </method>
          <method type="Double" name="get" startLine="187" endLine="189" />
          <method type="Double" name="set" startLine="191" endLine="195">
            <declaration type="double" name="retVal" />
          </method>
          <method type="void" name="set" startLine="197" endLine="199" />
          <method type="void" name="set" startLine="201" endLine="203" />
          <class name="Rational" extends="SimpleArray<RationalNumber>" startLine="207">
            <declaration type="RationalNumber[]" name="data" />
            <method type="constructor" name="Rational" startLine="211" endLine="217" />
            <method type="constructor" name="Rational" startLine="219" endLine="224" />
            <method type="double" name="doubleValue" startLine="226" endLine="228" />
            <method type="void" name="fillAll" startLine="230" endLine="232" />
            <method type="void" name="fillRange" startLine="234" endLine="238">
              <scope startLine="235" endLine="237" />
            </method>
            <method type="RationalNumber" name="get" startLine="240" endLine="242" />
            <method type="RationalNumber" name="set" startLine="244" endLine="248">
              <declaration type="RationalNumber" name="retVal" />
            </method>
            <method type="void" name="set" startLine="250" endLine="252" />
            <method type="void" name="set" startLine="254" endLine="256" />
            <method type="SimpleArray.Big" name="makeBig" startLine="260" endLine="262" />
            <method type="SimpleArray.Complex" name="makeComplex" startLine="264" endLine="266" />
            <method type="SimpleArray.Primitive" name="makePrimitive" startLine="268" endLine="270" />
            <method type="SimpleArray.Rational" name="makeRational" startLine="272" endLine="274" />
            <method type="SimpleArray.Big" name="wrapBig" startLine="276" endLine="278" />
            <method type="SimpleArray.Complex" name="wrapComplex" startLine="280" endLine="282" />
            <method type="SimpleArray.Primitive" name="wrapPrimitive" startLine="284" endLine="286" />
            <method type="SimpleArray.Rational" name="wrapRational" startLine="288" endLine="290" />
            <declaration type="int" name="length" />
            <method type="constructor" name="SimpleArray" startLine="295" endLine="297" />
            <method type="constructor" name="SimpleArray" startLine="299" endLine="304" />
            <method type="long" name="count" startLine="306" endLine="308" />
            <method type="Iterator<N>" name="iterator" startLine="310" endLine="312" />
            <method type="int" name="size" startLine="314" endLine="316" />
          </class>
        </class>
      </class>
    </class>
  </class>
</source>
