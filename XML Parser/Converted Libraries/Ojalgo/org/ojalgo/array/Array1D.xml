<?xml version="1.0" encoding="UTF-8"?>
<source package="org.ojalgo.array">
  <import name="java.io.Serializable" />
  <import name="java.math.BigDecimal" />
  <import name="java.util.AbstractList" />
  <import name="java.util.Arrays" />
  <import name="java.util.Iterator" />
  <import name="java.util.List" />
  <import name="java.util.RandomAccess" />
  <import name="org.ojalgo.access.Access1D" />
  <import name="org.ojalgo.access.Iterator1D" />
  <import name="org.ojalgo.function.BinaryFunction" />
  <import name="org.ojalgo.function.ParameterFunction" />
  <import name="org.ojalgo.function.UnaryFunction" />
  <import name="org.ojalgo.function.VoidFunction" />
  <import name="org.ojalgo.random.RandomNumber" />
  <import name="org.ojalgo.scalar.ComplexNumber" />
  <import name="org.ojalgo.scalar.RationalNumber" />
  <import name="org.ojalgo.scalar.Scalar" />
  <import name="org.ojalgo.type.TypeUtils" />
  <class name="Array1D" extends="AbstractList<N>" startLine="44">
    <implements name="Access1D<N>" />
    <implements name="Access1D.Elements" />
    <implements name="Access1D.Fillable<N>" />
    <implements name="Access1D.Modifiable<N>" />
    <implements name="Access1D.Visitable<N>" />
    <implements name="RandomAccess" />
    <implements name="Serializable" />
    <javadoc>
      <text>* Array1D</text>
      <author>apete</author>
    </javadoc>
    <interface name="Factory" startLine="52">
      <implements name="Access1D.Factory<Array1D<N>>" />
      <method name="wrap" type="Array1D<N>" startLine="54" endLine="54" />
      <method type="Array1D<BigDecimal>" name="copy" startLine="60" endLine="70">
        <declaration type="int" name="tmpSize" />
        <declaration type="BigDecimal[]" name="tmpArray" />
        <scope startLine="65" endLine="67" />
      </method>
      <method type="Array1D<BigDecimal>" name="copy" startLine="72" endLine="82">
        <declaration type="int" name="tmpSize" />
        <declaration type="BigDecimal[]" name="tmpArray" />
        <scope startLine="77" endLine="79" />
      </method>
      <method type="Array1D<BigDecimal>" name="copy" startLine="84" endLine="94">
        <declaration type="int" name="tmpSize" />
        <declaration type="BigDecimal[]" name="tmpArray" />
        <scope startLine="89" endLine="91" />
      </method>
      <method type="Array1D<BigDecimal>" name="copy" startLine="96" endLine="106">
        <declaration type="int" name="tmpSize" />
        <declaration type="BigDecimal[]" name="tmpArray" />
        <scope startLine="101" endLine="103" />
      </method>
      <method type="Array1D<BigDecimal>" name="makeRandom" startLine="108" endLine="116">
        <declaration type="BigDecimal[]" name="tmpArray" />
        <scope startLine="111" endLine="113" />
      </method>
      <method type="Array1D<BigDecimal>" name="makeZero" startLine="118" endLine="120" />
      <method type="Array1D<BigDecimal>" name="wrap" startLine="122" endLine="124" />
      <declaration type="Array1D.Factory<BigDecimal>" name="BIG" />
      <method type="Array1D<ComplexNumber>" name="copy" startLine="130" endLine="140">
        <declaration type="int" name="tmpSize" />
        <declaration type="ComplexNumber[]" name="tmpArray" />
        <scope startLine="135" endLine="137" />
      </method>
      <method type="Array1D<ComplexNumber>" name="copy" startLine="142" endLine="152">
        <declaration type="int" name="tmpSize" />
        <declaration type="ComplexNumber[]" name="tmpArray" />
        <scope startLine="147" endLine="149" />
      </method>
      <method type="Array1D<ComplexNumber>" name="copy" startLine="154" endLine="164">
        <declaration type="int" name="tmpSize" />
        <declaration type="ComplexNumber[]" name="tmpArray" />
        <scope startLine="159" endLine="161" />
      </method>
      <method type="Array1D<ComplexNumber>" name="copy" startLine="166" endLine="176">
        <declaration type="int" name="tmpSize" />
        <declaration type="ComplexNumber[]" name="tmpArray" />
        <scope startLine="171" endLine="173" />
      </method>
      <method type="Array1D<ComplexNumber>" name="makeRandom" startLine="178" endLine="186">
        <declaration type="ComplexNumber[]" name="tmpArray" />
        <scope startLine="181" endLine="183" />
      </method>
      <method type="Array1D<ComplexNumber>" name="makeZero" startLine="188" endLine="190" />
      <method type="Array1D<ComplexNumber>" name="wrap" startLine="192" endLine="194" />
      <declaration type="Array1D.Factory<ComplexNumber>" name="COMPLEX" />
      <method type="Array1D<Double>" name="copy" startLine="200" endLine="210">
        <declaration type="int" name="tmpSize" />
        <declaration type="double[]" name="tmpArray" />
        <scope startLine="205" endLine="207" />
      </method>
      <method type="Array1D<Double>" name="copy" startLine="212" endLine="214" />
      <method type="Array1D<Double>" name="copy" startLine="216" endLine="226">
        <declaration type="int" name="tmpSize" />
        <declaration type="double[]" name="tmpArray" />
        <scope startLine="221" endLine="223" />
      </method>
      <method type="Array1D<Double>" name="copy" startLine="228" endLine="238">
        <declaration type="int" name="tmpSize" />
        <declaration type="double[]" name="tmpArray" />
        <scope startLine="233" endLine="235" />
      </method>
      <method type="Array1D<Double>" name="makeRandom" startLine="240" endLine="248">
        <declaration type="double[]" name="tmpArray" />
        <scope startLine="243" endLine="245" />
      </method>
      <method type="Array1D<Double>" name="makeZero" startLine="250" endLine="252" />
      <method type="Array1D<Double>" name="wrap" startLine="254" endLine="256" />
      <declaration type="Array1D.Factory<Double>" name="PRIMITIVE" />
      <method type="Array1D<RationalNumber>" name="copy" startLine="262" endLine="272">
        <declaration type="int" name="tmpSize" />
        <declaration type="RationalNumber[]" name="tmpArray" />
        <scope startLine="267" endLine="269" />
      </method>
      <method type="Array1D<RationalNumber>" name="copy" startLine="274" endLine="284">
        <declaration type="int" name="tmpSize" />
        <declaration type="RationalNumber[]" name="tmpArray" />
        <scope startLine="279" endLine="281" />
      </method>
      <method type="Array1D<RationalNumber>" name="copy" startLine="286" endLine="296">
        <declaration type="int" name="tmpSize" />
        <declaration type="RationalNumber[]" name="tmpArray" />
        <scope startLine="291" endLine="293" />
      </method>
      <method type="Array1D<RationalNumber>" name="copy" startLine="298" endLine="308">
        <declaration type="int" name="tmpSize" />
        <declaration type="RationalNumber[]" name="tmpArray" />
        <scope startLine="303" endLine="305" />
      </method>
      <method type="Array1D<RationalNumber>" name="makeRandom" startLine="310" endLine="318">
        <declaration type="RationalNumber[]" name="tmpArray" />
        <scope startLine="313" endLine="315" />
      </method>
      <method type="Array1D<RationalNumber>" name="makeZero" startLine="320" endLine="322" />
      <method type="Array1D<RationalNumber>" name="wrap" startLine="324" endLine="326" />
      <declaration type="Array1D.Factory<RationalNumber>" name="RATIONAL" />
      <method type="T[]" name="copyAndSort" startLine="331" endLine="343">
        <declaration type="int" name="tmpLength" />
        <declaration type="T[][]" name="retVal" />
        <scope startLine="336" endLine="338" />
      </method>
      <declaration type="int" name="length" />
      <declaration type="BasicArray<N>" name="myDelegate" />
      <declaration type="int" name="myFirst" />
      <declaration type="int" name="myLimit" />
      <declaration type="int" name="myStep" />
      <method type="constructor" name="Array1D" startLine="354" endLine="356" />
      <method type="constructor" name="Array1D" startLine="358" endLine="360" />
      <method type="constructor" name="Array1D" startLine="362" endLine="373" />
      <method type="boolean" name="contains" startLine="376" endLine="378" />
      <method type="Array1D<N>" name="copy" startLine="381" endLine="419">
        <declaration type="BasicArray<N>" name="retVal" />
        <scope startLine="385" endLine="395">
          <scope startLine="389" endLine="391" />
        </scope>
        <scope startLine="395" endLine="405">
          <scope startLine="399" endLine="401" />
        </scope>
        <scope startLine="405" endLine="415">
          <scope startLine="409" endLine="411" />
        </scope>
        <scope startLine="415" endLine="418" />
      </method>
      <javadoc>
        <text>* Creates a copy of this containing only the selected elements, in the specified order.</text>
      </javadoc>
      <method type="Array1D<N>" name="copy" startLine="425" endLine="465">
        <declaration type="BasicArray<N>" name="retVal" />
        <declaration type="int" name="tmpLength" />
        <scope startLine="431" endLine="441">
          <scope startLine="435" endLine="437" />
        </scope>
        <scope startLine="441" endLine="451">
          <scope startLine="445" endLine="447" />
        </scope>
        <scope startLine="451" endLine="461">
          <scope startLine="455" endLine="457" />
        </scope>
        <scope startLine="461" endLine="464" />
      </method>
      <method type="long" name="count" startLine="467" endLine="469" />
      <method type="double" name="doubleValue" startLine="471" endLine="473" />
      <method type="void" name="fillAll" startLine="475" endLine="477" />
      <method type="void" name="fillRange" startLine="479" endLine="483">
        <declaration type="int" name="tmpFirst" />
        <declaration type="int" name="tmpLimit" />
      </method>
      <method type="N" name="get" startLine="486" endLine="488" />
      <method type="N" name="get" startLine="490" endLine="492" />
      <method type="int" name="getIndexOfLargestInRange" startLine="494" endLine="496" />
      <method type="int" name="indexOf" startLine="499" endLine="515">
        <declaration type="int" name="tmpLength" />
        <scope startLine="501" endLine="507">
          <scope startLine="502" endLine="506">
            <scope startLine="503" endLine="505" />
          </scope>
        </scope>
        <scope startLine="507" endLine="513">
          <scope startLine="508" endLine="512">
            <scope startLine="509" endLine="511" />
          </scope>
        </scope>
      </method>
      <javadoc>
        <see>Scalar#isAbsolute()</see>
      </javadoc>
      <method type="boolean" name="isAbsolute" startLine="520" endLine="522" />
      <method type="boolean" name="isAllZeros" startLine="524" endLine="526" />
      <method type="boolean" name="isEmpty" startLine="529" endLine="531" />
      <method type="boolean" name="isInfinite" startLine="533" endLine="535" />
      <method type="boolean" name="isNaN" startLine="537" endLine="539" />
      <javadoc>
        <see>Scalar#isPositive()</see>
      </javadoc>
      <method type="boolean" name="isPositive" startLine="544" endLine="546" />
      <method type="boolean" name="isRangeZeros" startLine="548" endLine="550" />
      <javadoc>
        <see>Scalar#isReal()</see>
      </javadoc>
      <method type="boolean" name="isReal" startLine="555" endLine="557" />
      <method type="boolean" name="isReal" startLine="559" endLine="561" />
      <javadoc>
        <see>Scalar#isZero()</see>
      </javadoc>
      <method type="boolean" name="isZero" startLine="566" endLine="568" />
      <method type="boolean" name="isZero" startLine="570" endLine="572" />
      <method type="Iterator<N>" name="iterator" startLine="575" endLine="577" />
      <javadoc>
        <deprecated>v35 Use {@link #modifyAll(UnaryFunction)} instead</deprecated>
      </javadoc>
      <method type="void" name="modifyAll" startLine="583" endLine="585" />
      <javadoc>
        <deprecated>v35 Use {@link #modifyAll(UnaryFunction)} instead</deprecated>
      </javadoc>
      <method type="void" name="modifyAll" startLine="591" endLine="593" />
      <javadoc>
        <deprecated>v35 Use {@link #modifyAll(UnaryFunction)} instead</deprecated>
      </javadoc>
      <method type="void" name="modifyAll" startLine="599" endLine="601" />
      <method type="void" name="modifyAll" startLine="603" endLine="605" />
      <method type="void" name="modifyMatching" startLine="607" endLine="618">
        <declaration type="int" name="tmpLength" />
        <scope startLine="609" endLine="613">
          <scope startLine="610" endLine="612" />
        </scope>
        <scope startLine="613" endLine="617">
          <scope startLine="614" endLine="616" />
        </scope>
      </method>
      <method type="void" name="modifyMatching" startLine="620" endLine="631">
        <declaration type="int" name="tmpLength" />
        <scope startLine="622" endLine="626">
          <scope startLine="623" endLine="625" />
        </scope>
        <scope startLine="626" endLine="630">
          <scope startLine="627" endLine="629" />
        </scope>
      </method>
      <javadoc>
        <deprecated>v35 Use {@link #modifyRange(long,long,UnaryFunction)} instead</deprecated>
      </javadoc>
      <method type="void" name="modifyRange" startLine="637" endLine="639" />
      <javadoc>
        <deprecated>v35 Use {@link #modifyRange(long,long,UnaryFunction)} instead</deprecated>
      </javadoc>
      <method type="void" name="modifyRange" startLine="645" endLine="647" />
      <javadoc>
        <deprecated>v35 Use {@link #modifyRange(long,long,UnaryFunction)} instead</deprecated>
      </javadoc>
      <method type="void" name="modifyRange" startLine="653" endLine="655" />
      <method type="void" name="modifyRange" startLine="657" endLine="661">
        <declaration type="int" name="tmpFirst" />
        <declaration type="int" name="tmpLimit" />
      </method>
      <javadoc>
        <text>* Assumes you have first called {@linkplain #sortAscending()}.</text>
      </javadoc>
      <method type="int" name="searchAscending" startLine="666" endLine="682">
        <declaration type="int" name="tmpLength" />
        <scope startLine="669" endLine="679">
          <declaration type="Number[]" name="tmpArray" />
          <scope startLine="673" endLine="675" />
        </scope>
        <scope startLine="679" endLine="681" />
      </method>
      <javadoc>
        <text>* Asssumes you have first called {@linkplain #sortDescending()}.</text>
      </javadoc>
      <method type="int" name="searchDescending" startLine="687" endLine="705">
        <declaration type="int" name="tmpLength" />
        <declaration type="Number[]" name="tmpArray" />
        <scope startLine="692" endLine="694" />
        <declaration type="int" name="tmpInd" />
        <scope startLine="698" endLine="700" />
        <scope startLine="700" endLine="702" />
        <scope startLine="702" endLine="704" />
      </method>
      <method type="N" name="set" startLine="708" endLine="710" />
      <method type="void" name="set" startLine="712" endLine="714" />
      <method type="void" name="set" startLine="716" endLine="718" />
      <method type="int" name="size" startLine="721" endLine="723" />
      <method type="void" name="sortAscending" startLine="725" endLine="738">
        <declaration type="int" name="tmpLength" />
        <scope startLine="728" endLine="735">
          <declaration type="N[]" name="tmpArray" />
          <scope startLine="732" endLine="734" />
        </scope>
        <scope startLine="735" endLine="737" />
      </method>
      <method type="void" name="sortDescending" startLine="740" endLine="748">
        <declaration type="N[]" name="tmpArray" />
        <declaration type="int" name="tmpLength" />
        <scope startLine="745" endLine="747" />
      </method>
      <method type="Array1D<N>" name="subList" startLine="751" endLine="753" />
      <method type="double[]" name="toRawCopy" startLine="755" endLine="765">
        <declaration type="int" name="tmpLength" />
        <declaration type="double[]" name="retVal" />
        <scope startLine="760" endLine="762" />
      </method>
      <method type="Scalar<N>" name="toScalar" startLine="767" endLine="769" />
      <method type="void" name="visitAll" startLine="771" endLine="773" />
      <method type="void" name="visitRange" startLine="775" endLine="779">
        <declaration type="int" name="tmpFirst" />
        <declaration type="int" name="tmpLimit" />
      </method>
      <method type="BasicArray<N>" name="getDelegate" startLine="781" endLine="783" />
    </interface>
  </class>
</source>
