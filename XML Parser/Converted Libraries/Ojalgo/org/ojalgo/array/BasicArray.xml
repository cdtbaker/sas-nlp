<?xml version="1.0" encoding="UTF-8"?>
<source package="org.ojalgo.array">
  <import name="java.io.Serializable" />
  <import name="java.util.Iterator" />
  <import name="java.util.RandomAccess" />
  <import name="org.ojalgo.access.Access1D" />
  <import name="org.ojalgo.access.Iterator1D" />
  <import name="org.ojalgo.function.BinaryFunction" />
  <import name="org.ojalgo.function.ParameterFunction" />
  <import name="org.ojalgo.function.UnaryFunction" />
  <import name="org.ojalgo.function.VoidFunction" />
  <import name="org.ojalgo.netio.ASCII" />
  <import name="org.ojalgo.scalar.Scalar" />
  <class name="BasicArray" startLine="37">
    <implements name="Access1D<N>" />
    <implements name="Access1D.Elements" />
    <implements name="Access1D.Fillable<N>" />
    <implements name="Access1D.Modifiable<N>" />
    <implements name="Access1D.Visitable<N>" />
    <implements name="RandomAccess" />
    <implements name="Serializable" />
    <javadoc>
      <text>* <p>
 * A BasicArray is one-dimensional, but designed to easily be extended or encapsulated, and then treated as
 * arbitrary-dimensional. It stores/handles (any subclass of) {@linkplain java.lang.Number} elements depending on the
 * subclass/implementation.
 * </p>
 * <p>
 * This abstract class defines a set of methods to access and modify array elements. It does not "know" anything about
 * linear algebra or similar.
 * </p></text>
      <author>apete</author>
    </javadoc>
    <declaration type="int" name="length" />
    <method type="constructor" name="BasicArray" startLine="56" endLine="58" />
    <method type="constructor" name="BasicArray" startLine="60" endLine="65" />
    <method type="long" name="count" startLine="67" endLine="69" />
    <method type="Iterator<N>" name="iterator" startLine="71" endLine="73" />
    <method type="void" name="modifyAll" startLine="75" endLine="77" />
    <method type="void" name="modifyRange" startLine="79" endLine="81" />
    <method type="int" name="size" startLine="83" endLine="85" />
    <method type="String" name="toString" startLine="88" endLine="107">
      <declaration type="StringBuilder" name="retVal" />
      <declaration type="int" name="tmpLength" />
      <scope startLine="95" endLine="103">
        <scope startLine="97" endLine="101" />
      </scope>
    </method>
    <method type="void" name="visitAll" startLine="109" endLine="111" />
    <method type="void" name="visitRange" startLine="113" endLine="115" />
    <javadoc>
      <text>* <p>
 * A utility facade that conveniently/consistently presents the {@linkplain org.ojalgo.array.BasicArray} as a
 * one-dimensional array. Note that you will modify the actual array by accessing it through this facade.
 * </p>
 * <p>
 * Disregards the array structure, and simply treats it as one-domensional.
 * </p></text>
    </javadoc>
    <method type="Array1D<N>" name="asArray1D" startLine="126" endLine="128" />
    <javadoc>
      <text>* <p>
 * A utility facade that conveniently/consistently presents the {@linkplain org.ojalgo.array.BasicArray} as a
 * two-dimensional array. Note that you will modify the actual array by accessing it through this facade.
 * </p>
 * <p>
 * If "this" has more than two dimensions then only the first plane of the first cube of the first... is
 * used/accessed. If this only has one dimension then everything is assumed to be in the first column of the first
 * plane of the first cube...
 * </p></text>
    </javadoc>
    <method type="Array2D<N>" name="asArray2D" startLine="141" endLine="143" />
    <javadoc>
      <text>* <p>
 * A utility facade that conveniently/consistently presents the {@linkplain org.ojalgo.array.BasicArray} as a
 * multi-dimensional array. Note that you will modify the actual array by accessing it through this facade.
 * </p></text>
    </javadoc>
    <method type="ArrayAnyD<N>" name="asArrayAnyD" startLine="151" endLine="153" />
    <javadoc>
      <text>* <p>
 * A utility facade that conveniently/consistently presents the {@linkplain org.ojalgo.array.BasicArray} as a
 * multi-dimensional array. Note that you will modify the actual array by accessing it through this facade.
 * </p></text>
    </javadoc>
    <method type="ArrayAnyD<N>" name="asArrayAnyD" startLine="161" endLine="167">
      <declaration type="int[]" name="tmpStructure" />
      <scope startLine="163" endLine="165" />
    </method>
    <method name="exchange" type="void" startLine="169" endLine="169" />
    <method name="fill" type="void" startLine="171" endLine="171" />
    <method name="fill" type="void" startLine="173" endLine="173" />
    <method name="fill" type="void" startLine="175" endLine="175" />
    <method name="fill" type="void" startLine="177" endLine="177" />
    <method name="fill" type="void" startLine="179" endLine="179" />
    <method name="getIndexOfLargest" type="int" startLine="181" endLine="181" />
    <method name="isReal" type="boolean" startLine="183" endLine="186" />
    <javadoc>
      <see>Scalar#isReal()</see>
    </javadoc>
    <method name="isZero" type="boolean" startLine="188" endLine="191" />
    <javadoc>
      <see>Scalar#isZero()</see>
    </javadoc>
    <method name="isZeros" type="boolean" startLine="193" endLine="193" />
    <method name="modify" type="void" startLine="195" endLine="195" />
    <method name="modify" type="void" startLine="197" endLine="197" />
    <method name="modify" type="void" startLine="199" endLine="199" />
    <method name="modify" type="void" startLine="201" endLine="201" />
    <method name="modify" type="void" startLine="203" endLine="203" />
    <method name="modify" type="void" startLine="205" endLine="205" />
    <method name="searchAscending" type="int" startLine="207" endLine="212" />
    <javadoc>
      <see>java.util.Arrays#binarySearch(Object[],Object)</see>
      <see>#sortAscending()</see>
      <throws>UnsupportedOperationException if the this operation is not supported by this implementation/subclass</throws>
    </javadoc>
    <method name="sortAscending" type="void" startLine="214" endLine="219" />
    <javadoc>
      <see>java.util.Arrays#sort(Object[])</see>
      <see>#searchAscending(Number)</see>
      <throws>UnsupportedOperationException if the this operation is not supported by this implementation/subclass</throws>
    </javadoc>
    <method name="toScalar" type="Scalar<N>" startLine="221" endLine="221" />
    <method name="visit" type="void" startLine="223" endLine="223" />
  </class>
</source>
