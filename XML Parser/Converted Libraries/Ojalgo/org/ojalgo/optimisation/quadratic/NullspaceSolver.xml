<?xml version="1.0" encoding="UTF-8"?>
<source package="org.ojalgo.optimisation.quadratic">
  <import name="org.ojalgo.function.PrimitiveFunction" />
  <import name="org.ojalgo.function.aggregator.Aggregator" />
  <import name="org.ojalgo.function.aggregator.AggregatorFunction" />
  <import name="org.ojalgo.matrix.decomposition.QR" />
  <import name="org.ojalgo.matrix.decomposition.QRDecomposition" />
  <import name="org.ojalgo.matrix.decomposition.SingularValue" />
  <import name="org.ojalgo.matrix.decomposition.SingularValueDecomposition" />
  <import name="org.ojalgo.matrix.store.MatrixStore" />
  <import name="org.ojalgo.matrix.store.PhysicalStore" />
  <import name="org.ojalgo.matrix.store.PrimitiveDenseStore" />
  <import name="org.ojalgo.optimisation.ExpressionsBasedModel" />
  <class name="NullspaceSolver" extends="QuadraticSolver" startLine="36">
    <method type="constructor" name="NullspaceSolver" startLine="38" endLine="40" />
    <method type="boolean" name="initialise" startLine="43" endLine="45" />
    <method type="boolean" name="needsAnotherIteration" startLine="48" endLine="50" />
    <method type="void" name="performIteration" startLine="53" endLine="140">
      <declaration type="MatrixStore<Double>" name="tmpQ" />
      <declaration type="MatrixStore<Double>" name="tmpC" />
      <declaration type="MatrixStore<Double>" name="tmpAE" />
      <declaration type="MatrixStore<Double>" name="tmpBE" />
      <declaration type="QR<Double>" name="tmpQR" />
      <declaration type="MatrixStore<Double>" name="tmpQRQ1" />
      <declaration type="MatrixStore<Double>" name="tmpQRQ2" />
      <declaration type="MatrixStore<Double>" name="tmpQRR1" />
      <declaration type="SingularValue<Double>" name="tmpFeasibleQR" />
      <declaration type="MatrixStore<Double>" name="tmpFeasibleAE" />
      <declaration type="MatrixStore<Double>" name="tmpShouldBeBE" />
      <scope startLine="78" endLine="82">
        <comment>Check if feasible solution possible</comment>
        <comment>setState(State.INFEASIBLE);</comment>
        <comment>return;</comment>
      </scope>
      <declaration type="MatrixStore<Double>" name="tmpNullspaceAE" />
      <scope startLine="85" endLine="129">
        <declaration type="MatrixStore<Double>" name="tmpSubAE" />
        <declaration type="PhysicalStore<Double>" name="tmpCopy" />
        <declaration type="MatrixStore<Double>" name="tmpSubBE" />
        <declaration type="QR<Double>" name="tmpSubQR" />
        <scope startLine="97" endLine="123">
          <declaration type="PhysicalStore<Double>" name="tmpSubX" />
          <declaration type="AggregatorFunction<Double>" name="tmpNorm" />
          <scope startLine="105" endLine="116">
            <declaration type="PhysicalStore<Double>" name="tmpX" />
            <declaration type="MatrixStore<Double>" name="tmpDiffX" />
            <scope startLine="111" endLine="114" />
          </scope>
          <scope startLine="116" endLine="121" />
        </scope>
        <scope startLine="123" endLine="127" />
      </scope>
      <scope startLine="129" endLine="133" />
      <scope startLine="135" endLine="139">
        <declaration type="PhysicalStore<Double>" name="tmpLE" />
      </scope>
    </method>
    <method type="boolean" name="validate" startLine="143" endLine="149">
      <declaration type="boolean" name="retVal" />
    </method>
  </class>
</source>
