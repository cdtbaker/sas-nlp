<?xml version="1.0" encoding="UTF-8"?>
<source package="org.ojalgo.optimisation.linear">
  <import name="static org.ojalgo.constant.PrimitiveMath.*" />
  <import name="java.util.List" />
  <import name="java.util.Set" />
  <import name="org.ojalgo.matrix.MatrixUtils" />
  <import name="org.ojalgo.matrix.store.MatrixStore" />
  <import name="org.ojalgo.matrix.store.PhysicalStore" />
  <import name="org.ojalgo.matrix.store.PhysicalStore.Factory" />
  <import name="org.ojalgo.matrix.store.PrimitiveDenseStore" />
  <import name="org.ojalgo.matrix.store.ZeroStore" />
  <import name="org.ojalgo.optimisation.BaseSolver" />
  <import name="org.ojalgo.optimisation.Expression" />
  <import name="org.ojalgo.optimisation.Expression.Index" />
  <import name="org.ojalgo.optimisation.ExpressionsBasedModel" />
  <import name="org.ojalgo.optimisation.Optimisation" />
  <import name="org.ojalgo.optimisation.Variable" />
  <import name="org.ojalgo.type.IndexSelector" />
  <class name="LinearSolver" extends="BaseSolver" startLine="43">
    <javadoc>
      <text>* LinearSolver solves optimisation problems of the (LP standard) form:
 * <p>
 * min [C]<sup>T</sup>[X]<br>
 * when [AE][X] == [BE]<br>
 * and 0 <= [X]<br>
 * and 0 <= [BE]
 * </p>
 * A Linear Program is in Standard Form if:
 * <ul>
 * <li>All constraints are equality constraints.</li>
 * <li>All variables have a nonnegativity sign restriction.</li>
 * </ul>
 * <p>
 * Further it is required here that the constraint right hand sides are
 * nonnegative (nonnegative elements in [BE]).
 * </p><p>
 * You construct instances by using the {@linkplain Builder} class. It
 * will return an appropriate subclass for you. It's recommended that
 * you first create a {@linkplain ExpressionsBasedModel} and feed that to the{@linkplain Builder}. Alternatively you can directly call{@linkplain ExpressionsBasedModel#getDefaultSolver()} or even{@linkplain ExpressionsBasedModel#minimise()} or{@linkplain ExpressionsBasedModel#maximise()} on the model.
 * </p></text>
      <author>apete</author>
    </javadoc>
    <class name="Builder" extends="AbstractBuilder<LinearSolver.Builder,LinearSolver>" startLine="73">
      <method type="constructor" name="Builder" startLine="75" endLine="79" />
      <method type="constructor" name="Builder" startLine="81" endLine="85" />
      <method type="constructor" name="Builder" startLine="87" endLine="91" />
      <method type="constructor" name="Builder" startLine="93" endLine="98" />
      <method type="constructor" name="Builder" startLine="100" endLine="104" />
      <method type="constructor" name="Builder" startLine="106" endLine="110" />
      <method type="LinearSolver" name="build" startLine="113" endLine="118">
        <declaration type="ExpressionsBasedModel" name="tmpModel" />
      </method>
      <method type="Builder" name="equalities" startLine="121" endLine="123" />
      <method type="Builder" name="objective" startLine="126" endLine="128" />
      <declaration type="Factory<Double,PrimitiveDenseStore>" name="FACTORY" />
      <method type="LinearSolver" name="make" startLine="133" endLine="138">
        <declaration type="LinearSolver.Builder" name="tmpBuilder" />
      </method>
      <method type="void" name="copy" startLine="140" endLine="452">
        <declaration type="boolean" name="tmpMaximisation" />
        <declaration type="List<Variable>" name="tmpPosVariables" />
        <declaration type="List<Variable>" name="tmpNegVariables" />
        <declaration type="Set<Index>" name="tmpFixVariables" />
        <declaration type="Expression" name="tmpObjFunc" />
        <declaration type="List<Expression>" name="tmpExprsEq" />
        <declaration type="List<Expression>" name="tmpExprsLo" />
        <declaration type="List<Expression>" name="tmpExprsUp" />
        <declaration type="List<Variable>" name="tmpVarsPosLo" />
        <declaration type="List<Variable>" name="tmpVarsPosUp" />
        <declaration type="List<Variable>" name="tmpVarsNegLo" />
        <declaration type="List<Variable>" name="tmpVarsNegUp" />
        <declaration type="int" name="tmpConstraiCount" />
        <declaration type="int" name="tmpProblVarCount" />
        <declaration type="int" name="tmpSlackVarCount" />
        <declaration type="int" name="tmpTotalVarCount" />
        <declaration type="int[]" name="tmpBasis" />
        <declaration type="Optimisation.Result" name="tmpKickStarter" />
        <declaration type="PhysicalStore<Double>" name="tmpC" />
        <declaration type="PhysicalStore<Double>" name="tmpAE" />
        <declaration type="PhysicalStore<Double>" name="tmpBE" />
        <declaration type="int" name="tmpPosVarsBaseIndex" />
        <declaration type="int" name="tmpNegVarsBaseIndex" />
        <declaration type="int" name="tmpSlaVarsBaseIndex" />
        <scope startLine="184" endLine="197">
          <declaration type="double" name="tmpFactor" />
          <declaration type="int" name="tmpPosInd" />
          <scope startLine="189" endLine="191" />
          <declaration type="int" name="tmpNegInd" />
          <scope startLine="194" endLine="196" />
        </scope>
        <declaration type="int" name="tmpConstrBaseIndex" />
        <declaration type="int" name="tmpCurrentSlackVarIndex" />
        <declaration type="int" name="tmpExprsEqLength" />
        <scope startLine="203" endLine="246">
          <declaration type="Expression" name="tmpExpr" />
          <declaration type="double" name="tmpRHS" />
          <scope startLine="208" endLine="227">
            <scope startLine="212" endLine="225">
              <declaration type="double" name="tmpFactor" />
              <declaration type="int" name="tmpPosInd" />
              <scope startLine="217" endLine="219" />
              <declaration type="int" name="tmpNegInd" />
              <scope startLine="222" endLine="224" />
            </scope>
          </scope>
          <scope startLine="227" endLine="245">
            <scope startLine="231" endLine="244">
              <declaration type="double" name="tmpFactor" />
              <declaration type="int" name="tmpPosInd" />
              <scope startLine="236" endLine="238" />
              <declaration type="int" name="tmpNegInd" />
              <scope startLine="241" endLine="243" />
            </scope>
          </scope>
        </scope>
        <declaration type="int" name="tmpExprsLoLength" />
        <scope startLine="250" endLine="296">
          <declaration type="Expression" name="tmpExpr" />
          <declaration type="double" name="tmpRHS" />
          <scope startLine="255" endLine="276">
            <scope startLine="261" endLine="274">
              <declaration type="double" name="tmpFactor" />
              <declaration type="int" name="tmpPosInd" />
              <scope startLine="266" endLine="268" />
              <declaration type="int" name="tmpNegInd" />
              <scope startLine="271" endLine="273" />
            </scope>
          </scope>
          <scope startLine="276" endLine="295">
            <scope startLine="281" endLine="294">
              <declaration type="double" name="tmpFactor" />
              <declaration type="int" name="tmpPosInd" />
              <scope startLine="286" endLine="288" />
              <declaration type="int" name="tmpNegInd" />
              <scope startLine="291" endLine="293" />
            </scope>
          </scope>
        </scope>
        <declaration type="int" name="tmpExprsUpLength" />
        <scope startLine="300" endLine="346">
          <declaration type="Expression" name="tmpExpr" />
          <declaration type="double" name="tmpRHS" />
          <scope startLine="305" endLine="325">
            <scope startLine="310" endLine="323">
              <declaration type="double" name="tmpFactor" />
              <declaration type="int" name="tmpPosInd" />
              <scope startLine="315" endLine="317" />
              <declaration type="int" name="tmpNegInd" />
              <scope startLine="320" endLine="322" />
            </scope>
          </scope>
          <scope startLine="325" endLine="345">
            <scope startLine="331" endLine="344">
              <declaration type="double" name="tmpFactor" />
              <declaration type="int" name="tmpPosInd" />
              <scope startLine="336" endLine="338" />
              <declaration type="int" name="tmpNegInd" />
              <scope startLine="341" endLine="343" />
            </scope>
          </scope>
        </scope>
        <declaration type="int" name="tmpVarsPosLoLength" />
        <scope startLine="350" endLine="371">
          <declaration type="Variable" name="tmpVar" />
          <declaration type="int" name="tmpKey" />
          <declaration type="double" name="tmpFactor" />
          <declaration type="int" name="tmpPosInd" />
          <scope startLine="362" endLine="364" />
          <declaration type="int" name="tmpNegInd" />
          <scope startLine="367" endLine="369" />
        </scope>
        <declaration type="int" name="tmpVarsPosUpLength" />
        <scope startLine="375" endLine="397">
          <declaration type="Variable" name="tmpVar" />
          <declaration type="int" name="tmpKey" />
          <declaration type="double" name="tmpFactor" />
          <declaration type="int" name="tmpPosInd" />
          <scope startLine="388" endLine="390" />
          <declaration type="int" name="tmpNegInd" />
          <scope startLine="393" endLine="395" />
        </scope>
        <declaration type="int" name="tmpVarsNegLoLength" />
        <scope startLine="401" endLine="423">
          <declaration type="Variable" name="tmpVar" />
          <declaration type="int" name="tmpKey" />
          <declaration type="double" name="tmpFactor" />
          <declaration type="int" name="tmpPosInd" />
          <scope startLine="414" endLine="416" />
          <declaration type="int" name="tmpNegInd" />
          <scope startLine="419" endLine="421" />
        </scope>
        <declaration type="int" name="tmpVarsNegUpLength" />
        <scope startLine="427" endLine="448">
          <declaration type="Variable" name="tmpVar" />
          <declaration type="int" name="tmpKey" />
          <declaration type="double" name="tmpFactor" />
          <declaration type="int" name="tmpPosInd" />
          <scope startLine="439" endLine="441" />
          <declaration type="int" name="tmpNegInd" />
          <scope startLine="444" endLine="446" />
        </scope>
      </method>
      <declaration type="IndexSelector" name="mySelector" />
      <method type="constructor" name="LinearSolver" startLine="457" endLine="462" />
      <method type="int" name="countBasisDeficit" startLine="464" endLine="466" />
      <method type="int" name="countConstraints" startLine="468" endLine="470" />
      <method type="void" name="exclude" startLine="472" endLine="474" />
      <method type="void" name="excludeAll" startLine="476" endLine="478" />
      <method type="int[]" name="getExcluded" startLine="480" endLine="482" />
      <method type="int[]" name="getIncluded" startLine="484" endLine="486" />
      <method type="boolean" name="hasConstraints" startLine="488" endLine="490" />
      <method type="void" name="include" startLine="492" endLine="494" />
      <method type="void" name="include" startLine="496" endLine="498" />
    </class>
  </class>
</source>
