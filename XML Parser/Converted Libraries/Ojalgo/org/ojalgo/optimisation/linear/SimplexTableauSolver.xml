<?xml version="1.0" encoding="UTF-8"?>
<source package="org.ojalgo.optimisation.linear">
  <import name="static org.ojalgo.constant.PrimitiveMath.*" />
  <import name="static org.ojalgo.function.PrimitiveFunction.*" />
  <import name="java.util.Arrays" />
  <import name="java.util.List" />
  <import name="java.util.Set" />
  <import name="org.ojalgo.ProgrammingError" />
  <import name="org.ojalgo.array.Array1D" />
  <import name="org.ojalgo.constant.PrimitiveMath" />
  <import name="org.ojalgo.function.aggregator.AggregatorFunction" />
  <import name="org.ojalgo.function.aggregator.PrimitiveAggregator" />
  <import name="org.ojalgo.matrix.MatrixUtils" />
  <import name="org.ojalgo.matrix.store.MatrixStore" />
  <import name="org.ojalgo.matrix.store.PhysicalStore" />
  <import name="org.ojalgo.matrix.store.PrimitiveDenseStore" />
  <import name="org.ojalgo.matrix.store.ZeroStore" />
  <import name="org.ojalgo.optimisation.Expression.Index" />
  <import name="org.ojalgo.optimisation.ExpressionsBasedModel" />
  <import name="org.ojalgo.optimisation.Optimisation" />
  <import name="org.ojalgo.optimisation.Variable" />
  <class name="SimplexTableauSolver" extends="LinearSolver" startLine="46">
    <javadoc>
      <text>* SimplexTableauSolver</text>
      <author>apete</author>
    </javadoc>
    <class name="PivotPoint" startLine="53">
      <declaration type="int" name="myRowObjective" />
      <declaration type="SimplexTableauSolver" name="mySolver" />
      <declaration type="int" name="col" />
      <declaration type="int" name="row" />
      <method type="constructor" name="PivotPoint" startLine="62" endLine="65" />
      <method type="constructor" name="PivotPoint" startLine="67" endLine="76" />
      <method type="int" name="getColRHS" startLine="78" endLine="80" />
      <method type="int" name="getRowObjective" startLine="82" endLine="84" />
      <method type="boolean" name="isPhase1" startLine="86" endLine="88" />
      <method type="boolean" name="isPhase2" startLine="90" endLine="92" />
      <method type="double" name="objective" startLine="94" endLine="96" />
      <method type="int" name="phase" startLine="98" endLine="100" />
      <method type="void" name="reset" startLine="102" endLine="105" />
      <method type="void" name="switchToPhase2" startLine="107" endLine="109" />
      <declaration type="int[]" name="myBasis" />
      <declaration type="PivotPoint" name="myPoint" />
      <declaration type="PrimitiveDenseStore" name="myTransposedTableau" />
      <method type="constructor" name="SimplexTableauSolver" startLine="117" endLine="152">
        <declaration type="int" name="tmpConstraintsCount" />
        <declaration type="MatrixStore.Builder<Double>" name="tmpTableauBuilder" />
        <scope startLine="128" endLine="130" />
        <declaration type="Result" name="tmpKickStarter" />
        <declaration type="int[]" name="tmpBasis" />
        <scope startLine="136" endLine="139" />
        <scope startLine="139" endLine="141" />
        <scope startLine="143" endLine="147">
          <scope startLine="144" endLine="146" />
        </scope>
        <scope startLine="149" endLine="151" />
      </method>
      <method type="Result" name="solve" startLine="154" endLine="166">
        <scope startLine="156" endLine="163">
          <scope startLine="160" endLine="162" />
        </scope>
      </method>
      <method type="int" name="countBasicArtificials" startLine="168" endLine="177">
        <declaration type="int" name="retVal" />
        <declaration type="int" name="tmpLength" />
        <scope startLine="171" endLine="175">
          <scope startLine="172" endLine="174" />
        </scope>
      </method>
      <method type="boolean" name="isTableauPrintable" startLine="179" endLine="181" />
      <method type="void" name="logDebugTableau" startLine="183" endLine="186" />
      <javadoc>
        <text>* Extract solution MatrixStore from the tableau</text>
      </javadoc>
      <method type="PhysicalStore<Double>" name="extractSolution" startLine="192" endLine="245">
        <declaration type="int" name="tmpCountVariables" />
        <declaration type="int" name="tmpLength" />
        <scope startLine="199" endLine="204">
          <declaration type="int" name="tmpBasisIndex" />
          <scope startLine="201" endLine="203" />
        </scope>
        <declaration type="PhysicalStore<Double>" name="tmpTableauSolution" />
        <declaration type="ExpressionsBasedModel" name="tmpModel" />
        <scope startLine="209" endLine="240">
          <declaration type="List<Variable>" name="tmpFreeVariables" />
          <declaration type="Set<Index>" name="tmpFixedVariables" />
          <declaration type="PrimitiveDenseStore" name="tmpModelSolution" />
          <declaration type="int" name="tmpModelSolutionSize" />
          <declaration type="int" name="tmpVariablesSize" />
          <scope startLine="218" endLine="220" />
          <scope startLine="222" endLine="224" />
          <declaration type="List<Variable>" name="tmpPositive" />
          <scope startLine="227" endLine="230">
            <declaration type="int" name="tmpIndex" />
          </scope>
          <declaration type="List<Variable>" name="tmpNegative" />
          <scope startLine="233" endLine="236">
            <declaration type="int" name="tmpIndex" />
          </scope>
        </scope>
        <scope startLine="240" endLine="243" />
      </method>
      <method type="boolean" name="initialise" startLine="248" endLine="252">
        <comment>TODO Auto-generated method stub</comment>
      </method>
      <method type="boolean" name="needsAnotherIteration" startLine="255" endLine="326">
        <scope startLine="257" endLine="259" />
        <declaration type="boolean" name="retVal" />
        <scope startLine="264" endLine="277">
          <declaration type="double" name="tmpPhaseOneValue" />
          <scope startLine="268" endLine="276">
            <scope startLine="270" endLine="273" />
          </scope>
        </scope>
        <scope startLine="281" endLine="303">
          <scope startLine="285" endLine="289" />
          <scope startLine="289" endLine="301">
            <scope startLine="291" endLine="296" />
            <scope startLine="296" endLine="300" />
          </scope>
        </scope>
        <scope startLine="303" endLine="315">
          <scope startLine="305" endLine="310" />
          <scope startLine="310" endLine="314" />
        </scope>
        <scope startLine="317" endLine="323">
          <scope startLine="318" endLine="320" />
          <scope startLine="320" endLine="322" />
        </scope>
      </method>
      <method type="boolean" name="validate" startLine="329" endLine="335">
        <declaration type="boolean" name="retVal" />
      </method>
      <method type="int" name="findNextPivotCol" startLine="337" endLine="370">
        <declaration type="int[]" name="tmpExcluded" />
        <scope startLine="341" endLine="348">
          <scope startLine="342" endLine="345" />
          <scope startLine="345" endLine="347" />
        </scope>
        <declaration type="int" name="retVal" />
        <declaration type="double" name="tmpVal" />
        <declaration type="double" name="tmpMinVal" />
        <declaration type="int" name="tmpCol" />
        <scope startLine="357" endLine="367">
          <scope startLine="360" endLine="366">
            <scope startLine="363" endLine="365" />
          </scope>
        </scope>
      </method>
      <method type="int" name="findNextPivotRow" startLine="372" endLine="436">
        <declaration type="int" name="tmpNumerCol" />
        <declaration type="int" name="tmpDenomCol" />
        <scope startLine="377" endLine="388">
          <scope startLine="378" endLine="385">
            <declaration type="Array1D<Double>" name="tmpNumerators" />
            <declaration type="Array1D<Double>" name="tmpDenominators" />
            <declaration type="Array1D<Double>" name="tmpRatios" />
          </scope>
          <scope startLine="385" endLine="387" />
        </scope>
        <declaration type="int" name="retVal" />
        <declaration type="double" name="tmpNumer" />
        <declaration type="double" name="tmpMinRatio" />
        <declaration type="int" name="tmpConstraintsCount" />
        <declaration type="boolean" name="tmpPhase2" />
        <scope startLine="398" endLine="433">
          <declaration type="boolean" name="tmpSpecialCase" />
          <scope startLine="404" endLine="408" />
          <scope startLine="408" endLine="422">
            <scope startLine="413" endLine="419">
              <scope startLine="414" endLine="416" />
              <scope startLine="416" endLine="418" />
            </scope>
            <scope startLine="419" endLine="421" />
          </scope>
          <scope startLine="424" endLine="432">
            <scope startLine="429" endLine="431" />
          </scope>
          <comment>Should always be >=0.0, but very small numbers may "accidentally" get a negative sign.</comment>
        </scope>
      </method>
      <javadoc>
        <text>* It's transposed for you!</text>
      </javadoc>
      <method type="double" name="getTableauElement" startLine="441" endLine="443" />
      <method type="void" name="performIteration" startLine="445" endLine="510">
        <declaration type="double" name="tmpPivotElement" />
        <declaration type="double" name="tmpPivotRHS" />
        <scope startLine="450" endLine="459">
          <scope startLine="451" endLine="458">
            <declaration type="double" name="tmpPivotColVal" />
            <scope startLine="455" endLine="457" />
          </scope>
        </scope>
        <scope startLine="461" endLine="463" />
        <scope startLine="463" endLine="465" />
        <scope startLine="467" endLine="470" />
        <declaration type="int" name="tmpOld" />
        <scope startLine="473" endLine="475" />
        <declaration type="int" name="tmpNew" />
        <scope startLine="477" endLine="479" />
        <scope startLine="482" endLine="509">
          <declaration type="Array1D<Double>" name="tmpRHS" />
          <declaration type="AggregatorFunction<Double>" name="tmpMinAggr" />
          <declaration type="double" name="tmpMinVal" />
          <scope startLine="491" endLine="496">
            <scope startLine="493" endLine="495" />
          </scope>
          <declaration type="ExpressionsBasedModel" name="tmpModel" />
          <scope startLine="500" endLine="508">
            <declaration type="Result" name="tmpResult" />
            <scope startLine="502" endLine="507">
              <scope startLine="503" endLine="505" />
            </scope>
          </scope>
          <comment>Right-most column of the tableau</comment>
        </scope>
      </method>
      <javadoc>
        <text>* It's transposed for you, and only returns the part of the column corresponding to the constraints - not the
 * objective(s).</text>
      </javadoc>
      <method type="Array1D<Double>" name="sliceTableauColumn" startLine="516" endLine="518" />
      <javadoc>
        <text>* It's transposed for you, and only returns the part of the row corresponding to the variables - not the RHS.</text>
      </javadoc>
      <method type="Array1D<Double>" name="sliceTableauRow" startLine="523" endLine="525" />
    </class>
  </class>
</source>
