<?xml version="1.0" encoding="UTF-8"?>
<source package="org.ojalgo.random.process">
  <import name="org.ojalgo.array.Array1D" />
  <import name="org.ojalgo.array.Array2D" />
  <import name="org.ojalgo.random.Distribution" />
  <import name="org.ojalgo.random.SampleSet" />
  <import name="org.ojalgo.series.primitive.PrimitiveSeries" />
  <interface name="RandomProcess" startLine="30">
    <javadoc>
      <text>* A random/stochastic process is a collection of random variables representing
 * the evolution of some random value over "time".</text>
      <author>apete</author>
    </javadoc>
    <class name="SimulationResults" startLine="38">
      <declaration type="double" name="myInitialValue" />
      <declaration type="Array2D<Double>" name="myResults" />
      <javadoc>
        <param>initialValue</param>
        <param>results (Random values) scenarios/realisations/series in rows, and sample sets in columns.</param>
      </javadoc>
      <method type="constructor" name="SimulationResults" startLine="48" endLine="54" />
      <method type="constructor" name="SimulationResults" startLine="57" endLine="63" />
      <method type="int" name="countSampleSets" startLine="65" endLine="67" />
      <method type="int" name="countScenarios" startLine="69" endLine="71" />
      <method type="double" name="getInitialValue" startLine="73" endLine="75" />
      <method type="SampleSet" name="getSampleSet" startLine="77" endLine="79" />
      <javadoc>
        <text>* A series representing one scenario. Each series has length
 * "number of simulation steps" + 1 as the series includes the initial value.</text>
      </javadoc>
      <method type="PrimitiveSeries" name="getScenario" startLine="85" endLine="105">
        <declaration type="Array1D<Double>" name="tmpSlicedRow" />
        <method type="int" name="size" startLine="91" endLine="93" />
        <method type="double" name="value" startLine="96" endLine="102">
          <scope startLine="97" endLine="99" />
          <scope startLine="99" endLine="101" />
        </method>
      </method>
      <method name="getDistribution" type="D" startLine="109" endLine="116" />
      <javadoc>
        <text>* Calling this method repeatedly gives the same ressult, unless
 * you call {@linkplain #step(double)} inbetween.</text>
        <param>evaluationPoint How far into the future?</param>
        <return>The distribution for the process value at that future time.</return>
      </javadoc>
      <method name="simulate" type="RandomProcess.SimulationResults" startLine="118" endLine="124" />
      <javadoc>
        <return>An array of sample sets. The array has aNumberOfSteps
 * elements, and each sample set has aNumberOfRealisations samples.</return>
      </javadoc>
    </class>
  </interface>
</source>
