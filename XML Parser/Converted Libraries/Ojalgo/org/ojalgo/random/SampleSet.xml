<?xml version="1.0" encoding="UTF-8"?>
<source package="org.ojalgo.random">
  <import name="java.util.Arrays" />
  <import name="java.util.Iterator" />
  <import name="org.ojalgo.ProgrammingError" />
  <import name="org.ojalgo.access.Access1D" />
  <import name="org.ojalgo.access.Iterator1D" />
  <import name="org.ojalgo.array.ArrayUtils" />
  <import name="org.ojalgo.array.SimpleArray" />
  <import name="org.ojalgo.constant.PrimitiveMath" />
  <class name="SampleSet" startLine="34">
    <implements name="Access1D<Double>" />
    <method type="SampleSet" name="make" startLine="36" endLine="45">
      <declaration type="SimpleArray.Primitive" name="retVal" />
      <scope startLine="40" endLine="42" />
    </method>
    <method type="SampleSet" name="wrap" startLine="47" endLine="49" />
    <declaration type="double" name="myMean" />
    <declaration type="double" name="myMedian" />
    <declaration type="Access1D<?>" name="mySamples" />
    <declaration type="double" name="myVariance" />
    <method type="constructor" name="SampleSet" startLine="57" endLine="62" />
    <method type="constructor" name="SampleSet" startLine="64" endLine="71" />
    <method type="long" name="count" startLine="73" endLine="75" />
    <method type="double" name="doubleValue" startLine="77" endLine="79" />
    <method type="Double" name="get" startLine="81" endLine="83" />
    <method type="Double" name="get" startLine="85" endLine="87" />
    <method type="double" name="getCorrelation" startLine="89" endLine="104">
      <declaration type="double" name="retVal" />
      <declaration type="double" name="tmpCovar" />
      <scope startLine="95" endLine="101">
        <declaration type="double" name="tmpThisStdDev" />
        <declaration type="double" name="tmpThatStdDev" />
      </scope>
    </method>
    <method type="double" name="getCovariance" startLine="106" endLine="124">
      <declaration type="double" name="retVal" />
      <declaration type="double" name="tmpThisMean" />
      <declaration type="double" name="tmpThatMean" />
      <declaration type="int" name="tmpCount" />
      <declaration type="Access1D<?>" name="tmpValues" />
      <scope startLine="117" endLine="119" />
    </method>
    <method type="double" name="getFirst" startLine="126" endLine="128" />
    <javadoc>
      <text>* max(abs(value))</text>
    </javadoc>
    <method type="double" name="getLargest" startLine="133" endLine="142">
      <declaration type="double" name="retVal" />
      <scope startLine="137" endLine="139" />
    </method>
    <method type="double" name="getLast" startLine="144" endLine="146" />
    <javadoc>
      <text>* max(value)</text>
    </javadoc>
    <method type="double" name="getMaximum" startLine="151" endLine="160">
      <declaration type="double" name="retVal" />
      <scope startLine="155" endLine="157" />
    </method>
    <method type="double" name="getMean" startLine="162" endLine="176">
      <scope startLine="164" endLine="173">
        <scope startLine="168" endLine="170" />
      </scope>
    </method>
    <method type="double" name="getMedian" startLine="178" endLine="190">
      <scope startLine="180" endLine="187">
        <declaration type="double[]" name="tmpCopy" />
      </scope>
    </method>
    <javadoc>
      <text>* min(value)</text>
    </javadoc>
    <method type="double" name="getMinimum" startLine="195" endLine="204">
      <declaration type="double" name="retVal" />
      <scope startLine="199" endLine="201" />
    </method>
    <javadoc>
      <text>* min(abs(value))</text>
    </javadoc>
    <method type="double" name="getSmallest" startLine="209" endLine="218">
      <declaration type="double" name="retVal" />
      <scope startLine="213" endLine="215" />
    </method>
    <method type="double" name="getStandardDeviation" startLine="220" endLine="222" />
    <javadoc>
      <text>* <p>
 * &quot;Sum of squares is a concept that permeates much of inferential statistics and descriptive statistics. More
 * properly, it is "the sum of the squared deviations". Mathematically, it is an unscaled, or unadjusted measure of
 * dispersion (also called variability). When scaled for the number of degrees of freedom, it estimates the
 * variance, or spread of the observations about their mean value.&quot;
 * </p>
 * <a href="http://en.wikipedia.org/wiki/Sum_of_squares">Wikipedia</a></text>
    </javadoc>
    <method type="double" name="getSumOfSquares" startLine="233" endLine="246">
      <declaration type="double" name="retVal" />
      <declaration type="double" name="tmpMean" />
      <declaration type="double" name="tmpVal" />
      <declaration type="int" name="tmpLimit" />
      <scope startLine="240" endLine="243" />
    </method>
    <javadoc>
      <return>A copy of the internal data (the samples).</return>
    </javadoc>
    <method type="double[]" name="getValues" startLine="251" endLine="253" />
    <method type="double" name="getVariance" startLine="255" endLine="262">
      <scope startLine="257" endLine="259" />
    </method>
    <method type="Iterator<Double>" name="iterator" startLine="264" endLine="266" />
    <method type="void" name="reset" startLine="268" endLine="272" />
    <method type="int" name="size" startLine="274" endLine="276" />
    <method type="String" name="toString" startLine="279" endLine="282" />
    <method type="Access1D<?>" name="getSamples" startLine="284" endLine="286" />
  </class>
</source>
