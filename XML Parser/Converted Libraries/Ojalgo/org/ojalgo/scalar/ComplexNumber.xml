<?xml version="1.0" encoding="UTF-8"?>
<source package="org.ojalgo.scalar">
  <import name="java.math.BigDecimal" />
  <import name="java.math.MathContext" />
  <import name="java.util.Iterator" />
  <import name="org.ojalgo.access.Access2D" />
  <import name="org.ojalgo.access.Iterator1D" />
  <import name="org.ojalgo.constant.PrimitiveMath" />
  <import name="org.ojalgo.type.TypeUtils" />
  <import name="org.ojalgo.type.context.NumberContext" />
  <import name="org.ojalgo.type.context.NumberContext.Enforceable" />
  <class name="ComplexNumber" extends="AbstractScalar<ComplexNumber>" startLine="35">
    <implements name="Enforceable<ComplexNumber>" />
    <implements name="Access2D<Double>" />
    <javadoc>
      <text>* ComplexNumber is an immutable complex number class. It only implements the most basic complex number operations.{@linkplain org.ojalgo.function.ComplexFunction} implements some of the more complicated ones.</text>
      <author>apete</author>
      <see>org.ojalgo.function.ComplexFunction</see>
    </javadoc>
    <method type="ComplexNumber" name="cast" startLine="46" endLine="48" />
    <method type="ComplexNumber" name="cast" startLine="50" endLine="52" />
    <method type="ComplexNumber" name="convert" startLine="54" endLine="56" />
    <method type="ComplexNumber" name="convert" startLine="58" endLine="60" />
    <method type="ComplexNumber" name="one" startLine="62" endLine="64" />
    <method type="ComplexNumber" name="zero" startLine="66" endLine="68" />
    <declaration type="Scalar.Factory<ComplexNumber>" name="FACTORY" />
    <declaration type="ComplexNumber" name="I" />
    <declaration type="ComplexNumber" name="INFINITY" />
    <declaration type="ComplexNumber" name="NEG" />
    <declaration type="ComplexNumber" name="ONE" />
    <declaration type="ComplexNumber" name="TWO" />
    <declaration type="ComplexNumber" name="ZERO" />
    <declaration type="String" name="LEFT" />
    <declaration type="String" name="MINUS" />
    <declaration type="String" name="PLUS" />
    <declaration type="String" name="RIGHT" />
    <declaration type="boolean" name="myRealForSure" />
    <declaration type="double" name="ARGUMENT_TOLERANCE" />
    <method type="boolean" name="isAbsolute" startLine="96" endLine="98" />
    <method type="boolean" name="isInfinite" startLine="100" endLine="102" />
    <method type="boolean" name="isNaN" startLine="104" endLine="106" />
    <method type="boolean" name="isPositive" startLine="108" endLine="110" />
    <method type="boolean" name="isReal" startLine="112" endLine="114" />
    <method type="boolean" name="isZero" startLine="116" endLine="118" />
    <method type="ComplexNumber" name="makePolar" startLine="120" endLine="155">
      <declaration type="double" name="tmpArg" />
      <scope startLine="122" endLine="124" />
      <scope startLine="125" endLine="127" />
      <scope startLine="127" endLine="129" />
      <scope startLine="129" endLine="154">
        <declaration type="double" name="tmpRe" />
        <scope startLine="133" endLine="140">
          <declaration type="double" name="tmpCos" />
          <scope startLine="137" endLine="139" />
        </scope>
        <declaration type="double" name="tmpIm" />
        <scope startLine="144" endLine="151">
          <declaration type="double" name="tmpSin" />
          <scope startLine="148" endLine="150" />
        </scope>
      </scope>
    </method>
    <method type="ComplexNumber" name="makeReal" startLine="157" endLine="159" />
    <method type="ComplexNumber" name="makeRectangular" startLine="161" endLine="167">
      <scope startLine="162" endLine="164" />
      <scope startLine="164" endLine="166" />
    </method>
    <declaration type="double" name="i" />
    <declaration type="double" name="myRealValue" />
    <method type="constructor" name="ComplexNumber" startLine="173" endLine="182" />
    <method type="constructor" name="ComplexNumber" startLine="184" endLine="193" />
    <method type="constructor" name="ComplexNumber" startLine="195" endLine="197" />
    <method type="ComplexNumber" name="add" startLine="199" endLine="201" />
    <method type="ComplexNumber" name="add" startLine="203" endLine="205" />
    <method type="int" name="compareTo" startLine="207" endLine="218">
      <declaration type="int" name="retVal" />
      <scope startLine="211" endLine="215">
        <scope startLine="212" endLine="214" />
      </scope>
    </method>
    <method type="ComplexNumber" name="conjugate" startLine="220" endLine="222" />
    <method type="long" name="count" startLine="224" endLine="226" />
    <method type="long" name="countColumns" startLine="228" endLine="230" />
    <method type="long" name="countRows" startLine="232" endLine="234" />
    <method type="ComplexNumber" name="divide" startLine="236" endLine="250">
      <declaration type="double" name="a" />
      <declaration type="double" name="b" />
      <declaration type="double" name="c" />
      <declaration type="double" name="d" />
      <declaration type="double" name="tmpDenom" />
      <declaration type="double" name="tmpRe" />
      <declaration type="double" name="tmpIm" />
    </method>
    <method type="ComplexNumber" name="divide" startLine="252" endLine="254" />
    <javadoc>
      <see>java.lang.Number#doubleValue()</see>
    </javadoc>
    <method type="double" name="doubleValue" startLine="260" endLine="262" />
    <method type="double" name="doubleValue" startLine="264" endLine="277" />
    <method type="double" name="doubleValue" startLine="279" endLine="289">
      <scope startLine="280" endLine="282" />
      <scope startLine="282" endLine="284" />
      <scope startLine="284" endLine="286" />
      <scope startLine="286" endLine="288" />
    </method>
    <javadoc>
      <text>* Will call {@linkplain NumberContext#enforce(double)} on the real and imaginary parts separately.</text>
      <see>org.ojalgo.scalar.Scalar#enforce(org.ojalgo.type.context.NumberContext)</see>
    </javadoc>
    <method type="ComplexNumber" name="enforce" startLine="296" endLine="302">
      <declaration type="double" name="tmpRe" />
      <declaration type="double" name="tmpIm" />
    </method>
    <method type="boolean" name="equals" startLine="305" endLine="323">
      <scope startLine="306" endLine="308" />
      <scope startLine="309" endLine="311" />
      <scope startLine="312" endLine="314" />
      <declaration type="ComplexNumber" name="other" />
      <scope startLine="316" endLine="318" />
      <scope startLine="319" endLine="321" />
    </method>
    <javadoc>
      <see>java.lang.Number#floatValue()</see>
    </javadoc>
    <method type="float" name="floatValue" startLine="329" endLine="331" />
    <method type="Double" name="get" startLine="333" endLine="335" />
    <method type="Double" name="get" startLine="337" endLine="339" />
    <method type="double" name="getArgument" startLine="341" endLine="343" />
    <method type="int" name="getColDim" startLine="345" endLine="347" />
    <method type="double" name="getImaginary" startLine="349" endLine="351" />
    <method type="double" name="getModulus" startLine="353" endLine="355" />
    <method type="ComplexNumber" name="getNumber" startLine="357" endLine="359" />
    <method type="double" name="getReal" startLine="361" endLine="363" />
    <method type="int" name="getRowDim" startLine="365" endLine="367" />
    <method type="int" name="hashCode" startLine="370" endLine="379">
      <declaration type="int" name="prime" />
      <declaration type="int" name="result" />
      <declaration type="long" name="temp" />
    </method>
    <javadoc>
      <see>java.lang.Number#intValue()</see>
    </javadoc>
    <method type="int" name="intValue" startLine="385" endLine="387" />
    <method type="ComplexNumber" name="invert" startLine="390" endLine="392" />
    <method type="boolean" name="isAbsolute" startLine="394" endLine="396" />
    <method type="boolean" name="isInfinite" startLine="398" endLine="400" />
    <method type="boolean" name="isNaN" startLine="402" endLine="404" />
    <method type="boolean" name="isPositive" startLine="406" endLine="408" />
    <method type="boolean" name="isReal" startLine="410" endLine="412" />
    <method type="boolean" name="isZero" startLine="414" endLine="416" />
    <method type="Iterator<Double>" name="iterator" startLine="418" endLine="420" />
    <javadoc>
      <see>java.lang.Number#longValue()</see>
    </javadoc>
    <method type="long" name="longValue" startLine="426" endLine="428" />
    <method type="ComplexNumber" name="multiply" startLine="431" endLine="437">
      <declaration type="double" name="tmpRe" />
      <declaration type="double" name="tmpIm" />
    </method>
    <method type="ComplexNumber" name="multiply" startLine="440" endLine="442" />
    <method type="ComplexNumber" name="negate" startLine="445" endLine="447" />
    <method type="double" name="norm" startLine="449" endLine="451" />
    <method type="double" name="phase" startLine="453" endLine="455" />
    <method type="ComplexNumber" name="signum" startLine="457" endLine="463">
      <scope startLine="458" endLine="460" />
      <scope startLine="460" endLine="462" />
    </method>
    <method type="int" name="size" startLine="465" endLine="467" />
    <method type="ComplexNumber" name="subtract" startLine="469" endLine="471" />
    <method type="ComplexNumber" name="subtract" startLine="474" endLine="476" />
    <method type="BigDecimal" name="toBigDecimal" startLine="478" endLine="480" />
    <javadoc>
      <see>java.lang.Object#toString()</see>
    </javadoc>
    <method type="String" name="toString" startLine="486" endLine="503">
      <declaration type="StringBuilder" name="retVal" />
      <declaration type="double" name="tmpRe" />
      <declaration type="double" name="tmpIm" />
      <scope startLine="495" endLine="497" />
      <scope startLine="497" endLine="499" />
    </method>
    <method type="String" name="toString" startLine="505" endLine="522">
      <declaration type="StringBuilder" name="retVal" />
      <declaration type="BigDecimal" name="tmpRe" />
      <declaration type="BigDecimal" name="tmpIm" />
      <scope startLine="514" endLine="516" />
      <scope startLine="516" endLine="518" />
    </method>
  </class>
</source>
