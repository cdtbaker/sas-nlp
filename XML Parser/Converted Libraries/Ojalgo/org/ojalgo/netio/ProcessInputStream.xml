<?xml version="1.0" encoding="UTF-8"?>
<source package="org.ojalgo.netio">
  <import name="java.io.DataInputStream" />
  <import name="java.io.EOFException" />
  <import name="java.io.IOException" />
  <import name="java.io.InputStream" />
  <import name="java.util.List" />
  <class name="ProcessInputStream" extends="DataInputStream" startLine="30">
    <declaration type="String" name="EMPTY" />
    <declaration type="String" name="myLastArgument" />
    <declaration type="String" name="myLastCommand" />
    <declaration type="String" name="myLastCommandPrefix" />
    <declaration type="long" name="myWaitTime" />
    <method type="constructor" name="ProcessInputStream" startLine="39" endLine="44" />
    <method type="constructor" name="ProcessInputStream" startLine="47" endLine="52" />
    <method type="List<Message>" name="collectMessages" startLine="54" endLine="74">
      <declaration type="List<Message>" name="retVal" />
      <declaration type="Message" name="tmpMessage" />
      <declaration type="boolean" name="tmpReadOneMore" />
      <scope startLine="61" endLine="71">
        <scope startLine="65" endLine="70" />
      </scope>
    </method>
    <method type="String" name="getLastArgument" startLine="76" endLine="78" />
    <method type="String" name="getLastCommand" startLine="80" endLine="82" />
    <method type="Message" name="constructMessage" startLine="84" endLine="119">
      <declaration type="Message" name="retVal" />
      <declaration type="String" name="tmpString" />
      <scope startLine="90" endLine="107">
        <declaration type="int" name="tmpFirst" />
        <declaration type="int" name="tmpLast" />
        <declaration type="String" name="tmpCommand" />
        <declaration type="String" name="tmpArgument" />
      </scope>
      <scope startLine="107" endLine="116">
        <scope startLine="109" endLine="111" />
        <scope startLine="111" endLine="113" />
      </scope>
    </method>
    <javadoc>
      <text>* Creates a <code>String</code> from the stream of bytes.
 * Each <code>byte</code> (8 bit) is converted to a <code>char</code>. The chars
 * are meged to form a <code>String</code>. The first bytes, describing the count
 * of bytes to come, as well as any '\r' character are discarded. Everything else
 * is converted and merged.</text>
    </javadoc>
    <method type="String" name="readString" startLine="128" endLine="169">
      <declaration type="StringBuilder" name="retVal" />
      <scope startLine="134" endLine="161">
        <declaration type="int" name="tmpInt" />
        <declaration type="char" name="tmpChar" />
        <declaration type="int" name="tmpByteCount" />
        <scope startLine="140" endLine="149" />
        <scope startLine="151" endLine="159">
          <scope startLine="156" endLine="158" />
        </scope>
        <comment>BasicLogger.logDebug("The byte/int is: {}", tmpInt);</comment>
        <comment>BasicLogger.logDebug("The number of bytes/chars to read is: {}", tmpByteCount);</comment>
        <comment>BasicLogger.logDebug("The byte/char is: {}", tmpChar);</comment>
      </scope>
      <scope startLine="161" endLine="164" />
      <comment>BasicLogger.logDebug("Reading in new characters.");</comment>
      <comment>BasicLogger.logDebug("String is done: {}", retVal);</comment>
    </method>
    <javadoc>
      <see>java.io.DataInput#readByte()</see>
    </javadoc>
    <method type="char" name="readByteAsChar" startLine="174" endLine="183">
      <declaration type="int" name="retVal" />
      <scope startLine="178" endLine="180" />
    </method>
    <javadoc>
      <see>java.io.DataInput#readByte()</see>
    </javadoc>
    <method type="int" name="readByteAsInt" startLine="188" endLine="197">
      <declaration type="int" name="retVal" />
      <scope startLine="192" endLine="194" />
    </method>
  </class>
</source>
