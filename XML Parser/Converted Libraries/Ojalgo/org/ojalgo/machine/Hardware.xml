<?xml version="1.0" encoding="UTF-8"?>
<source package="org.ojalgo.machine">
  <import name="java.util.Arrays" />
  <import name="java.util.TreeSet" />
  <import name="org.ojalgo.ProgrammingError" />
  <import name="org.ojalgo.array.ArrayUtils" />
  <import name="org.ojalgo.netio.ASCII" />
  <class name="Hardware" extends="AbstractMachine" startLine="31">
    <implements name="Comparable<Hardware>" />
    <javadoc>
      <text>* <ul>
 * <li>The first element in the array should correspond to total system resources; the total amount of RAM and the total
 * number of threads (Typically the same as what is returned by {@linkplain Runtime#availableProcessors()}).</li>
 * <li>The last element in the array should describe the L1 cache. Typically Intel processors have 32k L1 cache and AMD
 * 64k. 1 or maybe 2 threads use/share this cache.</li>
 * <li>Caches, all levels except L1, are described between the first and last elements in descending order (L3 cache
 * comes before L2 cache). Specify the size of the cache and the number of threads using/sharing the cache. (Do not
 * worry about how many cache units there are - describe one unit.)</li>
 * <li>The array must have at least 2 elements. You must describe the total system resources and the L1 cache. It is
 * strongly recommended to also describe the L2 cache. The L3 cache, if it exists, is less important to describe. The
 * derived attributes <code>processors</code>, <code>cores</code> and <code>units</code> may be incorrectly calculated
 * if you fail to specify the caches. Known issue: If you have more than one processor, nut no L3 cache; the
 * <code>processors</code> attribute will be incorrectly set 1. A workaround that currently works is to define an L3
 * cache anyway and set the memory/size of that cache to 0bytes. This workoround may stop working in the future.</li>
 * <li>
 * <code>new MemoryThreads[] { SYSTEM, L3, L2, L1 }</code> or <code>new MemoryThreads[] { SYSTEM, L2, L1 }</code> or
 * <code>new MemoryThreads[] { SYSTEM, L1 }</code></li>
 * <ul></text>
      <author>apete</author>
    </javadoc>
    <javadoc>
      <text>* Should contain all available hardware in ascending "power" order.</text>
    </javadoc>
    <declaration type="TreeSet<Hardware>" name="PREDEFINED" />
    <javadoc>
      <text>* <ul>
 * <li>CLAM / PowerBook6,5
 * <ul>
 * <li></li>
 * <li>1 processor</li>
 * <li>1 core per processor</li>
 * <li>1 thread per core</li>
 * <li>==>> Total 2 threads</li>
 * <li></li>
 * <li>1.25GB system RAM</li>
 * <li>512kB L2 cache per processor</li>
 * <li>64kB L1 cache per core</li>
 * </ul>
 * </li>
 * </ul></text>
    </javadoc>
    <declaration type="Hardware" name="PPC__01" />
    <javadoc>
      <text>* <ul>
 * <li>INTEL1
 * <ul>
 * <li></li>
 * <li>1 processor</li>
 * <li>1 core per processor</li>
 * <li>1 thread per core</li>
 * <li>==>> Total 2 threads</li>
 * <li></li>
 * <li>1GB system RAM</li>
 * <li>1MB L2 cache per processor</li>
 * <li>32kB L1 cache per core</li>
 * </ul>
 * </li>
 * </ul></text>
    </javadoc>
    <declaration type="Hardware" name="X86__01" />
    <javadoc>
      <text>* <ul>
 * <li>B5950053
 * <ul>
 * <li></li>
 * <li>1 processor</li>
 * <li>2 cores per processor</li>
 * <li>1 thread per core</li>
 * <li>==>> Total 2 threads</li>
 * <li></li>
 * <li>3.5GB system RAM</li>
 * <li>6MB L2 cache per processor (2 cores)</li>
 * <li>32kB L1 cache per core</li>
 * </ul>
 * </li>
 * </ul></text>
    </javadoc>
    <declaration type="Hardware" name="X86__02" />
    <javadoc>
      <text>* <ul>
 * <li>MANTA / iMac7,1
 * <ul>
 * <li></li>
 * <li>1 processor</li>
 * <li>2 cores per processor</li>
 * <li>1 thread per core</li>
 * <li>==>> Total 2 threads</li>
 * <li></li>
 * <li>3GB system RAM</li>
 * <li>4MB L2 cache per processor (2 cores)</li>
 * <li>32kB L1 cache per core</li>
 * </ul>
 * </li>
 * </ul></text>
    </javadoc>
    <declaration type="Hardware" name="X86_64__02" />
    <javadoc>
      <text>* <ul>
 * <li>BUBBLE / MacBookAir4,2
 * <ul>
 * <li></li>
 * <li>1 processors</li>
 * <li>2 cores per processor</li>
 * <li>2 threads per core</li>
 * <li>==>> Total 4 threads</li>
 * <li></li>
 * <li>4GB system RAM</li>
 * <li>3MB L3 cache per processor</li>
 * <li>256kB L2 cache per core</li>
 * <li>32kB L1 cache per core</li>
 * </ul>
 * </li>
 * <li>Peter Abeles's (EJML) Intel Core i7-620M laptop
 * <ul>
 * <li></li>
 * <li>1 processors</li>
 * <li>2 cores per processor</li>
 * <li>2 threads per core</li>
 * <li>==>> Total 4 threads</li>
 * <li></li>
 * <li>8GB system RAM</li>
 * <li>4MB L3 cache per processor</li>
 * <li>256kB L2 cache per core</li>
 * <li>32kB L1 cache per core</li>
 * </ul>
 * </li>
 * <li>Peter Abeles' (EJML) Q9400
 * <ul>
 * <li></li>
 * <li>1 processors</li>
 * <li>4 cores per processor</li>
 * <li>1 thread per core</li>
 * <li>==>> Total 4 threads</li>
 * <li></li>
 * <li>3GB system RAM</li>
 * <li>3MB L2 cache per 2 cores</li>
 * <li>32kB L1 cache per core</li>
 * </ul>
 * </li>
 * <li>Peter Abeles' (EJML) Q6600
 * <ul>
 * <li></li>
 * <li>1 processors</li>
 * <li>4 cores per processor</li>
 * <li>1 thread per core</li>
 * <li>==>> Total 4 threads</li>
 * <li></li>
 * <li>8GB system RAM</li>
 * <li>4MB L2 cache per 2 cores</li>
 * <li>32kB L1 cache per core</li>
 * </ul>
 * </li>
 * </ul></text>
    </javadoc>
    <declaration type="Hardware" name="X86_64__04" />
    <javadoc>
      <text>* <ul>
 * <li>Holger Arndt's (UJMP) Intel Core i7-920 server
 * <ul>
 * <li></li>
 * <li>1 processor</li>
 * <li>4 cores per processor</li>
 * <li>2 threads per core</li>
 * <li>==>> Total 8 threads</li>
 * <li></li>
 * <li>8GB system RAM</li>
 * <li>8MB L3 cache per processor</li>
 * <li>256kB L2 cache per core</li>
 * <li>32kB L1 cache per core</li>
 * </ul>
 * </li>
 * <li>Core i7-2600 3.4 GHz - 4 cores - 8 threads from Java Matrix Benchmark
 * <ul>
 * <li></li>
 * <li>1 processor</li>
 * <li>4 cores per processor</li>
 * <li>2 threads per core</li>
 * <li>==>> Total 8 threads</li>
 * <li></li>
 * <li>11GB system RAM</li>
 * <li>8MB L3 cache per processor</li>
 * <li>256kB L2 cache per core</li>
 * <li>32kB L1 cache per core</li>
 * </ul>
 * </li>
 * </ul></text>
    </javadoc>
    <declaration type="Hardware" name="X86_64__08" />
    <javadoc>
      <text>* <pre>
 * "Gulftown" (32 nm) Model: SLBUZ (B1) 
 * Intel Core i7-980 3.33GHz
 * 8/25/2010
 * ref: http://ark.intel.com/products/47932
 * https://en.wikipedia.org/wiki/List_of_Intel_Core_i7_microprocessors
 * Device Manager
 * </pre>
 * <ul>
 * <li>Intel Core i7-980
 * <ul>
 * <li>1 processor</li>
 * <li>6 cores per processor</li>
 * <li>2 threads per core</li>
 * <li>==>> Total 12 threads</li>
 * <li></li>
 * <li>12GB system RAM</li>
 * <li>12MB L3 cache per processor</li>
 * <li>256kB L2 cache per core (x6)</li>
 * <li>32kB L1 cache per core (x6)</li>
 * </ul>
 * </li>
 * </ul></text>
    </javadoc>
    <declaration type="Hardware" name="X86_64__12" />
    <javadoc>
      <text>* <ul>
 * <li>SAILFISH / MacPro4,1
 * <ul>
 * <li></li>
 * <li>2 processors</li>
 * <li>4 cores per processor</li>
 * <li>2 threads per core</li>
 * <li>==>> Total 16 threads</li>
 * <li></li>
 * <li>12GB system RAM</li>
 * <li>8MB L3 cache per processor</li>
 * <li>256kB L2 cache per core</li>
 * <li>32kB L1 cache per core</li>
 * </ul>
 * </li>
 * </ul></text>
    </javadoc>
    <declaration type="Hardware" name="X86_64__16" />
    <scope startLine="285" endLine="294" />
    <method type="Hardware" name="makeSimple" startLine="296" endLine="298" />
    <method type="Hardware" name="makeSimple" startLine="300" endLine="339">
      <scope startLine="302" endLine="315">
        <declaration type="BasicMachine" name="tmpL1Machine" />
        <declaration type="BasicMachine" name="tmpL2Machine" />
        <declaration type="BasicMachine" name="tmpL3Machine" />
        <declaration type="BasicMachine" name="tmpSystemMachine" />
        <comment>Assume hyperthreading, L3 cache and more than 1 CPU</comment>
        <comment>Hyperthreading</comment>
        <comment>More than 1 CPU</comment>
      </scope>
      <scope startLine="315" endLine="328">
        <declaration type="BasicMachine" name="tmpL1Machine" />
        <declaration type="BasicMachine" name="tmpL2Machine" />
        <declaration type="BasicMachine" name="tmpL3Machine" />
        <declaration type="BasicMachine" name="tmpSystemMachine" />
        <comment>Assume hyperthreading, L3 cache but only 1 CPU</comment>
        <comment>Hyperthreading</comment>
      </scope>
      <scope startLine="328" endLine="338">
        <declaration type="BasicMachine" name="tmpL1Machine" />
        <declaration type="BasicMachine" name="tmpL2Machine" />
        <declaration type="BasicMachine" name="tmpSystemMachine" />
        <comment>No hyperthreading, no L3 cache and 1 CPU</comment>
        <comment>No hyperthreading</comment>
      </scope>
    </method>
    <declaration type="BasicMachine[]" name="myLevels" />
    <javadoc>
      <text>* <code>new BasicMachine[] { SYSTEM, L3, L2, L1 }</code> or <code>new BasicMachine[] { SYSTEM, L2, L1 }</code> or
 * in worst case <code>new BasicMachine[] { SYSTEM, L1 }</code></text>
    </javadoc>
    <method type="constructor" name="Hardware" startLine="347" endLine="356">
      <scope startLine="351" endLine="353" />
    </method>
    <method type="constructor" name="Hardware" startLine="358" endLine="365" />
    <method type="int" name="compareTo" startLine="367" endLine="381">
      <scope startLine="368" endLine="370" />
      <scope startLine="370" endLine="372" />
      <scope startLine="372" endLine="374" />
      <scope startLine="374" endLine="376" />
      <scope startLine="376" endLine="378" />
      <scope startLine="378" endLine="380" />
    </method>
    <method type="boolean" name="equals" startLine="384" endLine="399">
      <scope startLine="385" endLine="387" />
      <scope startLine="388" endLine="390" />
      <scope startLine="391" endLine="393" />
      <declaration type="Hardware" name="other" />
      <scope startLine="395" endLine="397" />
    </method>
    <method type="int" name="hashCode" startLine="402" endLine="407">
      <declaration type="int" name="prime" />
      <declaration type="int" name="result" />
    </method>
    <method type="boolean" name="isL2Specified" startLine="409" endLine="411" />
    <method type="boolean" name="isL3Specified" startLine="413" endLine="415" />
    <method type="String" name="toString" startLine="418" endLine="431">
      <declaration type="StringBuilder" name="retVal" />
      <scope startLine="423" endLine="425" />
      <scope startLine="425" endLine="427" />
    </method>
    <method type="VirtualMachine" name="virtualise" startLine="433" endLine="435" />
  </class>
</source>
