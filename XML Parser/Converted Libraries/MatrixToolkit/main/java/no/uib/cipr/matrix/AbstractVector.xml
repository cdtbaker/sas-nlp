<?xml version="1.0" encoding="UTF-8"?>
<source package="no.uib.cipr.matrix">
  <import name="java.io.Serializable" />
  <import name="java.util.Formatter" />
  <import name="java.util.Iterator" />
  <class name="AbstractVector" startLine="27">
    <implements name="Vector" />
    <implements name="Serializable" />
    <javadoc>
      <text>* Partial implementation of <code>Vector</code>. The following methods throw
 * <code>UnsupportedOperationException</code>, and should be overridden by a
 * subclass:
 * <ul>
 * <li><code>get(int)</code></li>
 * <li><code>set(int,double)</code></li>
 * <li><code>copy</code></li>
 * </ul>
 * <p>
 * For the rest of the methods, simple default implementations using a vector
 * iterator has been provided. There are some kernel operations which the
 * simpler operations forward to, and they are:
 * <ul>
 * <li> <code>add(double,Vector)</code> and <code>set(double,Vector)</code>.
 * </li>
 * <li> <code>scale(double)</code>.</li>
 * <li><code>dot(Vector)</code> and all the norms. </li>
 * </ul>
 * <p>
 * Finally, a default iterator is provided by this class, which works by calling
 * the <code>get</code> function. A tailored replacement should be used by
 * subclasses.
 * </ul></text>
    </javadoc>
    <javadoc>
      <text>* Size of the vector</text>
    </javadoc>
    <declaration type="int" name="size" />
    <javadoc>
      <text>* Constructor for AbstractVector.</text>
      <param>sizeSize of the vector</param>
    </javadoc>
    <method type="constructor" name="AbstractVector" startLine="65" endLine="69" />
    <javadoc>
      <text>* Constructor for AbstractVector, same size as x</text>
      <param>xVector to get the size from</param>
    </javadoc>
    <method type="constructor" name="AbstractVector" startLine="77" endLine="79" />
    <method type="int" name="size" startLine="81" endLine="83" />
    <method type="void" name="set" startLine="85" endLine="87" />
    <method type="void" name="add" startLine="89" endLine="91" />
    <method type="double" name="get" startLine="93" endLine="95" />
    <method type="Vector" name="copy" startLine="97" endLine="99" />
    <javadoc>
      <text>* Checks the index</text>
    </javadoc>
    <method type="void" name="check" startLine="104" endLine="111" />
    <method type="Vector" name="zero" startLine="113" endLine="117" />
    <method type="Vector" name="scale" startLine="119" endLine="129" />
    <method type="Vector" name="set" startLine="131" endLine="133" />
    <method type="Vector" name="set" startLine="135" endLine="146" />
    <method type="Vector" name="add" startLine="148" endLine="150" />
    <method type="Vector" name="add" startLine="152" endLine="162" />
    <method type="double" name="dot" startLine="164" endLine="171">
      <declaration type="double" name="ret" />
    </method>
    <javadoc>
      <text>* Checks for conformant sizes</text>
    </javadoc>
    <method type="void" name="checkSize" startLine="176" endLine="180" />
    <method type="double" name="norm" startLine="182" endLine="192">
      <comment>Infinity</comment>
    </method>
    <method type="double" name="norm1" startLine="194" endLine="199">
      <declaration type="double" name="sum" />
    </method>
    <method type="double" name="norm2" startLine="201" endLine="206">
      <declaration type="double" name="norm" />
    </method>
    <method type="double" name="norm2_robust" startLine="208" endLine="222">
      <declaration type="double" name="scale" />
      <scope startLine="210" endLine="220">
        <declaration type="double" name="xval" />
        <scope startLine="212" endLine="219">
          <declaration type="double" name="absxi" />
          <scope startLine="214" endLine="217" />
        </scope>
      </scope>
    </method>
    <method type="double" name="normInf" startLine="224" endLine="229">
      <declaration type="double" name="max" />
    </method>
    <method type="Iterator<VectorEntry>" name="iterator" startLine="231" endLine="233" />
    <method type="String" name="toString" startLine="236" endLine="253">
      <declaration type="Formatter" name="out" />
      <declaration type="int" name="i" />
      <scope startLine="243" endLine="250">
        <scope startLine="246" endLine="249" />
      </scope>
      <comment>Output into coordinate format. Indices start from 1 instead of 0</comment>
    </method>
    <class name="RefVectorIterator" startLine="255">
      <implements name="Iterator<VectorEntry>" />
      <javadoc>
        <text>* Iterator over a general vector</text>
      </javadoc>
      <declaration type="int" name="index" />
      <declaration type="RefVectorEntry" name="entry" />
      <method type="boolean" name="hasNext" startLine="264" endLine="266" />
      <method type="VectorEntry" name="next" startLine="268" endLine="274" />
      <method type="void" name="remove" startLine="276" endLine="278" />
      <class name="RefVectorEntry" startLine="282">
        <implements name="VectorEntry" />
        <javadoc>
          <text>* Vector entry backed by the vector. May be reused for higher performance</text>
        </javadoc>
        <declaration type="int" name="index" />
        <javadoc>
          <text>* Updates the entry</text>
        </javadoc>
        <method type="void" name="update" startLine="292" endLine="294" />
        <method type="int" name="index" startLine="296" endLine="298" />
        <method type="double" name="get" startLine="300" endLine="302" />
        <method type="void" name="set" startLine="304" endLine="306" />
      </class>
    </class>
  </class>
</source>
