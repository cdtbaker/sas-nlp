<?xml version="1.0" encoding="UTF-8"?>
<source package="no.uib.cipr.matrix">
  <import name="com.github.fommil.netlib.BLAS" />
  <import name="com.github.fommil.netlib.LAPACK" />
  <import name="org.netlib.util.intW" />
  <class name="AbstractSymmDenseMatrix" extends="AbstractDenseMatrix" startLine="27">
    <javadoc>
      <text>* Partial implementation of a symmetrical, dense matrix</text>
    </javadoc>
    <javadoc>
      <text>* Upper or lower part stored?</text>
    </javadoc>
    <declaration type="UpLo" name="uplo" />
    <javadoc>
      <text>* Constructor for AbstractSymmDenseMatrix</text>
    </javadoc>
    <method type="constructor" name="AbstractSymmDenseMatrix" startLine="40" endLine="43" />
    <javadoc>
      <text>* Constructor for AbstractSymmDenseMatrix</text>
    </javadoc>
    <method type="constructor" name="AbstractSymmDenseMatrix" startLine="48" endLine="50" />
    <javadoc>
      <text>* Constructor for AbstractSymmDenseMatrix</text>
    </javadoc>
    <method type="constructor" name="AbstractSymmDenseMatrix" startLine="55" endLine="61" />
    <method type="Matrix" name="multAdd" startLine="64" endLine="78">
      <declaration type="double[]" name="Bd" />
    </method>
    <method type="Matrix" name="transAmultAdd" startLine="81" endLine="83" />
    <method type="Matrix" name="rank1" startLine="86" endLine="100">
      <declaration type="double[]" name="xd" />
    </method>
    <method type="Matrix" name="rank2" startLine="103" endLine="116">
      <declaration type="double[]" name="xd" />
    </method>
    <method type="Vector" name="multAdd" startLine="119" endLine="132">
      <declaration type="double[]" name="xd" />
    </method>
    <method type="Vector" name="transMultAdd" startLine="135" endLine="137" />
    <method type="Matrix" name="rank1" startLine="140" endLine="153">
      <declaration type="double[]" name="Cd" />
    </method>
    <method type="Matrix" name="transRank1" startLine="156" endLine="168">
      <declaration type="double[]" name="Cd" />
    </method>
    <method type="Matrix" name="rank2" startLine="171" endLine="185">
      <declaration type="double[]" name="Bd" />
    </method>
    <method type="Matrix" name="transRank2" startLine="188" endLine="202">
      <declaration type="double[]" name="Bd" />
    </method>
    <method type="Matrix" name="solve" startLine="205" endLine="245">
      <declaration type="double[]" name="Xd" />
      <declaration type="double[]" name="newData" />
      <declaration type="int[]" name="ipiv" />
      <declaration type="double[]" name="work" />
      <declaration type="intW" name="info" />
      <declaration type="int" name="lwork" />
      <comment>Allocate factorization matrix</comment>
      <comment>Query optimal workspace</comment>
      <comment>Allocate workspace</comment>
      <comment>Solve</comment>
    </method>
    <method type="Vector" name="solve" startLine="248" endLine="252">
      <declaration type="DenseMatrix" name="B" />
    </method>
    <method type="Matrix" name="transSolve" startLine="255" endLine="257" />
    <method type="Vector" name="transSolve" startLine="260" endLine="262" />
    <method type="Matrix" name="SPDsolve" startLine="264" endLine="284">
      <declaration type="double[]" name="Xd" />
      <declaration type="intW" name="info" />
    </method>
    <method type="Matrix" name="transpose" startLine="287" endLine="289" />
  </class>
</source>
