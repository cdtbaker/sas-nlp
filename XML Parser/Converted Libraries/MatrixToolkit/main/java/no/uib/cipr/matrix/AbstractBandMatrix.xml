<?xml version="1.0" encoding="UTF-8"?>
<source package="no.uib.cipr.matrix">
  <import name="java.util.Arrays" />
  <import name="java.util.Iterator" />
  <class name="AbstractBandMatrix" extends="AbstractMatrix" startLine="26">
    <javadoc>
      <text>* Partial implementation of a banded matrix</text>
    </javadoc>
    <javadoc>
      <text>* Matrix data</text>
    </javadoc>
    <declaration type="double[]" name="data" />
    <javadoc>
      <text>* Number of upper and lower diagonals</text>
    </javadoc>
    <declaration type="int" name="kl" />
    <javadoc>
      <text>* Size of the matrix. It is always square</text>
    </javadoc>
    <declaration type="int" name="n" />
    <javadoc>
      <text>* Constructor for AbstractBandMatrix</text>
      <param>nSize of the matrix. Since the matrix must be square, this
 * equals both the number of rows and columns</param>
      <param>klNumber of diagonals below the main diagonal</param>
      <param>kuNumber of diagonals above the main diagonal</param>
    </javadoc>
    <method type="constructor" name="AbstractBandMatrix" startLine="57" endLine="67" />
    <javadoc>
      <text>* Constructor for AbstractBandMatrix</text>
      <param>AMatrix to copy from</param>
      <param>klNumber of diagonals below the main diagonal</param>
      <param>kuNumber of diagonals above the main diagonal</param>
    </javadoc>
    <method type="constructor" name="AbstractBandMatrix" startLine="79" endLine="81" />
    <javadoc>
      <text>* Constructor for AbstractBandMatrix</text>
      <param>AMatrix to copy from</param>
      <param>klNumber of diagonals below the main diagonal</param>
      <param>kuNumber of diagonals above the main diagonal</param>
      <param>deepTrue if a deep copy is made. For a shallow copy,
 * <code>A</code> must be a banded matrix</param>
    </javadoc>
    <method type="constructor" name="AbstractBandMatrix" startLine="96" endLine="112">
      <scope startLine="107" endLine="110" />
    </method>
    <javadoc>
      <text>* Returns the matrix contents</text>
    </javadoc>
    <method type="double[]" name="getData" startLine="117" endLine="119" />
    <method type="void" name="add" startLine="122" endLine="125" />
    <method type="void" name="set" startLine="128" endLine="131" />
    <method type="double" name="get" startLine="134" endLine="138" />
    <javadoc>
      <text>* Returns the number of lower diagonals</text>
    </javadoc>
    <method type="int" name="numSubDiagonals" startLine="143" endLine="145" />
    <javadoc>
      <text>* Returns the number of upper diagonals</text>
    </javadoc>
    <method type="int" name="numSuperDiagonals" startLine="150" endLine="152" />
    <javadoc>
      <text>* Returns true if the given indices are within the band</text>
    </javadoc>
    <method type="boolean" name="inBand" startLine="157" endLine="159" />
    <javadoc>
      <text>* Checks that the indices are within the band</text>
    </javadoc>
    <method type="void" name="checkBand" startLine="164" endLine="167" />
    <javadoc>
      <text>* Checks the row and column indices, and returns the linear data index</text>
    </javadoc>
    <method type="int" name="getIndex" startLine="172" endLine="175" />
    <javadoc>
      <text>* Set this matrix equal to the given matrix</text>
    </javadoc>
    <method type="void" name="copy" startLine="180" endLine="184" />
    <method type="Matrix" name="set" startLine="187" endLine="207">
      <declaration type="AbstractBandMatrix" name="Bb" />
      <declaration type="double[]" name="Bd" />
    </method>
    <method type="Matrix" name="zero" startLine="210" endLine="213" />
    <method type="Iterator<MatrixEntry>" name="iterator" startLine="216" endLine="218" />
    <class name="BandMatrixIterator" extends="RefMatrixIterator" startLine="220">
      <javadoc>
        <text>* Iterator over a band matrix</text>
      </javadoc>
      <javadoc>
        <text>* Matrix bandwidths. Cannot be taken directly from the matrix since
 * that breaks iterating over symmetrical matrices</text>
      </javadoc>
      <declaration type="int" name="lkl" />
      <method type="constructor" name="BandMatrixIterator" startLine="231" endLine="234" />
      <method type="constructor" name="BandMatrixIterator" startLine="236" endLine="238" />
      <method type="MatrixEntry" name="next" startLine="241" endLine="254">
        <scope startLine="248" endLine="251" />
        <comment>Traversal first down the columns, then the rows</comment>
      </method>
    </class>
  </class>
</source>
