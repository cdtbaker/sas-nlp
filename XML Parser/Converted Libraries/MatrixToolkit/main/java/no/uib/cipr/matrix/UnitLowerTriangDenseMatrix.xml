<?xml version="1.0" encoding="UTF-8"?>
<source package="no.uib.cipr.matrix">
  <class name="UnitLowerTriangDenseMatrix" extends="LowerTriangDenseMatrix" startLine="24">
    <javadoc>
      <text>* Unit lower triangular dense matrix. Almost the same as the{@link no.uib.cipr.matrix.LowerTriangDenseMatrix LowerTriangDenseMatrix},
 * but additionally assumes the main diagonal to be all ones. However it does
 * not access it, so it may be actually be different.</text>
    </javadoc>
    <javadoc>
      <text>* Constructor for UnitLowerTriangDenseMatrix</text>
      <param>nSize of the matrix. Since the matrix must be square, this
 * equals both the number of rows and columns</param>
    </javadoc>
    <method type="constructor" name="UnitLowerTriangDenseMatrix" startLine="39" endLine="41" />
    <javadoc>
      <text>* Constructor for UnitLowerTriangDenseMatrix</text>
      <param>AMatrix to copy from. Only the strictly lower triangular part
 * is copied</param>
    </javadoc>
    <method type="constructor" name="UnitLowerTriangDenseMatrix" startLine="50" endLine="52" />
    <javadoc>
      <text>* Constructor for UnitLowerTriangDenseMatrix</text>
      <param>AMatrix to copy from. Only the strictly lower triangular part
 * is copied</param>
      <param>deepIf true, <code>A</code> is copied, else a shallow copy is
 * made and the matrices share underlying storage. For this,
 * <code>A</code> must be a dense matrix</param>
    </javadoc>
    <method type="constructor" name="UnitLowerTriangDenseMatrix" startLine="65" endLine="67" />
    <method type="void" name="add" startLine="70" endLine="74" />
    <method type="double" name="get" startLine="77" endLine="81" />
    <method type="void" name="set" startLine="84" endLine="88" />
    <method type="void" name="copy" startLine="91" endLine="95" />
    <method type="UnitLowerTriangDenseMatrix" name="copy" startLine="98" endLine="100" />
    <method type="Matrix" name="zero" startLine="103" endLine="105" />
  </class>
</source>
