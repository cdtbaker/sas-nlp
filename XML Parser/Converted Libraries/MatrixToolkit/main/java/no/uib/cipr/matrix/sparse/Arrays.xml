<?xml version="1.0" encoding="UTF-8"?>
<source package="no.uib.cipr.matrix.sparse">
  <class name="Arrays" startLine="23">
    <javadoc>
      <text>* Array utilities. Complements <code>java.util.Arrays</code></text>
      <deprecated>java.utils.Arrays and Google Guava provide this functionality nowadays.</deprecated>
    </javadoc>
    <method type="constructor" name="Arrays" startLine="30" endLine="32">
      <comment>No need to instantiate</comment>
    </method>
    <javadoc>
      <text>* Searches for a key in a sorted array, and returns an index to an element
 * which is greater than or equal key.</text>
      <param>indexSorted array of integers</param>
      <param>keySearch for something equal or greater</param>
      <param>beginStart posisiton in the index</param>
      <param>endOne past the end position in the index</param>
      <return>end if nothing greater or equal was found, else an index
 * satisfying the search criteria</return>
    </javadoc>
    <method type="int" name="binarySearchGreater" startLine="50" endLine="52" />
    <javadoc>
      <text>* Searches for a key in a sorted array, and returns an index to an element
 * which is greater than or equal key.</text>
      <param>indexSorted array of integers</param>
      <param>keySearch for something equal or greater</param>
      <return>index.length if nothing greater or equal was found, else an index
 * satisfying the search criteria</return>
    </javadoc>
    <method type="int" name="binarySearchGreater" startLine="65" endLine="67" />
    <javadoc>
      <text>* Searches for a key in a sorted array, and returns an index to an element
 * which is smaller than or equal key.</text>
      <param>indexSorted array of integers</param>
      <param>keySearch for something equal or greater</param>
      <param>beginStart posisiton in the index</param>
      <param>endOne past the end position in the index</param>
      <return>begin-1 if nothing smaller or equal was found, else an index
 * satisfying the search criteria</return>
    </javadoc>
    <method type="int" name="binarySearchSmaller" startLine="85" endLine="87" />
    <javadoc>
      <text>* Searches for a key in a sorted array, and returns an index to an element
 * which is smaller than or equal key.</text>
      <param>indexSorted array of integers</param>
      <param>keySearch for something equal or greater</param>
      <return>-1 if nothing smaller or equal was found, else an index
 * satisfying the search criteria</return>
    </javadoc>
    <method type="int" name="binarySearchSmaller" startLine="100" endLine="102" />
    <javadoc>
      <text>* Searches for a key in a subset of a sorted array.</text>
      <param>indexSorted array of integers</param>
      <param>keyKey to search for</param>
      <param>beginStart posisiton in the index</param>
      <param>endOne past the end position in the index</param>
      <return>Integer index to key. -1 if not found</return>
    </javadoc>
    <method type="int" name="binarySearch" startLine="117" endLine="119" />
    <method type="int" name="binarySearchInterval" startLine="122" endLine="154">
      <declaration type="int" name="mid" />
      <scope startLine="135" endLine="144" />
      <comment>Zero length array?</comment>
      <comment>Last index</comment>
      <comment>The usual binary search</comment>
      <comment>No direct match, but an inf/sup was found</comment>
      <comment>No inf/sup, return at the end of the array</comment>
      <comment>One past end</comment>
      <comment>One before start</comment>
    </method>
    <javadoc>
      <text>* Finds the number of repeated entries</text>
      <param>numMaximum index value</param>
      <param>indIndices to check for repetitions</param>
      <return>Array of length <code>num</code> with the number of repeated
 * indices of <code>ind</code></return>
    </javadoc>
    <method type="int[]" name="bandwidth" startLine="166" endLine="173">
      <declaration type="int[]" name="nz" />
    </method>
  </class>
</source>
