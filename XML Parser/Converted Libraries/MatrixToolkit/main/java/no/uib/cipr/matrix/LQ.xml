<?xml version="1.0" encoding="UTF-8"?>
<source package="no.uib.cipr.matrix">
  <import name="com.github.fommil.netlib.LAPACK" />
  <import name="org.netlib.util.intW" />
  <class name="LQ" extends="OrthogonalComputer" startLine="26">
    <javadoc>
      <text>* Computes LQ decompositions</text>
    </javadoc>
    <javadoc>
      <text>* Constructs an empty LQ decomposition</text>
      <param>mNumber of rows</param>
      <param>nNumber of columns. Must be larger than or equal the number of
 * rows</param>
    </javadoc>
    <method type="constructor" name="LQ" startLine="40" endLine="78">
      <declaration type="int" name="lwork" />
      <scope startLine="49" endLine="61">
        <declaration type="intW" name="info" />
      </scope>
      <scope startLine="64" endLine="76">
        <declaration type="intW" name="info" />
      </scope>
      <comment>Query optimal workspace. First for computing the factorization</comment>
      <comment>Workspace needed for generating an explicit orthogonal matrix</comment>
    </method>
    <javadoc>
      <text>* Convenience method to compute a LQ decomposition</text>
      <param>AMatrix to decompose. Not modified</param>
      <return>Newly allocated decomposition</return>
    </javadoc>
    <method type="LQ" name="factorize" startLine="87" endLine="89" />
    <method type="LQ" name="factor" startLine="92" endLine="130">
      <declaration type="intW" name="info" />
      <comment>Calculate factorisation, and extract the triangular factor</comment>
      <comment>Generate the orthogonal matrix</comment>
    </method>
    <javadoc>
      <text>* Returns the lower triangular factor</text>
    </javadoc>
    <method type="LowerTriangDenseMatrix" name="getL" startLine="135" endLine="137" />
  </class>
</source>
