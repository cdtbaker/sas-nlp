<?xml version="1.0" encoding="UTF-8"?>
<source package="no.uib.cipr.matrix">
  <class name="LowerTriangDenseMatrix" extends="AbstractTriangDenseMatrix" startLine="24">
    <javadoc>
      <text>* Lower triangular dense matrix. It has the same storage layout as the{@link no.uib.cipr.matrix.DenseMatrix DenseMatrix}, but only refers to
 * elements below or on the main diagonal. The remaining elements are assumed to
 * be zero, but since they are never accessed, they need not be.</text>
    </javadoc>
    <javadoc>
      <text>* Constructor for LowerTriangDenseMatrix</text>
      <param>nSize of the matrix. Since the matrix must be square, this
 * equals both the number of rows and columns</param>
    </javadoc>
    <method type="constructor" name="LowerTriangDenseMatrix" startLine="39" endLine="41" />
    <javadoc>
      <text>* Constructor for LowerTriangDenseMatrix</text>
      <param>nSize of the matrix. Since the matrix must be square, this
 * equals both the number of rows and columns</param>
    </javadoc>
    <method type="constructor" name="LowerTriangDenseMatrix" startLine="50" endLine="52" />
    <javadoc>
      <text>* Constructor for LowerTriangDenseMatrix</text>
      <param>AMatrix to copy from. Only the lower triangular part is copied</param>
    </javadoc>
    <method type="constructor" name="LowerTriangDenseMatrix" startLine="60" endLine="62" />
    <javadoc>
      <text>* Constructor for LowerTriangDenseMatrix</text>
      <param>AMatrix to copy from. Only the lower triangular part is copied</param>
      <param>deepIf true, <code>A</code> is copied, else a shallow copy is
 * made and the matrices share underlying storage. For this,
 * <code>A</code> must be a dense matrix</param>
    </javadoc>
    <method type="constructor" name="LowerTriangDenseMatrix" startLine="74" endLine="76" />
    <javadoc>
      <text>* Constructor for LowerTriangDenseMatrix</text>
      <param>AMatrix to copy from. Only the lower triangular part is copied</param>
      <param>deepIf true, <code>A</code> is copied, else a shallow copy is
 * made and the matrices share underlying storage. For this,
 * <code>A</code> must be a dense matrix</param>
    </javadoc>
    <method type="constructor" name="LowerTriangDenseMatrix" startLine="88" endLine="90" />
    <javadoc>
      <text>* Constructor for LowerTriangDenseMatrix</text>
      <param>AMatrix to copy from. Only the lower triangular part is copied</param>
      <param>kSize of matrix to refer.
 * <code>k&lt;min(numRows,numColumns)</code></param>
    </javadoc>
    <method type="constructor" name="LowerTriangDenseMatrix" startLine="101" endLine="103" />
    <javadoc>
      <text>* Constructor for LowerTriangDenseMatrix</text>
      <param>AMatrix to copy from. Only the lower triangular part is copied</param>
      <param>kSize of matrix to refer.
 * <code>k&lt;min(numRows,numColumns)</code></param>
      <param>deepIf true, <code>A</code> is copied, else a shallow copy is
 * made and the matrices share underlying storage. For this,
 * <code>A</code> must be a dense matrix</param>
    </javadoc>
    <method type="constructor" name="LowerTriangDenseMatrix" startLine="118" endLine="120" />
    <javadoc>
      <text>* Constructor for LowerTriangDenseMatrix</text>
      <param>AMatrix to copy from. Only the lower triangular part is copied</param>
      <param>kSize of matrix to refer.
 * <code>k&lt;min(numRows,numColumns)</code></param>
      <param>deepIf true, <code>A</code> is copied, else a shallow copy is
 * made and the matrices share underlying storage. For this,
 * <code>A</code> must be a dense matrix</param>
    </javadoc>
    <method type="constructor" name="LowerTriangDenseMatrix" startLine="135" endLine="137" />
    <method type="void" name="add" startLine="140" endLine="144" />
    <method type="double" name="get" startLine="147" endLine="151" />
    <method type="void" name="set" startLine="154" endLine="158" />
    <method type="LowerTriangDenseMatrix" name="copy" startLine="161" endLine="163" />
    <method type="void" name="copy" startLine="166" endLine="170" />
    <method type="Matrix" name="set" startLine="173" endLine="177" />
  </class>
</source>
