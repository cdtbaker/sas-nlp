<?xml version="1.0" encoding="UTF-8"?>
<source package="no.uib.cipr.matrix.io">
  <import name="java.io.OutputStream" />
  <import name="java.io.PrintWriter" />
  <import name="java.io.Writer" />
  <import name="java.util.Locale" />
  <class name="MatrixVectorWriter" extends="PrintWriter" startLine="28">
    <javadoc>
      <text>* Writes matrices and vectors</text>
    </javadoc>
    <javadoc>
      <text>* Constructor for MatrixVectorWriter</text>
      <param>out</param>
    </javadoc>
    <method type="constructor" name="MatrixVectorWriter" startLine="38" endLine="40" />
    <javadoc>
      <text>* Constructor for MatrixVectorWriter</text>
      <param>out</param>
      <param>autoFlush</param>
    </javadoc>
    <method type="constructor" name="MatrixVectorWriter" startLine="48" endLine="50" />
    <javadoc>
      <text>* Constructor for MatrixVectorWriter</text>
      <param>out</param>
    </javadoc>
    <method type="constructor" name="MatrixVectorWriter" startLine="57" endLine="59" />
    <javadoc>
      <text>* Constructor for MatrixVectorWriter</text>
      <param>out</param>
      <param>autoFlush</param>
    </javadoc>
    <method type="constructor" name="MatrixVectorWriter" startLine="67" endLine="69" />
    <javadoc>
      <text>* Shifts the indices. Useful for converting between 0- and 1-based
 * indicing.</text>
      <param>numAdded to every index</param>
      <param>indicesIndices to shift</param>
    </javadoc>
    <method type="void" name="add" startLine="80" endLine="83" />
    <javadoc>
      <text>* Prints the matrix info</text>
    </javadoc>
    <method type="void" name="printMatrixInfo" startLine="88" endLine="90" />
    <javadoc>
      <text>* Prints the vector info</text>
    </javadoc>
    <method type="void" name="printVectorInfo" startLine="95" endLine="97" />
    <javadoc>
      <text>* Prints the matrix size</text>
    </javadoc>
    <method type="void" name="printMatrixSize" startLine="102" endLine="107" />
    <javadoc>
      <text>* Prints the matrix size. Assumes coordinate format</text>
    </javadoc>
    <method type="void" name="printMatrixSize" startLine="112" endLine="115" />
    <javadoc>
      <text>* Prints the vector size</text>
    </javadoc>
    <method type="void" name="printVectorSize" startLine="120" endLine="125" />
    <javadoc>
      <text>* Prints the vector size. Assumes coordinate format</text>
    </javadoc>
    <method type="void" name="printVectorSize" startLine="130" endLine="132" />
    <javadoc>
      <text>* Prints an array to the underlying stream. One entry per line.</text>
    </javadoc>
    <method type="void" name="printArray" startLine="137" endLine="140" />
    <javadoc>
      <text>* Prints an array to the underlying stream. One entry per line.</text>
    </javadoc>
    <method type="void" name="printArray" startLine="145" endLine="148" />
    <javadoc>
      <text>* Prints an array to the underlying stream. One entry per line. The first
 * array specifies the real entries, and the second is the imaginary entries</text>
    </javadoc>
    <method type="void" name="printArray" startLine="154" endLine="161">
      <declaration type="int" name="size" />
    </method>
    <javadoc>
      <text>* Prints an array to the underlying stream. One entry per line. The first
 * array specifies the real entries, and the second is the imaginary entries</text>
    </javadoc>
    <method type="void" name="printArray" startLine="167" endLine="174">
      <declaration type="int" name="size" />
    </method>
    <javadoc>
      <text>* Prints an array to the underlying stream. One entry per line.</text>
    </javadoc>
    <method type="void" name="printArray" startLine="179" endLine="182" />
    <javadoc>
      <text>* Prints an array to the underlying stream. One entry per line.</text>
    </javadoc>
    <method type="void" name="printArray" startLine="187" endLine="190" />
    <javadoc>
      <text>* Prints the coordinate format to the underlying stream. One index and
 * entry on each line. The offset is added to the index, typically, this can
 * transform from a 0-based indicing to a 1-based.</text>
    </javadoc>
    <method type="void" name="printCoordinate" startLine="197" endLine="204">
      <declaration type="int" name="size" />
    </method>
    <javadoc>
      <text>* Prints the coordinate format to the underlying stream. One index and
 * entry on each line. The offset is added to the index, typically, this can
 * transform from a 0-based indicing to a 1-based.</text>
    </javadoc>
    <method type="void" name="printCoordinate" startLine="211" endLine="218">
      <declaration type="int" name="size" />
    </method>
    <javadoc>
      <text>* Prints the coordinate format to the underlying stream. One index and
 * entry on each line. The offset is added to the index, typically, this can
 * transform from a 0-based indicing to a 1-based.</text>
    </javadoc>
    <method type="void" name="printCoordinate" startLine="225" endLine="232">
      <declaration type="int" name="size" />
    </method>
    <javadoc>
      <text>* Prints the coordinate format to the underlying stream. One index and
 * entry on each line. The offset is added to the index, typically, this can
 * transform from a 0-based indicing to a 1-based.</text>
    </javadoc>
    <method type="void" name="printCoordinate" startLine="239" endLine="246">
      <declaration type="int" name="size" />
    </method>
    <javadoc>
      <text>* Prints the coordinate format to the underlying stream. One index pair and
 * entry on each line. The offset is added to each index, typically, this
 * can transform from a 0-based indicing to a 1-based.</text>
    </javadoc>
    <method type="void" name="printCoordinate" startLine="254" endLine="262">
      <declaration type="int" name="size" />
    </method>
    <javadoc>
      <text>* Prints the coordinate format to the underlying stream. One index pair and
 * entry on each line. The offset is added to each index, typically, this
 * can transform from a 0-based indicing to a 1-based.</text>
    </javadoc>
    <method type="void" name="printCoordinate" startLine="270" endLine="278">
      <declaration type="int" name="size" />
    </method>
    <javadoc>
      <text>* Prints the coordinate format to the underlying stream. One index and
 * entry on each line. The offset is added to each index, typically, this
 * can transform from a 0-based indicing to a 1-based. The first float array
 * specifies the real entries, and the second is the imaginary entries</text>
    </javadoc>
    <method type="void" name="printCoordinate" startLine="287" endLine="295">
      <declaration type="int" name="size" />
    </method>
    <javadoc>
      <text>* Prints the coordinate format to the underlying stream. One index and
 * entry on each line. The offset is added to each index, typically, this
 * can transform from a 0-based indicing to a 1-based. The first double
 * array specifies the real entries, and the second is the imaginary entries</text>
    </javadoc>
    <method type="void" name="printCoordinate" startLine="304" endLine="312">
      <declaration type="int" name="size" />
    </method>
    <javadoc>
      <text>* Prints the coordinate format to the underlying stream. One index pair and
 * entry on each line. The offset is added to each index, typically, this
 * can transform from a 0-based indicing to a 1-based. The first float array
 * specifies the real entries, and the second is the imaginary entries</text>
    </javadoc>
    <method type="void" name="printCoordinate" startLine="321" endLine="330">
      <declaration type="int" name="size" />
    </method>
    <javadoc>
      <text>* Prints the coordinate format to the underlying stream. One index pair and
 * entry on each line. The offset is added to each index, typically, this
 * can transform from a 0-based indicing to a 1-based. The first double
 * array specifies the real entries, and the second is the imaginary entries</text>
    </javadoc>
    <method type="void" name="printCoordinate" startLine="339" endLine="348">
      <declaration type="int" name="size" />
    </method>
    <javadoc>
      <text>* Prints the coordinate format to the underlying stream. One index pair and
 * entry on each line. The offset is added to each index, typically, this
 * can transform from a 0-based indicing to a 1-based.</text>
    </javadoc>
    <method type="void" name="printCoordinate" startLine="355" endLine="363">
      <declaration type="int" name="size" />
    </method>
    <javadoc>
      <text>* Prints the coordinate format to the underlying stream. One index pair and
 * entry on each line. The offset is added to each index, typically, this
 * can transform from a 0-based indicing to a 1-based.</text>
    </javadoc>
    <method type="void" name="printCoordinate" startLine="370" endLine="378">
      <declaration type="int" name="size" />
    </method>
    <javadoc>
      <text>* Prints the coordinates to the underlying stream. One index pair on each
 * line. The offset is added to each index, typically, this can transform
 * from a 0-based indicing to a 1-based.</text>
    </javadoc>
    <method type="void" name="printPattern" startLine="385" endLine="392">
      <declaration type="int" name="size" />
    </method>
    <javadoc>
      <text>* Prints the coordinates to the underlying stream. One index on each line.
 * The offset is added to each index, typically, this can transform from a
 * 0-based indicing to a 1-based.</text>
    </javadoc>
    <method type="void" name="printPattern" startLine="399" endLine="403">
      <declaration type="int" name="size" />
    </method>
    <javadoc>
      <text>* Prints the coordinate format to the underlying stream. One index pair and
 * entry on each line</text>
    </javadoc>
    <method type="void" name="printCoordinate" startLine="409" endLine="411" />
    <javadoc>
      <text>* Prints the coordinate format to the underlying stream. One index pair and
 * entry on each line</text>
    </javadoc>
    <method type="void" name="printCoordinate" startLine="417" endLine="419" />
    <javadoc>
      <text>* Prints the coordinate format to the underlying stream. One index pair and
 * entry on each line. The first double array specifies the real entries,
 * and the second is the imaginary entries</text>
    </javadoc>
    <method type="void" name="printCoordinate" startLine="427" endLine="429" />
    <javadoc>
      <text>* Prints the coordinate format to the underlying stream. One index pair and
 * entry on each line. The first double array specifies the real entries,
 * and the second is the imaginary entries</text>
    </javadoc>
    <method type="void" name="printCoordinate" startLine="437" endLine="439" />
    <javadoc>
      <text>* Prints the coordinate format to the underlying stream. One index pair and
 * entry on each line</text>
    </javadoc>
    <method type="void" name="printCoordinate" startLine="445" endLine="447" />
    <javadoc>
      <text>* Prints the coordinate format to the underlying stream. One index pair and
 * entry on each line</text>
    </javadoc>
    <method type="void" name="printCoordinate" startLine="453" endLine="455" />
    <javadoc>
      <text>* Prints the coordinates to the underlying stream. One index pair on each
 * line</text>
    </javadoc>
    <method type="void" name="printPattern" startLine="461" endLine="463" />
    <javadoc>
      <text>* Prints the coordinate format to the underlying stream. One index and
 * entry on each line</text>
    </javadoc>
    <method type="void" name="printCoordinate" startLine="469" endLine="471" />
    <javadoc>
      <text>* Prints the coordinate format to the underlying stream. One index and
 * entry on each line</text>
    </javadoc>
    <method type="void" name="printCoordinate" startLine="477" endLine="479" />
    <javadoc>
      <text>* Prints the coordinate format to the underlying stream. One index and
 * entry on each line. The first double array specifies the real entries,
 * and the second is the imaginary entries</text>
    </javadoc>
    <method type="void" name="printCoordinate" startLine="486" endLine="488" />
    <javadoc>
      <text>* Prints the coordinate format to the underlying stream. One index and
 * entry on each line. The first double array specifies the real entries,
 * and the second is the imaginary entries</text>
    </javadoc>
    <method type="void" name="printCoordinate" startLine="495" endLine="497" />
    <javadoc>
      <text>* Prints the coordinate format to the underlying stream. One index and
 * entry on each line</text>
    </javadoc>
    <method type="void" name="printCoordinate" startLine="503" endLine="505" />
    <javadoc>
      <text>* Prints the coordinate format to the underlying stream. One index and
 * entry on each line</text>
    </javadoc>
    <method type="void" name="printCoordinate" startLine="511" endLine="513" />
    <javadoc>
      <text>* Prints the coordinates to the underlying stream. One index on each line</text>
    </javadoc>
    <method type="void" name="printPattern" startLine="518" endLine="520" />
    <javadoc>
      <text>* Prints all the comments. Prepends a '%' and appends a newline to every
 * comment</text>
    </javadoc>
    <method type="void" name="printComments" startLine="526" endLine="529" />
  </class>
</source>
