<?xml version="1.0" encoding="UTF-8"?>
<source package="no.uib.cipr.matrix">
  <import name="java.util.Arrays" />
  <import name="com.github.fommil.netlib.BLAS" />
  <import name="com.github.fommil.netlib.LAPACK" />
  <import name="org.netlib.util.intW" />
  <class name="BandMatrix" extends="AbstractBandMatrix" startLine="30">
    <javadoc>
      <text>* Banded matrix. The banded matrix is a useful sparse structure for many kinds
 * of direct computations, however it should only be used if the band is
 * sufficiently narrow as wide bands actually wastes both memory and compute
 * time. The matrix
 * <p>
 * <table border="1">
 * <tr>
 * <td>a<sub>11</sub></td>
 * <td>a<sub>12</sub></td>
 * <td>&nbsp;</td>
 * <td>&nbsp;</td>
 * <td>&nbsp;</td>
 * </tr>
 * <tr>
 * <td>a<sub>21</sub></td>
 * <td>a<sub>22</sub></td>
 * <td>a<sub>23</sub></td>
 * <td>&nbsp;</td>
 * <td>&nbsp;</td>
 * </tr>
 * <tr>
 * <td>a<sub>31</sub></td>
 * <td>a<sub>32</sub></td>
 * <td>a<sub>33</sub></td>
 * <td>a<sub>34</sub></td>
 * <td>&nbsp;</td>
 * </tr>
 * <tr>
 * <td>&nbsp;</td>
 * <td>a<sub>42</sub></td>
 * <td>a<sub>43</sub></td>
 * <td>a<sub>44</sub></td>
 * <td>a<sub>45</sub></td>
 * </tr>
 * <tr>
 * <td>&nbsp;</td>
 * <td>&nbsp;</td>
 * <td>a<sub>53</sub></td>
 * <td>a<sub>54</sub></td>
 * <td>a<sub>55</sub></td>
 * </tr>
 * </table>
 * </p>
 * <p>
 * has two lower diagonals and one upper diagonal. It will be stored in the
 * array
 * </p>
 * <p>
 * <table border="1">
 * <tr>
 * <td>&nbsp;</td>
 * <td>a<sub>11</sub></td>
 * <td>a<sub>21</sub></td>
 * <td>a<sub>31</sub></td>
 * <td>a<sub>21</sub></td>
 * <td>a<sub>22</sub></td>
 * <td>a<sub>32</sub></td>
 * <td>a<sub>42</sub></td>
 * <td>a<sub>23</sub></td>
 * <td>a<sub>33</sub></td>
 * <td>a<sub>43</sub></td>
 * <td>a<sub>53</sub></td>
 * <td>a<sub>34</sub></td>
 * <td>a<sub>44</sub></td>
 * <td>a<sub>54</sub></td>
 * <td>&nbsp;</td>
 * <td>a<sub>45</sub></td>
 * <td>a<sub>55</sub></td>
 * <td>&nbsp;</td>
 * <td>&nbsp;</td>
 * </tr>
 * </table>
 * </p>
 * <p>
 * Empty cells are allocated, but never referenced.
 * </p></text>
    </javadoc>
    <javadoc>
      <text>* Constructor for BandMatrix</text>
      <param>nSize of the matrix. Since the matrix must be square, this
 * equals both the number of rows and columns</param>
      <param>klNumber of bands above the main diagonal (superdiagonals)</param>
      <param>kuNumber of bands below the main diagonal (subdiagonals)</param>
    </javadoc>
    <method type="constructor" name="BandMatrix" startLine="121" endLine="123" />
    <javadoc>
      <text>* Constructor for BandMatrix</text>
      <param>AMatrix to copy contents from. Only the parts of <code>A</code>
 * that lie within the allocated band are copied over, the rest
 * is ignored</param>
      <param>klNumber of bands above the main diagonal (superdiagonals)</param>
      <param>kuNumber of bands below the main diagonal (subdiagonals)</param>
    </javadoc>
    <method type="constructor" name="BandMatrix" startLine="137" endLine="139" />
    <javadoc>
      <text>* Constructor for BandMatrix</text>
      <param>AMatrix to copy contents from. Only the parts of <code>A</code>
 * that lie within the allocated band are copied over, the rest
 * is ignored</param>
      <param>klNumber of bands above the main diagonal (superdiagonals)</param>
      <param>kuNumber of bands below the main diagonal (subdiagonals)</param>
      <param>deepTrue for a deep copy. For shallow copies, <code>A</code>
 * must be a banded matrix</param>
    </javadoc>
    <method type="constructor" name="BandMatrix" startLine="156" endLine="158" />
    <method type="BandMatrix" name="copy" startLine="161" endLine="163" />
    <method type="Matrix" name="zero" startLine="166" endLine="169" />
    <method type="Vector" name="multAdd" startLine="172" endLine="185">
      <declaration type="double[]" name="xd" />
    </method>
    <method type="Vector" name="transMultAdd" startLine="188" endLine="201">
      <declaration type="double[]" name="xd" />
    </method>
    <method type="Matrix" name="solve" startLine="204" endLine="229">
      <declaration type="double[]" name="Xd" />
      <declaration type="BandMatrix" name="Af" />
      <declaration type="int[]" name="ipiv" />
      <declaration type="intW" name="info" />
      <comment>Allocate factorization matrix. The factorization matrix will be</comment>
      <comment>large enough to accomodate any pivots</comment>
    </method>
    <method type="Vector" name="solve" startLine="232" endLine="236">
      <declaration type="DenseMatrix" name="B" />
    </method>
    <method type="Matrix" name="transpose" startLine="239" endLine="253">
      <scope startLine="246" endLine="250">
        <declaration type="double" name="value" />
      </scope>
    </method>
  </class>
</source>
