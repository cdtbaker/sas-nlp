<?xml version="1.0" encoding="UTF-8"?>
<source package="no.uib.cipr.matrix.sparse">
  <import name="no.uib.cipr.matrix.Matrix" />
  <import name="no.uib.cipr.matrix.Vector" />
  <class name="AbstractIterativeSolver" startLine="26">
    <implements name="IterativeSolver" />
    <javadoc>
      <text>* Partial implementation of an iterative solver</text>
    </javadoc>
    <javadoc>
      <text>* Preconditioner to use</text>
    </javadoc>
    <declaration type="Preconditioner" name="M" />
    <javadoc>
      <text>* Iteration monitor</text>
    </javadoc>
    <declaration type="IterationMonitor" name="iter" />
    <javadoc>
      <text>* Constructor for AbstractIterativeSolver. Does not use preconditioning,
 * and uses the default linear iteration object.</text>
    </javadoc>
    <method type="constructor" name="AbstractIterativeSolver" startLine="45" endLine="48" />
    <method type="void" name="setPreconditioner" startLine="50" endLine="52" />
    <method type="Preconditioner" name="getPreconditioner" startLine="54" endLine="56" />
    <method type="IterationMonitor" name="getIterationMonitor" startLine="58" endLine="60" />
    <method type="void" name="setIterationMonitor" startLine="62" endLine="64" />
    <javadoc>
      <text>* Checks sizes of input data for {@link #solve(Matrix,Vector,Vector)}.
 * Throws an exception if the sizes does not match.</text>
    </javadoc>
    <method type="void" name="checkSizes" startLine="70" endLine="77" />
    <class name="IdentityPreconditioner" startLine="79">
      <implements name="Preconditioner" />
      <javadoc>
        <text>* Identity preconditioner which does nothing</text>
      </javadoc>
      <method type="Vector" name="apply" startLine="84" endLine="86" />
      <method type="Vector" name="transApply" startLine="88" endLine="90" />
      <method type="void" name="setMatrix" startLine="92" endLine="94">
        <comment>nothing to do</comment>
      </method>
    </class>
  </class>
</source>
