<?xml version="1.0" encoding="UTF-8"?>
<source package="no.uib.cipr.matrix">
  <import name="java.text.DecimalFormat" />
  <import name="java.util.Arrays" />
  <class name="AbstractDenseMatrix" extends="AbstractMatrix" startLine="26">
    <javadoc>
      <text>* Partial implementation of a dense matrix</text>
    </javadoc>
    <javadoc>
      <text>* Matrix contents</text>
    </javadoc>
    <declaration type="double[]" name="data" />
    <javadoc>
      <text>* Constructor for AbstractDenseMatrix. The matrix contents will be set to
 * zero</text>
      <param>numRowsNumber of rows</param>
      <param>numColumnsNumber of columns</param>
    </javadoc>
    <method type="constructor" name="AbstractDenseMatrix" startLine="45" endLine="60">
      <declaration type="long" name="size" />
      <scope startLine="53" endLine="57" />
      <comment>We know that numRows and numColumns is positive from the super</comment>
      <comment>constructor.</comment>
    </method>
    <javadoc>
      <text>* Constructor for AbstractDenseMatrix. Matrix is copied from the supplied
 * matrix</text>
      <param>AMatrix to copy from</param>
    </javadoc>
    <method type="constructor" name="AbstractDenseMatrix" startLine="69" endLine="71" />
    <javadoc>
      <text>* Constructor for AbstractDenseMatrix. Matrix is copied from the supplied
 * matrix</text>
      <param>AMatrix to copy from</param>
      <param>deepTrue for deep copy, false for reference</param>
    </javadoc>
    <method type="constructor" name="AbstractDenseMatrix" startLine="82" endLine="90">
      <scope startLine="85" endLine="88" />
    </method>
    <method name="copy" type="void" startLine="92" endLine="95" />
    <javadoc>
      <text>* Set this matrix equal to the given matrix</text>
    </javadoc>
    <javadoc>
      <text>* Returns the matrix contents. Ordering depends on the underlying storage
 * assumptions</text>
    </javadoc>
    <method type="double[]" name="getData" startLine="101" endLine="103" />
    <method type="void" name="add" startLine="106" endLine="108" />
    <method type="void" name="set" startLine="111" endLine="113" />
    <method type="double" name="get" startLine="116" endLine="118" />
    <javadoc>
      <text>* Checks the row and column indices, and returns the linear data index</text>
    </javadoc>
    <method type="int" name="getIndex" startLine="123" endLine="126" />
    <method type="Matrix" name="set" startLine="129" endLine="145">
      <declaration type="double[]" name="Bd" />
      <comment>using instanceof results in weird problems</comment>
      <comment>with implementations that mask some values</comment>
    </method>
    <method type="Matrix" name="zero" startLine="148" endLine="151" />
    <method type="String" name="toString" startLine="154" endLine="168">
      <declaration type="StringBuilder" name="out" />
      <declaration type="DecimalFormat" name="df" />
      <scope startLine="158" endLine="165">
        <scope startLine="159" endLine="163">
          <declaration type="double" name="value" />
        </scope>
      </scope>
    </method>
  </class>
</source>
