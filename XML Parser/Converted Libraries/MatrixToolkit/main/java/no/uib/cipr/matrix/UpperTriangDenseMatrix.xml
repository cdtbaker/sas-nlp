<?xml version="1.0" encoding="UTF-8"?>
<source package="no.uib.cipr.matrix">
  <class name="UpperTriangDenseMatrix" extends="AbstractTriangDenseMatrix" startLine="24">
    <javadoc>
      <text>* Upper triangular dense matrix. It has the same storage layout as the{@link no.uib.cipr.matrix.DenseMatrix DenseMatrix}, but only refers to
 * elements above or on the main diagonal. The remaining elements are assumed to
 * be zero, but since they are never accessed, they need not be.</text>
    </javadoc>
    <javadoc>
      <text>* Constructor for UpperTriangDenseMatrix</text>
      <param>nSize of the matrix. Since the matrix must be square, this
 * equals both the number of rows and columns</param>
    </javadoc>
    <method type="constructor" name="UpperTriangDenseMatrix" startLine="39" endLine="41" />
    <javadoc>
      <text>* Constructor for UpperTriangDenseMatrix</text>
      <param>nSize of the matrix. Since the matrix must be square, this
 * equals both the number of rows and columns</param>
    </javadoc>
    <method type="constructor" name="UpperTriangDenseMatrix" startLine="50" endLine="52" />
    <javadoc>
      <text>* Constructor for UpperTriangDenseMatrix</text>
      <param>AMatrix to copy from. Only the upper triangular part is copied</param>
    </javadoc>
    <method type="constructor" name="UpperTriangDenseMatrix" startLine="60" endLine="62" />
    <javadoc>
      <text>* Constructor for UpperTriangDenseMatrix</text>
      <param>AMatrix to copy from. Only the upper triangular part is copied</param>
      <param>deepTrue for deep copy, false for reference (in which case
 * <code>A</code> must be a dense matrix)</param>
    </javadoc>
    <method type="constructor" name="UpperTriangDenseMatrix" startLine="73" endLine="75" />
    <javadoc>
      <text>* Constructor for UpperTriangDenseMatrix</text>
      <param>AMatrix to copy from. Only the upper triangular part is copied</param>
      <param>deepTrue for deep copy, false for reference (in which case
 * <code>A</code> must be a dense matrix)</param>
    </javadoc>
    <method type="constructor" name="UpperTriangDenseMatrix" startLine="86" endLine="88" />
    <javadoc>
      <text>* Constructor for UpperTriangDenseMatrix</text>
      <param>AMatrix to copy from. Only the upper triangular part is copied</param>
      <param>kSize of matrix to refer.
 * <code>k&lt;min(numRows,numColumns)</code></param>
    </javadoc>
    <method type="constructor" name="UpperTriangDenseMatrix" startLine="99" endLine="101" />
    <javadoc>
      <text>* Constructor for UpperTriangDenseMatrix</text>
      <param>AMatrix to copy from. Only the upper triangular part is copied</param>
      <param>kSize of matrix to refer.
 * <code>k&lt;min(numRows,numColumns)</code></param>
      <param>deepTrue for deep copy, false for reference (in which case
 * <code>A</code> must be a dense matrix)</param>
    </javadoc>
    <method type="constructor" name="UpperTriangDenseMatrix" startLine="115" endLine="117" />
    <javadoc>
      <text>* Constructor for UpperTriangDenseMatrix</text>
      <param>AMatrix to copy from. Only the upper triangular part is copied</param>
      <param>kSize of matrix to refer.
 * <code>k&lt;min(numRows,numColumns)</code></param>
      <param>deepTrue for deep copy, false for reference (in which case
 * <code>A</code> must be a dense matrix)</param>
    </javadoc>
    <method type="constructor" name="UpperTriangDenseMatrix" startLine="131" endLine="133" />
    <method type="void" name="add" startLine="136" endLine="140" />
    <method type="double" name="get" startLine="143" endLine="147" />
    <method type="void" name="set" startLine="150" endLine="154" />
    <method type="void" name="copy" startLine="157" endLine="161" />
    <method type="Matrix" name="set" startLine="164" endLine="168" />
    <method type="UpperTriangDenseMatrix" name="copy" startLine="171" endLine="173" />
  </class>
</source>
