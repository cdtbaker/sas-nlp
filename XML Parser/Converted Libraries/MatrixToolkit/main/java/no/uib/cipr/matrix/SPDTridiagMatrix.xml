<?xml version="1.0" encoding="UTF-8"?>
<source package="no.uib.cipr.matrix">
  <import name="com.github.fommil.netlib.LAPACK" />
  <import name="org.netlib.util.intW" />
  <class name="SPDTridiagMatrix" extends="SymmTridiagMatrix" startLine="26">
    <javadoc>
      <text>* Symmetrical positive definite tridiagonal matrix. Same as{@link no.uib.cipr.matrix.SymmTridiagMatrix SymmTridiagMatrix}, and is used
 * as a marker class to allow for more efficient solvers.</text>
    </javadoc>
    <javadoc>
      <text>* Constructor for SPDTridiagMatrix</text>
      <param>nSize of the matrix. Since the matrix must be square, this
 * equals both the number of rows and columns</param>
    </javadoc>
    <method type="constructor" name="SPDTridiagMatrix" startLine="40" endLine="42" />
    <javadoc>
      <text>* Constructor for SPDTridiagMatrix</text>
      <param>AMatrix to copy contents from. Only main and the superdiagonal
 * is copied over</param>
    </javadoc>
    <method type="constructor" name="SPDTridiagMatrix" startLine="51" endLine="53" />
    <javadoc>
      <text>* Constructor for SPDTridiagMatrix</text>
      <param>AMatrix to copy contents from. Only main and the superdiagonal
 * is copied over</param>
      <param>deepTrue for a deep copy. For shallow copies <code>A</code> must
 * be a <code>SymmTridiagMatrix</code></param>
    </javadoc>
    <method type="constructor" name="SPDTridiagMatrix" startLine="65" endLine="67" />
    <method type="SPDTridiagMatrix" name="copy" startLine="70" endLine="72" />
    <method type="Matrix" name="solve" startLine="75" endLine="95">
      <declaration type="double[]" name="Xd" />
      <declaration type="intW" name="info" />
    </method>
  </class>
</source>
