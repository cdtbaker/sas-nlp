<?xml version="1.0" encoding="UTF-8"?>
<source package="no.uib.cipr.matrix.sparse">
  <import name="no.uib.cipr.matrix.DenseVector" />
  <import name="no.uib.cipr.matrix.Matrix" />
  <import name="no.uib.cipr.matrix.Vector" />
  <class name="DiagonalPreconditioner" startLine="27">
    <implements name="Preconditioner" />
    <javadoc>
      <text>* Diagonal preconditioner. Uses the inverse of the diagonal as preconditioner</text>
    </javadoc>
    <javadoc>
      <text>* This contains the inverse of the diagonal</text>
    </javadoc>
    <declaration type="double[]" name="invdiag" />
    <javadoc>
      <text>* Constructor for DiagonalPreconditioner</text>
      <param>nProblem size (number of rows)</param>
    </javadoc>
    <method type="constructor" name="DiagonalPreconditioner" startLine="43" endLine="45" />
    <method type="Vector" name="apply" startLine="47" endLine="58">
      <declaration type="double[]" name="xd" />
      <declaration type="double[]" name="bd" />
    </method>
    <method type="Vector" name="transApply" startLine="60" endLine="62" />
    <method type="void" name="setMatrix" startLine="64" endLine="76">
      <scope startLine="69" endLine="75">
        <comment>Avoid zero-division</comment>
      </scope>
    </method>
  </class>
</source>
