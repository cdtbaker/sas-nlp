<?xml version="1.0" encoding="UTF-8"?>
<source package="no.uib.cipr.matrix.sparse">
  <import name="no.uib.cipr.matrix.DenseLU" />
  <import name="no.uib.cipr.matrix.Matrices" />
  <import name="no.uib.cipr.matrix.Matrix" />
  <import name="no.uib.cipr.matrix.Vector" />
  <import name="no.uib.cipr.matrix.sparse.FlexCompRowMatrix" />
  <import name="no.uib.cipr.matrix.sparse.IterativeSolver" />
  <import name="no.uib.cipr.matrix.sparse.IterativeSolverNotConvergedException" />
  <import name="no.uib.cipr.matrix.sparse.Preconditioner" />
  <import name="no.uib.cipr.matrix.Utilities" />
  <import name="junit.framework.TestCase" />
  <class name="IterativeSolverTestAbstract" extends="TestCase" startLine="34">
    <javadoc>
      <text>* Test of the iterative solvers and preconditioners</text>
    </javadoc>
    <javadoc>
      <text>* Number of times to repeat tests</text>
    </javadoc>
    <declaration type="int" name="repeat" />
    <javadoc>
      <text>* Sizes of the system matrix</text>
    </javadoc>
    <declaration type="int" name="max" />
    <javadoc>
      <text>* Numerical tolerance</text>
    </javadoc>
    <declaration type="double" name="tol" />
    <javadoc>
      <text>* Diagonal shift for singularity handling</text>
    </javadoc>
    <declaration type="double" name="shift" />
    <javadoc>
      <text>* Square system matrix</text>
    </javadoc>
    <declaration type="Matrix" name="A" />
    <javadoc>
      <text>* Right hand side, right hand for transpose system, and the solution vector
 * in both cases</text>
    </javadoc>
    <declaration type="Vector" name="b" />
    <javadoc>
      <text>* Stores the data of x</text>
    </javadoc>
    <declaration type="double[]" name="xd" />
    <javadoc>
      <text>* Iterative solver to use</text>
    </javadoc>
    <declaration type="IterativeSolver" name="solver" />
    <javadoc>
      <text>* Preconditioner to use</text>
    </javadoc>
    <declaration type="Preconditioner" name="M" />
    <javadoc>
      <text>* Constructor for IterativeSolverTestAbstract</text>
    </javadoc>
    <method type="constructor" name="IterativeSolverTestAbstract" startLine="88" endLine="90" />
    <method type="void" name="setUp" startLine="93" endLine="116">
      <declaration type="int" name="n" />
      <comment>Create solver and preconditioner</comment>
      <comment>Compute the correct right hand sides</comment>
      <comment>Store x for later. It is overwritten</comment>
      <comment>Randomize the inital solution vector</comment>
    </method>
    <method name="createSolver" type="void" startLine="118" endLine="118" />
    <method type="void" name="createMatrix" startLine="120" endLine="134">
      <declaration type="int" name="n" />
      <declaration type="int" name="b" />
      <declaration type="DenseLU" name="lu" />
      <scope startLine="130" endLine="133" />
      <comment>Create an arbitrary matrix</comment>
      <comment>Make it non-singular</comment>
    </method>
    <method type="void" name="addDiagonal" startLine="136" endLine="140">
      <declaration type="int" name="n" />
    </method>
    <method type="void" name="tearDown" startLine="143" endLine="148" />
    <method type="void" name="testSolve" startLine="150" endLine="158">
      <scope startLine="151" endLine="154" />
      <scope startLine="154" endLine="157" />
    </method>
    <method type="void" name="testRepeatSolve" startLine="160" endLine="171">
      <scope startLine="161" endLine="167">
        <scope startLine="162" endLine="166" />
      </scope>
      <scope startLine="167" endLine="170" />
    </method>
    <method type="void" name="assertSolved" startLine="173" endLine="176" />
  </class>
</source>
