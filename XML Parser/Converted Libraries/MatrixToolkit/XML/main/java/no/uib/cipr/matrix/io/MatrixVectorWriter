<?xml version="1.0" encoding="UTF-8"?>
    <source package="no.uib.cipr.matrix.io">
        <import package="java.io.OutputStream"/>
        <import package="java.io.PrintWriter"/>
        <import package="java.io.Writer"/>
        <import package="java.util.Locale"/>
        <class name="MatrixVectorWriter" extends="PrintWriter" line="28">
            <javadoc line="28">
                Writes matrices and vectors                
            </javadoc>
            <javadoc line="33">
                Constructor for MatrixVectorWriter                
                <@param>
                    m out                    
                </@param>
            </javadoc>
            <method name="MatrixVectorWriter" type="constructor" line="38"/>
            <javadoc line="42">
                Constructor for MatrixVectorWriter                
                <@param>
                    m out                    
                </@param>
                <@param>
                    m autoFlush                    
                </@param>
            </javadoc>
            <method name="MatrixVectorWriter" type="constructor" line="48"/>
            <javadoc line="52">
                Constructor for MatrixVectorWriter                
                <@param>
                    m out                    
                </@param>
            </javadoc>
            <method name="MatrixVectorWriter" type="constructor" line="57"/>
            <javadoc line="61">
                Constructor for MatrixVectorWriter                
                <@param>
                    m out                    
                </@param>
                <@param>
                    m autoFlush                    
                </@param>
            </javadoc>
            <method name="MatrixVectorWriter" type="constructor" line="67"/>
            <javadoc line="71">
                Shifts the indices. Useful for converting between 0- and 1-based
                 * indicing.                
                <@param>
                    m numAdded to every index                    
                </@param>
                <@param>
                    m indicesIndices to shift                    
                </@param>
            </javadoc>
            <method name="add" type="void" line="80"/>
            <javadoc line="85">
                Prints the matrix info                
            </javadoc>
            <method name="printMatrixInfo" type="void" line="88"/>
            <javadoc line="92">
                Prints the vector info                
            </javadoc>
            <method name="printVectorInfo" type="void" line="95"/>
            <javadoc line="99">
                Prints the matrix size                
            </javadoc>
            <method name="printMatrixSize" type="void" line="102"/>
            <javadoc line="109">
                Prints the matrix size. Assumes coordinate format                
            </javadoc>
            <method name="printMatrixSize" type="void" line="112"/>
            <javadoc line="117">
                Prints the vector size                
            </javadoc>
            <method name="printVectorSize" type="void" line="120"/>
            <javadoc line="127">
                Prints the vector size. Assumes coordinate format                
            </javadoc>
            <method name="printVectorSize" type="void" line="130"/>
            <javadoc line="134">
                Prints an array to the underlying stream. One entry per line.                
            </javadoc>
            <method name="printArray" type="void" line="137"/>
            <javadoc line="142">
                Prints an array to the underlying stream. One entry per line.                
            </javadoc>
            <method name="printArray" type="void" line="145"/>
            <javadoc line="150">
                Prints an array to the underlying stream. One entry per line. The first
                 * array specifies the real entries, and the second is the imaginary entries                
            </javadoc>
            <method name="printArray" type="void" line="154">
                <declaration name="size" type="int" line="155"/>
            </method>
            <javadoc line="163">
                Prints an array to the underlying stream. One entry per line. The first
                 * array specifies the real entries, and the second is the imaginary entries                
            </javadoc>
            <method name="printArray" type="void" line="167">
                <declaration name="size" type="int" line="168"/>
            </method>
            <javadoc line="176">
                Prints an array to the underlying stream. One entry per line.                
            </javadoc>
            <method name="printArray" type="void" line="179"/>
            <javadoc line="184">
                Prints an array to the underlying stream. One entry per line.                
            </javadoc>
            <method name="printArray" type="void" line="187"/>
            <javadoc line="192">
                Prints the coordinate format to the underlying stream. One index and
                 * entry on each line. The offset is added to the index, typically, this can
                 * transform from a 0-based indicing to a 1-based.                
            </javadoc>
            <method name="printCoordinate" type="void" line="197">
                <declaration name="size" type="int" line="198"/>
            </method>
            <javadoc line="206">
                Prints the coordinate format to the underlying stream. One index and
                 * entry on each line. The offset is added to the index, typically, this can
                 * transform from a 0-based indicing to a 1-based.                
            </javadoc>
            <method name="printCoordinate" type="void" line="211">
                <declaration name="size" type="int" line="212"/>
            </method>
            <javadoc line="220">
                Prints the coordinate format to the underlying stream. One index and
                 * entry on each line. The offset is added to the index, typically, this can
                 * transform from a 0-based indicing to a 1-based.                
            </javadoc>
            <method name="printCoordinate" type="void" line="225">
                <declaration name="size" type="int" line="226"/>
            </method>
            <javadoc line="234">
                Prints the coordinate format to the underlying stream. One index and
                 * entry on each line. The offset is added to the index, typically, this can
                 * transform from a 0-based indicing to a 1-based.                
            </javadoc>
            <method name="printCoordinate" type="void" line="239">
                <declaration name="size" type="int" line="240"/>
            </method>
            <javadoc line="248">
                Prints the coordinate format to the underlying stream. One index pair and
                 * entry on each line. The offset is added to each index, typically, this
                 * can transform from a 0-based indicing to a 1-based.                
            </javadoc>
            <method name="printCoordinate" type="void" line="254">
                <declaration name="size" type="int" line="255"/>
            </method>
            <javadoc line="264">
                Prints the coordinate format to the underlying stream. One index pair and
                 * entry on each line. The offset is added to each index, typically, this
                 * can transform from a 0-based indicing to a 1-based.                
            </javadoc>
            <method name="printCoordinate" type="void" line="270">
                <declaration name="size" type="int" line="271"/>
            </method>
            <javadoc line="280">
                Prints the coordinate format to the underlying stream. One index and
                 * entry on each line. The offset is added to each index, typically, this
                 * can transform from a 0-based indicing to a 1-based. The first float array
                 * specifies the real entries, and the second is the imaginary entries                
            </javadoc>
            <method name="printCoordinate" type="void" line="287">
                <declaration name="size" type="int" line="288"/>
            </method>
            <javadoc line="297">
                Prints the coordinate format to the underlying stream. One index and
                 * entry on each line. The offset is added to each index, typically, this
                 * can transform from a 0-based indicing to a 1-based. The first double
                 * array specifies the real entries, and the second is the imaginary entries                
            </javadoc>
            <method name="printCoordinate" type="void" line="304">
                <declaration name="size" type="int" line="305"/>
            </method>
            <javadoc line="314">
                Prints the coordinate format to the underlying stream. One index pair and
                 * entry on each line. The offset is added to each index, typically, this
                 * can transform from a 0-based indicing to a 1-based. The first float array
                 * specifies the real entries, and the second is the imaginary entries                
            </javadoc>
            <method name="printCoordinate" type="void" line="321">
                <declaration name="size" type="int" line="322"/>
            </method>
            <javadoc line="332">
                Prints the coordinate format to the underlying stream. One index pair and
                 * entry on each line. The offset is added to each index, typically, this
                 * can transform from a 0-based indicing to a 1-based. The first double
                 * array specifies the real entries, and the second is the imaginary entries                
            </javadoc>
            <method name="printCoordinate" type="void" line="339">
                <declaration name="size" type="int" line="340"/>
            </method>
            <javadoc line="350">
                Prints the coordinate format to the underlying stream. One index pair and
                 * entry on each line. The offset is added to each index, typically, this
                 * can transform from a 0-based indicing to a 1-based.                
            </javadoc>
            <method name="printCoordinate" type="void" line="355">
                <declaration name="size" type="int" line="356"/>
            </method>
            <javadoc line="365">
                Prints the coordinate format to the underlying stream. One index pair and
                 * entry on each line. The offset is added to each index, typically, this
                 * can transform from a 0-based indicing to a 1-based.                
            </javadoc>
            <method name="printCoordinate" type="void" line="370">
                <declaration name="size" type="int" line="371"/>
            </method>
            <javadoc line="380">
                Prints the coordinates to the underlying stream. One index pair on each
                 * line. The offset is added to each index, typically, this can transform
                 * from a 0-based indicing to a 1-based.                
            </javadoc>
            <method name="printPattern" type="void" line="385">
                <declaration name="size" type="int" line="386"/>
            </method>
            <javadoc line="394">
                Prints the coordinates to the underlying stream. One index on each line.
                 * The offset is added to each index, typically, this can transform from a
                 * 0-based indicing to a 1-based.                
            </javadoc>
            <method name="printPattern" type="void" line="399">
                <declaration name="size" type="int" line="400"/>
            </method>
            <javadoc line="405">
                Prints the coordinate format to the underlying stream. One index pair and
                 * entry on each line                
            </javadoc>
            <method name="printCoordinate" type="void" line="409"/>
            <javadoc line="413">
                Prints the coordinate format to the underlying stream. One index pair and
                 * entry on each line                
            </javadoc>
            <method name="printCoordinate" type="void" line="417"/>
            <javadoc line="421">
                Prints the coordinate format to the underlying stream. One index pair and
                 * entry on each line. The first double array specifies the real entries,
                 * and the second is the imaginary entries                
            </javadoc>
            <method name="printCoordinate" type="void" line="427"/>
            <javadoc line="431">
                Prints the coordinate format to the underlying stream. One index pair and
                 * entry on each line. The first double array specifies the real entries,
                 * and the second is the imaginary entries                
            </javadoc>
            <method name="printCoordinate" type="void" line="437"/>
            <javadoc line="441">
                Prints the coordinate format to the underlying stream. One index pair and
                 * entry on each line                
            </javadoc>
            <method name="printCoordinate" type="void" line="445"/>
            <javadoc line="449">
                Prints the coordinate format to the underlying stream. One index pair and
                 * entry on each line                
            </javadoc>
            <method name="printCoordinate" type="void" line="453"/>
            <javadoc line="457">
                Prints the coordinates to the underlying stream. One index pair on each
                 * line                
            </javadoc>
            <method name="printPattern" type="void" line="461"/>
            <javadoc line="465">
                Prints the coordinate format to the underlying stream. One index and
                 * entry on each line                
            </javadoc>
            <method name="printCoordinate" type="void" line="469"/>
            <javadoc line="473">
                Prints the coordinate format to the underlying stream. One index and
                 * entry on each line                
            </javadoc>
            <method name="printCoordinate" type="void" line="477"/>
            <javadoc line="481">
                Prints the coordinate format to the underlying stream. One index and
                 * entry on each line. The first double array specifies the real entries,
                 * and the second is the imaginary entries                
            </javadoc>
            <method name="printCoordinate" type="void" line="486"/>
            <javadoc line="490">
                Prints the coordinate format to the underlying stream. One index and
                 * entry on each line. The first double array specifies the real entries,
                 * and the second is the imaginary entries                
            </javadoc>
            <method name="printCoordinate" type="void" line="495"/>
            <javadoc line="499">
                Prints the coordinate format to the underlying stream. One index and
                 * entry on each line                
            </javadoc>
            <method name="printCoordinate" type="void" line="503"/>
            <javadoc line="507">
                Prints the coordinate format to the underlying stream. One index and
                 * entry on each line                
            </javadoc>
            <method name="printCoordinate" type="void" line="511"/>
            <javadoc line="515">
                Prints the coordinates to the underlying stream. One index on each line                
            </javadoc>
            <method name="printPattern" type="void" line="518"/>
            <javadoc line="522">
                Prints all the comments. Prepends a &apos;%&apos; and appends a newline to every
                 * comment                
            </javadoc>
            <method name="printComments" type="void" line="526"/>
        </class>
    </source>