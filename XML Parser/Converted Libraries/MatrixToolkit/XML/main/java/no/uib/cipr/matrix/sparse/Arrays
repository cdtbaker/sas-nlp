<?xml version="1.0" encoding="UTF-8"?>
    <source package="no.uib.cipr.matrix.sparse">
        <class name="Arrays" line="23">
            <javadoc line="23">
                Array utilities. Complements &lt;code&gt;java.util.Arrays&lt;/code&gt;                
                <@deprecated>
                    d java.utils.Arrays and Google Guava provide this functionality nowadays.                    
                </@deprecated>
            </javadoc>
            <method name="Arrays" type="constructor" line="30">
                <comment line="31">
                    No need to instantiate                    
                </comment>
            </method>
            <javadoc line="34">
                Searches for a key in a sorted array, and returns an index to an element
                  which is greater than or equal key.                
                <@param>
                    m indexSorted array of integers                    
                </@param>
                <@param>
                    m keySearch for something equal or greater                    
                </@param>
                <@param>
                    m beginStart posisiton in the index                    
                </@param>
                <@param>
                    m endOne past the end position in the index                    
                </@param>
                <@return>
                    n end if nothing greater or equal was found, else an index
                      satisfying the search criteria                    
                </@return>
            </javadoc>
            <method name="binarySearchGreater" type="int" line="50">
                <params>
                    <param name="index" type="int[]"/>
                    <param name="key" type="int"/>
                    <param name="begin" type="int"/>
                    <param name="end" type="int"/>
                </params>
            </method>
            <javadoc line="54">
                Searches for a key in a sorted array, and returns an index to an element
                  which is greater than or equal key.                
                <@param>
                    m indexSorted array of integers                    
                </@param>
                <@param>
                    m keySearch for something equal or greater                    
                </@param>
                <@return>
                    n index.length if nothing greater or equal was found, else an index
                      satisfying the search criteria                    
                </@return>
            </javadoc>
            <method name="binarySearchGreater" type="int" line="65">
                <params>
                    <param name="index" type="int[]"/>
                    <param name="key" type="int"/>
                </params>
            </method>
            <javadoc line="69">
                Searches for a key in a sorted array, and returns an index to an element
                  which is smaller than or equal key.                
                <@param>
                    m indexSorted array of integers                    
                </@param>
                <@param>
                    m keySearch for something equal or greater                    
                </@param>
                <@param>
                    m beginStart posisiton in the index                    
                </@param>
                <@param>
                    m endOne past the end position in the index                    
                </@param>
                <@return>
                    n begin-1 if nothing smaller or equal was found, else an index
                      satisfying the search criteria                    
                </@return>
            </javadoc>
            <method name="binarySearchSmaller" type="int" line="85">
                <params>
                    <param name="index" type="int[]"/>
                    <param name="key" type="int"/>
                    <param name="begin" type="int"/>
                    <param name="end" type="int"/>
                </params>
            </method>
            <javadoc line="89">
                Searches for a key in a sorted array, and returns an index to an element
                  which is smaller than or equal key.                
                <@param>
                    m indexSorted array of integers                    
                </@param>
                <@param>
                    m keySearch for something equal or greater                    
                </@param>
                <@return>
                    n -1 if nothing smaller or equal was found, else an index
                      satisfying the search criteria                    
                </@return>
            </javadoc>
            <method name="binarySearchSmaller" type="int" line="100">
                <params>
                    <param name="index" type="int[]"/>
                    <param name="key" type="int"/>
                </params>
            </method>
            <javadoc line="104">
                Searches for a key in a subset of a sorted array.                
                <@param>
                    m indexSorted array of integers                    
                </@param>
                <@param>
                    m keyKey to search for                    
                </@param>
                <@param>
                    m beginStart posisiton in the index                    
                </@param>
                <@param>
                    m endOne past the end position in the index                    
                </@param>
                <@return>
                    n Integer index to key. -1 if not found                    
                </@return>
            </javadoc>
            <method name="binarySearch" type="int" line="117">
                <params>
                    <param name="index" type="int[]"/>
                    <param name="key" type="int"/>
                    <param name="begin" type="int"/>
                    <param name="end" type="int"/>
                </params>
            </method>
            <method name="binarySearchInterval" type="int" line="122">
                <params>
                    <param name="index" type="int[]"/>
                    <param name="key" type="int"/>
                    <param name="begin" type="int"/>
                    <param name="end" type="int"/>
                    <param name="greater" type="boolean"/>
                </params>
                <comment line="123">
                    Zero length array?                    
                </comment>
                <comment line="123">
                    d--; // Last index                    
                </comment>
                <comment line="123">
                    The usual binary search                    
                </comment>
                <comment line="123">
                    No direct match, but an inf/sup was found                    
                </comment>
                <comment line="123">
                    turn mid - 1; // One before start                    
                </comment>
                <declaration name="mid" type="int" line="132"/>
                <scope line="135"/>
            </method>
            <javadoc line="156">
                Finds the number of repeated entries                
                <@param>
                    m numMaximum index value                    
                </@param>
                <@param>
                    m indIndices to check for repetitions                    
                </@param>
                <@return>
                    n Array of length <code>num</code> with the number of repeated
                      indices of <code>ind</code>                    
                </@return>
            </javadoc>
            <method name="bandwidth" type="int[]" line="166">
                <params>
                    <param name="num" type="int"/>
                    <param name="ind" type="int[]"/>
                </params>
                <declaration name="nz" type="int[]" line="167"/>
            </method>
        </class>
    </source>