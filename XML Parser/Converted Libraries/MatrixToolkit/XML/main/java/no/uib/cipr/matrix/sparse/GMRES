<?xml version="1.0" encoding="UTF-8"?>
    <source package="no.uib.cipr.matrix.sparse">
        <import package="no.uib.cipr.matrix.DenseMatrix"/>
        <import package="no.uib.cipr.matrix.DenseVector"/>
        <import package="no.uib.cipr.matrix.GivensRotation"/>
        <import package="no.uib.cipr.matrix.Matrix"/>
        <import package="no.uib.cipr.matrix.UpperTriangDenseMatrix"/>
        <import package="no.uib.cipr.matrix.Vector"/>
        <import package="no.uib.cipr.matrix.Vector.Norm"/>
        <class name="GMRES" extends="AbstractIterativeSolver" line="34">
            <javadoc line="34">
                GMRES solver. GMRES solves the unsymmetric linear system &lt;code&gt;Ax = b&lt;/code&gt;
                 * using the Generalized Minimum Residual method. The GMRES iteration is
                 * restarted after a given number of iterations. By default it is restarted
                 * after 30 iterations.                
                <@author>
                    r Templates                    
                </@author>
            </javadoc>
            <declaration name="restart" type="int" line="44"/>
            <javadoc line="44">
                After this many iterations, the GMRES will be restarted.                
            </javadoc>
            <declaration name="w" type="Vector" line="49"/>
            <javadoc line="49">
                Vectors for use in the iterative solution process                
            </javadoc>
            <declaration name="v" type="Vector[]" line="54"/>
            <javadoc line="54">
                Vectors spanning the subspace                
            </javadoc>
            <declaration name="s" type="DenseVector" line="59"/>
            <javadoc line="59">
                Restart vector                
            </javadoc>
            <declaration name="H" type="DenseMatrix" line="64"/>
            <javadoc line="64">
                Hessenberg matrix                
            </javadoc>
            <declaration name="rotation" type="GivensRotation[]" line="69"/>
            <javadoc line="69">
                Givens rotations for the QR factorization                
            </javadoc>
            <javadoc line="74">
                Constructor for GMRES. Uses the given vector as template for creating
                 * scratch vectors. Typically, the solution or the right hand side vector
                 * can be passed, and the template is not modified. The iteration is
                 * restarted every 30 iterations                
                <@param>
                    m templateVector to use as template for the work vectors needed in the
                     * solution process                    
                </@param>
            </javadoc>
            <method name="GMRES" type="constructor" line="84"/>
            <javadoc line="88">
                Constructor for GMRES. Uses the given vector as template for creating
                 * scratch vectors. Typically, the solution or the right hand side vector
                 * can be passed, and the template is not modified                
                <@param>
                    m templateVector to use as template for the work vectors needed in the
                     * solution process                    
                </@param>
                <@param>
                    m restartGMRES iteration is restarted after this number of iterations                    
                </@param>
            </javadoc>
            <method name="GMRES" type="constructor" line="99"/>
            <javadoc line="106">
                Sets the restart parameter                
                <@param>
                    m restartGMRES iteration is restarted after this number of iterations                    
                </@param>
            </javadoc>
            <method name="setRestart" type="void" line="112"/>
            <method name="solve" type="Vector" line="128">
                <comment line="129">
                    Outer iteration                    
                </comment>
                <declaration name="normr" type="double" line="133"/>
                <scope line="137">
                    <declaration name="i" type="int" line="141"/>
                    <scope line="145">
                        <scope line="149"/>
                    </scope>
                </scope>
            </method>
        </class>
    </source>