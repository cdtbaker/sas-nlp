<?xml version="1.0" encoding="UTF-8"?>
    <source package="no.uib.cipr.matrix">
        <import package="java.util.Arrays"/>
        <import package="java.util.Iterator"/>
        <class name="AbstractBandMatrix" extends="AbstractMatrix" line="26">
            <javadoc line="26">
                Partial implementation of a banded matrix                
            </javadoc>
            <declaration name="data" type="double[]" line="31"/>
            <javadoc line="31">
                Matrix data                
            </javadoc>
            <declaration name="kl" type="int" line="36"/>
            <javadoc line="36">
                Number of upper and lower diagonals                
            </javadoc>
            <declaration name="n" type="int" line="41"/>
            <javadoc line="41">
                Size of the matrix. It is always square                
            </javadoc>
            <javadoc line="46">
                Constructor for AbstractBandMatrix                
                <@param>
                    m nSize of the matrix. Since the matrix must be square, this
                     * equals both the number of rows and columns                    
                </@param>
                <@param>
                    m klNumber of diagonals below the main diagonal                    
                </@param>
                <@param>
                    m kuNumber of diagonals above the main diagonal                    
                </@param>
            </javadoc>
            <method name="AbstractBandMatrix" type="constructor" line="57"/>
            <javadoc line="69">
                Constructor for AbstractBandMatrix                
                <@param>
                    m AMatrix to copy from                    
                </@param>
                <@param>
                    m klNumber of diagonals below the main diagonal                    
                </@param>
                <@param>
                    m kuNumber of diagonals above the main diagonal                    
                </@param>
            </javadoc>
            <method name="AbstractBandMatrix" type="constructor" line="79"/>
            <javadoc line="83">
                Constructor for AbstractBandMatrix                
                <@param>
                    m AMatrix to copy from                    
                </@param>
                <@param>
                    m klNumber of diagonals below the main diagonal                    
                </@param>
                <@param>
                    m kuNumber of diagonals above the main diagonal                    
                </@param>
                <@param>
                    m deepTrue if a deep copy is made. For a shallow copy,
                     * <code>A</code> must be a banded matrix                    
                </@param>
            </javadoc>
            <method name="AbstractBandMatrix" type="constructor" line="96">
                <scope line="107"/>
            </method>
            <javadoc line="114">
                Returns the matrix contents                
            </javadoc>
            <method name="getData" type="double[]" line="117"/>
            <method name="add" type="void" line="122"/>
            <method name="set" type="void" line="128"/>
            <method name="get" type="double" line="134"/>
            <javadoc line="140">
                Returns the number of lower diagonals                
            </javadoc>
            <method name="numSubDiagonals" type="int" line="143"/>
            <javadoc line="147">
                Returns the number of upper diagonals                
            </javadoc>
            <method name="numSuperDiagonals" type="int" line="150"/>
            <javadoc line="154">
                Returns true if the given indices are within the band                
            </javadoc>
            <method name="inBand" type="boolean" line="157"/>
            <javadoc line="161">
                Checks that the indices are within the band                
            </javadoc>
            <method name="checkBand" type="void" line="164"/>
            <javadoc line="169">
                Checks the row and column indices, and returns the linear data index                
            </javadoc>
            <method name="getIndex" type="int" line="172"/>
            <javadoc line="177">
                Set this matrix equal to the given matrix                
            </javadoc>
            <method name="copy" type="void" line="180"/>
            <method name="set" type="Matrix" line="187">
                <declaration name="Bb" type="AbstractBandMatrix" line="193"/>
                <declaration name="Bd" type="double[]" line="199"/>
            </method>
            <method name="zero" type="Matrix" line="210"/>
            <method name="iterator" type="Iterator<MatrixEntry>" line="216"/>
            <class name="BandMatrixIterator" extends="RefMatrixIterator" line="220">
                <javadoc line="220">
                    Iterator over a band matrix                    
                </javadoc>
                <declaration name="lkl" type="int" line="225"/>
                <javadoc line="225">
                    Matrix bandwidths. Cannot be taken directly from the matrix since
                     * that breaks iterating over symmetrical matrices                    
                </javadoc>
                <method name="BandMatrixIterator" type="constructor" line="231"/>
                <method name="BandMatrixIterator" type="constructor" line="236"/>
                <method name="next" type="MatrixEntry" line="241">
                    <comment line="242">
                        Traversal first down the columns, then the rows                        
                    </comment>
                    <scope line="248"/>
                </method>
            </class>
        </class>
    </source>