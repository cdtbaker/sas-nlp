<?xml version="1.0" encoding="UTF-8"?>
    <source package="no.uib.cipr.matrix">
        <import package="com.github.fommil.netlib.LAPACK"/>
        <import package="org.netlib.util.intW"/>
        <class name="EVD" line="26">
            <javadoc line="26">
                Computes eigenvalue decompositions of general matrices                
            </javadoc>
            <declaration name="work" type="double[]" line="31"/>
            <javadoc line="31">
                Double work array                
            </javadoc>
            <declaration name="n" type="int" line="36"/>
            <javadoc line="36">
                Size of the matrix                
            </javadoc>
            <declaration name="jobLeft" type="JobEig" line="41"/>
            <javadoc line="41">
                Job to do on the left and right eigenvectors                
            </javadoc>
            <declaration name="Wr" type="double[]" line="46"/>
            <javadoc line="46">
                Contains the real and imaginary parts of the eigenvalues                
            </javadoc>
            <declaration name="Vl" type="DenseMatrix" line="51"/>
            <javadoc line="51">
                Contains the left and the right eigenvectors                
            </javadoc>
            <javadoc line="56">
                Creates an empty eigenvalue decomposition which will compute all the
                  eigenvalues and eigenvectors (left and right)                
                <@param>
                    m nSize of the matrix                    
                </@param>
            </javadoc>
            <method name="EVD" type="constructor" line="63">
                <params>
                    <param name="n" type="int"/>
                </params>
            </method>
            <javadoc line="67">
                Creates an empty eigenvalue decomposition                
                <@param>
                    m nSize of the matrix                    
                </@param>
                <@param>
                    m leftWhether to compute the left eigenvectors or not                    
                </@param>
                <@param>
                    m rightWhether to compute the right eigenvectors or not                    
                </@param>
            </javadoc>
            <method name="EVD" type="constructor" line="77">
                <params>
                    <param name="n" type="int"/>
                    <param name="left" type="boolean"/>
                    <param name="right" type="boolean"/>
                </params>
                <comment line="78">
                    Allocate space for the decomposition                    
                </comment>
                <comment line="78">
                    Find the needed workspace                    
                </comment>
                <comment line="78">
                    Allocate workspace                    
                </comment>
                <declaration name="worksize" type="double[]" line="97"/>
                <declaration name="info" type="intW" line="98"/>
                <declaration name="lwork" type="int" line="104"/>
                <scope line="105"/>
            </method>
            <javadoc line="117">
                Convenience method for computing the complete eigenvalue decomposition of
                  the given matrix                
                <@param>
                    m AMatrix to factorize. Not modified                    
                </@param>
                <@return>
                    n Newly allocated decomposition                    
                </@return>
                <@throws>
                    s NotConvergedException                    
                </@throws>
            </javadoc>
            <method name="factorize" type="EVD" line="126">
                <params>
                    <param name="A" type="Matrix"/>
                </params>
            </method>
            <javadoc line="130">
                Computes the eigenvalue decomposition of the given matrix                
                <@param>
                    m AMatrix to factorize. Overwritten on return                    
                </@param>
                <@return>
                    n The current decomposition                    
                </@return>
                <@throws>
                    s NotConvergedException                    
                </@throws>
            </javadoc>
            <method name="factor" type="EVD" line="138">
                <params>
                    <param name="A" type="DenseMatrix"/>
                </params>
                <declaration name="info" type="intW" line="144"/>
            </method>
            <javadoc line="159">
                Gets the left eigenvectors, if available                
            </javadoc>
            <method name="getLeftEigenvectors" type="DenseMatrix" line="162"/>
            <javadoc line="166">
                Gets the right eigenvectors, if available                
            </javadoc>
            <method name="getRightEigenvectors" type="DenseMatrix" line="169"/>
            <javadoc line="173">
                Gets the real part of the eigenvalues                
            </javadoc>
            <method name="getRealEigenvalues" type="double[]" line="176"/>
            <javadoc line="180">
                Gets the imaginary part of the eigenvalues                
            </javadoc>
            <method name="getImaginaryEigenvalues" type="double[]" line="183"/>
            <javadoc line="187">
                True if the left eigenvectors have been computed                
            </javadoc>
            <method name="hasLeftEigenvectors" type="boolean" line="190"/>
            <javadoc line="194">
                True if the right eigenvectors have been computed                
            </javadoc>
            <method name="hasRightEigenvectors" type="boolean" line="197"/>
        </class>
    </source>