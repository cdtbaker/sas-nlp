<?xml version="1.0" encoding="UTF-8"?>
    <source package="no.uib.cipr.matrix">
        <import package="junit.framework.TestCase"/>
        <class name="MatrixTestAbstract" extends="TestCase" line="25">
            <javadoc line="25">
                Tests a matrix                
            </javadoc>
            <declaration name="A" type="Matrix" line="30"/>
            <javadoc line="30">
                Matrix to test                
            </javadoc>
            <declaration name="Ad" type="double[][]" line="35"/>
            <javadoc line="35">
                Jagged array version of A                
            </javadoc>
            <declaration name="Bdense" type="Matrix" line="40"/>
            <javadoc line="40">
                Matrix of the same size as A, dense and non-dense                
            </javadoc>
            <declaration name="Bd" type="double[][]" line="45"/>
            <javadoc line="45">
                Contents of B                
            </javadoc>
            <declaration name="xR" type="Vector" line="50"/>
            <javadoc line="50">
                Non-dense vectors with size equal the number of rows in A                
            </javadoc>
            <declaration name="xC" type="Vector" line="55"/>
            <javadoc line="55">
                Non-dense vectors with size equal the number of columns in A                
            </javadoc>
            <declaration name="xDenseR" type="Vector" line="60"/>
            <javadoc line="60">
                Dense vectors with size equal the number of rows in A                
            </javadoc>
            <declaration name="xDenseC" type="Vector" line="65"/>
            <javadoc line="65">
                Dense vectors with size equal the number of columns in A                
            </javadoc>
            <declaration name="xdR" type="double[]" line="70"/>
            <javadoc line="70">
                Contents of the vectors                
            </javadoc>
            <declaration name="tol" type="double" line="75"/>
            <javadoc line="75">
                Tolerance for floating-point comparisons                
            </javadoc>
            <declaration name="max" type="int" line="80"/>
            <javadoc line="80">
                Maximum matrix size, to avoid too slow tests                
            </javadoc>
            <javadoc line="85">
                Constructor for MatrixTestAbstract                
            </javadoc>
            <method name="MatrixTestAbstract" type="constructor" line="88"/>
            <method name="setUp" type="void" line="93"/>
            <method name="createPrimary" type="void" line="98"/>
            <method name="tearDown" type="void" line="101"/>
            <javadoc line="108">
                Called after setUp() to create additional datastructures                
            </javadoc>
            <method name="createAuxillerary" type="void" line="111"/>
            <method name="testMatrixRank2Dense" type="void" line="135">
                <scope line="136">
                    <declaration name="n" type="int" line="137"/>
                    <declaration name="B" type="Matrix" line="138"/>
                    <declaration name="Bd" type="double[][]" line="140"/>
                    <declaration name="alpha" type="double" line="141"/>
                </scope>
            </method>
            <method name="testMatrixRank2" type="void" line="152">
                <scope line="153">
                    <declaration name="n" type="int" line="154"/>
                    <declaration name="B" type="Matrix" line="155"/>
                    <declaration name="Bd" type="double[][]" line="158"/>
                    <declaration name="alpha" type="double" line="159"/>
                </scope>
            </method>
            <method name="testMatrixTransRank2Dense" type="void" line="170">
                <scope line="171">
                    <declaration name="n" type="int" line="172"/>
                    <declaration name="B" type="Matrix" line="173"/>
                    <declaration name="Bd" type="double[][]" line="175"/>
                    <declaration name="alpha" type="double" line="176"/>
                </scope>
            </method>
            <method name="testMatrixTransRank2" type="void" line="187">
                <scope line="188">
                    <declaration name="n" type="int" line="189"/>
                    <declaration name="B" type="Matrix" line="190"/>
                    <declaration name="Bd" type="double[][]" line="193"/>
                    <declaration name="alpha" type="double" line="194"/>
                </scope>
            </method>
            <method name="testMatrixRank1Dense" type="void" line="205">
                <scope line="206">
                    <declaration name="C" type="Matrix" line="207"/>
                    <declaration name="Cd" type="double[][]" line="208"/>
                    <declaration name="alpha" type="double" line="209"/>
                </scope>
            </method>
            <method name="testMatrixRank1" type="void" line="219">
                <scope line="220">
                    <declaration name="C" type="Matrix" line="221"/>
                    <declaration name="Cd" type="double[][]" line="223"/>
                    <declaration name="alpha" type="double" line="224"/>
                </scope>
            </method>
            <method name="testMatrixTransRank1Dense" type="void" line="234">
                <scope line="235">
                    <declaration name="C" type="Matrix" line="236"/>
                    <declaration name="Cd" type="double[][]" line="237"/>
                    <declaration name="alpha" type="double" line="238"/>
                </scope>
            </method>
            <method name="testMatrixTransRank1" type="void" line="248">
                <scope line="249">
                    <declaration name="C" type="Matrix" line="250"/>
                    <declaration name="Cd" type="double[][]" line="252"/>
                    <declaration name="alpha" type="double" line="253"/>
                </scope>
            </method>
            <method name="testMatrixMultDense" type="void" line="263">
                <declaration name="m" type="int" line="264"/>
                <declaration name="B" type="Matrix" line="265"/>
                <declaration name="Bd" type="double[][]" line="266"/>
                <declaration name="alpha" type="double" line="267"/>
            </method>
            <method name="testMatrixMult" type="void" line="277">
                <declaration name="m" type="int" line="278"/>
                <declaration name="B" type="Matrix" line="279"/>
                <declaration name="Bd" type="double[][]" line="281"/>
                <declaration name="alpha" type="double" line="282"/>
            </method>
            <method name="testMatrixTransAmultDense" type="void" line="292">
                <declaration name="m" type="int" line="293"/>
                <declaration name="B" type="Matrix" line="294"/>
                <declaration name="Bd" type="double[][]" line="295"/>
                <declaration name="alpha" type="double" line="296"/>
            </method>
            <method name="testMatrixTransAmult" type="void" line="306">
                <declaration name="m" type="int" line="307"/>
                <declaration name="B" type="Matrix" line="308"/>
                <declaration name="Bd" type="double[][]" line="310"/>
                <declaration name="alpha" type="double" line="311"/>
            </method>
            <method name="testMatrixTransABmultDense" type="void" line="321">
                <declaration name="m" type="int" line="322"/>
                <declaration name="B" type="Matrix" line="323"/>
                <declaration name="Bd" type="double[][]" line="324"/>
                <declaration name="alpha" type="double" line="325"/>
            </method>
            <method name="testMatrixTransABmult" type="void" line="335">
                <declaration name="m" type="int" line="336"/>
                <declaration name="B" type="Matrix" line="337"/>
                <declaration name="Bd" type="double[][]" line="339"/>
                <declaration name="alpha" type="double" line="340"/>
            </method>
            <method name="testMatrixTransBmultDense" type="void" line="350">
                <declaration name="m" type="int" line="351"/>
                <declaration name="B" type="Matrix" line="352"/>
                <declaration name="Bd" type="double[][]" line="353"/>
                <declaration name="alpha" type="double" line="354"/>
            </method>
            <method name="testMatrixTransBmult" type="void" line="364">
                <declaration name="m" type="int" line="365"/>
                <declaration name="B" type="Matrix" line="366"/>
                <declaration name="Bd" type="double[][]" line="368"/>
                <declaration name="alpha" type="double" line="369"/>
            </method>
            <method name="testMatrixMultAddDense" type="void" line="379">
                <declaration name="m" type="int" line="380"/>
                <declaration name="B" type="Matrix" line="381"/>
                <declaration name="Bd" type="double[][]" line="382"/>
                <declaration name="alpha" type="double" line="383"/>
            </method>
            <method name="testMatrixMultAdd" type="void" line="393">
                <declaration name="m" type="int" line="394"/>
                <declaration name="B" type="Matrix" line="395"/>
                <declaration name="Bd" type="double[][]" line="397"/>
                <declaration name="alpha" type="double" line="398"/>
            </method>
            <method name="testMatrixTransAmultAddDense" type="void" line="408">
                <declaration name="m" type="int" line="409"/>
                <declaration name="B" type="Matrix" line="410"/>
                <declaration name="Bd" type="double[][]" line="411"/>
                <declaration name="alpha" type="double" line="412"/>
            </method>
            <method name="testMatrixTransAmultAdd" type="void" line="422">
                <declaration name="m" type="int" line="423"/>
                <declaration name="B" type="Matrix" line="424"/>
                <declaration name="Bd" type="double[][]" line="426"/>
                <declaration name="alpha" type="double" line="427"/>
            </method>
            <method name="testMatrixTransABmultAddDense" type="void" line="437">
                <declaration name="m" type="int" line="438"/>
                <declaration name="B" type="Matrix" line="439"/>
                <declaration name="Bd" type="double[][]" line="440"/>
                <declaration name="alpha" type="double" line="441"/>
            </method>
            <method name="testMatrixTransABmultAdd" type="void" line="451">
                <declaration name="m" type="int" line="452"/>
                <declaration name="B" type="Matrix" line="453"/>
                <declaration name="Bd" type="double[][]" line="455"/>
                <declaration name="alpha" type="double" line="456"/>
            </method>
            <method name="testMatrixTransBmultAddDense" type="void" line="466">
                <declaration name="m" type="int" line="467"/>
                <declaration name="B" type="Matrix" line="468"/>
                <declaration name="Bd" type="double[][]" line="469"/>
                <declaration name="alpha" type="double" line="470"/>
            </method>
            <method name="testMatrixTransBmultAdd" type="void" line="480">
                <declaration name="m" type="int" line="481"/>
                <declaration name="B" type="Matrix" line="482"/>
                <declaration name="Bd" type="double[][]" line="484"/>
                <declaration name="alpha" type="double" line="485"/>
            </method>
            <method name="rank2" type="double[][]" line="496"/>
            <method name="transRank2" type="double[][]" line="501"/>
            <method name="rank1" type="double[][]" line="505"/>
            <method name="transRank1" type="double[][]" line="509"/>
            <method name="testVectorRank2Dense" type="void" line="513">
                <scope line="514">
                    <declaration name="alpha" type="double" line="515"/>
                </scope>
            </method>
            <method name="testVectorRank2" type="void" line="521">
                <scope line="522">
                    <declaration name="alpha" type="double" line="523"/>
                </scope>
            </method>
            <method name="testVectorRank1Dense" type="void" line="528">
                <scope line="529">
                    <declaration name="alpha" type="double" line="530"/>
                </scope>
            </method>
            <method name="testVectorRank1" type="void" line="536">
                <scope line="537">
                    <declaration name="alpha" type="double" line="538"/>
                </scope>
            </method>
            <method name="rank2" type="double[][]" line="543"/>
            <method name="rank1" type="double[][]" line="549"/>
            <method name="testVectorTransMultAddDense" type="void" line="556">
                <declaration name="alpha" type="double" line="557"/>
            </method>
            <method name="testVectorTransMultAdd" type="void" line="565">
                <declaration name="alpha" type="double" line="566"/>
            </method>
            <method name="transMultAdd" type="double[]" line="574">
                <declaration name="rows" type="int" line="575"/>
                <scope line="579">
                    <declaration name="dot" type="double" line="580"/>
                </scope>
            </method>
            <method name="testVectorMultDense" type="void" line="589">
                <declaration name="alpha" type="double" line="590"/>
            </method>
            <method name="testVectorMult" type="void" line="597">
                <declaration name="alpha" type="double" line="598"/>
            </method>
            <method name="mult" type="double[]" line="605">
                <scope line="606">
                    <declaration name="dot" type="double" line="607"/>
                </scope>
            </method>
            <method name="testVectorMultAddDense" type="void" line="615">
                <declaration name="alpha" type="double" line="616"/>
            </method>
            <method name="testVectorMultAdd" type="void" line="624">
                <declaration name="alpha" type="double" line="625"/>
            </method>
            <method name="multAdd" type="double[]" line="633">
                <scope line="634">
                    <declaration name="dot" type="double" line="635"/>
                </scope>
            </method>
            <method name="mult" type="double[][]" line="645">
                <declaration name="m" type="int" line="646"/>
            </method>
            <method name="transAmult" type="double[][]" line="661">
                <declaration name="m" type="int" line="662"/>
                <scope line="667">
                    <declaration name="temp" type="double" line="668"/>
                </scope>
            </method>
            <method name="transBmult" type="double[][]" line="678">
                <declaration name="m" type="int" line="679"/>
                <scope line="685"/>
            </method>
            <method name="transABmult" type="double[][]" line="695">
                <declaration name="m" type="int" line="696"/>
                <scope line="701">
                    <declaration name="temp" type="double" line="702"/>
                </scope>
            </method>
            <method name="multAdd" type="double[][]" line="712">
                <declaration name="m" type="int" line="713"/>
            </method>
            <method name="transAmultAdd" type="double[][]" line="726">
                <declaration name="m" type="int" line="727"/>
                <scope line="732">
                    <declaration name="temp" type="double" line="733"/>
                </scope>
            </method>
            <method name="transBmultAdd" type="double[][]" line="743">
                <declaration name="m" type="int" line="744"/>
            </method>
            <method name="transABmultAdd" type="double[][]" line="757">
                <declaration name="m" type="int" line="758"/>
                <scope line="763">
                    <declaration name="temp" type="double" line="764"/>
                </scope>
            </method>
            <javadoc line="773">
                Tests &lt;code&gt;A = A + alpha*B&lt;/code&gt;                
            </javadoc>
            <method name="testRandomMatrixAdd" type="void" line="776">
                <declaration name="alpha" type="double" line="777"/>
            </method>
            <javadoc line="784">
                Tests &lt;code&gt;A = A + B&lt;/code&gt;                
            </javadoc>
            <method name="testMatrixAdd" type="void" line="787"/>
            <javadoc line="794">
                Tests &lt;code&gt;A = A + 1*B&lt;/code&gt;                
            </javadoc>
            <method name="testOneMatrixAdd" type="void" line="797"/>
            <javadoc line="804">
                Tests &lt;code&gt;A = A + 0*B&lt;/code&gt;                
            </javadoc>
            <method name="testZeroMatrixAdd" type="void" line="807"/>
            <javadoc line="814">
                Tests &lt;code&gt;A = alpha*B&lt;/code&gt;                
            </javadoc>
            <method name="testRandomMatrixSet" type="void" line="817">
                <declaration name="alpha" type="double" line="818"/>
            </method>
            <javadoc line="825">
                Tests &lt;code&gt;A = B&lt;/code&gt;                
            </javadoc>
            <method name="testMatrixSet" type="void" line="828"/>
            <javadoc line="835">
                Tests &lt;code&gt;A = 1*B&lt;/code&gt;                
            </javadoc>
            <method name="testOneMatrixSet" type="void" line="838"/>
            <javadoc line="845">
                Tests &lt;code&gt;A = 0*B&lt;/code&gt;                
            </javadoc>
            <method name="testZeroMatrixSet" type="void" line="848"/>
            <javadoc line="855">
                Checks transpose                
            </javadoc>
            <method name="testTranspose" type="void" line="858">
                <declaration name="At" type="Matrix" line="859"/>
            </method>
            <method name="set" type="void" line="863"/>
            <method name="add" type="void" line="869"/>
            <method name="transpose" type="double[][]" line="875">
                <declaration name="Adt" type="double[][]" line="879"/>
            </method>
            <javadoc line="886">
                Test of direct matrix solver                
            </javadoc>
            <method name="testMatrixSolve" type="void" line="889">
                <scope line="890">
                    <scope line="891">
                        <declaration name="B" type="Matrix" line="892"/>
                        <declaration name="X" type="Matrix" line="893"/>
                        <declaration name="Y" type="Matrix" line="896"/>
                    </scope>
                    <scope line="900"/>
                    <scope line="902"/>
                </scope>
            </method>
            <javadoc line="908">
                Test of direct transpose matrix solver                
            </javadoc>
            <method name="testTransMatrixSolve" type="void" line="911">
                <scope line="912">
                    <scope line="913">
                        <declaration name="B" type="Matrix" line="914"/>
                        <declaration name="X" type="Matrix" line="915"/>
                        <declaration name="Y" type="Matrix" line="918"/>
                    </scope>
                    <scope line="922"/>
                    <scope line="924"/>
                </scope>
            </method>
            <javadoc line="930">
                Test of direct vector solver                
            </javadoc>
            <method name="testVectorSolve" type="void" line="933">
                <scope line="934">
                    <scope line="935">
                        <declaration name="b" type="Vector" line="936"/>
                        <declaration name="x" type="Vector" line="937"/>
                        <declaration name="y" type="Vector" line="940"/>
                    </scope>
                    <scope line="944"/>
                    <scope line="946"/>
                </scope>
            </method>
            <javadoc line="952">
                Test of direct transpose vector solver                
            </javadoc>
            <method name="testTransVectorSolve" type="void" line="955">
                <scope line="956">
                    <scope line="957">
                        <declaration name="b" type="Vector" line="958"/>
                        <declaration name="x" type="Vector" line="959"/>
                        <declaration name="y" type="Vector" line="962"/>
                    </scope>
                    <scope line="966"/>
                    <scope line="968"/>
                </scope>
            </method>
            <javadoc line="974">
                Test additions using iterators                
            </javadoc>
            <method name="testAdd" type="void" line="977">
                <declaration name="alpha" type="double" line="978"/>
                <scope line="979"/>
            </method>
            <javadoc line="986">
                Checks that copy is deep, not reference                
            </javadoc>
            <method name="testCopy" type="void" line="989">
                <declaration name="Ac" type="Matrix" line="990"/>
            </method>
            <javadoc line="995">
                Test iterator get                
            </javadoc>
            <method name="testIterator" type="void" line="998">
                <declaration name="Ac" type="double[][]" line="999"/>
            </method>
            <javadoc line="1005">
                Test iterator set                
            </javadoc>
            <method name="testIteratorSet" type="void" line="1008">
                <declaration name="alpha" type="double" line="1009"/>
            </method>
            <javadoc line="1015">
                Test iterator read and write                
            </javadoc>
            <method name="testIteratorSetGet" type="void" line="1018">
                <declaration name="alpha" type="double" line="1019"/>
                <declaration name="Ac" type="double[][]" line="1020"/>
                <scope line="1021"/>
            </method>
            <javadoc line="1030">
                Checks zero()                
            </javadoc>
            <method name="testZero" type="void" line="1033"/>
            <method name="zero" type="double[][]" line="1037"/>
            <javadoc line="1044">
                Cardinality computation                
            </javadoc>
            <method name="testCardinality" type="void" line="1047"/>
            <method name="cardinality" type="int" line="1051">
                <declaration name="nz" type="int" line="1052"/>
            </method>
            <javadoc line="1060">
                Checks in-place transpose for square matrices                
            </javadoc>
            <method name="testTransposeInplace" type="void" line="1063"/>
            <javadoc line="1068">
                Scaling with an arbitrary scalar                
            </javadoc>
            <method name="testScale" type="void" line="1071">
                <declaration name="alpha" type="double" line="1072"/>
            </method>
            <javadoc line="1078">
                Scaling by zero                
            </javadoc>
            <method name="testZeroScale" type="void" line="1081"/>
            <javadoc line="1087">
                Scaling by one                
            </javadoc>
            <method name="testOneScale" type="void" line="1090"/>
            <method name="scale" type="double[][]" line="1096"/>
            <javadoc line="1103">
                Checks the 1 norm                
            </javadoc>
            <method name="testOneNorm" type="void" line="1106"/>
            <javadoc line="1111">
                Checks the Frobenius norm                
            </javadoc>
            <method name="testFrobeniusNorm" type="void" line="1114"/>
            <javadoc line="1119">
                Checks the infinity norm                
            </javadoc>
            <method name="testInfinityNorm" type="void" line="1122"/>
            <method name="norm1" type="double" line="1127">
                <declaration name="max" type="double" line="1128"/>
                <scope line="1129">
                    <declaration name="rowsum" type="double" line="1130"/>
                </scope>
            </method>
            <method name="normF" type="double" line="1138">
                <declaration name="norm" type="double" line="1139"/>
            </method>
            <method name="normInf" type="double" line="1146">
                <declaration name="columnSum" type="double[]" line="1150"/>
                <declaration name="max" type="double" line="1155"/>
            </method>
            <javadoc line="1161">
                Checks for equality between the matrix and the array                
            </javadoc>
            <method name="assertEquals" type="void" line="1164">
                <scope line="1168"/>
            </method>
            <javadoc line="1175">
                Checks for equality between two arrays                
            </javadoc>
            <method name="assertEquals" type="void" line="1178">
                <scope line="1180"/>
            </method>
            <method name="assertEquals" type="void" line="1187"/>
            <method name="assertEquals" type="void" line="1193"/>
            <method name="assertEquals" type="void" line="1198">
                <scope line="1201">
                    <scope line="1202"/>
                </scope>
            </method>
            <method name="assertEquals" type="void" line="1208">
                <scope line="1210"/>
            </method>
            <method name="assertEqualsOrOpposite" type="void" line="1215">
                <scope line="1217">
                    <declaration name="a" type="double" line="1218"/>
                    <declaration name="b" type="double" line="1219"/>
                </scope>
            </method>
        </class>
    </source>