<?xml version="1.0" encoding="UTF-8"?>
<source package="org.ejml.alg.dense.linsol.chol">
  <import name="org.ejml.alg.block.BlockMatrixOps" />
  <import name="org.ejml.alg.block.linsol.chol.BlockCholeskyOuterSolver" />
  <import name="org.ejml.alg.dense.linsol.WrapLinearSolverBlock64" />
  <import name="org.ejml.data.DenseMatrix64F" />
  <class name="LinearSolverCholBlock64" extends="WrapLinearSolverBlock64" startLine="27">
    <javadoc>
      <text>* A wrapper around {@link org.ejml.factory.CholeskyDecomposition}(BlockMatrix64F) that allows
 * it to be easily used with {@link org.ejml.data.DenseMatrix64F}.</text>
      <author>Peter Abeles</author>
    </javadoc>
    <method type="constructor" name="LinearSolverCholBlock64" startLine="35" endLine="37" />
    <javadoc>
      <text>* Only converts the B matrix and passes that onto solve.  Te result is then copied into
 * the input 'X' matrix.</text>
      <param>B A matrix &real; <sup>m &times; p</sup>.  Not modified.</param>
      <param>X A matrix &real; <sup>n &times; p</sup>, where the solution is written to.  Modified.</param>
    </javadoc>
    <method type="void" name="solve" startLine="47" endLine="55">
      <comment>since overwrite B is true X does not need to be passed in</comment>
    </method>
  </class>
</source>
