<?xml version="1.0" encoding="UTF-8"?>
<source package="org.ejml.alg.dense.linsol.qr">
  <import name="org.ejml.alg.dense.decomposition.TriangularSolver" />
  <import name="org.ejml.alg.dense.linsol.LinearSolverAbstract" />
  <import name="org.ejml.data.DenseMatrix64F" />
  <import name="org.ejml.factory.QRDecomposition" />
  <import name="org.ejml.ops.CommonOps" />
  <import name="org.ejml.ops.SpecializedOps" />
  <class name="LinearSolverQr" extends="LinearSolverAbstract" startLine="29">
    <javadoc>
      <text>* <p>
 * A solver for a generic QR decomposition algorithm.  This will in general be a bit slower than the
 * specialized once since the full Q and R matrices need to be extracted.
 * </p>
 * <p>
 * It solve for x by first multiplying b by the transpose of Q then solving for the result.
 * <br>
 * QRx=b<br>
 * Rx=Q^T b<br>
 * </p></text>
      <author>Peter Abeles</author>
    </javadoc>
    <declaration type="QRDecomposition<DenseMatrix64F>" name="decomposer" />
    <declaration type="int" name="maxRows" />
    <declaration type="int" name="maxCols" />
    <declaration type="DenseMatrix64F" name="Q" />
    <declaration type="DenseMatrix64F" name="R" />
    <declaration type="DenseMatrix64F" name="Y" />
    <javadoc>
      <text>* Creates a linear solver that uses QR decomposition.</text>
    </javadoc>
    <method type="constructor" name="LinearSolverQr" startLine="59" endLine="61" />
    <javadoc>
      <text>* Changes the size of the matrix it can solve for</text>
      <param>maxRows Maximum number of rows in the matrix it will decompose.</param>
      <param>maxCols Maximum number of columns in the matrix it will decompose.</param>
    </javadoc>
    <method type="void" name="setMaxSize" startLine="70" endLine="78" />
    <javadoc>
      <text>* Performs QR decomposition on A</text>
      <param>A not modified.</param>
    </javadoc>
    <method type="boolean" name="setA" startLine="86" endLine="101">
      <scope startLine="87" endLine="89" />
    </method>
    <method type="double" name="quality" startLine="104" endLine="106" />
    <javadoc>
      <text>* Solves for X using the QR decomposition.</text>
      <param>B A matrix that is n by m.  Not modified.</param>
      <param>X An n by m matrix where the solution is written to.  Modified.</param>
    </javadoc>
    <method type="void" name="solve" startLine="115" endLine="146">
      <declaration type="int" name="BnumCols" />
      <scope startLine="127" endLine="145">
        <scope startLine="130" endLine="132" />
        <scope startLine="142" endLine="144" />
        <comment>make a copy of this column in the vector</comment>
        <comment>Solve Qa=b</comment>
        <comment>a = Q'b</comment>
        <comment>solve for Rx = b using the standard upper triangular solver</comment>
        <comment>save the results</comment>
      </scope>
      <comment>solve each column one by one</comment>
    </method>
    <method type="boolean" name="modifiesA" startLine="149" endLine="151" />
    <method type="boolean" name="modifiesB" startLine="154" endLine="156" />
  </class>
</source>
