<?xml version="1.0" encoding="UTF-8"?>
<source package="org.ejml.alg.dense.linsol.qr">
  <import name="org.ejml.alg.dense.decomposition.TriangularSolver" />
  <import name="org.ejml.data.DenseMatrix64F" />
  <import name="org.ejml.factory.QRPDecomposition" />
  <import name="org.ejml.ops.CommonOps" />
  <class name="SolvePseudoInverseQrp" extends="BaseLinearSolverQrp" startLine="26">
    <javadoc>
      <text>* <p>
 * A pseudo inverse solver for a generic QR column pivot decomposition algorithm.  See{@link BaseLinearSolverQrp} for technical details on the algorithm.
 * </p></text>
      <author>Peter Abeles</author>
    </javadoc>
    <declaration type="DenseMatrix64F" name="Q" />
    <declaration type="DenseMatrix64F" name="x_basic" />
    <javadoc>
      <text>* Configure and provide decomposition</text>
      <param>decomposition Decomposition used.</param>
      <param>norm2Solution If true the basic solution will be returned, false the minimal 2-norm solution.</param>
    </javadoc>
    <method type="constructor" name="SolvePseudoInverseQrp" startLine="49" endLine="51" />
    <method type="boolean" name="setA" startLine="54" endLine="63" />
    <method type="void" name="solve" startLine="66" endLine="106">
      <declaration type="int" name="BnumCols" />
      <declaration type="int[]" name="pivots" />
      <scope startLine="78" endLine="105">
        <scope startLine="83" endLine="85" />
        <scope startLine="102" endLine="104" />
        <comment>make a copy of this column in the vector</comment>
        <comment>Solve Q*a=b => a = Q'*b</comment>
        <comment>solve for Rx = b using the standard upper triangular solver</comment>
        <comment>finish the basic solution by filling in zeros</comment>
        <comment>save the results</comment>
      </scope>
      <comment>get the pivots and transpose them</comment>
      <comment>solve each column one by one</comment>
    </method>
    <method type="boolean" name="modifiesA" startLine="109" endLine="111" />
    <method type="boolean" name="modifiesB" startLine="114" endLine="116" />
    <comment>stores the orthogonal Q matrix from QR decomposition</comment>
    <comment>storage for basic solution</comment>
  </class>
</source>
