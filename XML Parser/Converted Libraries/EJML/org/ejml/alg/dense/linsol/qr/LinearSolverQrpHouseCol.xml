<?xml version="1.0" encoding="UTF-8"?>
<source package="org.ejml.alg.dense.linsol.qr">
  <import name="org.ejml.alg.dense.decomposition.TriangularSolver" />
  <import name="org.ejml.alg.dense.decomposition.qr.QRColPivDecompositionHouseholderColumn" />
  <import name="org.ejml.alg.dense.decomposition.qr.QrHelperFunctions" />
  <import name="org.ejml.data.DenseMatrix64F" />
  <class name="LinearSolverQrpHouseCol" extends="BaseLinearSolverQrp" startLine="26">
    <javadoc>
      <text>* <p>
 * Performs a pseudo inverse solver using the {@link QRColPivDecompositionHouseholderColumn} decomposition
 * directly.  For details on how the pseudo inverse is computed see {@link BaseLinearSolverQrp}.
 * </p></text>
      <author>Peter Abeles</author>
    </javadoc>
    <declaration type="QRColPivDecompositionHouseholderColumn" name="decomposition" />
    <declaration type="DenseMatrix64F" name="x_basic" />
    <method type="constructor" name="LinearSolverQrpHouseCol" startLine="44" endLine="47" />
    <method type="void" name="solve" startLine="50" endLine="101">
      <declaration type="int" name="BnumCols" />
      <declaration type="int[]" name="pivots" />
      <declaration type="double[]" name="qr" />
      <declaration type="double[]" name="gammas" />
      <scope startLine="65" endLine="100">
        <scope startLine="70" endLine="72" />
        <scope startLine="76" endLine="83">
          <declaration type="double[]" name="u" />
          <declaration type="double" name="vv" />
        </scope>
        <scope startLine="97" endLine="99" />
        <comment>make a copy of this column in the vector</comment>
        <comment>Solve Q*x=b => x = Q'*b</comment>
        <comment>Q_n*b = (I-gamma*u*u^T)*b = b - u*(gamma*U^T*b)</comment>
        <comment>solve for Rx = b using the standard upper triangular solver</comment>
        <comment>finish the basic solution by filling in zeros</comment>
        <comment>save the results</comment>
      </scope>
      <comment>get the pivots and transpose them</comment>
      <comment>solve each column one by one</comment>
    </method>
    <method type="boolean" name="modifiesA" startLine="104" endLine="106" />
    <method type="boolean" name="modifiesB" startLine="109" endLine="111" />
    <comment>Computes the QR decomposition</comment>
    <comment>storage for basic solution</comment>
  </class>
</source>
