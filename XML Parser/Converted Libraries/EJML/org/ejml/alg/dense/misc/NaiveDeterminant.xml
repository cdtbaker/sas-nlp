<?xml version="1.0" encoding="UTF-8"?>
<source package="org.ejml.alg.dense.misc">
  <import name="org.ejml.data.DenseMatrix64F" />
  <class name="NaiveDeterminant" startLine="24">
    <javadoc>
      <text>* Computes the determinant using different very simple and computationally expensive algorithms.</text>
      <author>Peter Abeles</author>
    </javadoc>
    <javadoc>
      <text>* <p>
 * Computes the determinant of the matrix using Leibniz's formula
 * </p>
 * <p>
 * A direct implementation of Leibniz determinant equation.  This is of little practical use
 * because of its slow runtime of O(n!) where n is the width of the matrix. LU decomposition
 * should be used instead.  One advantage of Leibniz's equation is how simplistic it is.
 * </p>
 * <p>
 * det(A) = Sum( &sigma; in S<sub>n</sub> ; sgn(&sigma;) Prod( i = 1 to n ; a<sub>i,&sigma;(i)</sub>) )<br>
 * <ul>
 * <li>sgn is the sign function of permutations. +1 or -1 for even and odd permutations</li>
 * <li>a set of permutations. if n=3 then the possible permutations are (1,2,3) (1,3,2), (3,2,1), ... etc</li>
 * </ul>
 * </p></text>
      <param>mat The matrix whose determinant is computed.</param>
      <return>The value of the determinant</return>
    </javadoc>
    <method type="double" name="leibniz" startLine="53" endLine="73">
      <declaration type="PermuteArray" name="perm" />
      <declaration type="double" name="total" />
      <declaration type="int[]" name="p" />
      <scope startLine="60" endLine="70">
        <declaration type="double" name="prod" />
        <scope startLine="64" endLine="66" />
      </scope>
    </method>
    <javadoc>
      <text>* <p>
 * A simple and inefficient algorithm for computing the determinant. This should never be used.
 * It is at least two orders of magnitude slower than {@link DeterminantFromMinor}. This is included
 * to provide a point of comparision for other algorithms.
 * </p></text>
      <param>mat The matrix that the determinant is to be computed from</param>
      <return>The determinant.</return>
    </javadoc>
    <method type="double" name="recursive" startLine="85" endLine="118">
      <scope startLine="86" endLine="88" />
      <scope startLine="88" endLine="90" />
      <scope startLine="90" endLine="92" />
      <declaration type="double" name="result" />
      <scope startLine="96" endLine="115">
        <declaration type="DenseMatrix64F" name="minorMat" />
        <scope startLine="99" endLine="108">
          <scope startLine="100" endLine="107">
            <scope startLine="102" endLine="104" />
            <scope startLine="104" endLine="106" />
          </scope>
        </scope>
      </scope>
    </method>
  </class>
</source>
