<?xml version="1.0" encoding="UTF-8"?>
<source package="org.ejml.alg.block">
  <import name="org.ejml.data.D1Submatrix64F" />
  <class name="BlockVectorOps" startLine="24">
    <javadoc>
      <text>* <p>
 * Math operations for inner vectors (row and column) inside of block matrices:<br>
 * <br>
 * scale: b<sub>i</sub> = &alpha;*a<sub>i</sub><br>
 * div:  <sub>i</sub> = a<sub>i</sub>/&alpha;<br>
 * add: c<sub>i</sub> = &alpha;*a<sub>i</sub> + &beta;B<sub>i</sub><br>
 * dot: c = sum a<sub>i</sub>*b<sub>i</sub><br>
 * </p>
 * <p>
 * All submatrices must be block aligned.  All offsets and end indexes are relative to the beginning of each
 * submatrix.
 * </p></text>
      <author>Peter Abeles</author>
    </javadoc>
    <javadoc>
      <text>* <p>
 * Row vector scale:<br>
 * scale: b<sub>i</sub> = &alpha;*a<sub>i</sub><br>
 * where 'a' and 'b' are row vectors within the row block vector A and B.
 * </p></text>
      <param>A submatrix. Not modified.</param>
      <param>rowA which row in A the vector is contained in.</param>
      <param>alpha scale factor.</param>
      <param>B submatrix that the results are written to.  Modified.</param>
      <param>offset Index at which the vectors start at.</param>
      <param>end Index at which the vectors end at.</param>
    </javadoc>
    <method type="void" name="scale_row" startLine="61" endLine="100">
      <declaration type="double[]" name="dataA" />
      <declaration type="double[]" name="dataB" />
      <declaration type="int" name="startI" />
      <declaration type="int" name="rowBlockA" />
      <declaration type="int" name="rowBlockB" />
      <declaration type="int" name="heightA" />
      <declaration type="int" name="heightB" />
      <scope startLine="78" endLine="99">
        <declaration type="int" name="segment" />
        <declaration type="int" name="widthA" />
        <declaration type="int" name="widthB" />
        <declaration type="int" name="indexA" />
        <declaration type="int" name="indexB" />
        <scope startLine="87" endLine="94">
          <scope startLine="91" endLine="93" />
        </scope>
        <scope startLine="94" endLine="98">
          <scope startLine="95" endLine="97" />
        </scope>
      </scope>
      <comment>handle the case where offset is more than a block</comment>
      <comment>handle rows in any block</comment>
    </method>
    <javadoc>
      <text>* <p>
 * Row vector divide:<br>
 * div: b<sub>i</sub> = a<sub>i</sub>/&alpha;<br>
 * where 'a' and 'b' are row vectors within the row block vector A and B.
 * </p></text>
      <param>A submatrix. Not modified.</param>
      <param>rowA which row in A the vector is contained in.</param>
      <param>alpha scale factor.</param>
      <param>B submatrix that the results are written to.  Modified.</param>
      <param>offset Index at which the vectors start at.</param>
      <param>end Index at which the vectors end at.</param>
    </javadoc>
    <method type="void" name="div_row" startLine="120" endLine="159">
      <declaration type="double[]" name="dataA" />
      <declaration type="double[]" name="dataB" />
      <declaration type="int" name="startI" />
      <declaration type="int" name="rowBlockA" />
      <declaration type="int" name="rowBlockB" />
      <declaration type="int" name="heightA" />
      <declaration type="int" name="heightB" />
      <scope startLine="137" endLine="158">
        <declaration type="int" name="segment" />
        <declaration type="int" name="widthA" />
        <declaration type="int" name="widthB" />
        <declaration type="int" name="indexA" />
        <declaration type="int" name="indexB" />
        <scope startLine="146" endLine="153">
          <scope startLine="150" endLine="152" />
        </scope>
        <scope startLine="153" endLine="157">
          <scope startLine="154" endLine="156" />
        </scope>
      </scope>
      <comment>handle the case where offset is more than a block</comment>
      <comment>handle rows in any block</comment>
    </method>
    <javadoc>
      <text>* <p>
 * Row vector add:<br>
 * add: c<sub>i</sub> = &alpha;*a<sub>i</sub> + &beta;B<sub>i</sub><br>
 * where 'a', 'b', and 'c' are row vectors within the row block vectors of A, B, and C respectively.
 * </p></text>
      <param>blockLength Length of each inner matrix block.</param>
      <param>A submatrix. Not modified.</param>
      <param>rowA which row in A the vector is contained in.</param>
      <param>alpha scale factor of A</param>
      <param>B submatrix. Not modified.</param>
      <param>rowB which row in B the vector is contained in.</param>
      <param>beta scale factor of B</param>
      <param>C submatrix where the results are written to. Modified.</param>
      <param>rowC which row in C is the vector contained.</param>
      <param>offset Index at which the vectors start at.</param>
      <param>end Index at which the vectors end at.</param>
    </javadoc>
    <method type="void" name="add_row" startLine="184" endLine="222">
      <declaration type="int" name="heightA" />
      <declaration type="int" name="heightB" />
      <declaration type="int" name="heightC" />
      <declaration type="int" name="startI" />
      <declaration type="double[]" name="dataA" />
      <declaration type="double[]" name="dataB" />
      <declaration type="double[]" name="dataC" />
      <scope startLine="197" endLine="221">
        <declaration type="int" name="segment" />
        <declaration type="int" name="widthA" />
        <declaration type="int" name="widthB" />
        <declaration type="int" name="widthC" />
        <declaration type="int" name="indexA" />
        <declaration type="int" name="indexB" />
        <declaration type="int" name="indexC" />
        <scope startLine="208" endLine="216">
          <scope startLine="213" endLine="215" />
        </scope>
        <scope startLine="216" endLine="220">
          <scope startLine="217" endLine="219" />
        </scope>
      </scope>
      <comment>handle the case where offset is more than a block</comment>
    </method>
    <javadoc>
      <text>* <p>
 * Row vector dot/inner product:<br>
 * dot: c = sum a<sub>i</sub>*b<sub>i</sub><br>
 * where 'a' and 'b' are row vectors within the row block vector A and B, and 'c' is a scalar.
 * </p></text>
      <param>A submatrix. Not modified.</param>
      <param>rowA which row in A the vector is contained in.</param>
      <param>B submatrix. Not modified.</param>
      <param>rowB which row in B the vector is contained in.</param>
      <param>offset Index at which the vectors start at.</param>
      <param>end Index at which the vectors end at.</param>
      <return>Results of the dot product.</return>
    </javadoc>
    <method type="double" name="dot_row" startLine="242" endLine="290">
      <declaration type="int" name="startI" />
      <declaration type="double[]" name="dataA" />
      <declaration type="double[]" name="dataB" />
      <declaration type="double" name="total" />
      <declaration type="int" name="rowBlockA" />
      <declaration type="int" name="rowBlockB" />
      <declaration type="int" name="heightA" />
      <declaration type="int" name="heightB" />
      <scope startLine="266" endLine="287">
        <declaration type="int" name="segment" />
        <declaration type="int" name="widthA" />
        <declaration type="int" name="widthB" />
        <declaration type="int" name="indexA" />
        <declaration type="int" name="indexB" />
        <scope startLine="275" endLine="282">
          <scope startLine="279" endLine="281" />
        </scope>
        <scope startLine="282" endLine="286">
          <scope startLine="283" endLine="285" />
        </scope>
      </scope>
      <comment>handle the case where offset is more than a block</comment>
      <comment>handle rows in any block</comment>
    </method>
    <javadoc>
      <text>* <p>
 * vector dot/inner product from one row vector and one column vector:<br>
 * dot: c = sum a<sub>i</sub>*b<sub>i</sub><br>
 * where 'a' is a row vector 'b' is a column vectors within the row block vector A and B, and 'c' is a scalar.
 * </p></text>
      <param>A block row vector. Not modified.</param>
      <param>rowA which row in A the vector is contained in.</param>
      <param>B block column vector. Not modified.</param>
      <param>colB which column in B is the vector contained in.</param>
      <param>offset Index at which the vectors start at.</param>
      <param>end Index at which the vectors end at.</param>
      <return>Results of the dot product.</return>
    </javadoc>
    <method type="double" name="dot_row_col" startLine="310" endLine="358">
      <declaration type="int" name="startI" />
      <declaration type="double[]" name="dataA" />
      <declaration type="double[]" name="dataB" />
      <declaration type="double" name="total" />
      <declaration type="int" name="rowBlockA" />
      <declaration type="int" name="colBlockB" />
      <declaration type="int" name="heightA" />
      <declaration type="int" name="widthB" />
      <scope startLine="334" endLine="355">
        <declaration type="int" name="segment" />
        <declaration type="int" name="widthA" />
        <declaration type="int" name="heightB" />
        <declaration type="int" name="indexA" />
        <declaration type="int" name="indexB" />
        <scope startLine="343" endLine="350">
          <scope startLine="347" endLine="349" />
        </scope>
        <scope startLine="350" endLine="354">
          <scope startLine="351" endLine="353" />
        </scope>
      </scope>
      <comment>handle the case where offset is more than a block</comment>
      <comment>handle rows in any block</comment>
    </method>
  </class>
</source>
