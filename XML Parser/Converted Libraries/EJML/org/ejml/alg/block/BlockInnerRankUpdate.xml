<?xml version="1.0" encoding="UTF-8"?>
<source package="org.ejml.alg.block">
  <import name="org.ejml.data.D1Submatrix64F" />
  <class name="BlockInnerRankUpdate" startLine="24">
    <javadoc>
      <text>* Performs rank-n update operations on the inner blocks of a {@link org.ejml.data.BlockMatrix64F}It is assumed and not checked that the submatrices are aligned along the matrix's blocks.</text>
      <author>Peter Abeles</author>
    </javadoc>
    <javadoc>
      <text>* <p>
 * Performs:<br>
 * <br>
 * A = A + &alpha; B <sup>T</sup>B
 * </p></text>
      <param>blockLength Size of the block in the block matrix.</param>
      <param>alpha scaling factor for right hand side.</param>
      <param>A Block aligned submatrix.</param>
      <param>B Block aligned submatrix.</param>
    </javadoc>
    <method type="void" name="rankNUpdate" startLine="47" endLine="80">
      <declaration type="int" name="heightB" />
      <declaration type="int" name="N" />
      <scope startLine="60" endLine="79">
        <declaration type="int" name="indexB_i" />
        <declaration type="int" name="widthB_i" />
        <declaration type="int" name="rowA" />
        <declaration type="int" name="heightA" />
        <scope startLine="68" endLine="78">
          <declaration type="int" name="widthB_j" />
          <declaration type="int" name="indexA" />
          <declaration type="int" name="indexB_j" />
        </scope>
      </scope>
    </method>
    <javadoc>
      <text>* <p>
 * Rank N update function for a symmetric inner submatrix and only operates on the upper
 * triangular portion of the submatrix.<br>
 * <br>
 * A = A - B <sup>T</sup>B
 * </p></text>
    </javadoc>
    <method type="void" name="symmRankNMinus_U" startLine="92" endLine="131">
      <declaration type="int" name="heightB" />
      <declaration type="int" name="N" />
      <scope startLine="106" endLine="130">
        <declaration type="int" name="indexB_i" />
        <declaration type="int" name="widthB_i" />
        <declaration type="int" name="rowA" />
        <declaration type="int" name="heightA" />
        <scope startLine="114" endLine="129">
          <declaration type="int" name="widthB_j" />
          <declaration type="int" name="indexA" />
          <declaration type="int" name="indexB_j" />
          <scope startLine="121" endLine="125" />
          <scope startLine="125" endLine="128" />
        </scope>
        <comment>only the upper portion of this block needs to be modified since it is along a diagonal</comment>
      </scope>
    </method>
    <javadoc>
      <text>* <p>
 * Rank N update function for a symmetric inner submatrix and only operates on the lower
 * triangular portion of the submatrix.<br>
 * <br>
 * A = A - B*B<sup>T</sup><br>
 * </p></text>
    </javadoc>
    <method type="void" name="symmRankNMinus_L" startLine="143" endLine="180">
      <declaration type="int" name="widthB" />
      <declaration type="int" name="N" />
      <scope startLine="155" endLine="179">
        <declaration type="int" name="heightB_i" />
        <declaration type="int" name="indexB_i" />
        <declaration type="int" name="rowA" />
        <declaration type="int" name="heightA" />
        <scope startLine="164" endLine="178">
          <declaration type="int" name="widthB_j" />
          <declaration type="int" name="indexA" />
          <declaration type="int" name="indexB_j" />
          <scope startLine="171" endLine="174" />
          <scope startLine="174" endLine="177" />
        </scope>
      </scope>
    </method>
    <javadoc>
      <text>* <p>
 * Performs the following operation on a block:<br>
 * <br>
 * c = c - a<sup>T</sup>a<br>
 * </p></text>
    </javadoc>
    <method type="void" name="multTransABlockMinus" startLine="191" endLine="223">
      <declaration type="int" name="rowB" />
      <declaration type="int" name="endLoopK" />
      <declaration type="int" name="startA" />
      <scope startLine="207" endLine="222">
        <declaration type="int" name="a" />
        <declaration type="int" name="c" />
        <declaration type="int" name="endA" />
        <declaration type="int" name="endB" />
        <scope startLine="214" endLine="221">
          <declaration type="double" name="valA" />
          <declaration type="int" name="b" />
          <scope startLine="218" endLine="220" />
        </scope>
      </scope>
      <comment>for( int i = 0; i < widthA; i++ ) {</comment>
      <comment>for( int k = 0; k < heightA; k++ ) {</comment>
      <comment />
      <comment>double valA = dataA[k*widthA + i + indexA];</comment>
      <comment>for( int j = 0; j < widthC; j++ ) {</comment>
      <comment>dataC[ i*widthC + j + indexC ] -= valA * dataA[k*widthC + j + indexB];</comment>
      <comment>}</comment>
      <comment>}</comment>
      <comment>}</comment>
      <comment>for( int k = 0; k < heightA; k++ ) {</comment>
    </method>
    <javadoc>
      <text>* <p>
 * Performs the following operation on the upper triangular portion of a block:<br>
 * <br>
 * c = c - a<sup>T</sup>a<br>
 * </p></text>
    </javadoc>
    <method type="void" name="multTransABlockMinus_U" startLine="234" endLine="260">
      <scope startLine="245" endLine="259">
        <scope startLine="246" endLine="258">
          <declaration type="double" name="valA" />
          <declaration type="int" name="b" />
          <declaration type="int" name="c" />
          <declaration type="int" name="endC" />
          <scope startLine="254" endLine="257" />
        </scope>
        <comment>for( int j = i; j < widthC; j++ ) {</comment>
      </scope>
      <comment>for( int i = 0; i < widthA; i++ ) {</comment>
      <comment>for( int k = 0; k < heightA; k++ ) {</comment>
      <comment />
      <comment>double valA = dataA[k*widthA + i + indexA];</comment>
      <comment>for( int j = i; j < widthC; j++ ) {</comment>
      <comment>dataC[ i*widthC + j + indexC ] -= valA * dataA[k*widthC + j + indexB];</comment>
      <comment>}</comment>
      <comment>}</comment>
      <comment>}</comment>
    </method>
    <javadoc>
      <text>* <p>
 * Performs the following operation on a block:<br>
 * <br>
 * c = c - a*a<sup>T</sup><br>
 * </p></text>
    </javadoc>
    <method type="void" name="multTransBBlockMinus" startLine="271" endLine="302">
      <declaration type="int" name="rowA" />
      <declaration type="int" name="c" />
      <scope startLine="284" endLine="301">
        <declaration type="int" name="endA" />
        <declaration type="int" name="rowB" />
        <declaration type="int" name="endLoopJ" />
        <scope startLine="290" endLine="300">
          <declaration type="int" name="a" />
          <declaration type="int" name="b" />
          <declaration type="double" name="sum" />
          <scope startLine="295" endLine="297" />
        </scope>
        <comment>for( int j = 0; j < widthC; j++  ) {</comment>
      </scope>
      <comment>for( int i = 0; i < heightA; i++ ) {</comment>
      <comment>for( int j = 0; j < widthC; j++ ) {</comment>
      <comment>double sum = 0;</comment>
      <comment>for( int k = 0; k < widthA; k++ ) {</comment>
      <comment>sum += dataA[i*widthA + k + indexA] * dataA[j*widthA + k + indexB];</comment>
      <comment>}</comment>
      <comment>dataC[ i*widthC + j + indexC ] -= sum;</comment>
      <comment>}</comment>
      <comment>}</comment>
    </method>
    <javadoc>
      <text>* <p>
 * Performs the following operation on the lower triangular portion of a block:<br>
 * <br>
 * c = c - a*a<sup>T</sup><br>
 * </p></text>
    </javadoc>
    <method type="void" name="multTransBBlockMinus_L" startLine="313" endLine="342">
      <scope startLine="324" endLine="340">
        <declaration type="int" name="rowA" />
        <declaration type="int" name="endA" />
        <declaration type="int" name="rowB" />
        <declaration type="int" name="rowC" />
        <scope startLine="329" endLine="339">
          <declaration type="double" name="sum" />
          <declaration type="int" name="a" />
          <declaration type="int" name="b" />
          <scope startLine="335" endLine="337" />
        </scope>
      </scope>
      <comment>for( int i = 0; i < heightA; i++ ) {</comment>
      <comment>for( int j = 0; j <= i; j++ ) {</comment>
      <comment>double sum = 0;</comment>
      <comment>for( int k = 0; k < widthA; k++ ) {</comment>
      <comment>sum += dataA[i*widthA + k + indexA] * dataA[j*widthA + k + indexB];</comment>
      <comment>}</comment>
      <comment>dataC[ i*widthC + j + indexC ] -= sum;</comment>
      <comment>}</comment>
      <comment>}</comment>
    </method>
  </class>
</source>
