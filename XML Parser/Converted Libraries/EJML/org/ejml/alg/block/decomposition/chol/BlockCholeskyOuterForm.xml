<?xml version="1.0" encoding="UTF-8"?>
<source package="org.ejml.alg.block.decomposition.chol">
  <import name="org.ejml.alg.block.BlockInnerRankUpdate" />
  <import name="org.ejml.alg.block.BlockMatrixOps" />
  <import name="org.ejml.alg.block.BlockTriangularSolver" />
  <import name="org.ejml.data.BlockMatrix64F" />
  <import name="org.ejml.data.D1Submatrix64F" />
  <import name="org.ejml.factory.CholeskyDecomposition" />
  <class name="BlockCholeskyOuterForm" startLine="29">
    <implements name="CholeskyDecomposition<BlockMatrix64F>" />
    <javadoc>
      <text>* <p>
 * Block Cholesky using outer product form.  The original matrix is stored and modified.
 * </p>
 * <p>
 * Based on the description provided in "Fundamentals of Matrix Computations" 2nd Ed. by David S. Watkins.
 * </p></text>
      <author>Peter Abeles</author>
    </javadoc>
    <declaration type="boolean" name="lower" />
    <declaration type="BlockMatrix64F" name="T" />
    <javadoc>
      <text>* Creates a new BlockCholeskyOuterForm</text>
      <param>lower Should it decompose it into a lower triangular matrix or not.</param>
    </javadoc>
    <method type="constructor" name="BlockCholeskyOuterForm" startLine="52" endLine="54" />
    <javadoc>
      <text>* Decomposes the provided matrix and stores the result in the same matrix.</text>
      <param>A Matrix that is to be decomposed.  Modified.</param>
      <return>If it succeeded or not.</return>
    </javadoc>
    <method type="boolean" name="decompose" startLine="63" endLine="73" />
    <method type="boolean" name="decomposeLower" startLine="75" endLine="111">
      <declaration type="int" name="blockLength" />
      <declaration type="D1Submatrix64F" name="subA" />
      <declaration type="D1Submatrix64F" name="subB" />
      <declaration type="D1Submatrix64F" name="subC" />
      <scope startLine="82" endLine="106">
        <declaration type="int" name="widthA" />
        <scope startLine="99" endLine="105" />
        <comment>cholesky on inner block A</comment>
        <comment>on the last block these operations are not needed.</comment>
        <comment>B = L^-1 B</comment>
        <comment>C = C - B * B^T</comment>
      </scope>
    </method>
    <method type="boolean" name="decomposeUpper" startLine="114" endLine="150">
      <declaration type="int" name="blockLength" />
      <declaration type="D1Submatrix64F" name="subA" />
      <declaration type="D1Submatrix64F" name="subB" />
      <declaration type="D1Submatrix64F" name="subC" />
      <scope startLine="121" endLine="145">
        <declaration type="int" name="widthA" />
        <scope startLine="138" endLine="144" />
        <comment>cholesky on inner block A</comment>
        <comment>on the last block these operations are not needed.</comment>
        <comment>B = U^-1 B</comment>
        <comment>C = C - B^T * B</comment>
      </scope>
    </method>
    <method type="boolean" name="isLower" startLine="153" endLine="155" />
    <method type="BlockMatrix64F" name="getT" startLine="158" endLine="164" />
    <method type="boolean" name="inputModified" startLine="167" endLine="169" />
    <comment>if it should compute an upper or lower triangular matrix</comment>
    <comment>The decomposed matrix.</comment>
  </class>
</source>
