<?xml version="1.0" encoding="UTF-8"?>
<source package="org.ejml.ops">
  <import name="org.ejml.data.DenseMatrix64F" />
  <import name="org.ejml.data.Matrix64F" />
  <import name="org.ejml.data.ReshapeMatrix64F" />
  <import name="java.io.*" />
  <class name="MatrixIO" startLine="28">
    <javadoc>
      <text>* Provides simple to use routines for reading and writing matrices to and from files.</text>
      <author>Peter Abeles</author>
    </javadoc>
    <javadoc>
      <text>* Saves a matrix to disk using Java binary serialization.</text>
      <param>A The matrix being saved.</param>
      <param>fileName Name of the file its being saved at.</param>
      <throws>java.io.IOException</throws>
    </javadoc>
    <method type="void" name="saveBin" startLine="44" endLine="60">
      <declaration type="FileOutputStream" name="fileStream" />
      <declaration type="ObjectOutputStream" name="stream" />
      <scope startLine="48" endLine="51" />
      <scope startLine="51" endLine="58">
        <scope startLine="53" endLine="55" />
        <scope startLine="55" endLine="57" />
        <comment>clean up</comment>
      </scope>
    </method>
    <javadoc>
      <text>* Loads a DeneMatrix64F which has been saved to file using Java binary
 * serialization.</text>
      <param>fileName The file being loaded.</param>
      <return>DenseMatrix64F</return>
      <throws>IOException</throws>
    </javadoc>
    <method type="T" name="loadBin" startLine="72" endLine="88">
      <declaration type="FileInputStream" name="fileStream" />
      <declaration type="ObjectInputStream" name="stream" />
      <declaration type="T" name="ret" />
      <scope startLine="77" endLine="82">
        <scope startLine="79" endLine="81" />
      </scope>
      <scope startLine="82" endLine="84" />
    </method>
    <javadoc>
      <text>* Saves a matrix to disk using in a Column Space Value (CSV) format. For a 
 * description of the format see {@link MatrixIO#loadCSV(String)}.</text>
      <param>A The matrix being saved.</param>
      <param>fileName Name of the file its being saved at.</param>
      <throws>java.io.IOException</throws>
    </javadoc>
    <method type="void" name="saveCSV" startLine="100" endLine="112">
      <declaration type="PrintStream" name="fileStream" />
      <scope startLine="105" endLine="110">
        <scope startLine="106" endLine="108" />
      </scope>
    </method>
    <javadoc>
      <text>* Reads a matrix in which has been encoded using a Column Space Value (CSV)
 * file format. The number of rows and columns are read in on the first line. Then
 * each row is read in the subsequent lines.</text>
      <param>fileName The file being loaded.</param>
      <return>DenseMatrix64F</return>
      <throws>IOException</throws>
    </javadoc>
    <method type="DenseMatrix64F" name="loadCSV" startLine="125" endLine="134">
      <declaration type="FileInputStream" name="fileStream" />
      <declaration type="ReadMatrixCsv" name="csv" />
      <declaration type="DenseMatrix64F" name="ret" />
    </method>
    <javadoc>
      <text>* Reads a matrix in which has been encoded using a Column Space Value (CSV)
 * file format.  For a description of the format see {@link MatrixIO#loadCSV(String)}.</text>
      <param>fileName The file being loaded.</param>
      <param>numRows number of rows in the matrix.</param>
      <param>numCols number of columns in the matrix.</param>
      <return>DenseMatrix64F</return>
      <throws>IOException</throws>
    </javadoc>
    <method type="DenseMatrix64F" name="loadCSV" startLine="148" endLine="157">
      <declaration type="FileInputStream" name="fileStream" />
      <declaration type="ReadMatrixCsv" name="csv" />
      <declaration type="DenseMatrix64F" name="ret" />
    </method>
    <method type="void" name="print" startLine="159" endLine="161" />
    <method type="void" name="print" startLine="163" endLine="167">
      <declaration type="String" name="format" />
    </method>
    <method type="void" name="print" startLine="169" endLine="183">
      <declaration type="String" name="type" />
      <scope startLine="177" endLine="182">
        <scope startLine="178" endLine="180" />
      </scope>
    </method>
    <method type="void" name="print" startLine="186" endLine="197">
      <scope startLine="191" endLine="196">
        <scope startLine="192" endLine="194" />
      </scope>
    </method>
    <comment>public static void main( String []args ) {</comment>
    <comment>Random rand = new Random(234234);</comment>
    <comment>DenseMatrix64F A = RandomMatrices.createRandom(50,70,rand);</comment>
    <comment />
    <comment>SingularValueDecomposition decomp = DecompositionFactory.svd();</comment>
    <comment />
    <comment>decomp.decompose(A);</comment>
    <comment />
    <comment>displayMatrix(A,"Original");</comment>
    <comment>displayMatrix(decomp.getU(false),"U");</comment>
    <comment>displayMatrix(decomp.getV(false),"V");</comment>
    <comment>displayMatrix(decomp.getW(null),"W");</comment>
    <comment>}</comment>
  </class>
</source>
