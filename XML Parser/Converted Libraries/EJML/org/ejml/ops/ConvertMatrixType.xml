<?xml version="1.0" encoding="UTF-8"?>
<source package="org.ejml.ops">
  <import name="org.ejml.alg.block.BlockMatrixOps" />
  <import name="org.ejml.data.*" />
  <class name="ConvertMatrixType" startLine="24">
    <javadoc>
      <text>* Functions for converting between matrix types.  Both matrices must be the same size and their values will
 * be copied.</text>
      <author>Peter Abeles</author>
    </javadoc>
    <javadoc>
      <text>* Generic, but slow, conversion function.</text>
      <param>input Input matrix.</param>
      <param>output Output matrix.</param>
    </javadoc>
    <method type="void" name="convert" startLine="38" endLine="49">
      <scope startLine="44" endLine="48">
        <scope startLine="45" endLine="47" />
      </scope>
    </method>
    <javadoc>
      <text>* Converts {@link FixedMatrix2x2_64F} into {@link DenseMatrix64F}.</text>
      <param>input Input matrix.</param>
      <param>output Output matrix.  If null a new matrix will be declared.</param>
      <return>Converted matrix.</return>
    </javadoc>
    <method type="DenseMatrix64F" name="convert" startLine="58" endLine="73" />
    <javadoc>
      <text>* Converts {@link FixedMatrix3x3_64F} into {@link DenseMatrix64F}.</text>
      <param>input Input matrix.</param>
      <param>output Output matrix.  If null a new matrix will be declared.</param>
      <return>Converted matrix.</return>
    </javadoc>
    <method type="DenseMatrix64F" name="convert" startLine="82" endLine="102" />
    <javadoc>
      <text>* Converts {@link FixedMatrix4x4_64F} into {@link DenseMatrix64F}.</text>
      <param>input Input matrix.</param>
      <param>output Output matrix.  If null a new matrix will be declared.</param>
      <return>Converted matrix.</return>
    </javadoc>
    <method type="DenseMatrix64F" name="convert" startLine="111" endLine="138" />
    <javadoc>
      <text>* Converts {@link FixedMatrix5x5_64F} into {@link DenseMatrix64F}.</text>
      <param>input Input matrix.</param>
      <param>output Output matrix.  If null a new matrix will be declared.</param>
      <return>Converted matrix.</return>
    </javadoc>
    <method type="DenseMatrix64F" name="convert" startLine="147" endLine="183" />
    <javadoc>
      <text>* Converts {@link FixedMatrix6x6_64F} into {@link DenseMatrix64F}.</text>
      <param>input Input matrix.</param>
      <param>output Output matrix.  If null a new matrix will be declared.</param>
      <return>Converted matrix.</return>
    </javadoc>
    <method type="DenseMatrix64F" name="convert" startLine="192" endLine="239" />
    <javadoc>
      <text>* Converts {@link DenseMatrix64F} into {@link FixedMatrix2x2_64F}</text>
      <param>input Input matrix.</param>
      <param>output Output matrix.  If null a new matrix will be declared.</param>
      <return>Converted matrix.</return>
    </javadoc>
    <method type="FixedMatrix2x2_64F" name="convert" startLine="248" endLine="263" />
    <javadoc>
      <text>* Converts {@link DenseMatrix64F} into {@link FixedMatrix3x3_64F}</text>
      <param>input Input matrix.</param>
      <param>output Output matrix.  If null a new matrix will be declared.</param>
      <return>Converted matrix.</return>
    </javadoc>
    <method type="FixedMatrix3x3_64F" name="convert" startLine="272" endLine="292" />
    <javadoc>
      <text>* Converts {@link DenseMatrix64F} into {@link FixedMatrix4x4_64F}</text>
      <param>input Input matrix.</param>
      <param>output Output matrix.  If null a new matrix will be declared.</param>
      <return>Converted matrix.</return>
    </javadoc>
    <method type="FixedMatrix4x4_64F" name="convert" startLine="301" endLine="328" />
    <javadoc>
      <text>* Converts {@link DenseMatrix64F} into {@link FixedMatrix5x5_64F}</text>
      <param>input Input matrix.</param>
      <param>output Output matrix.  If null a new matrix will be declared.</param>
      <return>Converted matrix.</return>
    </javadoc>
    <method type="FixedMatrix5x5_64F" name="convert" startLine="337" endLine="373" />
    <javadoc>
      <text>* Converts {@link DenseMatrix64F} into {@link FixedMatrix6x6_64F}</text>
      <param>input Input matrix.</param>
      <param>output Output matrix.  If null a new matrix will be declared.</param>
      <return>Converted matrix.</return>
    </javadoc>
    <method type="FixedMatrix6x6_64F" name="convert" startLine="382" endLine="429" />
    <javadoc>
      <text>* Converts {@link FixedMatrix2_64F} into {@link DenseMatrix64F}.</text>
      <param>input Input matrix.</param>
      <param>output Output matrix.  If null a new matrix will be declared.</param>
      <return>Converted matrix.</return>
    </javadoc>
    <method type="DenseMatrix64F" name="convert" startLine="438" endLine="452">
      <declaration type="int" name="length" />
    </method>
    <javadoc>
      <text>* Converts {@link FixedMatrix3_64F} into {@link DenseMatrix64F}.</text>
      <param>input Input matrix.</param>
      <param>output Output matrix.  If null a new matrix will be declared.</param>
      <return>Converted matrix.</return>
    </javadoc>
    <method type="DenseMatrix64F" name="convert" startLine="461" endLine="476">
      <declaration type="int" name="length" />
    </method>
    <javadoc>
      <text>* Converts {@link FixedMatrix4_64F} into {@link DenseMatrix64F}.</text>
      <param>input Input matrix.</param>
      <param>output Output matrix.  If null a new matrix will be declared.</param>
      <return>Converted matrix.</return>
    </javadoc>
    <method type="DenseMatrix64F" name="convert" startLine="485" endLine="501">
      <declaration type="int" name="length" />
    </method>
    <javadoc>
      <text>* Converts {@link FixedMatrix5_64F} into {@link DenseMatrix64F}.</text>
      <param>input Input matrix.</param>
      <param>output Output matrix.  If null a new matrix will be declared.</param>
      <return>Converted matrix.</return>
    </javadoc>
    <method type="DenseMatrix64F" name="convert" startLine="510" endLine="527">
      <declaration type="int" name="length" />
    </method>
    <javadoc>
      <text>* Converts {@link FixedMatrix6_64F} into {@link DenseMatrix64F}.</text>
      <param>input Input matrix.</param>
      <param>output Output matrix.  If null a new matrix will be declared.</param>
      <return>Converted matrix.</return>
    </javadoc>
    <method type="DenseMatrix64F" name="convert" startLine="536" endLine="554">
      <declaration type="int" name="length" />
    </method>
    <javadoc>
      <text>* Converts {@link DenseMatrix64F} into {@link FixedMatrix2_64F}</text>
      <param>input Input matrix.</param>
      <param>output Output matrix.  If null a new matrix will be declared.</param>
      <return>Converted matrix.</return>
    </javadoc>
    <method type="FixedMatrix2_64F" name="convert" startLine="563" endLine="577">
      <declaration type="int" name="length" />
    </method>
    <javadoc>
      <text>* Converts {@link DenseMatrix64F} into {@link FixedMatrix3_64F}</text>
      <param>input Input matrix.</param>
      <param>output Output matrix.  If null a new matrix will be declared.</param>
      <return>Converted matrix.</return>
    </javadoc>
    <method type="FixedMatrix3_64F" name="convert" startLine="586" endLine="601">
      <declaration type="int" name="length" />
    </method>
    <javadoc>
      <text>* Converts {@link DenseMatrix64F} into {@link FixedMatrix4_64F}</text>
      <param>input Input matrix.</param>
      <param>output Output matrix.  If null a new matrix will be declared.</param>
      <return>Converted matrix.</return>
    </javadoc>
    <method type="FixedMatrix4_64F" name="convert" startLine="610" endLine="626">
      <declaration type="int" name="length" />
    </method>
    <javadoc>
      <text>* Converts {@link DenseMatrix64F} into {@link FixedMatrix5_64F}</text>
      <param>input Input matrix.</param>
      <param>output Output matrix.  If null a new matrix will be declared.</param>
      <return>Converted matrix.</return>
    </javadoc>
    <method type="FixedMatrix5_64F" name="convert" startLine="635" endLine="652">
      <declaration type="int" name="length" />
    </method>
    <javadoc>
      <text>* Converts {@link DenseMatrix64F} into {@link FixedMatrix6_64F}</text>
      <param>input Input matrix.</param>
      <param>output Output matrix.  If null a new matrix will be declared.</param>
      <return>Converted matrix.</return>
    </javadoc>
    <method type="FixedMatrix6_64F" name="convert" startLine="661" endLine="679">
      <declaration type="int" name="length" />
    </method>
    <javadoc>
      <text>* Converts {@link DenseMatrix64F} into {@link BlockMatrix64F}Can't handle null output matrix since block size needs to be specified.</text>
      <param>input Input matrix.</param>
      <param>output Output matrix.</param>
    </javadoc>
    <method type="void" name="convert" startLine="689" endLine="691" />
    <javadoc>
      <text>* Converts {@link BlockMatrix64F} into {@link DenseMatrix64F}</text>
      <param>input Input matrix.</param>
      <param>output Output matrix.  If null a new matrix will be declared.</param>
      <return>Converted matrix.</return>
    </javadoc>
    <method type="DenseMatrix64F" name="convert" startLine="700" endLine="702" />
  </class>
</source>
