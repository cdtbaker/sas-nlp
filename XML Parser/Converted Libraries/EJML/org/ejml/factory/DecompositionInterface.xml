<?xml version="1.0" encoding="UTF-8"?>
<source package="org.ejml.factory">
  <import name="org.ejml.data.Matrix64F" />
  <interface name="DecompositionInterface" startLine="24">
    <javadoc>
      <text>* <p>
 * An interface for performing matrix decompositions on a {@link org.ejml.data.DenseMatrix64F}.
 * </p>
 * <p>
 * A matrix decomposition is an algorithm which decomposes the input matrix into a set of equivalent
 * matrices that store the same information as the original.  Decompositions are useful
 * in that they allow specialized efficient algorithms to be run on generic input
 * matrices.
 * </p>
 * <p>
 * By default most decompositions will modify the input matrix.  This is done to save
 * memory and simply code by reducing the number of cases which need to be tested.
 * </p></text>
      <author>Peter Abeles</author>
    </javadoc>
    <method name="decompose" type="boolean" startLine="45" endLine="54" />
    <javadoc>
      <text>* Computes the decomposition of the input matrix.  Depending on the implementation
 * the input matrix might be stored internally or modified.  If it is modified then
 * the function {@link #inputModified()} will return true and the matrix should not be
 * modified until the decomposition is no longer needed.</text>
      <param>orig The matrix which is being decomposed.  Modification is implementation dependent.</param>
      <return>Returns if it was able to decompose the matrix.</return>
    </javadoc>
    <method name="inputModified" type="boolean" startLine="56" endLine="62" />
    <javadoc>
      <text>* Is the input matrix to {@link #decompose(org.ejml.data.Matrix64F)} is modified during
 * the decomposition process.</text>
      <return>true if the input matrix to decompose() is modified.</return>
    </javadoc>
  </interface>
</source>
