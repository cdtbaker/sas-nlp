<?xml version="1.0" encoding="UTF-8"?>
<source package="org.ejml.factory">
  <import name="org.ejml.data.DenseMatrix64F" />
  <import name="org.ejml.data.Matrix64F" />
  <interface name="CholeskyDecomposition" startLine="25">
    <implements name="DecompositionInterface<MatrixType>" />
    <javadoc>
      <text>* <p>
 * Cholesky decomposition for {@link DenseMatrix64F}.
 * <p>
 * <p>
 * A Cholesky decomposition decomposes positive-definite symmetric matrices into either upper or
 * lower triangles:<br>
 * <br>
 * L*L<sup>T</sup>=A<br>
 * R<sup>T</sup>*R=A<br>
 * <br>
 * where L is a lower triangular matrix and R is an upper triangular matrix.  This is typically 
 * used to invert matrices, such as a covariance matrix.<br>
 * </p></text>
      <see>org.ejml.alg.dense.decomposition.chol.CholeskyDecompositionInner</see>
      <see>org.ejml.alg.dense.decomposition.chol.CholeskyDecompositionBlock</see>
      <see>org.ejml.alg.dense.decomposition.chol.CholeskyDecompositionLDL</see>
      <author>Peter Abeles</author>
    </javadoc>
    <method name="isLower" type="boolean" startLine="49" endLine="55" />
    <javadoc>
      <text>* If true the decomposition was for a lower triangular matrix.
 * If false it was for an upper triangular matrix.</text>
      <return>True if lower, false if upper.</return>
    </javadoc>
    <method name="getT" type="MatrixType" startLine="58" endLine="71" />
    <javadoc>
      <text>* <p>
 * Returns the triangular matrix from the decomposition.
 * </p>
 * <p>
 * If an input is provided that matrix is used to write the results to.
 * Otherwise a new matrix is created and the results written to it.
 * </p></text>
      <param>T If not null then the decomposed matrix is written here.</param>
      <return>A lower or upper triangular matrix.</return>
    </javadoc>
  </interface>
</source>
