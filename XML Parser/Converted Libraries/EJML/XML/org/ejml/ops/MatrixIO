<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.ejml.ops">
        <import package="org.ejml.data.DenseMatrix64F"/>
        <import package="org.ejml.data.Matrix64F"/>
        <import package="org.ejml.data.ReshapeMatrix64F"/>
        <import package="java.io"/>
        <class name="MatrixIO" line="28">
            <comment line="29">
                public static void main( String []args ) {                
            </comment>
            <comment line="29">
                Random rand = new Random(234234);                
            </comment>
            <comment line="29">
                DenseMatrix64F A = RandomMatrices.createRandom(50,70,rand);                
            </comment>
            <comment line="29">
                                
            </comment>
            <comment line="29">
                SingularValueDecomposition decomp = DecompositionFactory.svd();                
            </comment>
            <comment line="29">
                                
            </comment>
            <comment line="29">
                decomp.decompose(A);                
            </comment>
            <comment line="29">
                                
            </comment>
            <comment line="29">
                displayMatrix(A,&quot;Original&quot;);                
            </comment>
            <comment line="29">
                displayMatrix(decomp.getU(false),&quot;U&quot;);                
            </comment>
            <comment line="29">
                displayMatrix(decomp.getV(false),&quot;V&quot;);                
            </comment>
            <comment line="29">
                displayMatrix(decomp.getW(null),&quot;W&quot;);                
            </comment>
            <comment line="29">
                }                
            </comment>
            <javadoc line="28">
                Provides simple to use routines for reading and writing matrices to and from files.                
                <@author>
                    r Peter Abeles                    
                </@author>
            </javadoc>
            <javadoc line="35">
                Saves a matrix to disk using Java binary serialization.                
                <@param>
                    m A The matrix being saved.                    
                </@param>
                <@param>
                    m fileName Name of the file its being saved at.                    
                </@param>
                <@throws>
                    s java.io.IOException                    
                </@throws>
            </javadoc>
            <method name="saveBin" type="void" line="44">
                <params>
                    <param name="A" type="ReshapeMatrix64F"/>
                    <param name="fileName" type="String"/>
                </params>
                <declaration name="fileStream" type="FileOutputStream" line="45"/>
                <declaration name="stream" type="ObjectOutputStream" line="46"/>
                <scope line="48"/>
                <scope line="51">
                    <scope line="53"/>
                    <scope line="55"/>
                </scope>
            </method>
            <javadoc line="62">
                Loads a DeneMatrix64F which has been saved to file using Java binary
                  serialization.                
                <@param>
                    m fileName The file being loaded.                    
                </@param>
                <@return>
                    n  DenseMatrix64F                    
                </@return>
                <@throws>
                    s IOException                    
                </@throws>
            </javadoc>
            <method name="loadBin" type="T" line="72">
                <params>
                    <param name="fileName" type="String"/>
                </params>
                <declaration name="fileStream" type="FileInputStream" line="73"/>
                <declaration name="stream" type="ObjectInputStream" line="74"/>
                <declaration name="ret" type="T" line="76"/>
                <scope line="77">
                    <scope line="79"/>
                </scope>
                <scope line="82"/>
            </method>
            <javadoc line="90">
                Saves a matrix to disk using in a Column Space Value (CSV) format. For a 
                  description of the format see {@link MatrixIO#loadCSV(String)}.                
                <@param>
                    m A The matrix being saved.                    
                </@param>
                <@param>
                    m fileName Name of the file its being saved at.                    
                </@param>
                <@throws>
                    s java.io.IOException                    
                </@throws>
            </javadoc>
            <method name="saveCSV" type="void" line="100">
                <params>
                    <param name="A" type="ReshapeMatrix64F"/>
                    <param name="fileName" type="String"/>
                </params>
                <declaration name="fileStream" type="PrintStream" line="101"/>
                <scope line="105">
                    <scope line="106"/>
                </scope>
            </method>
            <javadoc line="114">
                Reads a matrix in which has been encoded using a Column Space Value (CSV)
                  file format. The number of rows and columns are read in on the first line. Then
                  each row is read in the subsequent lines.                
                <@param>
                    m fileName The file being loaded.                    
                </@param>
                <@return>
                    n DenseMatrix64F                    
                </@return>
                <@throws>
                    s IOException                    
                </@throws>
            </javadoc>
            <method name="loadCSV" type="DenseMatrix64F" line="125">
                <params>
                    <param name="fileName" type="String"/>
                </params>
                <declaration name="fileStream" type="FileInputStream" line="126"/>
                <declaration name="csv" type="ReadMatrixCsv" line="127"/>
                <declaration name="ret" type="DenseMatrix64F" line="129"/>
            </method>
            <javadoc line="136">
                Reads a matrix in which has been encoded using a Column Space Value (CSV)
                  file format.  For a description of the format see {@link MatrixIO#loadCSV(String)}.                
                <@param>
                    m fileName The file being loaded.                    
                </@param>
                <@param>
                    m numRows number of rows in the matrix.                    
                </@param>
                <@param>
                    m numCols number of columns in the matrix.                    
                </@param>
                <@return>
                    n DenseMatrix64F                    
                </@return>
                <@throws>
                    s IOException                    
                </@throws>
            </javadoc>
            <method name="loadCSV" type="DenseMatrix64F" line="148">
                <params>
                    <param name="fileName" type="String"/>
                    <param name="numRows" type="int"/>
                    <param name="numCols" type="int"/>
                </params>
                <declaration name="fileStream" type="FileInputStream" line="149"/>
                <declaration name="csv" type="ReadMatrixCsv" line="150"/>
                <declaration name="ret" type="DenseMatrix64F" line="152"/>
            </method>
            <method name="print" type="void" line="159">
                <params>
                    <param name="out" type="PrintStream"/>
                    <param name="mat" type="Matrix64F"/>
                </params>
            </method>
            <method name="print" type="void" line="163">
                <params>
                    <param name="out" type="PrintStream"/>
                    <param name="mat" type="Matrix64F"/>
                    <param name="numChar" type="int"/>
                    <param name="precision" type="int"/>
                </params>
                <declaration name="format" type="String" line="164"/>
            </method>
            <method name="print" type="void" line="169">
                <params>
                    <param name="out" type="PrintStream"/>
                    <param name="mat" type="Matrix64F"/>
                    <param name="format" type="String"/>
                </params>
                <declaration name="type" type="String" line="171"/>
                <scope line="177">
                    <scope line="178"/>
                </scope>
            </method>
            <method name="print" type="void" line="186">
                <params>
                    <param name="out" type="PrintStream"/>
                    <param name="mat" type="ReshapeMatrix64F"/>
                    <param name="format" type="String"/>
                    <param name="row0" type="int"/>
                    <param name="row1" type="int"/>
                    <param name="col0" type="int"/>
                    <param name="col1" type="int"/>
                </params>
                <scope line="191">
                    <scope line="192"/>
                </scope>
            </method>
        </class>
    </source>