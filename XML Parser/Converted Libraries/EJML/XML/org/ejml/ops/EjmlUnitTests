<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.ejml.ops">
        <import package="org.ejml.data.ReshapeMatrix64F"/>
        <class name="EjmlUnitTests" line="24">
            <javadoc line="24">
                Contains various functions related to unit testing matrix operations.                
                <@author>
                    r Peter Abeles                    
                </@author>
            </javadoc>
            <javadoc line="31">
                Checks to see if every element in A is countable.  A doesn&apos;t have any element with
                 * a value of NaN or infinite.                
                <@param>
                    m A Matrix                    
                </@param>
            </javadoc>
            <method name="assertCountable" type="void" line="37">
                <scope line="38">
                    <scope line="39"/>
                </scope>
            </method>
            <javadoc line="46">
                &lt;p&gt;
                 * Checks to see if A and B have the same shape.
                 * &lt;/p&gt;                
                <@param>
                    m A Matrix                    
                </@param>
                <@param>
                    m B Matrix                    
                </@param>
            </javadoc>
            <method name="assertShape" type="void" line="54"/>
            <javadoc line="59">
                &lt;p&gt;
                 * Checks to see if the matrix has the specified number of rows and columns.
                 * &lt;/p&gt;                
                <@param>
                    m A Matrix                    
                </@param>
                <@param>
                    m numRows expected number of rows in the matrix                    
                </@param>
                <@param>
                    m numCols expected number of columns in the matrix                    
                </@param>
            </javadoc>
            <method name="assertShape" type="void" line="68"/>
            <javadoc line="73">
                &lt;p&gt;
                 * Checks to see if each element in the matrix is within tolerance of each other:
                 * &lt;/p&gt;
                 * &lt;p&gt;
                 * The two matrices are identical with in tolerance if:&lt;br&gt;
                 * |a&lt;sub&gt;ij&lt;/sub&gt; - b&lt;sub&gt;ij&lt;/sub&gt;| &amp;le; tol
                 * &lt;/p&gt;
                 * &lt;p&gt;
                 * In addition if an element is NaN or infinite in one matrix it must be the same in the other.
                 * &lt;/p&gt;                
                <@param>
                    m A Matrix A                    
                </@param>
                <@param>
                    m B Matrix B                    
                </@param>
                <@param>
                    m tol Tolerance                    
                </@param>
            </javadoc>
            <method name="assertEqualsUncountable" type="void" line="91">
                <scope line="94">
                    <scope line="95">
                        <declaration name="valA" type="double" line="96"/>
                        <declaration name="valB" type="double" line="97"/>
                        <scope line="99"/>
                        <scope line="101"/>
                        <scope line="103">
                            <declaration name="diff" type="double" line="104"/>
                        </scope>
                    </scope>
                </scope>
            </method>
            <javadoc line="111">
                &lt;p&gt;
                 * Checks to see if each element in the matrices are within tolerance of each other and countable:
                 * &lt;/p&gt;
                 * &lt;p&gt;
                 * The two matrices are identical with in tolerance if:&lt;br&gt;
                 * |a&lt;sub&gt;ij&lt;/sub&gt; - b&lt;sub&gt;ij&lt;/sub&gt;| &amp;le; tol
                 * &lt;/p&gt;
                 * &lt;p&gt;
                 * The test will fail if any element in either matrix is NaN or infinite.
                 * &lt;/p&gt;                
                <@param>
                    m A Matrix A                    
                </@param>
                <@param>
                    m B Matrix B                    
                </@param>
                <@param>
                    m tol Tolerance                    
                </@param>
            </javadoc>
            <method name="assertEquals" type="void" line="129">
                <scope line="132">
                    <scope line="133">
                        <declaration name="valA" type="double" line="134"/>
                        <declaration name="valB" type="double" line="135"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="144">
                &lt;p&gt;
                 * Checks to see if the transpose of B is equal to A and countable:
                 * &lt;/p&gt;
                 * &lt;p&gt;
                 * |a&lt;sub&gt;ij&lt;/sub&gt; - b&lt;sub&gt;ji&lt;/sub&gt;| &amp;le; tol
                 * &lt;/p&gt;
                 * &lt;p&gt;
                 * The test will fail if any element in either matrix is NaN or infinite.
                 * &lt;/p&gt;                
                <@param>
                    m A Matrix A                    
                </@param>
                <@param>
                    m B Matrix B                    
                </@param>
                <@param>
                    m tol Tolerance                    
                </@param>
            </javadoc>
            <method name="assertEqualsTrans" type="void" line="161">
                <scope line="164">
                    <scope line="165">
                        <declaration name="valA" type="double" line="166"/>
                        <declaration name="valB" type="double" line="167"/>
                    </scope>
                </scope>
            </method>
            <method name="assertTrue" type="void" line="177">
                <comment line="178">
                    if turned on use asserts                    
                </comment>
                <comment line="178">
                    otherwise throw an exception                    
                </comment>
            </method>
            <class name="TestException" extends="RuntimeException" line="184">
                <method name="TestException" type="constructor" line="185"/>
            </class>
        </class>
    </source>