<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.ejml.alg.dense.decomposition.chol">
        <import package="org.ejml.data.DenseMatrix64F"/>
        <class name="CholeskyBlockHelper" line="24">
            <comment line="25">
                the decomposed matrix                
            </comment>
            <javadoc line="24">
                A specialized Cholesky decomposition algorithm that is designed to help out{@link CholeskyDecompositionBlock} perform its calculations.  While decomposing
                  the matrix it will modify its internal lower triangular matrix and the original
                  that is being modified.                
                <@author>
                    r Peter Abeles                    
                </@author>
            </javadoc>
            <declaration name="L" type="DenseMatrix64F" line="35"/>
            <declaration name="el" type="double[]" line="36"/>
            <javadoc line="38">
                Creates a CholeksyDecomposition capable of decomposing a matrix that is
                  n by n, where n is the width.                
                <@param>
                    m widthMax The maximum width of a matrix that can be processed.                    
                </@param>
            </javadoc>
            <method name="CholeskyBlockHelper" type="constructor" line="44">
                <params>
                    <param name="widthMax" type="int"/>
                </params>
            </method>
            <javadoc line="50">
                Decomposes a submatrix.  The results are written to the submatrix
                  and to its internal matrix L.                
                <@param>
                    m mat A matrix which has a submatrix that needs to be inverted                    
                </@param>
                <@param>
                    m indexStart the first index of the submatrix                    
                </@param>
                <@param>
                    m n The width of the submatrix that is to be inverted.                    
                </@param>
                <@return>
                    n True if it was able to finish the decomposition.                    
                </@return>
            </javadoc>
            <method name="decompose" type="boolean" line="59">
                <params>
                    <param name="mat" type="DenseMatrix64F"/>
                    <param name="indexStart" type="int"/>
                    <param name="n" type="int"/>
                </params>
                <declaration name="m" type="double" line="60"/>
                <declaration name="el_ii" type="double" line="62"/>
                <declaration name="div_el_ii" type="double" line="63"/>
                <scope line="65">
                    <scope line="66">
                        <declaration name="sum" type="double" line="67"/>
                        <declaration name="iEl" type="int" line="69"/>
                        <declaration name="jEl" type="int" line="70"/>
                        <declaration name="end" type="int" line="71"/>
                        <scope line="73"/>
                        <scope line="78"/>
                        <scope line="87">
                            <declaration name="v" type="double" line="88"/>
                        </scope>
                    </scope>
                </scope>
            </method>
            <javadoc line="98">
                Returns L matrix from the decomposition.&lt;br&gt;
                  LL&lt;sup&gt;T&lt;/sup&gt;=A                
                <@return>
                    n A lower triangular matrix.                    
                </@return>
            </javadoc>
            <method name="getL" type="DenseMatrix64F" line="104"/>
        </class>
    </source>