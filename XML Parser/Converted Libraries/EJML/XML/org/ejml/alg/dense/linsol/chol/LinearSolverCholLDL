<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.ejml.alg.dense.linsol.chol">
        <import package="org.ejml.alg.dense.decomposition.TriangularSolver"/>
        <import package="org.ejml.alg.dense.decomposition.chol.CholeskyDecompositionLDL"/>
        <import package="org.ejml.alg.dense.linsol.LinearSolverAbstract"/>
        <import package="org.ejml.data.DenseMatrix64F"/>
        <import package="org.ejml.ops.SpecializedOps"/>
        <class name="LinearSolverCholLDL" line="28">
            <extends class="LinearSolverAbstract"/>
            <javadoc line="28">
                @author Peter Abeles                
            </javadoc>
            <declaration name="decomp" type="CholeskyDecompositionLDL" line="33"/>
            <declaration name="n" type="int" line="34"/>
            <declaration name="vv" type="double" line="35"/>
            <declaration name="el" type="double" line="36"/>
            <declaration name="d" type="double" line="37"/>
            <method name="LinearSolverCholLDL" type="constructor" line="39">
                <params>
                    <param name="decomp" type="CholeskyDecompositionLDL"/>
                </params>
            </method>
            <method name="LinearSolverCholLDL" type="constructor" line="43"/>
            <method name="setA" type="boolean" line="48">
                <params>
                    <param name="A" type="DenseMatrix64F"/>
                </params>
                <scope line="51"/>
                <scope line="57"/>
            </method>
            <method name="quality" type="double" line="63"/>
            <javadoc line="67">
                &lt;p&gt;
                  Using the decomposition, finds the value of &apos;X&apos; in the linear equation below:&lt;br&gt;
                  Ax = b&lt;br&gt;
                  where A has dimension of n by n, x and b are n by m dimension.
                  &lt;/p&gt;
                  &lt;p&gt;
                  Note that &apos;b&apos; and &apos;x&apos; can be the same matrix instance.
                  &lt;/p&gt;                
                <@param>
                    m B A matrix that is n by m.  Not modified.                    
                </@param>
                <@param>
                    m X An n by m matrix where the solution is writen to.  Modified.                    
                </@param>
            </javadoc>
            <method name="solve" type="void" line="83">
                <params>
                    <param name="B" type="DenseMatrix64F"/>
                    <param name="X" type="DenseMatrix64F"/>
                </params>
                <scope line="84"/>
                <declaration name="numCols" type="int" line="88"/>
                <declaration name="dataB" type="double" line="90"/>
                <declaration name="dataX" type="double" line="91"/>
                <scope line="93"/>
            </method>
            <javadoc line="100">
                Used internally to find the solution to a single column vector.                
            </javadoc>
            <method name="solveInternal" type="void" line="103">
                <comment line="104">
                    solve L*s=b storing y in x                    
                </comment>
                <comment line="104">
                    solve D*y=s                    
                </comment>
                <comment line="104">
                    solve L^T*x=y                    
                </comment>
                <scope line="108"/>
            </method>
            <javadoc line="116">
                Sets the matrix &apos;inv&apos; equal to the inverse of the matrix that was decomposed.                
                <@param>
                    m inv Where the value of the inverse will be stored.  Modified.                    
                </@param>
            </javadoc>
            <method name="invert" type="void" line="122">
                <params>
                    <param name="inv" type="DenseMatrix64F"/>
                </params>
                <comment line="123">
                    solve L*z = b                    
                </comment>
                <comment line="123">
                    solve D*y=z                    
                </comment>
                <comment line="123">
                    solve L^T*x = y                    
                </comment>
                <scope line="123"/>
                <declaration name="a" type="double" line="127"/>
                <scope line="130">
                    <scope line="131">
                        <declaration name="sum" type="double" line="132"/>
                        <scope line="133"/>
                    </scope>
                </scope>
                <scope line="141">
                    <declaration name="inv_d" type="double" line="142"/>
                    <scope line="143"/>
                </scope>
                <scope line="149">
                    <scope line="150">
                        <declaration name="sum" type="double" line="151"/>
                        <scope line="152"/>
                    </scope>
                </scope>
            </method>
            <method name="modifiesA" type="boolean" line="161"/>
            <method name="modifiesB" type="boolean" line="166"/>
        </class>
    </source>