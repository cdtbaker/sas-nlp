<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.ejml.alg.dense.misc">
        <import package="org.ejml.data.RowD1Matrix64F"/>
        <class name="TransposeAlgs" line="24">
            <javadoc line="24">
                Low level transpose algorithms.  No sanity checks are performed.                
                <@author>
                    r Peter Abeles                    
                </@author>
            </javadoc>
            <javadoc line="31">
                In-place transpose for a square matrix.  The most efficient algorithm but can
                  only be used on square matrices.                
                <@param>
                    m mat The matrix that is transposed in-place.  Modified.                    
                </@param>
            </javadoc>
            <method name="square" type="void" line="38">
                <params>
                    <param name="mat" type="RowD1Matrix64F"/>
                </params>
                <declaration name="index" type="int" line="39"/>
                <declaration name="indexEnd" type="int" line="40"/>
                <scope line="42">
                    <declaration name="indexOther" type="int" line="43"/>
                    <scope line="44">
                        <declaration name="val" type="double" line="45"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="52">
                Performs a transpose across block sub-matrices.  Reduces
                  the number of cache misses on larger matrices.
                  NOTE If this is beneficial is highly dependent on the computer it is run on. e.g:
                  - Q6600 Almost twice as fast as standard.
                  - Pentium-M Same speed and some times a bit slower than standard.                
                <@param>
                    m A Original matrix.  Not modified.                    
                </@param>
                <@param>
                    m A_tran Transposed matrix.  Modified.                    
                </@param>
                <@param>
                    m blockLength Length of a block.                    
                </@param>
            </javadoc>
            <method name="block" type="void" line="66">
                <params>
                    <param name="A" type="RowD1Matrix64F"/>
                    <param name="A_tran" type="RowD1Matrix64F"/>
                    <param name="blockLength" type="int"/>
                </params>
                <scope line="67">
                    <declaration name="blockHeight" type="int" line="68"/>
                    <declaration name="indexSrc" type="int" line="70"/>
                    <declaration name="indexDst" type="int" line="71"/>
                    <scope line="73">
                        <declaration name="blockWidth" type="int" line="74"/>
                        <declaration name="indexSrcEnd" type="int" line="79"/>
                        <scope line="81">
                            <declaration name="rowSrc" type="int" line="82"/>
                            <declaration name="rowDst" type="int" line="83"/>
                            <declaration name="end" type="int" line="84"/>
                            <scope line="86"/>
                        </scope>
                    </scope>
                </scope>
            </method>
            <javadoc line="96">
                A straight forward transpose.  Good for small non-square matrices.                
                <@param>
                    m A Original matrix.  Not modified.                    
                </@param>
                <@param>
                    m A_tran Transposed matrix.  Modified.                    
                </@param>
            </javadoc>
            <method name="standard" type="void" line="103">
                <params>
                    <param name="A" type="RowD1Matrix64F"/>
                    <param name="A_tran" type="RowD1Matrix64F"/>
                </params>
                <declaration name="index" type="int" line="104"/>
                <scope line="105">
                    <declaration name="index2" type="int" line="106"/>
                    <declaration name="end" type="int" line="108"/>
                    <scope line="109"/>
                </scope>
            </method>
        </class>
    </source>