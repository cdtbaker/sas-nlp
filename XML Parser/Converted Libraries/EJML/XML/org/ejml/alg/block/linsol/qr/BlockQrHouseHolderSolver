<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.ejml.alg.block.linsol.qr">
        <import package="org.ejml.alg.block.BlockMatrixOps"/>
        <import package="org.ejml.alg.block.BlockTriangularSolver"/>
        <import package="org.ejml.alg.block.decomposition.qr.BlockMatrix64HouseholderQR"/>
        <import package="org.ejml.data.BlockMatrix64F"/>
        <import package="org.ejml.data.D1Submatrix64F"/>
        <import package="org.ejml.factory.LinearSolver"/>
        <import package="org.ejml.ops.SpecializedOps"/>
        <class name="BlockQrHouseHolderSolver" line="30">
            <comment line="31">
                QR decomposition algorithm                
            </comment>
            <comment line="31">
                the input matrix which has been decomposed                
            </comment>
            <implements interface="LinearSolver&lt;BlockMatrix64F&gt;"/>
            <javadoc line="30">
                &lt;p&gt;
                 * A solver for {@link BlockMatrix64HouseholderQR}.  Systems are solved for using the standard
                 * QR decomposition method, sketched below.
                 * &lt;/p&gt;
                 * &lt;p&gt;
                 * A = Q*R&lt;br&gt;
                 * A*x = b&lt;br&gt;
                 * Q*R*x = b &lt;br&gt;
                 * R*x = y = Q&lt;sup&gt;T&lt;/sup&gt;b&lt;br&gt;
                 * x = R&lt;sup&gt;-1&lt;/sup&gt;y&lt;br&gt;
                 * &lt;br&gt;
                 * Where A is the m by n matrix being decomposed. Q is an orthogonal matrix. R is upper triangular matrix.
                 * &lt;/p&gt;                
                <@author>
                    r Peter Abeles                    
                </@author>
            </javadoc>
            <declaration name="decomp" type="BlockMatrix64HouseholderQR" line="51"/>
            <declaration name="QR" type="BlockMatrix64F" line="54"/>
            <method name="BlockQrHouseHolderSolver" type="constructor" line="57"/>
            <javadoc line="61">
                Computes the QR decomposition of A and store the results in A.                
                <@param>
                    m A The A matrix in the linear equation. Modified. Reference saved.                    
                </@param>
                <@return>
                    n true if the decomposition was successful.                    
                </@return>
            </javadoc>
            <method name="setA" type="boolean" line="68"/>
            <javadoc line="81">
                Computes the quality using diagonal elements the triangular R matrix in the QR decomposition.                
                <@return>
                    n Solutions quality.                    
                </@return>
            </javadoc>
            <method name="quality" type="double" line="87"/>
            <method name="solve" type="void" line="92">
                <comment line="93">
                    The system being solved for can be described as:                    
                </comment>
                <comment line="93">
                    Q*R*X = B                    
                </comment>
                <comment line="93">
                    First apply householder reflectors to B                    
                </comment>
                <comment line="93">
                    Y = Q^T*B                    
                </comment>
                <comment line="93">
                    Second solve for Y using the upper triangle matrix R and the just computed Y                    
                </comment>
                <comment line="93">
                    X = R^-1 * Y                    
                </comment>
                <comment line="93">
                    extract a block aligned matrix                    
                </comment>
                <declaration name="M" type="int" line="115"/>
            </method>
            <javadoc line="122">
                Invert by solving for against an identity matrix.                
                <@param>
                    m A_inv Where the inverted matrix saved. Modified.                    
                </@param>
            </javadoc>
            <method name="invert" type="void" line="128">
                <comment line="129">
                    Solve for A^-1                    
                </comment>
                <comment line="129">
                    Q*R*A^-1 = I                    
                </comment>
                <comment line="129">
                    Apply householder reflectors to the identity matrix                    
                </comment>
                <comment line="129">
                    y = Q^T*I = Q^T                    
                </comment>
                <comment line="129">
                    Solve using upper triangular R matrix                    
                </comment>
                <comment line="129">
                    R*A^-1 = y                    
                </comment>
                <comment line="129">
                    A^-1 = R^-1*y                    
                </comment>
                <declaration name="M" type="int" line="129"/>
            </method>
            <method name="modifiesA" type="boolean" line="150"/>
            <method name="modifiesB" type="boolean" line="155"/>
        </class>
    </source>