<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.ejml.alg.block">
        <import package="org.ejml.data.D1Submatrix64F"/>
        <class name="BlockVectorOps" line="24">
            <javadoc line="24">
                &lt;p&gt;
                 * Math operations for inner vectors (row and column) inside of block matrices:&lt;br&gt;
                 * &lt;br&gt;
                 * scale: b&lt;sub&gt;i&lt;/sub&gt; = &amp;alpha;*a&lt;sub&gt;i&lt;/sub&gt;&lt;br&gt;
                 * div:  &lt;sub&gt;i&lt;/sub&gt; = a&lt;sub&gt;i&lt;/sub&gt;/&amp;alpha;&lt;br&gt;
                 * add: c&lt;sub&gt;i&lt;/sub&gt; = &amp;alpha;*a&lt;sub&gt;i&lt;/sub&gt; + &amp;beta;B&lt;sub&gt;i&lt;/sub&gt;&lt;br&gt;
                 * dot: c = sum a&lt;sub&gt;i&lt;/sub&gt;*b&lt;sub&gt;i&lt;/sub&gt;&lt;br&gt;
                 * &lt;/p&gt;
                 * &lt;p&gt;
                 * All submatrices must be block aligned.  All offsets and end indexes are relative to the beginning of each
                 * submatrix.
                 * &lt;/p&gt;                
                <@author>
                    r Peter Abeles                    
                </@author>
            </javadoc>
            <javadoc line="43">
                &lt;p&gt;
                 * Row vector scale:&lt;br&gt;
                 * scale: b&lt;sub&gt;i&lt;/sub&gt; = &amp;alpha;*a&lt;sub&gt;i&lt;/sub&gt;&lt;br&gt;
                 * where &apos;a&apos; and &apos;b&apos; are row vectors within the row block vector A and B.
                 * &lt;/p&gt;                
                <@param>
                    m A submatrix. Not modified.                    
                </@param>
                <@param>
                    m rowA which row in A the vector is contained in.                    
                </@param>
                <@param>
                    m alpha scale factor.                    
                </@param>
                <@param>
                    m B submatrix that the results are written to.  Modified.                    
                </@param>
                <@param>
                    m offset Index at which the vectors start at.                    
                </@param>
                <@param>
                    m end Index at which the vectors end at.                    
                </@param>
            </javadoc>
            <method name="scale_row" type="void" line="61">
                <comment line="62">
                    handle the case where offset is more than a block                    
                </comment>
                <comment line="62">
                    handle rows in any block                    
                </comment>
                <declaration name="dataA" type="double" line="62"/>
                <declaration name="dataB" type="double" line="63"/>
                <declaration name="startI" type="int" line="66"/>
                <declaration name="rowBlockA" type="int" line="70"/>
                <declaration name="rowBlockB" type="int" line="72"/>
                <declaration name="heightA" type="int" line="75"/>
                <declaration name="heightB" type="int" line="76"/>
                <scope line="78">
                    <declaration name="segment" type="int" line="79"/>
                    <declaration name="widthA" type="int" line="81"/>
                    <declaration name="widthB" type="int" line="82"/>
                    <declaration name="indexA" type="int" line="84"/>
                    <declaration name="indexB" type="int" line="85"/>
                    <scope line="87">
                        <scope line="91"/>
                    </scope>
                    <scope line="94">
                        <scope line="95"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="102">
                &lt;p&gt;
                 * Row vector divide:&lt;br&gt;
                 * div: b&lt;sub&gt;i&lt;/sub&gt; = a&lt;sub&gt;i&lt;/sub&gt;/&amp;alpha;&lt;br&gt;
                 * where &apos;a&apos; and &apos;b&apos; are row vectors within the row block vector A and B.
                 * &lt;/p&gt;                
                <@param>
                    m A submatrix. Not modified.                    
                </@param>
                <@param>
                    m rowA which row in A the vector is contained in.                    
                </@param>
                <@param>
                    m alpha scale factor.                    
                </@param>
                <@param>
                    m B submatrix that the results are written to.  Modified.                    
                </@param>
                <@param>
                    m offset Index at which the vectors start at.                    
                </@param>
                <@param>
                    m end Index at which the vectors end at.                    
                </@param>
            </javadoc>
            <method name="div_row" type="void" line="120">
                <comment line="121">
                    handle the case where offset is more than a block                    
                </comment>
                <comment line="121">
                    handle rows in any block                    
                </comment>
                <declaration name="dataA" type="double" line="121"/>
                <declaration name="dataB" type="double" line="122"/>
                <declaration name="startI" type="int" line="125"/>
                <declaration name="rowBlockA" type="int" line="129"/>
                <declaration name="rowBlockB" type="int" line="131"/>
                <declaration name="heightA" type="int" line="134"/>
                <declaration name="heightB" type="int" line="135"/>
                <scope line="137">
                    <declaration name="segment" type="int" line="138"/>
                    <declaration name="widthA" type="int" line="140"/>
                    <declaration name="widthB" type="int" line="141"/>
                    <declaration name="indexA" type="int" line="143"/>
                    <declaration name="indexB" type="int" line="144"/>
                    <scope line="146">
                        <scope line="150"/>
                    </scope>
                    <scope line="153">
                        <scope line="154"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="161">
                &lt;p&gt;
                 * Row vector add:&lt;br&gt;
                 * add: c&lt;sub&gt;i&lt;/sub&gt; = &amp;alpha;*a&lt;sub&gt;i&lt;/sub&gt; + &amp;beta;B&lt;sub&gt;i&lt;/sub&gt;&lt;br&gt;
                 * where &apos;a&apos;, &apos;b&apos;, and &apos;c&apos; are row vectors within the row block vectors of A, B, and C respectively.
                 * &lt;/p&gt;                
                <@param>
                    m blockLength Length of each inner matrix block.                    
                </@param>
                <@param>
                    m A submatrix. Not modified.                    
                </@param>
                <@param>
                    m rowA which row in A the vector is contained in.                    
                </@param>
                <@param>
                    m alpha scale factor of A                    
                </@param>
                <@param>
                    m B submatrix. Not modified.                    
                </@param>
                <@param>
                    m rowB which row in B the vector is contained in.                    
                </@param>
                <@param>
                    m beta scale factor of B                    
                </@param>
                <@param>
                    m C submatrix where the results are written to. Modified.                    
                </@param>
                <@param>
                    m rowC which row in C is the vector contained.                    
                </@param>
                <@param>
                    m offset Index at which the vectors start at.                    
                </@param>
                <@param>
                    m end Index at which the vectors end at.                    
                </@param>
            </javadoc>
            <method name="add_row" type="void" line="184">
                <comment line="185">
                    handle the case where offset is more than a block                    
                </comment>
                <declaration name="heightA" type="int" line="185"/>
                <declaration name="heightB" type="int" line="186"/>
                <declaration name="heightC" type="int" line="187"/>
                <declaration name="startI" type="int" line="190"/>
                <declaration name="dataA" type="double" line="193"/>
                <declaration name="dataB" type="double" line="194"/>
                <declaration name="dataC" type="double" line="195"/>
                <scope line="197">
                    <declaration name="segment" type="int" line="198"/>
                    <declaration name="widthA" type="int" line="200"/>
                    <declaration name="widthB" type="int" line="201"/>
                    <declaration name="widthC" type="int" line="202"/>
                    <declaration name="indexA" type="int" line="204"/>
                    <declaration name="indexB" type="int" line="205"/>
                    <declaration name="indexC" type="int" line="206"/>
                    <scope line="208">
                        <scope line="213"/>
                    </scope>
                    <scope line="216">
                        <scope line="217"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="224">
                &lt;p&gt;
                 * Row vector dot/inner product:&lt;br&gt;
                 * dot: c = sum a&lt;sub&gt;i&lt;/sub&gt;*b&lt;sub&gt;i&lt;/sub&gt;&lt;br&gt;
                 * where &apos;a&apos; and &apos;b&apos; are row vectors within the row block vector A and B, and &apos;c&apos; is a scalar.
                 * &lt;/p&gt;                
                <@param>
                    m A submatrix. Not modified.                    
                </@param>
                <@param>
                    m rowA which row in A the vector is contained in.                    
                </@param>
                <@param>
                    m B submatrix. Not modified.                    
                </@param>
                <@param>
                    m rowB which row in B the vector is contained in.                    
                </@param>
                <@param>
                    m offset Index at which the vectors start at.                    
                </@param>
                <@param>
                    m end Index at which the vectors end at.                    
                </@param>
                <@return>
                    n Results of the dot product.                    
                </@return>
            </javadoc>
            <method name="dot_row" type="double" line="242">
                <comment line="243">
                    handle the case where offset is more than a block                    
                </comment>
                <comment line="243">
                    handle rows in any block                    
                </comment>
                <declaration name="startI" type="int" line="246"/>
                <declaration name="dataA" type="double" line="249"/>
                <declaration name="dataB" type="double" line="250"/>
                <declaration name="total" type="double" line="252"/>
                <declaration name="rowBlockA" type="int" line="255"/>
                <declaration name="rowBlockB" type="int" line="257"/>
                <declaration name="heightA" type="int" line="260"/>
                <declaration name="heightB" type="int" line="261"/>
                <scope line="266">
                    <declaration name="segment" type="int" line="267"/>
                    <declaration name="widthA" type="int" line="269"/>
                    <declaration name="widthB" type="int" line="270"/>
                    <declaration name="indexA" type="int" line="272"/>
                    <declaration name="indexB" type="int" line="273"/>
                    <scope line="275">
                        <scope line="279"/>
                    </scope>
                    <scope line="282">
                        <scope line="283"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="292">
                &lt;p&gt;
                 * vector dot/inner product from one row vector and one column vector:&lt;br&gt;
                 * dot: c = sum a&lt;sub&gt;i&lt;/sub&gt;*b&lt;sub&gt;i&lt;/sub&gt;&lt;br&gt;
                 * where &apos;a&apos; is a row vector &apos;b&apos; is a column vectors within the row block vector A and B, and &apos;c&apos; is a scalar.
                 * &lt;/p&gt;                
                <@param>
                    m A block row vector. Not modified.                    
                </@param>
                <@param>
                    m rowA which row in A the vector is contained in.                    
                </@param>
                <@param>
                    m B block column vector. Not modified.                    
                </@param>
                <@param>
                    m colB which column in B is the vector contained in.                    
                </@param>
                <@param>
                    m offset Index at which the vectors start at.                    
                </@param>
                <@param>
                    m end Index at which the vectors end at.                    
                </@param>
                <@return>
                    n Results of the dot product.                    
                </@return>
            </javadoc>
            <method name="dot_row_col" type="double" line="310">
                <comment line="311">
                    handle the case where offset is more than a block                    
                </comment>
                <comment line="311">
                    handle rows in any block                    
                </comment>
                <declaration name="startI" type="int" line="314"/>
                <declaration name="dataA" type="double" line="317"/>
                <declaration name="dataB" type="double" line="318"/>
                <declaration name="total" type="double" line="320"/>
                <declaration name="rowBlockA" type="int" line="323"/>
                <declaration name="colBlockB" type="int" line="325"/>
                <declaration name="heightA" type="int" line="328"/>
                <declaration name="widthB" type="int" line="329"/>
                <scope line="334">
                    <declaration name="segment" type="int" line="335"/>
                    <declaration name="widthA" type="int" line="337"/>
                    <declaration name="heightB" type="int" line="338"/>
                    <declaration name="indexA" type="int" line="340"/>
                    <declaration name="indexB" type="int" line="341"/>
                    <scope line="343">
                        <scope line="347"/>
                    </scope>
                    <scope line="350">
                        <scope line="351"/>
                    </scope>
                </scope>
            </method>
        </class>
    </source>