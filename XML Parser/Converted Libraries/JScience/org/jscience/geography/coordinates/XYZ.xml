<?xml version="1.0" encoding="UTF-8"?>
<source package="org.jscience.geography.coordinates">
  <import name="javax.measure.Measure" />
  <import name="javax.measure.converter.UnitConverter" />
  <import name="javax.measure.quantity.*" />
  <import name="static javax.measure.unit.SI.*" />
  <import name="javax.measure.unit.Unit" />
  <import name="javolution.context.ObjectFactory" />
  <import name="javolution.xml.XMLFormat" />
  <import name="javolution.xml.stream.XMLStreamException" />
  <import name="static org.jscience.geography.coordinates.crs.ReferenceEllipsoid.WGS84" />
  <import name="org.jscience.geography.coordinates.crs.GeocentricCRS" />
  <import name="org.jscience.mathematics.vector.DimensionException" />
  <import name="org.jscience.mathematics.vector.Float64Vector" />
  <import name="org.opengis.referencing.cs.CoordinateSystem" />
  <class name="XYZ" extends="Coordinates<GeocentricCRS<XYZ>>" startLine="28">
    <javadoc>
      <text>* This class represents the {@link GeocentricCRS geocentric} Earth-Centered, 
 * Earth-Fixed (ECEF) cartesian coordinates used in GPS/GLONASS.</text>
      <author>Paul D. Anderson</author>
      <version>3.0, February 18, 2006</version>
    </javadoc>
    <javadoc>
      <text>* Holds the coordinate reference system for all instances of this class.</text>
    </javadoc>
    <method type="XYZ" name="coordinatesOf" startLine="43" endLine="61">
      <declaration type="double" name="latitude" />
      <declaration type="double" name="longitude" />
      <declaration type="double" name="height" />
      <declaration type="double" name="cosLat" />
      <declaration type="double" name="sinLat" />
      <declaration type="double" name="cosLon" />
      <declaration type="double" name="sinLon" />
      <declaration type="double" name="roc" />
      <declaration type="double" name="x" />
      <declaration type="double" name="y" />
      <declaration type="double" name="z" />
    </method>
    <method type="AbsolutePosition" name="positionOf" startLine="65" endLine="94">
      <declaration type="double" name="x" />
      <declaration type="double" name="y" />
      <declaration type="double" name="z" />
      <declaration type="double" name="longitude" />
      <declaration type="double" name="latitude" />
      <declaration type="double" name="xy" />
      <scope startLine="75" endLine="77" />
      <scope startLine="77" endLine="86">
        <declaration type="double" name="a" />
        <declaration type="double" name="b" />
        <declaration type="double" name="ea2" />
        <declaration type="double" name="eb2" />
        <declaration type="double" name="beta" />
        <declaration type="double" name="numerator" />
        <declaration type="double" name="denominator" />
      </scope>
      <declaration type="double" name="height" />
      <comment>conventional result if xy == 0.0...</comment>
    </method>
    <method type="CoordinateSystem" name="getCoordinateSystem" startLine="97" endLine="99" />
    <declaration type="GeocentricCRS<XYZ>" name="CRS" />
    <method type="double" name="cube" startLine="102" endLine="104" />
    <javadoc>
      <text>* Holds the x position in meters.</text>
    </javadoc>
    <declaration type="double" name="_x" />
    <javadoc>
      <text>* Holds the y position in meters.</text>
    </javadoc>
    <declaration type="double" name="_y" />
    <javadoc>
      <text>* Holds the z position in meters.</text>
    </javadoc>
    <declaration type="double" name="_z" />
    <javadoc>
      <text>* Returns the spatial position corresponding to the specified coordinates.</text>
      <param>x the x value stated in the specified unit.</param>
      <param>y the y value stated in the specified unit.</param>
      <param>z the z value stated in the specified unit.</param>
      <param>unit the length unit in which the coordinates are stated.</param>
      <return>the corresponding 3D position.</return>
    </javadoc>
    <method type="XYZ" name="valueOf" startLine="130" endLine="143">
      <declaration type="XYZ" name="xyz" />
      <scope startLine="132" endLine="136" />
      <scope startLine="136" endLine="141">
        <declaration type="UnitConverter" name="toMeter" />
      </scope>
    </method>
    <method type="XYZ" name="create" startLine="148" endLine="150" />
    <declaration type="ObjectFactory<XYZ>" name="FACTORY" />
    <method type="constructor" name="XYZ" startLine="153" endLine="154" />
    <javadoc>
      <text>* Returns the spatial position corresponding to the specified 
 * 3-dimensional vector.</text>
      <param>vector the 3-dimensional vector holding the x/y/z coordinates.</param>
      <param>unit the length unit in which the coordinates are stated.</param>
      <return>the corresponding 3D position.</return>
    </javadoc>
    <method type="XYZ" name="valueOf" startLine="164" endLine="169" />
    <javadoc>
      <text>* Returns the x coordinate value as <code>double</code></text>
      <param>unit the length unit of the x coordinate value to return.</param>
      <return>the x coordinate stated in the specified unit.</return>
    </javadoc>
    <method type="double" name="xValue" startLine="177" endLine="179" />
    <javadoc>
      <text>* Returns the y coordinate value as <code>double</code></text>
      <param>unit the length unit of the x coordinate value to return.</param>
      <return>the z coordinate stated in the specified unit.</return>
    </javadoc>
    <method type="double" name="yValue" startLine="187" endLine="189" />
    <javadoc>
      <text>* Returns the z coordinate value as <code>double</code></text>
      <param>unit the length unit of the x coordinate value to return.</param>
      <return>the z coordinate stated in the specified unit.</return>
    </javadoc>
    <method type="double" name="zValue" startLine="197" endLine="199" />
    <javadoc>
      <text>* Returns the x/y/z coordinates value as a 3-dimensional vector.</text>
      <param>unit the length unit of the vector coordinates.</param>
      <return>a vector holding the x/y/z coordinates stated in the 
 * specified unit.</return>
    </javadoc>
    <method type="Float64Vector" name="toVector" startLine="208" endLine="214">
      <declaration type="UnitConverter" name="cvtr" />
    </method>
    <method type="GeocentricCRS<XYZ>" name="getCoordinateReferenceSystem" startLine="217" endLine="219" />
    <method type="int" name="getDimension" startLine="222" endLine="224" />
    <method type="double" name="getOrdinate" startLine="227" endLine="240">
      <scope startLine="228" endLine="231">
        <declaration type="Unit<?>" name="u" />
      </scope>
      <scope startLine="231" endLine="234">
        <declaration type="Unit<?>" name="u" />
      </scope>
      <scope startLine="234" endLine="237">
        <declaration type="Unit<?>" name="u" />
      </scope>
      <scope startLine="237" endLine="239" />
    </method>
    <method type="XYZ" name="copy" startLine="243" endLine="245" />
    <method type="XYZ" name="newInstance" startLine="254" endLine="256" />
    <method type="void" name="write" startLine="258" endLine="262" />
    <method type="void" name="read" startLine="264" endLine="268" />
    <declaration type="XMLFormat<XYZ>" name="XML" />
    <declaration type="long" name="serialVersionUID" />
    <comment>OpenGIS Interface.</comment>
    <comment>OpenGIS Interface.</comment>
    <comment>Default serialization.</comment>
    <comment />
  </class>
</source>
