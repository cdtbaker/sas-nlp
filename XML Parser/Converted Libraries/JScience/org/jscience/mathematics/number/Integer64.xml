<?xml version="1.0" encoding="UTF-8"?>
<source package="org.jscience.mathematics.number">
  <import name="javolution.context.ObjectFactory" />
  <import name="javolution.lang.MathLib" />
  <import name="javolution.text.Text" />
  <import name="javolution.text.TypeFormat" />
  <import name="javolution.xml.XMLFormat" />
  <import name="javolution.xml.stream.XMLStreamException" />
  <class name="Integer64" extends="Number<Integer64>" startLine="18">
    <javadoc>
      <text>* <p> This class represents a 64 bits integer number.</p></text>
      <author><a href="mailto:jean-marie@dautelle.com">Jean-Marie Dautelle</a></author>
      <version>3.0, February 13, 2006</version>
      <see><a href="http://en.wikipedia.org/wiki/Integer">
 *      Wikipedia: Integer</a></see>
    </javadoc>
    <javadoc>
      <text>* Holds the default XML representation for 64 bits integer numbers.
 * This representation consists of a simple <code>value</code> attribute
 * holding the {@link #toText() textual} representation.</text>
    </javadoc>
    <method type="Integer64" name="newInstance" startLine="37" endLine="39" />
    <method type="void" name="write" startLine="42" endLine="44" />
    <method type="void" name="read" startLine="46" endLine="48">
      <comment>Nothing to do, immutable.</comment>
    </method>
    <declaration type="XMLFormat<Integer64>" name="XML" />
    <javadoc>
      <text>* Holds the factory used to produce 64 bits integer instances.</text>
    </javadoc>
    <method type="Integer64" name="create" startLine="56" endLine="58" />
    <declaration type="ObjectFactory<Integer64>" name="FACTORY" />
    <javadoc>
      <text>* The 64 bits floating point representing zero.</text>
    </javadoc>
    <declaration type="Integer64" name="ZERO" />
    <javadoc>
      <text>* The 64 bits floating point representing one.</text>
    </javadoc>
    <declaration type="Integer64" name="ONE" />
    <javadoc>
      <text>* The associated long value.</text>
    </javadoc>
    <declaration type="long" name="_value" />
    <javadoc>
      <text>* Default constructor.</text>
    </javadoc>
    <method type="constructor" name="Integer64" startLine="79" endLine="80" />
    <javadoc>
      <text>* Returns the 64 bits integer from the specified <code>long</code> value.</text>
      <param>longValue the <code>long</code> value for this number.</param>
      <see>#longValue()</see>
    </javadoc>
    <method type="constructor" name="Integer64" startLine="88" endLine="90" />
    <javadoc>
      <text>* Returns the 64 bits integer from the specified <code>long</code> value.</text>
      <param>longValue the <code>long</code> value for this number.</param>
      <return>the corresponding number.</return>
      <see>#longValue()</see>
    </javadoc>
    <method type="Integer64" name="valueOf" startLine="99" endLine="103">
      <declaration type="Integer64" name="r" />
    </method>
    <javadoc>
      <text>* Returns the number for the specified character sequence.</text>
      <param>chars the character sequence.</param>
      <return>the corresponding number.</return>
    </javadoc>
    <method type="Integer64" name="valueOf" startLine="111" endLine="115">
      <declaration type="Integer64" name="r" />
    </method>
    <javadoc>
      <text>* Returns the opposite of this number.</text>
      <return><code>-this</code>.</return>
    </javadoc>
    <method type="Integer64" name="opposite" startLine="122" endLine="126">
      <declaration type="Integer64" name="r" />
    </method>
    <javadoc>
      <text>* Returns the sum of this number with the one specified.</text>
      <param>that the number to be added.</param>
      <return><code>this + that</code>.</return>
    </javadoc>
    <method type="Integer64" name="plus" startLine="134" endLine="138">
      <declaration type="Integer64" name="r" />
    </method>
    <javadoc>
      <text>* Returns the sum of this number with the specifice value.</text>
      <param>value the value to be added.</param>
      <return><code>this + value</code>.</return>
    </javadoc>
    <method type="Integer64" name="plus" startLine="146" endLine="150">
      <declaration type="Integer64" name="r" />
    </method>
    <javadoc>
      <text>* Returns the difference between this number and the one specified.</text>
      <param>that the number to be subtracted.</param>
      <return><code>this - that</code>.</return>
    </javadoc>
    <method type="Integer64" name="minus" startLine="158" endLine="162">
      <declaration type="Integer64" name="r" />
    </method>
    <javadoc>
      <text>* Returns the difference between this number and the specified value</text>
      <param>value the value to be subtracted.</param>
      <return><code>this - value</code>.</return>
    </javadoc>
    <method type="Integer64" name="minus" startLine="170" endLine="174">
      <declaration type="Integer64" name="r" />
    </method>
    <javadoc>
      <text>* Returns the product of this number with the one specified.</text>
      <param>that the number multiplier.</param>
      <return><code>this · that</code>.</return>
    </javadoc>
    <method type="Integer64" name="times" startLine="182" endLine="186">
      <declaration type="Integer64" name="r" />
    </method>
    <javadoc>
      <text>* Returns the product of this number with the specified value.</text>
      <param>value the value multiplier.</param>
      <return><code>this · value</code>.</return>
    </javadoc>
    <method type="Integer64" name="times" startLine="194" endLine="198">
      <declaration type="Integer64" name="r" />
    </method>
    <javadoc>
      <text>* Returns this number divided by the one specified.</text>
      <param>that the number divisor.</param>
      <return><code>this / that</code>.</return>
    </javadoc>
    <method type="Integer64" name="divide" startLine="206" endLine="210">
      <declaration type="Integer64" name="r" />
    </method>
    <javadoc>
      <text>* Returns this number divided by the specified value.</text>
      <param>value the value divisor.</param>
      <return><code>this / value</code>.</return>
    </javadoc>
    <method type="Integer64" name="divide" startLine="218" endLine="222">
      <declaration type="Integer64" name="r" />
    </method>
    <javadoc>
      <text>* Compares the magnitude of this number with that number.</text>
      <return><code>|this| > |that|</code></return>
    </javadoc>
    <method type="boolean" name="isLargerThan" startLine="229" endLine="231" />
    <javadoc>
      <text>* Returns the absolute value of this number.</text>
      <return><code>|this|</code>.</return>
    </javadoc>
    <method type="Integer64" name="abs" startLine="238" endLine="242">
      <declaration type="Integer64" name="r" />
    </method>
    <javadoc>
      <text>* Returns the decimal text representation of this number.</text>
      <return>the text representation of this number.</return>
    </javadoc>
    <method type="Text" name="toText" startLine="249" endLine="251" />
    <javadoc>
      <text>* Compares this number against the specified object.</text>
      <param>that the object to compare with.</param>
      <return><code>true</code> if the objects are the same;
 * <code>false</code> otherwise.</return>
    </javadoc>
    <method type="boolean" name="equals" startLine="260" endLine="263" />
    <javadoc>
      <text>* Compares this number against the specified value.</text>
      <param>value the value to compare with.</param>
      <return><code>this.longValue() == value</code></return>
    </javadoc>
    <method type="boolean" name="equals" startLine="271" endLine="273" />
    <javadoc>
      <text>* Compares this number with the specified value for order.</text>
      <param>value the value to be compared with.</param>
      <return>a negative integer, zero, or a positive integer as this number
 * is less than, equal to, or greater than the specified value.</return>
    </javadoc>
    <method type="int" name="compareTo" startLine="282" endLine="290">
      <scope startLine="283" endLine="285" />
      <scope startLine="285" endLine="287" />
      <scope startLine="287" endLine="289" />
    </method>
    <javadoc>
      <text>* Returns the hash code for this number.</text>
      <return>the hash code value.</return>
    </javadoc>
    <method type="int" name="hashCode" startLine="297" endLine="303">
      <declaration type="int" name="h" />
    </method>
    <method type="long" name="longValue" startLine="306" endLine="308" />
    <method type="double" name="doubleValue" startLine="311" endLine="313" />
    <method type="int" name="compareTo" startLine="316" endLine="318" />
    <method type="Integer64" name="copy" startLine="321" endLine="323" />
    <declaration type="long" name="serialVersionUID" />
  </class>
</source>
