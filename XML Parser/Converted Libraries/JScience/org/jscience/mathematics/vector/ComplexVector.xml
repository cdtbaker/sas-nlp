<?xml version="1.0" encoding="UTF-8"?>
<source package="org.jscience.mathematics.vector">
  <import name="java.util.Iterator" />
  <import name="java.util.List" />
  <import name="javolution.context.ArrayFactory" />
  <import name="javolution.xml.XMLFormat" />
  <import name="javolution.xml.stream.XMLStreamException" />
  <import name="org.jscience.mathematics.number.Complex" />
  <import name="org.jscience.mathematics.structure.VectorSpaceNormed" />
  <class name="ComplexVector" extends="Vector<Complex>" startLine="20">
    <implements name="VectorSpaceNormed<Vector<Complex>,Complex>" />
    <javadoc>
      <text>* <p> This class represents an optimized {@link Vector vector} implementation
 * for {@link Complex complex} numbers elements.</p></text>
      <author><a href="mailto:jean-marie@dautelle.com">Jean-Marie Dautelle</a></author>
      <version>3.3, January 2, 2007</version>
    </javadoc>
    <javadoc>
      <text>* Holds the default XML representation. For example:
 * [code]
 * <ComplexVector dimension="2">
 * <Complex real="1.0" imaginary="-3.0" />
 * <Complex real="0.0" imaginary="2.0" />
 * </ComplexVector>[/code]</text>
    </javadoc>
    <method type="ComplexVector" name="newInstance" startLine="43" endLine="48">
      <declaration type="int" name="dimension" />
      <declaration type="ComplexVector" name="V" />
    </method>
    <method type="void" name="read" startLine="53" endLine="59">
      <scope startLine="54" endLine="56" />
    </method>
    <method type="void" name="write" startLine="63" endLine="68">
      <scope startLine="65" endLine="67" />
    </method>
    <declaration type="XMLFormat<ComplexVector>" name="XML" />
    <javadoc>
      <text>* Holds factory for vectors with variable size arrays.</text>
    </javadoc>
    <method type="ComplexVector" name="create" startLine="78" endLine="80" />
    <declaration type="ArrayFactory<ComplexVector>" name="FACTORY" />
    <javadoc>
      <text>* Holds the dimension.</text>
    </javadoc>
    <declaration type="int" name="_dimension" />
    <javadoc>
      <text>* Holds the real values.</text>
    </javadoc>
    <declaration type="double[]" name="_reals" />
    <javadoc>
      <text>* Holds the imaginary values.</text>
    </javadoc>
    <declaration type="double[]" name="_imags" />
    <javadoc>
      <text>* Creates a vector of specified capacity.</text>
    </javadoc>
    <method type="constructor" name="ComplexVector" startLine="101" endLine="104" />
    <javadoc>
      <text>* Returns a new vector holding the specified complex numbers.</text>
      <param>elements the complex numbers elements.</param>
      <return>the vector having the specified complex numbers.</return>
    </javadoc>
    <method type="ComplexVector" name="valueOf" startLine="112" endLine="122">
      <declaration type="int" name="n" />
      <declaration type="ComplexVector" name="V" />
      <scope startLine="116" endLine="120">
        <declaration type="Complex" name="complex" />
      </scope>
    </method>
    <javadoc>
      <text>* Returns a new vector holding the elements from the specified 
 * collection.</text>
      <param>elements the collection of floating-points numbers.</param>
      <return>the vector having the specified elements.</return>
    </javadoc>
    <method type="ComplexVector" name="valueOf" startLine="131" endLine="142">
      <declaration type="int" name="n" />
      <declaration type="ComplexVector" name="V" />
      <declaration type="Iterator<Complex>" name="iterator" />
      <scope startLine="136" endLine="140">
        <declaration type="Complex" name="complex" />
      </scope>
    </method>
    <javadoc>
      <text>* Returns a {@link ComplexVector} instance equivalent to the 
 * specified vector.</text>
      <param>that the vector to convert.</param>
      <return><code>that</code> or new equivalent ComplexVector.</return>
    </javadoc>
    <method type="ComplexVector" name="valueOf" startLine="151" endLine="163">
      <declaration type="int" name="n" />
      <declaration type="ComplexVector" name="V" />
      <scope startLine="157" endLine="161">
        <declaration type="Complex" name="complex" />
      </scope>
    </method>
    <javadoc>
      <text>* Returns the real value of a complex number from this vector (fast).</text>
      <param>i the complex number index.</param>
      <return>the real value of complex at <code>i</code>.</return>
      <throws>IndexOutOfBoundsException <code>(i < 0) || (i >= dimension())</code></throws>
    </javadoc>
    <method type="double" name="getReal" startLine="172" endLine="176" />
    <javadoc>
      <text>* Returns the imaginary value of a complex number from this vector (fast).</text>
      <param>i the complex number index.</param>
      <return>the real value of complex at <code>i</code>.</return>
      <throws>IndexOutOfBoundsException <code>(i < 0) || (i >= dimension())</code></throws>
    </javadoc>
    <method type="double" name="getImaginary" startLine="185" endLine="189" />
    <javadoc>
      <text>* Returns the Euclidian norm of this vector (square root of the 
 * dot product of this vector and itself).</text>
      <return><code>sqrt(this Â· this)</code>.</return>
    </javadoc>
    <method type="Complex" name="norm" startLine="197" endLine="207">
      <declaration type="double" name="normSquaredReal" />
      <declaration type="double" name="normSquaredImag" />
      <scope startLine="200" endLine="205">
        <declaration type="double" name="real" />
        <declaration type="double" name="imag" />
      </scope>
    </method>
    <method type="int" name="getDimension" startLine="210" endLine="212" />
    <method type="Complex" name="get" startLine="215" endLine="219" />
    <method type="ComplexVector" name="opposite" startLine="222" endLine="230">
      <declaration type="ComplexVector" name="V" />
      <scope startLine="225" endLine="228" />
    </method>
    <method type="ComplexVector" name="plus" startLine="233" endLine="244">
      <declaration type="ComplexVector" name="T" />
      <declaration type="ComplexVector" name="V" />
      <scope startLine="239" endLine="242" />
    </method>
    <method type="ComplexVector" name="minus" startLine="247" endLine="258">
      <declaration type="ComplexVector" name="T" />
      <declaration type="ComplexVector" name="V" />
      <scope startLine="253" endLine="256" />
    </method>
    <method type="ComplexVector" name="times" startLine="261" endLine="271">
      <declaration type="ComplexVector" name="V" />
      <scope startLine="264" endLine="269">
        <declaration type="double" name="real" />
        <declaration type="double" name="imag" />
      </scope>
    </method>
    <method type="Complex" name="times" startLine="274" endLine="285">
      <declaration type="ComplexVector" name="T" />
      <declaration type="double" name="sumReal" />
      <declaration type="double" name="sumImag" />
      <scope startLine="280" endLine="283" />
    </method>
    <method type="ComplexVector" name="copy" startLine="288" endLine="296">
      <declaration type="ComplexVector" name="V" />
      <scope startLine="291" endLine="294" />
    </method>
    <method type="void" name="set" startLine="301" endLine="304" />
    <method type="ComplexVector" name="newInstance" startLine="306" endLine="310">
      <declaration type="ComplexVector" name="V" />
    </method>
    <declaration type="long" name="serialVersionUID" />
    <comment>/</comment>
    <comment>Package Private Utilities</comment>
    <comment>/</comment>
  </class>
</source>
