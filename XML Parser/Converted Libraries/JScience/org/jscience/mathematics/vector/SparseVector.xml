<?xml version="1.0" encoding="UTF-8"?>
<source package="org.jscience.mathematics.vector">
  <import name="java.util.Map" />
  <import name="javolution.context.ObjectFactory" />
  <import name="javolution.util.FastComparator" />
  <import name="javolution.util.FastMap" />
  <import name="javolution.util.Index" />
  <import name="javolution.xml.XMLFormat" />
  <import name="javolution.xml.stream.XMLStreamException" />
  <import name="org.jscience.mathematics.structure.Field" />
  <class name="SparseVector" extends="Vector<F>" startLine="22">
    <javadoc>
      <text>* <p> This class represents a sparse vector.</p>
 * <p> Sparse vectors can be created using an index-to-element mapping or 
 * by adding single elements sparse vectors together.</p></text>
      <author><a href="mailto:jean-marie@dautelle.com">Jean-Marie Dautelle</a></author>
      <version>3.3, January 2, 2007</version>
    </javadoc>
    <javadoc>
      <text>* Holds the default XML representation for sparse vectors.
 * For example:[code]
 * <SparseVector dimension="16">
 * <Zero class="Complex" real="0.0" imaginary="0.0" />
 * <Elements>
 * <Index value="4" />
 * <Complex real="1.0" imaginary="0.0" />
 * <Index value="6" />
 * <Complex real="0.0" imaginary="1.0" />
 * </Elements>
 * </SparseVector>[/code]</text>
    </javadoc>
    <method type="SparseVector" name="newInstance" startLine="50" endLine="52" />
    <method type="void" name="read" startLine="57" endLine="61" />
    <method type="void" name="write" startLine="65" endLine="69" />
    <declaration type="XMLFormat<SparseVector>" name="XML" />
    <javadoc>
      <text>* Holds this vector dimension.</text>
    </javadoc>
    <declaration type="int" name="_dimension" />
    <javadoc>
      <text>* Holds zero.</text>
    </javadoc>
    <declaration type="F" name="_zero" />
    <javadoc>
      <text>* Holds the index to element mapping.</text>
    </javadoc>
    <declaration type="FastMap<Index,F>" name="_elements" />
    <javadoc>
      <text>* Returns a sparse vector having a single element at the specified index.</text>
      <param>dimension this vector dimension.</param>
      <param>zero the element representing zero.</param>
      <param>i the index value of this vector single element.</param>
      <param>element the element at the specified index.</param>
      <return>the corresponding vector.</return>
    </javadoc>
    <method type="SparseVector<F>" name="valueOf" startLine="97" endLine="101">
      <declaration type="SparseVector<F>" name="V" />
    </method>
    <javadoc>
      <text>* Returns a sparse vector from the specified index to element mapping.</text>
      <param>dimension this vector dimension.</param>
      <param>zero the element representing zero.</param>
      <param>elements the index to element mapping.</param>
      <return>the corresponding vector.</return>
    </javadoc>
    <method type="SparseVector<F>" name="valueOf" startLine="112" endLine="116">
      <declaration type="SparseVector<F>" name="V" />
    </method>
    <javadoc>
      <text>* Returns a sparse vector equivalent to the specified vector but with 
 * the zero elements removed removed using a default object equality 
 * comparator.</text>
      <param>that the vector to convert.</param>
      <param>zero the zero element for the sparse vector to return.</param>
      <return><code>SparseVector.valueOf(that, zero, FastComparator.DEFAULT)</code></return>
    </javadoc>
    <method type="SparseVector<F>" name="valueOf" startLine="128" endLine="130" />
    <javadoc>
      <text>* Returns a sparse vector equivalent to the specified vector but with 
 * the zero elements removed using the specified object equality comparator.
 * This method can be used to clean up sparse vectors (to remove elements
 * close to zero).</text>
      <param>that the vector to convert.</param>
      <param>zero the zero element for the sparse vector to return.</param>
      <param>comparator the comparator used to determinate zero equality.</param>
      <return>a sparse vector with zero elements removed.</return>
    </javadoc>
    <method type="SparseVector<F>" name="valueOf" startLine="144" endLine="156">
      <declaration type="int" name="n" />
      <declaration type="SparseVector<F>" name="V" />
      <scope startLine="149" endLine="154">
        <declaration type="F" name="element" />
        <scope startLine="151" endLine="153" />
      </scope>
    </method>
    <method type="SparseVector<F>" name="valueOf" startLine="158" endLine="167">
      <declaration type="SparseVector<F>" name="V" />
      <scope startLine="161" endLine="165">
        <scope startLine="162" endLine="164" />
      </scope>
    </method>
    <javadoc>
      <text>* Returns the value of the non-set elements for this sparse vector.</text>
      <return>the element corresponding to zero.</return>
    </javadoc>
    <method type="F" name="getZero" startLine="174" endLine="176" />
    <method type="int" name="getDimension" startLine="179" endLine="181" />
    <method type="F" name="get" startLine="184" endLine="189">
      <declaration type="F" name="element" />
    </method>
    <method type="SparseVector<F>" name="opposite" startLine="192" endLine="199">
      <declaration type="SparseVector<F>" name="V" />
      <scope startLine="195" endLine="197" />
    </method>
    <method type="SparseVector<F>" name="plus" startLine="202" endLine="206" />
    <method type="SparseVector<F>" name="plus" startLine="208" endLine="223">
      <declaration type="SparseVector<F>" name="V" />
      <scope startLine="213" endLine="221">
        <declaration type="Index" name="index" />
        <declaration type="FastMap.Entry<Index,F>" name="entry" />
        <scope startLine="216" endLine="218" />
        <scope startLine="218" endLine="220" />
      </scope>
    </method>
    <method type="SparseVector<F>" name="times" startLine="226" endLine="233">
      <declaration type="SparseVector<F>" name="V" />
      <scope startLine="229" endLine="231" />
    </method>
    <method type="F" name="times" startLine="236" endLine="246">
      <declaration type="F" name="sum" />
      <scope startLine="241" endLine="244">
        <declaration type="F" name="f" />
      </scope>
    </method>
    <method type="SparseVector<F>" name="copy" startLine="250" endLine="256">
      <declaration type="SparseVector<F>" name="V" />
      <scope startLine="252" endLine="254" />
    </method>
    <method type="SparseVector<F>" name="newInstance" startLine="263" endLine="268">
      <declaration type="SparseVector<F>" name="V" />
    </method>
    <method type="SparseVector" name="create" startLine="272" endLine="274" />
    <method type="void" name="cleanup" startLine="277" endLine="279" />
    <declaration type="ObjectFactory<SparseVector>" name="FACTORY" />
    <method type="constructor" name="SparseVector" startLine="282" endLine="283" />
    <declaration type="long" name="serialVersionUID" />
    <comment>/</comment>
    <comment>Factory creation.</comment>
    <comment>/</comment>
  </class>
</source>
