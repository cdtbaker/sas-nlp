<?xml version="1.0" encoding="UTF-8"?>
<source package="org.jscience.mathematics.vector">
  <import name="java.util.List" />
  <import name="javolution.context.ObjectFactory" />
  <import name="javolution.context.StackContext" />
  <import name="javolution.util.FastTable" />
  <import name="javolution.xml.XMLFormat" />
  <import name="javolution.xml.stream.XMLStreamException" />
  <import name="org.jscience.mathematics.structure.Field" />
  <class name="DenseVector" extends="Vector<F>" startLine="21">
    <javadoc>
      <text>* <p> This class represents a dense vector.</p></text>
      <author><a href="mailto:jean-marie@dautelle.com">Jean-Marie Dautelle</a></author>
      <version>3.3, January 2, 2007</version>
    </javadoc>
    <javadoc>
      <text>* Holds the default XML representation for dense vectors. For example:
 * [code]
 * <DenseVector dimension="2">
 * <Rational value="1/3" />
 * <Rational value="3/5" />
 * </DenseVector>[/code]</text>
    </javadoc>
    <method type="DenseVector" name="newInstance" startLine="42" endLine="44" />
    <method type="void" name="read" startLine="49" endLine="56">
      <declaration type="int" name="dimension" />
      <scope startLine="51" endLine="53" />
    </method>
    <method type="void" name="write" startLine="60" endLine="66">
      <declaration type="int" name="dimension" />
      <scope startLine="63" endLine="65" />
    </method>
    <declaration type="XMLFormat<DenseVector>" name="XML" />
    <javadoc>
      <text>* Holds the elements.</text>
    </javadoc>
    <declaration type="FastTable<F>" name="_elements" />
    <javadoc>
      <text>* Returns a dense vector holding the specified elements.</text>
      <param>elements the vector elements.</param>
      <return>the vector having the specified elements.</return>
    </javadoc>
    <method type="DenseVector<F>" name="valueOf" startLine="80" endLine="86">
      <declaration type="DenseVector<F>" name="V" />
      <scope startLine="82" endLine="84" />
    </method>
    <javadoc>
      <text>* Returns a dense vector holding the elements from the specified 
 * collection.</text>
      <param>elements the collection of vector elements.</param>
      <return>the vector having the specified elements.</return>
    </javadoc>
    <method type="DenseVector<F>" name="valueOf" startLine="95" endLine="99">
      <declaration type="DenseVector<F>" name="V" />
    </method>
    <javadoc>
      <text>* Returns a dense vector equivalent to the specified vector.</text>
      <param>that the vector to convert.</param>
      <return><code>that</code> or a dense vector holding the same elements
 * as the specified vector.</return>
    </javadoc>
    <method type="DenseVector<F>" name="valueOf" startLine="108" endLine="115">
      <declaration type="DenseVector<F>" name="V" />
      <scope startLine="111" endLine="113" />
    </method>
    <method type="int" name="getDimension" startLine="118" endLine="120" />
    <method type="F" name="get" startLine="123" endLine="125" />
    <method type="DenseVector<F>" name="opposite" startLine="128" endLine="134">
      <declaration type="DenseVector<F>" name="V" />
      <scope startLine="130" endLine="132" />
    </method>
    <method type="DenseVector<F>" name="plus" startLine="137" endLine="146">
      <declaration type="int" name="n" />
      <declaration type="DenseVector<F>" name="V" />
      <scope startLine="142" endLine="144" />
    </method>
    <method type="DenseVector<F>" name="minus" startLine="149" endLine="151">
      <comment>Returns more specialized type.</comment>
    </method>
    <method type="DenseVector<F>" name="times" startLine="154" endLine="160">
      <declaration type="DenseVector<F>" name="V" />
      <scope startLine="156" endLine="158" />
    </method>
    <method type="F" name="times" startLine="163" endLine="177">
      <declaration type="int" name="n" />
      <scope startLine="168" endLine="174">
        <declaration type="F" name="sum" />
        <scope startLine="170" endLine="172" />
        <comment>Reduces memory allocation / garbage collection.</comment>
      </scope>
      <scope startLine="174" endLine="176" />
    </method>
    <method type="DenseVector<F>" name="copy" startLine="181" endLine="187">
      <declaration type="DenseVector<F>" name="V" />
      <scope startLine="183" endLine="185" />
    </method>
    <method type="DenseVector<F>" name="newInstance" startLine="194" endLine="196" />
    <method type="DenseVector" name="create" startLine="200" endLine="202" />
    <method type="void" name="cleanup" startLine="205" endLine="207" />
    <declaration type="ObjectFactory<DenseVector>" name="FACTORY" />
    <method type="constructor" name="DenseVector" startLine="210" endLine="211" />
    <declaration type="long" name="serialVersionUID" />
    <comment>/</comment>
    <comment>Factory creation.</comment>
    <comment>/</comment>
  </class>
</source>
