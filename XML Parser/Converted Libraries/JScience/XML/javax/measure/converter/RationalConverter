<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.measure.converter">
        <class name="RationalConverter" extends="UnitConverter" line="11">
            <javadoc line="11">
                &lt;p&gt; This class represents a converter multiplying numeric values by an
                 * exact scaling factor (represented as the quotient of two 
                 * &lt;code&gt;long&lt;/code&gt; numbers).&lt;/p&gt;
                 * &lt;p&gt; Instances of this class are immutable.&lt;/p&gt;                
                <@author>
                    r  <a href="mailto:jean-marie@dautelle.com">Jean-Marie Dautelle</a>                    
                </@author>
                <@version>
                    n 3.1, April 22, 2006                    
                </@version>
            </javadoc>
            <declaration name="_dividend" type="long" line="23"/>
            <javadoc line="23">
                Holds the converter dividend.                
            </javadoc>
            <declaration name="_divisor" type="long" line="28"/>
            <javadoc line="28">
                Holds the converter divisor (always positive).                
            </javadoc>
            <javadoc line="33">
                Creates a rational converter with the specified dividend and 
                 * divisor.                
                <@param>
                    m dividend the dividend.                    
                </@param>
                <@param>
                    m divisor the positive divisor.                    
                </@param>
                <@throws>
                    s IllegalArgumentException if <code>divisor &lt; 0</code>                    
                </@throws>
                <@throws>
                    s IllegalArgumentException if <code>dividend == divisor</code>                    
                </@throws>
            </javadoc>
            <method name="RationalConverter" type="constructor" line="42"/>
            <javadoc line="51">
                Returns the dividend for this rational converter.                
                <@return>
                    n this converter dividend.                    
                </@return>
            </javadoc>
            <method name="getDividend" type="long" line="56"/>
            <javadoc line="60">
                Returns the positive divisor for this rational converter.                
                <@return>
                    n this converter divisor.                    
                </@return>
            </javadoc>
            <method name="getDivisor" type="long" line="65"/>
            <method name="inverse" type="UnitConverter" line="70"/>
            <method name="convert" type="double" line="76"/>
            <method name="isLinear" type="boolean" line="81"/>
            <method name="concatenate" type="UnitConverter" line="86">
                <scope line="87">
                    <declaration name="that" type="RationalConverter" line="88"/>
                    <declaration name="dividendLong" type="long" line="89"/>
                    <declaration name="divisorLong" type="long" line="90"/>
                    <declaration name="dividendDouble" type="double" line="91"/>
                    <declaration name="divisorDouble" type="double" line="92"/>
                    <scope line="94"/>
                    <declaration name="gcd" type="long" line="97"/>
                </scope>
                <scope line="99"/>
                <scope line="101"/>
            </method>
            <method name="valueOf" type="UnitConverter" line="106"/>
            <javadoc line="111">
                Returns the greatest common divisor (Euclid&apos;s algorithm).                
                <@param>
                    m m the first number.                    
                </@param>
                <@param>
                    m nn the second number.                    
                </@param>
                <@return>
                    n the greatest common divisor.                    
                </@return>
            </javadoc>
            <method name="gcd" type="long" line="118">
                <scope line="119"/>
                <scope line="121"/>
            </method>
            <declaration name="serialVersionUID" type="long" line="126"/>
        </class>
    </source>