<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.measure.converter">
        <class name="MultiplyConverter" extends="UnitConverter" line="11">
            <javadoc line="11">
                &lt;p&gt; This class represents a converter multiplying numeric values by a 
                 * constant scaling factor (approximated as a &lt;code&gt;double&lt;/code&gt;). 
                 * For exact scaling conversions {@link RationalConverter} is preferred.&lt;/p&gt;
                 * &lt;p&gt; Instances of this class are immutable.&lt;/p&gt;                
                <@author>
                    r  <a href="mailto:jean-marie@dautelle.com">Jean-Marie Dautelle</a>                    
                </@author>
                <@version>
                    n 3.1, April 22, 2006                    
                </@version>
            </javadoc>
            <declaration name="_factor" type="double" line="23"/>
            <javadoc line="23">
                Holds the scale factor.                
            </javadoc>
            <javadoc line="28">
                Creates a multiply converter with the specified scale factor.                
                <@param>
                    m factor the scale factor.                    
                </@param>
                <@throws>
                    s IllegalArgumentException if offset is one (or close to one).                    
                </@throws>
            </javadoc>
            <method name="MultiplyConverter" type="constructor" line="34"/>
            <javadoc line="40">
                Returns the scale factor.                
                <@return>
                    n the scale factor.                    
                </@return>
            </javadoc>
            <method name="getFactor" type="double" line="45"/>
            <method name="inverse" type="UnitConverter" line="50"/>
            <method name="convert" type="double" line="55"/>
            <method name="isLinear" type="boolean" line="60"/>
            <method name="concatenate" type="UnitConverter" line="65">
                <scope line="66">
                    <declaration name="factor" type="double" line="67"/>
                </scope>
                <scope line="69">
                    <declaration name="factor" type="double" line="70"/>
                </scope>
                <scope line="74"/>
            </method>
            <method name="valueOf" type="UnitConverter" line="79">
                <declaration name="asFloat" type="float" line="80"/>
            </method>
            <declaration name="serialVersionUID" type="long" line="85"/>
        </class>
    </source>