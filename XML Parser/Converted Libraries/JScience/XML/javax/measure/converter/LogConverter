<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.measure.converter">
        <class name="LogConverter" line="11">
            <extends class="UnitConverter"/>
            <javadoc line="11">
                &lt;p&gt; This class represents a logarithmic converter. Such converter 
                  is typically used to create logarithmic unit. For example:[code]
                  Unit&lt;Dimensionless&gt; BEL = Unit.ONE.transform(new LogConverter(10).inverse());
                  [/code]&lt;/p&gt;
                  &lt;p&gt; Instances of this class are immutable.&lt;/p&gt;                
                <@author>
                    r  <a href="mailto:jean-marie@dautelle.com">Jean-Marie Dautelle</a>                    
                </@author>
                <@version>
                    n 3.1, April 22, 2006                    
                </@version>
            </javadoc>
            <declaration name="_base" type="double" line="24"/>
            <javadoc line="24">
                Holds the logarithmic base.                
            </javadoc>
            <declaration name="_logBase" type="double" line="29"/>
            <javadoc line="29">
                Holds the natural logarithm of the base.                
            </javadoc>
            <declaration name="_invLogBase" type="double" line="34"/>
            <javadoc line="34">
                Holds the inverse of the natural logarithm of the base.                
            </javadoc>
            <declaration name="_inverse" type="Inverse" line="39"/>
            <javadoc line="39">
                Holds the inverse of this converter.                
            </javadoc>
            <javadoc line="44">
                Creates a logarithmic converter having the specified base.                
                <@param>
                    m base the logarithmic base (e.g. <code>Math.E</code> for
                      the Natural Logarithm).                    
                </@param>
            </javadoc>
            <method name="LogConverter" type="constructor" line="50">
                <params>
                    <param name="base" type="double"/>
                </params>
            </method>
            <javadoc line="56">
                Returns the logarithmic base of this converter.                
                <@return>
                    n the logarithmic base (e.g. <code>Math.E</code> for
                      the Natural Logarithm).                    
                </@return>
            </javadoc>
            <method name="getBase" type="double" line="62"/>
            <method name="inverse" type="UnitConverter" line="67"/>
            <method name="convert" type="double" line="72">
                <params>
                    <param name="amount" type="double"/>
                </params>
            </method>
            <method name="isLinear" type="boolean" line="77"/>
            <class name="Inverse" line="81">
                <extends class="UnitConverter"/>
                <javadoc line="81">
                    This inner class represents the inverse of the logarithmic converter
                      (exponentiation converter).                    
                </javadoc>
                <method name="inverse" type="UnitConverter" line="89"/>
                <method name="convert" type="double" line="94">
                    <params>
                        <param name="amount" type="double"/>
                    </params>
                </method>
                <method name="isLinear" type="boolean" line="99"/>
                <declaration name="serialVersionUID" type="long" line="103"/>
            </class>
            <declaration name="serialVersionUID" type="long" line="106"/>
        </class>
    </source>