<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.measure">
        <import package="java.math.BigDecimal"/>
        <import package="java.math.MathContext"/>
        <import package="javax.measure.converter.AddConverter"/>
        <import package="javax.measure.converter.RationalConverter"/>
        <import package="javax.measure.converter.UnitConverter"/>
        <import package="javax.measure.quantity.Quantity"/>
        <import package="javax.measure.unit.Unit"/>
        <class name="DecimalMeasure" line="20">
            <type_params>
                <type_param name="Q"/>
            </type_params>
            <extends class="Measure">
                <type_params>
                    <type_param name="BigDecimal"/>
                    <type_param name="Q"/>
                </type_params>
            </extends>
            <javadoc line="20">
                &lt;p&gt; This class represents a measure whose value is an arbitrary-precision 
                  decimal number.&lt;/p&gt;
                  &lt;p&gt; When converting, applications may supply the 
                  &lt;code&gt;java.math.Context&lt;/code&gt;:[code]
                  DecimalMeasure&lt;Velocity&gt; c = DecimalMeasure.valueOf(&quot;299792458 m/s&quot;);
                  DecimalMeasure&lt;Velocity&gt; milesPerHour = c.to(MILES_PER_HOUR, MathContext.DECIMAL128);
                  System.out.println(milesPerHour);
                  &gt; 670616629.3843951324266284896206156 mph
                  [/code]                
                <@author>
                    r  <a href="mailto:jean-marie@dautelle.com">Jean-Marie Dautelle</a>                    
                </@author>
                <@version>
                    n 4.3, October 3, 2007                    
                </@version>
            </javadoc>
            <declaration name="_value" type="BigDecimal" line="38"/>
            <javadoc line="38">
                Holds the BigDecimal value.                
            </javadoc>
            <declaration name="_unit" type="Unit&lt;Q&gt;" line="43"/>
            <javadoc line="43">
                Holds the unit.                
            </javadoc>
            <javadoc line="48">
                Creates a decimal measure for the specified number stated in the 
                  specified unit.                
            </javadoc>
            <method name="DecimalMeasure" type="constructor" line="52">
                <params>
                    <param name="value" type="BigDecimal"/>
                    <param name="unit" type="Unit<Q>"/>
                </params>
            </method>
            <javadoc line="57">
                Returns the decimal measure for the specified number stated in the 
                  specified unit.                
                <@param>
                    m decimal the measurement value.                    
                </@param>
                <@param>
                    m unit the measurement unit.                    
                </@param>
            </javadoc>
            <method name="valueOf" type="DecimalMeasure<Q>" line="65">
                <params>
                    <param name="decimal" type="BigDecimal"/>
                    <param name="unit" type="Unit<Q>"/>
                </params>
            </method>
            <javadoc line="69">
                Returns the decimal measure for the specified textual representation.
                  This method first reads the &lt;code&gt;BigDecimal&lt;/code&gt; value, then 
                  the unit if any (value and unit should be separated by white spaces).                
                <@param>
                    m csq the decimal measure representation (including unit if any).                    
                </@param>
                <@throws>
                    s NumberFormatException if the specified character sequence is 
                      not a valid representation of decimal measure.                    
                </@throws>
            </javadoc>
            <method name="valueOf" type="DecimalMeasure<Q>" line="79">
                <params>
                    <param name="csq" type="CharSequence"/>
                </params>
                <declaration name="str" type="String" line="80"/>
                <declaration name="numberLength" type="int" line="81"/>
                <declaration name="unitStartIndex" type="int" line="82"/>
                <scope line="83">
                    <scope line="84">
                        <scope line="85">
                            <scope line="86"/>
                        </scope>
                    </scope>
                </scope>
                <declaration name="decimal" type="BigDecimal" line="95"/>
                <declaration name="unit" type="Unit" line="96"/>
                <scope line="97"/>
            </method>
            <method name="getUnit" type="Unit<Q>" line="104"/>
            <method name="getValue" type="BigDecimal" line="109"/>
            <javadoc line="113">
                Returns the decimal measure equivalent to this measure but stated in the 
                  specified unit. This method will raise an ArithmeticException if the 
                  resulting measure does not have a terminating decimal expansion.                
                <@param>
                    m unit the new measurement unit.                    
                </@param>
                <@return>
                    n the measure stated in the specified unit.                    
                </@return>
                <@throws>
                    s ArithmeticException if the converted measure value does not have
                      a terminating decimal expansion                    
                </@throws>
                <@see>
                    e #to(Unit,MathContext)                    
                </@see>
            </javadoc>
            <method name="to" type="DecimalMeasure<Q>" line="125">
                <params>
                    <param name="unit" type="Unit<Q>"/>
                </params>
            </method>
            <javadoc line="129">
                Returns the decimal measure equivalent to this measure but stated in the 
                  specified unit, the conversion is performed using the specified math
                  context.                
                <@param>
                    m unit the new measurement unit.                    
                </@param>
                <@param>
                    m mathContext the mathContext used to convert 
                      <code>BigDecimal</code> values or <code>null</code> if none.                    
                </@param>
                <@return>
                    n the measure stated in the specified unit.                    
                </@return>
                <@throws>
                    s ArithmeticException if the result is inexact but the
                      rounding mode is <code>MathContext.UNNECESSARY</code> or 
                      <code>mathContext.precision == 0</tt> and the quotient has a 
                      non-terminating decimal expansion.                    
                </@throws>
            </javadoc>
            <method name="to" type="DecimalMeasure<Q>" line="143">
                <params>
                    <param name="unit" type="Unit<Q>"/>
                    <param name="mathContext" type="MathContext"/>
                </params>
                <declaration name="cvtr" type="UnitConverter" line="146"/>
                <scope line="147">
                    <declaration name="factor" type="RationalConverter" line="148"/>
                    <declaration name="dividend" type="BigDecimal" line="149"/>
                    <declaration name="divisor" type="BigDecimal" line="150"/>
                    <declaration name="result" type="BigDecimal" line="151"/>
                </scope>
                <scope line="155">
                    <declaration name="factor" type="BigDecimal" line="156"/>
                    <declaration name="result" type="BigDecimal" line="157"/>
                </scope>
                <scope line="160">
                    <declaration name="offset" type="BigDecimal" line="161"/>
                    <declaration name="result" type="BigDecimal" line="162"/>
                </scope>
                <scope line="165">
                    <declaration name="result" type="BigDecimal" line="166"/>
                </scope>
            </method>
            <method name="doubleValue" type="double" line="171">
                <params>
                    <param name="unit" type="Unit<Q>"/>
                </params>
            </method>
            <declaration name="serialVersionUID" type="long" line="177"/>
        </class>
    </source>