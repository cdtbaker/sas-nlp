<?xml version="1.0" encoding="UTF-8"?>
<source package="javax.measure.converter">
  <class name="RationalConverter" extends="UnitConverter" startLine="11">
    <javadoc>
      <text>* <p> This class represents a converter multiplying numeric values by an
 * exact scaling factor (represented as the quotient of two 
 * <code>long</code> numbers).</p>
 * <p> Instances of this class are immutable.</p></text>
      <author><a href="mailto:jean-marie@dautelle.com">Jean-Marie Dautelle</a></author>
      <version>3.1, April 22, 2006</version>
    </javadoc>
    <javadoc>
      <text>* Holds the converter dividend.</text>
    </javadoc>
    <declaration type="long" name="_dividend" />
    <javadoc>
      <text>* Holds the converter divisor (always positive).</text>
    </javadoc>
    <declaration type="long" name="_divisor" />
    <javadoc>
      <text>* Creates a rational converter with the specified dividend and 
 * divisor.</text>
      <param>dividend the dividend.</param>
      <param>divisor the positive divisor.</param>
      <throws>IllegalArgumentException if <code>divisor &lt; 0</code></throws>
      <throws>IllegalArgumentException if <code>dividend == divisor</code></throws>
    </javadoc>
    <method type="constructor" name="RationalConverter" startLine="42" endLine="49" />
    <javadoc>
      <text>* Returns the dividend for this rational converter.</text>
      <return>this converter dividend.</return>
    </javadoc>
    <method type="long" name="getDividend" startLine="56" endLine="58" />
    <javadoc>
      <text>* Returns the positive divisor for this rational converter.</text>
      <return>this converter divisor.</return>
    </javadoc>
    <method type="long" name="getDivisor" startLine="65" endLine="67" />
    <method type="UnitConverter" name="inverse" startLine="70" endLine="73" />
    <method type="double" name="convert" startLine="76" endLine="78" />
    <method type="boolean" name="isLinear" startLine="81" endLine="83" />
    <method type="UnitConverter" name="concatenate" startLine="86" endLine="104">
      <scope startLine="87" endLine="99">
        <declaration type="RationalConverter" name="that" />
        <declaration type="long" name="dividendLong" />
        <declaration type="long" name="divisorLong" />
        <declaration type="double" name="dividendDouble" />
        <declaration type="double" name="divisorDouble" />
        <scope startLine="94" endLine="96" />
        <declaration type="long" name="gcd" />
        <comment>Long overflows.</comment>
      </scope>
      <scope startLine="99" endLine="101" />
      <scope startLine="101" endLine="103" />
    </method>
    <method type="UnitConverter" name="valueOf" startLine="106" endLine="109" />
    <javadoc>
      <text>* Returns the greatest common divisor (Euclid's algorithm).</text>
      <param>m the first number.</param>
      <param>nn the second number.</param>
      <return>the greatest common divisor.</return>
    </javadoc>
    <method type="long" name="gcd" startLine="118" endLine="124">
      <scope startLine="119" endLine="121" />
      <scope startLine="121" endLine="123" />
    </method>
    <declaration type="long" name="serialVersionUID" />
  </class>
</source>
