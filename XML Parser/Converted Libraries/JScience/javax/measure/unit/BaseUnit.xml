<?xml version="1.0" encoding="UTF-8"?>
<source package="javax.measure.unit">
  <import name="javax.measure.converter.UnitConverter" />
  <import name="javax.measure.quantity.Quantity" />
  <class name="BaseUnit" extends="Unit<Q>" startLine="14">
    <javadoc>
      <text>* <p> This class represents the building blocks on top of which all others
 * units are created. Base units are typically dimensionally independent.
 * The actual unit dimension is determinated by the current {@link Dimension.Model model}. For example using the {@link Dimension.Model#STANDARD standard} model, {@link SI#CANDELA} 
 * has the dimension of {@link SI#WATT watt}:[code]
 * // Standard model.
 * BaseUnit<Length> METER = new BaseUnit<Length>("m");
 * BaseUnit<LuminousIntensity> CANDELA = new BaseUnit<LuminousIntensity>("cd");
 * System.out.println(METER.getDimension());
 * System.out.println(CANDELA.getDimension());
 * > [L]
 * > [L]²·[M]/[T]³
 * [/code]</p>
 * <p> This class represents the "standard base units" which includes SI base 
 * units and possibly others user-defined base units. It does not represent 
 * the base units of any specific {@link SystemOfUnits} (they would have 
 * be base units accross all possible systems otherwise).</p></text>
      <author><a href="mailto:jean-marie@dautelle.com">Jean-Marie Dautelle</a></author>
      <version>3.1, April 22, 2006</version>
      <see><a href="http://en.wikipedia.org/wiki/SI_base_unit">
 *       Wikipedia: SI base unit</a></see>
    </javadoc>
    <javadoc>
      <text>* Holds the symbol.</text>
    </javadoc>
    <declaration type="String" name="_symbol" />
    <javadoc>
      <text>* Creates a base unit having the specified symbol.</text>
      <param>symbol the symbol of this base unit.</param>
      <throws>IllegalArgumentException if the specified symbol is 
 * associated to a different unit.</throws>
    </javadoc>
    <method type="constructor" name="BaseUnit" startLine="54" endLine="67">
      <scope startLine="57" endLine="66">
        <declaration type="Unit<?>" name="unit" />
        <scope startLine="59" endLine="62" />
      </scope>
      <comment>Checks if the symbol is associated to a different unit.</comment>
    </method>
    <javadoc>
      <text>* Returns the unique symbol for this base unit.</text>
      <return>this base unit symbol.</return>
    </javadoc>
    <method type="String" name="getSymbol" startLine="74" endLine="76" />
    <javadoc>
      <text>* Indicates if this base unit is considered equals to the specified 
 * object (both are base units with equal symbol, standard dimension and 
 * standard transform).</text>
      <param>that the object to compare for equality.</param>
      <return><code>true</code> if <code>this</code> and <code>that</code>
 * are considered equals; <code>false</code>otherwise.</return>
    </javadoc>
    <method type="boolean" name="equals" startLine="87" endLine="94">
      <declaration type="BaseUnit<?>" name="thatUnit" />
    </method>
    <method type="int" name="hashCode" startLine="97" endLine="99" />
    <method type="Unit<? super Q>" name="getStandardUnit" startLine="102" endLine="104" />
    <method type="UnitConverter" name="toStandardUnit" startLine="107" endLine="109" />
    <declaration type="long" name="serialVersionUID" />
  </class>
</source>
