<?xml version="1.0" encoding="UTF-8"?>
<class name="HarmonicFitterTest">
  <method type="void" name="testPreconditions1">
    <declaration type="HarmonicFitter" name="fitter" />
  </method>
  <method type="void" name="testNoError">
    <declaration type="double" name="a" />
    <declaration type="double" name="w" />
    <declaration type="double" name="p" />
    <declaration type="HarmonicOscillator" name="f" />
    <declaration type="HarmonicFitter" name="fitter" />
    <scope />
    <declaration type="double[]" name="fitted" />
    <declaration type="HarmonicOscillator" name="ff" />
    <scope />
  </method>
  <method type="void" name="test1PercentError">
    <declaration type="Random" name="randomizer" />
    <declaration type="double" name="a" />
    <declaration type="double" name="w" />
    <declaration type="double" name="p" />
    <declaration type="HarmonicOscillator" name="f" />
    <declaration type="HarmonicFitter" name="fitter" />
    <scope />
    <declaration type="double[]" name="fitted" />
  </method>
  <method type="void" name="testTinyVariationsData">
    <declaration type="Random" name="randomizer" />
    <declaration type="HarmonicFitter" name="fitter" />
    <scope />
    <comment>This test serves to cover the part of the code of "guessAOmega"</comment>
    <comment>when the algorithm using integrals fails.</comment>
  </method>
  <method type="void" name="testInitialGuess">
    <declaration type="Random" name="randomizer" />
    <declaration type="double" name="a" />
    <declaration type="double" name="w" />
    <declaration type="double" name="p" />
    <declaration type="HarmonicOscillator" name="f" />
    <declaration type="HarmonicFitter" name="fitter" />
    <scope />
    <declaration type="double[][]" name="fitted" />
  </method>
  <method type="void" name="testUnsorted">
    <declaration type="Random" name="randomizer" />
    <declaration type="double" name="a" />
    <declaration type="double" name="w" />
    <declaration type="double" name="p" />
    <declaration type="HarmonicOscillator" name="f" />
    <declaration type="HarmonicFitter" name="fitter" />
    <declaration type="int" name="size" />
    <declaration type="double[]" name="xTab" />
    <declaration type="double[]" name="yTab" />
    <scope />
    <scope>
      <declaration type="int" name="i1" />
      <declaration type="int" name="i2" />
      <declaration type="double" name="xTmp" />
      <declaration type="double" name="yTmp" />
    </scope>
    <scope />
    <declaration type="double[]" name="fitted" />
    <comment>build a regularly spaced array of measurements</comment>
    <comment>shake it</comment>
    <comment>pass it to the fitter</comment>
  </method>
  <method type="void" name="testMath844">
    <declaration type="double[]" name="y" />
    <declaration type="int" name="len" />
    <declaration type="WeightedObservedPoint[]" name="points" />
    <scope />
    <declaration type="HarmonicFitter.ParameterGuesser" name="guesser" />
    <comment>The guesser fails because the function is far from an harmonic</comment>
    <comment>function: It is a triangular periodic function with amplitude 3</comment>
    <comment>and period 12, and all sample points are taken at integer abscissae</comment>
    <comment>so function values all belong to the integer subset {-3, -2, -1, 0,</comment>
    <comment>1, 2, 3}.</comment>
  </method>
  <comment>Licensed to the Apache Software Foundation (ASF) under one</comment>
  <comment>or more contributor license agreements.  See the NOTICE file</comment>
  <comment>distributed with this work for additional information</comment>
  <comment>regarding copyright ownership.  The ASF licenses this file</comment>
  <comment>to you under the Apache License, Version 2.0 (the</comment>
  <comment>"License"); you may not use this file except in compliance</comment>
  <comment>with the License.  You may obtain a copy of the License at</comment>
  <comment />
  <comment>http:www.apache.org/licenses/LICENSE-2.0</comment>
  <comment />
  <comment>Unless required by applicable law or agreed to in writing,</comment>
  <comment>software distributed under the License is distributed on an</comment>
  <comment>"AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY</comment>
  <comment>KIND, either express or implied.  See the License for the</comment>
  <comment>specific language governing permissions and limitations</comment>
  <comment>under the License.</comment>
  <comment>This test fails (throwing "ConvergenceException" instead).</comment>
  <comment>@Test(expected=ZeroException.class)</comment>
  <comment>public void testPreconditions2() {</comment>
  <comment>HarmonicFitter fitter =</comment>
  <comment>new HarmonicFitter(new LevenbergMarquardtOptimizer());</comment>
  <comment>final double x = 1.2;</comment>
  <comment>fitter.addObservedPoint(1, x, 1);</comment>
  <comment>fitter.addObservedPoint(1, x, -1);</comment>
  <comment>fitter.addObservedPoint(1, x, 0.5);</comment>
  <comment>fitter.addObservedPoint(1, x, 0);</comment>
  <comment>final double[] fitted = fitter.fit();</comment>
  <comment>}</comment>
</class>
