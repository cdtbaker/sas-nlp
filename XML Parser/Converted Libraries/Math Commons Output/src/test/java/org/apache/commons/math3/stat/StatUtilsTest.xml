<?xml version="1.0" encoding="UTF-8"?>
<class name="StatUtilsTest">
  <javadoc>
    <text>Test cases for the {@link StatUtils} class.</text>
    <version>$Id: StatUtilsTest.java 1364030 2012-07-21 01:10:04Z erans $</version>
  </javadoc>
  <declaration type="double" name="one" />
  <declaration type="float" name="two" />
  <declaration type="int" name="three" />
  <declaration type="double" name="mean" />
  <declaration type="double" name="sumSq" />
  <declaration type="double" name="sum" />
  <declaration type="double" name="var" />
  <declaration type="double" name="min" />
  <declaration type="double" name="max" />
  <declaration type="double" name="tolerance" />
  <declaration type="double" name="nan" />
  <javadoc>
    <text>test stats</text>
  </javadoc>
  <method type="void" name="testStats">
    <declaration type="double[][]" name="values" />
  </method>
  <method type="void" name="testN0andN1Conditions">
    <declaration type="double[]" name="values" />
  </method>
  <method type="void" name="testArrayIndexConditions">
    <declaration type="double[]" name="values" />
    <scope />
    <scope />
    <scope />
    <scope />
    <comment>expected</comment>
    <comment>expected</comment>
  </method>
  <method type="void" name="testSumSq">
    <declaration type="double[]" name="x" />
    <scope />
    <scope />
    <scope />
    <scope />
    <comment>test null</comment>
    <comment>success</comment>
    <comment>success</comment>
    <comment>test empty</comment>
    <comment>test one</comment>
    <comment>test many</comment>
  </method>
  <method type="void" name="testProduct">
    <declaration type="double[]" name="x" />
    <scope />
    <scope />
    <scope />
    <scope />
    <comment>test null</comment>
    <comment>success</comment>
    <comment>success</comment>
    <comment>test empty</comment>
    <comment>test one</comment>
    <comment>test many</comment>
  </method>
  <method type="void" name="testSumLog">
    <declaration type="double[]" name="x" />
    <scope />
    <scope />
    <scope />
    <scope />
    <comment>test null</comment>
    <comment>success</comment>
    <comment>success</comment>
    <comment>test empty</comment>
    <comment>test one</comment>
    <comment>test many</comment>
  </method>
  <method type="void" name="testMean">
    <declaration type="double[]" name="x" />
    <scope />
    <scope />
    <comment>success</comment>
    <comment>test empty</comment>
    <comment>test one</comment>
    <comment>test many</comment>
  </method>
  <method type="void" name="testVariance">
    <declaration type="double[]" name="x" />
    <scope />
    <scope />
    <comment>success</comment>
    <comment>test empty</comment>
    <comment>test one</comment>
    <comment>test many</comment>
    <comment>test precomputed mean</comment>
  </method>
  <method type="void" name="testPopulationVariance">
    <declaration type="double[]" name="x" />
    <scope />
    <scope />
    <comment>success</comment>
    <comment>test empty</comment>
    <comment>test one</comment>
    <comment>test many</comment>
    <comment>test precomputed mean</comment>
  </method>
  <method type="void" name="testMax">
    <declaration type="double[]" name="x" />
    <scope />
    <scope />
    <comment>success</comment>
    <comment>test empty</comment>
    <comment>test one</comment>
    <comment>test many</comment>
    <comment>test first nan is ignored</comment>
    <comment>test middle nan is ignored</comment>
    <comment>test last nan is ignored</comment>
    <comment>test all nan returns nan</comment>
  </method>
  <method type="void" name="testMin">
    <declaration type="double[]" name="x" />
    <scope />
    <scope />
    <comment>success</comment>
    <comment>test empty</comment>
    <comment>test one</comment>
    <comment>test many</comment>
    <comment>test first nan is ignored</comment>
    <comment>test middle nan is ignored</comment>
    <comment>test last nan is ignored</comment>
    <comment>test all nan returns nan</comment>
  </method>
  <method type="void" name="testPercentile">
    <declaration type="double[]" name="x" />
    <scope />
    <scope />
    <scope />
    <scope />
    <comment>test null</comment>
    <comment>success</comment>
    <comment>success</comment>
    <comment>test empty</comment>
    <comment>test one</comment>
    <comment>test many</comment>
  </method>
  <method type="void" name="testDifferenceStats">
    <declaration type="double[]" name="sample1" />
    <declaration type="double[]" name="sample2" />
    <declaration type="double[]" name="diff" />
    <declaration type="double[]" name="small" />
    <declaration type="double" name="meanDifference" />
    <scope />
    <scope />
    <scope />
    <scope />
    <scope>
      <declaration type="double[]" name="single" />
    </scope>
    <scope />
    <comment>expected</comment>
    <comment>expected</comment>
    <comment>expected</comment>
  </method>
  <method type="void" name="testGeometricMean">
    <declaration type="double[]" name="test" />
    <scope />
    <scope />
    <comment>expected</comment>
  </method>
  <javadoc>
    <text>Run the test with the values 50 and 100 and assume standardized values</text>
  </javadoc>
  <method type="void" name="testNormalize1">
    <declaration type="double[]" name="sample" />
    <declaration type="double[]" name="expectedSample" />
    <declaration type="double[]" name="out" />
    <scope />
  </method>
  <javadoc>
    <text>Run with 77 random values, assuming that the outcome has a mean of 0 and a standard deviation of 1 with a
 * precision of 1E-10.</text>
  </javadoc>
  <method type="void" name="testNormalize2">
    <declaration type="int" name="length" />
    <declaration type="double[]" name="sample" />
    <scope />
    <declaration type="double[]" name="standardizedSample" />
    <declaration type="DescriptiveStatistics" name="stats" />
    <scope />
    <declaration type="double" name="distance" />
    <comment>create an sample with 77 values</comment>
    <comment>normalize this sample</comment>
    <comment>Add the data from the array</comment>
    <comment>the calculations do have a limited precision</comment>
    <comment>check the mean an standard deviation</comment>
  </method>
  <comment>Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the "License"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

      http:www.apache.orglicensesLICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.</comment>
</class>
