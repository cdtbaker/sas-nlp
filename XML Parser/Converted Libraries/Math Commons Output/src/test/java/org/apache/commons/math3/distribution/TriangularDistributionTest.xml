<?xml version="1.0" encoding="UTF-8"?>
<class name="TriangularDistributionTest">
  <javadoc>
    <text>Test cases for {@link TriangularDistribution}. See class javadoc for{@link RealDistributionAbstractTest} for further details.</text>
  </javadoc>
  <method type="void" name="setUp" />
  <javadoc>
    <text>Creates the default triangular distribution instance to use in tests.</text>
  </javadoc>
  <method type="TriangularDistribution" name="makeDistribution">
    <comment>Left side 5 wide, right side 10 wide.</comment>
  </method>
  <javadoc>
    <text>Creates the default cumulative probability distribution test input
 * values.</text>
  </javadoc>
  <method type="double[]" name="makeCumulativeTestPoints">
    <comment>below lower limit</comment>
    <comment>at lower limit</comment>
    <comment>on lower side</comment>
    <comment>at mode</comment>
    <comment>on upper side</comment>
    <comment>at upper limit</comment>
    <comment>above upper limit</comment>
  </method>
  <javadoc>
    <text>Creates the default cumulative probability density test expected values.</text>
  </javadoc>
  <method type="double[]" name="makeCumulativeTestValues">
    <declaration type="double" name="third" />
    <declaration type="double" name="left" />
    <declaration type="double" name="area" />
    <comment>Top at 2 / (b - a) = 2 / (12 - -3) = 2 / 15 = 7.5</comment>
    <comment>Area left  = 7.5 * 5  * 0.5 = 18.75 (1/3 of the total area)</comment>
    <comment>Area right = 7.5 * 10 * 0.5 = 37.5  (2/3 of the total area)</comment>
    <comment>Area total = 18.75 + 37.5 = 56.25</comment>
    <comment>Derivative left side = 7.5 / 5 = 1.5</comment>
    <comment>Derivative right side = -7.5 / 10 = -0.75</comment>
  </method>
  <javadoc>
    <text>Creates the default inverse cumulative probability distribution test
 * input values.</text>
  </javadoc>
  <method type="double[]" name="makeInverseCumulativeTestPoints">
    <declaration type="double[]" name="points" />
    <declaration type="double[]" name="points2" />
    <comment>Exclude the points outside the limits, as they have cumulative</comment>
    <comment>probability of zero and one, meaning the inverse returns the</comment>
    <comment>limits and not the points outside the limits.</comment>
    <comment>return Arrays.copyOfRange(points, 1, points.length - 1);</comment>
  </method>
  <javadoc>
    <text>Creates the default inverse cumulative probability density test expected
 * values.</text>
  </javadoc>
  <method type="double[]" name="makeInverseCumulativeTestValues">
    <declaration type="double[]" name="points" />
    <declaration type="double[]" name="points2" />
    <comment>Exclude the points outside the limits, as they have cumulative</comment>
    <comment>probability of zero and one, meaning the inverse returns the</comment>
    <comment>limits and not the points outside the limits.</comment>
    <comment>return Arrays.copyOfRange(points, 1, points.length - 1);</comment>
  </method>
  <javadoc>
    <text>Creates the default probability density test expected values.</text>
  </javadoc>
  <method type="double[]" name="makeDensityTestValues" />
  <javadoc>
    <text>Test lower bound getter.</text>
  </javadoc>
  <method type="void" name="testGetLowerBound">
    <declaration type="TriangularDistribution" name="distribution" />
  </method>
  <javadoc>
    <text>Test upper bound getter.</text>
  </javadoc>
  <method type="void" name="testGetUpperBound">
    <declaration type="TriangularDistribution" name="distribution" />
  </method>
  <javadoc>
    <text>Test pre-condition for equal lower/upper limit.</text>
  </javadoc>
  <method type="void" name="testPreconditions1" />
  <javadoc>
    <text>Test pre-condition for lower limit larger than upper limit.</text>
  </javadoc>
  <method type="void" name="testPreconditions2" />
  <javadoc>
    <text>Test pre-condition for mode larger than upper limit.</text>
  </javadoc>
  <method type="void" name="testPreconditions3" />
  <javadoc>
    <text>Test pre-condition for mode smaller than lower limit.</text>
  </javadoc>
  <method type="void" name="testPreconditions4" />
  <javadoc>
    <text>Test mean/variance.</text>
  </javadoc>
  <method type="void" name="testMeanVariance">
    <declaration type="TriangularDistribution" name="dist" />
  </method>
  <comment>Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the "License"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

      http:www.apache.orglicensesLICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.</comment>
  <comment>--- Override tolerance -------------------------------------------------</comment>
  <comment>--- Implementations for abstract methods --------------------------------</comment>
  <comment>--- Additional test cases -----------------------------------------------</comment>
</class>
