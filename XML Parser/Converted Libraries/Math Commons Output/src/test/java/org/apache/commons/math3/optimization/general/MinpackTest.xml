<?xml version="1.0" encoding="UTF-8"?>
<class name="MinpackTest">
  <javadoc>
    <text>&lt;p&gt;Some of the unit tests are re-implementations of the MINPACK &lt;a
 * href="http://www.netlib.org/minpack/ex/file17"&gt;file17&lt;/a&gt; and &lt;a
 * href="http://www.netlib.org/minpack/ex/file22"&gt;file22&lt;/a&gt; test files.
 * The redistribution policy for MINPACK is available &lt;a
 * href="http://www.netlib.org/minpack/disclaimer"&gt;here&lt;/a&gt;, for
 * convenience, it is reproduced below.&lt;/p&gt;
 * &lt;table border="0" width="80%" cellpadding="10" align="center" bgcolor="#E0E0E0"&gt;
 * &lt;tr&gt;&lt;td&gt;
 * Minpack Copyright Notice (1999) University of Chicago.
 * All rights reserved
 * &lt;/td&gt;&lt;/tr&gt;
 * &lt;tr&gt;&lt;td&gt;
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * &lt;ol&gt;
 * &lt;li&gt;Redistributions of source code must retain the above copyright
 * notice, this list of conditions and the following disclaimer.&lt;/li&gt;
 * &lt;li&gt;Redistributions in binary form must reproduce the above
 * copyright notice, this list of conditions and the following
 * disclaimer in the documentation and/or other materials provided
 * with the distribution.&lt;/li&gt;
 * &lt;li&gt;The end-user documentation included with the redistribution, if any,
 * must include the following acknowledgment:
 * &lt;code&gt;This product includes software developed by the University of
 * Chicago, as Operator of Argonne National Laboratory.&lt;/code&gt;
 * Alternately, this acknowledgment may appear in the software itself,
 * if and wherever such third-party acknowledgments normally appear.&lt;/li&gt;
 * &lt;li&gt;&lt;strong&gt;WARRANTY DISCLAIMER. THE SOFTWARE IS SUPPLIED "AS IS"
 * WITHOUT WARRANTY OF ANY KIND. THE COPYRIGHT HOLDER, THE
 * UNITED STATES, THE UNITED STATES DEPARTMENT OF ENERGY, AND
 * THEIR EMPLOYEES: (1) DISCLAIM ANY WARRANTIES, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO ANY IMPLIED WARRANTIES
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, TITLE
 * OR NON-INFRINGEMENT, (2) DO NOT ASSUME ANY LEGAL LIABILITY
 * OR RESPONSIBILITY FOR THE ACCURACY, COMPLETENESS, OR
 * USEFULNESS OF THE SOFTWARE, (3) DO NOT REPRESENT THAT USE OF
 * THE SOFTWARE WOULD NOT INFRINGE PRIVATELY OWNED RIGHTS, (4)
 * DO NOT WARRANT THAT THE SOFTWARE WILL FUNCTION
 * UNINTERRUPTED, THAT IT IS ERROR-FREE OR THAT ANY ERRORS WILL
 * BE CORRECTED.&lt;/strong&gt;&lt;/li&gt;
 * &lt;li&gt;&lt;strong&gt;LIMITATION OF LIABILITY. IN NO EVENT WILL THE COPYRIGHT
 * HOLDER, THE UNITED STATES, THE UNITED STATES DEPARTMENT OF
 * ENERGY, OR THEIR EMPLOYEES: BE LIABLE FOR ANY INDIRECT,
 * INCIDENTAL, CONSEQUENTIAL, SPECIAL OR PUNITIVE DAMAGES OF
 * ANY KIND OR NATURE, INCLUDING BUT NOT LIMITED TO LOSS OF
 * PROFITS OR LOSS OF DATA, FOR ANY REASON WHATSOEVER, WHETHER
 * SUCH LIABILITY IS ASSERTED ON THE BASIS OF CONTRACT, TORT
 * (INCLUDING NEGLIGENCE OR STRICT LIABILITY), OR OTHERWISE,
 * EVEN IF ANY OF SAID PARTIES HAS BEEN WARNED OF THE
 * POSSIBILITY OF SUCH LOSS OR DAMAGES.&lt;/strong&gt;&lt;/li&gt;
 * &lt;ol&gt;&lt;/td&gt;&lt;/tr&gt;
 * &lt;/table&gt;</text>
    <author>Argonne National Laboratory. MINPACK project. March 1980 (original fortran minpack tests)</author>
    <author>Burton S. Garbow (original fortran minpack tests)</author>
    <author>Kenneth E. Hillstrom (original fortran minpack tests)</author>
    <author>Jorge J. More (original fortran minpack tests)</author>
    <author>Luc Maisonobe (non-minpack tests and minpack tests Java translation)</author>
  </javadoc>
  <method type="void" name="testMinpackLinearFullRank" />
  <method type="void" name="testMinpackLinearRank1" />
  <method type="void" name="testMinpackLinearRank1ZeroColsAndRows" />
  <method type="void" name="testMinpackRosenbrok" />
  <method type="void" name="testMinpackHelicalValley" />
  <method type="void" name="testMinpackPowellSingular" />
  <method type="void" name="testMinpackFreudensteinRoth" />
  <method type="void" name="testMinpackBard" />
  <method type="void" name="testMinpackKowalikOsborne" />
  <method type="void" name="testMinpackMeyer" />
  <method type="void" name="testMinpackWatson" />
  <method type="void" name="testMinpackBox3Dimensional" />
  <method type="void" name="testMinpackJennrichSampson">
    <comment>0.2578330049, 0.257829976764542</comment>
  </method>
  <method type="void" name="testMinpackBrownDennis" />
  <method type="void" name="testMinpackChebyquad" />
  <method type="void" name="testMinpackBrownAlmostLinear" />
  <method type="void" name="testMinpackOsborne1" />
  <method type="void" name="testMinpackOsborne2" />
  <method type="void" name="minpackTest">
    <declaration type="LevenbergMarquardtOptimizer" name="optimizer" />
    <scope>
      <declaration type="PointVectorValuePair" name="optimum" />
    </scope>
    <scope />
    <comment>Assert.assertTrue(function.checkTheoreticalStartCost(optimizer.getRMS()));</comment>
  </method>
  <declaration type="long" name="serialVersionUID" />
  <declaration type="int" name="n" />
  <declaration type="int" name="m" />
  <declaration type="double[]" name="startParams" />
  <declaration type="double" name="theoreticalMinCost" />
  <declaration type="double[]" name="theoreticalMinParams" />
  <declaration type="double" name="costAccuracy" />
  <declaration type="double" name="paramsAccuracy" />
  <method type="constructor" name="MinpackFunction" />
  <method type="double[]" name="buildArray">
    <declaration type="double[]" name="array" />
  </method>
  <method type="double[]" name="getTarget" />
  <method type="double[]" name="getWeight" />
  <method type="double[]" name="getStartPoint" />
  <method type="void" name="setCostAccuracy" />
  <method type="void" name="setParamsAccuracy" />
  <method type="int" name="getN" />
  <method type="void" name="checkTheoreticalMinCost">
    <declaration type="double" name="threshold" />
  </method>
  <method type="void" name="checkTheoreticalMinParams">
    <declaration type="double[]" name="params" />
    <scope>
      <scope>
        <declaration type="double" name="mi" />
        <declaration type="double" name="vi" />
      </scope>
    </scope>
  </method>
  <method type="double[]" name="value">
    <declaration type="DerivativeStructure[]" name="dsV" />
    <scope />
    <declaration type="DerivativeStructure[]" name="dsY" />
    <declaration type="double[]" name="y" />
    <scope />
  </method>
  <method name="value" type="DerivativeStructure[]" />
  <declaration type="long" name="serialVersionUID" />
  <method type="constructor" name="LinearFullRankFunction" />
  <method type="DerivativeStructure[]" name="value">
    <declaration type="DerivativeStructure" name="sum" />
    <scope />
    <declaration type="DerivativeStructure" name="t" />
    <declaration type="DerivativeStructure[]" name="f" />
    <scope />
  </method>
  <declaration type="long" name="serialVersionUID" />
  <method type="constructor" name="LinearRank1Function" />
  <method type="DerivativeStructure[]" name="value">
    <declaration type="DerivativeStructure[]" name="f" />
    <declaration type="DerivativeStructure" name="sum" />
    <scope />
    <scope />
  </method>
  <declaration type="long" name="serialVersionUID" />
  <method type="constructor" name="LinearRank1ZeroColsAndRowsFunction" />
  <method type="DerivativeStructure[]" name="value">
    <declaration type="DerivativeStructure[]" name="f" />
    <declaration type="DerivativeStructure" name="sum" />
    <scope />
    <scope />
  </method>
  <declaration type="long" name="serialVersionUID" />
  <method type="constructor" name="RosenbrockFunction" />
  <method type="DerivativeStructure[]" name="value">
    <declaration type="DerivativeStructure" name="x1" />
    <declaration type="DerivativeStructure" name="x2" />
  </method>
  <declaration type="long" name="serialVersionUID" />
  <method type="constructor" name="HelicalValleyFunction" />
  <method type="DerivativeStructure[]" name="value">
    <declaration type="DerivativeStructure" name="x1" />
    <declaration type="DerivativeStructure" name="x2" />
    <declaration type="DerivativeStructure" name="x3" />
    <declaration type="DerivativeStructure" name="tmp1" />
    <scope />
    <scope>
      <scope />
    </scope>
    <declaration type="DerivativeStructure" name="tmp2" />
  </method>
  <declaration type="double" name="twoPi" />
  <declaration type="long" name="serialVersionUID" />
  <method type="constructor" name="PowellSingularFunction" />
  <method type="DerivativeStructure[]" name="value">
    <declaration type="DerivativeStructure" name="x1" />
    <declaration type="DerivativeStructure" name="x2" />
    <declaration type="DerivativeStructure" name="x3" />
    <declaration type="DerivativeStructure" name="x4" />
  </method>
  <declaration type="double" name="sqrt5" />
  <declaration type="double" name="sqrt10" />
  <declaration type="long" name="serialVersionUID" />
  <method type="constructor" name="FreudensteinRothFunction" />
  <method type="DerivativeStructure[]" name="value">
    <declaration type="DerivativeStructure" name="x1" />
    <declaration type="DerivativeStructure" name="x2" />
  </method>
  <declaration type="long" name="serialVersionUID" />
  <method type="constructor" name="BardFunction" />
  <method type="DerivativeStructure[]" name="value">
    <declaration type="DerivativeStructure" name="x1" />
    <declaration type="DerivativeStructure" name="x2" />
    <declaration type="DerivativeStructure" name="x3" />
    <declaration type="DerivativeStructure[]" name="f" />
    <scope>
      <declaration type="double" name="tmp1" />
      <declaration type="double" name="tmp2" />
      <declaration type="double" name="tmp3" />
    </scope>
  </method>
  <declaration type="double[]" name="y" />
  <declaration type="long" name="serialVersionUID" />
  <method type="constructor" name="KowalikOsborneFunction">
    <scope />
  </method>
  <method type="DerivativeStructure[]" name="value">
    <declaration type="DerivativeStructure" name="x1" />
    <declaration type="DerivativeStructure" name="x2" />
    <declaration type="DerivativeStructure" name="x3" />
    <declaration type="DerivativeStructure" name="x4" />
    <declaration type="DerivativeStructure[]" name="f" />
    <scope />
  </method>
  <declaration type="double[]" name="v" />
  <declaration type="double[]" name="y" />
  <declaration type="long" name="serialVersionUID" />
  <method type="constructor" name="MeyerFunction">
    <scope />
  </method>
  <method type="DerivativeStructure[]" name="value">
    <declaration type="DerivativeStructure" name="x1" />
    <declaration type="DerivativeStructure" name="x2" />
    <declaration type="DerivativeStructure" name="x3" />
    <declaration type="DerivativeStructure[]" name="f" />
    <scope />
  </method>
  <declaration type="double[]" name="y" />
  <declaration type="long" name="serialVersionUID" />
  <method type="constructor" name="WatsonFunction" />
  <method type="DerivativeStructure[]" name="value">
    <declaration type="DerivativeStructure[]" name="f" />
    <scope>
      <declaration type="double" name="div" />
      <declaration type="DerivativeStructure" name="s1" />
      <declaration type="DerivativeStructure" name="dx" />
      <scope />
      <declaration type="DerivativeStructure" name="s2" />
      <scope />
    </scope>
    <declaration type="DerivativeStructure" name="x1" />
    <declaration type="DerivativeStructure" name="x2" />
  </method>
  <declaration type="long" name="serialVersionUID" />
  <method type="constructor" name="Box3DimensionalFunction" />
  <method type="DerivativeStructure[]" name="value">
    <declaration type="DerivativeStructure" name="x1" />
    <declaration type="DerivativeStructure" name="x2" />
    <declaration type="DerivativeStructure" name="x3" />
    <declaration type="DerivativeStructure[]" name="f" />
    <scope>
      <declaration type="double" name="tmp" />
    </scope>
  </method>
  <declaration type="long" name="serialVersionUID" />
  <method type="constructor" name="JennrichSampsonFunction" />
  <method type="DerivativeStructure[]" name="value">
    <declaration type="DerivativeStructure" name="x1" />
    <declaration type="DerivativeStructure" name="x2" />
    <declaration type="DerivativeStructure[]" name="f" />
    <scope>
      <declaration type="double" name="temp" />
    </scope>
  </method>
  <declaration type="long" name="serialVersionUID" />
  <method type="constructor" name="BrownDennisFunction" />
  <method type="DerivativeStructure[]" name="value">
    <declaration type="DerivativeStructure" name="x1" />
    <declaration type="DerivativeStructure" name="x2" />
    <declaration type="DerivativeStructure" name="x3" />
    <declaration type="DerivativeStructure" name="x4" />
    <declaration type="DerivativeStructure[]" name="f" />
    <scope>
      <declaration type="double" name="temp" />
      <declaration type="DerivativeStructure" name="tmp1" />
      <declaration type="DerivativeStructure" name="tmp2" />
    </scope>
  </method>
  <declaration type="long" name="serialVersionUID" />
  <method type="double[]" name="buildChebyquadArray">
    <declaration type="double[]" name="array" />
    <declaration type="double" name="inv" />
    <scope />
  </method>
  <method type="constructor" name="ChebyquadFunction" />
  <method type="DerivativeStructure[]" name="value">
    <declaration type="DerivativeStructure[]" name="f" />
    <scope>
      <declaration type="DerivativeStructure" name="tmp1" />
      <declaration type="DerivativeStructure" name="tmp2" />
      <declaration type="DerivativeStructure" name="temp" />
      <scope>
        <declaration type="DerivativeStructure" name="ti" />
      </scope>
    </scope>
    <declaration type="double" name="dx" />
    <declaration type="boolean" name="iev" />
    <scope>
      <scope />
    </scope>
  </method>
  <declaration type="long" name="serialVersionUID" />
  <method type="constructor" name="BrownAlmostLinearFunction" />
  <method type="DerivativeStructure[]" name="value">
    <declaration type="DerivativeStructure[]" name="f" />
    <declaration type="DerivativeStructure" name="sum" />
    <declaration type="DerivativeStructure" name="prod" />
    <scope />
    <scope />
  </method>
  <declaration type="long" name="serialVersionUID" />
  <method type="constructor" name="Osborne1Function" />
  <method type="DerivativeStructure[]" name="value">
    <declaration type="DerivativeStructure" name="x1" />
    <declaration type="DerivativeStructure" name="x2" />
    <declaration type="DerivativeStructure" name="x3" />
    <declaration type="DerivativeStructure" name="x4" />
    <declaration type="DerivativeStructure" name="x5" />
    <declaration type="DerivativeStructure[]" name="f" />
    <scope>
      <declaration type="double" name="temp" />
      <declaration type="DerivativeStructure" name="tmp1" />
      <declaration type="DerivativeStructure" name="tmp2" />
    </scope>
  </method>
  <declaration type="double[]" name="y" />
  <declaration type="long" name="serialVersionUID" />
  <method type="constructor" name="Osborne2Function" />
  <method type="DerivativeStructure[]" name="value">
    <declaration type="DerivativeStructure" name="x01" />
    <declaration type="DerivativeStructure" name="x02" />
    <declaration type="DerivativeStructure" name="x03" />
    <declaration type="DerivativeStructure" name="x04" />
    <declaration type="DerivativeStructure" name="x05" />
    <declaration type="DerivativeStructure" name="x06" />
    <declaration type="DerivativeStructure" name="x07" />
    <declaration type="DerivativeStructure" name="x08" />
    <declaration type="DerivativeStructure" name="x09" />
    <declaration type="DerivativeStructure" name="x10" />
    <declaration type="DerivativeStructure" name="x11" />
    <declaration type="DerivativeStructure[]" name="f" />
    <scope>
      <declaration type="double" name="temp" />
      <declaration type="DerivativeStructure" name="tmp1" />
      <declaration type="DerivativeStructure" name="tmp2" />
      <declaration type="DerivativeStructure" name="tmp3" />
      <declaration type="DerivativeStructure" name="tmp4" />
    </scope>
  </method>
  <declaration type="double[]" name="y" />
  <comment>Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the "License"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

      http:www.apache.orglicensesLICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.</comment>
</class>
