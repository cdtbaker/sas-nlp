<?xml version="1.0" encoding="UTF-8"?>
<class name="ResizableDoubleArrayTest">
  <javadoc>
    <text>This class contains test cases for the ResizableDoubleArray.</text>
    <version>$Id: ResizableDoubleArrayTest.java 1410121 2012-11-16 00:18:30Z erans $</version>
  </javadoc>
  <method type="void" name="tearDown" />
  <method type="void" name="setUp" />
  <method type="void" name="testConstructors">
    <declaration type="float" name="defaultExpansionFactor" />
    <declaration type="float" name="defaultContractionCriteria" />
    <declaration type="int" name="defaultMode" />
    <declaration type="ResizableDoubleArray" name="testDa" />
    <scope />
    <scope />
    <declaration type="double[][]" name="initialArray" />
    <scope />
    <scope />
    <scope />
    <scope />
    <scope />
    <scope />
    <declaration type="ResizableDoubleArray" name="copyDa" />
    <comment>expected</comment>
    <comment>expected</comment>
    <comment>expected</comment>
    <comment>expected</comment>
    <comment>Copy constructor</comment>
  </method>
  <method type="void" name="testSetElementArbitraryExpansion1">
    <comment>MULTIPLICATIVE_MODE</comment>
    <comment>Expand the array arbitrarily to 1000 items</comment>
  </method>
  <method type="void" name="testSetElementArbitraryExpansion2">
    <scope />
    <scope />
    <declaration type="ResizableDoubleArray" name="testDa" />
    <comment>Make sure numElements and expansion work correctly for expansion boundary cases</comment>
    <comment>expected</comment>
    <comment>ADDITIVE_MODE</comment>
  </method>
  <method type="void" name="testAdd1000" />
  <method type="void" name="testAddElements">
    <declaration type="ResizableDoubleArray" name="testDa" />
    <comment>MULTIPLICATIVE_MODE</comment>
    <comment>ADDITIVE_MODE  (x's are occupied storage locations, 0's are open)</comment>
    <comment>x,0</comment>
    <comment>x,x</comment>
    <comment>x,x,x,0 -- expanded</comment>
    <comment>x,x,x,0</comment>
  </method>
  <method type="void" name="testAddElementRolling">
    <declaration type="ResizableDoubleArray" name="testDa" />
    <scope />
    <scope />
    <scope />
    <scope />
    <comment>MULTIPLICATIVE_MODE</comment>
    <comment>ADDITIVE_MODE  (x's are occupied storage locations, 0's are open)</comment>
    <comment>x,0</comment>
    <comment>x,x</comment>
    <comment>x,x,x,0 -- expanded</comment>
    <comment>x,x,x,0</comment>
    <comment>0,x,x,x</comment>
    <comment>0,0,x,x,x,0 -- time to contract</comment>
    <comment>contracted -- x,x,x,0</comment>
    <comment>expected</comment>
    <comment>expected</comment>
  </method>
  <method type="void" name="testSetNumberOfElements">
    <scope />
    <scope />
  </method>
  <method type="void" name="testWithInitialCapacity">
    <declaration type="ResizableDoubleArray" name="eDA2" />
    <declaration type="IntegerDistribution" name="randomData" />
    <declaration type="int" name="iterations" />
    <scope />
  </method>
  <method type="void" name="testWithInitialCapacityAndExpansionFactor">
    <declaration type="ResizableDoubleArray" name="eDA3" />
    <declaration type="IntegerDistribution" name="randomData" />
    <declaration type="int" name="iterations" />
    <scope />
  </method>
  <method type="void" name="testDiscard">
    <scope />
    <scope />
    <scope />
    <scope />
    <scope />
    <scope />
    <scope />
    <scope />
  </method>
  <method type="void" name="testSubstitute">
    <scope />
    <scope />
  </method>
  <method type="void" name="testMutators">
    <scope />
    <scope />
    <scope />
    <scope />
    <comment>greater than contractionCriteria</comment>
    <comment>expected</comment>
    <comment>expected</comment>
  </method>
  <method type="void" name="testEqualsAndHashCode">
    <declaration type="ResizableDoubleArray" name="first" />
    <declaration type="Double" name="other" />
    <declaration type="ResizableDoubleArray" name="second" />
    <declaration type="ResizableDoubleArray" name="third" />
    <declaration type="ResizableDoubleArray" name="fourth" />
    <declaration type="ResizableDoubleArray" name="fifth" />
    <comment>Wrong type</comment>
    <comment>Null</comment>
    <comment>Reflexive</comment>
    <comment>Argumentless constructor</comment>
    <comment>Equals iff same data, same properties</comment>
    <comment>expand</comment>
    <comment>discard</comment>
    <comment>discard recent</comment>
    <comment>wrong order</comment>
    <comment>copy</comment>
    <comment>Copy constructor</comment>
    <comment>Instance copy</comment>
  </method>
  <method type="void" name="testGetArrayRef">
    <declaration type="ResizableDoubleArray" name="a" />
    <declaration type="int" name="index" />
    <declaration type="double" name="v1" />
    <declaration type="double" name="v2" />
    <declaration type="double[]" name="aInternalArray" />
    <comment>Modify "a" through the public API.</comment>
    <comment>Modify the internal storage through the protected API.</comment>
  </method>
  <method type="void" name="testCompute">
    <declaration type="ResizableDoubleArray" name="a" />
    <declaration type="int" name="max" />
    <scope />
    <declaration type="MathArrays.Function[]" name="add" />
    <method type="double" name="evaluate">
      <declaration type="double" name="sum" />
      <declaration type="int" name="max" />
      <scope />
    </method>
    <method type="double" name="evaluate" />
    <declaration type="double" name="sum" />
  </method>
  <method type="void" name="verifyEquality" />
  <method type="void" name="verifyInequality" />
  <comment>Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the "License"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

      http:www.apache.orglicensesLICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.</comment>
</class>
