<?xml version="1.0" encoding="UTF-8"?>
<class name="RRQRDecompositionTest">
  <declaration type="double[][]" name="testData3x3NonSingular" />
  <declaration type="double[][]" name="testData3x3Singular" />
  <declaration type="double[][]" name="testData3x4" />
  <declaration type="double[][]" name="testData4x3" />
  <declaration type="double" name="entryTolerance" />
  <declaration type="double" name="normTolerance" />
  <javadoc>
    <text>test dimensions</text>
  </javadoc>
  <method type="void" name="testDimensions">
    <declaration type="Random" name="r" />
    <declaration type="int" name="p" />
    <declaration type="int" name="q" />
  </method>
  <method type="void" name="checkDimension">
    <declaration type="int" name="rows" />
    <declaration type="int" name="columns" />
    <declaration type="RRQRDecomposition" name="qr" />
  </method>
  <javadoc>
    <text>test AP = QR</text>
  </javadoc>
  <method type="void" name="testAPEqualQR">
    <declaration type="Random" name="r" />
    <declaration type="int" name="p" />
    <declaration type="int" name="q" />
  </method>
  <method type="void" name="checkAPEqualQR">
    <declaration type="RRQRDecomposition" name="rrqr" />
    <declaration type="double" name="norm" />
  </method>
  <javadoc>
    <text>test the orthogonality of Q</text>
  </javadoc>
  <method type="void" name="testQOrthogonal">
    <declaration type="Random" name="r" />
    <declaration type="int" name="p" />
    <declaration type="int" name="q" />
  </method>
  <method type="void" name="checkQOrthogonal">
    <declaration type="RRQRDecomposition" name="qr" />
    <declaration type="RealMatrix" name="eye" />
    <declaration type="double" name="norm" />
  </method>
  <javadoc>
    <text>test that R is upper triangular</text>
  </javadoc>
  <method type="void" name="testRUpperTriangular">
    <declaration type="RealMatrix" name="matrix" />
    <declaration type="Random" name="r" />
    <declaration type="int" name="p" />
    <declaration type="int" name="q" />
  </method>
  <method type="void" name="checkUpperTriangular">
    <method type="void" name="visit">
      <scope />
    </method>
  </method>
  <javadoc>
    <text>test that H is trapezoidal</text>
  </javadoc>
  <method type="void" name="testHTrapezoidal">
    <declaration type="RealMatrix" name="matrix" />
    <declaration type="Random" name="r" />
    <declaration type="int" name="p" />
    <declaration type="int" name="q" />
  </method>
  <method type="void" name="checkTrapezoidal">
    <method type="void" name="visit">
      <scope />
    </method>
  </method>
  <method type="void" name="testNonInvertible">
    <declaration type="RRQRDecomposition" name="qr" />
  </method>
  <method type="RealMatrix" name="createTestMatrix">
    <declaration type="RealMatrix" name="m" />
    <method type="double" name="visit" />
  </method>
  <javadoc>
    <text>test the rank is returned correctly</text>
  </javadoc>
  <method type="void" name="testRank">
    <declaration type="double[][]" name="d" />
    <declaration type="RealMatrix" name="m" />
    <declaration type="RRQRDecomposition" name="qr" />
  </method>
  <comment>Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the "License"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

      http:www.apache.orglicensesLICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.</comment>
</class>
