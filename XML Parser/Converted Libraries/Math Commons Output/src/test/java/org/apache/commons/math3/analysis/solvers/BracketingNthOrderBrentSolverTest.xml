<?xml version="1.0" encoding="UTF-8"?>
<class name="BracketingNthOrderBrentSolverTest">
  <javadoc>
    <text>Test case for {@link BracketingNthOrderBrentSolver bracketing n&lt;sup&gt;th&lt;/sup&gt; order Brent} solver.</text>
    <version>$Id: BracketingNthOrderBrentSolverTest.java 1383441 2012-09-11 14:56:39Z luc $</version>
  </javadoc>
  <javadoc>
    <text>{@inheritDoc}</text>
  </javadoc>
  <method type="UnivariateSolver" name="getSolver" />
  <javadoc>
    <text>{@inheritDoc}</text>
  </javadoc>
  <method type="int[]" name="getQuinticEvalCounts" />
  <method type="void" name="testInsufficientOrder1" />
  <method type="void" name="testInsufficientOrder2" />
  <method type="void" name="testInsufficientOrder3" />
  <method type="void" name="testConstructorsOK" />
  <method type="void" name="testConvergenceOnFunctionAccuracy">
    <declaration type="BracketingNthOrderBrentSolver" name="solver" />
    <declaration type="QuinticFunction" name="f" />
    <declaration type="double" name="result" />
  </method>
  <method type="void" name="testIssue716">
    <declaration type="BracketingNthOrderBrentSolver" name="solver" />
    <declaration type="UnivariateFunction" name="sharpTurn" />
    <method type="double" name="value" />
    <declaration type="double" name="result" />
  </method>
  <method type="void" name="testFasterThanNewton">
    <method type="DerivativeStructure" name="value" />
    <method type="DerivativeStructure" name="value" />
    <method type="DerivativeStructure" name="value" />
    <method type="DerivativeStructure" name="value" />
    <method type="DerivativeStructure" name="value" />
    <method type="DerivativeStructure" name="value" />
    <comment>the following test functions come from Beny Neta's paper:</comment>
    <comment>"Several New Methods for solving Equations"</comment>
    <comment>intern J. Computer Math Vol 23 pp 265-282</comment>
    <comment>available here: http:www.math.nps.navy.mil/~bneta/SeveralNewMethods.PDF</comment>
    <comment>the reference roots have been computed by the Dfp solver to more than</comment>
    <comment>80 digits and checked with emacs (only the first 20 digits are reproduced here)</comment>
  </method>
  <method type="void" name="compare" />
  <method type="void" name="compare">
    <declaration type="NewtonRaphsonSolver" name="newton" />
    <declaration type="BracketingNthOrderBrentSolver" name="bracketing" />
    <declaration type="double" name="resultN" />
    <scope />
    <scope />
    <declaration type="double" name="resultB" />
    <scope />
    <scope />
    <declaration type="int" name="weightedBracketingEvaluations" />
    <declaration type="int" name="weightedNewtonEvaluations" />
    <comment>bracketing solver evaluates only function value, we set the weight to 1</comment>
    <comment>Newton-Raphson solver evaluates both function value and derivative, we set the weight to 2</comment>
  </method>
  <declaration type="double" name="root" />
  <declaration type="double" name="min" />
  <declaration type="double" name="max" />
  <method type="constructor" name="TestFunction" />
  <method type="double" name="getRoot" />
  <method type="double" name="getMin" />
  <method type="double" name="getMax" />
  <method type="double" name="value" />
  <method name="value" type="DerivativeStructure" />
  <comment>Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the "License"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

      http:www.apache.orglicensesLICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.</comment>
</class>
