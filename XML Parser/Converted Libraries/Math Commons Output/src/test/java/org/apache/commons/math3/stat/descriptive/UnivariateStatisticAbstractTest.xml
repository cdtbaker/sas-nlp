<?xml version="1.0" encoding="UTF-8"?>
<class name="UnivariateStatisticAbstractTest">
  <javadoc>
    <text>Test cases for the {@link UnivariateStatistic} class.</text>
    <version>$Id: UnivariateStatisticAbstractTest.java 1368738 2012-08-02 22:18:08Z erans $</version>
  </javadoc>
  <declaration type="double" name="mean" />
  <declaration type="double" name="geoMean" />
  <declaration type="double" name="var" />
  <declaration type="double" name="std" />
  <declaration type="double" name="skew" />
  <declaration type="double" name="kurt" />
  <declaration type="double" name="min" />
  <declaration type="double" name="max" />
  <declaration type="double" name="median" />
  <declaration type="double" name="percentile5" />
  <declaration type="double" name="percentile95" />
  <declaration type="double" name="product" />
  <declaration type="double" name="sumLog" />
  <declaration type="double" name="sumSq" />
  <declaration type="double" name="sum" />
  <declaration type="double" name="secondMoment" />
  <declaration type="double" name="thirdMoment" />
  <declaration type="double" name="fourthMoment" />
  <declaration type="double" name="weightedMean" />
  <declaration type="double" name="weightedVar" />
  <declaration type="double" name="weightedStd" />
  <declaration type="double" name="weightedProduct" />
  <declaration type="double" name="weightedSum" />
  <declaration type="double" name="tolerance" />
  <declaration type="double[]" name="testArray" />
  <declaration type="double[]" name="testWeightsArray" />
  <declaration type="double[]" name="identicalWeightsArray" />
  <declaration type="double[]" name="unitWeightsArray" />
  <method name="getUnivariateStatistic" type="UnivariateStatistic" />
  <method name="expectedValue" type="double" />
  <method type="double" name="getTolerance" />
  <method type="void" name="testEvaluation" />
  <method type="void" name="testEvaluateArraySegment">
    <declaration type="UnivariateStatistic" name="stat" />
    <declaration type="double[]" name="arrayZero" />
    <declaration type="double[]" name="arrayOne" />
    <declaration type="double[]" name="arrayEnd" />
  </method>
  <method type="void" name="testEvaluateArraySegmentWeighted">
    <declaration type="UnivariateStatistic" name="statistic" />
    <scope />
    <declaration type="WeightedEvaluation" name="stat" />
    <declaration type="double[]" name="arrayZero" />
    <declaration type="double[]" name="weightZero" />
    <declaration type="double[]" name="arrayOne" />
    <declaration type="double[]" name="weightOne" />
    <declaration type="double[]" name="arrayEnd" />
    <declaration type="double[]" name="weightEnd" />
    <comment>See if this statistic computes weighted statistics</comment>
    <comment>If not, skip this test</comment>
  </method>
  <method type="void" name="testCopy">
    <declaration type="UnivariateStatistic" name="original" />
    <declaration type="UnivariateStatistic" name="copy" />
  </method>
  <javadoc>
    <text>Tests consistency of weighted statistic computation.
 * For statistics that support weighted evaluation, this test case compares
 * the result of direct computation on an array with repeated values with
 * a weighted computation on the corresponding (shorter) array with each
 * value appearing only once but with a weight value equal to its multiplicity
 * in the repeating array.</text>
  </javadoc>
  <method type="void" name="testWeightedConsistency">
    <declaration type="UnivariateStatistic" name="statistic" />
    <scope />
    <declaration type="int" name="len" />
    <declaration type="double" name="mu" />
    <declaration type="double" name="sigma" />
    <declaration type="double[]" name="values" />
    <declaration type="double[]" name="weights" />
    <declaration type="int[]" name="intWeights" />
    <declaration type="IntegerDistribution" name="weightDist" />
    <scope />
    <declaration type="RealDistribution" name="valueDist" />
    <declaration type="List&lt;Double&gt;" name="valuesList" />
    <scope>
      <declaration type="double" name="value" />
      <scope />
    </scope>
    <declaration type="int" name="sumWeights" />
    <declaration type="double[]" name="repeatedValues" />
    <scope />
    <declaration type="WeightedEvaluation" name="weightedStatistic" />
    <comment>See if this statistic computes weighted statistics</comment>
    <comment>If not, skip this test</comment>
    <comment>Create arrays of values and corresponding integral weights</comment>
    <comment>and longer array with values repeated according to the weights</comment>
    <comment>length of values array</comment>
    <comment>mean of test data</comment>
    <comment>std dev of test data</comment>
    <comment>Fill weights array with random int values between 1 and 5</comment>
    <comment>Fill values array with random data from N(mu, sigma)</comment>
    <comment>and fill valuesList with values from values array with</comment>
    <comment>values[i] repeated weights[i] times, each i</comment>
    <comment>Dump valuesList into repeatedValues array</comment>
    <comment>Compare result of weighted statistic computation with direct computation</comment>
    <comment>on array of repeated values</comment>
    <comment>Check consistency of weighted evaluation methods</comment>
  </method>
  <comment>Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the "License"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

      http:www.apache.orglicensesLICENSE-2.0

s  Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.</comment>
</class>
