<?xml version="1.0" encoding="UTF-8"?>
<class name="MultivariateNormalMixtureModelDistributionTest">
  <javadoc>
    <text>Test that demonstrates the use of {@link MixtureMultivariateRealDistribution}in order to create a mixture model composed of {@link MultivariateNormalDistributionnormal distributions}.</text>
  </javadoc>
  <method type="void" name="testNonUnitWeightSum">
    <declaration type="double[]" name="weights" />
    <declaration type="double[][]" name="means" />
    <declaration type="double[][][]" name="covariances" />
    <declaration type="MultivariateNormalMixtureModelDistribution" name="d" />
    <declaration type="List&lt;Pair&lt;Double,MultivariateNormalDistribution&gt;&gt;" name="comp" />
  </method>
  <method type="void" name="testWeightSumOverFlow">
    <declaration type="double[]" name="weights" />
    <declaration type="double[][]" name="means" />
    <declaration type="double[][][]" name="covariances" />
    <declaration type="MultivariateNormalMixtureModelDistribution" name="d" />
  </method>
  <method type="void" name="testPreconditionPositiveWeights">
    <declaration type="double[]" name="negativeWeights" />
    <declaration type="double[][]" name="means" />
    <declaration type="double[][][]" name="covariances" />
    <declaration type="MultivariateNormalMixtureModelDistribution" name="d" />
  </method>
  <javadoc>
    <text>Test the accuracy of the density calculation.</text>
  </javadoc>
  <method type="void" name="testDensities">
    <declaration type="double[]" name="weights" />
    <declaration type="double[][]" name="means" />
    <declaration type="double[][][]" name="covariances" />
    <declaration type="MultivariateNormalMixtureModelDistribution" name="d" />
    <declaration type="double[][]" name="testValues" />
    <declaration type="double[]" name="correctDensities" />
    <scope />
    <comment>Test vectors</comment>
    <comment>Densities that we should get back.</comment>
    <comment>Calculated by assigning weights to multivariate normal distribution</comment>
    <comment>and summing</comment>
    <comment>values from dmvnorm function in R 2.15 CRAN package Mixtools v0.4.</comment>
    <comment>Like: .3*dmvnorm(val,mu1,sigma1)+.7*dmvnorm(val,mu2,sigma2)</comment>
  </method>
  <javadoc>
    <text>Test the accuracy of sampling from the distribution.</text>
  </javadoc>
  <method type="void" name="testSampling">
    <declaration type="double[]" name="weights" />
    <declaration type="double[][]" name="means" />
    <declaration type="double[][][]" name="covariances" />
    <declaration type="MultivariateNormalMixtureModelDistribution" name="d" />
    <declaration type="double[][]" name="correctSamples" />
    <declaration type="int" name="n" />
    <declaration type="double[][]" name="samples" />
    <scope>
      <scope />
    </scope>
  </method>
  <javadoc>
    <text>Creates a mixture of Gaussian distributions.</text>
    <param>weights Weights.</param>
    <param>means Means.</param>
    <param>covariances Covariances.</param>
    <return>the mixture distribution.</return>
  </javadoc>
  <method type="MultivariateNormalMixtureModelDistribution" name="create">
    <declaration type="List&lt;Pair&lt;Double,MultivariateNormalDistribution&gt;&gt;" name="mvns" />
    <scope>
      <declaration type="MultivariateNormalDistribution" name="dist" />
    </scope>
  </method>
  <javadoc>
    <text>Values used in {@link #testSampling()}.</text>
  </javadoc>
  <method type="double[][]" name="getCorrectSamples">
    <comment>These were sampled from the MultivariateNormalMixtureModelDistribution class</comment>
    <comment>with seed 50.</comment>
    <comment />
    <comment>They were then fit to a MVN mixture model in R using mixtools.</comment>
    <comment />
    <comment>The optimal parameters were:</comment>
    <comment>- component weights: {0.3595186, 0.6404814}</comment>
    <comment>- mean vectors: {-1.645879, 1.989797}, {3.474328, 7.782232}</comment>
    <comment>- covariance matrices:</comment>
    <comment>{ 1.397738 -1.167732</comment>
    <comment>-1.167732 1.801782 }</comment>
    <comment>and</comment>
    <comment>{ 3.934593 2.354787</comment>
    <comment>2.354787 4.428024 }</comment>
    <comment />
    <comment>It is considered fairly close to the actual test parameters,</comment>
    <comment>considering that the sample size is only 100.</comment>
  </method>
  <javadoc>
    <text>Class that implements a mixture of Gaussian ditributions.</text>
  </javadoc>
  <method type="constructor" name="MultivariateNormalMixtureModelDistribution" />
  <comment>Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the "License"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

      http:www.apache.orglicensesLICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.</comment>
</class>
