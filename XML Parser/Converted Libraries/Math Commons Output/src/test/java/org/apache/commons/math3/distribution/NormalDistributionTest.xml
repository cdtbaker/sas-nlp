<?xml version="1.0" encoding="UTF-8"?>
<class name="NormalDistributionTest">
  <javadoc>
    <text>Test cases for {@link NormalDistribution}. Extends{@link RealDistributionAbstractTest}. See class javadoc of that class
 * for details.</text>
    <version>$Id: NormalDistributionTest.java 1364028 2012-07-21 00:42:49Z erans $</version>
  </javadoc>
  <javadoc>
    <text>Creates the default real distribution instance to use in tests.</text>
  </javadoc>
  <method type="NormalDistribution" name="makeDistribution" />
  <javadoc>
    <text>Creates the default cumulative probability distribution test input values</text>
  </javadoc>
  <method type="double[]" name="makeCumulativeTestPoints">
    <comment>quantiles computed using R</comment>
  </method>
  <javadoc>
    <text>Creates the default cumulative probability density test expected values</text>
  </javadoc>
  <method type="double[]" name="makeCumulativeTestValues" />
  <javadoc>
    <text>Creates the default probability density test expected values</text>
  </javadoc>
  <method type="double[]" name="makeDensityTestValues" />
  <declaration type="double" name="defaultTolerance" />
  <method type="void" name="setUp" />
  <method type="void" name="verifyQuantiles">
    <declaration type="NormalDistribution" name="distribution" />
    <declaration type="double" name="mu" />
    <declaration type="double" name="sigma" />
    <comment>Quantiles computed using R (same as Mathematica)</comment>
  </method>
  <method type="void" name="testQuantiles" />
  <method type="void" name="testInverseCumulativeProbabilityExtremes" />
  <method type="void" name="testGetMean">
    <declaration type="NormalDistribution" name="distribution" />
  </method>
  <method type="void" name="testGetStandardDeviation">
    <declaration type="NormalDistribution" name="distribution" />
  </method>
  <method type="void" name="testPreconditions" />
  <method type="void" name="testDensity">
    <declaration type="double[][]" name="x" />
    <comment>R 2.5: print(dnorm(c(-2,-1,0,1,2)), digits=10)</comment>
    <comment>R 2.5: print(dnorm(c(-2,-1,0,1,2), mean=1.1), digits=10)</comment>
  </method>
  <method type="void" name="checkDensity">
    <declaration type="NormalDistribution" name="d" />
    <scope />
  </method>
  <javadoc>
    <text>Check to make sure top-coding of extreme values works correctly.
 * Verifies fixes for JIRA MATH-167, MATH-414</text>
  </javadoc>
  <method type="void" name="testExtremeValues">
    <declaration type="NormalDistribution" name="distribution" />
    <scope>
      <declaration type="double" name="lowerTail" />
      <declaration type="double" name="upperTail" />
      <scope />
      <scope />
    </scope>
    <comment>make sure no convergence exception</comment>
    <comment>make sure not top-coded</comment>
    <comment>For i = 10, due to bad tail precision in erf (MATH-364), 1 is returned</comment>
    <comment>TODO: once MATH-364 is resolved, replace 9 with 30</comment>
    <comment>make sure top coding not reversed</comment>
  </method>
  <method type="void" name="testMath280">
    <declaration type="NormalDistribution" name="normal" />
    <declaration type="double" name="result" />
  </method>
  <method type="void" name="testMoments">
    <declaration type="double" name="tol" />
    <declaration type="NormalDistribution" name="dist" />
  </method>
  <comment>Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the "License"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

      http:www.apache.orglicensesLICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.</comment>
  <comment>-------------- Implementations for abstract methods -----------------------</comment>
  <comment>--------------------- Override tolerance  --------------</comment>
  <comment>---------------------------- Additional test cases -------------------------</comment>
</class>
