<?xml version="1.0" encoding="UTF-8"?>
<class name="GaussianQuadratureAbstractTest">
  <javadoc>
    <text>Base class for standard testing of Gaussian quadrature rules,
 * which are exact for polynomials up to a certain degree. In this test, each
 * monomial in turn is tested against the specified quadrature rule.</text>
    <version>$Id$</version>
  </javadoc>
  <javadoc>
    <text>The maximum absolute error (for zero testing).</text>
  </javadoc>
  <declaration type="double" name="eps" />
  <javadoc>
    <text>The maximum relative error (in ulps).</text>
  </javadoc>
  <declaration type="double" name="numUlps" />
  <javadoc>
    <text>The quadrature rule under test.</text>
  </javadoc>
  <declaration type="GaussIntegrator" name="integrator" />
  <javadoc>
    <text>Maximum degree of monomials to be tested.</text>
  </javadoc>
  <declaration type="int" name="maxDegree" />
  <javadoc>
    <text>Creates a new instance of this abstract test with the specified
 * quadrature rule.
 * If the expected value is non-zero, equality of actual and expected values
 * is checked in the relative sense &lt;center&gt;
 * |x&lt;sub&gt;act&lt;/sub&gt;&amp;nbsp;-&amp;nbsp;x&lt;sub&gt;exp&lt;/sub&gt;|&amp;nbsp;&amp;le;&amp;nbsp; n&amp;nbsp;
 * &lt;code&gt;Math.ulp(&lt;/code&gt;x&lt;sub&gt;exp&lt;/sub&gt;&lt;code&gt;)&lt;/code&gt;, &lt;/center&gt; where n is
 * the maximum relative error (in ulps). If the expected value is zero, the
 * test checks that &lt;center&gt; |x&lt;sub&gt;act&lt;/sub&gt;|&amp;nbsp;&amp;le;&amp;nbsp;&amp;epsilon;,
 * &lt;/center&gt; where &amp;epsilon; is the maximum absolute error.</text>
    <param>integrator Quadrature rule under test.</param>
    <param>maxDegree Maximum degree of monomials to be tested.</param>
    <param>eps &amp;epsilon;.</param>
    <param>numUlps Value of the maximum relative error (in ulps).</param>
  </javadoc>
  <method type="constructor" name="GaussianQuadratureAbstractTest" />
  <method name="getExpectedValue" type="double" />
  <javadoc>
    <text>Returns the expected value of the integral of the specified monomial.
 * The integration is carried out on the natural interval of the quadrature
 * rule under test.</text>
    <param>n Degree of the monomial.</param>
    <return>the expected value of the integral of x&lt;sup&gt;n&lt;/sup&gt;.</return>
  </javadoc>
  <javadoc>
    <text>Checks that the value of the integral of each monomial
 * &lt;code&gt;x&lt;sup&gt;0&lt;/sup&gt;, ... , x&lt;sup&gt;p&lt;/sup&gt;&lt;/code&gt;
 * returned by the quadrature rule under test conforms with the expected
 * value.
 * Here {@code p} denotes the degree of the highest polynomial for which
 * exactness is to be expected.</text>
  </javadoc>
  <method type="void" name="testAllMonomials">
    <scope>
      <declaration type="double" name="expected" />
      <declaration type="Power" name="monomial" />
      <declaration type="double" name="actual" />
      <scope />
      <scope>
        <declaration type="double" name="err" />
      </scope>
    </scope>
    <comment>System.out.println(n + "/" + maxDegree + " " + integrator.getNumberOfPoints()</comment>
    <comment>+ " " + expected + " " + actual + " " + Math.ulp(expected));</comment>
  </method>
  <comment>Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the "License"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

      http:www.apache.orglicensesLICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.</comment>
</class>
