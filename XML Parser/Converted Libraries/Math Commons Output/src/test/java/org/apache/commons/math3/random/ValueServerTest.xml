<?xml version="1.0" encoding="UTF-8"?>
<class name="ValueServerTest">
  <javadoc>
    <text>Test cases for the ValueServer class.</text>
    <version>$Id: ValueServerTest.java 1425978 2012-12-26 18:19:30Z psteitz $</version>
  </javadoc>
  <declaration type="ValueServer" name="vs" />
  <method type="void" name="setUp">
    <declaration type="URL" name="url" />
  </method>
  <javadoc>
    <text>Generate 1000 random values and make sure they look OK.&lt;br&gt;
 * Note that there is a non-zero (but very small) probability that
 * these tests will fail even if the code is working as designed.</text>
  </javadoc>
  <method type="void" name="testNextDigest">
    <declaration type="double" name="next" />
    <declaration type="double" name="tolerance" />
    <declaration type="SummaryStatistics" name="stats" />
    <scope />
    <scope />
  </method>
  <javadoc>
    <text>Verify that when provided with fixed seeds, stochastic modes
 * generate fixed sequences.  Verifies the fix for MATH-654.</text>
  </javadoc>
  <method type="void" name="testFixedSeed">
    <declaration type="ValueServer" name="valueServer" />
    <declaration type="URL" name="url" />
  </method>
  <javadoc>
    <text>Do the check for {@link #testFixedSeed()}</text>
    <param>mode ValueServer mode</param>
  </javadoc>
  <method type="void" name="checkFixedSeed">
    <declaration type="double[][]" name="values" />
    <scope />
    <scope />
  </method>
  <javadoc>
    <text>Make sure exception thrown if digest getNext is attempted
 * before loading empiricalDistribution.</text>
  </javadoc>
  <method type="void" name="testNextDigestFail">
    <scope />
    <scope />
  </method>
  <method type="void" name="testEmptyReplayFile">
    <scope>
      <declaration type="URL" name="url" />
    </scope>
    <scope />
    <comment>expected behavior</comment>
  </method>
  <method type="void" name="testEmptyDigestFile">
    <scope>
      <declaration type="URL" name="url" />
    </scope>
    <scope />
    <comment>expected behavior</comment>
  </method>
  <javadoc>
    <text>Test ValueServer REPLAY_MODE using values in testData file.&lt;br&gt;
 * Check that the values 1,2,1001,1002 match data file values 1 and 2.
 * the sample data file.</text>
  </javadoc>
  <method type="void" name="testReplay">
    <declaration type="double" name="firstDataValue" />
    <declaration type="double" name="secondDataValue" />
    <declaration type="double" name="tolerance" />
    <declaration type="double" name="compareValue" />
    <scope />
    <comment>make sure no NPE</comment>
  </method>
  <javadoc>
    <text>Test other ValueServer modes</text>
  </javadoc>
  <method type="void" name="testModes">
    <declaration type="double" name="val" />
    <scope />
    <scope />
    <comment>ignored</comment>
  </method>
  <javadoc>
    <text>Test fill</text>
  </javadoc>
  <method type="void" name="testFill">
    <declaration type="double[]" name="val" />
    <scope />
    <declaration type="double[]" name="v2" />
    <scope />
  </method>
  <javadoc>
    <text>Test getters to make Clover happy</text>
  </javadoc>
  <method type="void" name="testProperties">
    <declaration type="URL" name="url" />
  </method>
  <comment>Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the "License"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

      http:www.apache.orglicensesLICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.</comment>
</class>
