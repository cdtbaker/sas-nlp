<?xml version="1.0" encoding="UTF-8"?>
<class name="TestProblemHandler">
  <javadoc>
    <text>This class is used to handle steps for the test problems
 * integrated during the junit tests for the ODE integrators.</text>
  </javadoc>
  <javadoc>
    <text>Associated problem.</text>
  </javadoc>
  <declaration type="TestProblemAbstract" name="problem" />
  <javadoc>
    <text>Maximal errors encountered during the integration.</text>
  </javadoc>
  <declaration type="double" name="maxValueError" />
  <declaration type="double" name="maxTimeError" />
  <javadoc>
    <text>Error at the end of the integration.</text>
  </javadoc>
  <declaration type="double" name="lastError" />
  <javadoc>
    <text>Time at the end of integration.</text>
  </javadoc>
  <declaration type="double" name="lastTime" />
  <javadoc>
    <text>ODE solver used.</text>
  </javadoc>
  <declaration type="ODEIntegrator" name="integrator" />
  <javadoc>
    <text>Expected start for step.</text>
  </javadoc>
  <declaration type="double" name="expectedStepStart" />
  <javadoc>
    <text>Simple constructor.</text>
    <param>problem problem for which steps should be handled</param>
    <param>integrator ODE solver used</param>
  </javadoc>
  <method type="constructor" name="TestProblemHandler" />
  <method type="void" name="init" />
  <method type="void" name="handleStep">
    <declaration type="double" name="start" />
    <scope>
      <scope>
        <declaration type="double" name="stepError" />
        <scope />
      </scope>
    </scope>
    <declaration type="double" name="pT" />
    <declaration type="double" name="cT" />
    <declaration type="double[]" name="errorScale" />
    <scope>
      <declaration type="double[]" name="interpolatedY" />
      <declaration type="double[]" name="theoreticalY" />
      <scope>
        <declaration type="double" name="error" />
      </scope>
    </scope>
    <scope>
      <declaration type="double" name="time" />
      <declaration type="double[]" name="interpolatedY" />
      <declaration type="double[]" name="theoreticalY" />
      <scope>
        <declaration type="double" name="error" />
      </scope>
    </scope>
    <comment>multistep integrators do not handle the first steps themselves</comment>
    <comment>so we have to make sure the integrator we look at has really started its work</comment>
    <comment>the step should either start at the end of the integrator step</comment>
    <comment>or at an event if the step is split into several substeps</comment>
    <comment>store the error at the last step</comment>
    <comment>walk through the step</comment>
    <comment>update the errors</comment>
  </method>
  <javadoc>
    <text>Get the maximal value error encountered during integration.</text>
    <return>maximal value error</return>
  </javadoc>
  <method type="double" name="getMaximalValueError" />
  <javadoc>
    <text>Get the maximal time error encountered during integration.</text>
    <return>maximal time error</return>
  </javadoc>
  <method type="double" name="getMaximalTimeError" />
  <javadoc>
    <text>Get the error at the end of the integration.</text>
    <return>error at the end of the integration</return>
  </javadoc>
  <method type="double" name="getLastError" />
  <javadoc>
    <text>Get the time at the end of the integration.</text>
    <return>time at the end of the integration.</return>
  </javadoc>
  <method type="double" name="getLastTime" />
  <comment>Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the "License"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

      http:www.apache.orglicensesLICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.</comment>
</class>
