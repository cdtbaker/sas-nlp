<?xml version="1.0" encoding="UTF-8"?>
<class name="PolynomialFunctionTest">
  <javadoc>
    <text>Tests the PolynomialFunction implementation of a UnivariateFunction.</text>
    <version>$Id: PolynomialFunctionTest.java 1244107 2012-02-14 16:17:55Z erans $</version>
  </javadoc>
  <javadoc>
    <text>Error tolerance for tests</text>
  </javadoc>
  <declaration type="double" name="tolerance" />
  <javadoc>
    <text>tests the value of a constant polynomial.
 * &lt;p&gt;value of this is 2.5 everywhere.&lt;/p&gt;</text>
  </javadoc>
  <method type="void" name="testConstants">
    <declaration type="double[]" name="c" />
    <declaration type="PolynomialFunction" name="f" />
    <comment>verify that we are equal to c[0] at several (nonsymmetric) places</comment>
  </method>
  <javadoc>
    <text>tests the value of a linear polynomial.
 * &lt;p&gt;This will test the function f(x) = 3*x - 1.5&lt;/p&gt;
 * &lt;p&gt;This will have the values
 * &lt;tt&gt;f(0) = -1.5, f(-1) = -4.5, f(-2.5) = -9,
 * f(0.5) = 0, f(1.5) = 3&lt;/tt&gt; and &lt;tt&gt;f(3) = 7.5&lt;/tt&gt;
 * &lt;/p&gt;</text>
  </javadoc>
  <method type="void" name="testLinear">
    <declaration type="double[]" name="c" />
    <declaration type="PolynomialFunction" name="f" />
    <comment>verify that we are equal to c[0] when x=0</comment>
    <comment>now check a few other places</comment>
  </method>
  <javadoc>
    <text>Tests a second order polynomial.
 * &lt;p&gt; This will test the function f(x) = 2x^2 - 3x -2 = (2x+1)(x-2)&lt;/p&gt;</text>
  </javadoc>
  <method type="void" name="testQuadratic">
    <declaration type="double[]" name="c" />
    <declaration type="PolynomialFunction" name="f" />
    <comment>verify that we are equal to c[0] when x=0</comment>
    <comment>now check a few other places</comment>
  </method>
  <javadoc>
    <text>This will test the quintic function
 * f(x) = x^2(x-5)(x+3)(x-1) = x^5 - 3x^4 -13x^3 + 15x^2&lt;/p&gt;</text>
  </javadoc>
  <method type="void" name="testQuintic">
    <declaration type="double[]" name="c" />
    <declaration type="PolynomialFunction" name="f" />
    <comment>verify that we are equal to c[0] when x=0</comment>
    <comment>now check a few other places</comment>
  </method>
  <javadoc>
    <text>tests the firstDerivative function by comparison
 * &lt;p&gt;This will test the functions
 * &lt;tt&gt;f(x) = x^3 - 2x^2 + 6x + 3, g(x) = 3x^2 - 4x + 6&lt;/tt&gt;
 * and &lt;tt&gt;h(x) = 6x - 4&lt;/tt&gt;</text>
  </javadoc>
  <method type="void" name="testfirstDerivativeComparison">
    <declaration type="double[]" name="f_coeff" />
    <declaration type="double[]" name="g_coeff" />
    <declaration type="double[]" name="h_coeff" />
    <declaration type="PolynomialFunction" name="f" />
    <declaration type="PolynomialFunction" name="g" />
    <declaration type="PolynomialFunction" name="h" />
    <comment>compare f' = g</comment>
    <comment>compare g' = h</comment>
  </method>
  <method type="void" name="testString">
    <declaration type="PolynomialFunction[]" name="p" />
  </method>
  <method type="void" name="testAddition">
    <declaration type="PolynomialFunction[]" name="p1" />
    <declaration type="PolynomialFunction[]" name="p2" />
  </method>
  <method type="void" name="testSubtraction">
    <declaration type="PolynomialFunction[]" name="p1" />
    <declaration type="PolynomialFunction[]" name="p2" />
  </method>
  <method type="void" name="testMultiplication">
    <declaration type="PolynomialFunction[]" name="p1" />
    <declaration type="PolynomialFunction[]" name="p2" />
    <scope />
  </method>
  <method type="void" name="testSerial">
    <declaration type="PolynomialFunction[]" name="p2" />
  </method>
  <javadoc>
    <text>tests the firstDerivative function by comparison
 * &lt;p&gt;This will test the functions
 * &lt;tt&gt;f(x) = x^3 - 2x^2 + 6x + 3, g(x) = 3x^2 - 4x + 6&lt;/tt&gt;
 * and &lt;tt&gt;h(x) = 6x - 4&lt;/tt&gt;</text>
  </javadoc>
  <method type="void" name="testMath341">
    <declaration type="double[]" name="f_coeff" />
    <declaration type="double[]" name="g_coeff" />
    <declaration type="double[]" name="h_coeff" />
    <declaration type="PolynomialFunction" name="f" />
    <declaration type="PolynomialFunction" name="g" />
    <declaration type="PolynomialFunction" name="h" />
    <comment>compare f' = g</comment>
    <comment>compare g' = h</comment>
  </method>
  <method type="void" name="checkPolynomial" />
  <method type="void" name="checkNullPolynomial">
    <scope />
  </method>
  <comment>Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the "License"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

      http:www.apache.orglicensesLICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.</comment>
</class>
