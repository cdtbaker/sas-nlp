<?xml version="1.0" encoding="UTF-8"?>
<class name="SplineInterpolatorTest">
  <javadoc>
    <text>Test the SplineInterpolator.</text>
    <version>$Id: SplineInterpolatorTest.java 1364030 2012-07-21 01:10:04Z erans $</version>
  </javadoc>
  <javadoc>
    <text>error tolerance for spline interpolator value at knot points</text>
  </javadoc>
  <declaration type="double" name="knotTolerance" />
  <javadoc>
    <text>error tolerance for interpolating polynomial coefficients</text>
  </javadoc>
  <declaration type="double" name="coefficientTolerance" />
  <javadoc>
    <text>error tolerance for interpolated values -- high value is from sin test</text>
  </javadoc>
  <declaration type="double" name="interpolationTolerance" />
  <method type="void" name="testInterpolateLinearDegenerateTwoSegment">
    <declaration type="double[]" name="x" />
    <declaration type="double[]" name="y" />
    <declaration type="UnivariateInterpolator" name="i" />
    <declaration type="UnivariateFunction" name="f" />
    <declaration type="PolynomialFunction[]" name="polynomials" />
    <declaration type="double[]" name="target" />
    <comment>Verify coefficients using analytical values</comment>
    <comment>Check interpolation</comment>
  </method>
  <method type="void" name="testInterpolateLinearDegenerateThreeSegment">
    <declaration type="double[]" name="x" />
    <declaration type="double[]" name="y" />
    <declaration type="UnivariateInterpolator" name="i" />
    <declaration type="UnivariateFunction" name="f" />
    <declaration type="PolynomialFunction[]" name="polynomials" />
    <declaration type="double[]" name="target" />
    <comment>Verify coefficients using analytical values</comment>
    <comment>Check interpolation</comment>
  </method>
  <method type="void" name="testInterpolateLinear">
    <declaration type="double[]" name="x" />
    <declaration type="double[]" name="y" />
    <declaration type="UnivariateInterpolator" name="i" />
    <declaration type="UnivariateFunction" name="f" />
    <declaration type="PolynomialFunction[]" name="polynomials" />
    <declaration type="double[]" name="target" />
    <comment>Verify coefficients using analytical values</comment>
  </method>
  <method type="void" name="testInterpolateSin">
    <declaration type="double[]" name="x" />
    <declaration type="double[]" name="y" />
    <declaration type="UnivariateInterpolator" name="i" />
    <declaration type="UnivariateFunction" name="f" />
    <declaration type="PolynomialFunction[]" name="polynomials" />
    <declaration type="double[]" name="target" />
    <comment>Check coefficients against values computed using R (version 1.8.1, Red Hat Linux 9)

 To replicate in R:
     x[1] &lt;- 0
     x[2] &lt;- pi  6, etc, same for y[] (could use y &lt;- scan() for y values)
     g &lt;- splinefun(x, y, "natural")
     splinecoef &lt;- eval(expression(z), envir = environment(g))
     print(splinecoef)</comment>
    <comment>Check interpolation</comment>
  </method>
  <method type="void" name="testIllegalArguments">
    <declaration type="UnivariateInterpolator" name="i" />
    <scope>
      <declaration type="double[]" name="xval" />
      <declaration type="double[]" name="yval" />
    </scope>
    <scope />
    <scope>
      <declaration type="double[]" name="xval" />
      <declaration type="double[]" name="yval" />
    </scope>
    <scope />
    <scope>
      <declaration type="double[]" name="xval" />
      <declaration type="double[]" name="yval" />
    </scope>
    <scope />
    <comment>Data set arrays of different size.</comment>
    <comment>Expected.</comment>
    <comment>X values not sorted.</comment>
    <comment>Expected.</comment>
    <comment>Not enough data to interpolate.</comment>
    <comment>Expected.</comment>
  </method>
  <javadoc>
    <text>verifies that f(x[i]) = y[i] for i = 0..n-1 where n is common length.</text>
  </javadoc>
  <method type="void" name="verifyInterpolation">
    <scope />
  </method>
  <javadoc>
    <text>Verifies that interpolating polynomials satisfy consistency requirement:
 * adjacent polynomials must agree through two derivatives at knot points</text>
  </javadoc>
  <method type="void" name="verifyConsistency">
    <declaration type="PolynomialFunction[]" name="polynomials" />
    <scope />
    <comment>evaluate polynomials and derivatives at x[i + 1]</comment>
  </method>
  <comment>Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the "License"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

      http:www.apache.orglicensesLICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.</comment>
</class>
