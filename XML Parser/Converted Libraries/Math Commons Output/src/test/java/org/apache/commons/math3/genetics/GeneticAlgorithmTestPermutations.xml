<?xml version="1.0" encoding="UTF-8"?>
<class name="GeneticAlgorithmTestPermutations">
  <javadoc>
    <text>This is also an example of usage.
 * This algorithm does "stochastic sorting" of a sequence 0,...,N.</text>
  </javadoc>
  <declaration type="int" name="DIMENSION" />
  <declaration type="int" name="POPULATION_SIZE" />
  <declaration type="int" name="NUM_GENERATIONS" />
  <declaration type="double" name="ELITISM_RATE" />
  <declaration type="double" name="CROSSOVER_RATE" />
  <declaration type="double" name="MUTATION_RATE" />
  <declaration type="int" name="TOURNAMENT_ARITY" />
  <declaration type="List&lt;Integer&gt;" name="sequence" />
  <scope>
    <scope />
  </scope>
  <method type="void" name="test">
    <declaration type="GeneticAlgorithm" name="ga" />
    <declaration type="Population" name="initial" />
    <declaration type="StoppingCondition" name="stopCond" />
    <declaration type="Chromosome" name="bestInitial" />
    <declaration type="Population" name="finalPopulation" />
    <declaration type="Chromosome" name="bestFinal" />
    <comment>to test a stochastic algorithm is hard, so this will rather be an usage example</comment>
    <comment>initialize a new genetic algorithm</comment>
    <comment>initial population</comment>
    <comment>stopping conditions</comment>
    <comment>best initial chromosome</comment>
    <comment>run the algorithm</comment>
    <comment>best chromosome from the final population</comment>
    <comment>the only thing we can test is whether the final solution is not worse than the initial one</comment>
    <comment>however, for some implementations of GA, this need not be true :)</comment>
    <comment>System.out.println(bestInitial);</comment>
    <comment>System.out.println(bestFinal);</comment>
  </method>
  <javadoc>
    <text>Initializes a random population</text>
  </javadoc>
  <method type="ElitisticListPopulation" name="randomPopulation">
    <declaration type="List&lt;Chromosome&gt;" name="popList" />
    <scope>
      <declaration type="Chromosome" name="randChrom" />
    </scope>
  </method>
  <javadoc>
    <text>Chromosomes representing a permutation of (0,1,2,...,DIMENSION-1).
 * The goal is to sort the sequence.</text>
  </javadoc>
  <method type="constructor" name="MinPermutations" />
  <method type="double" name="fitness">
    <declaration type="int" name="res" />
    <declaration type="List&lt;Integer&gt;" name="decoded" />
    <scope>
      <declaration type="int" name="value" />
      <scope />
    </scope>
    <comment>bad position found</comment>
    <comment>the most fitted chromosome is the one with minimal error</comment>
    <comment>therefore we must return negative value</comment>
  </method>
  <method type="AbstractListChromosome&lt;Double&gt;" name="newFixedLengthChromosome" />
  <comment>Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the "License"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

      http:www.apache.orglicensesLICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.</comment>
  <comment>parameters for the GA</comment>
  <comment>numbers from 0 to N-1</comment>
</class>
