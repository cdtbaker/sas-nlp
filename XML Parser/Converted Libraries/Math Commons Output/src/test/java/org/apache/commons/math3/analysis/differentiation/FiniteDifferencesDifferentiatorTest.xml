<?xml version="1.0" encoding="UTF-8"?>
<class name="FiniteDifferencesDifferentiatorTest">
  <javadoc>
    <text>Test for class {@link FiniteDifferencesDifferentiator}.</text>
  </javadoc>
  <method type="void" name="testWrongNumberOfPoints" />
  <method type="void" name="testWrongStepSize" />
  <method type="void" name="testSerialization">
    <declaration type="FiniteDifferencesDifferentiator" name="differentiator" />
    <declaration type="FiniteDifferencesDifferentiator" name="recovered" />
  </method>
  <method type="void" name="testConstant">
    <declaration type="FiniteDifferencesDifferentiator" name="differentiator" />
    <declaration type="UnivariateDifferentiableFunction" name="f" />
    <method type="double" name="value" />
    <scope>
      <declaration type="DerivativeStructure" name="y" />
    </scope>
  </method>
  <method type="void" name="testLinear">
    <declaration type="FiniteDifferencesDifferentiator" name="differentiator" />
    <declaration type="UnivariateDifferentiableFunction" name="f" />
    <method type="double" name="value" />
    <scope>
      <declaration type="DerivativeStructure" name="y" />
    </scope>
  </method>
  <method type="void" name="testGaussian">
    <declaration type="FiniteDifferencesDifferentiator" name="differentiator" />
    <declaration type="UnivariateDifferentiableFunction" name="gaussian" />
    <declaration type="UnivariateDifferentiableFunction" name="f" />
    <declaration type="double[][]" name="expectedError" />
    <declaration type="double[]" name="maxError" />
    <scope>
      <declaration type="DerivativeStructure" name="dsX" />
      <declaration type="DerivativeStructure" name="yRef" />
      <declaration type="DerivativeStructure" name="y" />
      <scope />
    </scope>
    <scope />
  </method>
  <method type="void" name="testStepSizeUnstability">
    <declaration type="UnivariateDifferentiableFunction" name="quintic" />
    <declaration type="UnivariateDifferentiableFunction" name="goodStep" />
    <declaration type="UnivariateDifferentiableFunction" name="badStep" />
    <declaration type="double[]" name="maxErrorGood" />
    <declaration type="double[]" name="maxErrorBad" />
    <scope>
      <declaration type="DerivativeStructure" name="dsX" />
      <declaration type="DerivativeStructure" name="yRef" />
      <declaration type="DerivativeStructure" name="yGood" />
      <declaration type="DerivativeStructure" name="yBad" />
      <scope />
    </scope>
    <declaration type="double[][]" name="expectedGood" />
    <declaration type="double[][]" name="expectedBad" />
    <scope />
    <comment>the 0.25 step size is good for finite differences in the quintic on this abscissa range for 7 points</comment>
    <comment>the errors are fair</comment>
    <comment>the 1.0e-6 step size is far too small for finite differences in the quintic on this abscissa range for 7 points</comment>
    <comment>the errors are huge!</comment>
  </method>
  <method type="void" name="testWrongOrder">
    <declaration type="UnivariateDifferentiableFunction" name="f" />
    <method type="double" name="value" />
    <comment>this exception should not be thrown because wrong order</comment>
    <comment>should be detected before function call</comment>
  </method>
  <method type="void" name="testWrongOrderVector">
    <declaration type="UnivariateDifferentiableVectorFunction[]" name="f" />
    <method type="double[]" name="value" />
    <comment>this exception should not be thrown because wrong order</comment>
    <comment>should be detected before function call</comment>
  </method>
  <method type="void" name="testWrongOrderMatrix">
    <declaration type="UnivariateDifferentiableMatrixFunction[]" name="f" />
    <method type="double[][]" name="value" />
    <comment>this exception should not be thrown because wrong order</comment>
    <comment>should be detected before function call</comment>
  </method>
  <method type="void" name="testTooLargeStep" />
  <method type="void" name="testBounds">
    <declaration type="double" name="slope" />
    <declaration type="UnivariateFunction" name="f" />
    <method type="double" name="value">
      <scope />
      <scope />
      <scope />
    </method>
    <declaration type="UnivariateDifferentiableFunction" name="missingBounds" />
    <declaration type="UnivariateDifferentiableFunction" name="properlyBounded" />
    <declaration type="DerivativeStructure" name="tLow" />
    <declaration type="DerivativeStructure" name="tHigh" />
    <scope />
    <scope />
    <scope />
    <scope />
    <scope />
    <scope />
    <comment>here, we did not set the bounds, so the differences are evaluated out of domain</comment>
    <comment>using f(-0.05), f(0.05), f(0.15)</comment>
    <comment>here, we did not set the bounds, so the differences are evaluated out of domain</comment>
    <comment>using f(0.85), f(0.95), f(1.05)</comment>
    <comment>here, we did set the bounds, so evaluations are done within domain</comment>
    <comment>using f(0.0), f(0.1), f(0.2)</comment>
    <comment>here, we did set the bounds, so evaluations are done within domain</comment>
    <comment>using f(0.8), f(0.9), f(1.0)</comment>
  </method>
  <method type="void" name="testBoundedSqrt">
    <declaration type="UnivariateFunctionDifferentiator" name="differentiator" />
    <declaration type="UnivariateDifferentiableFunction" name="sqrt" />
    <method type="double" name="value" />
    <declaration type="DerivativeStructure" name="t001" />
    <declaration type="DerivativeStructure" name="t01" />
    <declaration type="DerivativeStructure" name="t03" />
    <comment>we are able to compute derivative near 0, but the accuracy is much poorer there</comment>
  </method>
  <method type="void" name="testVectorFunction">
    <declaration type="FiniteDifferencesDifferentiator" name="differentiator" />
    <declaration type="UnivariateDifferentiableVectorFunction[]" name="f" />
    <method type="double[]" name="value" />
    <scope>
      <declaration type="DerivativeStructure" name="dsX" />
      <declaration type="DerivativeStructure[]" name="y" />
      <declaration type="double" name="cos" />
      <declaration type="double" name="sin" />
      <declaration type="double[]" name="f1" />
      <declaration type="DerivativeStructure[]" name="f2" />
      <scope />
    </scope>
  </method>
  <method type="void" name="testMatrixFunction">
    <declaration type="FiniteDifferencesDifferentiator" name="differentiator" />
    <declaration type="UnivariateDifferentiableMatrixFunction[]" name="f" />
    <method type="double[][]" name="value" />
    <scope>
      <declaration type="DerivativeStructure" name="dsX" />
      <declaration type="DerivativeStructure[][]" name="y" />
      <declaration type="double" name="cos" />
      <declaration type="double" name="sin" />
      <declaration type="double" name="cosh" />
      <declaration type="double" name="sinh" />
      <declaration type="double[][]" name="f1" />
      <declaration type="DerivativeStructure[][]" name="f2" />
      <scope>
        <scope />
      </scope>
    </scope>
  </method>
  <method type="void" name="testSeveralFreeParameters">
    <declaration type="FiniteDifferencesDifferentiator" name="differentiator" />
    <declaration type="UnivariateDifferentiableFunction" name="sine" />
    <declaration type="UnivariateDifferentiableFunction" name="f" />
    <declaration type="double[][]" name="expectedError" />
    <declaration type="double[]" name="maxError" />
    <scope>
      <scope>
        <declaration type="DerivativeStructure" name="dsX" />
        <declaration type="DerivativeStructure" name="dsY" />
        <declaration type="DerivativeStructure" name="dsT" />
        <declaration type="DerivativeStructure" name="sRef" />
        <declaration type="DerivativeStructure" name="s" />
        <scope>
          <scope>
            <scope />
          </scope>
        </scope>
      </scope>
    </scope>
    <scope />
  </method>
  <comment>Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the "License"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

      http:www.apache.orglicensesLICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.</comment>
</class>
