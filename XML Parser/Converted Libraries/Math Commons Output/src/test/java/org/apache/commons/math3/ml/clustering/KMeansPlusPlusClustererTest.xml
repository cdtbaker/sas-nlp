<?xml version="1.0" encoding="UTF-8"?>
<class name="KMeansPlusPlusClustererTest">
  <declaration type="RandomGenerator" name="random" />
  <method type="void" name="setUp" />
  <javadoc>
    <text>JIRA: MATH-305
 * Two points, one cluster, one iteration</text>
  </javadoc>
  <method type="void" name="testPerformClusterAnalysisDegenerate">
    <declaration type="KMeansPlusPlusClusterer&lt;DoublePoint&gt;" name="transformer" />
    <declaration type="DoublePoint[][]" name="points" />
    <declaration type="List&lt;? extends Cluster&lt;DoublePoint&gt;&gt;" name="clusters" />
    <declaration type="DoublePoint[]" name="pt1" />
    <declaration type="DoublePoint[]" name="pt2" />
  </method>
  <method type="void" name="testCertainSpace">
    <declaration type="KMeansPlusPlusClusterer.EmptyClusterStrategy[]" name="strategies" />
    <scope>
      <declaration type="int" name="numberOfVariables" />
      <declaration type="int" name="position1" />
      <declaration type="int" name="position2" />
      <declaration type="int" name="position3" />
      <declaration type="int" name="position4" />
      <declaration type="int" name="multiplier" />
      <declaration type="DoublePoint[]" name="breakingPoints" />
      <scope>
        <declaration type="int[]" name="points" />
        <scope />
        <declaration type="DoublePoint" name="DoublePoint" />
      </scope>
      <scope>
        <declaration type="KMeansPlusPlusClusterer&lt;DoublePoint&gt;" name="transformer" />
        <declaration type="List&lt;? extends Cluster&lt;DoublePoint&gt;&gt;" name="clusters" />
        <declaration type="int" name="sum" />
        <scope />
      </scope>
    </scope>
    <comment>initialise testvalues</comment>
    <comment>testvalues will be multiplied</comment>
    <comment>define the space which will break the cluster algorithm</comment>
    <comment>multiply the values</comment>
  </method>
  <javadoc>
    <text>A helper class for testSmallDistances(). This class is similar to DoublePoint, but
 * it defines a different distanceFrom() method that tends to return distances less than 1.</text>
  </javadoc>
  <declaration type="long" name="serialVersionUID" />
  <method type="double" name="compute" />
  <javadoc>
    <text>Test points that are very close together. See issue MATH-546.</text>
  </javadoc>
  <method type="void" name="testSmallDistances">
    <declaration type="int[]" name="repeatedArray" />
    <declaration type="int[]" name="uniqueArray" />
    <declaration type="DoublePoint" name="repeatedPoint" />
    <declaration type="DoublePoint" name="uniquePoint" />
    <declaration type="Collection&lt;DoublePoint&gt;" name="points" />
    <declaration type="int" name="NUM_REPEATED_POINTS" />
    <scope />
    <declaration type="long" name="RANDOM_SEED" />
    <declaration type="int" name="NUM_CLUSTERS" />
    <declaration type="int" name="NUM_ITERATIONS" />
    <declaration type="KMeansPlusPlusClusterer&lt;DoublePoint&gt;" name="clusterer" />
    <declaration type="List&lt;CentroidCluster&lt;DoublePoint&gt;&gt;" name="clusters" />
    <declaration type="boolean" name="uniquePointIsCenter" />
    <scope>
      <scope />
    </scope>
    <comment>Create a bunch of CloseDoublePoints. Most are identical, but one is different by a</comment>
    <comment>small distance.</comment>
    <comment>Ask a KMeansPlusPlusClusterer to run zero iterations (i.e., to simply choose initial</comment>
    <comment>cluster centers).</comment>
    <comment>Check that one of the chosen centers is the unique point.</comment>
  </method>
  <javadoc>
    <text>2 variables cannot be clustered into 3 clusters. See issue MATH-436.</text>
  </javadoc>
  <method type="void" name="testPerformClusterAnalysisToManyClusters">
    <declaration type="KMeansPlusPlusClusterer&lt;DoublePoint&gt;" name="transformer" />
    <declaration type="DoublePoint[][]" name="points" />
  </method>
  <comment>Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the "License"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

      http:www.apache.orglicensesLICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.</comment>
</class>
