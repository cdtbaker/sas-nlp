<?xml version="1.0" encoding="UTF-8"?>
<class name="CircleProblem">
  <javadoc>
    <text>Class that models a circle.
 * The parameters of problem are:
 * &lt;ul&gt;
 * &lt;li&gt;the x-coordinate of the circle center,&lt;/li&gt;
 * &lt;li&gt;the y-coordinate of the circle center,&lt;/li&gt;
 * &lt;li&gt;the radius of the circle.&lt;/li&gt;
 * &lt;/ul&gt;
 * The model functions are:
 * &lt;ul&gt;
 * &lt;li&gt;for each triplet (cx, cy, r), the (x, y) coordinates of a point on the
 * corresponding circle.&lt;/li&gt;
 * &lt;/ul&gt;</text>
  </javadoc>
  <javadoc>
    <text>Cloud of points assumed to be fitted by a circle.</text>
  </javadoc>
  <declaration type="ArrayList&lt;double[]&gt;" name="points" />
  <javadoc>
    <text>Error on the x-coordinate of the points.</text>
  </javadoc>
  <declaration type="double" name="xSigma" />
  <javadoc>
    <text>Error on the y-coordinate of the points.</text>
  </javadoc>
  <declaration type="double" name="ySigma" />
  <javadoc>
    <text>Number of points on the circumference (when searching which
 * model point is closest to a given "observation".</text>
  </javadoc>
  <declaration type="int" name="resolution" />
  <javadoc>
    <param>xError Assumed error for the x-coordinate of the circle points.</param>
    <param>yError Assumed error for the y-coordinate of the circle points.</param>
    <param>searchResolution Number of points to try when searching the one
 * that is closest to a given "observed" point.</param>
  </javadoc>
  <method type="constructor" name="CircleProblem" />
  <javadoc>
    <param>xError Assumed error for the x-coordinate of the circle points.</param>
    <param>yError Assumed error for the y-coordinate of the circle points.</param>
  </javadoc>
  <method type="constructor" name="CircleProblem" />
  <method type="void" name="addPoint" />
  <method type="double[]" name="target">
    <declaration type="double[]" name="t" />
    <scope>
      <declaration type="double[]" name="p" />
      <declaration type="int" name="index" />
    </scope>
  </method>
  <method type="double[]" name="weight">
    <declaration type="double" name="wX" />
    <declaration type="double" name="wY" />
    <declaration type="double[]" name="w" />
    <scope>
      <declaration type="int" name="index" />
    </scope>
  </method>
  <method type="ModelFunction" name="getModelFunction">
    <method type="double[]" name="value">
      <declaration type="double" name="cx" />
      <declaration type="double" name="cy" />
      <declaration type="double" name="r" />
      <declaration type="double[]" name="model" />
      <declaration type="double" name="deltaTheta" />
      <scope>
        <declaration type="double[]" name="p" />
        <declaration type="double" name="px" />
        <declaration type="double" name="py" />
        <declaration type="double" name="bestX" />
        <declaration type="double" name="bestY" />
        <declaration type="double" name="dMin" />
        <scope>
          <declaration type="double" name="currentX" />
          <declaration type="double" name="currentY" />
          <declaration type="double" name="dX" />
          <declaration type="double" name="dY" />
          <declaration type="double" name="d" />
          <scope />
        </scope>
        <declaration type="int" name="index" />
      </scope>
    </method>
    <comment>Find the angle for which the circle passes closest to the</comment>
    <comment>current point (using a resolution of 100 points along the</comment>
    <comment>circumference).</comment>
  </method>
  <method type="ModelFunctionJacobian" name="getModelFunctionJacobian">
    <method type="double[][]" name="value" />
  </method>
  <method type="double[][]" name="jacobian">
    <declaration type="double[][]" name="jacobian" />
    <scope>
      <declaration type="int" name="index" />
      <declaration type="double[]" name="p" />
    </scope>
    <comment>Partial derivative wrt x-coordinate of center.</comment>
    <comment>Partial derivative wrt y-coordinate of center.</comment>
    <comment>Partial derivative wrt radius.</comment>
  </method>
  <comment>Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the "License"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

      http:www.apache.orglicensesLICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.</comment>
</class>
