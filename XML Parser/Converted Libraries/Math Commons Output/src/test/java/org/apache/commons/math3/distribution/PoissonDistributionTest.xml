<?xml version="1.0" encoding="UTF-8"?>
<class name="PoissonDistributionTest">
  <javadoc>
    <text>&lt;code&gt;PoissonDistributionTest&lt;/code&gt;</text>
    <version>$Id: PoissonDistributionTest.java 1370224 2012-08-07 12:43:41Z sebb $</version>
  </javadoc>
  <javadoc>
    <text>Poisson parameter value for the test distribution.</text>
  </javadoc>
  <declaration type="double" name="DEFAULT_TEST_POISSON_PARAMETER" />
  <javadoc>
    <text>Constructor.</text>
  </javadoc>
  <method type="constructor" name="PoissonDistributionTest" />
  <javadoc>
    <text>Creates the default discrete distribution instance to use in tests.</text>
  </javadoc>
  <method type="IntegerDistribution" name="makeDistribution" />
  <javadoc>
    <text>Creates the default probability density test input values.</text>
  </javadoc>
  <method type="int[]" name="makeDensityTestPoints" />
  <javadoc>
    <text>Creates the default probability density test expected values.
 * These and all other test values are generated by R, version 1.8.1</text>
  </javadoc>
  <method type="double[]" name="makeDensityTestValues" />
  <javadoc>
    <text>Creates the default cumulative probability density test input values.</text>
  </javadoc>
  <method type="int[]" name="makeCumulativeTestPoints" />
  <javadoc>
    <text>Creates the default cumulative probability density test expected values.</text>
  </javadoc>
  <method type="double[]" name="makeCumulativeTestValues" />
  <javadoc>
    <text>Creates the default inverse cumulative probability test input values.</text>
  </javadoc>
  <method type="double[]" name="makeInverseCumulativeTestPoints">
    <declaration type="IntegerDistribution" name="dist" />
  </method>
  <javadoc>
    <text>Creates the default inverse cumulative probability density test expected values.</text>
  </javadoc>
  <method type="int[]" name="makeInverseCumulativeTestValues" />
  <javadoc>
    <text>Test the normal approximation of the Poisson distribution by
 * calculating P(90 &amp;le; X &amp;le; 110) for X = Po(100) and
 * P(9900 &amp;le; X &amp;le; 10200) for X  = Po(10000)</text>
  </javadoc>
  <method type="void" name="testNormalApproximateProbability">
    <declaration type="PoissonDistribution" name="dist" />
    <declaration type="double" name="result" />
  </method>
  <javadoc>
    <text>Test the degenerate cases of a 0.0 and 1.0 inverse cumulative probability.</text>
  </javadoc>
  <method type="void" name="testDegenerateInverseCumulativeProbability">
    <declaration type="PoissonDistribution" name="dist" />
  </method>
  <method type="void" name="testNegativeMean" />
  <method type="void" name="testMean">
    <declaration type="PoissonDistribution" name="dist" />
  </method>
  <method type="void" name="testLargeMeanCumulativeProbability">
    <declaration type="double" name="mean" />
    <scope>
      <declaration type="PoissonDistribution" name="dist" />
      <declaration type="double" name="x" />
      <declaration type="double" name="dx" />
      <declaration type="double" name="p" />
      <declaration type="double" name="sigma" />
      <scope>
        <scope>
          <scope />
        </scope>
        <scope />
      </scope>
    </scope>
  </method>
  <javadoc>
    <text>JIRA: MATH-282</text>
  </javadoc>
  <method type="void" name="testCumulativeProbabilitySpecial">
    <declaration type="PoissonDistribution" name="dist" />
  </method>
  <method type="void" name="checkProbability">
    <declaration type="double" name="p" />
  </method>
  <method type="void" name="testLargeMeanInverseCumulativeProbability">
    <declaration type="double" name="mean" />
    <scope>
      <declaration type="PoissonDistribution" name="dist" />
      <declaration type="double" name="p" />
      <declaration type="double" name="dp" />
      <scope>
        <scope>
          <declaration type="int" name="ret" />
        </scope>
        <scope />
      </scope>
    </scope>
    <comment>Extended test value: 1E7.  Reduced to limit run time.</comment>
    <comment>Verify that returned value satisties definition</comment>
  </method>
  <method type="void" name="testMoments">
    <declaration type="double" name="tol" />
    <declaration type="PoissonDistribution" name="dist" />
  </method>
  <comment>Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the "License"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

      http:www.apache.orglicensesLICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.</comment>
</class>
