<?xml version="1.0" encoding="UTF-8"?>
<class name="OLSMultipleLinearRegressionTest">
  <declaration type="double[]" name="y" />
  <declaration type="double[][]" name="x" />
  <method type="void" name="setUp" />
  <method type="OLSMultipleLinearRegression" name="createRegression">
    <declaration type="OLSMultipleLinearRegression" name="regression" />
  </method>
  <method type="int" name="getNumberOfRegressors" />
  <method type="int" name="getSampleSize" />
  <method type="void" name="cannotAddSampleDataWithSizeMismatch">
    <declaration type="double[][]" name="y" />
    <declaration type="double[][][]" name="x" />
  </method>
  <method type="void" name="testPerfectFit">
    <declaration type="double[]" name="betaHat" />
    <declaration type="double[]" name="residuals" />
    <declaration type="RealMatrix" name="errors" />
    <declaration type="double[]" name="s" />
    <declaration type="RealMatrix" name="referenceVariance" />
    <method type="double" name="visit">
      <scope />
      <declaration type="double" name="x" />
    </method>
  </method>
  <javadoc>
    <text>Test Longley dataset against certified values provided by NIST.
 * Data Source: J. Longley (1967) "An Appraisal of Least Squares
 * Programs for the Electronic Computer from the Point of View of the User"
 * Journal of the American Statistical Association, vol. 62. September,
 * pp. 819-841.
 * Certified values (and data) are from NIST:
 * http://www.itl.nist.gov/div898/strd/lls/data/LINKS/DATA/Longley.dat</text>
  </javadoc>
  <method type="void" name="testLongly">
    <declaration type="double[][]" name="design" />
    <declaration type="int" name="nobs" />
    <declaration type="int" name="nvars" />
    <declaration type="OLSMultipleLinearRegression" name="model" />
    <declaration type="double[]" name="betaHat" />
    <declaration type="double[]" name="residuals" />
    <declaration type="double[]" name="errors" />
    <comment>Y values are first, then independent vars</comment>
    <comment>Each row is one observation</comment>
    <comment>Estimate the model</comment>
    <comment>Check expected beta values from NIST</comment>
    <comment />
    <comment>Check expected residuals from R</comment>
    <comment>Check standard errors from NIST</comment>
    <comment>Check regression standard error against R</comment>
    <comment>Check R-Square statistics against R</comment>
    <comment>Estimate model without intercept</comment>
    <comment>Check expected beta values from R</comment>
    <comment>Check standard errors from R</comment>
    <comment>Check expected residuals from R</comment>
    <comment>Check regression standard error against R</comment>
    <comment>Check R-Square statistics against R</comment>
  </method>
  <javadoc>
    <text>Test R Swiss fertility dataset against R.
 * Data Source: R datasets package</text>
  </javadoc>
  <method type="void" name="testSwissFertility">
    <declaration type="double[][]" name="design" />
    <declaration type="int" name="nobs" />
    <declaration type="int" name="nvars" />
    <declaration type="OLSMultipleLinearRegression" name="model" />
    <declaration type="double[]" name="betaHat" />
    <declaration type="double[]" name="residuals" />
    <declaration type="double[]" name="errors" />
    <comment>Estimate the model</comment>
    <comment>Check expected beta values from R</comment>
    <comment>Check expected residuals from R</comment>
    <comment>Check standard errors from R</comment>
    <comment>Check regression standard error against R</comment>
    <comment>Check R-Square statistics against R</comment>
    <comment>Estimate the model with no intercept</comment>
    <comment>Check expected beta values from R</comment>
    <comment>Check expected residuals from R</comment>
    <comment>Check standard errors from R</comment>
    <comment>Check regression standard error against R</comment>
    <comment>Check R-Square statistics against R</comment>
  </method>
  <javadoc>
    <text>Test hat matrix computation</text>
  </javadoc>
  <method type="void" name="testHat">
    <declaration type="double[][]" name="design" />
    <declaration type="int" name="nobs" />
    <declaration type="int" name="nvars" />
    <declaration type="OLSMultipleLinearRegression" name="model" />
    <declaration type="RealMatrix" name="hat" />
    <declaration type="double[][]" name="referenceData" />
    <declaration type="int" name="k" />
    <scope>
      <scope />
    </scope>
    <declaration type="double[]" name="residuals" />
    <declaration type="RealMatrix" name="I" />
    <declaration type="double[]" name="hatResiduals" />
    <comment>This example is from "The Hat Matrix in Regression and ANOVA",
 David C. Hoaglin and Roy E. Welsch,
 The American Statistician, Vol. 32, No. 1 (Feb., 1978), pp. 17-22.</comment>
    <comment>Estimate the model</comment>
    <comment>Reference data is upper half of symmetric hat matrix</comment>
    <comment>Check against reference data and verify symmetry</comment>
    <comment>Verify that residuals computed using the hat matrix are close to
 what we get from direct computation, i.e. r = (I - H) y</comment>
  </method>
  <javadoc>
    <text>test calculateYVariance</text>
  </javadoc>
  <method type="void" name="testYVariance">
    <declaration type="OLSMultipleLinearRegression" name="model" />
    <comment>assumes: y = new double[]{11.0, 12.0, 13.0, 14.0, 15.0, 16.0};</comment>
  </method>
  <javadoc>
    <text>Verifies that calculateYVariance and calculateResidualVariance return consistent
 * values with direct variance computation from Y, residuals, respectively.</text>
  </javadoc>
  <method type="void" name="checkVarianceConsistency">
    <declaration type="double[]" name="residuals" />
    <declaration type="RealMatrix" name="X" />
    <comment>Check Y variance consistency</comment>
    <comment>Check residual variance consistency</comment>
  </method>
  <javadoc>
    <text>Verifies that setting X and Y separately has the same effect as newSample(X,Y).</text>
  </javadoc>
  <method type="void" name="testNewSample2">
    <declaration type="double[][]" name="y" />
    <declaration type="double[][][]" name="x" />
    <declaration type="OLSMultipleLinearRegression" name="regression" />
    <declaration type="RealMatrix" name="combinedX" />
    <declaration type="RealVector" name="combinedY" />
    <comment>No intercept</comment>
  </method>
  <method type="void" name="testNewSampleDataYNull" />
  <method type="void" name="testNewSampleDataXNull" />
  <method type="void" name="testWampler1">
    <declaration type="double[][]" name="data" />
    <declaration type="OLSMultipleLinearRegression" name="model" />
    <declaration type="int" name="nvars" />
    <declaration type="int" name="nobs" />
    <declaration type="double[]" name="tmp" />
    <declaration type="int" name="off" />
    <declaration type="int" name="off2" />
    <scope />
    <declaration type="double[]" name="betaHat" />
    <declaration type="double[]" name="se" />
  </method>
  <method type="void" name="testWampler2">
    <declaration type="double[][]" name="data" />
    <declaration type="OLSMultipleLinearRegression" name="model" />
    <declaration type="int" name="nvars" />
    <declaration type="int" name="nobs" />
    <declaration type="double[]" name="tmp" />
    <declaration type="int" name="off" />
    <declaration type="int" name="off2" />
    <scope />
    <declaration type="double[]" name="betaHat" />
    <declaration type="double[]" name="se" />
  </method>
  <method type="void" name="testWampler3">
    <declaration type="double[][]" name="data" />
    <declaration type="OLSMultipleLinearRegression" name="model" />
    <declaration type="int" name="nvars" />
    <declaration type="int" name="nobs" />
    <declaration type="double[]" name="tmp" />
    <declaration type="int" name="off" />
    <declaration type="int" name="off2" />
    <scope />
    <declaration type="double[]" name="betaHat" />
    <declaration type="double[]" name="se" />
    <comment />
  </method>
  <method type="void" name="testWampler4">
    <declaration type="double[][]" name="data" />
    <declaration type="OLSMultipleLinearRegression" name="model" />
    <declaration type="int" name="nvars" />
    <declaration type="int" name="nobs" />
    <declaration type="double[]" name="tmp" />
    <declaration type="int" name="off" />
    <declaration type="int" name="off2" />
    <scope />
    <declaration type="double[]" name="betaHat" />
    <declaration type="double[]" name="se" />
  </method>
  <comment>Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the "License"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

      http:www.apache.orglicensesLICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.</comment>
  <comment>This is a test based on the Wampler1 data set
 http:www.itl.nist.govdiv898strdllsdataWampler1.shtml</comment>
  <comment>This is a test based on the Wampler2 data set
 http:www.itl.nist.govdiv898strdllsdataWampler2.shtml</comment>
  <comment>This is a test based on the Wampler3 data set
 http:www.itl.nist.govdiv898strdllsdataWampler3.shtml</comment>
  <comment>This is a test based on the Wampler4 data set
 http:www.itl.nist.govdiv898strdllsdataWampler4.shtml</comment>
</class>
