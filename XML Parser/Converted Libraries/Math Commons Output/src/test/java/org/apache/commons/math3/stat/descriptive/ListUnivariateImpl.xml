<?xml version="1.0" encoding="UTF-8"?>
<class name="ListUnivariateImpl">
  <javadoc>
    <version>$Id: ListUnivariateImpl.java 1334421 2012-05-05 13:41:04Z tn $</version>
  </javadoc>
  <javadoc>
    <text>Serializable version identifier</text>
  </javadoc>
  <declaration type="long" name="serialVersionUID" />
  <javadoc>
    <text>Holds a reference to a list - GENERICs are going to make
 * our lives easier here as we could only accept List&lt;Number&gt;</text>
  </javadoc>
  <declaration type="List&lt;Object&gt;" name="list" />
  <javadoc>
    <text>Number Transformer maps Objects to Number for us.</text>
  </javadoc>
  <declaration type="NumberTransformer" name="transformer" />
  <javadoc>
    <text>No argument Constructor</text>
  </javadoc>
  <method type="constructor" name="ListUnivariateImpl" />
  <javadoc>
    <text>Construct a ListUnivariate with a specific List.</text>
    <param>list The list that will back this DescriptiveStatistics</param>
  </javadoc>
  <method type="constructor" name="ListUnivariateImpl" />
  <javadoc>
    <text>Construct a ListUnivariate with a specific List.</text>
    <param>list The list that will back this DescriptiveStatistics</param>
    <param>transformer the number transformer used to convert the list items.</param>
  </javadoc>
  <method type="constructor" name="ListUnivariateImpl" />
  <javadoc>
    <text>{@inheritDoc}</text>
  </javadoc>
  <method type="double[]" name="getValues">
    <declaration type="int" name="length" />
    <declaration type="int" name="wSize" />
    <scope />
    <declaration type="double[]" name="copiedArray" />
    <scope />
    <comment>If the window size is not INFINITE_WINDOW AND</comment>
    <comment>the current list is larger that the window size, we need to</comment>
    <comment>take into account only the last n elements of the list</comment>
    <comment>as definied by windowSize</comment>
    <comment>Create an array to hold all values</comment>
  </method>
  <javadoc>
    <text>{@inheritDoc}</text>
  </javadoc>
  <method type="double" name="getElement">
    <declaration type="double" name="value" />
    <declaration type="int" name="calcIndex" />
    <declaration type="int" name="wSize" />
    <scope />
    <scope />
    <scope />
  </method>
  <javadoc>
    <text>{@inheritDoc}</text>
  </javadoc>
  <method type="long" name="getN">
    <declaration type="int" name="n" />
    <declaration type="int" name="wSize" />
    <scope>
      <scope />
      <scope />
    </scope>
    <scope />
  </method>
  <javadoc>
    <text>{@inheritDoc}</text>
  </javadoc>
  <method type="void" name="addValue" />
  <javadoc>
    <text>Adds an object to this list.</text>
    <param>o Object to add to the list</param>
  </javadoc>
  <method type="void" name="addObject" />
  <javadoc>
    <text>Clears all statistics.
 * &lt;p&gt;
 * &lt;strong&gt;N.B.: &lt;/strong&gt; This method has the side effect of clearing the underlying list.</text>
  </javadoc>
  <method type="void" name="clear" />
  <javadoc>
    <text>Apply the given statistic to this univariate collection.</text>
    <param>stat the statistic to apply</param>
    <return>the computed value of the statistic.</return>
  </javadoc>
  <method type="double" name="apply">
    <declaration type="double[]" name="v" />
    <scope />
  </method>
  <javadoc>
    <text>Access the number transformer.</text>
    <return>the number transformer.</return>
  </javadoc>
  <method type="NumberTransformer" name="getTransformer" />
  <javadoc>
    <text>Modify the number transformer.</text>
    <param>transformer the new number transformer.</param>
  </javadoc>
  <method type="void" name="setTransformer" />
  <javadoc>
    <text>{@inheritDoc}</text>
  </javadoc>
  <method type="void" name="setWindowSize">
    <declaration type="int" name="extra" />
    <scope />
    <comment>Discard elements from the front of the list if the windowSize is less than</comment>
    <comment>the size of the list.</comment>
  </method>
  <comment>Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the "License"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

      http:www.apache.orglicensesLICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.</comment>
</class>
