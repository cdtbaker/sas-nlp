<?xml version="1.0" encoding="UTF-8"?>
<class name="BaseMultivariateOptimizer">
  <javadoc>
    <text>Base class for implementing optimizers for multivariate functions.
 * It contains the boiler-plate code for initial guess and bounds
 * specifications.
 * &lt;em&gt;It is not a "user" class.&lt;/em&gt;</text>
    <param>&lt;PAIR&gt;
 *  Type of the point/value pair returned by the optimization
 * algorithm.</param>
    <version>$Id: BaseMultivariateOptimizer.java 1443444 2013-02-07 12:41:36Z erans $</version>
    <since>3.1</since>
  </javadoc>
  <javadoc>
    <text>Initial guess.</text>
  </javadoc>
  <declaration type="double[]" name="start" />
  <javadoc>
    <text>Lower bounds.</text>
  </javadoc>
  <declaration type="double[]" name="lowerBound" />
  <javadoc>
    <text>Upper bounds.</text>
  </javadoc>
  <declaration type="double[]" name="upperBound" />
  <javadoc>
    <param>checker Convergence checker.</param>
  </javadoc>
  <method type="constructor" name="BaseMultivariateOptimizer" />
  <javadoc>
    <text>{@inheritDoc}</text>
    <param>optData Optimization data. In addition to those documented in{@link BaseOptimizer#parseOptimizationData(OptimizationData[]) BaseOptimizer},
 * this method will register the following data:
 * &lt;ul&gt;
 * &lt;li&gt;{@link InitialGuess}&lt;/li&gt;
 * &lt;li&gt;{@link SimpleBounds}&lt;/li&gt;
 * &lt;/ul&gt;</param>
    <return>{@inheritDoc}</return>
  </javadoc>
  <method type="PAIR" name="optimize">
    <comment>Perform optimization.</comment>
  </method>
  <javadoc>
    <text>Scans the list of (required and optional) optimization data that
 * characterize the problem.</text>
    <param>optData Optimization data. The following data will be looked for:
 * &lt;ul&gt;
 * &lt;li&gt;{@link InitialGuess}&lt;/li&gt;
 * &lt;li&gt;{@link SimpleBounds}&lt;/li&gt;
 * &lt;/ul&gt;</param>
  </javadoc>
  <method type="void" name="parseOptimizationData">
    <scope>
      <scope />
      <scope>
        <declaration type="SimpleBounds" name="bounds" />
      </scope>
    </scope>
    <comment>Allow base class to register its own data.</comment>
    <comment>The existing values (as set by the previous call) are reused if</comment>
    <comment>not provided in the argument list.</comment>
    <comment>Check input consistency.</comment>
  </method>
  <javadoc>
    <text>Gets the initial guess.</text>
    <return>the initial guess, or {@code null} if not set.</return>
  </javadoc>
  <method type="double[]" name="getStartPoint" />
  <javadoc>
    <return>the lower bounds, or {@code null} if not set.</return>
  </javadoc>
  <method type="double[]" name="getLowerBound" />
  <javadoc>
    <return>the upper bounds, or {@code null} if not set.</return>
  </javadoc>
  <method type="double[]" name="getUpperBound" />
  <javadoc>
    <text>Check parameters consistency.</text>
  </javadoc>
  <method type="void" name="checkParameters">
    <scope>
      <declaration type="int" name="dim" />
      <scope>
        <scope />
        <scope>
          <declaration type="double" name="v" />
          <declaration type="double" name="lo" />
          <scope />
        </scope>
      </scope>
      <scope>
        <scope />
        <scope>
          <declaration type="double" name="v" />
          <declaration type="double" name="hi" />
          <scope />
        </scope>
      </scope>
    </scope>
  </method>
  <comment>Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the "License"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

      http:www.apache.orglicensesLICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.</comment>
</class>
