<?xml version="1.0" encoding="UTF-8"?>
<class name="DividedDifferenceInterpolator">
  <javadoc>
    <text>Implements the &lt;a href="
 * http://mathworld.wolfram.com/NewtonsDividedDifferenceInterpolationFormula.html"&gt;
 * Divided Difference Algorithm&lt;/a&gt; for interpolation of real univariate
 * functions. For reference, see &lt;b&gt;Introduction to Numerical Analysis&lt;/b&gt;,
 * ISBN 038795452X, chapter 2.
 * &lt;p&gt;
 * The actual code of Neville's evaluation is in PolynomialFunctionLagrangeForm,
 * this class provides an easy-to-use interface to it.&lt;/p&gt;</text>
    <version>$Id: DividedDifferenceInterpolator.java 1385313 2012-09-16 16:35:23Z tn $</version>
    <since>1.2</since>
  </javadoc>
  <javadoc>
    <text>serializable version identifier</text>
  </javadoc>
  <declaration type="long" name="serialVersionUID" />
  <javadoc>
    <text>Compute an interpolating function for the dataset.</text>
    <param>x Interpolating points array.</param>
    <param>y Interpolating values array.</param>
    <return>a function which interpolates the dataset.</return>
    <throws>DimensionMismatchException if the array lengths are different.</throws>
    <throws>NumberIsTooSmallException if the number of points is less than 2.</throws>
    <throws>NonMonotonicSequenceException if {@code x} is not sorted in
 * strictly increasing order.</throws>
  </javadoc>
  <method type="PolynomialFunctionNewtonForm" name="interpolate">
    <declaration type="double[]" name="c" />
    <declaration type="double[]" name="a" />
    <javadoc>
      <text>a[] and c[] are defined in the general formula of Newton form:
 * p(x) = a[0] + a[1](x-c[0]) + a[2](x-c[0])(x-c[1]) + ... +
 * a[n](x-c[0])(x-c[1])...(x-c[n-1])</text>
    </javadoc>
    <javadoc>
      <text>When used for interpolation, the Newton form formula becomes
 * p(x) = f[x0] + f[x0,x1](x-x0) + f[x0,x1,x2](x-x0)(x-x1) + ... +
 * f[x0,x1,...,x[n-1]](x-x0)(x-x1)...(x-x[n-2])
 * Therefore, a[k] = f[x0,x1,...,xk], c[k] = x[k].
 * &lt;p&gt;
 * Note x[], y[], a[] have the same length but c[]'s size is one less.&lt;/p&gt;</text>
    </javadoc>
  </method>
  <javadoc>
    <text>Return a copy of the divided difference array.
 * &lt;p&gt;
 * The divided difference array is defined recursively by &lt;pre&gt;
 * f[x0] = f(x0)
 * f[x0,x1,...,xk] = (f[x1,...,xk] - f[x0,...,x[k-1]]) / (xk - x0)
 * &lt;/pre&gt;&lt;/p&gt;
 * &lt;p&gt;
 * The computational complexity is O(N^2).&lt;/p&gt;</text>
    <param>x Interpolating points array.</param>
    <param>y Interpolating values array.</param>
    <return>a fresh copy of the divided difference array.</return>
    <throws>DimensionMismatchException if the array lengths are different.</throws>
    <throws>NumberIsTooSmallException if the number of points is less than 2.</throws>
    <throws>NonMonotonicSequenceExceptionif {@code x} is not sorted in strictly increasing order.</throws>
  </javadoc>
  <method type="double[]" name="computeDividedDifference">
    <declaration type="double[]" name="divdiff" />
    <declaration type="int" name="n" />
    <declaration type="double[]" name="a" />
    <scope>
      <scope>
        <declaration type="double" name="denominator" />
      </scope>
    </scope>
    <comment>initialization</comment>
  </method>
  <comment>Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the "License"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

      http:www.apache.orglicensesLICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.</comment>
</class>
