<?xml version="1.0" encoding="UTF-8"?>
<class name="UniformRealDistribution">
  <javadoc>
    <text>Implementation of the uniform real distribution.</text>
    <see>&lt;a href="http://en.wikipedia.org/wiki/Uniform_distribution_(continuous)"
 * &gt;Uniform distribution (continuous), at Wikipedia&lt;/a&gt;</see>
    <version>$Id: UniformRealDistribution.java 1462020 2013-03-28 10:24:45Z luc $</version>
    <since>3.0</since>
  </javadoc>
  <javadoc>
    <text>Default inverse cumulative probability accuracy.</text>
    <deprecated>as of 3.2 not used anymore, will be removed in 4.0</deprecated>
  </javadoc>
  <declaration type="double" name="DEFAULT_INVERSE_ABSOLUTE_ACCURACY" />
  <javadoc>
    <text>Serializable version identifier.</text>
  </javadoc>
  <declaration type="long" name="serialVersionUID" />
  <javadoc>
    <text>Lower bound of this distribution (inclusive).</text>
  </javadoc>
  <declaration type="double" name="lower" />
  <javadoc>
    <text>Upper bound of this distribution (exclusive).</text>
  </javadoc>
  <declaration type="double" name="upper" />
  <javadoc>
    <text>Create a standard uniform real distribution with lower bound (inclusive)
 * equal to zero and upper bound (exclusive) equal to one.</text>
  </javadoc>
  <method type="constructor" name="UniformRealDistribution" />
  <javadoc>
    <text>Create a uniform real distribution using the given lower and upper
 * bounds.</text>
    <param>lower Lower bound of this distribution (inclusive).</param>
    <param>upper Upper bound of this distribution (exclusive).</param>
    <throws>NumberIsTooLargeException if {@code lower &gt;= upper}.</throws>
  </javadoc>
  <method type="constructor" name="UniformRealDistribution" />
  <javadoc>
    <text>Create a uniform distribution.</text>
    <param>lower Lower bound of this distribution (inclusive).</param>
    <param>upper Upper bound of this distribution (exclusive).</param>
    <param>inverseCumAccuracy Inverse cumulative probability accuracy.</param>
    <throws>NumberIsTooLargeException if {@code lower &gt;= upper}.</throws>
    <deprecated>as of 3.2, inverse CDF is now calculated analytically, use{@link #UniformRealDistribution(double,double)} instead.</deprecated>
  </javadoc>
  <method type="constructor" name="UniformRealDistribution" />
  <javadoc>
    <text>Creates a uniform distribution.</text>
    <param>rng Random number generator.</param>
    <param>lower Lower bound of this distribution (inclusive).</param>
    <param>upper Upper bound of this distribution (exclusive).</param>
    <param>inverseCumAccuracy Inverse cumulative probability accuracy.</param>
    <throws>NumberIsTooLargeException if {@code lower &gt;= upper}.</throws>
    <since>3.1</since>
    <deprecated>as of 3.2, inverse CDF is now calculated analytically, use{@link #UniformRealDistribution(RandomGenerator,double,double)}instead.</deprecated>
  </javadoc>
  <method type="constructor" name="UniformRealDistribution" />
  <javadoc>
    <text>Creates a uniform distribution.</text>
    <param>rng Random number generator.</param>
    <param>lower Lower bound of this distribution (inclusive).</param>
    <param>upper Upper bound of this distribution (exclusive).</param>
    <throws>NumberIsTooLargeException if {@code lower &gt;= upper}.</throws>
    <since>3.1</since>
  </javadoc>
  <method type="constructor" name="UniformRealDistribution">
    <scope />
  </method>
  <javadoc>
    <text>{@inheritDoc}</text>
  </javadoc>
  <method type="double" name="density">
    <scope />
  </method>
  <javadoc>
    <text>{@inheritDoc}</text>
  </javadoc>
  <method type="double" name="cumulativeProbability">
    <scope />
    <scope />
  </method>
  <method type="double" name="inverseCumulativeProbability">
    <scope />
  </method>
  <javadoc>
    <text>{@inheritDoc}For lower bound {@code lower} and upper bound {@code upper}, the mean is{@code 0.5 * (lower + upper)}.</text>
  </javadoc>
  <method type="double" name="getNumericalMean" />
  <javadoc>
    <text>{@inheritDoc}For lower bound {@code lower} and upper bound {@code upper}, the
 * variance is {@code (upper - lower)^2 / 12}.</text>
  </javadoc>
  <method type="double" name="getNumericalVariance">
    <declaration type="double" name="ul" />
  </method>
  <javadoc>
    <text>{@inheritDoc}The lower bound of the support is equal to the lower bound parameter
 * of the distribution.</text>
    <return>lower bound of the support</return>
  </javadoc>
  <method type="double" name="getSupportLowerBound" />
  <javadoc>
    <text>{@inheritDoc}The upper bound of the support is equal to the upper bound parameter
 * of the distribution.</text>
    <return>upper bound of the support</return>
  </javadoc>
  <method type="double" name="getSupportUpperBound" />
  <javadoc>
    <text>{@inheritDoc}</text>
  </javadoc>
  <method type="boolean" name="isSupportLowerBoundInclusive" />
  <javadoc>
    <text>{@inheritDoc}</text>
  </javadoc>
  <method type="boolean" name="isSupportUpperBoundInclusive" />
  <javadoc>
    <text>{@inheritDoc}The support of this distribution is connected.</text>
    <return>{@code true}</return>
  </javadoc>
  <method type="boolean" name="isSupportConnected" />
  <javadoc>
    <text>{@inheritDoc}</text>
  </javadoc>
  <method type="double" name="sample">
    <declaration type="double" name="u" />
  </method>
  <comment>Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the "License"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

      http:www.apache.orglicensesLICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.</comment>
</class>
