<?xml version="1.0" encoding="UTF-8"?>
<class name="Logistic">
  <javadoc>
    <text>&lt;a href="http://en.wikipedia.org/wiki/Generalised_logistic_function"&gt;
 * Generalised logistic&lt;/a&gt; function.</text>
    <since>3.0</since>
    <version>$Id: Logistic.java 1391927 2012-09-30 00:03:30Z erans $</version>
  </javadoc>
  <javadoc>
    <text>Lower asymptote.</text>
  </javadoc>
  <declaration type="double" name="a" />
  <javadoc>
    <text>Upper asymptote.</text>
  </javadoc>
  <declaration type="double" name="k" />
  <javadoc>
    <text>Growth rate.</text>
  </javadoc>
  <declaration type="double" name="b" />
  <javadoc>
    <text>Parameter that affects near which asymptote maximum growth occurs.</text>
  </javadoc>
  <declaration type="double" name="oneOverN" />
  <javadoc>
    <text>Parameter that affects the position of the curve along the ordinate axis.</text>
  </javadoc>
  <declaration type="double" name="q" />
  <javadoc>
    <text>Abscissa of maximum growth.</text>
  </javadoc>
  <declaration type="double" name="m" />
  <javadoc>
    <param>k If {@code b &gt; 0}, value of the function for x going towards +&amp;infin;.
 * If {@code b &lt; 0}, value of the function for x going towards -&amp;infin;.</param>
    <param>m Abscissa of maximum growth.</param>
    <param>b Growth rate.</param>
    <param>q Parameter that affects the position of the curve along the
 * ordinate axis.</param>
    <param>a If {@code b &gt; 0}, value of the function for x going towards -&amp;infin;.
 * If {@code b &lt; 0}, value of the function for x going towards +&amp;infin;.</param>
    <param>n Parameter that affects near which asymptote the maximum
 * growth occurs.</param>
    <throws>NotStrictlyPositiveException if {@code n &lt;= 0}.</throws>
  </javadoc>
  <method type="constructor" name="Logistic">
    <scope />
  </method>
  <javadoc>
    <text>{@inheritDoc}</text>
  </javadoc>
  <method type="double" name="value" />
  <javadoc>
    <text>{@inheritDoc}</text>
    <deprecated>as of 3.1, replaced by {@link #value(DerivativeStructure)}</deprecated>
  </javadoc>
  <method type="UnivariateFunction" name="derivative" />
  <javadoc>
    <text>Parametric function where the input array contains the parameters of
 * the logit function, ordered as follows:
 * &lt;ul&gt;
 * &lt;li&gt;Lower asymptote&lt;/li&gt;
 * &lt;li&gt;Higher asymptote&lt;/li&gt;
 * &lt;/ul&gt;</text>
  </javadoc>
  <javadoc>
    <text>Computes the value of the sigmoid at {@code x}.</text>
    <param>x Value for which the function must be computed.</param>
    <param>param Values for {@code k}, {@code m}, {@code b}, {@code q},{@code a} and  {@code n}.</param>
    <return>the value of the function.</return>
    <throws>NullArgumentException if {@code param} is {@code null}.</throws>
    <throws>DimensionMismatchException if the size of {@code param} is
 * not 6.</throws>
    <throws>NotStrictlyPositiveException if {@code param[5] &lt;= 0}.</throws>
  </javadoc>
  <method type="double" name="value" />
  <javadoc>
    <text>Computes the value of the gradient at {@code x}.
 * The components of the gradient vector are the partial
 * derivatives of the function with respect to each of the
 * &lt;em&gt;parameters&lt;/em&gt;.</text>
    <param>x Value at which the gradient must be computed.</param>
    <param>param Values for {@code k}, {@code m}, {@code b}, {@code q},{@code a} and  {@code n}.</param>
    <return>the gradient vector at {@code x}.</return>
    <throws>NullArgumentException if {@code param} is {@code null}.</throws>
    <throws>DimensionMismatchException if the size of {@code param} is
 * not 6.</throws>
    <throws>NotStrictlyPositiveException if {@code param[5] &lt;= 0}.</throws>
  </javadoc>
  <method type="double[]" name="gradient">
    <declaration type="double" name="b" />
    <declaration type="double" name="q" />
    <declaration type="double" name="mMinusX" />
    <declaration type="double" name="oneOverN" />
    <declaration type="double" name="exp" />
    <declaration type="double" name="qExp" />
    <declaration type="double" name="qExp1" />
    <declaration type="double" name="factor1" />
    <declaration type="double" name="factor2" />
    <declaration type="double" name="gk" />
    <declaration type="double" name="gm" />
    <declaration type="double" name="gb" />
    <declaration type="double" name="gq" />
    <declaration type="double" name="ga" />
    <declaration type="double" name="gn" />
    <comment>Components of the gradient.</comment>
  </method>
  <javadoc>
    <text>Validates parameters to ensure they are appropriate for the evaluation of
 * the {@link #value(double,double[])} and {@link #gradient(double,double[])}methods.</text>
    <param>param Values for {@code k}, {@code m}, {@code b}, {@code q},{@code a} and {@code n}.</param>
    <throws>NullArgumentException if {@code param} is {@code null}.</throws>
    <throws>DimensionMismatchException if the size of {@code param} is
 * not 6.</throws>
    <throws>NotStrictlyPositiveException if {@code param[5] &lt;= 0}.</throws>
  </javadoc>
  <method type="void" name="validateParameters">
    <scope />
    <scope />
    <scope />
  </method>
  <javadoc>
    <param>mMinusX {@code m - x}.</param>
    <param>k {@code k}.</param>
    <param>b {@code b}.</param>
    <param>q {@code q}.</param>
    <param>a {@code a}.</param>
    <param>oneOverN {@code 1 / n}.</param>
    <return>the value of the function.</return>
  </javadoc>
  <method type="double" name="value" />
  <javadoc>
    <text>{@inheritDoc}</text>
    <since>3.1</since>
  </javadoc>
  <method type="DerivativeStructure" name="value" />
  <comment>Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the "License"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

      http:www.apache.orglicensesLICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.</comment>
</class>
