<?xml version="1.0" encoding="UTF-8"?>
<class name="GaussIntegratorFactory">
  <javadoc>
    <text>Class that provides different ways to compute the nodes and weights to be
 * used by the {@link GaussIntegrator Gaussian integration rule}.</text>
    <since>3.1</since>
    <version>$Id: GaussIntegratorFactory.java 1455194 2013-03-11 15:45:54Z luc $</version>
  </javadoc>
  <javadoc>
    <text>Generator of Gauss-Legendre integrators.</text>
  </javadoc>
  <declaration type="BaseRuleFactory&lt;Double&gt;" name="legendre" />
  <javadoc>
    <text>Generator of Gauss-Legendre integrators.</text>
  </javadoc>
  <declaration type="BaseRuleFactory&lt;BigDecimal&gt;" name="legendreHighPrecision" />
  <javadoc>
    <text>Creates an integrator of the given order, and whose call to the{@link GaussIntegrator#integrate(org.apache.commons.math3.analysis.UnivariateFunction)integrate} method will perform an integration on the natural interval{@code [-1 , 1]}.</text>
    <param>numberOfPoints Order of the integration rule.</param>
    <return>a Gauss-Legendre integrator.</return>
  </javadoc>
  <method type="GaussIntegrator" name="legendre" />
  <javadoc>
    <text>Creates an integrator of the given order, and whose call to the{@link GaussIntegrator#integrate(org.apache.commons.math3.analysis.UnivariateFunction)integrate} method will perform an integration on the given interval.</text>
    <param>numberOfPoints Order of the integration rule.</param>
    <param>lowerBound Lower bound of the integration interval.</param>
    <param>upperBound Upper bound of the integration interval.</param>
    <return>a Gauss-Legendre integrator.</return>
    <throws>NotStrictlyPositiveException if number of points is not positive</throws>
  </javadoc>
  <method type="GaussIntegrator" name="legendre" />
  <javadoc>
    <text>Creates an integrator of the given order, and whose call to the{@link GaussIntegrator#integrate(org.apache.commons.math3.analysis.UnivariateFunction)integrate} method will perform an integration on the natural interval{@code [-1 , 1]}.</text>
    <param>numberOfPoints Order of the integration rule.</param>
    <return>a Gauss-Legendre integrator.</return>
    <throws>NotStrictlyPositiveException if number of points is not positive</throws>
  </javadoc>
  <method type="GaussIntegrator" name="legendreHighPrecision" />
  <javadoc>
    <text>Creates an integrator of the given order, and whose call to the{@link GaussIntegrator#integrate(org.apache.commons.math3.analysis.UnivariateFunction)integrate} method will perform an integration on the given interval.</text>
    <param>numberOfPoints Order of the integration rule.</param>
    <param>lowerBound Lower bound of the integration interval.</param>
    <param>upperBound Upper bound of the integration interval.</param>
    <return>a Gauss-Legendre integrator.</return>
    <throws>NotStrictlyPositiveException if number of points is not positive</throws>
  </javadoc>
  <method type="GaussIntegrator" name="legendreHighPrecision" />
  <javadoc>
    <param>factory Integration rule factory.</param>
    <param>numberOfPoints Order of the integration rule.</param>
    <return>the integration nodes and weights.</return>
    <throws>NotStrictlyPositiveException if number of points is not positive</throws>
    <throws>DimensionMismatchException if the elements of the rule pair do not
 * have the same length.</throws>
  </javadoc>
  <method type="Pair&lt;double[],double[]&gt;" name="getRule" />
  <javadoc>
    <text>Performs a change of variable so that the integration can be performed
 * on an arbitrary interval {@code [a, b]}.
 * It is assumed that the natural interval is {@code [-1, 1]}.</text>
    <param>rule Original points and weights.</param>
    <param>a Lower bound of the integration interval.</param>
    <param>b Lower bound of the integration interval.</param>
    <return>the points and weights adapted to the new interval.</return>
  </javadoc>
  <method type="Pair&lt;double[],double[]&gt;" name="transform">
    <declaration type="double[]" name="points" />
    <declaration type="double[]" name="weights" />
    <declaration type="double" name="scale" />
    <declaration type="double" name="shift" />
    <scope />
    <comment>Scaling</comment>
  </method>
  <comment>Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the "License"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

      http:www.apache.orglicensesLICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.</comment>
</class>
