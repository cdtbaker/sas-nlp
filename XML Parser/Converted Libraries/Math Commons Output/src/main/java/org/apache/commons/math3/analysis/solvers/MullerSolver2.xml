<?xml version="1.0" encoding="UTF-8"?>
<class name="MullerSolver2">
  <javadoc>
    <text>This class implements the &lt;a href="http://mathworld.wolfram.com/MullersMethod.html"&gt;
 * Muller's Method&lt;/a&gt; for root finding of real univariate functions. For
 * reference, see &lt;b&gt;Elementary Numerical Analysis&lt;/b&gt;, ISBN 0070124477,
 * chapter 3.
 * &lt;p&gt;
 * Muller's method applies to both real and complex functions, but here we
 * restrict ourselves to real functions.
 * This class differs from {@link MullerSolver} in the way it avoids complex
 * operations.&lt;/p&gt;
 * Except for the initial [min, max], it does not require bracketing
 * condition, e.g. f(x0), f(x1), f(x2) can have the same sign. If complex
 * number arises in the computation, we simply use its modulus as real
 * approximation.&lt;/p&gt;
 * &lt;p&gt;
 * Because the interval may not be bracketing, bisection alternative is
 * not applicable here. However in practice our treatment usually works
 * well, especially near real zeroes where the imaginary part of complex
 * approximation is often negligible.&lt;/p&gt;
 * &lt;p&gt;
 * The formulas here do not use divided differences directly.&lt;/p&gt;</text>
    <version>$Id: MullerSolver2.java 1379560 2012-08-31 19:40:30Z erans $</version>
    <since>1.2</since>
    <see>MullerSolver</see>
  </javadoc>
  <javadoc>
    <text>Default absolute accuracy.</text>
  </javadoc>
  <declaration type="double" name="DEFAULT_ABSOLUTE_ACCURACY" />
  <javadoc>
    <text>Construct a solver with default accuracy (1e-6).</text>
  </javadoc>
  <method type="constructor" name="MullerSolver2" />
  <javadoc>
    <text>Construct a solver.</text>
    <param>absoluteAccuracy Absolute accuracy.</param>
  </javadoc>
  <method type="constructor" name="MullerSolver2" />
  <javadoc>
    <text>Construct a solver.</text>
    <param>relativeAccuracy Relative accuracy.</param>
    <param>absoluteAccuracy Absolute accuracy.</param>
  </javadoc>
  <method type="constructor" name="MullerSolver2" />
  <javadoc>
    <text>{@inheritDoc}</text>
  </javadoc>
  <method type="double" name="doSolve">
    <declaration type="double" name="min" />
    <declaration type="double" name="max" />
    <declaration type="double" name="relativeAccuracy" />
    <declaration type="double" name="absoluteAccuracy" />
    <declaration type="double" name="functionValueAccuracy" />
    <declaration type="double" name="x0" />
    <declaration type="double" name="y0" />
    <scope />
    <declaration type="double" name="x1" />
    <declaration type="double" name="y1" />
    <scope />
    <scope />
    <declaration type="double" name="x2" />
    <declaration type="double" name="y2" />
    <declaration type="double" name="oldx" />
    <scope>
      <declaration type="double" name="q" />
      <declaration type="double" name="a" />
      <declaration type="double" name="b" />
      <declaration type="double" name="c" />
      <declaration type="double" name="delta" />
      <declaration type="double" name="x" />
      <declaration type="double" name="denominator" />
      <scope>
        <declaration type="double" name="dplus" />
        <declaration type="double" name="dminus" />
      </scope>
      <scope />
      <scope>
        <scope />
      </scope>
      <scope />
      <declaration type="double" name="y" />
      <declaration type="double" name="tolerance" />
      <scope />
    </scope>
    <comment>x2 is the last root approximation</comment>
    <comment>x is the new approximation and new x2 for next round</comment>
    <comment>x0 &lt; x1 &lt; x2 does not hold here</comment>
    <comment>quadratic interpolation through x0, x1, x2</comment>
    <comment>choose a denominator larger in magnitude</comment>
    <comment>take the modulus of (B +/- FastMath.sqrt(delta))</comment>
    <comment>perturb x if it exactly coincides with x1 or x2</comment>
    <comment>the equality tests here are intentional</comment>
    <comment>extremely rare case, get a random number to skip it</comment>
    <comment>check for convergence</comment>
    <comment>prepare the next iteration</comment>
  </method>
  <comment>Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the "License"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

      http:www.apache.orglicensesLICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.</comment>
</class>
