<?xml version="1.0" encoding="UTF-8"?>
<class name="GradientMultivariateOptimizer">
  <javadoc>
    <text>Base class for implementing optimizers for multivariate scalar
 * differentiable functions.
 * It contains boiler-plate code for dealing with gradient evaluation.</text>
    <version>$Id: GradientMultivariateOptimizer.java 1443444 2013-02-07 12:41:36Z erans $</version>
    <since>3.1</since>
  </javadoc>
  <javadoc>
    <text>Gradient of the objective function.</text>
  </javadoc>
  <declaration type="MultivariateVectorFunction" name="gradient" />
  <javadoc>
    <param>checker Convergence checker.</param>
  </javadoc>
  <method type="constructor" name="GradientMultivariateOptimizer" />
  <javadoc>
    <text>Compute the gradient vector.</text>
    <param>params Point at which the gradient must be evaluated.</param>
    <return>the gradient at the specified point.</return>
  </javadoc>
  <method type="double[]" name="computeObjectiveGradient" />
  <javadoc>
    <text>{@inheritDoc}</text>
    <param>optData Optimization data. In addition to those documented in{@link MultivariateOptimizer#parseOptimizationData(OptimizationData[])MultivariateOptimizer}, this method will register the following data:
 * &lt;ul&gt;
 * &lt;li&gt;{@link ObjectiveFunctionGradient}&lt;/li&gt;
 * &lt;/ul&gt;</param>
    <return>{@inheritDoc}</return>
    <throws>TooManyEvaluationsException if the maximal number of
 * evaluations (of the objective function) is exceeded.</throws>
  </javadoc>
  <method type="PointValuePair" name="optimize">
    <comment>Set up base class and perform computation.</comment>
  </method>
  <javadoc>
    <text>Scans the list of (required and optional) optimization data that
 * characterize the problem.</text>
    <param>optData Optimization data.
 * The following data will be looked for:
 * &lt;ul&gt;
 * &lt;li&gt;{@link ObjectiveFunctionGradient}&lt;/li&gt;
 * &lt;/ul&gt;</param>
  </javadoc>
  <method type="void" name="parseOptimizationData">
    <scope>
      <scope />
    </scope>
    <comment>Allow base class to register its own data.</comment>
    <comment>The existing values (as set by the previous call) are reused if</comment>
    <comment>not provided in the argument list.</comment>
    <comment>If more data must be parsed, this statement _must_ be</comment>
    <comment>changed to "continue".</comment>
  </method>
  <comment>Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the "License"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

      http:www.apache.orglicensesLICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.</comment>
</class>
