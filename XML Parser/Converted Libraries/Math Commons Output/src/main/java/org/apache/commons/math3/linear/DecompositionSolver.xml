<?xml version="1.0" encoding="UTF-8"?>
<class name="DecompositionSolver">
  <javadoc>
    <text>Interface handling decomposition algorithms that can solve A &amp;times; X = B.
 * &lt;p&gt;Decomposition algorithms decompose an A matrix has a product of several specific
 * matrices from which they can solve A &amp;times; X = B in least squares sense: they find X
 * such that ||A &amp;times; X - B|| is minimal.&lt;/p&gt;
 * &lt;p&gt;Some solvers like {@link LUDecomposition} can only find the solution for
 * square matrices and when the solution is an exact linear solution, i.e. when
 * ||A &amp;times; X - B|| is exactly 0. Other solvers can also find solutions
 * with non-square matrix A and with non-null minimal norm. If an exact linear
 * solution exists it is also the minimal norm solution.&lt;/p&gt;</text>
    <version>$Id: DecompositionSolver.java 1416643 2012-12-03 19:37:14Z tn $</version>
    <since>2.0</since>
  </javadoc>
  <method name="solve" type="RealVector" />
  <javadoc>
    <text>Solve the linear equation A &amp;times; X = B for matrices A.
 * &lt;p&gt;The A matrix is implicit, it is provided by the underlying
 * decomposition algorithm.&lt;/p&gt;</text>
    <param>b right-hand side of the equation A &amp;times; X = B</param>
    <return>a vector X that minimizes the two norm of A &amp;times; X - B</return>
    <throws>org.apache.commons.math3.exception.DimensionMismatchExceptionif the matrices dimensions do not match.</throws>
    <throws>SingularMatrixExceptionif the decomposed matrix is singular.</throws>
  </javadoc>
  <method name="solve" type="RealMatrix" />
  <javadoc>
    <text>Solve the linear equation A &amp;times; X = B for matrices A.
 * &lt;p&gt;The A matrix is implicit, it is provided by the underlying
 * decomposition algorithm.&lt;/p&gt;</text>
    <param>b right-hand side of the equation A &amp;times; X = B</param>
    <return>a matrix X that minimizes the two norm of A &amp;times; X - B</return>
    <throws>org.apache.commons.math3.exception.DimensionMismatchExceptionif the matrices dimensions do not match.</throws>
    <throws>SingularMatrixExceptionif the decomposed matrix is singular.</throws>
  </javadoc>
  <method name="isNonSingular" type="boolean" />
  <javadoc>
    <text>Check if the decomposed matrix is non-singular.</text>
    <return>true if the decomposed matrix is non-singular.</return>
  </javadoc>
  <method name="getInverse" type="RealMatrix" />
  <javadoc>
    <text>Get the inverse (or pseudo-inverse) of the decomposed matrix.</text>
    <return>inverse matrix</return>
    <throws>SingularMatrixExceptionif the decomposed matrix is singular.</throws>
  </javadoc>
  <comment>Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the "License"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

      http:www.apache.orglicensesLICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.</comment>
</class>
