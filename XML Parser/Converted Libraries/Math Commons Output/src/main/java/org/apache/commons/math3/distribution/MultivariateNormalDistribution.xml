<?xml version="1.0" encoding="UTF-8"?>
<class name="MultivariateNormalDistribution">
  <javadoc>
    <text>Implementation of the multivariate normal (Gaussian) distribution.</text>
    <see>&lt;a href="http://en.wikipedia.org/wiki/Multivariate_normal_distribution"&gt;
 * Multivariate normal distribution (Wikipedia)&lt;/a&gt;</see>
    <see>&lt;a href="http://mathworld.wolfram.com/MultivariateNormalDistribution.html"&gt;
 * Multivariate normal distribution (MathWorld)&lt;/a&gt;</see>
    <version>$Id: MultivariateNormalDistribution.java 1433367 2013-01-15 12:15:50Z erans $</version>
    <since>3.1</since>
  </javadoc>
  <javadoc>
    <text>Vector of means.</text>
  </javadoc>
  <declaration type="double[]" name="means" />
  <javadoc>
    <text>Covariance matrix.</text>
  </javadoc>
  <declaration type="RealMatrix" name="covarianceMatrix" />
  <javadoc>
    <text>The matrix inverse of the covariance matrix.</text>
  </javadoc>
  <declaration type="RealMatrix" name="covarianceMatrixInverse" />
  <javadoc>
    <text>The determinant of the covariance matrix.</text>
  </javadoc>
  <declaration type="double" name="covarianceMatrixDeterminant" />
  <javadoc>
    <text>Matrix used in computation of samples.</text>
  </javadoc>
  <declaration type="RealMatrix" name="samplingMatrix" />
  <javadoc>
    <text>Creates a multivariate normal distribution with the given mean vector and
 * covariance matrix.
 * &lt;br/&gt;
 * The number of dimensions is equal to the length of the mean vector
 * and to the number of rows and columns of the covariance matrix.
 * It is frequently written as "p" in formulae.</text>
    <param>means Vector of means.</param>
    <param>covariances Covariance matrix.</param>
    <throws>DimensionMismatchException if the arrays length are
 * inconsistent.</throws>
    <throws>SingularMatrixException if the eigenvalue decomposition cannot
 * be performed on the provided covariance matrix.</throws>
    <throws>NonPositiveDefiniteMatrixException if any of the eigenvalues is
 * negative.</throws>
  </javadoc>
  <method type="constructor" name="MultivariateNormalDistribution" />
  <javadoc>
    <text>Creates a multivariate normal distribution with the given mean vector and
 * covariance matrix.
 * &lt;br/&gt;
 * The number of dimensions is equal to the length of the mean vector
 * and to the number of rows and columns of the covariance matrix.
 * It is frequently written as "p" in formulae.</text>
    <param>rng Random Number Generator.</param>
    <param>means Vector of means.</param>
    <param>covariances Covariance matrix.</param>
    <throws>DimensionMismatchException if the arrays length are
 * inconsistent.</throws>
    <throws>SingularMatrixException if the eigenvalue decomposition cannot
 * be performed on the provided covariance matrix.</throws>
    <throws>NonPositiveDefiniteMatrixException if any of the eigenvalues is
 * negative.</throws>
  </javadoc>
  <method type="constructor" name="MultivariateNormalDistribution">
    <declaration type="int" name="dim" />
    <scope />
    <scope>
      <scope />
    </scope>
    <declaration type="EigenDecomposition" name="covMatDec" />
    <declaration type="double[]" name="covMatEigenvalues" />
    <scope>
      <scope />
    </scope>
    <declaration type="Array2DRowRealMatrix" name="covMatEigenvectors" />
    <scope>
      <declaration type="double[]" name="evec" />
    </scope>
    <declaration type="RealMatrix" name="tmpMatrix" />
    <scope>
      <declaration type="double" name="factor" />
      <scope />
    </scope>
    <comment>Covariance matrix eigen decomposition.</comment>
    <comment>Compute and store the inverse.</comment>
    <comment>Compute and store the determinant.</comment>
    <comment>Eigenvalues of the covariance matrix.</comment>
    <comment>Matrix where each column is an eigenvector of the covariance matrix.</comment>
    <comment>Scale each eigenvector by the square root of its eigenvalue.</comment>
  </method>
  <javadoc>
    <text>Gets the mean vector.</text>
    <return>the mean vector.</return>
  </javadoc>
  <method type="double[]" name="getMeans" />
  <javadoc>
    <text>Gets the covariance matrix.</text>
    <return>the covariance matrix.</return>
  </javadoc>
  <method type="RealMatrix" name="getCovariances" />
  <javadoc>
    <text>{@inheritDoc}</text>
  </javadoc>
  <method type="double" name="density">
    <declaration type="int" name="dim" />
    <scope />
  </method>
  <javadoc>
    <text>Gets the square root of each element on the diagonal of the covariance
 * matrix.</text>
    <return>the standard deviations.</return>
  </javadoc>
  <method type="double[]" name="getStandardDeviations">
    <declaration type="int" name="dim" />
    <declaration type="double[]" name="std" />
    <declaration type="double[][]" name="s" />
    <scope />
  </method>
  <javadoc>
    <text>{@inheritDoc}</text>
  </javadoc>
  <method type="double[]" name="sample">
    <declaration type="int" name="dim" />
    <declaration type="double[]" name="normalVals" />
    <scope />
    <declaration type="double[]" name="vals" />
    <scope />
  </method>
  <javadoc>
    <text>Computes the term used in the exponent (see definition of the distribution).</text>
    <param>values Values at which to compute density.</param>
    <return>the multiplication factor of density calculations.</return>
  </javadoc>
  <method type="double" name="getExponentTerm">
    <declaration type="double[]" name="centered" />
    <scope />
    <declaration type="double[]" name="preMultiplied" />
    <declaration type="double" name="sum" />
    <scope />
  </method>
  <comment>Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the "License"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

      http:www.apache.orglicensesLICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.</comment>
</class>
