<?xml version="1.0" encoding="UTF-8"?>
<class name="IterativeLinearSolverEvent">
  <javadoc>
    <text>This is the base class for all events occuring during the iterations of a{@link IterativeLinearSolver}.</text>
    <version>$Id: IterativeLinearSolverEvent.java 1416643 2012-12-03 19:37:14Z tn $</version>
    <since>3.0</since>
  </javadoc>
  <javadoc>
    <text>Serialization identifier.</text>
  </javadoc>
  <declaration type="long" name="serialVersionUID" />
  <javadoc>
    <text>Creates a new instance of this class.</text>
    <param>source the iterative algorithm on which the event initially
 * occurred</param>
    <param>iterations the number of iterations performed at the time{@code this} event is created</param>
  </javadoc>
  <method type="constructor" name="IterativeLinearSolverEvent" />
  <method name="getRightHandSideVector" type="RealVector" />
  <javadoc>
    <text>Returns the current right-hand side of the linear system to be solved.
 * This method should return an unmodifiable view, or a deep copy of the
 * actual right-hand side vector, in order not to compromise subsequent
 * iterations of the source {@link IterativeLinearSolver}.</text>
    <return>the right-hand side vector, b</return>
  </javadoc>
  <method name="getNormOfResidual" type="double" />
  <javadoc>
    <text>Returns the norm of the residual. The returned value is not required to
 * be &lt;em&gt;exact&lt;/em&gt;. Instead, the norm of the so-called &lt;em&gt;updated&lt;/em&gt;
 * residual (if available) should be returned. For example, the{@link ConjugateGradient conjugate gradient} method computes a sequence
 * of residuals, the norm of which is cheap to compute. However, due to
 * accumulation of round-off errors, this residual might differ from the
 * true residual after some iterations. See e.g. A. Greenbaum and
 * Z. Strakos, &lt;em&gt;Predicting the Behavior of Finite Precision Lanzos and
 * Conjugate Gradient Computations&lt;/em&gt;, Technical Report 538, Department of
 * Computer Science, New York University, 1991 (available
 * &lt;a href="http://www.archive.org/details/predictingbehavi00gree"&gt;here&lt;/a&gt;).</text>
    <return>the norm of the residual, ||r||</return>
  </javadoc>
  <javadoc>
    <text>&lt;p&gt;
 * Returns the residual. This is an optional operation, as all iterative
 * linear solvers do not provide cheap estimate of the updated residual
 * vector, in which case
 * &lt;/p&gt;
 * &lt;ul&gt;
 * &lt;li&gt;this method should throw a{@link MathUnsupportedOperationException},&lt;/li&gt;
 * &lt;li&gt;{@link #providesResidual()} returns {@code false}.&lt;/li&gt;
 * &lt;/ul&gt;
 * &lt;p&gt;
 * The default implementation throws a{@link MathUnsupportedOperationException}. If this method is overriden,
 * then {@link #providesResidual()} should be overriden as well.
 * &lt;/p&gt;</text>
    <return>the updated residual, r</return>
  </javadoc>
  <method type="RealVector" name="getResidual" />
  <method name="getSolution" type="RealVector" />
  <javadoc>
    <text>Returns the current estimate of the solution to the linear system to be
 * solved. This method should return an unmodifiable view, or a deep copy of
 * the actual current solution, in order not to compromise subsequent
 * iterations of the source {@link IterativeLinearSolver}.</text>
    <return>the solution, x</return>
  </javadoc>
  <javadoc>
    <text>Returns {@code true} if {@link #getResidual()} is supported. The default
 * implementation returns {@code false}.</text>
    <return>{@code false} if {@link #getResidual()} throws a{@link MathUnsupportedOperationException}</return>
  </javadoc>
  <method type="boolean" name="providesResidual" />
  <comment>Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the "License"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

      http:www.apache.orglicensesLICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.</comment>
</class>
