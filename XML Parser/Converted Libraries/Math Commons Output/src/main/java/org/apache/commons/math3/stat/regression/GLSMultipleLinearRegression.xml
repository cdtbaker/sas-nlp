<?xml version="1.0" encoding="UTF-8"?>
<class name="GLSMultipleLinearRegression">
  <javadoc>
    <text>The GLS implementation of the multiple linear regression.
 * GLS assumes a general covariance matrix Omega of the error
 * &lt;pre&gt;
 * u ~ N(0, Omega)
 * &lt;/pre&gt;
 * Estimated by GLS,
 * &lt;pre&gt;
 * b=(X' Omega^-1 X)^-1X'Omega^-1 y
 * &lt;/pre&gt;
 * whose variance is
 * &lt;pre&gt;
 * Var(b)=(X' Omega^-1 X)^-1
 * &lt;/pre&gt;</text>
    <version>$Id: GLSMultipleLinearRegression.java 1416643 2012-12-03 19:37:14Z tn $</version>
    <since>2.0</since>
  </javadoc>
  <javadoc>
    <text>Covariance matrix.</text>
  </javadoc>
  <declaration type="RealMatrix" name="Omega" />
  <javadoc>
    <text>Inverse of covariance matrix.</text>
  </javadoc>
  <declaration type="RealMatrix" name="OmegaInverse" />
  <javadoc>
    <text>Replace sample data, overriding any previous sample.</text>
    <param>y y values of the sample</param>
    <param>x x values of the sample</param>
    <param>covariance array representing the covariance matrix</param>
  </javadoc>
  <method type="void" name="newSampleData" />
  <javadoc>
    <text>Add the covariance data.</text>
    <param>omega the [n,n] array representing the covariance</param>
  </javadoc>
  <method type="void" name="newCovarianceData" />
  <javadoc>
    <text>Get the inverse of the covariance.
 * &lt;p&gt;The inverse of the covariance matrix is lazily evaluated and cached.&lt;/p&gt;</text>
    <return>inverse of the covariance</return>
  </javadoc>
  <method type="RealMatrix" name="getOmegaInverse">
    <scope />
  </method>
  <javadoc>
    <text>Calculates beta by GLS.
 * &lt;pre&gt;
 * b=(X' Omega^-1 X)^-1X'Omega^-1 y
 * &lt;/pre&gt;</text>
    <return>beta</return>
  </javadoc>
  <method type="RealVector" name="calculateBeta">
    <declaration type="RealMatrix" name="OI" />
    <declaration type="RealMatrix" name="XT" />
    <declaration type="RealMatrix" name="XTOIX" />
    <declaration type="RealMatrix" name="inverse" />
  </method>
  <javadoc>
    <text>Calculates the variance on the beta.
 * &lt;pre&gt;
 * Var(b)=(X' Omega^-1 X)^-1
 * &lt;/pre&gt;</text>
    <return>The beta variance matrix</return>
  </javadoc>
  <method type="RealMatrix" name="calculateBetaVariance">
    <declaration type="RealMatrix" name="OI" />
    <declaration type="RealMatrix" name="XTOIX" />
  </method>
  <javadoc>
    <text>Calculates the estimated variance of the error term using the formula
 * &lt;pre&gt;
 * Var(u) = Tr(u' Omega^-1 u)/(n-k)
 * &lt;/pre&gt;
 * where n and k are the row and column dimensions of the design
 * matrix X.</text>
    <return>error variance</return>
    <since>2.2</since>
  </javadoc>
  <method type="double" name="calculateErrorVariance">
    <declaration type="RealVector" name="residuals" />
    <declaration type="double" name="t" />
  </method>
  <comment>Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the "License"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

      http:www.apache.orglicensesLICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.</comment>
</class>
