<?xml version="1.0" encoding="UTF-8"?>
<class name="StorelessBivariateCovariance">
  <javadoc>
    <text>Bivariate Covariance implementation that does not require input data to be
 * stored in memory.
 * &lt;p&gt;This class is based on a paper written by Philippe P&amp;eacute;bay:
 * &lt;a href="http://prod.sandia.gov/techlib/access-control.cgi/2008/086212.pdf"&gt;
 * Formulas for Robust, One-Pass Parallel Computation of Covariances and
 * Arbitrary-Order Statistical Moments&lt;/a&gt;, 2008, Technical Report SAND2008-6212,
 * Sandia National Laboratories. It computes the covariance for a pair of variables.
 * Use {@link StorelessCovariance} to estimate an entire covariance matrix.&lt;/p&gt;
 * &lt;p&gt;Note: This class is package private as it is only used internally in
 * the {@link StorelessCovariance} class.&lt;/p&gt;</text>
    <version>$Id: StorelessBivariateCovariance.java 1410238 2012-11-16 07:58:49Z luc $</version>
    <since>3.0</since>
  </javadoc>
  <javadoc>
    <text>the mean of variable x</text>
  </javadoc>
  <declaration type="double" name="meanX" />
  <javadoc>
    <text>the mean of variable y</text>
  </javadoc>
  <declaration type="double" name="meanY" />
  <javadoc>
    <text>number of observations</text>
  </javadoc>
  <declaration type="double" name="n" />
  <javadoc>
    <text>the running covariance estimate</text>
  </javadoc>
  <declaration type="double" name="covarianceNumerator" />
  <javadoc>
    <text>flag for bias correction</text>
  </javadoc>
  <declaration type="boolean" name="biasCorrected" />
  <javadoc>
    <text>Create an empty {@link StorelessBivariateCovariance} instance with
 * bias correction.</text>
  </javadoc>
  <method type="constructor" name="StorelessBivariateCovariance" />
  <javadoc>
    <text>Create an empty {@link StorelessBivariateCovariance} instance.</text>
    <param>biasCorrection if &lt;code&gt;true&lt;/code&gt; the covariance estimate is corrected
 * for bias, i.e. n-1 in the denominator, otherwise there is no bias correction,
 * i.e. n in the denominator.</param>
  </javadoc>
  <method type="constructor" name="StorelessBivariateCovariance" />
  <javadoc>
    <text>Update the covariance estimation with a pair of variables (x, y).</text>
    <param>x the x value</param>
    <param>y the y value</param>
  </javadoc>
  <method type="void" name="increment">
    <declaration type="double" name="deltaX" />
    <declaration type="double" name="deltaY" />
  </method>
  <javadoc>
    <text>Returns the number of observations.</text>
    <return>number of observations</return>
  </javadoc>
  <method type="double" name="getN" />
  <javadoc>
    <text>Return the current covariance estimate.</text>
    <return>the current covariance</return>
    <throws>NumberIsTooSmallException if the number of observations
 * is &amp;lt; 2</throws>
  </javadoc>
  <method type="double" name="getResult">
    <scope />
    <scope />
    <scope />
  </method>
  <comment>Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the "License"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

      http:www.apache.orglicensesLICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.</comment>
</class>
