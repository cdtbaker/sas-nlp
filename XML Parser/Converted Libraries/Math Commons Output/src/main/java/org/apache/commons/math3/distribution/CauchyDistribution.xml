<?xml version="1.0" encoding="UTF-8"?>
<class name="CauchyDistribution">
  <javadoc>
    <text>Implementation of the Cauchy distribution.</text>
    <see>&lt;a href="http://en.wikipedia.org/wiki/Cauchy_distribution"&gt;Cauchy distribution (Wikipedia)&lt;/a&gt;</see>
    <see>&lt;a href="http://mathworld.wolfram.com/CauchyDistribution.html"&gt;Cauchy Distribution (MathWorld)&lt;/a&gt;</see>
    <since>1.1 (changed to concrete class in 3.0)</since>
    <version>$Id: CauchyDistribution.java 1416643 2012-12-03 19:37:14Z tn $</version>
  </javadoc>
  <javadoc>
    <text>Default inverse cumulative probability accuracy.</text>
    <since>2.1</since>
  </javadoc>
  <declaration type="double" name="DEFAULT_INVERSE_ABSOLUTE_ACCURACY" />
  <javadoc>
    <text>Serializable version identifier</text>
  </javadoc>
  <declaration type="long" name="serialVersionUID" />
  <javadoc>
    <text>The median of this distribution.</text>
  </javadoc>
  <declaration type="double" name="median" />
  <javadoc>
    <text>The scale of this distribution.</text>
  </javadoc>
  <declaration type="double" name="scale" />
  <javadoc>
    <text>Inverse cumulative probability accuracy</text>
  </javadoc>
  <declaration type="double" name="solverAbsoluteAccuracy" />
  <javadoc>
    <text>Creates a Cauchy distribution with the median equal to zero and scale
 * equal to one.</text>
  </javadoc>
  <method type="constructor" name="CauchyDistribution" />
  <javadoc>
    <text>Creates a Cauchy distribution using the given median and scale.</text>
    <param>median Median for this distribution.</param>
    <param>scale Scale parameter for this distribution.</param>
  </javadoc>
  <method type="constructor" name="CauchyDistribution" />
  <javadoc>
    <text>Creates a Cauchy distribution using the given median and scale.</text>
    <param>median Median for this distribution.</param>
    <param>scale Scale parameter for this distribution.</param>
    <param>inverseCumAccuracy Maximum absolute error in inverse
 * cumulative probability estimates
 * (defaults to {@link #DEFAULT_INVERSE_ABSOLUTE_ACCURACY}).</param>
    <throws>NotStrictlyPositiveException if {@code scale &lt;= 0}.</throws>
    <since>2.1</since>
  </javadoc>
  <method type="constructor" name="CauchyDistribution" />
  <javadoc>
    <text>Creates a Cauchy distribution.</text>
    <param>rng Random number generator.</param>
    <param>median Median for this distribution.</param>
    <param>scale Scale parameter for this distribution.</param>
    <param>inverseCumAccuracy Maximum absolute error in inverse
 * cumulative probability estimates
 * (defaults to {@link #DEFAULT_INVERSE_ABSOLUTE_ACCURACY}).</param>
    <throws>NotStrictlyPositiveException if {@code scale &lt;= 0}.</throws>
    <since>3.1</since>
  </javadoc>
  <method type="constructor" name="CauchyDistribution">
    <scope />
  </method>
  <javadoc>
    <text>{@inheritDoc}</text>
  </javadoc>
  <method type="double" name="cumulativeProbability" />
  <javadoc>
    <text>Access the median.</text>
    <return>the median for this distribution.</return>
  </javadoc>
  <method type="double" name="getMedian" />
  <javadoc>
    <text>Access the scale parameter.</text>
    <return>the scale parameter for this distribution.</return>
  </javadoc>
  <method type="double" name="getScale" />
  <javadoc>
    <text>{@inheritDoc}</text>
  </javadoc>
  <method type="double" name="density">
    <declaration type="double" name="dev" />
  </method>
  <javadoc>
    <text>{@inheritDoc}Returns {@code Double.NEGATIVE_INFINITY} when {@code p == 0}and {@code Double.POSITIVE_INFINITY} when {@code p == 1}.</text>
  </javadoc>
  <method type="double" name="inverseCumulativeProbability">
    <declaration type="double" name="ret" />
    <scope />
    <scope />
    <scope />
    <scope />
  </method>
  <javadoc>
    <text>{@inheritDoc}</text>
  </javadoc>
  <method type="double" name="getSolverAbsoluteAccuracy" />
  <javadoc>
    <text>{@inheritDoc}The mean is always undefined no matter the parameters.</text>
    <return>mean (always Double.NaN)</return>
  </javadoc>
  <method type="double" name="getNumericalMean" />
  <javadoc>
    <text>{@inheritDoc}The variance is always undefined no matter the parameters.</text>
    <return>variance (always Double.NaN)</return>
  </javadoc>
  <method type="double" name="getNumericalVariance" />
  <javadoc>
    <text>{@inheritDoc}The lower bound of the support is always negative infinity no matter
 * the parameters.</text>
    <return>lower bound of the support (always Double.NEGATIVE_INFINITY)</return>
  </javadoc>
  <method type="double" name="getSupportLowerBound" />
  <javadoc>
    <text>{@inheritDoc}The upper bound of the support is always positive infinity no matter
 * the parameters.</text>
    <return>upper bound of the support (always Double.POSITIVE_INFINITY)</return>
  </javadoc>
  <method type="double" name="getSupportUpperBound" />
  <javadoc>
    <text>{@inheritDoc}</text>
  </javadoc>
  <method type="boolean" name="isSupportLowerBoundInclusive" />
  <javadoc>
    <text>{@inheritDoc}</text>
  </javadoc>
  <method type="boolean" name="isSupportUpperBoundInclusive" />
  <javadoc>
    <text>{@inheritDoc}The support of this distribution is connected.</text>
    <return>{@code true}</return>
  </javadoc>
  <method type="boolean" name="isSupportConnected" />
  <comment>Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the "License"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

      http:www.apache.orglicensesLICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.</comment>
</class>
