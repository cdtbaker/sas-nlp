<?xml version="1.0" encoding="UTF-8"?>
<class name="OnePointCrossover">
  <javadoc>
    <text>One point crossover policy. A random crossover point is selected and the
 * first part from each parent is copied to the corresponding child, and the
 * second parts are copied crosswise.
 * Example:
 * &lt;pre&gt;
 * -C- denotes a crossover point
 * -C-                                 -C-
 * p1 = (1 0 1 0 0 1  | 0 1 1)    X    p2 = (0 1 1 0 1 0  | 1 1 1)
 * \------------/ \-----/              \------------/ \-----/
 * ||         (*)                       ||        (**)
 * VV         (**)                      VV        (*)
 * /------------\ /-----\              /------------\ /-----\
 * c1 = (1 0 1 0 0 1  | 1 1 1)    X    c2 = (0 1 1 0 1 0  | 0 1 1)
 * &lt;/pre&gt;
 * This policy works only on {@link AbstractListChromosome}, and therefore it
 * is parameterized by T. Moreover, the chromosomes must have same lengths.</text>
    <param>&lt;T&gt;
 *  generic type of the {@link AbstractListChromosome}s for crossover</param>
    <since>2.0</since>
    <version>$Id: OnePointCrossover.java 1416643 2012-12-03 19:37:14Z tn $</version>
  </javadoc>
  <javadoc>
    <text>Performs one point crossover. A random crossover point is selected and the
 * first part from each parent is copied to the corresponding child, and the
 * second parts are copied crosswise.
 * Example:
 * &lt;pre&gt;
 * -C- denotes a crossover point
 * -C-                                 -C-
 * p1 = (1 0 1 0 0 1  | 0 1 1)    X    p2 = (0 1 1 0 1 0  | 1 1 1)
 * \------------/ \-----/              \------------/ \-----/
 * ||         (*)                       ||        (**)
 * VV         (**)                      VV        (*)
 * /------------\ /-----\              /------------\ /-----\
 * c1 = (1 0 1 0 0 1  | 1 1 1)    X    c2 = (0 1 1 0 1 0  | 0 1 1)
 * &lt;/pre&gt;</text>
    <param>first first parent (p1)</param>
    <param>second second parent (p2)</param>
    <return>pair of two children (c1,c2)</return>
    <throws>MathIllegalArgumentException iff one of the chromosomes is
 * not an instance of {@link AbstractListChromosome}</throws>
    <throws>DimensionMismatchException if the length of the two chromosomes is different</throws>
  </javadoc>
  <method type="ChromosomePair" name="crossover">
    <scope />
  </method>
  <javadoc>
    <text>Helper for {@link #crossover(Chromosome,Chromosome)}. Performs the actual crossover.</text>
    <param>first the first chromosome.</param>
    <param>second the second chromosome.</param>
    <return>the pair of new chromosomes that resulted from the crossover.</return>
    <throws>DimensionMismatchException if the length of the two chromosomes is different</throws>
  </javadoc>
  <method type="ChromosomePair" name="crossover">
    <declaration type="int" name="length" />
    <scope />
    <declaration type="List&lt;T&gt;" name="parent1Rep" />
    <declaration type="List&lt;T&gt;" name="parent2Rep" />
    <declaration type="ArrayList&lt;T&gt;" name="child1Rep" />
    <declaration type="ArrayList&lt;T&gt;" name="child2Rep" />
    <declaration type="int" name="crossoverIndex" />
    <scope />
    <scope />
    <comment>array representations of the parents</comment>
    <comment>and of the children</comment>
    <comment>select a crossover point at random (0 and length makes no sense)</comment>
    <comment>copy the first part</comment>
    <comment>and switch the second part</comment>
  </method>
  <comment>Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the "License"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

      http:www.apache.orglicensesLICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.</comment>
  <comment>OK because of instanceof checks</comment>
</class>
