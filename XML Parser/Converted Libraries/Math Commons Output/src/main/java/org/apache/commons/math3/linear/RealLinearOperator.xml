<?xml version="1.0" encoding="UTF-8"?>
<class name="RealLinearOperator">
  <javadoc>
    <text>This class defines a linear operator operating on real ({@code double})
 * vector spaces. No direct access to the coefficients of the underlying matrix
 * is provided.
 * The motivation for such an interface is well stated by
 * &lt;a href="#BARR1994"&gt;Barrett et al. (1994)&lt;/a&gt;:
 * &lt;blockquote&gt;
 * We restrict ourselves to iterative methods, which work by repeatedly
 * improving an approximate solution until it is accurate enough. These
 * methods access the coefficient matrix A of the linear system only via the
 * matrix-vector product y = A &amp;middot; x
 * (and perhaps z = A&lt;sup&gt;T&lt;/sup&gt; &amp;middot; x). Thus the user need only
 * supply a subroutine for computing y (and perhaps z) given x, which permits
 * full exploitation of the sparsity or other special structure of A.
 * &lt;/blockquote&gt;
 * &lt;br/&gt;
 * &lt;dl&gt;
 * &lt;dt&gt;&lt;a name="BARR1994"&gt;Barret et al. (1994)&lt;/a&gt;&lt;/dt&gt;
 * &lt;dd&gt;
 * R. Barrett, M. Berry, T. F. Chan, J. Demmel, J. M. Donato, J. Dongarra,
 * V. Eijkhout, R. Pozo, C. Romine and H. Van der Vorst,
 * &lt;em&gt;Templates for the Solution of Linear Systems: Building Blocks for
 * Iterative Methods&lt;/em&gt;, SIAM
 * &lt;/dd&gt;
 * &lt;/dl&gt;</text>
    <version>$Id: RealLinearOperator.java 1416643 2012-12-03 19:37:14Z tn $</version>
    <since>3.0</since>
  </javadoc>
  <method name="getRowDimension" type="int" />
  <javadoc>
    <text>Returns the dimension of the codomain of this operator.</text>
    <return>the number of rows of the underlying matrix</return>
  </javadoc>
  <method name="getColumnDimension" type="int" />
  <javadoc>
    <text>Returns the dimension of the domain of this operator.</text>
    <return>the number of columns of the underlying matrix</return>
  </javadoc>
  <method name="operate" type="RealVector" />
  <javadoc>
    <text>Returns the result of multiplying {@code this} by the vector {@code x}.</text>
    <param>x the vector to operate on</param>
    <return>the product of {@code this} instance with {@code x}</return>
    <throws>DimensionMismatchException if the column dimension does not match
 * the size of {@code x}</throws>
  </javadoc>
  <javadoc>
    <text>Returns the result of multiplying the transpose of {@code this} operator
 * by the vector {@code x} (optional operation). The default implementation
 * throws an {@link UnsupportedOperationException}. Users overriding this
 * method must also override {@link #isTransposable()}.</text>
    <param>x the vector to operate on</param>
    <return>the product of the transpose of {@code this} instance with{@code x}</return>
    <throws>org.apache.commons.math3.exception.DimensionMismatchExceptionif the row dimension does not match the size of {@code x}</throws>
    <throws>UnsupportedOperationException if this operation is not supported
 * by {@code this} operator</throws>
  </javadoc>
  <method type="RealVector" name="operateTranspose" />
  <javadoc>
    <text>Returns {@code true} if this operator supports{@link #operateTranspose(RealVector)}. If {@code true} is returned,{@link #operateTranspose(RealVector)} should not throw{@code UnsupportedOperationException}. The default implementation returns{@code false}.</text>
    <return>{@code false}</return>
  </javadoc>
  <method type="boolean" name="isTransposable" />
  <comment>Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the "License"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

      http:www.apache.orglicensesLICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.</comment>
</class>
