<?xml version="1.0" encoding="UTF-8"?>
<class name="UpdatingMultipleLinearRegression">
  <javadoc>
    <text>An interface for regression models allowing for dynamic updating of the data.
 * That is, the entire data set need not be loaded into memory. As observations
 * become available, they can be added to the regression  model and an updated
 * estimate regression statistics can be calculated.</text>
    <version>$Id: UpdatingMultipleLinearRegression.java 1392342 2012-10-01 14:08:52Z psteitz $</version>
    <since>3.0</since>
  </javadoc>
  <method name="hasIntercept" type="boolean" />
  <javadoc>
    <text>Returns true if a constant has been included false otherwise.</text>
    <return>true if constant exists, false otherwise</return>
  </javadoc>
  <method name="getN" type="long" />
  <javadoc>
    <text>Returns the number of observations added to the regression model.</text>
    <return>Number of observations</return>
  </javadoc>
  <method name="addObservation" type="void" />
  <javadoc>
    <text>Adds one observation to the regression model.</text>
    <param>x the independent variables which form the design matrix</param>
    <param>y the dependent or response variable</param>
    <throws>ModelSpecificationException if the length of {@code x} does not equal
 * the number of independent variables in the model</throws>
  </javadoc>
  <method name="addObservations" type="void" />
  <javadoc>
    <text>Adds a series of observations to the regression model. The lengths of
 * x and y must be the same and x must be rectangular.</text>
    <param>x a series of observations on the independent variables</param>
    <param>y a series of observations on the dependent variable
 * The length of x and y must be the same</param>
    <throws>ModelSpecificationException if {@code x} is not rectangular, does not match
 * the length of {@code y} or does not contain sufficient data to estimate the model</throws>
  </javadoc>
  <method name="clear" type="void" />
  <javadoc>
    <text>Clears internal buffers and resets the regression model. This means all
 * data and derived values are initialized</text>
  </javadoc>
  <method name="regress" type="RegressionResults" />
  <javadoc>
    <text>Performs a regression on data present in buffers and outputs a RegressionResults object</text>
    <return>RegressionResults acts as a container of regression output</return>
    <throws>ModelSpecificationException if the model is not correctly specified</throws>
    <throws>NoDataException if there is not sufficient data in the model to
 * estimate the regression parameters</throws>
  </javadoc>
  <method name="regress" type="RegressionResults" />
  <javadoc>
    <text>Performs a regression on data present in buffers including only regressors
 * indexed in variablesToInclude and outputs a RegressionResults object</text>
    <param>variablesToInclude an array of indices of regressors to include</param>
    <return>RegressionResults acts as a container of regression output</return>
    <throws>ModelSpecificationException if the model is not correctly specified</throws>
    <throws>MathIllegalArgumentException if the variablesToInclude array is null or zero length</throws>
  </javadoc>
  <comment>Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the "License"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

      http:www.apache.orglicensesLICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.</comment>
</class>
