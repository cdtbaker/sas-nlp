<?xml version="1.0" encoding="UTF-8"?>
<class name="ListPopulation">
  <javadoc>
    <text>Population of chromosomes represented by a {@link List}.</text>
    <since>2.0</since>
    <version>$Id: ListPopulation.java 1422195 2012-12-15 06:45:18Z psteitz $</version>
  </javadoc>
  <javadoc>
    <text>List of chromosomes</text>
  </javadoc>
  <declaration type="List&lt;Chromosome&gt;" name="chromosomes" />
  <javadoc>
    <text>maximal size of the population</text>
  </javadoc>
  <declaration type="int" name="populationLimit" />
  <javadoc>
    <text>Creates a new ListPopulation instance and initializes its inner chromosome list.</text>
    <param>populationLimit maximal size of the population</param>
    <throws>NotPositiveException if the population limit is not a positive number (&amp;lt; 1)</throws>
  </javadoc>
  <method type="constructor" name="ListPopulation" />
  <javadoc>
    <text>Creates a new ListPopulation instance.
 * &lt;p&gt;
 * Note: the chromosomes of the specified list are added to the population.</text>
    <param>chromosomes list of chromosomes to be added to the population</param>
    <param>populationLimit maximal size of the population</param>
    <throws>NullArgumentException if the list of chromosomes is {@code null}</throws>
    <throws>NotPositiveException if the population limit is not a positive number (&amp;lt; 1)</throws>
    <throws>NumberIsTooLargeException if the list of chromosomes exceeds the population limit</throws>
  </javadoc>
  <method type="constructor" name="ListPopulation">
    <scope />
    <scope />
    <scope />
  </method>
  <javadoc>
    <text>Sets the list of chromosomes.
 * &lt;p&gt;
 * Note: this method removed all existing chromosomes in the population and adds all chromosomes
 * of the specified list to the population.</text>
    <param>chromosomes the list of chromosomes</param>
    <throws>NullArgumentException if the list of chromosomes is {@code null}</throws>
    <throws>NumberIsTooLargeException if the list of chromosomes exceeds the population limit</throws>
    <deprecated>use {@link #addChromosomes(Collection)} instead</deprecated>
  </javadoc>
  <method type="void" name="setChromosomes">
    <scope />
    <scope />
  </method>
  <javadoc>
    <text>Add a {@link Collection} of chromosomes to this {@link Population}.</text>
    <param>chromosomeColl a {@link Collection} of chromosomes</param>
    <throws>NumberIsTooLargeException if the population would exceed the population limit when
 * adding this chromosome</throws>
    <since>3.1</since>
  </javadoc>
  <method type="void" name="addChromosomes">
    <scope />
  </method>
  <javadoc>
    <text>Returns an unmodifiable list of the chromosomes in this population.</text>
    <return>the unmodifiable list of chromosomes</return>
  </javadoc>
  <method type="List&lt;Chromosome&gt;" name="getChromosomes" />
  <javadoc>
    <text>Access the list of chromosomes.</text>
    <return>the list of chromosomes</return>
    <since>3.1</since>
  </javadoc>
  <method type="List&lt;Chromosome&gt;" name="getChromosomeList" />
  <javadoc>
    <text>Add the given chromosome to the population.</text>
    <param>chromosome the chromosome to add.</param>
    <throws>NumberIsTooLargeException if the population would exceed the {@code populationLimit} after
 * adding this chromosome</throws>
  </javadoc>
  <method type="void" name="addChromosome">
    <scope />
  </method>
  <javadoc>
    <text>Access the fittest chromosome in this population.</text>
    <return>the fittest chromosome.</return>
  </javadoc>
  <method type="Chromosome" name="getFittestChromosome">
    <declaration type="Chromosome" name="bestChromosome" />
    <scope>
      <scope />
    </scope>
    <comment>best so far</comment>
    <comment>better chromosome found</comment>
  </method>
  <javadoc>
    <text>Access the maximum population size.</text>
    <return>the maximum population size.</return>
  </javadoc>
  <method type="int" name="getPopulationLimit" />
  <javadoc>
    <text>Sets the maximal population size.</text>
    <param>populationLimit maximal population size.</param>
    <throws>NotPositiveException if the population limit is not a positive number (&amp;lt; 1)</throws>
    <throws>NumberIsTooSmallException if the new population size is smaller than the current number
 * of chromosomes in the population</throws>
  </javadoc>
  <method type="void" name="setPopulationLimit">
    <scope />
    <scope />
  </method>
  <javadoc>
    <text>Access the current population size.</text>
    <return>the current population size.</return>
  </javadoc>
  <method type="int" name="getPopulationSize" />
  <javadoc>
    <text>{@inheritDoc}</text>
  </javadoc>
  <method type="String" name="toString" />
  <javadoc>
    <text>Returns an iterator over the unmodifiable list of chromosomes.
 * &lt;p&gt;Any call to {@link Iterator#remove()} will result in a {@link UnsupportedOperationException}.&lt;/p&gt;</text>
    <return>chromosome iterator</return>
  </javadoc>
  <method type="Iterator&lt;Chromosome&gt;" name="iterator" />
  <comment>Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the "License"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

      http:www.apache.orglicensesLICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.</comment>
</class>
