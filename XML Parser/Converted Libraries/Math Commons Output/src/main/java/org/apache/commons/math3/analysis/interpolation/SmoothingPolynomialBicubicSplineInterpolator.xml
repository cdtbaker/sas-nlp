<?xml version="1.0" encoding="UTF-8"?>
<class name="SmoothingPolynomialBicubicSplineInterpolator">
  <javadoc>
    <text>Generates a bicubic interpolation function.
 * Prior to generating the interpolating function, the input is smoothed using
 * polynomial fitting.</text>
    <version>$Id: SmoothingPolynomialBicubicSplineInterpolator.java 1455194 2013-03-11 15:45:54Z luc $</version>
    <since>2.2</since>
  </javadoc>
  <javadoc>
    <text>Fitter for x.</text>
  </javadoc>
  <declaration type="PolynomialFitter" name="xFitter" />
  <javadoc>
    <text>Degree of the fitting polynomial.</text>
  </javadoc>
  <declaration type="int" name="xDegree" />
  <javadoc>
    <text>Fitter for y.</text>
  </javadoc>
  <declaration type="PolynomialFitter" name="yFitter" />
  <javadoc>
    <text>Degree of the fitting polynomial.</text>
  </javadoc>
  <declaration type="int" name="yDegree" />
  <javadoc>
    <text>Default constructor. The degree of the fitting polynomials is set to 3.</text>
  </javadoc>
  <method type="constructor" name="SmoothingPolynomialBicubicSplineInterpolator" />
  <javadoc>
    <param>degree Degree of the polynomial fitting functions.</param>
    <exception>NotPositiveException if degree is not positive</exception>
  </javadoc>
  <method type="constructor" name="SmoothingPolynomialBicubicSplineInterpolator" />
  <javadoc>
    <param>xDegree Degree of the polynomial fitting functions along the
 * x-dimension.</param>
    <param>yDegree Degree of the polynomial fitting functions along the
 * y-dimension.</param>
    <exception>NotPositiveException if degrees are not positive</exception>
  </javadoc>
  <method type="constructor" name="SmoothingPolynomialBicubicSplineInterpolator">
    <scope />
    <scope />
    <declaration type="double" name="safeFactor" />
    <declaration type="SimpleVectorValueChecker" name="checker" />
  </method>
  <javadoc>
    <text>{@inheritDoc}</text>
  </javadoc>
  <method type="BicubicSplineInterpolatingFunction" name="interpolate">
    <scope />
    <scope />
    <declaration type="int" name="xLen" />
    <declaration type="int" name="yLen" />
    <scope>
      <scope />
    </scope>
    <declaration type="PolynomialFunction[]" name="yPolyX" />
    <scope>
      <scope />
    </scope>
    <declaration type="double[][]" name="fval_1" />
    <scope>
      <declaration type="PolynomialFunction" name="f" />
      <scope />
    </scope>
    <declaration type="PolynomialFunction[]" name="xPolyY" />
    <scope>
      <scope />
    </scope>
    <declaration type="double[][]" name="fval_2" />
    <scope>
      <declaration type="PolynomialFunction" name="f" />
      <scope />
    </scope>
    <comment>For each line y[j] (0 &lt;= j &lt; yLen), construct a polynomial, with</comment>
    <comment>respect to variable x, fitting array fval[][j]</comment>
    <comment>Initial guess for the fit is zero for each coefficients (of which</comment>
    <comment>there are "xDegree" + 1).</comment>
    <comment>For every knot (xval[i], yval[j]) of the grid, calculate corrected</comment>
    <comment>values fval_1</comment>
    <comment>For each line x[i] (0 &lt;= i &lt; xLen), construct a polynomial, with</comment>
    <comment>respect to variable y, fitting array fval_1[i][]</comment>
    <comment>Initial guess for the fit is zero for each coefficients (of which</comment>
    <comment>there are "yDegree" + 1).</comment>
    <comment>For every knot (xval[i], yval[j]) of the grid, calculate corrected</comment>
    <comment>values fval_2</comment>
  </method>
  <comment>Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the "License"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

      http:www.apache.orglicensesLICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.</comment>
</class>
