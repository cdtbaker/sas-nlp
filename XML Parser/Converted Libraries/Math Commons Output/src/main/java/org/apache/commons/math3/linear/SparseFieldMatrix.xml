<?xml version="1.0" encoding="UTF-8"?>
<class name="SparseFieldMatrix">
  <javadoc>
    <text>Sparse matrix implementation based on an open addressed map.</text>
    <param>&lt;T&gt;
 *  the type of the field elements</param>
    <version>$Id: SparseFieldMatrix.java 1416643 2012-12-03 19:37:14Z tn $</version>
    <since>2.0</since>
    <deprecated>As of version 3.1, this class is deprecated, for reasons exposed
 * in this JIRA
 * &lt;a href="https://issues.apache.org/jira/browse/MATH-870"&gt;ticket&lt;/a&gt;. This
 * class will be removed in version 4.0.</deprecated>
  </javadoc>
  <javadoc>
    <text>Storage for (sparse) matrix elements.</text>
  </javadoc>
  <declaration type="OpenIntToFieldHashMap&lt;T&gt;" name="entries" />
  <javadoc>
    <text>Row dimension.</text>
  </javadoc>
  <declaration type="int" name="rows" />
  <javadoc>
    <text>Column dimension.</text>
  </javadoc>
  <declaration type="int" name="columns" />
  <javadoc>
    <text>Create a matrix with no data.</text>
    <param>field Field to which the elements belong.</param>
  </javadoc>
  <method type="constructor" name="SparseFieldMatrix" />
  <javadoc>
    <text>Create a new SparseFieldMatrix&lt;T&gt; with the supplied row and column
 * dimensions.</text>
    <param>field Field to which the elements belong.</param>
    <param>rowDimension Number of rows in the new matrix.</param>
    <param>columnDimension Number of columns in the new matrix.</param>
    <throws>org.apache.commons.math3.exception.NotStrictlyPositiveExceptionif row or column dimension is not positive.</throws>
  </javadoc>
  <method type="constructor" name="SparseFieldMatrix" />
  <javadoc>
    <text>Copy constructor.</text>
    <param>other Instance to copy.</param>
  </javadoc>
  <method type="constructor" name="SparseFieldMatrix" />
  <javadoc>
    <text>Generic copy constructor.</text>
    <param>other Instance to copy.</param>
  </javadoc>
  <method type="constructor" name="SparseFieldMatrix">
    <scope>
      <scope />
    </scope>
  </method>
  <javadoc>
    <text>{@inheritDoc}</text>
  </javadoc>
  <method type="void" name="addToEntry">
    <declaration type="int" name="key" />
    <declaration type="T" name="value" />
    <scope />
    <scope />
  </method>
  <javadoc>
    <text>{@inheritDoc}</text>
  </javadoc>
  <method type="FieldMatrix&lt;T&gt;" name="copy" />
  <javadoc>
    <text>{@inheritDoc}</text>
  </javadoc>
  <method type="FieldMatrix&lt;T&gt;" name="createMatrix" />
  <javadoc>
    <text>{@inheritDoc}</text>
  </javadoc>
  <method type="int" name="getColumnDimension" />
  <javadoc>
    <text>{@inheritDoc}</text>
  </javadoc>
  <method type="T" name="getEntry" />
  <javadoc>
    <text>{@inheritDoc}</text>
  </javadoc>
  <method type="int" name="getRowDimension" />
  <javadoc>
    <text>{@inheritDoc}</text>
  </javadoc>
  <method type="void" name="multiplyEntry">
    <declaration type="int" name="key" />
    <declaration type="T" name="value" />
    <scope />
    <scope />
  </method>
  <javadoc>
    <text>{@inheritDoc}</text>
  </javadoc>
  <method type="void" name="setEntry">
    <scope />
    <scope />
  </method>
  <javadoc>
    <text>Compute the key to access a matrix element.</text>
    <param>row Row index of the matrix element.</param>
    <param>column Column index of the matrix element.</param>
    <return>the key within the map to access the matrix element.</return>
  </javadoc>
  <method type="int" name="computeKey" />
  <comment>Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the "License"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

      http:www.apache.orglicensesLICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.</comment>
</class>
