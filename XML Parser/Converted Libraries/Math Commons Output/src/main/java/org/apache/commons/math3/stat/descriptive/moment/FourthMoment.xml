<?xml version="1.0" encoding="UTF-8"?>
<class name="FourthMoment">
  <javadoc>
    <text>Computes a statistic related to the Fourth Central Moment.  Specifically,
 * what is computed is the sum of
 * &lt;p&gt;
 * (x_i - xbar) ^ 4, &lt;/p&gt;
 * &lt;p&gt;
 * where the x_i are the
 * sample observations and xbar is the sample mean. &lt;/p&gt;
 * &lt;p&gt;
 * The following recursive updating formula is used: &lt;/p&gt;
 * &lt;p&gt;
 * Let &lt;ul&gt;
 * &lt;li&gt; dev = (current obs - previous mean) &lt;/li&gt;
 * &lt;li&gt; m2 = previous value of {@link SecondMoment} &lt;/li&gt;
 * &lt;li&gt; m2 = previous value of {@link ThirdMoment} &lt;/li&gt;
 * &lt;li&gt; n = number of observations (including current obs) &lt;/li&gt;
 * &lt;/ul&gt;
 * Then &lt;/p&gt;
 * &lt;p&gt;
 * new value = old value - 4 * (dev/n) * m3 + 6 * (dev/n)^2 * m2 + &lt;br&gt;
 * [n^2 - 3 * (n-1)] * dev^4 * (n-1) / n^3 &lt;/p&gt;
 * &lt;p&gt;
 * Returns &lt;code&gt;Double.NaN&lt;/code&gt; if no data values have been added and
 * returns &lt;code&gt;0&lt;/code&gt; if there is just one value in the data set. &lt;/p&gt;
 * &lt;p&gt;
 * &lt;strong&gt;Note that this implementation is not synchronized.&lt;/strong&gt; If
 * multiple threads access an instance of this class concurrently, and at least
 * one of the threads invokes the &lt;code&gt;increment()&lt;/code&gt; or
 * &lt;code&gt;clear()&lt;/code&gt; method, it must be synchronized externally. &lt;/p&gt;</text>
    <version>$Id: FourthMoment.java 1416643 2012-12-03 19:37:14Z tn $</version>
  </javadoc>
  <javadoc>
    <text>Serializable version identifier</text>
  </javadoc>
  <declaration type="long" name="serialVersionUID" />
  <javadoc>
    <text>fourth moment of values that have been added</text>
  </javadoc>
  <declaration type="double" name="m4" />
  <javadoc>
    <text>Create a FourthMoment instance</text>
  </javadoc>
  <method type="constructor" name="FourthMoment" />
  <javadoc>
    <text>Copy constructor, creates a new {@code FourthMoment} identical
 * to the {@code original}</text>
    <param>original the {@code FourthMoment} instance to copy</param>
    <throws>NullArgumentException if original is null</throws>
  </javadoc>
  <method type="constructor" name="FourthMoment" />
  <javadoc>
    <text>{@inheritDoc}</text>
  </javadoc>
  <method type="void" name="increment">
    <scope />
    <declaration type="double" name="prevM3" />
    <declaration type="double" name="prevM2" />
    <declaration type="double" name="n0" />
  </method>
  <javadoc>
    <text>{@inheritDoc}</text>
  </javadoc>
  <method type="double" name="getResult" />
  <javadoc>
    <text>{@inheritDoc}</text>
  </javadoc>
  <method type="void" name="clear" />
  <javadoc>
    <text>{@inheritDoc}</text>
  </javadoc>
  <method type="FourthMoment" name="copy">
    <declaration type="FourthMoment" name="result" />
    <comment>No try-catch or advertised exception because args are guaranteed non-null</comment>
  </method>
  <javadoc>
    <text>Copies source to dest.
 * &lt;p&gt;Neither source nor dest can be null.&lt;/p&gt;</text>
    <param>source FourthMoment to copy</param>
    <param>dest FourthMoment to copy to</param>
    <throws>NullArgumentException if either source or dest is null</throws>
  </javadoc>
  <method type="void" name="copy" />
  <comment>Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the "License"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

      http:www.apache.orglicensesLICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.</comment>
</class>
