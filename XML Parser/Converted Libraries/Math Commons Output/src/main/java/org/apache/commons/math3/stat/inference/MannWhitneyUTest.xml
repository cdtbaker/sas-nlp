<?xml version="1.0" encoding="UTF-8"?>
<class name="MannWhitneyUTest">
  <javadoc>
    <text>An implementation of the Mann-Whitney U test (also called Wilcoxon rank-sum test).</text>
    <version>$Id: MannWhitneyUTest.java 1416643 2012-12-03 19:37:14Z tn $</version>
  </javadoc>
  <javadoc>
    <text>Ranking algorithm.</text>
  </javadoc>
  <declaration type="NaturalRanking" name="naturalRanking" />
  <javadoc>
    <text>Create a test instance using where NaN's are left in place and ties get
 * the average of applicable ranks. Use this unless you are very sure of
 * what you are doing.</text>
  </javadoc>
  <method type="constructor" name="MannWhitneyUTest" />
  <javadoc>
    <text>Create a test instance using the given strategies for NaN's and ties.
 * Only use this if you are sure of what you are doing.</text>
    <param>nanStrategyspecifies the strategy that should be used for Double.NaN's</param>
    <param>tiesStrategyspecifies the strategy that should be used for ties</param>
  </javadoc>
  <method type="constructor" name="MannWhitneyUTest" />
  <javadoc>
    <text>Ensures that the provided arrays fulfills the assumptions.</text>
    <param>x first sample</param>
    <param>y second sample</param>
    <throws>NullArgumentException if {@code x} or {@code y} are {@code null}.</throws>
    <throws>NoDataException if {@code x} or {@code y} are zero-length.</throws>
  </javadoc>
  <method type="void" name="ensureDataConformance">
    <scope />
    <scope />
  </method>
  <javadoc>
    <text>Concatenate the samples into one array.</text>
    <param>x first sample</param>
    <param>y second sample</param>
    <return>concatenated array</return>
  </javadoc>
  <method type="double[]" name="concatenateSamples">
    <declaration type="double[]" name="z" />
  </method>
  <javadoc>
    <text>Computes the &lt;a
 * href="http://en.wikipedia.org/wiki/Mann%E2%80%93Whitney_U"&gt; Mann-Whitney
 * U statistic&lt;/a&gt; comparing mean for two independent samples possibly of
 * different length.
 * &lt;p&gt;
 * This statistic can be used to perform a Mann-Whitney U test evaluating
 * the null hypothesis that the two independent samples has equal mean.
 * &lt;/p&gt;
 * &lt;p&gt;
 * Let X&lt;sub&gt;i&lt;/sub&gt; denote the i'th individual of the first sample and
 * Y&lt;sub&gt;j&lt;/sub&gt; the j'th individual in the second sample. Note that the
 * samples would often have different length.
 * &lt;/p&gt;
 * &lt;p&gt;
 * &lt;strong&gt;Preconditions&lt;/strong&gt;:
 * &lt;ul&gt;
 * &lt;li&gt;All observations in the two samples are independent.&lt;/li&gt;
 * &lt;li&gt;The observations are at least ordinal (continuous are also ordinal).&lt;/li&gt;
 * &lt;/ul&gt;
 * &lt;/p&gt;</text>
    <param>x the first sample</param>
    <param>y the second sample</param>
    <return>Mann-Whitney U statistic (maximum of U&lt;sup&gt;x&lt;/sup&gt; and U&lt;sup&gt;y&lt;/sup&gt;)</return>
    <throws>NullArgumentException if {@code x} or {@code y} are {@code null}.</throws>
    <throws>NoDataException if {@code x} or {@code y} are zero-length.</throws>
  </javadoc>
  <method type="double" name="mannWhitneyU">
    <declaration type="double[]" name="z" />
    <declaration type="double[]" name="ranks" />
    <declaration type="double" name="sumRankX" />
    <scope />
    <declaration type="double" name="U1" />
    <declaration type="double" name="U2" />
    <comment>The ranks for x is in the first x.length entries in ranks because x
 is in the first x.length entries in z</comment>
    <comment>U1 = R1 - (n1  (n1 + 1))  2 where R1 is sum of ranks for sample 1,
 e.g. x, n1 is the number of observations in sample 1.</comment>
    <comment>It can be shown that U1 + U2 = n1  n2</comment>
  </method>
  <javadoc>
    <param>Umin smallest Mann-Whitney U value</param>
    <param>n1 number of subjects in first sample</param>
    <param>n2 number of subjects in second sample</param>
    <return>two-sided asymptotic p-value</return>
    <throws>ConvergenceException if the p-value can not be computed
 * due to a convergence error</throws>
    <throws>MaxCountExceededException if the maximum number of
 * iterations is exceeded</throws>
  </javadoc>
  <method type="double" name="calculateAsymptoticPValue">
    <declaration type="long" name="n1n2prod" />
    <declaration type="double" name="EU" />
    <declaration type="double" name="VarU" />
    <declaration type="double" name="z" />
    <declaration type="NormalDistribution" name="standardNormal" />
    <comment>long multiplication to avoid overflow (double not used due to efficiency
 and to avoid precision loss)</comment>
    <comment>http:en.wikipedia.org/wiki/Mann%E2%80%93Whitney_U#Normal_approximation</comment>
    <comment>No try-catch or advertised exception because args are valid</comment>
  </method>
  <javadoc>
    <text>Returns the asymptotic &lt;i&gt;observed significance level&lt;/i&gt;, or &lt;a href=
 * "http://www.cas.lancs.ac.uk/glossary_v1.1/hyptest.html#pvalue"&gt;
 * p-value&lt;/a&gt;, associated with a &lt;a
 * href="http://en.wikipedia.org/wiki/Mann%E2%80%93Whitney_U"&gt; Mann-Whitney
 * U statistic&lt;/a&gt; comparing mean for two independent samples.
 * &lt;p&gt;
 * Let X&lt;sub&gt;i&lt;/sub&gt; denote the i'th individual of the first sample and
 * Y&lt;sub&gt;j&lt;/sub&gt; the j'th individual in the second sample. Note that the
 * samples would often have different length.
 * &lt;/p&gt;
 * &lt;p&gt;
 * &lt;strong&gt;Preconditions&lt;/strong&gt;:
 * &lt;ul&gt;
 * &lt;li&gt;All observations in the two samples are independent.&lt;/li&gt;
 * &lt;li&gt;The observations are at least ordinal (continuous are also ordinal).&lt;/li&gt;
 * &lt;/ul&gt;
 * &lt;/p&gt;&lt;p&gt;
 * Ties give rise to biased variance at the moment. See e.g. &lt;a
 * href="http://mlsc.lboro.ac.uk/resources/statistics/Mannwhitney.pdf"
 * &gt;http://mlsc.lboro.ac.uk/resources/statistics/Mannwhitney.pdf&lt;/a&gt;.&lt;/p&gt;</text>
    <param>x the first sample</param>
    <param>y the second sample</param>
    <return>asymptotic p-value</return>
    <throws>NullArgumentException if {@code x} or {@code y} are {@code null}.</throws>
    <throws>NoDataException if {@code x} or {@code y} are zero-length.</throws>
    <throws>ConvergenceException if the p-value can not be computed due to a
 * convergence error</throws>
    <throws>MaxCountExceededException if the maximum number of iterations
 * is exceeded</throws>
  </javadoc>
  <method type="double" name="mannWhitneyUTest">
    <declaration type="double" name="Umax" />
    <declaration type="double" name="Umin" />
    <comment>It can be shown that U1 + U2 = n1  n2</comment>
  </method>
  <comment>Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the "License"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

      http:www.apache.orglicensesLICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.</comment>
</class>
