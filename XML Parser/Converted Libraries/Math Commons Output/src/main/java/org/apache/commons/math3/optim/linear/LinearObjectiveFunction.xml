<?xml version="1.0" encoding="UTF-8"?>
<class name="LinearObjectiveFunction">
  <javadoc>
    <text>An objective function for a linear optimization problem.
 * &lt;p&gt;
 * A linear objective function has one the form:
 * &lt;pre&gt;
 * c&lt;sub&gt;1&lt;/sub&gt;x&lt;sub&gt;1&lt;/sub&gt; + ... c&lt;sub&gt;n&lt;/sub&gt;x&lt;sub&gt;n&lt;/sub&gt; + d
 * &lt;/pre&gt;
 * The c&lt;sub&gt;i&lt;/sub&gt; and d are the coefficients of the equation,
 * the x&lt;sub&gt;i&lt;/sub&gt; are the coordinates of the current point.
 * &lt;/p&gt;</text>
    <version>$Id: LinearObjectiveFunction.java 1435539 2013-01-19 13:27:24Z tn $</version>
    <since>2.0</since>
  </javadoc>
  <javadoc>
    <text>Serializable version identifier.</text>
  </javadoc>
  <declaration type="long" name="serialVersionUID" />
  <javadoc>
    <text>Coefficients of the linear equation (c&lt;sub&gt;i&lt;/sub&gt;).</text>
  </javadoc>
  <declaration type="RealVector" name="coefficients" />
  <javadoc>
    <text>Constant term of the linear equation.</text>
  </javadoc>
  <declaration type="double" name="constantTerm" />
  <javadoc>
    <param>coefficients Coefficients for the linear equation being optimized.</param>
    <param>constantTerm Constant term of the linear equation.</param>
  </javadoc>
  <method type="constructor" name="LinearObjectiveFunction" />
  <javadoc>
    <param>coefficients Coefficients for the linear equation being optimized.</param>
    <param>constantTerm Constant term of the linear equation.</param>
  </javadoc>
  <method type="constructor" name="LinearObjectiveFunction" />
  <javadoc>
    <text>Gets the coefficients of the linear equation being optimized.</text>
    <return>coefficients of the linear equation being optimized.</return>
  </javadoc>
  <method type="RealVector" name="getCoefficients" />
  <javadoc>
    <text>Gets the constant of the linear equation being optimized.</text>
    <return>constant of the linear equation being optimized.</return>
  </javadoc>
  <method type="double" name="getConstantTerm" />
  <javadoc>
    <text>Computes the value of the linear equation at the current point.</text>
    <param>point Point at which linear equation must be evaluated.</param>
    <return>the value of the linear equation at the current point.</return>
  </javadoc>
  <method type="double" name="value" />
  <javadoc>
    <text>Computes the value of the linear equation at the current point.</text>
    <param>point Point at which linear equation must be evaluated.</param>
    <return>the value of the linear equation at the current point.</return>
  </javadoc>
  <method type="double" name="value" />
  <method type="boolean" name="equals">
    <scope />
    <scope>
      <declaration type="LinearObjectiveFunction" name="rhs" />
    </scope>
  </method>
  <method type="int" name="hashCode" />
  <javadoc>
    <text>Serialize the instance.</text>
    <param>oos stream where object should be written</param>
    <throws>IOException if object cannot be written to stream</throws>
  </javadoc>
  <method type="void" name="writeObject" />
  <javadoc>
    <text>Deserialize the instance.</text>
    <param>ois stream from which the object should be read</param>
    <throws>ClassNotFoundException if a class in the stream cannot be found</throws>
    <throws>IOException if object cannot be read from the stream</throws>
  </javadoc>
  <method type="void" name="readObject" />
  <comment>Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the "License"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

      http:www.apache.orglicensesLICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.</comment>
</class>
