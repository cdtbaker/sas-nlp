<?xml version="1.0" encoding="UTF-8"?>
<class name="RungeKuttaIntegrator">
  <javadoc>
    <text>This class implements the common part of all fixed step Runge-Kutta
 * integrators for Ordinary Differential Equations.
 * &lt;p&gt;These methods are explicit Runge-Kutta methods, their Butcher
 * arrays are as follows :
 * &lt;pre&gt;
 * 0  |
 * c2  | a21
 * c3  | a31  a32
 * ... |        ...
 * cs  | as1  as2  ...  ass-1
 * |--------------------------
 * |  b1   b2  ...   bs-1  bs
 * &lt;/pre&gt;
 * &lt;/p&gt;</text>
    <see>EulerIntegrator</see>
    <see>ClassicalRungeKuttaIntegrator</see>
    <see>GillIntegrator</see>
    <see>MidpointIntegrator</see>
    <version>$Id: RungeKuttaIntegrator.java 1416643 2012-12-03 19:37:14Z tn $</version>
    <since>1.2</since>
  </javadoc>
  <javadoc>
    <text>Time steps from Butcher array (without the first zero).</text>
  </javadoc>
  <declaration type="double[]" name="c" />
  <javadoc>
    <text>Internal weights from Butcher array (without the first empty row).</text>
  </javadoc>
  <declaration type="double[][]" name="a" />
  <javadoc>
    <text>External weights for the high order method from Butcher array.</text>
  </javadoc>
  <declaration type="double[]" name="b" />
  <javadoc>
    <text>Prototype of the step interpolator.</text>
  </javadoc>
  <declaration type="RungeKuttaStepInterpolator" name="prototype" />
  <javadoc>
    <text>Integration step.</text>
  </javadoc>
  <declaration type="double" name="step" />
  <javadoc>
    <text>Simple constructor.
 * Build a Runge-Kutta integrator with the given
 * step. The default step handler does nothing.</text>
    <param>name name of the method</param>
    <param>c time steps from Butcher array (without the first zero)</param>
    <param>a internal weights from Butcher array (without the first empty row)</param>
    <param>b propagation weights for the high order method from Butcher array</param>
    <param>prototype prototype of the step interpolator to use</param>
    <param>step integration step</param>
  </javadoc>
  <method type="constructor" name="RungeKuttaIntegrator" />
  <javadoc>
    <text>{@inheritDoc}</text>
  </javadoc>
  <method type="void" name="integrate">
    <declaration type="boolean" name="forward" />
    <declaration type="double[]" name="y0" />
    <declaration type="double[]" name="y" />
    <declaration type="int" name="stages" />
    <declaration type="double[][][]" name="yDotK" />
    <scope />
    <declaration type="double[]" name="yTmp" />
    <declaration type="double[]" name="yDotTmp" />
    <declaration type="RungeKuttaStepInterpolator" name="interpolator" />
    <scope>
      <scope>
        <scope>
          <declaration type="double" name="sum" />
          <scope />
        </scope>
      </scope>
      <scope>
        <declaration type="double" name="sum" />
        <scope />
      </scope>
      <scope>
        <declaration type="double" name="nextT" />
        <declaration type="boolean" name="nextIsLast" />
        <scope />
      </scope>
    </scope>
    <comment>create some internal working arrays</comment>
    <comment>set up an interpolator sharing the integrator arrays</comment>
    <comment>set up integration control objects</comment>
    <comment>main integration loop</comment>
    <comment>first stage</comment>
    <comment>next stages</comment>
    <comment>estimate the state at the end of the step</comment>
    <comment>discrete events handling</comment>
    <comment>prepare next step</comment>
    <comment>stepsize control for next step</comment>
    <comment>dispatch results</comment>
  </method>
  <comment>Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the "License"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

      http:www.apache.orglicensesLICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.</comment>
</class>
