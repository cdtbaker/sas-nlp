<?xml version="1.0" encoding="UTF-8"?>
<class name="HighamHall54Integrator">
  <javadoc>
    <text>This class implements the 5(4) Higham and Hall integrator for
 * Ordinary Differential Equations.
 * &lt;p&gt;This integrator is an embedded Runge-Kutta integrator
 * of order 5(4) used in local extrapolation mode (i.e. the solution
 * is computed using the high order formula) with stepsize control
 * (and automatic step initialization) and continuous output. This
 * method uses 7 functions evaluations per step.&lt;/p&gt;</text>
    <version>$Id: HighamHall54Integrator.java 1416643 2012-12-03 19:37:14Z tn $</version>
    <since>1.2</since>
  </javadoc>
  <javadoc>
    <text>Integrator method name.</text>
  </javadoc>
  <declaration type="String" name="METHOD_NAME" />
  <javadoc>
    <text>Time steps Butcher array.</text>
  </javadoc>
  <declaration type="double[]" name="STATIC_C" />
  <javadoc>
    <text>Internal weights Butcher array.</text>
  </javadoc>
  <declaration type="double[][]" name="STATIC_A" />
  <javadoc>
    <text>Propagation weights Butcher array.</text>
  </javadoc>
  <declaration type="double[]" name="STATIC_B" />
  <javadoc>
    <text>Error weights Butcher array.</text>
  </javadoc>
  <declaration type="double[]" name="STATIC_E" />
  <javadoc>
    <text>Simple constructor.
 * Build a fifth order Higham and Hall integrator with the given step bounds</text>
    <param>minStep minimal step (sign is irrelevant, regardless of
 * integration direction, forward or backward), the last step can
 * be smaller than this</param>
    <param>maxStep maximal step (sign is irrelevant, regardless of
 * integration direction, forward or backward), the last step can
 * be smaller than this</param>
    <param>scalAbsoluteTolerance allowed absolute error</param>
    <param>scalRelativeTolerance allowed relative error</param>
  </javadoc>
  <method type="constructor" name="HighamHall54Integrator" />
  <javadoc>
    <text>Simple constructor.
 * Build a fifth order Higham and Hall integrator with the given step bounds</text>
    <param>minStep minimal step (sign is irrelevant, regardless of
 * integration direction, forward or backward), the last step can
 * be smaller than this</param>
    <param>maxStep maximal step (sign is irrelevant, regardless of
 * integration direction, forward or backward), the last step can
 * be smaller than this</param>
    <param>vecAbsoluteTolerance allowed absolute error</param>
    <param>vecRelativeTolerance allowed relative error</param>
  </javadoc>
  <method type="constructor" name="HighamHall54Integrator" />
  <javadoc>
    <text>{@inheritDoc}</text>
  </javadoc>
  <method type="int" name="getOrder" />
  <javadoc>
    <text>{@inheritDoc}</text>
  </javadoc>
  <method type="double" name="estimateError">
    <declaration type="double" name="error" />
    <scope>
      <declaration type="double" name="errSum" />
      <scope />
      <declaration type="double" name="yScale" />
      <declaration type="double" name="tol" />
      <declaration type="double" name="ratio" />
    </scope>
  </method>
  <comment>Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the "License"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

      http:www.apache.orglicensesLICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.</comment>
</class>
