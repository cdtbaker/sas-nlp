<?xml version="1.0" encoding="UTF-8"?>
<class name="PointVectorValuePair">
  <javadoc>
    <text>This class holds a point and the vectorial value of an objective function at
 * that point.</text>
    <see>PointValuePair</see>
    <see>org.apache.commons.math3.analysis.MultivariateVectorFunction</see>
    <version>$Id: PointVectorValuePair.java 1435539 2013-01-19 13:27:24Z tn $</version>
    <since>3.0</since>
  </javadoc>
  <javadoc>
    <text>Serializable UID.</text>
  </javadoc>
  <declaration type="long" name="serialVersionUID" />
  <javadoc>
    <text>Builds a point/objective function value pair.</text>
    <param>point Point coordinates. This instance will store
 * a copy of the array, not the array passed as argument.</param>
    <param>value Value of the objective function at the point.</param>
  </javadoc>
  <method type="constructor" name="PointVectorValuePair" />
  <javadoc>
    <text>Build a point/objective function value pair.</text>
    <param>point Point coordinates.</param>
    <param>value Value of the objective function at the point.</param>
    <param>copyArray if {@code true}, the input arrays will be copied,
 * otherwise they will be referenced.</param>
  </javadoc>
  <method type="constructor" name="PointVectorValuePair" />
  <javadoc>
    <text>Gets the point.</text>
    <return>a copy of the stored point.</return>
  </javadoc>
  <method type="double[]" name="getPoint">
    <declaration type="double[]" name="p" />
  </method>
  <javadoc>
    <text>Gets a reference to the point.</text>
    <return>a reference to the internal array storing the point.</return>
  </javadoc>
  <method type="double[]" name="getPointRef" />
  <javadoc>
    <text>Gets the value of the objective function.</text>
    <return>a copy of the stored value of the objective function.</return>
  </javadoc>
  <method type="double[]" name="getValue">
    <declaration type="double[]" name="v" />
  </method>
  <javadoc>
    <text>Gets a reference to the value of the objective function.</text>
    <return>a reference to the internal array storing the value of
 * the objective function.</return>
  </javadoc>
  <method type="double[]" name="getValueRef" />
  <javadoc>
    <text>Replace the instance with a data transfer object for serialization.</text>
    <return>data transfer object that will be serialized</return>
  </javadoc>
  <method type="Object" name="writeReplace" />
  <javadoc>
    <text>Internal class used only for serialization.</text>
  </javadoc>
  <javadoc>
    <text>Serializable UID.</text>
  </javadoc>
  <declaration type="long" name="serialVersionUID" />
  <javadoc>
    <text>Point coordinates.</text>
    <Serial />
  </javadoc>
  <declaration type="double[]" name="point" />
  <javadoc>
    <text>Value of the objective function at the point.</text>
    <Serial />
  </javadoc>
  <declaration type="double[]" name="value" />
  <javadoc>
    <text>Simple constructor.</text>
    <param>point Point coordinates.</param>
    <param>value Value of the objective function at the point.</param>
  </javadoc>
  <method type="constructor" name="DataTransferObject" />
  <javadoc>
    <text>Replace the deserialized data transfer object with a {@link PointValuePair}.</text>
    <return>replacement {@link PointValuePair}</return>
  </javadoc>
  <method type="Object" name="readResolve" />
  <comment>Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the "License"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

      http:www.apache.orglicensesLICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.</comment>
</class>
