<?xml version="1.0" encoding="UTF-8"?>
<class name="ConjugateGradient">
  <javadoc>
    <text>&lt;p&gt;
 * This is an implementation of the conjugate gradient method for{@link RealLinearOperator}. It follows closely the template by &lt;a
 * href="#BARR1994"&gt;Barrett et al. (1994)&lt;/a&gt; (figure 2.5). The linear system at
 * hand is A &amp;middot; x = b, and the residual is r = b - A &amp;middot; x.
 * &lt;/p&gt;
 * &lt;h3&gt;&lt;a id="stopcrit"&gt;Default stopping criterion&lt;/a&gt;&lt;/h3&gt;
 * &lt;p&gt;
 * A default stopping criterion is implemented. The iterations stop when || r ||
 * &amp;le; &amp;delta; || b ||, where b is the right-hand side vector, r the current
 * estimate of the residual, and &amp;delta; a user-specified tolerance. It should
 * be noted that r is the so-called &lt;em&gt;updated&lt;/em&gt; residual, which might
 * differ from the true residual due to rounding-off errors (see e.g. &lt;a
 * href="#STRA2002"&gt;Strakos and Tichy, 2002&lt;/a&gt;).
 * &lt;/p&gt;
 * &lt;h3&gt;Iteration count&lt;/h3&gt;
 * &lt;p&gt;
 * In the present context, an iteration should be understood as one evaluation
 * of the matrix-vector product A &amp;middot; x. The initialization phase therefore
 * counts as one iteration.
 * &lt;/p&gt;
 * &lt;h3&gt;&lt;a id="context"&gt;Exception context&lt;/a&gt;&lt;/h3&gt;
 * &lt;p&gt;
 * Besides standard {@link DimensionMismatchException}, this class might throw{@link NonPositiveDefiniteOperatorException} if the linear operator or
 * the preconditioner are not positive definite. In this case, the{@link ExceptionContext} provides some more information
 * &lt;ul&gt;
 * &lt;li&gt;key {@code "operator"} points to the offending linear operator, say L,&lt;/li&gt;
 * &lt;li&gt;key {@code "vector"} points to the offending vector, say x, such that
 * x&lt;sup&gt;T&lt;/sup&gt; &amp;middot; L &amp;middot; x &lt; 0.&lt;/li&gt;
 * &lt;/ul&gt;
 * &lt;/p&gt;
 * &lt;h3&gt;References&lt;/h3&gt;
 * &lt;dl&gt;
 * &lt;dt&gt;&lt;a id="BARR1994"&gt;Barret et al. (1994)&lt;/a&gt;&lt;/dt&gt;
 * &lt;dd&gt;R. Barrett, M. Berry, T. F. Chan, J. Demmel, J. M. Donato, J. Dongarra,
 * V. Eijkhout, R. Pozo, C. Romine and H. Van der Vorst,
 * &lt;a href="http://www.netlib.org/linalg/html_templates/Templates.html"&gt;&lt;em&gt;
 * Templates for the Solution of Linear Systems: Building Blocks for Iterative
 * Methods&lt;/em&gt;&lt;/a&gt;, SIAM&lt;/dd&gt;
 * &lt;dt&gt;&lt;a id="STRA2002"&gt;Strakos and Tichy (2002)
 * &lt;dt&gt;
 * &lt;dd&gt;Z. Strakos and P. Tichy, &lt;a
 * href="http://etna.mcs.kent.edu/vol.13.2002/pp56-80.dir/pp56-80.pdf"&gt;
 * &lt;em&gt;On error estimation in the conjugate gradient method and why it works
 * in finite precision computations&lt;/em&gt;&lt;/a&gt;, Electronic Transactions on
 * Numerical Analysis 13: 56-80, 2002&lt;/dd&gt;
 * &lt;/dl&gt;</text>
    <version>$Id: ConjugateGradient.java 1416643 2012-12-03 19:37:14Z tn $</version>
    <since>3.0</since>
  </javadoc>
  <javadoc>
    <text>Key for the &lt;a href="#context"&gt;exception context&lt;/a&gt;.</text>
  </javadoc>
  <declaration type="String" name="OPERATOR" />
  <javadoc>
    <text>Key for the &lt;a href="#context"&gt;exception context&lt;/a&gt;.</text>
  </javadoc>
  <declaration type="String" name="VECTOR" />
  <javadoc>
    <text>{@code true} if positive-definiteness of matrix and preconditioner should
 * be checked.</text>
  </javadoc>
  <declaration type="boolean" name="check" />
  <javadoc>
    <text>The value of &amp;delta;, for the default stopping criterion.</text>
  </javadoc>
  <declaration type="double" name="delta" />
  <javadoc>
    <text>Creates a new instance of this class, with &lt;a href="#stopcrit"&gt;default
 * stopping criterion&lt;/a&gt;.</text>
    <param>maxIterations the maximum number of iterations</param>
    <param>delta the &amp;delta; parameter for the default stopping criterion</param>
    <param>check {@code true} if positive definiteness of both matrix and
 * preconditioner should be checked</param>
  </javadoc>
  <method type="constructor" name="ConjugateGradient" />
  <javadoc>
    <text>Creates a new instance of this class, with &lt;a href="#stopcrit"&gt;default
 * stopping criterion&lt;/a&gt; and custom iteration manager.</text>
    <param>manager the custom iteration manager</param>
    <param>delta the &amp;delta; parameter for the default stopping criterion</param>
    <param>check {@code true} if positive definiteness of both matrix and
 * preconditioner should be checked</param>
    <throws>NullArgumentException if {@code manager} is {@code null}</throws>
  </javadoc>
  <method type="constructor" name="ConjugateGradient" />
  <javadoc>
    <text>Returns {@code true} if positive-definiteness should be checked for both
 * matrix and preconditioner.</text>
    <return>{@code true} if the tests are to be performed</return>
  </javadoc>
  <method type="boolean" name="getCheck" />
  <javadoc>
    <text>{@inheritDoc}</text>
    <throws>NonPositiveDefiniteOperatorException if {@code a} or {@code m} is
 * not positive definite</throws>
  </javadoc>
  <method type="RealVector" name="solveInPlace">
    <declaration type="IterationManager" name="manager" />
    <declaration type="double" name="rmax" />
    <declaration type="RealVector" name="bro" />
    <declaration type="RealVector" name="x" />
    <declaration type="RealVector" name="xro" />
    <declaration type="RealVector" name="p" />
    <declaration type="RealVector" name="q" />
    <declaration type="RealVector" name="r" />
    <declaration type="RealVector" name="rro" />
    <declaration type="double" name="rnorm" />
    <declaration type="RealVector" name="z" />
    <scope />
    <scope />
    <declaration type="IterativeLinearSolverEvent" name="evt" />
    <scope />
    <declaration type="double" name="rhoPrev" />
    <scope>
      <scope />
      <declaration type="double" name="rhoNext" />
      <scope>
        <declaration type="NonPositiveDefiniteOperatorException" name="e" />
        <declaration type="ExceptionContext" name="context" />
      </scope>
      <scope />
      <scope />
      <declaration type="double" name="pq" />
      <scope>
        <declaration type="NonPositiveDefiniteOperatorException" name="e" />
        <declaration type="ExceptionContext" name="context" />
      </scope>
      <declaration type="double" name="alpha" />
      <scope />
    </scope>
    <comment>Initialization of default stopping criterion</comment>
    <comment>Initialization phase counts as one iteration.</comment>
    <comment>p and x are constructed as copies of x0, since presumably, the type</comment>
    <comment>of x is optimized for the calculation of the matrix-vector product</comment>
    <comment>A.x.</comment>
  </method>
  <comment>Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the "License"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

      http:www.apache.orglicensesLICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.</comment>
</class>
