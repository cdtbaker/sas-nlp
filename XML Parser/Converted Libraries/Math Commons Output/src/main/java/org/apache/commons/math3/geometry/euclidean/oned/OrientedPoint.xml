<?xml version="1.0" encoding="UTF-8"?>
<class name="OrientedPoint">
  <javadoc>
    <text>This class represents a 1D oriented hyperplane.
 * &lt;p&gt;An hyperplane in 1D is a simple point, its orientation being a
 * boolean.&lt;/p&gt;
 * &lt;p&gt;Instances of this class are guaranteed to be immutable.&lt;/p&gt;</text>
    <version>$Id: OrientedPoint.java 1416643 2012-12-03 19:37:14Z tn $</version>
    <since>3.0</since>
  </javadoc>
  <javadoc>
    <text>Vector location.</text>
  </javadoc>
  <declaration type="Vector1D" name="location" />
  <javadoc>
    <text>Orientation.</text>
  </javadoc>
  <declaration type="boolean" name="direct" />
  <javadoc>
    <text>Simple constructor.</text>
    <param>location location of the hyperplane</param>
    <param>direct if true, the plus side of the hyperplane is towards
 * abscissas greater than {@code location}</param>
  </javadoc>
  <method type="constructor" name="OrientedPoint" />
  <javadoc>
    <text>Copy the instance.
 * &lt;p&gt;Since instances are immutable, this method directly returns
 * the instance.&lt;/p&gt;</text>
    <return>the instance itself</return>
  </javadoc>
  <method type="OrientedPoint" name="copySelf" />
  <javadoc>
    <text>{@inheritDoc}</text>
  </javadoc>
  <method type="double" name="getOffset">
    <declaration type="double" name="delta" />
  </method>
  <javadoc>
    <text>Build a region covering the whole hyperplane.
 * &lt;p&gt;Since this class represent zero dimension spaces which does
 * not have lower dimension sub-spaces, this method returns a dummy
 * implementation of a {@link org.apache.commons.math3.geometry.partitioning.SubHyperplane SubHyperplane}.
 * This implementation is only used to allow the {@link org.apache.commons.math3.geometry.partitioning.SubHyperplaneSubHyperplane} class implementation to work properly, it should
 * &lt;em&gt;not&lt;/em&gt; be used otherwise.&lt;/p&gt;</text>
    <return>a dummy sub hyperplane</return>
  </javadoc>
  <method type="SubOrientedPoint" name="wholeHyperplane" />
  <javadoc>
    <text>Build a region covering the whole space.</text>
    <return>a region containing the instance (really an {@link IntervalsSet IntervalsSet} instance)</return>
  </javadoc>
  <method type="IntervalsSet" name="wholeSpace" />
  <javadoc>
    <text>{@inheritDoc}</text>
  </javadoc>
  <method type="boolean" name="sameOrientationAs" />
  <javadoc>
    <text>Get the hyperplane location on the real line.</text>
    <return>the hyperplane location</return>
  </javadoc>
  <method type="Vector1D" name="getLocation" />
  <javadoc>
    <text>Check if the hyperplane orientation is direct.</text>
    <return>true if the plus side of the hyperplane is towards
 * abscissae greater than hyperplane location</return>
  </javadoc>
  <method type="boolean" name="isDirect" />
  <javadoc>
    <text>Revert the instance.</text>
  </javadoc>
  <method type="void" name="revertSelf" />
  <comment>Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the "License"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

      http:www.apache.orglicensesLICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.</comment>
</class>
