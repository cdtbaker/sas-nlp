<?xml version="1.0" encoding="UTF-8"?>
<class name="RiddersSolver">
  <javadoc>
    <text>Implements the &lt;a href="http://mathworld.wolfram.com/RiddersMethod.html"&gt;
 * Ridders' Method&lt;/a&gt; for root finding of real univariate functions. For
 * reference, see C. Ridders, &lt;i&gt;A new algorithm for computing a single root
 * of a real continuous function &lt;/i&gt;, IEEE Transactions on Circuits and
 * Systems, 26 (1979), 979 - 980.
 * &lt;p&gt;
 * The function should be continuous but not necessarily smooth.&lt;/p&gt;</text>
    <version>$Id: RiddersSolver.java 1379560 2012-08-31 19:40:30Z erans $</version>
    <since>1.2</since>
  </javadoc>
  <javadoc>
    <text>Default absolute accuracy.</text>
  </javadoc>
  <declaration type="double" name="DEFAULT_ABSOLUTE_ACCURACY" />
  <javadoc>
    <text>Construct a solver with default accuracy (1e-6).</text>
  </javadoc>
  <method type="constructor" name="RiddersSolver" />
  <javadoc>
    <text>Construct a solver.</text>
    <param>absoluteAccuracy Absolute accuracy.</param>
  </javadoc>
  <method type="constructor" name="RiddersSolver" />
  <javadoc>
    <text>Construct a solver.</text>
    <param>relativeAccuracy Relative accuracy.</param>
    <param>absoluteAccuracy Absolute accuracy.</param>
  </javadoc>
  <method type="constructor" name="RiddersSolver" />
  <javadoc>
    <text>{@inheritDoc}</text>
  </javadoc>
  <method type="double" name="doSolve">
    <declaration type="double" name="min" />
    <declaration type="double" name="max" />
    <declaration type="double" name="x1" />
    <declaration type="double" name="y1" />
    <declaration type="double" name="x2" />
    <declaration type="double" name="y2" />
    <scope />
    <scope />
    <declaration type="double" name="absoluteAccuracy" />
    <declaration type="double" name="functionValueAccuracy" />
    <declaration type="double" name="relativeAccuracy" />
    <declaration type="double" name="oldx" />
    <scope>
      <declaration type="double" name="x3" />
      <declaration type="double" name="y3" />
      <scope />
      <declaration type="double" name="delta" />
      <declaration type="double" name="correction" />
      <declaration type="double" name="x" />
      <declaration type="double" name="y" />
      <declaration type="double" name="tolerance" />
      <scope />
      <scope />
      <scope>
        <scope />
        <scope />
      </scope>
      <scope>
        <scope />
        <scope />
      </scope>
    </scope>
    <comment>[x1, x2] is the bracketing interval in each iteration</comment>
    <comment>x3 is the midpoint of [x1, x2]</comment>
    <comment>x is the new root approximation and an endpoint of the new interval</comment>
    <comment>check for zeros before verifying bracketing</comment>
    <comment>calculate the new root approximation</comment>
    <comment>delta &gt; 1 due to bracketing</comment>
    <comment>correction != 0</comment>
    <comment>check for convergence</comment>
    <comment>prepare the new interval for next iteration</comment>
    <comment>Ridders' method guarantees x1 &lt; x &lt; x2</comment>
    <comment>x1 &lt; x &lt; x3</comment>
    <comment>x3 &lt; x &lt; x2</comment>
  </method>
  <comment>Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the "License"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

      http:www.apache.orglicensesLICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.</comment>
</class>
