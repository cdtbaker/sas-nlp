<?xml version="1.0" encoding="UTF-8"?>
<class name="FirstOrderIntegrator">
  <javadoc>
    <text>This interface represents a first order integrator for
 * differential equations.
 * &lt;p&gt;The classes which are devoted to solve first order differential
 * equations should implement this interface. The problems which can
 * be handled should implement the {@link FirstOrderDifferentialEquations} interface.&lt;/p&gt;</text>
    <see>FirstOrderDifferentialEquations</see>
    <see>org.apache.commons.math3.ode.sampling.StepHandler</see>
    <see>org.apache.commons.math3.ode.events.EventHandler</see>
    <version>$Id: FirstOrderIntegrator.java 1416643 2012-12-03 19:37:14Z tn $</version>
    <since>1.2</since>
  </javadoc>
  <method name="integrate" type="double" />
  <javadoc>
    <text>Integrate the differential equations up to the given time.
 * &lt;p&gt;This method solves an Initial Value Problem (IVP).&lt;/p&gt;
 * &lt;p&gt;Since this method stores some internal state variables made
 * available in its public interface during integration ({@link #getCurrentSignedStepsize()}), it is &lt;em&gt;not&lt;/em&gt; thread-safe.&lt;/p&gt;</text>
    <param>equations differential equations to integrate</param>
    <param>t0 initial time</param>
    <param>y0 initial value of the state vector at t0</param>
    <param>t target time for the integration
 * (can be set to a value smaller than &lt;code&gt;t0&lt;/code&gt; for backward integration)</param>
    <param>y placeholder where to put the state vector at each successful
 * step (and hence at the end of integration), can be the same object as y0</param>
    <return>stop time, will be the same as target time if integration reached its
 * target, but may be different if some {@link org.apache.commons.math3.ode.events.EventHandler} stops it at some point.</return>
    <exception>DimensionMismatchException if arrays dimension do not match equations settings</exception>
    <exception>NumberIsTooSmallException if integration step is too small</exception>
    <exception>MaxCountExceededException if the number of functions evaluations is exceeded</exception>
    <exception>NoBracketingException if the location of an event cannot be bracketed</exception>
  </javadoc>
  <comment>Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the "License"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

      http:www.apache.orglicensesLICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.</comment>
</class>
