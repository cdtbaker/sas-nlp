<?xml version="1.0" encoding="UTF-8"?>
<class name="MultiStartMultivariateVectorOptimizer">
  <javadoc>
    <text>Multi-start optimizer for a (vector) model function.
 * This class wraps an optimizer in order to use it several times in
 * turn with different starting points (trying to avoid being trapped
 * in a local extremum when looking for a global one).</text>
    <version>$Id: MultiStartMultivariateVectorOptimizer.java 1435539 2013-01-19 13:27:24Z tn $</version>
    <since>3.0</since>
  </javadoc>
  <javadoc>
    <text>Underlying optimizer.</text>
  </javadoc>
  <declaration type="MultivariateVectorOptimizer" name="optimizer" />
  <javadoc>
    <text>Found optima.</text>
  </javadoc>
  <declaration type="List&lt;PointVectorValuePair&gt;" name="optima" />
  <javadoc>
    <text>Create a multi-start optimizer from a single-start optimizer.</text>
    <param>optimizer Single-start optimizer to wrap.</param>
    <param>starts Number of starts to perform.
 * If {@code starts == 1}, the result will be same as if {@code optimizer}is called directly.</param>
    <param>generator Random vector generator to use for restarts.</param>
    <throws>NullArgumentException if {@code optimizer} or {@code generator}is {@code null}.</throws>
    <throws>NotStrictlyPositiveException if {@code starts &lt; 1}.</throws>
  </javadoc>
  <method type="constructor" name="MultiStartMultivariateVectorOptimizer" />
  <javadoc>
    <text>{@inheritDoc}</text>
  </javadoc>
  <method type="PointVectorValuePair[]" name="getOptima" />
  <javadoc>
    <text>{@inheritDoc}</text>
  </javadoc>
  <method type="void" name="store" />
  <javadoc>
    <text>{@inheritDoc}</text>
  </javadoc>
  <method type="void" name="clear" />
  <javadoc>
    <return>a comparator for sorting the optima.</return>
  </javadoc>
  <method type="Comparator&lt;PointVectorValuePair&gt;" name="getPairComparator">
    <declaration type="RealVector" name="target" />
    <declaration type="RealMatrix" name="weight" />
    <method type="int" name="compare">
      <scope />
      <scope />
    </method>
    <method type="double" name="weightedResidual">
      <declaration type="RealVector" name="v" />
      <declaration type="RealVector" name="r" />
    </method>
  </method>
  <comment>Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the "License"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

      http:www.apache.orglicensesLICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.</comment>
</class>
