<?xml version="1.0" encoding="UTF-8"?>
<class name="SynchronizedDescriptiveStatistics">
  <javadoc>
    <text>Implementation of{@link org.apache.commons.math3.stat.descriptive.DescriptiveStatistics} that
 * is safe to use in a multithreaded environment.  Multiple threads can safely
 * operate on a single instance without causing runtime exceptions due to race
 * conditions.  In effect, this implementation makes modification and access
 * methods atomic operations for a single instance.  That is to say, as one
 * thread is computing a statistic from the instance, no other thread can modify
 * the instance nor compute another statistic.</text>
    <since>1.2</since>
    <version>$Id: SynchronizedDescriptiveStatistics.java 1416643 2012-12-03 19:37:14Z tn $</version>
  </javadoc>
  <javadoc>
    <text>Serialization UID</text>
  </javadoc>
  <declaration type="long" name="serialVersionUID" />
  <javadoc>
    <text>Construct an instance with infinite window</text>
  </javadoc>
  <method type="constructor" name="SynchronizedDescriptiveStatistics">
    <comment>no try-catch or advertized IAE because arg is valid</comment>
  </method>
  <javadoc>
    <text>Construct an instance with finite window</text>
    <param>window the finite window size.</param>
    <throws>MathIllegalArgumentException if window size is less than 1 but
 * not equal to {@link #INFINITE_WINDOW}</throws>
  </javadoc>
  <method type="constructor" name="SynchronizedDescriptiveStatistics" />
  <javadoc>
    <text>A copy constructor. Creates a deep-copy of the {@code original}.</text>
    <param>original the {@code SynchronizedDescriptiveStatistics} instance to copy</param>
    <throws>NullArgumentException if original is null</throws>
  </javadoc>
  <method type="constructor" name="SynchronizedDescriptiveStatistics" />
  <javadoc>
    <text>{@inheritDoc}</text>
  </javadoc>
  <method type="void" name="addValue" />
  <javadoc>
    <text>{@inheritDoc}</text>
  </javadoc>
  <method type="double" name="apply" />
  <javadoc>
    <text>{@inheritDoc}</text>
  </javadoc>
  <method type="void" name="clear" />
  <javadoc>
    <text>{@inheritDoc}</text>
  </javadoc>
  <method type="double" name="getElement" />
  <javadoc>
    <text>{@inheritDoc}</text>
  </javadoc>
  <method type="long" name="getN" />
  <javadoc>
    <text>{@inheritDoc}</text>
  </javadoc>
  <method type="double" name="getStandardDeviation" />
  <javadoc>
    <text>{@inheritDoc}</text>
  </javadoc>
  <method type="double[]" name="getValues" />
  <javadoc>
    <text>{@inheritDoc}</text>
  </javadoc>
  <method type="int" name="getWindowSize" />
  <javadoc>
    <text>{@inheritDoc}</text>
  </javadoc>
  <method type="void" name="setWindowSize" />
  <javadoc>
    <text>{@inheritDoc}</text>
  </javadoc>
  <method type="String" name="toString" />
  <javadoc>
    <text>Returns a copy of this SynchronizedDescriptiveStatistics instance with the
 * same internal state.</text>
    <return>a copy of this</return>
  </javadoc>
  <method type="SynchronizedDescriptiveStatistics" name="copy">
    <declaration type="SynchronizedDescriptiveStatistics" name="result" />
    <comment>No try-catch or advertised exception because arguments are guaranteed non-null</comment>
  </method>
  <javadoc>
    <text>Copies source to dest.
 * &lt;p&gt;Neither source nor dest can be null.&lt;/p&gt;
 * &lt;p&gt;Acquires synchronization lock on source, then dest before copying.&lt;/p&gt;</text>
    <param>source SynchronizedDescriptiveStatistics to copy</param>
    <param>dest SynchronizedDescriptiveStatistics to copy to</param>
    <throws>NullArgumentException if either source or dest is null</throws>
  </javadoc>
  <method type="void" name="copy">
    <scope>
      <scope />
    </scope>
  </method>
  <comment>Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the "License"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

      http:www.apache.orglicensesLICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.</comment>
</class>
