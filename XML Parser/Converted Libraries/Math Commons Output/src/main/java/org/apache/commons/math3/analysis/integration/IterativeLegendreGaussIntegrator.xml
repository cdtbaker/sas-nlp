<?xml version="1.0" encoding="UTF-8"?>
<class name="IterativeLegendreGaussIntegrator">
  <javadoc>
    <text>This algorithm divides the integration interval into equally-sized
 * sub-interval and on each of them performs a
 * &lt;a href="http://mathworld.wolfram.com/Legendre-GaussQuadrature.html"&gt;
 * Legendre-Gauss&lt;/a&gt; quadrature.</text>
    <version>$Id: IterativeLegendreGaussIntegrator.java 1455194 2013-03-11 15:45:54Z luc $</version>
    <since>3.1</since>
  </javadoc>
  <javadoc>
    <text>Factory that computes the points and weights.</text>
  </javadoc>
  <declaration type="GaussIntegratorFactory" name="FACTORY" />
  <javadoc>
    <text>Number of integration points (per interval).</text>
  </javadoc>
  <declaration type="int" name="numberOfPoints" />
  <javadoc>
    <text>Builds an integrator with given accuracies and iterations counts.</text>
    <param>n Number of integration points.</param>
    <param>relativeAccuracy Relative accuracy of the result.</param>
    <param>absoluteAccuracy Absolute accuracy of the result.</param>
    <param>minimalIterationCount Minimum number of iterations.</param>
    <param>maximalIterationCount Maximum number of iterations.</param>
    <throws>NotStrictlyPositiveException if minimal number of iterations
 * or number of points are not strictly positive.</throws>
    <throws>NumberIsTooSmallException if maximal number of iterations
 * is smaller than or equal to the minimal number of iterations.</throws>
  </javadoc>
  <method type="constructor" name="IterativeLegendreGaussIntegrator">
    <scope />
  </method>
  <javadoc>
    <text>Builds an integrator with given accuracies.</text>
    <param>n Number of integration points.</param>
    <param>relativeAccuracy Relative accuracy of the result.</param>
    <param>absoluteAccuracy Absolute accuracy of the result.</param>
    <throws>NotStrictlyPositiveException if {@code n &lt; 1}.</throws>
  </javadoc>
  <method type="constructor" name="IterativeLegendreGaussIntegrator" />
  <javadoc>
    <text>Builds an integrator with given iteration counts.</text>
    <param>n Number of integration points.</param>
    <param>minimalIterationCount Minimum number of iterations.</param>
    <param>maximalIterationCount Maximum number of iterations.</param>
    <throws>NotStrictlyPositiveException if minimal number of iterations
 * is not strictly positive.</throws>
    <throws>NumberIsTooSmallException if maximal number of iterations
 * is smaller than or equal to the minimal number of iterations.</throws>
    <throws>NotStrictlyPositiveException if {@code n &lt; 1}.</throws>
  </javadoc>
  <method type="constructor" name="IterativeLegendreGaussIntegrator" />
  <javadoc>
    <text>{@inheritDoc}</text>
  </javadoc>
  <method type="double" name="doIntegrate">
    <declaration type="double" name="oldt" />
    <declaration type="int" name="n" />
    <scope>
      <declaration type="double" name="t" />
      <declaration type="double" name="delta" />
      <declaration type="double" name="limit" />
      <scope />
      <declaration type="double" name="ratio" />
    </scope>
    <comment>Compute first estimate with a single step.</comment>
    <comment>Improve integral with a larger number of steps.</comment>
    <comment>Estimate the error.</comment>
    <comment>check convergence</comment>
    <comment>Prepare next iteration.</comment>
  </method>
  <javadoc>
    <text>Compute the n-th stage integral.</text>
    <param>n Number of steps.</param>
    <return>the value of n-th stage integral.</return>
    <throws>TooManyEvaluationsException if the maximum number of evaluations
 * is exceeded.</throws>
  </javadoc>
  <method type="double" name="stage">
    <declaration type="UnivariateFunction" name="f" />
    <method type="double" name="value" />
    <declaration type="double" name="min" />
    <declaration type="double" name="max" />
    <declaration type="double" name="step" />
    <declaration type="double" name="sum" />
    <scope>
      <declaration type="double" name="a" />
      <declaration type="double" name="b" />
      <declaration type="GaussIntegrator" name="g" />
    </scope>
    <comment>Function to be integrated is stored in the base class.</comment>
    <comment>Integrate over each sub-interval [a, b].</comment>
  </method>
  <comment>Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the "License"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

      http:www.apache.orglicensesLICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.</comment>
</class>
