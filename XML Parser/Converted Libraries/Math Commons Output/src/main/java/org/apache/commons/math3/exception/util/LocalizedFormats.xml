<?xml version="1.0" encoding="UTF-8"?>
<class name="LocalizedFormats">
  <javadoc>
    <text>Enumeration for localized messages formats used in exceptions messages.
 * &lt;p&gt;
 * The constants in this enumeration represent the available
 * formats as localized strings. These formats are intended to be
 * localized using simple properties files, using the constant
 * name as the key and the property value as the message format.
 * The source English format is provided in the constants themselves
 * to serve both as a reminder for developers to understand the parameters
 * needed by each format, as a basis for translators to create
 * localized properties files, and as a default format if some
 * translation is missing.
 * &lt;/p&gt;</text>
    <since>2.2</since>
    <version>$Id: LocalizedFormats.java 1442377 2013-02-04 21:31:42Z erans $</version>
  </javadoc>
  <javadoc>
    <text>Source English format.</text>
  </javadoc>
  <declaration type="String" name="sourceFormat" />
  <javadoc>
    <text>Simple constructor.</text>
    <param>sourceFormat source English format to use when no
 * localized version is available</param>
  </javadoc>
  <method type="constructor" name="LocalizedFormats" />
  <javadoc>
    <text>{@inheritDoc}</text>
  </javadoc>
  <method type="String" name="getSourceString" />
  <javadoc>
    <text>{@inheritDoc}</text>
  </javadoc>
  <method type="String" name="getLocalizedString">
    <scope>
      <declaration type="String" name="path" />
      <declaration type="ResourceBundle" name="bundle" />
      <scope />
    </scope>
    <scope />
    <comment>the value of the resource is the translated format</comment>
    <comment>NOPMD</comment>
    <comment>do nothing here</comment>
    <comment>either the locale is not supported or the resource is unknown</comment>
    <comment>don't translate and fall back to using the source format</comment>
  </method>
  <comment>Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the "License"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

      http:www.apache.orglicensesLICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.</comment>
  <comment>CHECKSTYLE: stop MultipleVariableDeclarations</comment>
  <comment>CHECKSTYLE: stop JavadocVariable</comment>
  <comment>COLUMN_INDEX("column index ({0})"),  keep</comment>
  <comment>CONSTRAINT("constraint"),  keep</comment>
  <comment>CONVERGENCE_FAILED("convergence failed"),  keep</comment>
  <comment>DIMENSIONS_MISMATCH_2x2("got {0}x{1} but expected {2}x{3}"),  keep</comment>
  <comment>DIMENSIONS_MISMATCH_SIMPLE("{0} != {1}"),  keep</comment>
  <comment>DIMENSIONS_MISMATCH("dimensions mismatch"),  keep</comment>
  <comment>EMPTY_POLYNOMIALS_COEFFICIENTS_ARRAY("empty polynomials coefficients array"),  keep</comment>
  <comment>EVALUATION("evaluation"),  keep</comment>
  <comment>INDEX("index ({0})"),  keep</comment>
  <comment>NOT_FINITE_NUMBER("{0} is not a finite number"),  keep</comment>
  <comment>ARRAY_ELEMENT("value {0} at index {1}"),  keep</comment>
  <comment>DIMENSION("dimension ({0})"),  keep</comment>
  <comment>ITERATIONS("iterations"),  keep</comment>
  <comment>LOWER_BOUND_NOT_BELOW_UPPER_BOUND("lower bound ({0}) must be strictly less than upper bound ({1})"),  keep</comment>
  <comment>EVALUATIONS("evaluations"),  keep</comment>
  <comment>MAX_COUNT_EXCEEDED("maximal count ({0}) exceeded"),  keep</comment>
  <comment>NUMBER_OF_SUCCESSES("number of successes ({0})"),  keep</comment>
  <comment>NUMBER_OF_INTERPOLATION_POINTS("number of interpolation points ({0})"),  keep</comment>
  <comment>START_POSITION("start position ({0})"),  keep</comment>
  <comment>NORM("Norm ({0})"),  keep</comment>
  <comment>NOT_DECREASING_SEQUENCE("points {3} and {2} are not decreasing ({1} &lt; {0})"),  keep</comment>
  <comment>NOT_INCREASING_SEQUENCE("points {3} and {2} are not increasing ({1} &gt; {0})"),  keep</comment>
  <comment>NOT_POSITIVE_DEFINITE_MATRIX("not positive definite matrix"),  keep</comment>
  <comment>NON_POSITIVE_DEFINITE_OPERATOR("non positive definite linear operator"),  keep</comment>
  <comment>NON_SELF_ADJOINT_OPERATOR("non self-adjoint linear operator"),  keep</comment>
  <comment>NON_SQUARE_OPERATOR("non square ({0}x{1}) linear operator"),  keep</comment>
  <comment>DEGREES_OF_FREEDOM("degrees of freedom ({0})"),  keep</comment>
  <comment>EXPONENT("exponent ({0})"),  keep</comment>
  <comment>LENGTH("length ({0})"),  keep</comment>
  <comment>MEAN("mean ({0})"),  keep</comment>
  <comment>NUMBER_OF_SAMPLES("number of samples ({0})"),  keep</comment>
  <comment>PERMUTATION_SIZE("permutation size ({0}"),  keep</comment>
  <comment>POPULATION_SIZE("population size ({0})"),  keep</comment>
  <comment>SCALE("scale ({0})"),  keep</comment>
  <comment>SHAPE("shape ({0})"),  keep</comment>
  <comment>STANDARD_DEVIATION("standard deviation ({0})"),  keep</comment>
  <comment>NOT_STRICTLY_DECREASING_SEQUENCE("points {3} and {2} are not strictly decreasing ({1} &lt;= {0})"),  keep</comment>
  <comment>NOT_STRICTLY_INCREASING_SEQUENCE("points {3} and {2} are not strictly increasing ({1} &gt;= {0})"),  keep</comment>
  <comment>NON_SYMMETRIC_MATRIX("non symmetric matrix: the difference between entries at ({0},{1}) and ({1},{0}) is larger than {2}"),  keep</comment>
  <comment>NO_CONVERGENCE_WITH_ANY_START_POINT("none of the {0} start points lead to convergence"),  keep</comment>
  <comment>NO_DATA("no data"),  keep</comment>
  <comment>NO_OPTIMUM_COMPUTED_YET("no optimum computed yet"),  keep</comment>
  <comment>NULL_NOT_ALLOWED("null is not allowed"),  keep</comment>
  <comment>COVARIANCE_MATRIX("covariance matrix"),  keep</comment>
  <comment>DENOMINATOR("denominator"),  keep</comment>
  <comment>DENOMINATOR_FORMAT("denominator format"),  keep</comment>
  <comment>FRACTION("fraction"),  keep</comment>
  <comment>FUNCTION("function"),  keep</comment>
  <comment>IMAGINARY_FORMAT("imaginary format"),  keep</comment>
  <comment>INPUT_ARRAY("input array"),  keep</comment>
  <comment>NUMERATOR("numerator"),  keep</comment>
  <comment>NUMERATOR_FORMAT("numerator format"),  keep</comment>
  <comment>OBJECT_TRANSFORMATION("conversion exception in transformation"),  keep</comment>
  <comment>REAL_FORMAT("real format"),  keep</comment>
  <comment>WHOLE_FORMAT("whole format"),  keep</comment>
  <comment>NUMBER_TOO_LARGE("{0} is larger than the maximum ({1})"),  keep</comment>
  <comment>NUMBER_TOO_SMALL("{0} is smaller than the minimum ({1})"),  keep</comment>
  <comment>NUMBER_TOO_LARGE_BOUND_EXCLUDED("{0} is larger than, or equal to, the maximum ({1})"),  keep</comment>
  <comment>NUMBER_TOO_SMALL_BOUND_EXCLUDED("{0} is smaller than, or equal to, the minimum ({1})"),  keep</comment>
  <comment>SIGNIFICANCE_LEVEL("significance level ({0})"),  keep</comment>
  <comment>OUT_OF_RANGE("out of range"),  keep</comment>
  <comment>OUT_OF_RANGE_SIMPLE("{0} out of [{1}, {2}] range"),  keep</comment>
  <comment>OVERFLOW("overflow"),  keep</comment>
  <comment>PERMUTATION_EXCEEDS_N("permutation size ({0}) exceeds permuation domain ({1})"),  keep</comment>
  <comment>POLYNOMIAL("polynomial"),  keep</comment>
  <comment>ROW_INDEX("row index ({0})"),  keep</comment>
  <comment>SAMPLE_SIZE_EXCEEDS_COLLECTION_SIZE("sample size ({0}) exceeds collection size ({1})"),  keep</comment>
  <comment>SINGULAR_MATRIX("matrix is singular"),  keep</comment>
  <comment>CANNOT_PARSE_AS_TYPE("string \"{0}\" unparseable (from position {1}) as an object of type {2}"),  keep</comment>
  <comment>CANNOT_PARSE("string \"{0}\" unparseable (from position {1})"),  keep</comment>
  <comment>UNSUPPORTED_OPERATION("unsupported operation"),  keep</comment>
  <comment>ARITHMETIC_EXCEPTION("arithmetic exception"),  keep</comment>
  <comment>ILLEGAL_STATE("illegal state"),  keep</comment>
  <comment>USER_EXCEPTION("exception generated in user code"),  keep</comment>
  <comment>NUMBER_OF_POINTS("number of points ({0})"),  keep</comment>
  <comment>ZERO_DENOMINATOR("denominator must be different from 0"),  keep</comment>
  <comment>CHECKSTYLE: resume JavadocVariable</comment>
  <comment>CHECKSTYLE: resume MultipleVariableDeclarations</comment>
</class>
