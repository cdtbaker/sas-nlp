<?xml version="1.0" encoding="UTF-8"?>
<class name="AbstractLinearOptimizer">
  <javadoc>
    <text>Base class for implementing linear optimizers.
 * &lt;p&gt;
 * This base class handles the boilerplate methods associated to thresholds
 * settings and iterations counters.</text>
    <version>$Id: AbstractLinearOptimizer.java 1422230 2012-12-15 12:11:13Z erans $</version>
    <deprecated>As of 3.1 (to be removed in 4.0).</deprecated>
    <since>2.0</since>
  </javadoc>
  <javadoc>
    <text>Default maximal number of iterations allowed.</text>
  </javadoc>
  <declaration type="int" name="DEFAULT_MAX_ITERATIONS" />
  <javadoc>
    <text>Linear objective function.</text>
    <since>2.1</since>
  </javadoc>
  <declaration type="LinearObjectiveFunction" name="function" />
  <javadoc>
    <text>Linear constraints.</text>
    <since>2.1</since>
  </javadoc>
  <declaration type="Collection&lt;LinearConstraint&gt;" name="linearConstraints" />
  <javadoc>
    <text>Type of optimization goal: either {@link GoalType#MAXIMIZE} or {@link GoalType#MINIMIZE}.</text>
    <since>2.1</since>
  </javadoc>
  <declaration type="GoalType" name="goal" />
  <javadoc>
    <text>Whether to restrict the variables to non-negative values.</text>
    <since>2.1</since>
  </javadoc>
  <declaration type="boolean" name="nonNegative" />
  <javadoc>
    <text>Maximal number of iterations allowed.</text>
  </javadoc>
  <declaration type="int" name="maxIterations" />
  <javadoc>
    <text>Number of iterations already performed.</text>
  </javadoc>
  <declaration type="int" name="iterations" />
  <javadoc>
    <text>Simple constructor with default settings.
 * &lt;p&gt;The maximal number of evaluation is set to its default value.&lt;/p&gt;</text>
  </javadoc>
  <method type="constructor" name="AbstractLinearOptimizer" />
  <javadoc>
    <return>{@code true} if the variables are restricted to non-negative values.</return>
  </javadoc>
  <method type="boolean" name="restrictToNonNegative" />
  <javadoc>
    <return>the optimization type.</return>
  </javadoc>
  <method type="GoalType" name="getGoalType" />
  <javadoc>
    <return>the optimization type.</return>
  </javadoc>
  <method type="LinearObjectiveFunction" name="getFunction" />
  <javadoc>
    <return>the optimization type.</return>
  </javadoc>
  <method type="Collection&lt;LinearConstraint&gt;" name="getConstraints" />
  <javadoc>
    <text>{@inheritDoc}</text>
  </javadoc>
  <method type="void" name="setMaxIterations" />
  <javadoc>
    <text>{@inheritDoc}</text>
  </javadoc>
  <method type="int" name="getMaxIterations" />
  <javadoc>
    <text>{@inheritDoc}</text>
  </javadoc>
  <method type="int" name="getIterations" />
  <javadoc>
    <text>Increment the iterations counter by 1.</text>
    <exception>MaxCountExceededException if the maximal number of iterations is exceeded</exception>
  </javadoc>
  <method type="void" name="incrementIterationsCounter">
    <scope />
  </method>
  <javadoc>
    <text>{@inheritDoc}</text>
  </javadoc>
  <method type="PointValuePair" name="optimize">
    <comment>store linear problem characteristics</comment>
    <comment>solve the problem</comment>
  </method>
  <method name="doOptimize" type="PointValuePair" />
  <javadoc>
    <text>Perform the bulk of optimization algorithm.</text>
    <return>the point/value pair giving the optimal value for objective function</return>
    <exception>MathIllegalStateException if no solution fulfilling the constraints
 * can be found in the allowed number of iterations</exception>
  </javadoc>
  <comment>Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the "License"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

      http:www.apache.orglicensesLICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.</comment>
</class>
