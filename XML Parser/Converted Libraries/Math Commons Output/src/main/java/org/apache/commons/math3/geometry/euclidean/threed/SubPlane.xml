<?xml version="1.0" encoding="UTF-8"?>
<class name="SubPlane">
  <javadoc>
    <text>This class represents a sub-hyperplane for {@link Plane}.</text>
    <version>$Id: SubPlane.java 1416643 2012-12-03 19:37:14Z tn $</version>
    <since>3.0</since>
  </javadoc>
  <javadoc>
    <text>Simple constructor.</text>
    <param>hyperplane underlying hyperplane</param>
    <param>remainingRegion remaining region of the hyperplane</param>
  </javadoc>
  <method type="constructor" name="SubPlane" />
  <javadoc>
    <text>{@inheritDoc}</text>
  </javadoc>
  <method type="AbstractSubHyperplane&lt;Euclidean3D,Euclidean2D&gt;" name="buildNew" />
  <javadoc>
    <text>{@inheritDoc}</text>
  </javadoc>
  <method type="Side" name="side">
    <declaration type="Plane" name="otherPlane" />
    <declaration type="Plane" name="thisPlane" />
    <declaration type="Line" name="inter" />
    <scope>
      <declaration type="double" name="global" />
    </scope>
    <declaration type="Vector2D" name="p" />
    <declaration type="Vector2D" name="q" />
    <declaration type="Vector3D" name="crossP" />
    <scope>
      <declaration type="Vector2D" name="tmp" />
    </scope>
    <declaration type="org.apache.commons.math3.geometry.euclidean.twod.Line" name="line2D" />
    <comment>the hyperplanes are parallel,</comment>
    <comment>any point can be used to check their relative position</comment>
    <comment>create a 2D line in the otherPlane canonical 2D frame such that:</comment>
    <comment>- the line is the crossing line of the two planes in 3D</comment>
    <comment>- the line splits the otherPlane in two half planes with an</comment>
    <comment>orientation consistent with the orientation of the instance</comment>
    <comment>(i.e. the 3D half space on the plus side (resp. minus side)</comment>
    <comment>of the instance contains the 2D half plane on the plus side</comment>
    <comment>(resp. minus side) of the 2D line</comment>
    <comment>check the side on the 2D plane</comment>
  </method>
  <javadoc>
    <text>Split the instance in two parts by an hyperplane.</text>
    <param>hyperplane splitting hyperplane</param>
    <return>an object containing both the part of the instance
 * on the plus side of the instance and the part of the
 * instance on the minus side of the instance</return>
  </javadoc>
  <method type="SplitSubHyperplane&lt;Euclidean3D&gt;" name="split">
    <declaration type="Plane" name="otherPlane" />
    <declaration type="Plane" name="thisPlane" />
    <declaration type="Line" name="inter" />
    <scope>
      <declaration type="double" name="global" />
    </scope>
    <declaration type="Vector2D" name="p" />
    <declaration type="Vector2D" name="q" />
    <declaration type="Vector3D" name="crossP" />
    <scope>
      <declaration type="Vector2D" name="tmp" />
    </scope>
    <declaration type="SubHyperplane&lt;Euclidean2D&gt;" name="l2DMinus" />
    <declaration type="SubHyperplane&lt;Euclidean2D&gt;" name="l2DPlus" />
    <declaration type="BSPTree&lt;Euclidean2D&gt;" name="splitTree" />
    <declaration type="BSPTree&lt;Euclidean2D&gt;" name="plusTree" />
    <declaration type="BSPTree&lt;Euclidean2D&gt;" name="minusTree" />
    <comment>the hyperplanes are parallel</comment>
    <comment>the hyperplanes do intersect</comment>
  </method>
  <comment>Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the "License"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

      http:www.apache.orglicensesLICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.</comment>
</class>
