<?xml version="1.0" encoding="UTF-8"?>
<class name="LinearConstraint">
  <javadoc>
    <text>A linear constraint for a linear optimization problem.
 * &lt;p&gt;
 * A linear constraint has one of the forms:
 * &lt;ul&gt;
 * &lt;li&gt;c&lt;sub&gt;1&lt;/sub&gt;x&lt;sub&gt;1&lt;/sub&gt; + ... c&lt;sub&gt;n&lt;/sub&gt;x&lt;sub&gt;n&lt;/sub&gt; = v&lt;/li&gt;
 * &lt;li&gt;c&lt;sub&gt;1&lt;/sub&gt;x&lt;sub&gt;1&lt;/sub&gt; + ... c&lt;sub&gt;n&lt;/sub&gt;x&lt;sub&gt;n&lt;/sub&gt; &amp;lt;= v&lt;/li&gt;
 * &lt;li&gt;c&lt;sub&gt;1&lt;/sub&gt;x&lt;sub&gt;1&lt;/sub&gt; + ... c&lt;sub&gt;n&lt;/sub&gt;x&lt;sub&gt;n&lt;/sub&gt; &gt;= v&lt;/li&gt;
 * &lt;li&gt;l&lt;sub&gt;1&lt;/sub&gt;x&lt;sub&gt;1&lt;/sub&gt; + ... l&lt;sub&gt;n&lt;/sub&gt;x&lt;sub&gt;n&lt;/sub&gt; + l&lt;sub&gt;cst&lt;/sub&gt; =
 * r&lt;sub&gt;1&lt;/sub&gt;x&lt;sub&gt;1&lt;/sub&gt; + ... r&lt;sub&gt;n&lt;/sub&gt;x&lt;sub&gt;n&lt;/sub&gt; + r&lt;sub&gt;cst&lt;/sub&gt;&lt;/li&gt;
 * &lt;li&gt;l&lt;sub&gt;1&lt;/sub&gt;x&lt;sub&gt;1&lt;/sub&gt; + ... l&lt;sub&gt;n&lt;/sub&gt;x&lt;sub&gt;n&lt;/sub&gt; + l&lt;sub&gt;cst&lt;/sub&gt; &amp;lt;=
 * r&lt;sub&gt;1&lt;/sub&gt;x&lt;sub&gt;1&lt;/sub&gt; + ... r&lt;sub&gt;n&lt;/sub&gt;x&lt;sub&gt;n&lt;/sub&gt; + r&lt;sub&gt;cst&lt;/sub&gt;&lt;/li&gt;
 * &lt;li&gt;l&lt;sub&gt;1&lt;/sub&gt;x&lt;sub&gt;1&lt;/sub&gt; + ... l&lt;sub&gt;n&lt;/sub&gt;x&lt;sub&gt;n&lt;/sub&gt; + l&lt;sub&gt;cst&lt;/sub&gt; &gt;=
 * r&lt;sub&gt;1&lt;/sub&gt;x&lt;sub&gt;1&lt;/sub&gt; + ... r&lt;sub&gt;n&lt;/sub&gt;x&lt;sub&gt;n&lt;/sub&gt; + r&lt;sub&gt;cst&lt;/sub&gt;&lt;/li&gt;
 * &lt;/ul&gt;
 * The c&lt;sub&gt;i&lt;/sub&gt;, l&lt;sub&gt;i&lt;/sub&gt; or r&lt;sub&gt;i&lt;/sub&gt; are the coefficients of the constraints, the x&lt;sub&gt;i&lt;/sub&gt;
 * are the coordinates of the current point and v is the value of the constraint.
 * &lt;/p&gt;</text>
    <version>$Id: LinearConstraint.java 1422230 2012-12-15 12:11:13Z erans $</version>
    <deprecated>As of 3.1 (to be removed in 4.0).</deprecated>
    <since>2.0</since>
  </javadoc>
  <javadoc>
    <text>Serializable version identifier.</text>
  </javadoc>
  <declaration type="long" name="serialVersionUID" />
  <javadoc>
    <text>Coefficients of the constraint (left hand side).</text>
  </javadoc>
  <declaration type="RealVector" name="coefficients" />
  <javadoc>
    <text>Relationship between left and right hand sides (=, &amp;lt;=, &gt;=).</text>
  </javadoc>
  <declaration type="Relationship" name="relationship" />
  <javadoc>
    <text>Value of the constraint (right hand side).</text>
  </javadoc>
  <declaration type="double" name="value" />
  <javadoc>
    <text>Build a constraint involving a single linear equation.
 * &lt;p&gt;
 * A linear constraint with a single linear equation has one of the forms:
 * &lt;ul&gt;
 * &lt;li&gt;c&lt;sub&gt;1&lt;/sub&gt;x&lt;sub&gt;1&lt;/sub&gt; + ... c&lt;sub&gt;n&lt;/sub&gt;x&lt;sub&gt;n&lt;/sub&gt; = v&lt;/li&gt;
 * &lt;li&gt;c&lt;sub&gt;1&lt;/sub&gt;x&lt;sub&gt;1&lt;/sub&gt; + ... c&lt;sub&gt;n&lt;/sub&gt;x&lt;sub&gt;n&lt;/sub&gt; &amp;lt;= v&lt;/li&gt;
 * &lt;li&gt;c&lt;sub&gt;1&lt;/sub&gt;x&lt;sub&gt;1&lt;/sub&gt; + ... c&lt;sub&gt;n&lt;/sub&gt;x&lt;sub&gt;n&lt;/sub&gt; &gt;= v&lt;/li&gt;
 * &lt;/ul&gt;
 * &lt;/p&gt;</text>
    <param>coefficients The coefficients of the constraint (left hand side)</param>
    <param>relationship The type of (in)equality used in the constraint</param>
    <param>value The value of the constraint (right hand side)</param>
  </javadoc>
  <method type="constructor" name="LinearConstraint" />
  <javadoc>
    <text>Build a constraint involving a single linear equation.
 * &lt;p&gt;
 * A linear constraint with a single linear equation has one of the forms:
 * &lt;ul&gt;
 * &lt;li&gt;c&lt;sub&gt;1&lt;/sub&gt;x&lt;sub&gt;1&lt;/sub&gt; + ... c&lt;sub&gt;n&lt;/sub&gt;x&lt;sub&gt;n&lt;/sub&gt; = v&lt;/li&gt;
 * &lt;li&gt;c&lt;sub&gt;1&lt;/sub&gt;x&lt;sub&gt;1&lt;/sub&gt; + ... c&lt;sub&gt;n&lt;/sub&gt;x&lt;sub&gt;n&lt;/sub&gt; &amp;lt;= v&lt;/li&gt;
 * &lt;li&gt;c&lt;sub&gt;1&lt;/sub&gt;x&lt;sub&gt;1&lt;/sub&gt; + ... c&lt;sub&gt;n&lt;/sub&gt;x&lt;sub&gt;n&lt;/sub&gt; &gt;= v&lt;/li&gt;
 * &lt;/ul&gt;
 * &lt;/p&gt;</text>
    <param>coefficients The coefficients of the constraint (left hand side)</param>
    <param>relationship The type of (in)equality used in the constraint</param>
    <param>value The value of the constraint (right hand side)</param>
  </javadoc>
  <method type="constructor" name="LinearConstraint" />
  <javadoc>
    <text>Build a constraint involving two linear equations.
 * &lt;p&gt;
 * A linear constraint with two linear equation has one of the forms:
 * &lt;ul&gt;
 * &lt;li&gt;l&lt;sub&gt;1&lt;/sub&gt;x&lt;sub&gt;1&lt;/sub&gt; + ... l&lt;sub&gt;n&lt;/sub&gt;x&lt;sub&gt;n&lt;/sub&gt; + l&lt;sub&gt;cst&lt;/sub&gt; =
 * r&lt;sub&gt;1&lt;/sub&gt;x&lt;sub&gt;1&lt;/sub&gt; + ... r&lt;sub&gt;n&lt;/sub&gt;x&lt;sub&gt;n&lt;/sub&gt; + r&lt;sub&gt;cst&lt;/sub&gt;&lt;/li&gt;
 * &lt;li&gt;l&lt;sub&gt;1&lt;/sub&gt;x&lt;sub&gt;1&lt;/sub&gt; + ... l&lt;sub&gt;n&lt;/sub&gt;x&lt;sub&gt;n&lt;/sub&gt; + l&lt;sub&gt;cst&lt;/sub&gt; &amp;lt;=
 * r&lt;sub&gt;1&lt;/sub&gt;x&lt;sub&gt;1&lt;/sub&gt; + ... r&lt;sub&gt;n&lt;/sub&gt;x&lt;sub&gt;n&lt;/sub&gt; + r&lt;sub&gt;cst&lt;/sub&gt;&lt;/li&gt;
 * &lt;li&gt;l&lt;sub&gt;1&lt;/sub&gt;x&lt;sub&gt;1&lt;/sub&gt; + ... l&lt;sub&gt;n&lt;/sub&gt;x&lt;sub&gt;n&lt;/sub&gt; + l&lt;sub&gt;cst&lt;/sub&gt; &gt;=
 * r&lt;sub&gt;1&lt;/sub&gt;x&lt;sub&gt;1&lt;/sub&gt; + ... r&lt;sub&gt;n&lt;/sub&gt;x&lt;sub&gt;n&lt;/sub&gt; + r&lt;sub&gt;cst&lt;/sub&gt;&lt;/li&gt;
 * &lt;/ul&gt;
 * &lt;/p&gt;</text>
    <param>lhsCoefficients The coefficients of the linear expression on the left hand side of the constraint</param>
    <param>lhsConstant The constant term of the linear expression on the left hand side of the constraint</param>
    <param>relationship The type of (in)equality used in the constraint</param>
    <param>rhsCoefficients The coefficients of the linear expression on the right hand side of the constraint</param>
    <param>rhsConstant The constant term of the linear expression on the right hand side of the constraint</param>
  </javadoc>
  <method type="constructor" name="LinearConstraint">
    <declaration type="double[]" name="sub" />
    <scope />
  </method>
  <javadoc>
    <text>Build a constraint involving two linear equations.
 * &lt;p&gt;
 * A linear constraint with two linear equation has one of the forms:
 * &lt;ul&gt;
 * &lt;li&gt;l&lt;sub&gt;1&lt;/sub&gt;x&lt;sub&gt;1&lt;/sub&gt; + ... l&lt;sub&gt;n&lt;/sub&gt;x&lt;sub&gt;n&lt;/sub&gt; + l&lt;sub&gt;cst&lt;/sub&gt; =
 * r&lt;sub&gt;1&lt;/sub&gt;x&lt;sub&gt;1&lt;/sub&gt; + ... r&lt;sub&gt;n&lt;/sub&gt;x&lt;sub&gt;n&lt;/sub&gt; + r&lt;sub&gt;cst&lt;/sub&gt;&lt;/li&gt;
 * &lt;li&gt;l&lt;sub&gt;1&lt;/sub&gt;x&lt;sub&gt;1&lt;/sub&gt; + ... l&lt;sub&gt;n&lt;/sub&gt;x&lt;sub&gt;n&lt;/sub&gt; + l&lt;sub&gt;cst&lt;/sub&gt; &amp;lt;=
 * r&lt;sub&gt;1&lt;/sub&gt;x&lt;sub&gt;1&lt;/sub&gt; + ... r&lt;sub&gt;n&lt;/sub&gt;x&lt;sub&gt;n&lt;/sub&gt; + r&lt;sub&gt;cst&lt;/sub&gt;&lt;/li&gt;
 * &lt;li&gt;l&lt;sub&gt;1&lt;/sub&gt;x&lt;sub&gt;1&lt;/sub&gt; + ... l&lt;sub&gt;n&lt;/sub&gt;x&lt;sub&gt;n&lt;/sub&gt; + l&lt;sub&gt;cst&lt;/sub&gt; &gt;=
 * r&lt;sub&gt;1&lt;/sub&gt;x&lt;sub&gt;1&lt;/sub&gt; + ... r&lt;sub&gt;n&lt;/sub&gt;x&lt;sub&gt;n&lt;/sub&gt; + r&lt;sub&gt;cst&lt;/sub&gt;&lt;/li&gt;
 * &lt;/ul&gt;
 * &lt;/p&gt;</text>
    <param>lhsCoefficients The coefficients of the linear expression on the left hand side of the constraint</param>
    <param>lhsConstant The constant term of the linear expression on the left hand side of the constraint</param>
    <param>relationship The type of (in)equality used in the constraint</param>
    <param>rhsCoefficients The coefficients of the linear expression on the right hand side of the constraint</param>
    <param>rhsConstant The constant term of the linear expression on the right hand side of the constraint</param>
  </javadoc>
  <method type="constructor" name="LinearConstraint" />
  <javadoc>
    <text>Get the coefficients of the constraint (left hand side).</text>
    <return>coefficients of the constraint (left hand side)</return>
  </javadoc>
  <method type="RealVector" name="getCoefficients" />
  <javadoc>
    <text>Get the relationship between left and right hand sides.</text>
    <return>relationship between left and right hand sides</return>
  </javadoc>
  <method type="Relationship" name="getRelationship" />
  <javadoc>
    <text>Get the value of the constraint (right hand side).</text>
    <return>value of the constraint (right hand side)</return>
  </javadoc>
  <method type="double" name="getValue" />
  <method type="boolean" name="equals">
    <scope />
    <scope>
      <declaration type="LinearConstraint" name="rhs" />
    </scope>
  </method>
  <method type="int" name="hashCode" />
  <javadoc>
    <text>Serialize the instance.</text>
    <param>oos stream where object should be written</param>
    <throws>IOException if object cannot be written to stream</throws>
  </javadoc>
  <method type="void" name="writeObject" />
  <javadoc>
    <text>Deserialize the instance.</text>
    <param>ois stream from which the object should be read</param>
    <throws>ClassNotFoundException if a class in the stream cannot be found</throws>
    <throws>IOException if object cannot be read from the stream</throws>
  </javadoc>
  <method type="void" name="readObject" />
  <comment>Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the "License"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

      http:www.apache.orglicensesLICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.</comment>
</class>
