<?xml version="1.0" encoding="UTF-8"?>
<class name="BaseRuleFactory">
  <javadoc>
    <text>Base class for rules that determines the integration nodes and their
 * weights.
 * Subclasses must implement the {@link #computeRule(int) computeRule} method.</text>
    <param>&lt;T&gt;
 *  Type of the number used to represent the points and weights of
 * the quadrature rules.</param>
    <since>3.1</since>
    <version>$Id: BaseRuleFactory.java 1455194 2013-03-11 15:45:54Z luc $</version>
  </javadoc>
  <javadoc>
    <text>List of points and weights, indexed by the order of the rule.</text>
  </javadoc>
  <declaration type="Map&lt;Integer,Pair&lt;T[],T[]&gt;&gt;" name="pointsAndWeights" />
  <javadoc>
    <text>Cache for double-precision rules.</text>
  </javadoc>
  <declaration type="Map&lt;Integer,Pair&lt;double[],double[]&gt;&gt;" name="pointsAndWeightsDouble" />
  <javadoc>
    <text>Gets a copy of the quadrature rule with the given number of integration
 * points.</text>
    <param>numberOfPoints Number of integration points.</param>
    <return>a copy of the integration rule.</return>
    <throws>NotStrictlyPositiveException if {@code numberOfPoints &lt; 1}.</throws>
    <throws>DimensionMismatchException if the elements of the rule pair do not
 * have the same length.</throws>
  </javadoc>
  <method type="Pair&lt;double[],double[]&gt;" name="getRule">
    <scope />
    <declaration type="Pair&lt;double[],double[]&gt;" name="cached" />
    <scope>
      <declaration type="Pair&lt;T[],T[]&gt;" name="rule" />
    </scope>
    <comment>Try to obtain the rule from the cache.</comment>
    <comment>Rule not computed yet.</comment>
    <comment>Compute the rule.</comment>
    <comment>Cache it.</comment>
    <comment>Return a copy.</comment>
  </method>
  <javadoc>
    <text>Gets a rule.
 * Synchronization ensures that rules will be computed and added to the
 * cache at most once.
 * The returned rule is a reference into the cache.</text>
    <param>numberOfPoints Order of the rule to be retrieved.</param>
    <return>the points and weights corresponding to the given order.</return>
    <throws>DimensionMismatchException if the elements of the rule pair do not
 * have the same length.</throws>
  </javadoc>
  <method type="Pair&lt;T[],T[]&gt;" name="getRuleInternal">
    <declaration type="Pair&lt;T[],T[]&gt;" name="rule" />
    <scope />
    <comment>The rule should be available now.</comment>
  </method>
  <javadoc>
    <text>Stores a rule.</text>
    <param>rule Rule to be stored.</param>
    <throws>DimensionMismatchException if the elements of the pair do not
 * have the same length.</throws>
  </javadoc>
  <method type="void" name="addRule">
    <scope />
  </method>
  <method name="computeRule" type="Pair&lt;T[],T[]&gt;" />
  <javadoc>
    <text>Computes the rule for the given order.</text>
    <param>numberOfPoints Order of the rule to be computed.</param>
    <return>the computed rule.</return>
    <throws>DimensionMismatchException if the elements of the pair do not
 * have the same length.</throws>
  </javadoc>
  <javadoc>
    <text>Converts the from the actual {@code Number} type to {@code double}</text>
    <param>&lt;T&gt;
 *  Type of the number used to represent the points and
 * weights of the quadrature rules.</param>
    <param>rule Points and weights.</param>
    <return>points and weights as {@code double}s.</return>
  </javadoc>
  <method type="Pair&lt;double[],double[]&gt;" name="convertToDouble">
    <declaration type="T[]" name="pT" />
    <declaration type="T[]" name="wT" />
    <declaration type="int" name="len" />
    <declaration type="double[]" name="pD" />
    <declaration type="double[]" name="wD" />
    <scope />
  </method>
  <comment>Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the "License"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

      http:www.apache.orglicensesLICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.</comment>
</class>
