<?xml version="1.0" encoding="UTF-8"?>
<class name="BaseAbstractUnivariateOptimizer">
  <javadoc>
    <text>Provide a default implementation for several functions useful to generic
 * optimizers.</text>
    <version>$Id: BaseAbstractUnivariateOptimizer.java 1422230 2012-12-15 12:11:13Z erans $</version>
    <deprecated>As of 3.1 (to be removed in 4.0).</deprecated>
    <since>2.0</since>
  </javadoc>
  <javadoc>
    <text>Convergence checker.</text>
  </javadoc>
  <declaration type="ConvergenceChecker&lt;UnivariatePointValuePair&gt;" name="checker" />
  <javadoc>
    <text>Evaluations counter.</text>
  </javadoc>
  <declaration type="Incrementor" name="evaluations" />
  <javadoc>
    <text>Optimization type</text>
  </javadoc>
  <declaration type="GoalType" name="goal" />
  <javadoc>
    <text>Lower end of search interval.</text>
  </javadoc>
  <declaration type="double" name="searchMin" />
  <javadoc>
    <text>Higher end of search interval.</text>
  </javadoc>
  <declaration type="double" name="searchMax" />
  <javadoc>
    <text>Initial guess .</text>
  </javadoc>
  <declaration type="double" name="searchStart" />
  <javadoc>
    <text>Function to optimize.</text>
  </javadoc>
  <declaration type="UnivariateFunction" name="function" />
  <javadoc>
    <param>checker Convergence checking procedure.</param>
  </javadoc>
  <method type="constructor" name="BaseAbstractUnivariateOptimizer" />
  <javadoc>
    <text>{@inheritDoc}</text>
  </javadoc>
  <method type="int" name="getMaxEvaluations" />
  <javadoc>
    <text>{@inheritDoc}</text>
  </javadoc>
  <method type="int" name="getEvaluations" />
  <javadoc>
    <return>the optimization type.</return>
  </javadoc>
  <method type="GoalType" name="getGoalType" />
  <javadoc>
    <return>the lower end of the search interval.</return>
  </javadoc>
  <method type="double" name="getMin" />
  <javadoc>
    <return>the higher end of the search interval.</return>
  </javadoc>
  <method type="double" name="getMax" />
  <javadoc>
    <return>the initial guess.</return>
  </javadoc>
  <method type="double" name="getStartValue" />
  <javadoc>
    <text>Compute the objective function value.</text>
    <param>point Point at which the objective function must be evaluated.</param>
    <return>the objective function value at specified point.</return>
    <throws>TooManyEvaluationsException if the maximal number of evaluations
 * is exceeded.</throws>
  </javadoc>
  <method type="double" name="computeObjectiveValue">
    <scope />
    <scope />
  </method>
  <javadoc>
    <text>{@inheritDoc}</text>
  </javadoc>
  <method type="UnivariatePointValuePair" name="optimize">
    <scope />
    <scope />
    <comment>Checks.</comment>
    <comment>Reset.</comment>
    <comment>Perform computation.</comment>
  </method>
  <javadoc>
    <text>{@inheritDoc}</text>
  </javadoc>
  <method type="UnivariatePointValuePair" name="optimize" />
  <javadoc>
    <text>{@inheritDoc}</text>
  </javadoc>
  <method type="ConvergenceChecker&lt;UnivariatePointValuePair&gt;" name="getConvergenceChecker" />
  <method name="doOptimize" type="UnivariatePointValuePair" />
  <javadoc>
    <text>Method for implementing actual optimization algorithms in derived
 * classes.</text>
    <return>the optimum and its corresponding function value.</return>
    <throws>TooManyEvaluationsException if the maximal number of evaluations
 * is exceeded.</throws>
  </javadoc>
  <comment>Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the "License"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

      http:www.apache.orglicensesLICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.</comment>
</class>
