<?xml version="1.0" encoding="UTF-8"?>
<class name="LinearOptimizer">
  <javadoc>
    <text>This interface represents an optimization algorithm for linear problems.
 * &lt;p&gt;Optimization algorithms find the input point set that either {@link GoalTypemaximize or minimize} an objective function. In the linear case the form of
 * the function is restricted to
 * &lt;pre&gt;
 * c&lt;sub&gt;1&lt;/sub&gt;x&lt;sub&gt;1&lt;/sub&gt; + ... c&lt;sub&gt;n&lt;/sub&gt;x&lt;sub&gt;n&lt;/sub&gt; = v
 * &lt;/pre&gt;
 * and there may be linear constraints too, of one of the forms:
 * &lt;ul&gt;
 * &lt;li&gt;c&lt;sub&gt;1&lt;/sub&gt;x&lt;sub&gt;1&lt;/sub&gt; + ... c&lt;sub&gt;n&lt;/sub&gt;x&lt;sub&gt;n&lt;/sub&gt; = v&lt;/li&gt;
 * &lt;li&gt;c&lt;sub&gt;1&lt;/sub&gt;x&lt;sub&gt;1&lt;/sub&gt; + ... c&lt;sub&gt;n&lt;/sub&gt;x&lt;sub&gt;n&lt;/sub&gt; &amp;lt;= v&lt;/li&gt;
 * &lt;li&gt;c&lt;sub&gt;1&lt;/sub&gt;x&lt;sub&gt;1&lt;/sub&gt; + ... c&lt;sub&gt;n&lt;/sub&gt;x&lt;sub&gt;n&lt;/sub&gt; &gt;= v&lt;/li&gt;
 * &lt;li&gt;l&lt;sub&gt;1&lt;/sub&gt;x&lt;sub&gt;1&lt;/sub&gt; + ... l&lt;sub&gt;n&lt;/sub&gt;x&lt;sub&gt;n&lt;/sub&gt; + l&lt;sub&gt;cst&lt;/sub&gt; =
 * r&lt;sub&gt;1&lt;/sub&gt;x&lt;sub&gt;1&lt;/sub&gt; + ... r&lt;sub&gt;n&lt;/sub&gt;x&lt;sub&gt;n&lt;/sub&gt; + r&lt;sub&gt;cst&lt;/sub&gt;&lt;/li&gt;
 * &lt;li&gt;l&lt;sub&gt;1&lt;/sub&gt;x&lt;sub&gt;1&lt;/sub&gt; + ... l&lt;sub&gt;n&lt;/sub&gt;x&lt;sub&gt;n&lt;/sub&gt; + l&lt;sub&gt;cst&lt;/sub&gt; &amp;lt;=
 * r&lt;sub&gt;1&lt;/sub&gt;x&lt;sub&gt;1&lt;/sub&gt; + ... r&lt;sub&gt;n&lt;/sub&gt;x&lt;sub&gt;n&lt;/sub&gt; + r&lt;sub&gt;cst&lt;/sub&gt;&lt;/li&gt;
 * &lt;li&gt;l&lt;sub&gt;1&lt;/sub&gt;x&lt;sub&gt;1&lt;/sub&gt; + ... l&lt;sub&gt;n&lt;/sub&gt;x&lt;sub&gt;n&lt;/sub&gt; + l&lt;sub&gt;cst&lt;/sub&gt; &gt;=
 * r&lt;sub&gt;1&lt;/sub&gt;x&lt;sub&gt;1&lt;/sub&gt; + ... r&lt;sub&gt;n&lt;/sub&gt;x&lt;sub&gt;n&lt;/sub&gt; + r&lt;sub&gt;cst&lt;/sub&gt;&lt;/li&gt;
 * &lt;/ul&gt;
 * where the c&lt;sub&gt;i&lt;/sub&gt;, l&lt;sub&gt;i&lt;/sub&gt; or r&lt;sub&gt;i&lt;/sub&gt; are the coefficients of
 * the constraints, the x&lt;sub&gt;i&lt;/sub&gt; are the coordinates of the current point and
 * v is the value of the constraint.
 * &lt;/p&gt;</text>
    <version>$Id: LinearOptimizer.java 1422230 2012-12-15 12:11:13Z erans $</version>
    <deprecated>As of 3.1 (to be removed in 4.0).</deprecated>
    <since>2.0</since>
  </javadoc>
  <method name="setMaxIterations" type="void" />
  <javadoc>
    <text>Set the maximal number of iterations of the algorithm.</text>
    <param>maxIterations maximal number of function calls</param>
  </javadoc>
  <method name="getMaxIterations" type="int" />
  <javadoc>
    <text>Get the maximal number of iterations of the algorithm.</text>
    <return>maximal number of iterations</return>
  </javadoc>
  <method name="getIterations" type="int" />
  <javadoc>
    <text>Get the number of iterations realized by the algorithm.
 * &lt;p&gt;
 * The number of evaluations corresponds to the last call to the{@link #optimize(LinearObjectiveFunction,Collection,GoalType,boolean) optimize}method. It is 0 if the method has not been called yet.
 * &lt;/p&gt;</text>
    <return>number of iterations</return>
  </javadoc>
  <method name="optimize" type="PointValuePair" />
  <javadoc>
    <text>Optimizes an objective function.</text>
    <param>f linear objective function</param>
    <param>constraints linear constraints</param>
    <param>goalType type of optimization goal: either {@link GoalType#MAXIMIZE} or {@link GoalType#MINIMIZE}</param>
    <param>restrictToNonNegative whether to restrict the variables to non-negative values</param>
    <return>point/value pair giving the optimal value for objective function</return>
    <exception>MathIllegalStateException if no solution fulfilling the constraints
 * can be found in the allowed number of iterations</exception>
  </javadoc>
  <comment>Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the "License"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

      http:www.apache.orglicensesLICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.</comment>
</class>
