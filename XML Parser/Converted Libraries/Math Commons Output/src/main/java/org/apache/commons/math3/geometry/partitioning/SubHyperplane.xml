<?xml version="1.0" encoding="UTF-8"?>
<class name="SubHyperplane">
  <javadoc>
    <text>This interface represents the remaining parts of an hyperplane after
 * other parts have been chopped off.
 * &lt;p&gt;sub-hyperplanes are obtained when parts of an {@link Hyperplane hyperplane} are chopped off by other hyperplanes that
 * intersect it. The remaining part is a convex region. Such objects
 * appear in {@link BSPTree BSP trees} as the intersection of a cut
 * hyperplane with the convex region which it splits, the chopping
 * hyperplanes are the cut hyperplanes closer to the tree root.&lt;/p&gt;</text>
    <param>&lt;S&gt;
 *  Type of the embedding space.</param>
    <version>$Id: SubHyperplane.java 1416643 2012-12-03 19:37:14Z tn $</version>
    <since>3.0</since>
  </javadoc>
  <method name="copySelf" type="SubHyperplane&lt;S&gt;" />
  <javadoc>
    <text>Copy the instance.
 * &lt;p&gt;The instance created is completely independent of the original
 * one. A deep copy is used, none of the underlying objects are
 * shared (except for the nodes attributes and immutable
 * objects).&lt;/p&gt;</text>
    <return>a new sub-hyperplane, copy of the instance</return>
  </javadoc>
  <method name="getHyperplane" type="Hyperplane&lt;S&gt;" />
  <javadoc>
    <text>Get the underlying hyperplane.</text>
    <return>underlying hyperplane</return>
  </javadoc>
  <method name="isEmpty" type="boolean" />
  <javadoc>
    <text>Check if the instance is empty.</text>
    <return>true if the instance is empty</return>
  </javadoc>
  <method name="getSize" type="double" />
  <javadoc>
    <text>Get the size of the instance.</text>
    <return>the size of the instance (this is a length in 1D, an area
 * in 2D, a volume in 3D ...)</return>
  </javadoc>
  <method name="side" type="Side" />
  <javadoc>
    <text>Compute the relative position of the instance with respect
 * to an hyperplane.</text>
    <param>hyperplane hyperplane to check instance against</param>
    <return>one of {@link Side#PLUS}, {@link Side#MINUS}, {@link Side#BOTH},{@link Side#HYPER}</return>
  </javadoc>
  <method name="split" type="SplitSubHyperplane&lt;S&gt;" />
  <javadoc>
    <text>Split the instance in two parts by an hyperplane.</text>
    <param>hyperplane splitting hyperplane</param>
    <return>an object containing both the part of the instance
 * on the plus side of the instance and the part of the
 * instance on the minus side of the instance</return>
  </javadoc>
  <method name="reunite" type="SubHyperplane&lt;S&gt;" />
  <javadoc>
    <text>Compute the union of the instance and another sub-hyperplane.</text>
    <param>other other sub-hyperplane to union (&lt;em&gt;must&lt;/em&gt; be in the
 * same hyperplane as the instance)</param>
    <return>a new sub-hyperplane, union of the instance and other</return>
  </javadoc>
  <javadoc>
    <text>Class holding the results of the {@link #split split} method.</text>
    <param>&lt;U&gt;
 *  Type of the embedding space.</param>
  </javadoc>
  <javadoc>
    <text>Part of the sub-hyperplane on the plus side of the splitting hyperplane.</text>
  </javadoc>
  <declaration type="SubHyperplane&lt;U&gt;" name="plus" />
  <javadoc>
    <text>Part of the sub-hyperplane on the minus side of the splitting hyperplane.</text>
  </javadoc>
  <declaration type="SubHyperplane&lt;U&gt;" name="minus" />
  <javadoc>
    <text>Build a SplitSubHyperplane from its parts.</text>
    <param>plus part of the sub-hyperplane on the plus side of the
 * splitting hyperplane</param>
    <param>minus part of the sub-hyperplane on the minus side of the
 * splitting hyperplane</param>
  </javadoc>
  <method type="constructor" name="SplitSubHyperplane" />
  <javadoc>
    <text>Get the part of the sub-hyperplane on the plus side of the splitting hyperplane.</text>
    <return>part of the sub-hyperplane on the plus side of the splitting hyperplane</return>
  </javadoc>
  <method type="SubHyperplane&lt;U&gt;" name="getPlus" />
  <javadoc>
    <text>Get the part of the sub-hyperplane on the minus side of the splitting hyperplane.</text>
    <return>part of the sub-hyperplane on the minus side of the splitting hyperplane</return>
  </javadoc>
  <method type="SubHyperplane&lt;U&gt;" name="getMinus" />
  <comment>Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the "License"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

      http:www.apache.orglicensesLICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.</comment>
</class>
