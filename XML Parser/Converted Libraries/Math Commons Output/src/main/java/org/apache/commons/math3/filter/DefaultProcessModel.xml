<?xml version="1.0" encoding="UTF-8"?>
<class name="DefaultProcessModel">
  <javadoc>
    <text>Default implementation of a {@link ProcessModel} for the use with a {@link KalmanFilter}.</text>
    <since>3.0</since>
    <version>$Id: DefaultProcessModel.java 1416643 2012-12-03 19:37:14Z tn $</version>
  </javadoc>
  <javadoc>
    <text>The state transition matrix, used to advance the internal state estimation each time-step.</text>
  </javadoc>
  <declaration type="RealMatrix" name="stateTransitionMatrix" />
  <javadoc>
    <text>The control matrix, used to integrate a control input into the state estimation.</text>
  </javadoc>
  <declaration type="RealMatrix" name="controlMatrix" />
  <javadoc>
    <text>The process noise covariance matrix.</text>
  </javadoc>
  <declaration type="RealMatrix" name="processNoiseCovMatrix" />
  <javadoc>
    <text>The initial state estimation of the observed process.</text>
  </javadoc>
  <declaration type="RealVector" name="initialStateEstimateVector" />
  <javadoc>
    <text>The initial error covariance matrix of the observed process.</text>
  </javadoc>
  <declaration type="RealMatrix" name="initialErrorCovMatrix" />
  <javadoc>
    <text>Create a new {@link ProcessModel}, taking double arrays as input parameters.</text>
    <param>stateTransitionthe state transition matrix</param>
    <param>controlthe control matrix</param>
    <param>processNoisethe process noise matrix</param>
    <param>initialStateEstimatethe initial state estimate vector</param>
    <param>initialErrorCovariancethe initial error covariance matrix</param>
    <throws>NullArgumentExceptionif any of the input arrays is {@code null}</throws>
    <throws>NoDataExceptionif any row / column dimension of the input matrices is zero</throws>
    <throws>DimensionMismatchExceptionif any of the input matrices is non-rectangular</throws>
  </javadoc>
  <method type="constructor" name="DefaultProcessModel" />
  <javadoc>
    <text>Create a new {@link ProcessModel}, taking double arrays as input parameters.
 * &lt;p&gt;
 * The initial state estimate and error covariance are omitted and will be initialized by the{@link KalmanFilter} to default values.</text>
    <param>stateTransitionthe state transition matrix</param>
    <param>controlthe control matrix</param>
    <param>processNoisethe process noise matrix</param>
    <throws>NullArgumentExceptionif any of the input arrays is {@code null}</throws>
    <throws>NoDataExceptionif any row / column dimension of the input matrices is zero</throws>
    <throws>DimensionMismatchExceptionif any of the input matrices is non-rectangular</throws>
  </javadoc>
  <method type="constructor" name="DefaultProcessModel" />
  <javadoc>
    <text>Create a new {@link ProcessModel}, taking double arrays as input parameters.</text>
    <param>stateTransitionthe state transition matrix</param>
    <param>controlthe control matrix</param>
    <param>processNoisethe process noise matrix</param>
    <param>initialStateEstimatethe initial state estimate vector</param>
    <param>initialErrorCovariancethe initial error covariance matrix</param>
  </javadoc>
  <method type="constructor" name="DefaultProcessModel" />
  <javadoc>
    <text>{@inheritDoc}</text>
  </javadoc>
  <method type="RealMatrix" name="getStateTransitionMatrix" />
  <javadoc>
    <text>{@inheritDoc}</text>
  </javadoc>
  <method type="RealMatrix" name="getControlMatrix" />
  <javadoc>
    <text>{@inheritDoc}</text>
  </javadoc>
  <method type="RealMatrix" name="getProcessNoise" />
  <javadoc>
    <text>{@inheritDoc}</text>
  </javadoc>
  <method type="RealVector" name="getInitialStateEstimate" />
  <javadoc>
    <text>{@inheritDoc}</text>
  </javadoc>
  <method type="RealMatrix" name="getInitialErrorCovariance" />
  <comment>Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the "License"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

      http:www.apache.orglicensesLICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.</comment>
</class>
