<?xml version="1.0" encoding="UTF-8"?>
<class name="BaseUnivariateOptimizer">
  <javadoc>
    <text>This interface is mainly intended to enforce the internal coherence of
 * Commons-Math. Users of the API are advised to base their code on
 * the following interfaces:
 * &lt;ul&gt;
 * &lt;li&gt;{@link org.apache.commons.math3.optimization.univariate.UnivariateOptimizer}&lt;/li&gt;
 * &lt;/ul&gt;</text>
    <param>&lt;FUNC&gt;
 *  Type of the objective function to be optimized.</param>
    <version>$Id: BaseUnivariateOptimizer.java 1422230 2012-12-15 12:11:13Z erans $</version>
    <deprecated>As of 3.1 (to be removed in 4.0).</deprecated>
    <since>3.0</since>
  </javadoc>
  <method name="optimize" type="UnivariatePointValuePair" />
  <javadoc>
    <text>Find an optimum in the given interval.
 * An optimizer may require that the interval brackets a single optimum.</text>
    <param>f Function to optimize.</param>
    <param>goalType Type of optimization goal: either{@link GoalType#MAXIMIZE} or {@link GoalType#MINIMIZE}.</param>
    <param>min Lower bound for the interval.</param>
    <param>max Upper bound for the interval.</param>
    <param>maxEval Maximum number of function evaluations.</param>
    <return>a (point, value) pair where the function is optimum.</return>
    <throws>org.apache.commons.math3.exception.TooManyEvaluationsExceptionif the maximum evaluation count is exceeded.</throws>
    <throws>org.apache.commons.math3.exception.ConvergenceExceptionif the optimizer detects a convergence problem.</throws>
    <throws>IllegalArgumentException if {@code min &gt; max} or the endpoints
 * do not satisfy the requirements specified by the optimizer.</throws>
  </javadoc>
  <method name="optimize" type="UnivariatePointValuePair" />
  <javadoc>
    <text>Find an optimum in the given interval, start at startValue.
 * An optimizer may require that the interval brackets a single optimum.</text>
    <param>f Function to optimize.</param>
    <param>goalType Type of optimization goal: either{@link GoalType#MAXIMIZE} or {@link GoalType#MINIMIZE}.</param>
    <param>min Lower bound for the interval.</param>
    <param>max Upper bound for the interval.</param>
    <param>startValue Start value to use.</param>
    <param>maxEval Maximum number of function evaluations.</param>
    <return>a (point, value) pair where the function is optimum.</return>
    <throws>org.apache.commons.math3.exception.TooManyEvaluationsExceptionif the maximum evaluation count is exceeded.</throws>
    <throws>org.apache.commons.math3.exception.ConvergenceException if the
 * optimizer detects a convergence problem.</throws>
    <throws>IllegalArgumentException if {@code min &gt; max} or the endpoints
 * do not satisfy the requirements specified by the optimizer.</throws>
    <throws>org.apache.commons.math3.exception.NullArgumentException if any
 * argument is {@code null}.</throws>
  </javadoc>
  <comment>Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the "License"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

      http:www.apache.orglicensesLICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.</comment>
</class>
