Ojalgo/xml/org/ojalgo/access/Access1D.xml

Ojalgo/xml/org/ojalgo/access/Access2D.xml

Ojalgo/xml/org/ojalgo/access/AccessAnyD.xml

Ojalgo/xml/org/ojalgo/access/AccessUtils.xml

Ojalgo/xml/org/ojalgo/access/ColumnsIterator.xml

Ojalgo/xml/org/ojalgo/access/Iterator1D.xml

Ojalgo/xml/org/ojalgo/access/package-info.xml

Ojalgo/xml/org/ojalgo/access/RowsIterator.xml

Ojalgo/xml/org/ojalgo/access/Structure1D.xml

Ojalgo/xml/org/ojalgo/access/Structure2D.xml

Ojalgo/xml/org/ojalgo/access/StructureAnyD.xml

Ojalgo/xml/org/ojalgo/array/Array1D.xml

Ojalgo/xml/org/ojalgo/array/Array2D.xml

Ojalgo/xml/org/ojalgo/array/ArrayAnyD.xml
386	TODO Auto-generated method stub
512	TODO Auto-generated method stub

Ojalgo/xml/org/ojalgo/array/ArrayUtils.xml
413	TODO Auto-generated method stub
413	TODO Auto-generated method stub

Ojalgo/xml/org/ojalgo/array/BasicArray.xml

Ojalgo/xml/org/ojalgo/array/BigArray.xml

Ojalgo/xml/org/ojalgo/array/ComplexArray.xml

Ojalgo/xml/org/ojalgo/array/package-info.xml

Ojalgo/xml/org/ojalgo/array/PrimitiveArray.xml

Ojalgo/xml/org/ojalgo/array/RationalArray.xml

Ojalgo/xml/org/ojalgo/array/SimpleArray.xml

Ojalgo/xml/org/ojalgo/concurrent/DaemonPoolExecutor.xml

Ojalgo/xml/org/ojalgo/concurrent/DivideAndConquer.xml

Ojalgo/xml/org/ojalgo/concurrent/package-info.xml

Ojalgo/xml/org/ojalgo/constant/BigMath.xml

Ojalgo/xml/org/ojalgo/constant/BigPrefix.xml

Ojalgo/xml/org/ojalgo/constant/package-info.xml

Ojalgo/xml/org/ojalgo/constant/PrimitiveMath.xml

Ojalgo/xml/org/ojalgo/constant/PrimitivePrefix.xml

Ojalgo/xml/org/ojalgo/finance/data/DataSource.xml

Ojalgo/xml/org/ojalgo/finance/data/DatePrice.xml

Ojalgo/xml/org/ojalgo/finance/data/GoogleSymbol.xml

Ojalgo/xml/org/ojalgo/finance/data/package-info.xml

Ojalgo/xml/org/ojalgo/finance/data/SourceCache.xml

Ojalgo/xml/org/ojalgo/finance/data/YahooSymbol.xml

Ojalgo/xml/org/ojalgo/finance/FinanceUtils.xml
71	The average number of millis between to subsequent keys in the series.
73	The time between to keys expressed in terms of the specified time meassure and unit.

Ojalgo/xml/org/ojalgo/finance/package-info.xml

Ojalgo/xml/org/ojalgo/finance/portfolio/BlackLittermanModel.xml

Ojalgo/xml/org/ojalgo/finance/portfolio/CharacteristicLine.xml

Ojalgo/xml/org/ojalgo/finance/portfolio/EquilibriumModel.xml

Ojalgo/xml/org/ojalgo/finance/portfolio/FinancePortfolio.xml

Ojalgo/xml/org/ojalgo/finance/portfolio/FixedReturnsPortfolio.xml

Ojalgo/xml/org/ojalgo/finance/portfolio/FixedWeightsPortfolio.xml

Ojalgo/xml/org/ojalgo/finance/portfolio/LowerUpper.xml

Ojalgo/xml/org/ojalgo/finance/portfolio/MarketEquilibrium.xml
48	Don't change the default!

Ojalgo/xml/org/ojalgo/finance/portfolio/MarkowitzModel.xml
302	retVal.options.debug(QuadraticSolver.class);
401	BasicLogger.logDebug(); BasicLogger.logDebug("Iter:   {}", tmpIterCount); BasicLogger.logDebug("Low:    {}", tmpLowVariance); BasicLogger.logDebug("Target: {}", myTargetVariance); BasicLogger.logDebug("High:   {}", tmpHighVariance); BasicLogger.logDebug("Diff:   {}", tmpTargetDiff);

Ojalgo/xml/org/ojalgo/finance/portfolio/NormalisedPortfolio.xml

Ojalgo/xml/org/ojalgo/finance/portfolio/package-info.xml

Ojalgo/xml/org/ojalgo/finance/portfolio/PortfolioContext.xml

Ojalgo/xml/org/ojalgo/finance/portfolio/PortfolioMixer.xml
138	BasicLogger.logDebug(tmpActive.toString()); BasicLogger.logDebug(tmpActive.getName(), tmpActive.getLinear().getFactors());
141	BasicLogger.logDebug(QUADRATIC_OBJECTIVE_PART, tmpQuadObj.getQuadratic().getFactors());
148	BasicLogger.logDebug(tmpHundredPercent.toString()); BasicLogger.logDebug(tmpHundredPercent.getName(), tmpHundredPercent.getLinear().getFactors());
156	BasicLogger.logDebug(tmpStrategyCount.toString()); BasicLogger.logDebug(tmpStrategyCount.getName(), tmpStrategyCount.getLinear().getFactors());
161	For now I assume there is only 1 index
180	For now I assume there is only 1 index
198	tmpModel.options.debug_stream = BasicLogger.DEBUG; tmpModel.options.debug_solver = IntegerSolver.class;
203	BasicLogger.logDebug(tmpModel.toString()); BasicLogger.logDebug(Arrays.toString(tmpVariables));

Ojalgo/xml/org/ojalgo/finance/portfolio/SimpleAsset.xml

Ojalgo/xml/org/ojalgo/finance/portfolio/SimplePortfolio.xml

Ojalgo/xml/org/ojalgo/finance/portfolio/simulator/package-info.xml

Ojalgo/xml/org/ojalgo/finance/portfolio/simulator/PortfolioSimulator.xml

Ojalgo/xml/org/ojalgo/function/aggregator/Aggregator.xml

Ojalgo/xml/org/ojalgo/function/aggregator/AggregatorCollection.xml

Ojalgo/xml/org/ojalgo/function/aggregator/AggregatorFunction.xml

Ojalgo/xml/org/ojalgo/function/aggregator/BigAggregator.xml

Ojalgo/xml/org/ojalgo/function/aggregator/ComplexAggregator.xml

Ojalgo/xml/org/ojalgo/function/aggregator/package-info.xml

Ojalgo/xml/org/ojalgo/function/aggregator/PrimitiveAggregator.xml
237	return myValue; // more than 100x slower
251	myValue = Math.hypot(myValue, anArg); // more than 100x slower
237	return myValue; // more than 100x slower
251	myValue = Math.hypot(myValue, anArg); // more than 100x slower

Ojalgo/xml/org/ojalgo/function/aggregator/RationalAggregator.xml

Ojalgo/xml/org/ojalgo/function/BigFunction.xml

Ojalgo/xml/org/ojalgo/function/BinaryFunction.xml

Ojalgo/xml/org/ojalgo/function/ComplexFunction.xml

Ojalgo/xml/org/ojalgo/function/Function.xml

Ojalgo/xml/org/ojalgo/function/FunctionSet.xml

Ojalgo/xml/org/ojalgo/function/multiary/AbstractMultiary.xml

Ojalgo/xml/org/ojalgo/function/multiary/ApproximateFunction.xml

Ojalgo/xml/org/ojalgo/function/multiary/CompoundFunction.xml

Ojalgo/xml/org/ojalgo/function/multiary/ConstantFunction.xml

Ojalgo/xml/org/ojalgo/function/multiary/FirstOrderApproximation.xml

Ojalgo/xml/org/ojalgo/function/multiary/LinearFunction.xml

Ojalgo/xml/org/ojalgo/function/multiary/MultiaryFunction.xml

Ojalgo/xml/org/ojalgo/function/multiary/QuadraticFunction.xml

Ojalgo/xml/org/ojalgo/function/multiary/SecondOrderApproximation.xml

Ojalgo/xml/org/ojalgo/function/NullaryFunction.xml

Ojalgo/xml/org/ojalgo/function/package-info.xml

Ojalgo/xml/org/ojalgo/function/ParameterFunction.xml

Ojalgo/xml/org/ojalgo/function/polynomial/AbstractPolynomial.xml

Ojalgo/xml/org/ojalgo/function/polynomial/BigPolynomial.xml

Ojalgo/xml/org/ojalgo/function/polynomial/ComplexPolynomial.xml

Ojalgo/xml/org/ojalgo/function/polynomial/package-info.xml

Ojalgo/xml/org/ojalgo/function/polynomial/PolynomialFunction.xml

Ojalgo/xml/org/ojalgo/function/polynomial/PrimitivePolynomial.xml

Ojalgo/xml/org/ojalgo/function/polynomial/RationalPolynomial.xml

Ojalgo/xml/org/ojalgo/function/PrimitiveFunction.xml

Ojalgo/xml/org/ojalgo/function/RationalFunction.xml

Ojalgo/xml/org/ojalgo/function/UnaryFunction.xml

Ojalgo/xml/org/ojalgo/function/VoidFunction.xml

Ojalgo/xml/org/ojalgo/machine/AbstractMachine.xml
84	L3 specified
87	L2 specified

Ojalgo/xml/org/ojalgo/machine/BasicMachine.xml

Ojalgo/xml/org/ojalgo/machine/Hardware.xml
304	Assume hyperthreading, L3 cache and more than 1 CPU
306	Hyperthreading
310	More than 1 CPU
317	Assume hyperthreading, L3 cache but only 1 CPU
319	Hyperthreading
330	No hyperthreading, no L3 cache and 1 CPU
332	No hyperthreading

Ojalgo/xml/org/ojalgo/machine/JavaType.xml

Ojalgo/xml/org/ojalgo/machine/MemoryEstimator.xml

Ojalgo/xml/org/ojalgo/machine/package-info.xml

Ojalgo/xml/org/ojalgo/machine/VirtualMachine.xml
40	http://fantom.org/sidewalk/topic/756

Ojalgo/xml/org/ojalgo/matrix/AbstractMatrix.xml
213	TODO Make protected when no longer in interface
297	TODO Make protected when no longer in interface

Ojalgo/xml/org/ojalgo/matrix/BasicMatrix.xml

Ojalgo/xml/org/ojalgo/matrix/BigMatrix.xml

Ojalgo/xml/org/ojalgo/matrix/ComplexMatrix.xml

Ojalgo/xml/org/ojalgo/matrix/decomposition/AbstractDecomposition.xml

Ojalgo/xml/org/ojalgo/matrix/decomposition/Bidiagonal.xml

Ojalgo/xml/org/ojalgo/matrix/decomposition/BidiagonalDecomposition.xml

Ojalgo/xml/org/ojalgo/matrix/decomposition/Cholesky.xml

Ojalgo/xml/org/ojalgo/matrix/decomposition/CholeskyDecomposition.xml
82	64,16,16
133	true if (Hermitian) Positive Definite
138	Check if hermitian, maybe
145	Main loop - along the diagonal
148	Do the calculations...
153	Calculate multipliers and copy to local column Current column, below the diagonal
157	Remaining columns, below the diagonal

Ojalgo/xml/org/ojalgo/matrix/decomposition/DecompositionStore.xml

Ojalgo/xml/org/ojalgo/matrix/decomposition/DiagonalAccess.xml

Ojalgo/xml/org/ojalgo/matrix/decomposition/Eigenvalue.xml

Ojalgo/xml/org/ojalgo/matrix/decomposition/EigenvalueDecomposition.xml

Ojalgo/xml/org/ojalgo/matrix/decomposition/GeneralEvD.xml

Ojalgo/xml/org/ojalgo/matrix/decomposition/HermitianEvD32.xml
84	BasicLogger.logDebug("Tridiagonal={}", aTridiagonal.toString());
91	Actually unnecessary to copy
92	The algorith needs the array to be the same length as the main diagonal
98	BasicLogger.logDebug("BEGIN diagonalize"); BasicLogger.logDebug("Main D: {}", Arrays.toString(tmpMainDiagonal)); BasicLogger.logDebug("Seco D: {}", Arrays.toString(tmpOffDiagonal)); BasicLogger.logDebug("V", aV); BasicLogger.logDebug();
111	Main loop
114	BasicLogger.logDebug("Loop l=" + l, tmpMainDiagonal, tmpOffDiagonal);
116	Find small subdiagonal element
128	If m == l, aMainDiagonal[l] is an eigenvalue, otherwise, iterate.
133	(l,l)
134	(l+1,l+1)
135	(l+1,l) and (l,l+1)
137	Compute implicit shift
145	(l,l)
146	(l+1,l+1)
147	(l+1,l) and (l,l+1)
155	BasicLogger.logDebug("New shift =" + tmpShift, tmpMainDiagonal, tmpOffDiagonal);
157	Implicit QL transformation
167	Initiate p
168	BasicLogger.logDebug("m={} l={}", m, l);
187	Next p
189	Accumulate transformation - rotate the eigenvector matrix aV.transformRight(new Rotation.Primitive(i, i + 1, tmpRotCos, tmpRotSin));
192	BasicLogger.logDebug("low={} high={} cos={} sin={}", i, i + 1, tmpRotCos, tmpRotSin);
197	EigenvalueDecomposition.log("QL step done i=" + i, tmpMainDiagonal, tmpOffDiagonal);
201	Final p
206	Check for convergence
207	End if (m > l)
216	End main loop - l
218	BasicLogger.logDebug("END diagonalize"); BasicLogger.logDebug("Main D: {}", Arrays.toString(tmpMainDiagonal)); BasicLogger.logDebug("Seco D: {}", Arrays.toString(tmpOffDiagonal)); BasicLogger.logDebug("V", aV); BasicLogger.logDebug();
224	for (int i = 0; i < tmpMainDiagData.length; i++) { tmpMainDiagonal.set(i, tmpMainDiagData[i]); }
228	return new PrimitiveArray(tmpMainDiagonal).asArray1D();
372	BasicLogger.logDebug("Tridiagonal1={}", tmpTridiagonal);
376	BasicLogger.logDebug("Tridiagonal2={}", tmpTridiagonal);

Ojalgo/xml/org/ojalgo/matrix/decomposition/Hessenberg.xml

Ojalgo/xml/org/ojalgo/matrix/decomposition/HessenbergDecomposition.xml

Ojalgo/xml/org/ojalgo/matrix/decomposition/InPlaceDecomposition.xml

Ojalgo/xml/org/ojalgo/matrix/decomposition/LU.xml

Ojalgo/xml/org/ojalgo/matrix/decomposition/LUDecomposition.xml
81	Why?!
136	16,32,2
336	Main loop - along the diagonal
340	Find next pivot row
343	Pivot?
350	Do the calculations...
353	Calculate multipliers and copy to local column Current column, below the diagonal
357	Apply transformations to everything below and to the right of the pivot element

Ojalgo/xml/org/ojalgo/matrix/decomposition/MatrixDecomposition.xml

Ojalgo/xml/org/ojalgo/matrix/decomposition/NonsymmetricEvD.xml
145	BasicLogger.logDebug("Eigenvalues: {}", tmpEigenvalues); BasicLogger.logDebug("D", tmpD); BasicLogger.logDebug("THIS", tmpMtrxA);

Ojalgo/xml/org/ojalgo/matrix/decomposition/package-info.xml

Ojalgo/xml/org/ojalgo/matrix/decomposition/QR.xml

Ojalgo/xml/org/ojalgo/matrix/decomposition/QRDecomposition.xml
86	16,16,8

Ojalgo/xml/org/ojalgo/matrix/decomposition/Schur.xml

Ojalgo/xml/org/ojalgo/matrix/decomposition/SchurDecomposition.xml

Ojalgo/xml/org/ojalgo/matrix/decomposition/SingularValue.xml

Ojalgo/xml/org/ojalgo/matrix/decomposition/SingularValueDecomposition.xml
200	final N tmpZero = this.getStaticZero();
205	tmpMtrx.fillRow(i, 0, tmpZero);
300	Tolerance based on min-dim but should be max-dim

Ojalgo/xml/org/ojalgo/matrix/decomposition/SVDnew32.xml
128	Calculate the shift.
154	Chase zeros.
195	Make the singular values positive.
201	aQ2.modifyColumn(0, k, PrimitiveFunction.NEGATE);
206	To get rid of negative zeros
209	Order the singular values.
235	s
236	e
242	Main iteration loop for the singular values.
248	This section of the program inspects for negligible elements in the s and e arrays. On completion the variables kase and k are set as follows:  kase = 1     if s[p] and e[k-1] are negligible and k<p                           => deflate negligible s[p] kase = 2     if s[k] is negligible and k<p                                       => split at negligible s[k] kase = 3     if e[k-1] is negligible, k<p, and s(k)...s(p) are not negligible    => perform QR-step kase = 4     if e[p-1] is negligible                                             => convergence.
295	Perform the task indicated by kase.
297	Deflate negligible s[p]
302	Split at negligible s[k]
307	Perform QR-step.
312	Convergence
322	switch
323	while
325	return new PrimitiveArray(s).asArray1D();
362	if (this.isTransposed()) { this.setQ1(tmpQ2); this.setQ2(tmpQ1); } else { this.setQ1(tmpQ1); this.setQ2(tmpQ2); }

Ojalgo/xml/org/ojalgo/matrix/decomposition/SVDold30.xml
80	tan, cot or something temporary
82	Symmetrise - Givens
83	cos Givens
84	sin Givens
93	cot
97	tan
104	b01 + b10
109	Annihilate - Jacobi
110	Cos Jacobi
111	Sin Jacobi
113	Jacobi
114	Givens - Jacobi
139	tan, cot or something temporary
141	Symmetrise - Givens
142	cos Givens
143	sin Givens
152	cot
156	tan
163	b01 + b10
168	Annihilate - Jacobi
169	Cos Jacobi
170	Sin Jacobi
172	Jacobi
173	Givens - Jacobi
197	tan, cot or something temporary
199	Symmetrise - Givens
200	cos Givens
201	sin Givens
210	cot
214	tan
221	b01 + b10
224	tan Jacobi
226	Annihilate - Jacobi
227	cos Jacobi
228	sin Jacobi
230	Jacobi
231	Givens - Jacobi
289	[Givens - Jacobi, Jacobi]
291	int iter = 0; BasicLogger.logDebug(this.getClass().toString()); BasicLogger.logDebug("Init D", myD);
302	for (int i0 = tmpMinDim - 1; i0 > 0; i0--) { // Performs much slower
319	BasicLogger.logDebug("Iter-" + ++iter + " D", myD);
415	final int tmpMinDim = this..getMinDim();  final PhysicalStore<N> retVal = this.makeZero(tmpMinDim, tmpMinDim);  for (int ij = 0; ij < tmpMinDim; ij++) { retVal.set(ij, ij, myD.get(ij, ij)); }
450	TODO Auto-generated method stub

Ojalgo/xml/org/ojalgo/matrix/decomposition/task/AbstractDeterminator.xml

Ojalgo/xml/org/ojalgo/matrix/decomposition/task/AbstractInverter.xml

Ojalgo/xml/org/ojalgo/matrix/decomposition/task/AbstractSolver.xml

Ojalgo/xml/org/ojalgo/matrix/decomposition/task/DecompositionTask.xml

Ojalgo/xml/org/ojalgo/matrix/decomposition/task/DeterminantTask.xml

Ojalgo/xml/org/ojalgo/matrix/decomposition/task/InverterTask.xml

Ojalgo/xml/org/ojalgo/matrix/decomposition/task/package-info.xml

Ojalgo/xml/org/ojalgo/matrix/decomposition/task/SolverTask.xml

Ojalgo/xml/org/ojalgo/matrix/decomposition/task/TaskException.xml

Ojalgo/xml/org/ojalgo/matrix/decomposition/Tridiagonal.xml

Ojalgo/xml/org/ojalgo/matrix/decomposition/TridiagonalAltDecomp.xml

Ojalgo/xml/org/ojalgo/matrix/decomposition/TridiagonalDecomposition.xml
74	superDiagonal should be the conjugate of this but it is set to the saem value
155	Which is also the col-dim.
172	Super differs only in possible conjugate values

Ojalgo/xml/org/ojalgo/matrix/jama/CholeskyDecomposition.xml
16	------------------------ Class variables
35	------------------------ Constructor
41	------------------------ Temporary, experimental code. ------------------------ \  \ Right Triangular Cholesky Decomposition. <P> For a symmetric, positive definite matrix A, the Right Cholesky decomposition is an upper triangular matrix R so that A = R'R. This constructor computes R with the Fortran inspired column oriented algorithm used in LINPACK and MATLAB.  In Java, we suspect a row oriented, lower triangular decomposition is faster.  We have temporarily included this constructor here until timing experiments confirm this suspicion. \  \ Array for internal storage of right triangular decomposition. \ private transient double[][] R;  \ Cholesky algorithm for symmetric and positive definite matrix. @param  A           Square, symmetric matrix. @param  rightflag   Actual value ignored. @return             Structure to access R and isspd flag. \  public CholeskyDecomposition (Matrix Arg, int rightflag) { Initialize. double[][] A = Arg.getArray(); n = Arg.getColumnDimension(); R = new double[n][n]; isspd = (Arg.getColumnDimension() == n); Main loop. for (int j = 0; j < n; j++) { double d = 0.0; for (int k = 0; k < j; k++) { double s = A[k][j]; for (int i = 0; i < k; i++) { s = s - R[i][k]R[i][j]; } R[k][j] = s = sR[k][k]; d = d + ss; isspd = isspd & (A[k][j] == A[j][k]); } d = A[j][j] - d; isspd = isspd & (d > 0.0); R[j][j] = Math.sqrt(Math.max(d,0.0)); for (int k = j+1; k < n; k++) { R[k][j] = 0.0; } } }  \ Return upper triangular factor. @return     R \  public Matrix getR () { return new Matrix(R,n,n); }  \ ------------------------ End of temporary code.
103	------------------------ Public Methods
114	Initialize.
119	Main loop.
173	Copy right hand side.
177	Solve L*Y = B;
187	Solve L'*X = Y;

Ojalgo/xml/org/ojalgo/matrix/jama/ColumnsMatrix.xml

Ojalgo/xml/org/ojalgo/matrix/jama/EigenvalueDecomposition.xml
22	------------------------ Class variables
56	------------------------ Private Methods
60	Symmetric Householder reduction to tridiagonal form.
64	Symmetric tridiagonal QL algorithm.
68	Nonsymmetric reduction to Hessenberg form.
158	Complex scalar division.
189	Nonsymmetric reduction from Hessenberg to real Schur form.
199	------------------------ Constructor
211	------------------------ Public Methods
96	Tridiagonalize.
99	Diagonalize.
112	Reduce to Hessenberg form.
115	Reduce Hessenberg to real Schur form.
134	Tridiagonalize.
137	Diagonalize.
150	Reduce to Hessenberg form.
153	Reduce Hessenberg to real Schur form.
232	This is derived from the Algol procedure hqr2, by Martin and Wilkinson, Handbook for Auto. Comp., Vol.ii-Linear Algebra, and the corresponding Fortran subroutine in EISPACK.
237	Initialize
247	Store roots isolated by balanc and compute matrix norm
260	Outer loop over eigenvalue index
265	Look for single small sub-diagonal element
279	Check for convergence One root found
289	Two roots found
300	Real pair
323	Row modification
331	Column modification
339	Accumulate transformations
347	Complex pair
358	No convergence yet
362	Form shift
372	Wilkinson's original ad hoc shift
384	MATLAB's new ad hoc shift
403	(Could check iteration count here.)
405	Look for two consecutive small sub-diagonal elements
436	Double QR step involving rows l:n and columns m:n
470	Row modification
482	Column modification
494	Accumulate transformations
505	(s != 0)
506	k loop
507	check convergence
508	while (n >= low)
510	Backsubstitute to find vectors of upper triangular form
520	Real vector
543	Solve real equations
558	Overflow control
569	Complex vector
574	Last vector component imaginary so matrix is triangular
608	Solve complex equations
630	Overflow control
644	Vectors of isolated roots
654	Back transformation to get eigenvectors of original matrix
669	This is derived from the Algol procedures orthes and ortran, by Martin and Wilkinson, Handbook for Auto. Comp., Vol.ii-Linear Algebra, and the corresponding Fortran subroutines in EISPACK.
679	Scale column.
687	Compute Householder transformation.
701	Apply Householder similarity transformation H = (I-u*u'/h)*H*(I-u*u')/h)
730	Accumulate transformations (Algol's ortran).
748	Double division avoids possible underflow
760	This is derived from the Algol procedures tql2, by Bowdler, Martin, Reinsch, and Wilkinson, Handbook for Auto. Comp., Vol.ii-Linear Algebra, and the corresponding Fortran subroutine in EISPACK.
775	Find small subdiagonal element
786	If m == l, d[l] is an eigenvalue, otherwise, iterate.
792	(Could check iteration count here.)
794	Compute implicit shift
811	Implicit QL transformation.
833	Accumulate transformation.
845	Check for convergence.
853	Sort eigenvalues and corresponding vectors.
878	This is derived from the Algol procedures tred2 by Bowdler, Martin, Reinsch, and Wilkinson, Handbook for Auto. Comp., Vol.ii-Linear Algebra, and the corresponding Fortran subroutine in EISPACK.
887	Householder reduction to tridiagonal form.
891	Scale to avoid under/overflow.
907	Generate Householder vector.
925	Apply similarity transformation to remaining columns.
959	Accumulate transformations.

Ojalgo/xml/org/ojalgo/matrix/jama/JamaAbstractDecomposition.xml

Ojalgo/xml/org/ojalgo/matrix/jama/JamaCholesky.xml
133	return MatrixUtils.makeIdentity(PrimitiveDenseStore.FACTORY, myDelegate.getL().getRowDimension());

Ojalgo/xml/org/ojalgo/matrix/jama/JamaEigenvalue.xml
235	TODO Auto-generated method stub

Ojalgo/xml/org/ojalgo/matrix/jama/JamaFactory.xml

Ojalgo/xml/org/ojalgo/matrix/jama/JamaLU.xml
95	TODO Auto-generated method stub

Ojalgo/xml/org/ojalgo/matrix/jama/JamaMatrix.xml

Ojalgo/xml/org/ojalgo/matrix/jama/JamaQR.xml

Ojalgo/xml/org/ojalgo/matrix/jama/JamaSingularValue.xml

Ojalgo/xml/org/ojalgo/matrix/jama/LUDecomposition.xml
19	------------------------ Class variables
42	------------------------ Constructor
48	------------------------ Temporary, experimental code. ------------------------ \  \ LU Decomposition, computed by Gaussian elimination. <P> This constructor computes L and U with the "daxpy"-based elimination algorithm used in LINPACK and MATLAB.  In Java, we suspect the dot-product, Crout algorithm will be faster.  We have temporarily included this constructor until timing experiments confirm this suspicion. <P> @param  A             Rectangular matrix @param  linpackflag   Use Gaussian elimination.  Actual value ignored. @return               Structure to access L, U and piv. \  public LUDecomposition (Matrix A, int linpackflag) { Initialize. LU = A.getArrayCopy(); m = A.getRowDimension(); n = A.getColumnDimension(); piv = new int[m]; for (int i = 0; i < m; i++) { piv[i] = i; } pivsign = 1; Main loop. for (int k = 0; k < n; k++) { Find pivot. int p = k; for (int i = k+1; i < m; i++) { if (Math.abs(LU[i][k]) > Math.abs(LU[p][k])) { p = i; } } Exchange if necessary. if (p != k) { for (int j = 0; j < n; j++) { double t = LU[p][j]; LU[p][j] = LU[k][j]; LU[k][j] = t; } int t = piv[p]; piv[p] = piv[k]; piv[k] = t; pivsign = -pivsign; } Compute multipliers and eliminate k-th column. if (LU[k][k] != 0.0) { for (int i = k+1; i < m; i++) { LU[i][k] = LU[k][k]; for (int j = k+1; j < n; j++) { LU[i][j] -= LU[i][k]LU[k][j]; } } } } }  \ ------------------------ End of temporary code.
107	------------------------ Public Methods
118	Use a "left-looking", dot-product, Crout/Doolittle algorithm.
132	Outer loop.
136	Make a copy of the j-th column to localize references.
142	Apply previous transformations.
147	Most of the time is spent in the following dot product.
158	Find pivot and exchange if necessary.
178	Compute multipliers.
296	Copy right hand side with pivoting
301	Solve L*Y = B(piv,:)
309	Solve U*X = Y;

Ojalgo/xml/org/ojalgo/matrix/jama/MagicSquareExample.xml
40	Odd order
51	Doubly Even Order
64	Singly Even Order
103	| Tests LU, QR, SVD and symmetric Eig decompositions. | |   n       = order of magic square. |   trace   = diagonal sum, should be the magic sum, (n^3 + n)2. |   max_eig = maximum eigenvalue of (A + A')2, should equal trace. |   rank    = linear algebraic rank, |             should equal n if n is odd, be less than n if n is even. |   cond    = L_2 condition number, ratio of singular values. |   lu_res  = test of LU factorization, norm1(LU-A(p,:))(neps). |   qr_res  = test of QR factorization, norm1(QR-A)(neps).

Ojalgo/xml/org/ojalgo/matrix/jama/Maths.xml

Ojalgo/xml/org/ojalgo/matrix/jama/Matrix.xml
57	------------------------ Class variables
84	------------------------ Constructors
194	------------------------ Public Methods
993	DecimalFormat is a little disappointing coming from Fortran or C's printf. Since it doesn't pad on the left, the elements will come out different widths.  Consequently, we'll pass the desired column width in as an argument and do the extra padding ourselves.
1025	------------------------ Private Methods
133	Although StreamTokenizer will parse numbers, it doesn't recognize scientific notation (E or D); however, Double.valueOf does. The strategy here is to disable StreamTokenizer's number parsing. We'll only get whitespace delimited words, EOL's and EOF's. These words should all be numbers, for Double.valueOf to parse.
145	Ignore initial empty lines
153	Read & store 1st row.
156	Now we've got the number of columns!
162	Start storing rows instead of columns.
164	While non-empty lines
177	Now we've got the number of rows.
179	copy the rows out of the vector
784	start on new line.
787	format the number
788	At _least_ 1 space
796	end with blank line.

Ojalgo/xml/org/ojalgo/matrix/jama/package-info.xml

Ojalgo/xml/org/ojalgo/matrix/jama/QRDecomposition.xml
19	------------------------ Class variables
39	------------------------ Constructor
45	------------------------ Public Methods
55	Initialize.
61	Main loop.
63	Compute 2-norm of k-th column without under/overflow.
70	Form k-th Householder vector.
79	Apply transformation to remaining columns.
191	Copy right hand side
195	Compute Y = transpose(Q)*B
208	Solve R*X = Y;

Ojalgo/xml/org/ojalgo/matrix/jama/SingularValueDecomposition.xml
20	------------------------ Class variables
41	------------------------ Constructor
47	------------------------ Public Methods
62	Derived from LINPACK code. Initialize.
68	Apparently the failing cases are only a proper subset of (m<n), so let's not throw error.  Correct fix to come later? if (m<n) { throw new IllegalArgumentException("Jama SVD only works for m >= n"); }
80	Reduce A to bidiagonal form, storing the diagonal elements in s and the super-diagonal elements in e.
88	Compute the transformation for the k-th column and place the k-th diagonal in s[k]. Compute 2-norm of k-th column without under/overflow.
109	Apply the transformation.
121	Place the k-th row of A into e for the subsequent calculation of the row transformation.
128	Place the transformation in U for subsequent back multiplication.
137	Compute the k-th row transformation and place the k-th super-diagonal in e[k]. Compute 2-norm without under/overflow.
156	Apply the transformation.
175	Place the transformation in V for subsequent back multiplication.
185	Set up the final bidiagonal matrix or order p.
199	If required, generate U.
236	If required, generate V.
259	Main iteration loop for the singular values.
268	Here is where a test for too many iterations would go.
270	This section of the program inspects for negligible elements in the s and e arrays.  On completion the variables kase and k are set as follows.
274	kase = 1     if s(p) and e[k-1] are negligible and k<p kase = 2     if s(k) is negligible and k<p kase = 3     if e[k-1] is negligible, k<p, and s(k), ..., s(p) are not negligible (qr step). kase = 4     if e(p-1) is negligible (convergence).
314	Perform the task indicated by kase.
318	Deflate negligible s(p).
343	Split at negligible s(k).
366	Perform one qr step.
370	Calculate the shift.
392	Chase zeros.
433	Convergence.
437	Make the singular values positive.
448	Order the singular values.

Ojalgo/xml/org/ojalgo/matrix/jama/TestMatrix.xml
40	Uncomment this to test IO in a different locale. Locale.setDefault(Locale.GERMAN);
76	Constructors and constructor-like methods: double[], int double[][] int, int int, int, double int, int, double[][] constructWithCopy(double[][]) random(int,int) identity(int)
97	check that exception is thrown in default constructor
108	check that exception is thrown in constructWithCopy
143	Access Methods: getColumnDimension() getRowDimension() getArray() getArrayCopy() getColumnPackedCopy() getRowPackedCopy() get(int,int) getMatrix(int,int,int,int) getMatrix(int,int,int[]) getMatrix(int[],int,int) getMatrix(int[],int[]) set(int,int,double) setMatrix(int,int,int,int,Matrix) setMatrix(int,int,int[],Matrix) setMatrix(int[],int,int,Matrix) setMatrix(int[],int[],Matrix)
165	Various get methods:
332	Various set methods:
465	Array-like methods: minus minusEquals plus plusEquals arrayLeftDivide arrayLeftDivideEquals arrayRightDivide arrayRightDivideEquals arrayTimes arrayTimesEquals uminus
632	IO methods: read print serializable: writeObject readObject
699	LA methods: transpose times cond rank det trace norm1 norm2 normF normInf solve solveTranspose inverse chol eig lu qr svd
943	Use format Fw.d for all elements.

Ojalgo/xml/org/ojalgo/matrix/MatrixError.xml

Ojalgo/xml/org/ojalgo/matrix/MatrixFactory.xml

Ojalgo/xml/org/ojalgo/matrix/MatrixUtils.xml
63	Check that it's possible to reconstruct the original matrix.
72	If Q1 is square, then check if it is orthogonal/unitary.
81	If Q2 is square, then check if it is orthogonal/unitary.
109	Check that [A][V] == [V][D] ([A] == [V][D][V]<sup>T</sup> is not always true)
151	Check that [A][Q] == [Q][U] ([A] == [Q][U][Q]<sup>T</sup> is not always true)
172	Check that [A][Q2] == [Q1][D]
181	If Q1 is square, then check if it is orthogonal/unitary.
190	If Q2 is square, then check if it is orthogonal/unitary.
199	Check the pseudoinverse.
204	Check that the singular values are sorted in descending order
222	Check that [A] == [Q][D][Q]<sup>T</sup>
225	Check that Q is orthogonal/unitary...
422	First element
425	Rest of the first row
430	For each of the remaining rows
433	First column
436	Remaining columns
442	Finish

Ojalgo/xml/org/ojalgo/matrix/package-info.xml

Ojalgo/xml/org/ojalgo/matrix/PrimitiveMatrix.xml

Ojalgo/xml/org/ojalgo/matrix/store/AboveBelowStore.xml

Ojalgo/xml/org/ojalgo/matrix/store/AbstractStore.xml
117	TODO Make protected when no longer in interface
130	TODO Make protected when no longer in interface

Ojalgo/xml/org/ojalgo/matrix/store/BigDenseStore.xml

Ojalgo/xml/org/ojalgo/matrix/store/ColumnsStore.xml

Ojalgo/xml/org/ojalgo/matrix/store/ComplexDenseStore.xml

Ojalgo/xml/org/ojalgo/matrix/store/ConjugatedStore.xml

Ojalgo/xml/org/ojalgo/matrix/store/DelegatingStore.xml

Ojalgo/xml/org/ojalgo/matrix/store/FactoryStore.xml

Ojalgo/xml/org/ojalgo/matrix/store/IdentityStore.xml

Ojalgo/xml/org/ojalgo/matrix/store/LeftRightStore.xml

Ojalgo/xml/org/ojalgo/matrix/store/LogicalStore.xml

Ojalgo/xml/org/ojalgo/matrix/store/LowerHessenbergStore.xml

Ojalgo/xml/org/ojalgo/matrix/store/LowerTriangularStore.xml

Ojalgo/xml/org/ojalgo/matrix/store/MatrixStore.xml

Ojalgo/xml/org/ojalgo/matrix/store/ModificationStore.xml

Ojalgo/xml/org/ojalgo/matrix/store/operation/AggregateAll.xml

Ojalgo/xml/org/ojalgo/matrix/store/operation/ApplyCholesky.xml

Ojalgo/xml/org/ojalgo/matrix/store/operation/ApplyLU.xml

Ojalgo/xml/org/ojalgo/matrix/store/operation/CAXPY.xml
49	y += ax
56	y += ax
63	y += ax

Ojalgo/xml/org/ojalgo/matrix/store/operation/FillConjugated.xml

Ojalgo/xml/org/ojalgo/matrix/store/operation/FillMatchingBoth.xml

Ojalgo/xml/org/ojalgo/matrix/store/operation/FillMatchingLeft.xml

Ojalgo/xml/org/ojalgo/matrix/store/operation/FillMatchingRight.xml

Ojalgo/xml/org/ojalgo/matrix/store/operation/FillMatchingSingle.xml

Ojalgo/xml/org/ojalgo/matrix/store/operation/FillTransposed.xml

Ojalgo/xml/org/ojalgo/matrix/store/operation/GenerateApplyAndCopyHouseholderColumn.xml
143	Copy column and calculate its infinity-norm.
164	2-norm of the vector to transform (scaled by inf-norm)

Ojalgo/xml/org/ojalgo/matrix/store/operation/GenerateApplyAndCopyHouseholderRow.xml
143	Copy row and calculate its infinity-norm.
164	2-norm of the vector to transform (scaled by inf-norm)

Ojalgo/xml/org/ojalgo/matrix/store/operation/HermitianRank2Update.xml
44	Should be the same as aVector1.length and the "row-dim" of aData.
66	Should be the same as aVector1.length and the "row-dim" of aData.
87	Should be the same as aVector1.length and the "row-dim" of aData.

Ojalgo/xml/org/ojalgo/matrix/store/operation/HouseholderHermitian.xml
76	tmpVal += tmpVector[c] * aWorker[c];
79	tmpVal *= (tmpBeta / TWO);
82	aWorker[c] = tmpBeta * (aWorker[c] - (tmpVal * tmpVector[c]));
131	tmpVal += tmpVector[c] * aWorker[c];
134	tmpVal *= (tmpBeta / TWO);
137	aWorker[c] = tmpBeta * (aWorker[c] - (tmpVal * tmpVector[c]));
213	Symmetric Householder reduction to tridiagonal form. The original version of this code was taken from JAMA. That code is in turn derived from the Algol procedures tred2 by Bowdler, Martin, Reinsch, and Wilkinson, Handbook for Auto. Comp., Vol.ii-Linear Algebra, and the corresponding Fortran subroutine in EISPACK. tred2 is also described in Numerical Recipes. Parameters and variables are names are choosen to match what is used there.  z is the original matrix [A] that will be overwritten with [Q] d will hold the main diagonal of the tridiagonal result e will hold the off (super and sub) diagonals of the tridiagonal result
239	Copy the last column (same as the last row) of z to d The last row/column is the first to be worked on in the main loop
245	Householder reduction to tridiagonal form.
246	row index of target householder point
248	col index of target householder point
252	Calc the norm of the row/col to zero out
258	Skip generation, already zero
262	Are both needed?
263	Could cause cache-misses
267	Generate Householder vector.
271	can be optimised, too many array read/write ops
285	Apply similarity transformation to remaining columns. Remaing refers to all columns "before" the target col
292	access the same element in z twice
319	Accumulate transformations.

Ojalgo/xml/org/ojalgo/matrix/store/operation/HouseholderLeft.xml

Ojalgo/xml/org/ojalgo/matrix/store/operation/HouseholderRight.xml

Ojalgo/xml/org/ojalgo/matrix/store/operation/MatrixOperation.xml

Ojalgo/xml/org/ojalgo/matrix/store/operation/MAXPY.xml

Ojalgo/xml/org/ojalgo/matrix/store/operation/ModifyAll.xml

Ojalgo/xml/org/ojalgo/matrix/store/operation/MultiplyBoth.xml
106	The number of rows in the product- and left-matrix.
126	The number of rows in the product- and left-matrix.
168	The number of rows in the product- and left-matrix.
231	The number of rows in the product- and left-matrix.
321	The number of rows in the product- and left-matrix.

Ojalgo/xml/org/ojalgo/matrix/store/operation/MultiplyHermitianAndVector.xml
52	tmpVal += aSymmetric[i + c * tmpRowDim] * aVector[c];
56	tmpVal += aSymmetric[c + i * tmpRowDim] * aVector[c];
72	tmpVal += aSymmetric[i + c * tmpRowDim] * aVector[c];
76	tmpVal += aSymmetric[c + i * tmpRowDim] * aVector[c];

Ojalgo/xml/org/ojalgo/matrix/store/operation/MultiplyLeft.xml
105	The number of rows in the product- and left-matrix.
125	The number of rows in the product- and left-matrix.
167	The number of rows in the product- and left-matrix.
230	The number of rows in the product- and left-matrix.
320	The number of rows in the product- and left-matrix.

Ojalgo/xml/org/ojalgo/matrix/store/operation/MultiplyRight.xml
104	The number of rows in the product- and left-matrix.
124	The number of rows in the product- and left-matrix.
166	The number of rows in the product- and left-matrix.
229	The number of rows in the product- and left-matrix.
319	The number of rows in the product- and left-matrix.

Ojalgo/xml/org/ojalgo/matrix/store/operation/package-info.xml

Ojalgo/xml/org/ojalgo/matrix/store/operation/RAXPY.xml

Ojalgo/xml/org/ojalgo/matrix/store/operation/RotateLeft.xml

Ojalgo/xml/org/ojalgo/matrix/store/operation/RotateRight.xml

Ojalgo/xml/org/ojalgo/matrix/store/operation/SubstituteBackwards.xml

Ojalgo/xml/org/ojalgo/matrix/store/operation/SubstituteForwards.xml

Ojalgo/xml/org/ojalgo/matrix/store/operation/SubtractScaledVector.xml
48	y -= ax
55	y -= ax
62	y -= ax

Ojalgo/xml/org/ojalgo/matrix/store/package-info.xml

Ojalgo/xml/org/ojalgo/matrix/store/PhysicalStore.xml
134	TODO Auto-generated method stub
139	TODO Auto-generated method stub
144	TODO Auto-generated method stub
149	TODO Auto-generated method stub
154	TODO Auto-generated method stub
159	TODO Auto-generated method stub
164	TODO Auto-generated method stub
169	TODO Auto-generated method stub
174	TODO Auto-generated method stub
179	TODO Auto-generated method stub
184	TODO Auto-generated method stub
189	TODO Auto-generated method stub
194	TODO Auto-generated method stub
199	TODO Auto-generated method stub
204	TODO Auto-generated method stub
209	TODO Auto-generated method stub
214	TODO Auto-generated method stub
219	TODO Auto-generated method stub
224	TODO Auto-generated method stub
229	TODO Auto-generated method stub
234	TODO Auto-generated method stub
239	TODO Auto-generated method stub
244	TODO Auto-generated method stub
249	TODO Auto-generated method stub
254	TODO Auto-generated method stub
259	TODO Auto-generated method stub
264	TODO Auto-generated method stub

Ojalgo/xml/org/ojalgo/matrix/store/PrimitiveDenseStore.xml
415	BasicLogger.logDebug("r={}, s={}, z={}", r, s, z);
429	Real vector
451	Solve real equations
465	Overflow control
475	Complex vector
479	Last vector component imaginary so matrix is triangular
521	Solve complex equations
556	Overflow control
569	Back transformation to get eigenvectors of original matrix
590	Scale column.
598	Compute Householder transformation.
611	Apply Householder similarity transformation H = (I-u*u'/h)*H*(I-u*u')/h)
640	BasicLogger.logDebug("Jama H", new PrimitiveDenseStore(tmpDiagDim, tmpDiagDim, aMtrxH));
642	Här borde Hessenberg vara klar Nedan börjar uträkningen av Q
645	Accumulate transformations (Algol's ortran).
657	Double division avoids possible underflow
664	BasicLogger.logDebug("Iter V", new PrimitiveDenseStore(tmpDiagDim, tmpDiagDim, aMtrxV));
668	BasicLogger.logDebug("Jama V", new PrimitiveDenseStore(tmpDiagDim, tmpDiagDim, aMtrxV));
678	Store roots isolated by balanc and compute matrix norm
694	Outer loop over eigenvalue index
699	Look for single small sub-diagonal element
712	Check for convergence One root found
721	Two roots found
732	Real pair
754	Row modification
761	Column modification
768	Accumulate transformations
775	Complex pair
785	No convergence yet
788	Form shift
797	Wilkinson's original ad hoc shift
809	MATLAB's new ad hoc shift
827	(Could check iteration count here.)
829	Look for two consecutive small sub-diagonal elements
859	Double QR step involving rows l:n and columns m:n
892	Row modification
903	Column modification
914	Accumulate transformations
924	(s != 0)
925	k loop
926	check convergence
927	while (n >= low)
929	Backsubstitute to find vectors of upper triangular form
1114	Main loop - along the diagonal
1117	Find next pivot row
1119	Pivot?
1125	Do the calculations...
1128	Calculate multipliers and copy to local column Current column, below the diagonal
1137	Apply transformations to everything below and to the right of the pivot element ApplyLU.invoke(tmpData, tmpRowDim, ij + 1, tmpColDim, tmpMultipliers, ij);
1155	final PrimitiveDenseStore tmpThisCopy = this.copy(); final PrimitiveDenseStore tmpCollCopy = (PrimitiveDenseStore) aTransformationCollector.copy();  tmpThisCopy.computeInPlaceHessenberg(true);
1160	Actual
1168	BasicLogger.logDebug("Schur Step", this); BasicLogger.logDebug("Hessenberg", tmpThisCopy);

Ojalgo/xml/org/ojalgo/matrix/store/RowsStore.xml

Ojalgo/xml/org/ojalgo/matrix/store/SelectingStore.xml

Ojalgo/xml/org/ojalgo/matrix/store/ShadingStore.xml

Ojalgo/xml/org/ojalgo/matrix/store/SingleStore.xml

Ojalgo/xml/org/ojalgo/matrix/store/SuperimposedStore.xml

Ojalgo/xml/org/ojalgo/matrix/store/TransjugatedStore.xml

Ojalgo/xml/org/ojalgo/matrix/store/TransposedStore.xml

Ojalgo/xml/org/ojalgo/matrix/store/UpperHessenbergStore.xml

Ojalgo/xml/org/ojalgo/matrix/store/UpperTriangularStore.xml

Ojalgo/xml/org/ojalgo/matrix/store/WrapperStore.xml

Ojalgo/xml/org/ojalgo/matrix/store/ZeroStore.xml

Ojalgo/xml/org/ojalgo/matrix/transformation/Householder.xml

Ojalgo/xml/org/ojalgo/matrix/transformation/package-info.xml

Ojalgo/xml/org/ojalgo/matrix/transformation/Rotation.xml

Ojalgo/xml/org/ojalgo/netio/ASCII.xml
68	Carriage Return
73	TAB (Horizontal Tab)
74	Left Curly Bracket
75	Line Feed
78	Non Breaking SPace
80	Right Curly Bracket
82	SPace

Ojalgo/xml/org/ojalgo/netio/BasicLogger.xml
141	aStream.println();

Ojalgo/xml/org/ojalgo/netio/Batch.xml

Ojalgo/xml/org/ojalgo/netio/BufferedInputStreamReader.xml

Ojalgo/xml/org/ojalgo/netio/BufferedOutputStreamWriter.xml

Ojalgo/xml/org/ojalgo/netio/DelimitedData.xml

Ojalgo/xml/org/ojalgo/netio/LineTerminator.xml

Ojalgo/xml/org/ojalgo/netio/Message.xml

Ojalgo/xml/org/ojalgo/netio/package-info.xml

Ojalgo/xml/org/ojalgo/netio/Password.xml
61	REMOVE!!! 34 is " 38 is & 39 is ' 47 is / 60 is < 62 is > 92 is \ REMOVE!!!

Ojalgo/xml/org/ojalgo/netio/ProcessInputStream.xml
131	BasicLogger.logDebug("Reading in new characters.");
143	BasicLogger.logDebug("The byte/int is: {}", tmpInt);
148	BasicLogger.logDebug("The number of bytes/chars to read is: {}", tmpByteCount);
155	BasicLogger.logDebug("The byte/char is: {}", tmpChar);
167	BasicLogger.logDebug("String is done: {}", retVal);

Ojalgo/xml/org/ojalgo/netio/ProcessOutputStream.xml

Ojalgo/xml/org/ojalgo/netio/ResourceLocator.xml
47	-1 ==> undefined
125	Remove that last '&'

Ojalgo/xml/org/ojalgo/netio/SystemProcess.xml

Ojalgo/xml/org/ojalgo/OjAlgoUtils.xml

Ojalgo/xml/org/ojalgo/optimisation/AbstractModel.xml

Ojalgo/xml/org/ojalgo/optimisation/BaseSolver.xml
749	options.debug = System.out;
753	TODO Auto-generated method stub

Ojalgo/xml/org/ojalgo/optimisation/Expression.xml
862	This constraint can possibly be reduced to 0 or 1 remaining linear factors
866	The fixed variables are part of this expression
872	This constraint has 0 remaining free variable It is entirely redundant
884	This constraint has 1 remaining free variable The lower/upper limits can be transferred to that variable, and the expression marked as redundant
892	Simple case with equality constraint
906	More general case
964	BasicLogger.logDebug("{} < {} -> {} < {} ( {} < {} )", tmpOldLower, tmpOldUpper, tmpNewLower, tmpNewUpper, tmpLowerSolution, tmpUpperSolution);
978	Didn't change anything: No fixed value
984	Didn't change anything: Already redundant, quadratic or not enough fixed variables

Ojalgo/xml/org/ojalgo/optimisation/ExpressionsBasedModel.xml
99	Define various local variables
106	Create the LinearModel variables
140	Instantiate the LinearModel
424	To avoid multiplication by 1.0
556	final int tmpLength = myExpressions.size();
558	for (int i = 0; !retVal && (i < tmpLength); i++) { retVal |= myExpressions.get(i).hasQuadratic(); }
861	if (options.validate && retVal.getState().isFeasible() && !this.validate(retVal)) { retVal = new Optimisation.Result(Optimisation.State.FAILED, retVal); }
1002	TODO && this.validate(tmpSolution, options.slack)

Ojalgo/xml/org/ojalgo/optimisation/GenericSolver.xml
159	if (this.isDebug()) { this.logDebug("Iterations OK? {} {} < {}", tmpIterationOk, tmpIterations, options.iterations_abort); this.logDebug("Time OK? {} {} < {}", tmpTimeOk, tmpTime, options.time_abort); }

Ojalgo/xml/org/ojalgo/optimisation/integer/IntegerSolver.xml
125	This should not be possible. There is a bug somewhere.
127	IntegerSolver.this.logDebug(myKey.toString()); IntegerSolver.this.logDebug(tmpModel.toString()); final GenericSolver tmpDefaultSolver = tmpModel.getDefaultSolver(); tmpDefaultSolver.solve(); IntegerSolver.this.logDebug(tmpDefaultSolver.toString());
151	BasicLogger.logDebug(); BasicLogger.logDebug(IntegerSolver.this.toString()); BasicLogger.logDebug(DaemonPoolExecutor.INSTANCE.toString());
174	return tmpLowerBranchTask.compute() && tmpUpperBranchTask.compute();
385	options.debug = System.out;
526	BasicLogger.logDebug(); BasicLogger.logDebug("Iterations: {}, Integer solutions: {}", this.countIterations(), this.countIntegerSolutions());
539	BasicLogger.logDebug("MIP relaxed={} integer={} gap={}", nonIntegerValue, tmpBestIntegerValue, tmpMipGap); BasicLogger.logDebug("Daemons existing: {}, active: {}, idle: {} queued submitions: {} queued tasks: {}", DaemonPoolExecutor.INSTANCE.countExistingDaemons(), DaemonPoolExecutor.INSTANCE.countActiveDaemons(), DaemonPoolExecutor.INSTANCE.countIdleDaemons(), DaemonPoolExecutor.INSTANCE.getQueuedSubmissionCount(), DaemonPoolExecutor.INSTANCE.getQueuedTaskCount());
578	BasicLogger.logDebug("Store: " + aResult.toString());

Ojalgo/xml/org/ojalgo/optimisation/integer/NodeKey.xml

Ojalgo/xml/org/ojalgo/optimisation/linear/LinearSolver.xml

Ojalgo/xml/org/ojalgo/optimisation/linear/package-info.xml

Ojalgo/xml/org/ojalgo/optimisation/linear/SimplexTableauSolver.xml
251	TODO Auto-generated method stub
411	Should always be >=0.0, but very small numbers may "accidentally" get a negative sign.
485	Right-most column of the tableau

Ojalgo/xml/org/ojalgo/optimisation/ModelEntity.xml
116	10^exponent
281	BasicLogger.logError(this.toString() + " The lower limit (if it exists) must be smaller than or equal to the upper limit (if it exists)!");
287	BasicLogger.logError(this.toString() + " The contribution weight (if it exists) should not be zero!");
301	BasicLogger.logError(value + " ! " + this.toString());
306	BasicLogger.logError(value + " ! " + this.toString());

Ojalgo/xml/org/ojalgo/optimisation/mps/BoundType.xml

Ojalgo/xml/org/ojalgo/optimisation/mps/ColumnMarker.xml

Ojalgo/xml/org/ojalgo/optimisation/mps/FileSection.xml

Ojalgo/xml/org/ojalgo/optimisation/mps/MathProgSysModel.xml
249	0.0 is the default RHS value
367	readLine is a bit quirky : it returns the content of a line MINUS the newline. it returns null only for the END of the stream. it returns an empty String if two newlines appear in a row.
373	BasicLogger.logDebug("Line: {}.", tmpLine);
376	Skip this line
411	TODO Auto-generated method stub
547	BasicLogger.logDebug("Section: {},\tArgument: {}.", tmpSection, tmpArgument);
571	BasicLogger.logDebug("{}: {}.", aSection, Arrays.toString(myFields));

Ojalgo/xml/org/ojalgo/optimisation/mps/package-info.xml

Ojalgo/xml/org/ojalgo/optimisation/mps/RowType.xml

Ojalgo/xml/org/ojalgo/optimisation/Optimisation.xml
233	Objective Function Value
233	Objective Function Value
233	Objective Function Value
233	Objective Function Value
233	Objective Function Value
233	Objective Function Value

Ojalgo/xml/org/ojalgo/optimisation/OptimisationUtils.xml

Ojalgo/xml/org/ojalgo/optimisation/package-info.xml

Ojalgo/xml/org/ojalgo/optimisation/quadratic/ActiveSetSolver.xml
60	BasicLogger.logDebug("AS solver innequalities: " + this.countInequalityConstraints());
218	BasicLogger.logDebug("A S Iterations: " + this.countIterations());
291	Suggested to do nothing
295	Only suggested to include
302	Only suggested to exclude
307	Suggested both to exclude and include

Ojalgo/xml/org/ojalgo/optimisation/quadratic/LagrangeSolver.xml
183	throw new IllegalArgumentException("Couldn't solve this problem!");
247	Not positive definite. Check if at least positive semidefinite.
264	Q ok, check AE
266	final MatrixStore<Double> tmpAE = this.getAE();  final LU<Double> tmpLU = LUDecomposition.makePrimitive(); tmpLU.compute(tmpAE);  if (tmpLU.getRank() != tmpAE.getRowDim()) { retVal = false; this.setState(State.INVALID); }

Ojalgo/xml/org/ojalgo/optimisation/quadratic/NullspaceSolver.xml
79	Check if feasible solution possible
80	setState(State.INFEASIBLE); return;

Ojalgo/xml/org/ojalgo/optimisation/quadratic/package-info.xml

Ojalgo/xml/org/ojalgo/optimisation/quadratic/QuadraticSolver.xml
111	return new NullspaceSolver(tmpModel, options, this);
165	AE & BE
191	Q & C
234	AI & BI

Ojalgo/xml/org/ojalgo/optimisation/quadratic/SequentailQuadraticSolver.xml
48	TODO Auto-generated method stub
54	TODO Auto-generated method stub
61	TODO Auto-generated method stub
67	TODO Auto-generated method stub

Ojalgo/xml/org/ojalgo/optimisation/quadratic/UnconstrainedSolver.xml
115	Not positive definite. Check if at least positive semidefinite.

Ojalgo/xml/org/ojalgo/optimisation/system/CholeskySolver.xml

Ojalgo/xml/org/ojalgo/optimisation/system/ConjugateGradientSolver.xml
41	Since initial estimate is 0
50	while (false) {
57	}

Ojalgo/xml/org/ojalgo/optimisation/system/DecompositionSolver.xml

Ojalgo/xml/org/ojalgo/optimisation/system/EigenvalueSolver.xml

Ojalgo/xml/org/ojalgo/optimisation/system/LUSolver.xml

Ojalgo/xml/org/ojalgo/optimisation/system/OptimisationSystem.xml

Ojalgo/xml/org/ojalgo/optimisation/system/QRSolver.xml

Ojalgo/xml/org/ojalgo/optimisation/system/SingularValueSolver.xml

Ojalgo/xml/org/ojalgo/optimisation/Variable.xml
253	BasicLogger.logError(value + " ! Integer: " + this.getName());

Ojalgo/xml/org/ojalgo/package-info.xml

Ojalgo/xml/org/ojalgo/ProgrammingError.xml

Ojalgo/xml/org/ojalgo/random/AbstractContinuous.xml

Ojalgo/xml/org/ojalgo/random/AbstractDiscrete.xml

Ojalgo/xml/org/ojalgo/random/Binomial.xml

Ojalgo/xml/org/ojalgo/random/ContinuousDistribution.xml

Ojalgo/xml/org/ojalgo/random/Deterministic.xml

Ojalgo/xml/org/ojalgo/random/DiscreteDistribution.xml

Ojalgo/xml/org/ojalgo/random/Distribution.xml

Ojalgo/xml/org/ojalgo/random/Erlang.xml

Ojalgo/xml/org/ojalgo/random/Exponential.xml
40	lamda

Ojalgo/xml/org/ojalgo/random/Gamma.xml

Ojalgo/xml/org/ojalgo/random/Geometric.xml

Ojalgo/xml/org/ojalgo/random/LogNormal.xml

Ojalgo/xml/org/ojalgo/random/Normal.xml

Ojalgo/xml/org/ojalgo/random/Normal1D.xml

Ojalgo/xml/org/ojalgo/random/package-info.xml

Ojalgo/xml/org/ojalgo/random/Poisson.xml
45	rate or intensity

Ojalgo/xml/org/ojalgo/random/process/AbstractProcess.xml

Ojalgo/xml/org/ojalgo/random/process/GaussianField.xml

Ojalgo/xml/org/ojalgo/random/process/GaussianProcess.xml

Ojalgo/xml/org/ojalgo/random/process/GeometricBrownian1D.xml

Ojalgo/xml/org/ojalgo/random/process/GeometricBrownianMotion.xml

Ojalgo/xml/org/ojalgo/random/process/package-info.xml

Ojalgo/xml/org/ojalgo/random/process/PoissonProcess.xml
42	lambda, intensity

Ojalgo/xml/org/ojalgo/random/process/Process1D.xml

Ojalgo/xml/org/ojalgo/random/process/RandomProcess.xml

Ojalgo/xml/org/ojalgo/random/process/Wiener1D.xml

Ojalgo/xml/org/ojalgo/random/process/WienerProcess.xml

Ojalgo/xml/org/ojalgo/random/Random1D.xml

Ojalgo/xml/org/ojalgo/random/RandomNumber.xml

Ojalgo/xml/org/ojalgo/random/RandomNumber1D.xml

Ojalgo/xml/org/ojalgo/random/RandomUtils.xml

Ojalgo/xml/org/ojalgo/random/SampleSet.xml

Ojalgo/xml/org/ojalgo/random/Uniform.xml

Ojalgo/xml/org/ojalgo/random/Weibull.xml
36	beta
37	lamda

Ojalgo/xml/org/ojalgo/RecoverableCondition.xml

Ojalgo/xml/org/ojalgo/scalar/AbstractScalar.xml

Ojalgo/xml/org/ojalgo/scalar/BigScalar.xml

Ojalgo/xml/org/ojalgo/scalar/ComplexNumber.xml

Ojalgo/xml/org/ojalgo/scalar/package-info.xml

Ojalgo/xml/org/ojalgo/scalar/PrimitiveScalar.xml

Ojalgo/xml/org/ojalgo/scalar/Quaternion.xml

Ojalgo/xml/org/ojalgo/scalar/RationalNumber.xml

Ojalgo/xml/org/ojalgo/scalar/Scalar.xml

Ojalgo/xml/org/ojalgo/series/AbstractSeries.xml

Ojalgo/xml/org/ojalgo/series/BasicSeries.xml

Ojalgo/xml/org/ojalgo/series/CalendarDateSeries.xml
87	BasicLogger.logDebug("First key={}, value={}", ((Calendar) tmpKey).getTime(), tmpPatch);
96	BasicLogger.logDebug("Existing key={}, value={}", ((Calendar) tmpKey).getTime(), tmpVal);
99	BasicLogger.logDebug("Patching key={}, value={}", ((Calendar) tmpKey).getTime(), tmpPatch);

Ojalgo/xml/org/ojalgo/series/CoordinationSet.xml

Ojalgo/xml/org/ojalgo/series/function/package-info.xml

Ojalgo/xml/org/ojalgo/series/function/SeriesExtrapolator.xml

Ojalgo/xml/org/ojalgo/series/function/SeriesForecaster.xml

Ojalgo/xml/org/ojalgo/series/function/SeriesFunction.xml

Ojalgo/xml/org/ojalgo/series/function/SeriesInterpolator.xml

Ojalgo/xml/org/ojalgo/series/NumberSeries.xml

Ojalgo/xml/org/ojalgo/series/package-info.xml

Ojalgo/xml/org/ojalgo/series/primitive/AccessSeries.xml

Ojalgo/xml/org/ojalgo/series/primitive/BinaryFunctionSeries.xml

Ojalgo/xml/org/ojalgo/series/primitive/DataSeries.xml

Ojalgo/xml/org/ojalgo/series/primitive/DifferencesSeries.xml

Ojalgo/xml/org/ojalgo/series/primitive/ExplicitTimeSeries.xml

Ojalgo/xml/org/ojalgo/series/primitive/ImplicitTimeSeries.xml

Ojalgo/xml/org/ojalgo/series/primitive/package-info.xml

Ojalgo/xml/org/ojalgo/series/primitive/PrimitiveSeries.xml

Ojalgo/xml/org/ojalgo/series/primitive/PrimitiveTimeSeries.xml

Ojalgo/xml/org/ojalgo/series/primitive/PrunedSeries.xml

Ojalgo/xml/org/ojalgo/series/primitive/QuotientsSeries.xml

Ojalgo/xml/org/ojalgo/series/primitive/UnaryFunctionSeries.xml

Ojalgo/xml/org/ojalgo/series/SeriesInterpolator.xml

Ojalgo/xml/org/ojalgo/type/Alternator.xml

Ojalgo/xml/org/ojalgo/type/CalendarDate.xml

Ojalgo/xml/org/ojalgo/type/CalendarDateDuration.xml

Ojalgo/xml/org/ojalgo/type/CalendarDateUnit.xml

Ojalgo/xml/org/ojalgo/type/ChartBuilder.xml

Ojalgo/xml/org/ojalgo/type/Colour.xml

Ojalgo/xml/org/ojalgo/type/context/awt/ContextLabel.xml

Ojalgo/xml/org/ojalgo/type/context/awt/ContextTextField.xml

Ojalgo/xml/org/ojalgo/type/context/awt/package-info.xml

Ojalgo/xml/org/ojalgo/type/context/BinaryContext.xml

Ojalgo/xml/org/ojalgo/type/context/BooleanContext.xml

Ojalgo/xml/org/ojalgo/type/context/DateContext.xml
126	No need to do anything

Ojalgo/xml/org/ojalgo/type/context/FormatContext.xml

Ojalgo/xml/org/ojalgo/type/context/GenericContext.xml

Ojalgo/xml/org/ojalgo/type/context/NumberContext.xml

Ojalgo/xml/org/ojalgo/type/context/package-info.xml

Ojalgo/xml/org/ojalgo/type/context/StringContext.xml

Ojalgo/xml/org/ojalgo/type/context/swing/ContextLabel.xml

Ojalgo/xml/org/ojalgo/type/context/swing/ContextTextField.xml

Ojalgo/xml/org/ojalgo/type/context/swing/package-info.xml

Ojalgo/xml/org/ojalgo/type/context/TypeContext.xml

Ojalgo/xml/org/ojalgo/type/format/BinaryFormat.xml

Ojalgo/xml/org/ojalgo/type/format/BooleanFormat.xml

Ojalgo/xml/org/ojalgo/type/format/DatePart.xml

Ojalgo/xml/org/ojalgo/type/format/DateStyle.xml

Ojalgo/xml/org/ojalgo/type/format/NumberStyle.xml

Ojalgo/xml/org/ojalgo/type/format/package-info.xml

Ojalgo/xml/org/ojalgo/type/format/StringFormat.xml

Ojalgo/xml/org/ojalgo/type/format/TransformationFormat.xml

Ojalgo/xml/org/ojalgo/type/IndexSelector.xml

Ojalgo/xml/org/ojalgo/type/IntCount.xml

Ojalgo/xml/org/ojalgo/type/KeyCounter.xml

Ojalgo/xml/org/ojalgo/type/keyvalue/ComparableToDouble.xml

Ojalgo/xml/org/ojalgo/type/keyvalue/ComparableToObject.xml

Ojalgo/xml/org/ojalgo/type/keyvalue/IntToDouble.xml

Ojalgo/xml/org/ojalgo/type/keyvalue/IntToObject.xml

Ojalgo/xml/org/ojalgo/type/keyvalue/KeyValue.xml

Ojalgo/xml/org/ojalgo/type/keyvalue/LongToDouble.xml

Ojalgo/xml/org/ojalgo/type/keyvalue/LongToObject.xml

Ojalgo/xml/org/ojalgo/type/keyvalue/MapEntry.xml

Ojalgo/xml/org/ojalgo/type/keyvalue/MethodToAtomicLong.xml

Ojalgo/xml/org/ojalgo/type/keyvalue/package-info.xml

Ojalgo/xml/org/ojalgo/type/keyvalue/StringToDouble.xml

Ojalgo/xml/org/ojalgo/type/keyvalue/StringToInt.xml

Ojalgo/xml/org/ojalgo/type/keyvalue/StringToObject.xml

Ojalgo/xml/org/ojalgo/type/Operation.xml

Ojalgo/xml/org/ojalgo/type/orm/package-info.xml

Ojalgo/xml/org/ojalgo/type/package-info.xml

Ojalgo/xml/org/ojalgo/type/ScheduleBuilder.xml

Ojalgo/xml/org/ojalgo/type/SQL.xml

Ojalgo/xml/org/ojalgo/type/StandardType.xml

Ojalgo/xml/org/ojalgo/type/TypeCache.xml

Ojalgo/xml/org/ojalgo/type/TypeUtils.xml
44	365.2425 * 24 * 100 = 876582)

