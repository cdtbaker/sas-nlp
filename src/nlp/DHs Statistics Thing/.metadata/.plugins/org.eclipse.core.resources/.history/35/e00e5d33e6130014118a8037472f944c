package sasnlp.nlpstats.runnables;

import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;

import sasnlp.nlpstats.core.CommentGlobalRecord;
import sasnlp.nlpstats.core.CommentType;
import sasnlp.nlpstats.core.FileWalker;

public class ReadParsedXMLComments {
	
	public static void main(String ... args) throws IOException
	{
		System.out.println(readCommentCorpus("/Users/danhowden/2014-sas-nlp/public/XML Parser/Converted Libraries/Commons/main/java/org/apache/commons/math3/test1", CommentType.INLINE));
	}
	
	/**
	 * This method reads in javadoc or inline comments from the XML output
	 * of static analysis of the applications.
	 * 
	 * @param absolutePath The directory from which to parse XML documents. This function
	 * will recurse through all sub-directories, too (which is sensible for reading all packages
	 * in an application). Provide an absolute path.
	 * @param mode Specify whether to parse only javadoc, inline or to parse all comments.
	 * @return A complete string containing all comments within files within the given path.
	 * @throws IOException
	 */
	public static String readCommentCorpus(String absolutePath, CommentType mode) throws IOException
	{
		CommentGlobalRecord.MODE = mode;
		
		// Convert string-path to a usable path.
		Path path = Paths.get(absolutePath);
		
		// Describes what action to take when we encounter a file.
		FileWalker fileWalker = new FileWalker();
		Files.walkFileTree(path, fileWalker);
		
		// Returns the compiled list of comments encountered during the file walking.
		return CommentGlobalRecord.generate();
	}
}