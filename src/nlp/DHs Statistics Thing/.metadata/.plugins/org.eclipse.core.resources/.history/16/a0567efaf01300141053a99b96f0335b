package sasnlp.nlpstats.core;

import static java.nio.file.FileVisitResult.CONTINUE;

import java.io.File;
import java.io.IOException;
import java.nio.file.FileVisitResult;
import java.nio.file.Path;
import java.nio.file.SimpleFileVisitor;
import java.nio.file.attribute.BasicFileAttributes;

import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;

import org.w3c.dom.Document;

public class FileWalker extends SimpleFileVisitor<Path> {

	private static Document readTextFile(String path) throws Exception {
		DocumentBuilderFactory docBuilderFactory = DocumentBuilderFactory.newInstance();
        DocumentBuilder docBuilder = docBuilderFactory.newDocumentBuilder();
        Document doc = docBuilder.parse (new File(path));
		return doc;
	}
	
    @Override
    public FileVisitResult visitFile(Path file, BasicFileAttributes attr) {
    	
    	// TODO add defensive stuff in case this isn't an XML file, though it would be caught
    	// in the exception that is present.
        if (attr.isRegularFile()) 
        {
            Document d = null;
			try 
			{
				d = readTextFile(file.toAbsolutePath().toString());
			} catch (Exception e) 
			{
				System.err.println("File: " + file + " could not be processed, it may not be an XML file.");
			}
            CommentGlobalRecord.appendClassComments(d);
        }
        return CONTINUE;
    }

    @Override
    public FileVisitResult postVisitDirectory(Path dir, IOException exc) {
    	
        return CONTINUE;
    }

    @Override
    public FileVisitResult visitFileFailed(Path file, IOException exc) {
        return CONTINUE;
    }
}